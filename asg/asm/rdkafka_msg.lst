                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_msg.obj ../asg/asm/rdkafka_msg.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_msg.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_MSG
          SD 00000002 00000000 0000E868            07  @CODE
rd_jitter ER 00000003                                  RD_JITTER
rd_unittest_assert_on_failure
          XD 00000004 00000003 00000000                RD_UNITTEST_ASSERT_ON_FAILURE
malloc    ER 00000005                                  MALLOC
fprintf   ER 00000006                                  FPRINTF
rd_unittest_slow
          XD 00000007 00000003 00000000                RD_UNITTEST_SLOW
rd_kafka_op_destroy
          ER 00000008                                  RD_KAFKA_OP_DESTROY
@@PT3ML   ER 00000009                                  PTHREAD_MUTEX_LOCK
rd_kafka_topic_partition_available
          ER 0000000A                                  RD_KAFKA_TOPIC_PARTITION_AVAILABLE
rd_kafka_toppar_destroy_final
          ER 0000000B                                  RD_KAFKA_TOPPAR_DESTROY_FINAL
@@PT3MU   ER 0000000C                                  PTHREAD_MUTEX_UNLOCK
crc_table XD 0000000D 00000003 00000000                CRC_TABLE
printf    ER 0000000E                                  PRINTF
rd_kafka_err2str
          ER 0000000F                                  RD_KAFKA_ERR2STR
rd_kafka_toppar_enq_msg
          ER 00000010                                  RD_KAFKA_TOPPAR_ENQ_MSG
rd_kafka_retry_msgq
          ER 00000011                                  RD_KAFKA_RETRY_MSGQ
rd_kafka_interceptors_on_send
          ER 00000012                                  RD_KAFKA_INTERCEPTORS_ON_SEND
rd_kafka_msgq_insert_msgq
          ER 00000013                                  RD_KAFKA_MSGQ_INSERT_MSGQ
rd_kafka_interceptors_on_acknowledgement
          ER 00000014                                  RD_KAFKA_INTERCEPTORS_ON_ACKNOWLEDGEMENT
rd_slice_read_uvarint
          ER 00000015                                  RD_SLICE_READ_UVARINT
rd_kafka_interceptors_on_consume
          ER 00000016                                  RD_KAFKA_INTERCEPTORS_ON_CONSUME
rd_kafka_toppar_get0
          ER 00000017                                  RD_KAFKA_TOPPAR_GET0
rd_kafka_toppar_get_avail
          ER 00000018                                  RD_KAFKA_TOPPAR_GET_AVAIL
snprintf  ER 00000019                                  SNPRINTF
rd_slice_ensure_contig
          ER 0000001A                                  RD_SLICE_ENSURE_CONTIG
rd_kafka_error_new
          ER 0000001B                                  RD_KAFKA_ERROR_NEW
##ERROR   ER 0000001C                                  __ERROR
rd_kafka_headers_new
          ER 0000001D                                  RD_KAFKA_HEADERS_NEW
@@ASSERT  ER 0000001E                                  __ASSERT
rd_kafka_headers_destroy
          ER 0000001F                                  RD_KAFKA_HEADERS_DESTROY
rd_kafka_idemp_inflight_toppar_add
          ER 00000020                                  RD_KAFKA_IDEMP_INFLIGHT_TOPPAR_ADD
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
rd_kafka_header_add
          ER 00000021                                  RD_KAFKA_HEADER_ADD
mtx_lock  ER 00000022                                  MTX_LOCK
GETTFD@Y  ER 00000023                                  GETTIMEOFDAY
mtx_unlock
          ER 00000024                                  MTX_UNLOCK
cnd_broadcast
          ER 00000025                                  CND_BROADCAST
cnd_wait  ER 00000026                                  CND_WAIT
rd_kafka_lwtopic_destroy
          ER 00000027                                  RD_KAFKA_LWTOPIC_DESTROY
rd_kafka_txn_schedule_register_partitions
          ER 00000028                                  RD_KAFKA_TXN_SCHEDULE_REGISTER_PARTITIONS
rd_kafka_buf_destroy_final
          ER 00000029                                  RD_KAFKA_BUF_DESTROY_FINAL
rd_kafka_topic_destroy_final
          ER 0000002A                                  RD_KAFKA_TOPIC_DESTROY_FINAL
rd_kafka_topic_proper
          ER 0000002B                                  RD_KAFKA_TOPIC_PROPER
rd_kafka_buf_new_shadow
          ER 0000002C                                  RD_KAFKA_BUF_NEW_SHADOW
rd_kafka_topic_new0
          ER 0000002D                                  RD_KAFKA_TOPIC_NEW0
rd_kafka_crash
          ER 0000002E                                  RD_KAFKA_CRASH
rwlock_rdlock
          ER 0000002F                                  RWLOCK_RDLOCK
rwlock_rdunlock
          ER 00000030                                  RWLOCK_RDUNLOCK
rd_kafka_error_new_fatal
          ER 00000031                                  RD_KAFKA_ERROR_NEW_FATAL
@@STDERP  XD 00000032 00000003 00000000                __STDERRP
calloc    ER 00000033                                  CALLOC
rd_fnv1a  ER 00000034                                  RD_FNV1A
free      ER 00000035                                  FREE
rd_kafka_log0
          ER 00000036                                  RD_KAFKA_LOG0
rd_murmur2
          ER 00000037                                  RD_MURMUR2
rd_kafka_last_error_code
          XD 00000038 00000003 00000000                RD_KAFKA_LAST_ERROR_CODE
@rdkafka_msg&
          XD 00000039 00000007 000006D8                @@STATIC
@rdkafka_msg
          SD 0000003A 0000E868 00001848            07  @DATA
rd_kafka_last_error_code
          ER 0000003B                                  @ERD_KAFKA_LAST_ERROR_CODE
@@STDERP  ER 0000003C                                  @E__STDERRP
crc_table ER 0000003D                                  @ECRC_TABLE
rd_unittest_slow
          ER 0000003E                                  @ERD_UNITTEST_SLOW
rd_unittest_assert_on_failure
          ER 0000003F                                  @ERD_UNITTEST_ASSERT_ON_FAILURE
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
rdkafka_msg:
          SD 00000040 000100B0 00001040            07  @@INIT@
rd_kafka_message_errstr
          LD          00003700          00000002   00  RD_KAFKA_MESSAGE_ERRSTR
rd_kafka_msg_destroy
          LD          00003AE0          00000002   00  RD_KAFKA_MSG_DESTROY
rd_kafka_msg_new
          LD          000042E8          00000002   00  RD_KAFKA_MSG_NEW
rd_kafka_produceva
          LD          00004610          00000002   00  RD_KAFKA_PRODUCEVA
rd_kafka_producev
          LD          00004DD8          00000002   00  RD_KAFKA_PRODUCEV
rd_kafka_produce
          LD          000053B0          00000002   00  RD_KAFKA_PRODUCE
rd_kafka_produce_batch
          LD          00005520          00000002   00  RD_KAFKA_PRODUCE_BATCH
rd_kafka_msgq_age_scan
          LD          00005BA8          00000002   00  RD_KAFKA_MSGQ_AGE_SCAN
rd_kafka_msgq_enq_sorted0
          LD          00005D78          00000002   00  RD_KAFKA_MSGQ_ENQ_SORTED0
rd_kafka_msgq_enq_sorted
          LD          00005FA8          00000002   00  RD_KAFKA_MSGQ_ENQ_SORTED
rd_kafka_msgq_find_pos
          LD          000060E0          00000002   00  RD_KAFKA_MSGQ_FIND_POS
rd_kafka_msgq_split
          LD          00006290          00000002   00  RD_KAFKA_MSGQ_SPLIT
rd_kafka_msgq_set_metadata
          LD          00006480          00000002   00  RD_KAFKA_MSGQ_SET_METADATA
rd_kafka_msgq_move_acked
          LD          00006578          00000002   00  RD_KAFKA_MSGQ_MOVE_ACKED
rd_kafka_msg_partitioner_random
          LD          00006718          00000002   00  RD_KAFKA_MSG_PARTITIONER_RANDOM
rd_kafka_msg_partitioner_consistent
          LD          000068B0          00000002   00  RD_KAFKA_MSG_PARTITIONER_CONSISTENT
rd_kafka_msg_partitioner_consistent_random
          LD          000069F8          00000002   00  RD_KAFKA_MSG_PARTITIONER_CONSISTENT_RANDOM
rd_kafka_msg_partitioner_murmur2
          LD          00006BC0          00000002   00  RD_KAFKA_MSG_PARTITIONER_MURMUR2
rd_kafka_msg_partitioner_murmur2_random
          LD          00006D10          00000002   00  RD_KAFKA_MSG_PARTITIONER_MURMUR2_RANDOM
rd_kafka_msg_partitioner_fnv1a
          LD          00006EB8          00000002   00  RD_KAFKA_MSG_PARTITIONER_FNV1A
rd_kafka_msg_partitioner_fnv1a_random
          LD          00007000          00000002   00  RD_KAFKA_MSG_PARTITIONER_FNV1A_RANDOM
rd_kafka_msg_sticky_partition
          LD          000071A8          00000002   00  RD_KAFKA_MSG_STICKY_PARTITION
rd_kafka_msg_partitioner
          LD          00007430          00000002   00  RD_KAFKA_MSG_PARTITIONER
rd_kafka_message_destroy
          LD          00007910          00000002   00  RD_KAFKA_MESSAGE_DESTROY
rd_kafka_message_new
          LD          00007A70          00000002   00  RD_KAFKA_MESSAGE_NEW
rd_kafka_message_get_from_rkm
                                              External Symbol Dictionary                                                   Page    6 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
          LD          00007D80          00000002   00  RD_KAFKA_MESSAGE_GET_FROM_RKM
rd_kafka_message_get
          LD          00007EA8          00000002   00  RD_KAFKA_MESSAGE_GET
rd_kafka_message_timestamp
          LD          00008140          00000002   00  RD_KAFKA_MESSAGE_TIMESTAMP
rd_kafka_message_latency
          LD          00008298          00000002   00  RD_KAFKA_MESSAGE_LATENCY
rd_kafka_message_broker_id
          LD          000083E0          00000002   00  RD_KAFKA_MESSAGE_BROKER_ID
rd_kafka_message_headers
          LD          00009668          00000002   00  RD_KAFKA_MESSAGE_HEADERS
rd_kafka_message_detach_headers
          LD          00009828          00000002   00  RD_KAFKA_MESSAGE_DETACH_HEADERS
rd_kafka_message_set_headers
          LD          00009990          00000002   00  RD_KAFKA_MESSAGE_SET_HEADERS
rd_kafka_message_status
          LD          00009B50          00000002   00  RD_KAFKA_MESSAGE_STATUS
rd_kafka_msgq_dump
          LD          00009C68          00000002   00  RD_KAFKA_MSGQ_DUMP
rd_kafka_msgbatch_destroy
          LD          00009EC8          00000002   00  RD_KAFKA_MSGBATCH_DESTROY
rd_kafka_msgbatch_init
          LD          0000A080          00000002   00  RD_KAFKA_MSGBATCH_INIT
rd_kafka_msgbatch_set_first_msg
          LD          0000A208          00000002   00  RD_KAFKA_MSGBATCH_SET_FIRST_MSG
rd_kafka_msgbatch_ready_produce
          LD          0000A3B8          00000002   00  RD_KAFKA_MSGBATCH_READY_PRODUCE
rd_kafka_msgq_verify_order0
          LD          0000A558          00000002   00  RD_KAFKA_MSGQ_VERIFY_ORDER0
ut_rd_kafka_msg_new
          LD          0000A8E0          00000002   00  UT_RD_KAFKA_MSG_NEW
ut_rd_kafka_msgq_purge
          LD          0000AA90          00000002   00  UT_RD_KAFKA_MSGQ_PURGE
unittest_msg
          LD          0000E2D0          00000002   00  UNITTEST_MSG
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:45 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD4E2C7'
00000000                00000000 0000E868     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D94A287'
                                              18 rd_jitter ALIAS X'99846D9189A3A38599'
                                              19          EXTRN rd_jitter
                                              20 rd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A2859*
                                                                9A36D96956D86818993A49985'
                                              21 rd_unittest_assert_on_failure DXD   0F
                                              22 malloc   ALIAS C'malloc'
                                              23          EXTRN malloc
                                              24 fprintf  ALIAS C'fprintf'
                                              25          EXTRN fprintf
                                              26 rd_unittest_slow ALIAS X'99846DA49589A3A385A2A36DA29396A6'
                                              27 rd_unittest_slow DXD   0F
                                              28 rd_kafka_op_destroy ALIAS X'99846D92818692816D96976D8485A2A39996A8'
                                              29          EXTRN rd_kafka_op_destroy
                                              30 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              31          EXTRN pthread_mutex_lock
                                              32 rd_kafka_topic_partition_available ALIAS X'99846D92818692816DA396978983*
                                                                6D978199A389A38996956D81A581899381829385'
                                              33          EXTRN rd_kafka_topic_partition_available
                                              34 rd_kafka_toppar_destroy_final ALIAS X'99846D92818692816DA396979781996D8*
                                                                485A2A39996A86D8689958193'
                                              35          EXTRN rd_kafka_toppar_destroy_final
                                              36 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              37          EXTRN pthread_mutex_unlock
                                              38 crc_table ALIAS X'8399836DA381829385'
                                              39 crc_table DXD   0F
                                              40 printf   ALIAS C'printf'
                                              41          EXTRN printf
                                              42 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              43          EXTRN rd_kafka_err2str
                                              44 rd_kafka_toppar_enq_msg ALIAS X'99846D92818692816DA396979781996D8595986*
                                                                D94A287'
                                              45          EXTRN rd_kafka_toppar_enq_msg
                                              46 rd_kafka_retry_msgq ALIAS X'99846D92818692816D9985A399A86D94A28798'
                                              47          EXTRN rd_kafka_retry_msgq
                                              48 rd_kafka_interceptors_on_send ALIAS X'99846D92818692816D8995A3859983859*
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                7A39699A26D96956DA2859584'
                                              49          EXTRN rd_kafka_interceptors_on_send
                                              50 rd_kafka_msgq_insert_msgq ALIAS X'99846D92818692816D94A287986D8995A2859*
                                                                9A36D94A28798'
                                              51          EXTRN rd_kafka_msgq_insert_msgq
                                              52 rd_kafka_interceptors_on_acknowledgement ALIAS X'99846D92818692816D8995*
                                                                A38599838597A39699A26D96956D8183929596A69385848785948595*
                                                                A3'
                                              53          EXTRN rd_kafka_interceptors_on_acknowledgement
                                              54 rd_slice_read_uvarint ALIAS X'99846DA2938983856D998581846DA4A581998995A*
                                                                3'
                                              55          EXTRN rd_slice_read_uvarint
                                              56 rd_kafka_interceptors_on_consume ALIAS X'99846D92818692816D8995A3859983*
                                                                8597A39699A26D96956D839695A2A49485'
                                              57          EXTRN rd_kafka_interceptors_on_consume
                                              58 rd_kafka_toppar_get0 ALIAS X'99846D92818692816DA396979781996D8785A3F0'
                                              59          EXTRN rd_kafka_toppar_get0
                                              60 rd_kafka_toppar_get_avail ALIAS X'99846D92818692816DA396979781996D8785A*
                                                                36D81A5818993'
                                              61          EXTRN rd_kafka_toppar_get_avail
                                              62 snprintf ALIAS C'snprintf'
                                              63          EXTRN snprintf
                                              64 rd_slice_ensure_contig ALIAS X'99846DA2938983856D8595A2A499856D839695A3*
                                                                8987'
                                              65          EXTRN rd_slice_ensure_contig
                                              66 rd_kafka_error_new ALIAS X'99846D92818692816D85999996996D9585A6'
                                              67          EXTRN rd_kafka_error_new
                                              68 __error  ALIAS C'##ERROR'
                                              69          EXTRN __error
                                              70 rd_kafka_headers_new ALIAS X'99846D92818692816D888581848599A26D9585A6'
                                              71          EXTRN rd_kafka_headers_new
                                              72 __assert ALIAS C'@@ASSERT'
                                              73          EXTRN __assert
                                              74 rd_kafka_headers_destroy ALIAS X'99846D92818692816D888581848599A26D8485*
                                                                A2A39996A8'
                                              75          EXTRN rd_kafka_headers_destroy
                                              76 rd_kafka_idemp_inflight_toppar_add ALIAS X'99846D92818692816D8984859497*
                                                                6D89958693898788A36DA396979781996D818484'
                                              77          EXTRN rd_kafka_idemp_inflight_toppar_add
                                              78 rd_kafka_header_add ALIAS X'99846D92818692816D8885818485996D818484'
                                              79          EXTRN rd_kafka_header_add
                                              80 mtx_lock ALIAS X'94A3A76D93968392'
                                              81          EXTRN mtx_lock
                                              82 gettimeofday ALIAS C'GETTFD@Y'
                                              83          EXTRN gettimeofday
                                              84 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              85          EXTRN mtx_unlock
                                              86 cnd_broadcast ALIAS X'8395846D82999681848381A2A3'
                                              87          EXTRN cnd_broadcast
                                              88 cnd_wait ALIAS X'8395846DA68189A3'
                                              89          EXTRN cnd_wait
                                              90 rd_kafka_lwtopic_destroy ALIAS X'99846D92818692816D93A6A3969789836D8485*
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                A2A39996A8'
                                              91          EXTRN rd_kafka_lwtopic_destroy
                                              92 rd_kafka_txn_schedule_register_partitions ALIAS X'99846D92818692816DA3A*
                                                                7956DA283888584A493856D99858789A2A385996D978199A389A3899*
                                                                695A2'
                                              93          EXTRN rd_kafka_txn_schedule_register_partitions
                                              94 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                              95          EXTRN rd_kafka_buf_destroy_final
                                              96 rd_kafka_topic_destroy_final ALIAS X'99846D92818692816DA3969789836D8485*
                                                                A2A39996A86D8689958193'
                                              97          EXTRN rd_kafka_topic_destroy_final
                                              98 rd_kafka_topic_proper ALIAS X'99846D92818692816DA3969789836D97999697859*
                                                                9'
                                              99          EXTRN rd_kafka_topic_proper
                                             100 rd_kafka_buf_new_shadow ALIAS X'99846D92818692816D82A4866D9585A66DA2888*
                                                                18496A6'
                                             101          EXTRN rd_kafka_buf_new_shadow
                                             102 rd_kafka_topic_new0 ALIAS X'99846D92818692816DA3969789836D9585A6F0'
                                             103          EXTRN rd_kafka_topic_new0
                                             104 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                             105          EXTRN rd_kafka_crash
                                             106 rwlock_rdlock ALIAS X'99A6939683926D998493968392'
                                             107          EXTRN rwlock_rdlock
                                             108 rwlock_rdunlock ALIAS X'99A6939683926D9984A49593968392'
                                             109          EXTRN rwlock_rdunlock
                                             110 rd_kafka_error_new_fatal ALIAS X'99846D92818692816D85999996996D9585A66D*
                                                                8681A38193'
                                             111          EXTRN rd_kafka_error_new_fatal
                                             112 __stderrp ALIAS C'@@STDERP'
                                             113 __stderrp DXD   0F
                                             114 calloc   ALIAS C'calloc'
                                             115          EXTRN calloc
                                             116 rd_fnv1a ALIAS X'99846D8695A5F181'
                                             117          EXTRN rd_fnv1a
                                             118 free     ALIAS C'free'
                                             119          EXTRN free
                                             120 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                             121          EXTRN rd_kafka_log0
                                             122 rd_murmur2 ALIAS X'99846D94A49994A499F2'
                                             123          EXTRN rd_murmur2
                                             124 rd_kafka_last_error_code ALIAS X'99846D92818692816D9381A2A36D8599999699*
                                                                6D83968485'
                                             125 rd_kafka_last_error_code DXD   0F
                                             126 *
                                             127 *
                                             128 *
                                             129 * ....... start of rd_atomic32_add
00000000                                     130 @LNAME733 DS   0H
00000000 0000000F                            131          DC    X'0000000F'
00000004 99846D81A3969489                    132          DC    C'rd_atomic32_add'
00000013 00                                  133          DC    X'00'
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             134 rd_atomic32_add DCCPRLG CINDEX=733,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME733
                                             135          macro
                                             136          dccextrn &m
                                             137          gblc    &$dccext(1000)
                                             138          gbla    &$dccexti
                                             139          lcla    &i
                                             140 &$dccext(&$dccexti+1) setc    '&m'
                                             141 &i       seta    1
                                             142 .loop    aif    (&i gt &$dccexti).around
                                             143          aif    ('&$dccext(&i)' eq '&m').getout
                                             144 &i       seta    &i+1
                                             145          ago     .loop
                                             146 .around  anop
                                             147 &$dccexti seta &$dccexti+1
                                             148          extrn  &m
                                             149 .getout  anop
                                             150          mend
00000018                                     151+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              152+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  153+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            154+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    155+         dc ad(@PER_733)                                                02-DCCCA
00000028 00000000000000B8                    156+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                    157+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    158+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  159+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  160+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  161+         dc al1(3)                                                      02-DCCCA
00000043 08                                  162+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  163+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              164+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    165+         dc ad(@LNAME733)                                               02-DCCCA
00000050                                     166+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    167+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    168+         dc ad(0)                                                       02-DCCCA
00000060                                     169+         ds    0d                                                       01-DCCPR
00000060                                     170+rd_atomic32_add ds 0d                                                   01-DCCPR
00000060                                     171+@REGION_733_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008    172+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    173+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    174+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           175+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    176+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    177+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    178+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    179+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     180+@PER_733 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    181+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    182+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           183+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           184+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   11 
  Active Usings: @REGION_733_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00000060             185+         using @REGION_733_1,12                                         01-DCCPR
0000009E B904 0031                           186          LGR   3,1         ; ptr to parm area
                                             187 * ******* End of Prologue
                                             188 * *
000000A2 E320 3000 0004          00000000    189          LG    2,0(0,3)    ; ra
                                             190 * ***
                                             191 * ***      int32_t r;
                                             192 * ***      pthread_mutex_lock(&ra->lock);
000000A8 41F0 2008               00000008    193          LA    15,8(0,2)
000000AC E3F0 D0B0 0024          000000B0    194          STG   15,176(0,13)
000000B2 4110 D0B0               000000B0    195          LA    1,176(0,13)
000000B6 E3F0 C0D8 0004          00000138    196          LG    15,@lit_733_0 ; pthread_mutex_lock
000000BC                                     197 @@gen_label0 DS    0H
000000BC 05EF                                198          BALR  14,15
000000BE                                     199 @@gen_label1 DS    0H
                                             200 * ***      ra->val += v;
000000BE 58F0 2000               00000000    201          L     15,0(0,2)
000000C2 5AF0 300C               0000000C    202          A     15,12(0,3)
000000C6 50F0 2000               00000000    203          ST    15,0(0,2)
                                             204 * ***      r = ra->val;
000000CA 183F                                205          LR    3,15        ; ra
                                             206 * ***      pthread_mutex_unlock(&ra->lock);
000000CC 41F0 2008               00000008    207          LA    15,8(0,2)
000000D0 E3F0 D0B0 0024          000000B0    208          STG   15,176(0,13)
000000D6 4110 D0B0               000000B0    209          LA    1,176(0,13)
000000DA E3F0 C0E0 0004          00000140    210          LG    15,@lit_733_1 ; pthread_mutex_unlock
000000E0                                     211 @@gen_label2 DS    0H
000000E0 05EF                                212          BALR  14,15
000000E2                                     213 @@gen_label3 DS    0H
                                             214 * ***      return r;
000000E2 B914 00F3                           215          LGFR  15,3
                                             216 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             217 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             218 * ***
                                             219 * ***   }
                                             220 * * **** Start of Epilogue
                                             221          DCCEPIL
000000E6                                     222+         ds 0h                                                          01-DCCEP
                                             223+* Epilog
000000E6 D707 D088 D088 00000088 00000088    224+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000EC E3D0 D080 0004          00000080    225+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000F2 E3C0 D090 0004          00000090    226+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000F8 E3B0 C018 0004          00000018    227+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000FE E3C0 B010 0021          00000010    228+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000104 E3E0 D008 0004          00000008    229+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000010A EB1C D020 0004          00000020    230+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000110 078E                                231+         bcr 8,14                if same dsab, just return              01-DCCEP
00000112 E3F0 D010 0024          00000010    232+         stg 15,16(0,13)         save return code                       01-DCCEP
00000118 E300 D018 0024          00000018    233+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000011E E3F0 D090 0004          00000090    234+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000124 E3F0 F018 0004          00000018    235+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000012A 47F0 F040               00000040    236+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   12 
  Active Usings: @REGION_733_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             237+* End of Epilog
                                             238 * * **** End of Epilogue
00000130                                     239          DS    0D
00000130 000000B8                            240 @FRAMESIZE_733 DC F'184'
00000134 00000000
00000138 0000000000000000                    241 @lit_733_0 DC  AD(pthread_mutex_lock)
00000140 0000000000000000                    242 @lit_733_1 DC  AD(pthread_mutex_unlock)
                                             243          DROP  12
                                             244 *
                                             245 *   DSECT for automatic variables in "rd_atomic32_add"
                                             246 *      (FUNCTION #733)
                                             247 *
00000000                00000000 000000AC    248 @AUTO#rd_atomic32_add DSECT
00000000                                     249          DS    XL168
000000A8                                     250 rd_atomic32_add#r#0 DS 1F  ; r
                                             251 *
00000148                00000000 0000E868    252 @CODE    CSECT
                                             253 *
                                             254 *
                                             255 *
                                             256 * ....... start of rd_atomic32_sub
00000148                                     257 @LNAME734 DS   0H
00000148 0000000F                            258          DC    X'0000000F'
0000014C 99846D81A3969489                    259          DC    C'rd_atomic32_sub'
0000015B 00                                  260          DC    X'00'
                                             261 rd_atomic32_sub DCCPRLG CINDEX=734,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME734
                                             262          macro
                                             263          dccextrn &m
                                             264          gblc    &$dccext(1000)
                                             265          gbla    &$dccexti
                                             266          lcla    &i
                                             267 &$dccext(&$dccexti+1) setc    '&m'
                                             268 &i       seta    1
                                             269 .loop    aif    (&i gt &$dccexti).around
                                             270          aif    ('&$dccext(&i)' eq '&m').getout
                                             271 &i       seta    &i+1
                                             272          ago     .loop
                                             273 .around  anop
                                             274 &$dccexti seta &$dccexti+1
                                             275          extrn  &m
                                             276 .getout  anop
                                             277          mend
00000160                                     278+$eye0005    ds    0d                                                    02-DCCCA
00000160 C4C3C3                              279+         dc cl3'DCC'                                                    02-DCCCA
00000163 01                                  280+         dc xl1'01' format one                                          02-DCCCA
00000164 00000000                            281+         dc a(0)                                                        02-DCCCA
00000168 00000000000001D2                    282+         dc ad(@PER_734)                                                02-DCCCA
00000170 00000000000000B8                    283+         dc ad(184)                                                     02-DCCCA
00000178 0000000000000000                    284+         dc ad(0)                                                       02-DCCCA
00000180 0000000000001000                    285+         dc ad(4096)                                                    02-DCCCA
00000188 20                                  286+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000189 03                                  287+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000018A 03                                  288+         dc al1(3)                                                      02-DCCCA
0000018B 08                                  289+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000018C 00                                  290+         dc bl.8'00000000'                                              02-DCCCA
0000018D 000000                              291+         dc al3(0)                                                      02-DCCCA
00000190 0000000000000148                    292+         dc ad(@LNAME734)                                               02-DCCCA
00000198                                     293+         ds 0d                                                          02-DCCCA
00000198 0000000000000160                    294+         dc ad($eye0005)                                                02-DCCCA
000001A0 0000000000000000                    295+         dc ad(0)                                                       02-DCCCA
000001A8                                     296+         ds    0d                                                       01-DCCPR
000001A8                                     297+rd_atomic32_sub ds 0d                                                   01-DCCPR
000001A8                                     298+@REGION_734_1 ds 0h                                                     01-DCCPR
000001A8 EBEC D008 0024          00000008    299+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001AE E3E0 D088 0004          00000088    300+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001B4 E3C0 D090 0004          00000090    301+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001BA B904 002E                           302+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001BE E3B0 C018 0004          00000018    303+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001C4 A7EB 00B8               000000B8    304+         aghi  14,184              increase by frame size               01-DCCPR
000001C8 E3E0 C020 0021          00000020    305+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001CE 4720 B020               00000020    306+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001D2                                     307+@PER_734 ds    0h                                                       01-DCCPR
000001D2 EBDE 2080 0024          00000080    308+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001D8 E3C0 2090 0024          00000090    309+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001DE B904 00D2                           310+         lgr   13,2                set real frame pointer               01-DCCPR
000001E2 B904 00CF                           311+         lgr   12,15               set base reg                         01-DCCPR
                        000001A8             312+         using @REGION_734_1,12                                         01-DCCPR
000001E6 B904 0031                           313          LGR   3,1         ; ptr to parm area
                                             314 * ******* End of Prologue
                                             315 * *
000001EA E320 3000 0004          00000000    316          LG    2,0(0,3)    ; ra
                                             317 * ***
                                             318 * ***      int32_t r;
                                             319 * ***      pthread_mutex_lock(&ra->lock);
000001F0 41F0 2008               00000008    320          LA    15,8(0,2)
000001F4 E3F0 D0B0 0024          000000B0    321          STG   15,176(0,13)
000001FA 4110 D0B0               000000B0    322          LA    1,176(0,13)
000001FE E3F0 C0D8 0004          00000280    323          LG    15,@lit_734_3 ; pthread_mutex_lock
00000204                                     324 @@gen_label4 DS    0H
00000204 05EF                                325          BALR  14,15
00000206                                     326 @@gen_label5 DS    0H
                                             327 * ***      ra->val -= v;
00000206 58F0 2000               00000000    328          L     15,0(0,2)
0000020A 5BF0 300C               0000000C    329          S     15,12(0,3)
0000020E 50F0 2000               00000000    330          ST    15,0(0,2)
                                             331 * ***      r = ra->val;
00000212 183F                                332          LR    3,15        ; ra
                                             333 * ***      pthread_mutex_unlock(&ra->lock);
00000214 41F0 2008               00000008    334          LA    15,8(0,2)
00000218 E3F0 D0B0 0024          000000B0    335          STG   15,176(0,13)
0000021E 4110 D0B0               000000B0    336          LA    1,176(0,13)
00000222 E3F0 C0E0 0004          00000288    337          LG    15,@lit_734_4 ; pthread_mutex_unlock
00000228                                     338 @@gen_label6 DS    0H
                                                                                                                           Page   14 
  Active Usings: @REGION_734_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000228 05EF                                339          BALR  14,15
0000022A                                     340 @@gen_label7 DS    0H
                                             341 * ***      return r;
0000022A B914 00F3                           342          LGFR  15,3
                                             343 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             344 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             345 * ***
                                             346 * ***   }
                                             347 * * **** Start of Epilogue
                                             348          DCCEPIL
0000022E                                     349+         ds 0h                                                          01-DCCEP
                                             350+* Epilog
0000022E D707 D088 D088 00000088 00000088    351+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000234 E3D0 D080 0004          00000080    352+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000023A E3C0 D090 0004          00000090    353+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000240 E3B0 C018 0004          00000018    354+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000246 E3C0 B010 0021          00000010    355+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000024C E3E0 D008 0004          00000008    356+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000252 EB1C D020 0004          00000020    357+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000258 078E                                358+         bcr 8,14                if same dsab, just return              01-DCCEP
0000025A E3F0 D010 0024          00000010    359+         stg 15,16(0,13)         save return code                       01-DCCEP
00000260 E300 D018 0024          00000018    360+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000266 E3F0 D090 0004          00000090    361+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000026C E3F0 F018 0004          00000018    362+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000272 47F0 F040               00000040    363+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             364+* End of Epilog
                                             365 * * **** End of Epilogue
00000278                                     366          DS    0D
00000278 000000B8                            367 @FRAMESIZE_734 DC F'184'
0000027C 00000000
00000280 0000000000000000                    368 @lit_734_3 DC  AD(pthread_mutex_lock)
00000288 0000000000000000                    369 @lit_734_4 DC  AD(pthread_mutex_unlock)
                                             370          DROP  12
                                             371 *
                                             372 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             373 *      (FUNCTION #734)
                                             374 *
00000000                00000000 000000AC    375 @AUTO#rd_atomic32_sub DSECT
00000000                                     376          DS    XL168
000000A8                                     377 rd_atomic32_sub#r#0 DS 1F  ; r
                                             378 *
00000290                00000000 0000E868    379 @CODE    CSECT
                                             380 *
                                             381 *
                                             382 *
                                             383 * ....... start of rd_atomic32_get
00000290                                     384 @LNAME735 DS   0H
00000290 0000000F                            385          DC    X'0000000F'
00000294 99846D81A3969489                    386          DC    C'rd_atomic32_get'
000002A3 00                                  387          DC    X'00'
                                             388 rd_atomic32_get DCCPRLG CINDEX=735,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME735
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             389          macro
                                             390          dccextrn &m
                                             391          gblc    &$dccext(1000)
                                             392          gbla    &$dccexti
                                             393          lcla    &i
                                             394 &$dccext(&$dccexti+1) setc    '&m'
                                             395 &i       seta    1
                                             396 .loop    aif    (&i gt &$dccexti).around
                                             397          aif    ('&$dccext(&i)' eq '&m').getout
                                             398 &i       seta    &i+1
                                             399          ago     .loop
                                             400 .around  anop
                                             401 &$dccexti seta &$dccexti+1
                                             402          extrn  &m
                                             403 .getout  anop
                                             404          mend
000002A8                                     405+$eye0008    ds    0d                                                    02-DCCCA
000002A8 C4C3C3                              406+         dc cl3'DCC'                                                    02-DCCCA
000002AB 01                                  407+         dc xl1'01' format one                                          02-DCCCA
000002AC 00000000                            408+         dc a(0)                                                        02-DCCCA
000002B0 000000000000031A                    409+         dc ad(@PER_735)                                                02-DCCCA
000002B8 00000000000000B8                    410+         dc ad(184)                                                     02-DCCCA
000002C0 0000000000000000                    411+         dc ad(0)                                                       02-DCCCA
000002C8 0000000000001000                    412+         dc ad(4096)                                                    02-DCCCA
000002D0 20                                  413+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002D1 03                                  414+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002D2 03                                  415+         dc al1(3)                                                      02-DCCCA
000002D3 08                                  416+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002D4 00                                  417+         dc bl.8'00000000'                                              02-DCCCA
000002D5 000000                              418+         dc al3(0)                                                      02-DCCCA
000002D8 0000000000000290                    419+         dc ad(@LNAME735)                                               02-DCCCA
000002E0                                     420+         ds 0d                                                          02-DCCCA
000002E0 00000000000002A8                    421+         dc ad($eye0008)                                                02-DCCCA
000002E8 0000000000000000                    422+         dc ad(0)                                                       02-DCCCA
000002F0                                     423+         ds    0d                                                       01-DCCPR
000002F0                                     424+rd_atomic32_get ds 0d                                                   01-DCCPR
000002F0                                     425+@REGION_735_1 ds 0h                                                     01-DCCPR
000002F0 EBEC D008 0024          00000008    426+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002F6 E3E0 D088 0004          00000088    427+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002FC E3C0 D090 0004          00000090    428+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000302 B904 002E                           429+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000306 E3B0 C018 0004          00000018    430+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000030C A7EB 00B8               000000B8    431+         aghi  14,184              increase by frame size               01-DCCPR
00000310 E3E0 C020 0021          00000020    432+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000316 4720 B020               00000020    433+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000031A                                     434+@PER_735 ds    0h                                                       01-DCCPR
0000031A EBDE 2080 0024          00000080    435+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000320 E3C0 2090 0024          00000090    436+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000326 B904 00D2                           437+         lgr   13,2                set real frame pointer               01-DCCPR
0000032A B904 00CF                           438+         lgr   12,15               set base reg                         01-DCCPR
                        000002F0             439+         using @REGION_735_1,12                                         01-DCCPR
                                             440 * ******* End of Prologue
                                                                                                                           Page   16 
  Active Usings: @REGION_735_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             441 * *
0000032E E320 1000 0004          00000000    442          LG    2,0(0,1)    ; ra
                                             443 * ***
                                             444 * ***      int32_t r;
                                             445 * ***      pthread_mutex_lock(&ra->lock);
00000334 41F0 2008               00000008    446          LA    15,8(0,2)
00000338 E3F0 D0B0 0024          000000B0    447          STG   15,176(0,13)
0000033E 4110 D0B0               000000B0    448          LA    1,176(0,13)
00000342 E3F0 C0C8 0004          000003B8    449          LG    15,@lit_735_6 ; pthread_mutex_lock
00000348                                     450 @@gen_label8 DS    0H
00000348 05EF                                451          BALR  14,15
0000034A                                     452 @@gen_label9 DS    0H
                                             453 * ***      r = ra->val;
0000034A 5830 2000               00000000    454          L     3,0(0,2)    ; ra
                                             455 * ***      pthread_mutex_unlock(&ra->lock);
0000034E 41F0 2008               00000008    456          LA    15,8(0,2)
00000352 E3F0 D0B0 0024          000000B0    457          STG   15,176(0,13)
00000358 4110 D0B0               000000B0    458          LA    1,176(0,13)
0000035C E3F0 C0D0 0004          000003C0    459          LG    15,@lit_735_7 ; pthread_mutex_unlock
00000362                                     460 @@gen_label10 DS    0H
00000362 05EF                                461          BALR  14,15
00000364                                     462 @@gen_label11 DS    0H
                                             463 * ***      return r;
00000364 B914 00F3                           464          LGFR  15,3
                                             465 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             466 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             467 * ***
                                             468 * ***   }
                                             469 * * **** Start of Epilogue
                                             470          DCCEPIL
00000368                                     471+         ds 0h                                                          01-DCCEP
                                             472+* Epilog
00000368 D707 D088 D088 00000088 00000088    473+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000036E E3D0 D080 0004          00000080    474+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000374 E3C0 D090 0004          00000090    475+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000037A E3B0 C018 0004          00000018    476+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000380 E3C0 B010 0021          00000010    477+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000386 E3E0 D008 0004          00000008    478+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000038C EB1C D020 0004          00000020    479+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000392 078E                                480+         bcr 8,14                if same dsab, just return              01-DCCEP
00000394 E3F0 D010 0024          00000010    481+         stg 15,16(0,13)         save return code                       01-DCCEP
0000039A E300 D018 0024          00000018    482+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003A0 E3F0 D090 0004          00000090    483+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003A6 E3F0 F018 0004          00000018    484+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003AC 47F0 F040               00000040    485+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             486+* End of Epilog
                                             487 * * **** End of Epilogue
000003B0                                     488          DS    0D
000003B0 000000B8                            489 @FRAMESIZE_735 DC F'184'
000003B4 00000000
000003B8 0000000000000000                    490 @lit_735_6 DC  AD(pthread_mutex_lock)
000003C0 0000000000000000                    491 @lit_735_7 DC  AD(pthread_mutex_unlock)
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             492          DROP  12
                                             493 *
                                             494 *   DSECT for automatic variables in "rd_atomic32_get"
                                             495 *      (FUNCTION #735)
                                             496 *
00000000                00000000 000000AC    497 @AUTO#rd_atomic32_get DSECT
00000000                                     498          DS    XL168
000000A8                                     499 rd_atomic32_get#r#0 DS 1F  ; r
                                             500 *
000003C8                00000000 0000E868    501 @CODE    CSECT
                                             502 *
                                             503 *
                                             504 *
                                             505 * ....... start of rd_atomic64_add
000003C8                                     506 @LNAME738 DS   0H
000003C8 0000000F                            507          DC    X'0000000F'
000003CC 99846D81A3969489                    508          DC    C'rd_atomic64_add'
000003DB 00                                  509          DC    X'00'
                                             510 rd_atomic64_add DCCPRLG CINDEX=738,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME738
                                             511          macro
                                             512          dccextrn &m
                                             513          gblc    &$dccext(1000)
                                             514          gbla    &$dccexti
                                             515          lcla    &i
                                             516 &$dccext(&$dccexti+1) setc    '&m'
                                             517 &i       seta    1
                                             518 .loop    aif    (&i gt &$dccexti).around
                                             519          aif    ('&$dccext(&i)' eq '&m').getout
                                             520 &i       seta    &i+1
                                             521          ago     .loop
                                             522 .around  anop
                                             523 &$dccexti seta &$dccexti+1
                                             524          extrn  &m
                                             525 .getout  anop
                                             526          mend
000003E0                                     527+$eye0011    ds    0d                                                    02-DCCCA
000003E0 C4C3C3                              528+         dc cl3'DCC'                                                    02-DCCCA
000003E3 01                                  529+         dc xl1'01' format one                                          02-DCCCA
000003E4 00000000                            530+         dc a(0)                                                        02-DCCCA
000003E8 0000000000000452                    531+         dc ad(@PER_738)                                                02-DCCCA
000003F0 00000000000000B8                    532+         dc ad(184)                                                     02-DCCCA
000003F8 0000000000000000                    533+         dc ad(0)                                                       02-DCCCA
00000400 0000000000001000                    534+         dc ad(4096)                                                    02-DCCCA
00000408 20                                  535+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000409 03                                  536+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000040A 03                                  537+         dc al1(3)                                                      02-DCCCA
0000040B 08                                  538+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000040C 00                                  539+         dc bl.8'00000000'                                              02-DCCCA
0000040D 000000                              540+         dc al3(0)                                                      02-DCCCA
00000410 00000000000003C8                    541+         dc ad(@LNAME738)                                               02-DCCCA
00000418                                     542+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000418 00000000000003E0                    543+         dc ad($eye0011)                                                02-DCCCA
00000420 0000000000000000                    544+         dc ad(0)                                                       02-DCCCA
00000428                                     545+         ds    0d                                                       01-DCCPR
00000428                                     546+rd_atomic64_add ds 0d                                                   01-DCCPR
00000428                                     547+@REGION_738_1 ds 0h                                                     01-DCCPR
00000428 EBEC D008 0024          00000008    548+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000042E E3E0 D088 0004          00000088    549+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000434 E3C0 D090 0004          00000090    550+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000043A B904 002E                           551+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000043E E3B0 C018 0004          00000018    552+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000444 A7EB 00B8               000000B8    553+         aghi  14,184              increase by frame size               01-DCCPR
00000448 E3E0 C020 0021          00000020    554+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000044E 4720 B020               00000020    555+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000452                                     556+@PER_738 ds    0h                                                       01-DCCPR
00000452 EBDE 2080 0024          00000080    557+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000458 E3C0 2090 0024          00000090    558+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000045E B904 00D2                           559+         lgr   13,2                set real frame pointer               01-DCCPR
00000462 B904 00CF                           560+         lgr   12,15               set base reg                         01-DCCPR
                        00000428             561+         using @REGION_738_1,12                                         01-DCCPR
00000466 B904 0031                           562          LGR   3,1         ; ptr to parm area
                                             563 * ******* End of Prologue
                                             564 * *
0000046A E320 3000 0004          00000000    565          LG    2,0(0,3)    ; ra
                                             566 * ***
                                             567 * ***      int64_t r;
                                             568 * ***      pthread_mutex_lock(&ra->lock);
00000470 41F0 2008               00000008    569          LA    15,8(0,2)
00000474 E3F0 D0B0 0024          000000B0    570          STG   15,176(0,13)
0000047A 4110 D0B0               000000B0    571          LA    1,176(0,13)
0000047E E3F0 C0E0 0004          00000508    572          LG    15,@lit_738_9 ; pthread_mutex_lock
00000484                                     573 @@gen_label12 DS    0H
00000484 05EF                                574          BALR  14,15
00000486                                     575 @@gen_label13 DS    0H
                                             576 * ***      ra->val += v;
00000486 E3F0 2000 0004          00000000    577          LG    15,0(0,2)
0000048C E3F0 3008 0008          00000008    578          AG    15,8(0,3)
00000492 E3F0 2000 0024          00000000    579          STG   15,0(0,2)
                                             580 * ***      r = ra->val;
00000498 B904 003F                           581          LGR   3,15        ; ra
                                             582 * ***      pthread_mutex_unlock(&ra->lock);
0000049C 41F0 2008               00000008    583          LA    15,8(0,2)
000004A0 E3F0 D0B0 0024          000000B0    584          STG   15,176(0,13)
000004A6 4110 D0B0               000000B0    585          LA    1,176(0,13)
000004AA E3F0 C0E8 0004          00000510    586          LG    15,@lit_738_10 ; pthread_mutex_unlock
000004B0                                     587 @@gen_label14 DS    0H
000004B0 05EF                                588          BALR  14,15
000004B2                                     589 @@gen_label15 DS    0H
                                             590 * ***      return r;
000004B2 B904 00F3                           591          LGR   15,3
                                             592 * ***   # 222 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             593 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             594 * ***
                                                                                                                           Page   19 
  Active Usings: @REGION_738_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             595 * ***   }
                                             596 * * **** Start of Epilogue
                                             597          DCCEPIL
000004B6                                     598+         ds 0h                                                          01-DCCEP
                                             599+* Epilog
000004B6 D707 D088 D088 00000088 00000088    600+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000004BC E3D0 D080 0004          00000080    601+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000004C2 E3C0 D090 0004          00000090    602+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000004C8 E3B0 C018 0004          00000018    603+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000004CE E3C0 B010 0021          00000010    604+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000004D4 E3E0 D008 0004          00000008    605+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004DA EB1C D020 0004          00000020    606+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004E0 078E                                607+         bcr 8,14                if same dsab, just return              01-DCCEP
000004E2 E3F0 D010 0024          00000010    608+         stg 15,16(0,13)         save return code                       01-DCCEP
000004E8 E300 D018 0024          00000018    609+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004EE E3F0 D090 0004          00000090    610+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000004F4 E3F0 F018 0004          00000018    611+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004FA 47F0 F040               00000040    612+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             613+* End of Epilog
                                             614 * * **** End of Epilogue
00000500                                     615          DS    0D
00000500 000000B8                            616 @FRAMESIZE_738 DC F'184'
00000504 00000000
00000508 0000000000000000                    617 @lit_738_9 DC  AD(pthread_mutex_lock)
00000510 0000000000000000                    618 @lit_738_10 DC AD(pthread_mutex_unlock)
                                             619          DROP  12
                                             620 *
                                             621 *   DSECT for automatic variables in "rd_atomic64_add"
                                             622 *      (FUNCTION #738)
                                             623 *
00000000                00000000 000000B0    624 @AUTO#rd_atomic64_add DSECT
00000000                                     625          DS    XL168
000000A8                                     626 rd_atomic64_add#r#0 DS 8XL1 ; r
                                             627 *
00000518                00000000 0000E868    628 @CODE    CSECT
                                             629 *
                                             630 *
                                             631 *
                                             632 * ....... start of rd_calloc
00000518                                     633 @LNAME751 DS   0H
00000518 00000009                            634          DC    X'00000009'
0000051C 99846D8381939396                    635          DC    C'rd_calloc'
00000525 00                                  636          DC    X'00'
                                             637 rd_calloc DCCPRLG CINDEX=751,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME751
                                             638          macro
                                             639          dccextrn &m
                                             640          gblc    &$dccext(1000)
                                             641          gbla    &$dccexti
                                             642          lcla    &i
                                             643 &$dccext(&$dccexti+1) setc    '&m'
                                             644 &i       seta    1
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             645 .loop    aif    (&i gt &$dccexti).around
                                             646          aif    ('&$dccext(&i)' eq '&m').getout
                                             647 &i       seta    &i+1
                                             648          ago     .loop
                                             649 .around  anop
                                             650 &$dccexti seta &$dccexti+1
                                             651          extrn  &m
                                             652 .getout  anop
                                             653          mend
00000528                                     654+$eye0014    ds    0d                                                    02-DCCCA
00000528 C4C3C3                              655+         dc cl3'DCC'                                                    02-DCCCA
0000052B 01                                  656+         dc xl1'01' format one                                          02-DCCCA
0000052C 00000000                            657+         dc a(0)                                                        02-DCCCA
00000530 000000000000059A                    658+         dc ad(@PER_751)                                                02-DCCCA
00000538 00000000000000D0                    659+         dc ad(208)                                                     02-DCCCA
00000540 0000000000000000                    660+         dc ad(0)                                                       02-DCCCA
00000548 0000000000001000                    661+         dc ad(4096)                                                    02-DCCCA
00000550 20                                  662+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000551 03                                  663+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000552 03                                  664+         dc al1(3)                                                      02-DCCCA
00000553 08                                  665+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000554 00                                  666+         dc bl.8'00000000'                                              02-DCCCA
00000555 000000                              667+         dc al3(0)                                                      02-DCCCA
00000558 0000000000000518                    668+         dc ad(@LNAME751)                                               02-DCCCA
00000560                                     669+         ds 0d                                                          02-DCCCA
00000560 0000000000000528                    670+         dc ad($eye0014)                                                02-DCCCA
00000568 0000000000000000                    671+         dc ad(0)                                                       02-DCCCA
00000570                                     672+         ds    0d                                                       01-DCCPR
00000570                                     673+rd_calloc ds   0d                                                       01-DCCPR
00000570                                     674+@REGION_751_1 ds 0h                                                     01-DCCPR
00000570 EBEC D008 0024          00000008    675+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000576 E3E0 D088 0004          00000088    676+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000057C E3C0 D090 0004          00000090    677+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000582 B904 002E                           678+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000586 E3B0 C018 0004          00000018    679+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000058C A7EB 00D0               000000D0    680+         aghi  14,208              increase by frame size               01-DCCPR
00000590 E3E0 C020 0021          00000020    681+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000596 4720 B020               00000020    682+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000059A                                     683+@PER_751 ds    0h                                                       01-DCCPR
0000059A EBDE 2080 0024          00000080    684+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000005A0 E3C0 2090 0024          00000090    685+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000005A6 B904 00D2                           686+         lgr   13,2                set real frame pointer               01-DCCPR
000005AA B904 00CF                           687+         lgr   12,15               set base reg                         01-DCCPR
                        00000570             688+         using @REGION_751_1,12                                         01-DCCPR
                                             689 * ******* End of Prologue
                                             690 * *
                                             691 * ***      void *p = calloc(num, sz);
000005AE E3F0 1000 0004          00000000    692          LG    15,0(0,1)   ; num
000005B4 E3F0 D0B0 0024          000000B0    693          STG   15,176(0,13)
000005BA E3F0 1008 0004          00000008    694          LG    15,8(0,1)   ; sz
000005C0 E3F0 D0B8 0024          000000B8    695          STG   15,184(0,13)
000005C6 4110 D0B0               000000B0    696          LA    1,176(0,13)
                                                                                                                           Page   21 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000005CA E3F0 C0F8 0004          00000668    697          LG    15,@lit_751_12 ; calloc
000005D0                                     698 @@gen_label16 DS    0H
000005D0 05EF                                699          BALR  14,15
000005D2                                     700 @@gen_label17 DS    0H
000005D2 B904 002F                           701          LGR   2,15
                                             702 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             703 * ka\\src\\rd.h", 122, "p"));
000005D6 B902 00F2                           704          LTGR  15,2
000005DA 4770 C0A2               00000612    705          BNZ   @L32
000005DE                                     706 @L31     DS    0H
000005DE E3F0 C110 0004          00000680    707          LG    15,@lit_751_13
000005E4 E3F0 D0B0 0024          000000B0    708          STG   15,176(0,13)
000005EA E3F0 C108 0004          00000678    709          LG    15,@lit_751_14
000005F0 E3F0 D0B8 0024          000000B8    710          STG   15,184(0,13)
000005F6 E548 D0C0 007A          000000C0    711          MVGHI 192(13),122
000005FC 41F0 F020               00000020    712          LA    15,32(0,15)
00000600 E3F0 D0C8 0024          000000C8    713          STG   15,200(0,13)
00000606 4110 D0B0               000000B0    714          LA    1,176(0,13)
0000060A E3F0 C100 0004          00000670    715          LG    15,@lit_751_15 ; __assert
00000610                                     716 @@gen_label19 DS    0H
00000610 05EF                                717          BALR  14,15
00000612                                     718 @@gen_label20 DS    0H
00000612                                     719 @L32     DS    0H
                                             720 * ***      return p;
00000612 B904 00F2                           721          LGR   15,2
                                             722 * ***   }
                                             723 * * **** Start of Epilogue
                                             724          DCCEPIL
00000616                                     725+         ds 0h                                                          01-DCCEP
                                             726+* Epilog
00000616 D707 D088 D088 00000088 00000088    727+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000061C E3D0 D080 0004          00000080    728+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000622 E3C0 D090 0004          00000090    729+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000628 E3B0 C018 0004          00000018    730+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000062E E3C0 B010 0021          00000010    731+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000634 E3E0 D008 0004          00000008    732+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000063A EB1C D020 0004          00000020    733+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000640 078E                                734+         bcr 8,14                if same dsab, just return              01-DCCEP
00000642 E3F0 D010 0024          00000010    735+         stg 15,16(0,13)         save return code                       01-DCCEP
00000648 E300 D018 0024          00000018    736+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000064E E3F0 D090 0004          00000090    737+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000654 E3F0 F018 0004          00000018    738+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000065A 47F0 F040               00000040    739+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             740+* End of Epilog
                                             741 * * **** End of Epilogue
00000660                                     742          DS    0D
00000660 000000D0                            743 @FRAMESIZE_751 DC F'208'
00000664 00000000
00000668 0000000000000000                    744 @lit_751_12 DC AD(calloc)
00000670 0000000000000000                    745 @lit_751_15 DC AD(__assert)
00000678 000000000000ECA4                    746 @lit_751_14 DC AD(@strings@)
00000680 000000000000E868                    747 @lit_751_13 DC AD(@DATA)
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             748          DROP  12
                                             749 *
                                             750 *   DSECT for automatic variables in "rd_calloc"
                                             751 *      (FUNCTION #751)
                                             752 *
00000000                00000000 000000A8    753 @AUTO#rd_calloc DSECT
00000000                                     754          DS    XL168
                                             755 *
00000688                00000000 0000E868    756 @CODE    CSECT
                                             757 *
                                             758 *
                                             759 *
                                             760 * ....... start of rd_malloc
00000688                                     761 @LNAME752 DS   0H
00000688 00000009                            762          DC    X'00000009'
0000068C 99846D9481939396                    763          DC    C'rd_malloc'
00000695 00                                  764          DC    X'00'
                                             765 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                             766          macro
                                             767          dccextrn &m
                                             768          gblc    &$dccext(1000)
                                             769          gbla    &$dccexti
                                             770          lcla    &i
                                             771 &$dccext(&$dccexti+1) setc    '&m'
                                             772 &i       seta    1
                                             773 .loop    aif    (&i gt &$dccexti).around
                                             774          aif    ('&$dccext(&i)' eq '&m').getout
                                             775 &i       seta    &i+1
                                             776          ago     .loop
                                             777 .around  anop
                                             778 &$dccexti seta &$dccexti+1
                                             779          extrn  &m
                                             780 .getout  anop
                                             781          mend
00000698                                     782+$eye0017    ds    0d                                                    02-DCCCA
00000698 C4C3C3                              783+         dc cl3'DCC'                                                    02-DCCCA
0000069B 01                                  784+         dc xl1'01' format one                                          02-DCCCA
0000069C 00000000                            785+         dc a(0)                                                        02-DCCCA
000006A0 000000000000070A                    786+         dc ad(@PER_752)                                                02-DCCCA
000006A8 00000000000000D0                    787+         dc ad(208)                                                     02-DCCCA
000006B0 0000000000000000                    788+         dc ad(0)                                                       02-DCCCA
000006B8 0000000000001000                    789+         dc ad(4096)                                                    02-DCCCA
000006C0 20                                  790+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000006C1 03                                  791+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000006C2 03                                  792+         dc al1(3)                                                      02-DCCCA
000006C3 08                                  793+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000006C4 00                                  794+         dc bl.8'00000000'                                              02-DCCCA
000006C5 000000                              795+         dc al3(0)                                                      02-DCCCA
000006C8 0000000000000688                    796+         dc ad(@LNAME752)                                               02-DCCCA
000006D0                                     797+         ds 0d                                                          02-DCCCA
000006D0 0000000000000698                    798+         dc ad($eye0017)                                                02-DCCCA
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000006D8 0000000000000000                    799+         dc ad(0)                                                       02-DCCCA
000006E0                                     800+         ds    0d                                                       01-DCCPR
000006E0                                     801+rd_malloc ds   0d                                                       01-DCCPR
000006E0                                     802+@REGION_752_1 ds 0h                                                     01-DCCPR
000006E0 EBEC D008 0024          00000008    803+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000006E6 E3E0 D088 0004          00000088    804+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000006EC E3C0 D090 0004          00000090    805+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000006F2 B904 002E                           806+         lgr   2,14                copy addr of our savearea            01-DCCPR
000006F6 E3B0 C018 0004          00000018    807+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000006FC A7EB 00D0               000000D0    808+         aghi  14,208              increase by frame size               01-DCCPR
00000700 E3E0 C020 0021          00000020    809+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000706 4720 B020               00000020    810+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000070A                                     811+@PER_752 ds    0h                                                       01-DCCPR
0000070A EBDE 2080 0024          00000080    812+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000710 E3C0 2090 0024          00000090    813+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000716 B904 00D2                           814+         lgr   13,2                set real frame pointer               01-DCCPR
0000071A B904 00CF                           815+         lgr   12,15               set base reg                         01-DCCPR
                        000006E0             816+         using @REGION_752_1,12                                         01-DCCPR
                                             817 * ******* End of Prologue
                                             818 * *
                                             819 * ***      void *p = malloc(sz);
0000071E E3F0 1000 0004          00000000    820          LG    15,0(0,1)   ; sz
00000724 E3F0 D0B0 0024          000000B0    821          STG   15,176(0,13)
0000072A 4110 D0B0               000000B0    822          LA    1,176(0,13)
0000072E E3F0 C0F0 0004          000007D0    823          LG    15,@lit_752_17 ; malloc
00000734                                     824 @@gen_label21 DS    0H
00000734 05EF                                825          BALR  14,15
00000736                                     826 @@gen_label22 DS    0H
00000736 B904 002F                           827          LGR   2,15
                                             828 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             829 * ka\\src\\rd.h", 128, "p"));
0000073A B902 00F2                           830          LTGR  15,2
0000073E 4770 C09A               0000077A    831          BNZ   @L34
00000742                                     832 @L33     DS    0H
00000742 E3F0 C108 0004          000007E8    833          LG    15,@lit_752_18
00000748 41F0 F00A               0000000A    834          LA    15,10(0,15)
0000074C E3F0 D0B0 0024          000000B0    835          STG   15,176(0,13)
00000752 E3F0 C100 0004          000007E0    836          LG    15,@lit_752_19
00000758 E3F0 D0B8 0024          000000B8    837          STG   15,184(0,13)
0000075E E548 D0C0 0080          000000C0    838          MVGHI 192(13),128
00000764 41F0 F020               00000020    839          LA    15,32(0,15)
00000768 E3F0 D0C8 0024          000000C8    840          STG   15,200(0,13)
0000076E 4110 D0B0               000000B0    841          LA    1,176(0,13)
00000772 E3F0 C0F8 0004          000007D8    842          LG    15,@lit_752_20 ; __assert
00000778                                     843 @@gen_label24 DS    0H
00000778 05EF                                844          BALR  14,15
0000077A                                     845 @@gen_label25 DS    0H
0000077A                                     846 @L34     DS    0H
                                             847 * ***      return p;
0000077A B904 00F2                           848          LGR   15,2
                                             849 * ***   }
                                             850 * * **** Start of Epilogue
                                                                                                                           Page   24 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             851          DCCEPIL
0000077E                                     852+         ds 0h                                                          01-DCCEP
                                             853+* Epilog
0000077E D707 D088 D088 00000088 00000088    854+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000784 E3D0 D080 0004          00000080    855+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000078A E3C0 D090 0004          00000090    856+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000790 E3B0 C018 0004          00000018    857+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000796 E3C0 B010 0021          00000010    858+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000079C E3E0 D008 0004          00000008    859+         lg  14,8(0,13)          load up return address                 01-DCCEP
000007A2 EB1C D020 0004          00000020    860+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000007A8 078E                                861+         bcr 8,14                if same dsab, just return              01-DCCEP
000007AA E3F0 D010 0024          00000010    862+         stg 15,16(0,13)         save return code                       01-DCCEP
000007B0 E300 D018 0024          00000018    863+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007B6 E3F0 D090 0004          00000090    864+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000007BC E3F0 F018 0004          00000018    865+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000007C2 47F0 F040               00000040    866+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             867+* End of Epilog
                                             868 * * **** End of Epilogue
000007C8                                     869          DS    0D
000007C8 000000D0                            870 @FRAMESIZE_752 DC F'208'
000007CC 00000000
000007D0 0000000000000000                    871 @lit_752_17 DC AD(malloc)
000007D8 0000000000000000                    872 @lit_752_20 DC AD(__assert)
000007E0 000000000000ECA4                    873 @lit_752_19 DC AD(@strings@)
000007E8 000000000000E868                    874 @lit_752_18 DC AD(@DATA)
                                             875          DROP  12
                                             876 *
                                             877 *   DSECT for automatic variables in "rd_malloc"
                                             878 *      (FUNCTION #752)
                                             879 *
00000000                00000000 000000A8    880 @AUTO#rd_malloc DSECT
00000000                                     881          DS    XL168
                                             882 *
000007F0                00000000 0000E868    883 @CODE    CSECT
                                             884 *
                                             885 *
                                             886 *
                                             887 * ....... start of rd_free
000007F0                                     888 @LNAME754 DS   0H
000007F0 00000007                            889          DC    X'00000007'
000007F4 99846D86998585                      890          DC    C'rd_free'
000007FB 00                                  891          DC    X'00'
                                             892 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             893          macro
                                             894          dccextrn &m
                                             895          gblc    &$dccext(1000)
                                             896          gbla    &$dccexti
                                             897          lcla    &i
                                             898 &$dccext(&$dccexti+1) setc    '&m'
                                             899 &i       seta    1
                                             900 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             901          aif    ('&$dccext(&i)' eq '&m').getout
                                             902 &i       seta    &i+1
                                             903          ago     .loop
                                             904 .around  anop
                                             905 &$dccexti seta &$dccexti+1
                                             906          extrn  &m
                                             907 .getout  anop
                                             908          mend
00000800                                     909+$eye0020    ds    0d                                                    02-DCCCA
00000800 C4C3C3                              910+         dc cl3'DCC'                                                    02-DCCCA
00000803 01                                  911+         dc xl1'01' format one                                          02-DCCCA
00000804 00000000                            912+         dc a(0)                                                        02-DCCCA
00000808 0000000000000872                    913+         dc ad(@PER_754)                                                02-DCCCA
00000810 00000000000000B0                    914+         dc ad(176)                                                     02-DCCCA
00000818 0000000000000000                    915+         dc ad(0)                                                       02-DCCCA
00000820 0000000000001000                    916+         dc ad(4096)                                                    02-DCCCA
00000828 20                                  917+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000829 03                                  918+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000082A 03                                  919+         dc al1(3)                                                      02-DCCCA
0000082B 08                                  920+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000082C 00                                  921+         dc bl.8'00000000'                                              02-DCCCA
0000082D 000000                              922+         dc al3(0)                                                      02-DCCCA
00000830 00000000000007F0                    923+         dc ad(@LNAME754)                                               02-DCCCA
00000838                                     924+         ds 0d                                                          02-DCCCA
00000838 0000000000000800                    925+         dc ad($eye0020)                                                02-DCCCA
00000840 0000000000000000                    926+         dc ad(0)                                                       02-DCCCA
00000848                                     927+         ds    0d                                                       01-DCCPR
00000848                                     928+rd_free  ds    0d                                                       01-DCCPR
00000848                                     929+@REGION_754_1 ds 0h                                                     01-DCCPR
00000848 EBEC D008 0024          00000008    930+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000084E E3E0 D088 0004          00000088    931+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000854 E3C0 D090 0004          00000090    932+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000085A B904 002E                           933+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000085E E3B0 C018 0004          00000018    934+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000864 A7EB 00B0               000000B0    935+         aghi  14,176              increase by frame size               01-DCCPR
00000868 E3E0 C020 0021          00000020    936+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000086E 4720 B020               00000020    937+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000872                                     938+@PER_754 ds    0h                                                       01-DCCPR
00000872 EBDE 2080 0024          00000080    939+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000878 E3C0 2090 0024          00000090    940+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000087E B904 00D2                           941+         lgr   13,2                set real frame pointer               01-DCCPR
00000882 B904 00CF                           942+         lgr   12,15               set base reg                         01-DCCPR
                        00000848             943+         using @REGION_754_1,12                                         01-DCCPR
                                             944 * ******* End of Prologue
                                             945 * *
                                             946 * ***      free(ptr);
00000886 E3F0 1000 0004          00000000    947          LG    15,0(0,1)   ; ptr
0000088C E3F0 D0A8 0024          000000A8    948          STG   15,168(0,13)
00000892 4110 D0A8               000000A8    949          LA    1,168(0,13)
00000896 E3F0 C0A8 0004          000008F0    950          LG    15,@lit_754_22 ; free
0000089C                                     951 @@gen_label26 DS    0H
0000089C 05EF                                952          BALR  14,15
                                                                                                                           Page   26 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000089E                                     953 @@gen_label27 DS    0H
                                             954 * ***   }
0000089E                                     955 @ret_lab_754 DS 0H
                                             956 * * **** Start of Epilogue
                                             957          DCCEPIL
0000089E                                     958+         ds 0h                                                          01-DCCEP
                                             959+* Epilog
0000089E D707 D088 D088 00000088 00000088    960+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000008A4 E3D0 D080 0004          00000080    961+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008AA E3C0 D090 0004          00000090    962+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008B0 E3B0 C018 0004          00000018    963+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008B6 E3C0 B010 0021          00000010    964+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008BC E3E0 D008 0004          00000008    965+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008C2 EB1C D020 0004          00000020    966+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008C8 078E                                967+         bcr 8,14                if same dsab, just return              01-DCCEP
000008CA E3F0 D010 0024          00000010    968+         stg 15,16(0,13)         save return code                       01-DCCEP
000008D0 E300 D018 0024          00000018    969+         stg 0,24(0,13)          save more return code                  01-DCCEP
000008D6 E3F0 D090 0004          00000090    970+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000008DC E3F0 F018 0004          00000018    971+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000008E2 47F0 F040               00000040    972+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             973+* End of Epilog
                                             974 * * **** End of Epilogue
000008E8                                     975          DS    0D
000008E8 000000B0                            976 @FRAMESIZE_754 DC F'176'
000008EC 00000000
000008F0 0000000000000000                    977 @lit_754_22 DC AD(free)
                                             978          DROP  12
                                             979 *
                                             980 *   DSECT for automatic variables in "rd_free"
                                             981 *      (FUNCTION #754)
                                             982 *
00000000                00000000 000000A8    983 @AUTO#rd_free DSECT
00000000                                     984          DS    XL168
                                             985 *
000008F8                00000000 0000E868    986 @CODE    CSECT
                                             987 *
                                             988 *
                                             989 *
                                             990 * ....... start of rd_refcnt_sub0
000008F8                                     991 @LNAME758 DS   0H
000008F8 0000000E                            992          DC    X'0000000E'
000008FC 99846D9985868395                    993          DC    C'rd_refcnt_sub0'
0000090A 00                                  994          DC    X'00'
                                             995 rd_refcnt_sub0 DCCPRLG CINDEX=758,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME758
                                             996          macro
                                             997          dccextrn &m
                                             998          gblc    &$dccext(1000)
                                             999          gbla    &$dccexti
                                            1000          lcla    &i
                                            1001 &$dccext(&$dccexti+1) setc    '&m'
                                            1002 &i       seta    1
                                                                                                                           Page   27 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1003 .loop    aif    (&i gt &$dccexti).around
                                            1004          aif    ('&$dccext(&i)' eq '&m').getout
                                            1005 &i       seta    &i+1
                                            1006          ago     .loop
                                            1007 .around  anop
                                            1008 &$dccexti seta &$dccexti+1
                                            1009          extrn  &m
                                            1010 .getout  anop
                                            1011          mend
00000910                                    1012+$eye0023    ds    0d                                                    02-DCCCA
00000910 C4C3C3                             1013+         dc cl3'DCC'                                                    02-DCCCA
00000913 01                                 1014+         dc xl1'01' format one                                          02-DCCCA
00000914 00000000                           1015+         dc a(0)                                                        02-DCCCA
00000918 0000000000000982                   1016+         dc ad(@PER_758)                                                02-DCCCA
00000920 00000000000000D0                   1017+         dc ad(208)                                                     02-DCCCA
00000928 0000000000000000                   1018+         dc ad(0)                                                       02-DCCCA
00000930 0000000000001000                   1019+         dc ad(4096)                                                    02-DCCCA
00000938 20                                 1020+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000939 03                                 1021+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000093A 03                                 1022+         dc al1(3)                                                      02-DCCCA
0000093B 08                                 1023+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000093C 00                                 1024+         dc bl.8'00000000'                                              02-DCCCA
0000093D 000000                             1025+         dc al3(0)                                                      02-DCCCA
00000940 00000000000008F8                   1026+         dc ad(@LNAME758)                                               02-DCCCA
00000948                                    1027+         ds 0d                                                          02-DCCCA
00000948 0000000000000910                   1028+         dc ad($eye0023)                                                02-DCCCA
00000950 0000000000000000                   1029+         dc ad(0)                                                       02-DCCCA
00000958                                    1030+         ds    0d                                                       01-DCCPR
00000958                                    1031+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000958                                    1032+@REGION_758_1 ds 0h                                                     01-DCCPR
00000958 EBEC D008 0024          00000008   1033+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000095E E3E0 D088 0004          00000088   1034+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000964 E3C0 D090 0004          00000090   1035+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000096A B904 002E                          1036+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000096E E3B0 C018 0004          00000018   1037+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000974 A7EB 00D0               000000D0   1038+         aghi  14,208              increase by frame size               01-DCCPR
00000978 E3E0 C020 0021          00000020   1039+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000097E 4720 B020               00000020   1040+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000982                                    1041+@PER_758 ds    0h                                                       01-DCCPR
00000982 EBDE 2080 0024          00000080   1042+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000988 E3C0 2090 0024          00000090   1043+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000098E B904 00D2                          1044+         lgr   13,2                set real frame pointer               01-DCCPR
00000992 B904 00CF                          1045+         lgr   12,15               set base reg                         01-DCCPR
                        00000958            1046+         using @REGION_758_1,12                                         01-DCCPR
                                            1047 * ******* End of Prologue
                                            1048 * *
                                            1049 * ***           int r;
                                            1050 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                            1051 * ***           r = rd_atomic32_sub(R, 1);
00000996 E3F0 1000 0004          00000000   1052          LG    15,0(0,1)   ; R
0000099C E3F0 D0B0 0024          000000B0   1053          STG   15,176(0,13)
000009A2 E548 D0B8 0001          000000B8   1054          MVGHI 184(13),1
                                                                                                                           Page   28 
  Active Usings: @REGION_758_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000009A8 4110 D0B0               000000B0   1055          LA    1,176(0,13)
000009AC E3F0 C100 0004          00000A58   1056          LG    15,@lit_758_24 ; rd_atomic32_sub
000009B2                                    1057 @@gen_label28 DS    0H
000009B2 05EF                               1058          BALR  14,15
000009B4                                    1059 @@gen_label29 DS    0H
000009B4 122F                               1060          LTR   2,15
                                            1061 * ***
                                            1062 * ***           if (r < 0)
000009B6 47B0 C0A6               000009FE   1063          BNL   @L41
                                            1064 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                            1065 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                            1066 * zero\""));
000009BA E3F0 C108 0004          00000A60   1067          LG    15,@lit_758_25
000009C0 4110 F022               00000022   1068          LA    1,34(0,15)
000009C4 9500 1000      00000000 00000000   1069          CLI   0(1),0
000009C8 4780 C0A6               000009FE   1070          BE    @L41
000009CC                                    1071 @L42     DS    0H
000009CC E310 C118 0004          00000A70   1072          LG    1,@lit_758_26
000009D2 4110 1036               00000036   1073          LA    1,54(0,1)
000009D6 E310 D0B0 0024          000000B0   1074          STG   1,176(0,13)
000009DC E3F0 D0B8 0024          000000B8   1075          STG   15,184(0,13)
000009E2 E548 D0C0 014F          000000C0   1076          MVGHI 192(13),335
000009E8 41F0 F032               00000032   1077          LA    15,50(0,15)
000009EC E3F0 D0C8 0024          000000C8   1078          STG   15,200(0,13)
000009F2 4110 D0B0               000000B0   1079          LA    1,176(0,13)
000009F6 E3F0 C110 0004          00000A68   1080          LG    15,@lit_758_27 ; __assert
000009FC                                    1081 @@gen_label32 DS    0H
000009FC 05EF                               1082          BALR  14,15
000009FE                                    1083 @@gen_label33 DS    0H
000009FE                                    1084 @L43     DS    0H
000009FE                                    1085 @L41     DS    0H
                                            1086 * ***           return r;
000009FE B914 00F2                          1087          LGFR  15,2
                                            1088 * ***   }
                                            1089 * * **** Start of Epilogue
                                            1090          DCCEPIL
00000A02                                    1091+         ds 0h                                                          01-DCCEP
                                            1092+* Epilog
00000A02 D707 D088 D088 00000088 00000088   1093+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A08 E3D0 D080 0004          00000080   1094+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000A0E E3C0 D090 0004          00000090   1095+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A14 E3B0 C018 0004          00000018   1096+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A1A E3C0 B010 0021          00000010   1097+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A20 E3E0 D008 0004          00000008   1098+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A26 EB1C D020 0004          00000020   1099+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000A2C 078E                               1100+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A2E E3F0 D010 0024          00000010   1101+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A34 E300 D018 0024          00000018   1102+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A3A E3F0 D090 0004          00000090   1103+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A40 E3F0 F018 0004          00000018   1104+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A46 47F0 F040               00000040   1105+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1106+* End of Epilog
                                                                                                                           Page   29 
  Active Usings: @REGION_758_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1107 * * **** End of Epilogue
00000A50                                    1108          DS    0D
00000A50 000000D0                           1109 @FRAMESIZE_758 DC F'208'
00000A54 00000000
00000A58 00000000000001A8                   1110 @lit_758_24 DC AD(rd_atomic32_sub)
00000A60 000000000000ECA4                   1111 @lit_758_25 DC AD(@strings@)
00000A68 0000000000000000                   1112 @lit_758_27 DC AD(__assert)
00000A70 000000000000E868                   1113 @lit_758_26 DC AD(@DATA)
                                            1114          DROP  12
                                            1115 *
                                            1116 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                            1117 *      (FUNCTION #758)
                                            1118 *
00000000                00000000 000000AC   1119 @AUTO#rd_refcnt_sub0 DSECT
00000000                                    1120          DS    XL168
000000A8                                    1121 rd_refcnt_sub0#r#0 DS 1F   ; r
                                            1122 *
00000A78                00000000 0000E868   1123 @CODE    CSECT
                                            1124 *
                                            1125 *
                                            1126 *
                                            1127 * ....... start of rd_clock
00000A78                                    1128 @LNAME1088 DS  0H
00000A78 00000008                           1129          DC    X'00000008'
00000A7C 99846D8393968392                   1130          DC    C'rd_clock'
00000A84 00                                 1131          DC    X'00'
                                            1132 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                            1133          macro
                                            1134          dccextrn &m
                                            1135          gblc    &$dccext(1000)
                                            1136          gbla    &$dccexti
                                            1137          lcla    &i
                                            1138 &$dccext(&$dccexti+1) setc    '&m'
                                            1139 &i       seta    1
                                            1140 .loop    aif    (&i gt &$dccexti).around
                                            1141          aif    ('&$dccext(&i)' eq '&m').getout
                                            1142 &i       seta    &i+1
                                            1143          ago     .loop
                                            1144 .around  anop
                                            1145 &$dccexti seta &$dccexti+1
                                            1146          extrn  &m
                                            1147 .getout  anop
                                            1148          mend
00000A88                                    1149+$eye0026    ds    0d                                                    02-DCCCA
00000A88 C4C3C3                             1150+         dc cl3'DCC'                                                    02-DCCCA
00000A8B 01                                 1151+         dc xl1'01' format one                                          02-DCCCA
00000A8C 00000000                           1152+         dc a(0)                                                        02-DCCCA
00000A90 0000000000000AFA                   1153+         dc ad(@PER_1088)                                               02-DCCCA
00000A98 00000000000000C8                   1154+         dc ad(200)                                                     02-DCCCA
00000AA0 0000000000000000                   1155+         dc ad(0)                                                       02-DCCCA
00000AA8 0000000000001000                   1156+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000AB0 20                                 1157+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AB1 03                                 1158+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AB2 03                                 1159+         dc al1(3)                                                      02-DCCCA
00000AB3 08                                 1160+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AB4 00                                 1161+         dc bl.8'00000000'                                              02-DCCCA
00000AB5 000000                             1162+         dc al3(0)                                                      02-DCCCA
00000AB8 0000000000000A78                   1163+         dc ad(@LNAME1088)                                              02-DCCCA
00000AC0                                    1164+         ds 0d                                                          02-DCCCA
00000AC0 0000000000000A88                   1165+         dc ad($eye0026)                                                02-DCCCA
00000AC8 0000000000000000                   1166+         dc ad(0)                                                       02-DCCCA
00000AD0                                    1167+         ds    0d                                                       01-DCCPR
00000AD0                                    1168+rd_clock ds    0d                                                       01-DCCPR
00000AD0                                    1169+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000AD0 EBEC D008 0024          00000008   1170+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000AD6 E3E0 D088 0004          00000088   1171+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000ADC E3C0 D090 0004          00000090   1172+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000AE2 B904 002E                          1173+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000AE6 E3B0 C018 0004          00000018   1174+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000AEC A7EB 00C8               000000C8   1175+         aghi  14,200              increase by frame size               01-DCCPR
00000AF0 E3E0 C020 0021          00000020   1176+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000AF6 4720 B020               00000020   1177+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000AFA                                    1178+@PER_1088 ds   0h                                                       01-DCCPR
00000AFA EBDE 2080 0024          00000080   1179+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B00 E3C0 2090 0024          00000090   1180+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B06 B904 00D2                          1181+         lgr   13,2                set real frame pointer               01-DCCPR
00000B0A B904 00CF                          1182+         lgr   12,15               set base reg                         01-DCCPR
                        00000AD0            1183+         using @REGION_1088_1,12                                        01-DCCPR
                                            1184 * ******* End of Prologue
                                            1185 * *
                                            1186 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1187 * ***       struct timeval tv;
                                            1188 * ***       gettimeofday(&tv, ((void *)0));
00000B0E 41F0 D0A8               000000A8   1189          LA    15,168(0,13)
00000B12 E3F0 D0B8 0024          000000B8   1190          STG   15,184(0,13)
00000B18 D707 D0C0 D0C0 000000C0 000000C0   1191          XC    192(8,13),192(13)
00000B1E 4110 D0B8               000000B8   1192          LA    1,184(0,13)
00000B22 E3F0 C0C0 0004          00000B90   1193          LG    15,@lit_1088_29 ; gettimeofday
00000B28                                    1194 @@gen_label34 DS    0H
00000B28 05EF                               1195          BALR  14,15
00000B2A                                    1196 @@gen_label35 DS    0H
                                            1197 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                            1198 * usec;
00000B2A E3F0 D0A8 0004          000000A8   1199          LG    15,168(0,13)
00000B30 C2F0 000F 4240                     1200          MSGFI 15,X'000F4240'
00000B36 E310 D0B0 0004          000000B0   1201          LG    1,176(0,13) ; offset of tv_usec in timeval
00000B3C B90A 00F1                          1202          ALGR  15,1
                                            1203 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1204 * ***   }
                                            1205 * * **** Start of Epilogue
                                            1206          DCCEPIL
00000B40                                    1207+         ds 0h                                                          01-DCCEP
                                            1208+* Epilog
                                                                                                                           Page   31 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000B40 D707 D088 D088 00000088 00000088   1209+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000B46 E3D0 D080 0004          00000080   1210+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000B4C E3C0 D090 0004          00000090   1211+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000B52 E3B0 C018 0004          00000018   1212+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000B58 E3C0 B010 0021          00000010   1213+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000B5E E3E0 D008 0004          00000008   1214+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000B64 EB1C D020 0004          00000020   1215+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000B6A 078E                               1216+         bcr 8,14                if same dsab, just return              01-DCCEP
00000B6C E3F0 D010 0024          00000010   1217+         stg 15,16(0,13)         save return code                       01-DCCEP
00000B72 E300 D018 0024          00000018   1218+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000B78 E3F0 D090 0004          00000090   1219+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000B7E E3F0 F018 0004          00000018   1220+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000B84 47F0 F040               00000040   1221+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1222+* End of Epilog
                                            1223 * * **** End of Epilogue
00000B88                                    1224          DS    0D
00000B88 000000C8                           1225 @FRAMESIZE_1088 DC F'200'
00000B8C 00000000
00000B90 0000000000000000                   1226 @lit_1088_29 DC AD(gettimeofday)
                                            1227          DROP  12
                                            1228 *
                                            1229 *   DSECT for automatic variables in "rd_clock"
                                            1230 *      (FUNCTION #1088)
                                            1231 *
00000000                00000000 000000B8   1232 @AUTO#rd_clock DSECT
00000000                                    1233          DS    XL168
000000A8                                    1234 rd_clock#tv#0 DS 16XL1     ; tv
                                            1235 *
00000B98                00000000 0000E868   1236 @CODE    CSECT
                                            1237 *
                                            1238 *
                                            1239 *
                                            1240 * ....... start of rd_uclock
00000B98                                    1241 @LNAME1089 DS  0H
00000B98 00000009                           1242          DC    X'00000009'
00000B9C 99846DA483939683                   1243          DC    C'rd_uclock'
00000BA5 00                                 1244          DC    X'00'
                                            1245 rd_uclock DCCPRLG CINDEX=1089,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1089
                                            1246          macro
                                            1247          dccextrn &m
                                            1248          gblc    &$dccext(1000)
                                            1249          gbla    &$dccexti
                                            1250          lcla    &i
                                            1251 &$dccext(&$dccexti+1) setc    '&m'
                                            1252 &i       seta    1
                                            1253 .loop    aif    (&i gt &$dccexti).around
                                            1254          aif    ('&$dccext(&i)' eq '&m').getout
                                            1255 &i       seta    &i+1
                                            1256          ago     .loop
                                            1257 .around  anop
                                            1258 &$dccexti seta &$dccexti+1
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1259          extrn  &m
                                            1260 .getout  anop
                                            1261          mend
00000BA8                                    1262+$eye0029    ds    0d                                                    02-DCCCA
00000BA8 C4C3C3                             1263+         dc cl3'DCC'                                                    02-DCCCA
00000BAB 01                                 1264+         dc xl1'01' format one                                          02-DCCCA
00000BAC 00000000                           1265+         dc a(0)                                                        02-DCCCA
00000BB0 0000000000000C1A                   1266+         dc ad(@PER_1089)                                               02-DCCCA
00000BB8 00000000000000C8                   1267+         dc ad(200)                                                     02-DCCCA
00000BC0 0000000000000000                   1268+         dc ad(0)                                                       02-DCCCA
00000BC8 0000000000001000                   1269+         dc ad(4096)                                                    02-DCCCA
00000BD0 20                                 1270+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000BD1 03                                 1271+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000BD2 03                                 1272+         dc al1(3)                                                      02-DCCCA
00000BD3 08                                 1273+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000BD4 00                                 1274+         dc bl.8'00000000'                                              02-DCCCA
00000BD5 000000                             1275+         dc al3(0)                                                      02-DCCCA
00000BD8 0000000000000B98                   1276+         dc ad(@LNAME1089)                                              02-DCCCA
00000BE0                                    1277+         ds 0d                                                          02-DCCCA
00000BE0 0000000000000BA8                   1278+         dc ad($eye0029)                                                02-DCCCA
00000BE8 0000000000000000                   1279+         dc ad(0)                                                       02-DCCCA
00000BF0                                    1280+         ds    0d                                                       01-DCCPR
00000BF0                                    1281+rd_uclock ds   0d                                                       01-DCCPR
00000BF0                                    1282+@REGION_1089_1 ds 0h                                                    01-DCCPR
00000BF0 EBEC D008 0024          00000008   1283+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000BF6 E3E0 D088 0004          00000088   1284+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000BFC E3C0 D090 0004          00000090   1285+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000C02 B904 002E                          1286+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000C06 E3B0 C018 0004          00000018   1287+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000C0C A7EB 00C8               000000C8   1288+         aghi  14,200              increase by frame size               01-DCCPR
00000C10 E3E0 C020 0021          00000020   1289+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000C16 4720 B020               00000020   1290+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000C1A                                    1291+@PER_1089 ds   0h                                                       01-DCCPR
00000C1A EBDE 2080 0024          00000080   1292+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000C20 E3C0 2090 0024          00000090   1293+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000C26 B904 00D2                          1294+         lgr   13,2                set real frame pointer               01-DCCPR
00000C2A B904 00CF                          1295+         lgr   12,15               set base reg                         01-DCCPR
                        00000BF0            1296+         using @REGION_1089_1,12                                        01-DCCPR
                                            1297 * ******* End of Prologue
                                            1298 * *
                                            1299 * ***      struct timeval tv;
                                            1300 * ***      gettimeofday(&tv,((void *)0));
00000C2E 41F0 D0A8               000000A8   1301          LA    15,168(0,13)
00000C32 E3F0 D0B8 0024          000000B8   1302          STG   15,184(0,13)
00000C38 D707 D0C0 D0C0 000000C0 000000C0   1303          XC    192(8,13),192(13)
00000C3E 4110 D0B8               000000B8   1304          LA    1,184(0,13)
00000C42 E3F0 C0C0 0004          00000CB0   1305          LG    15,@lit_1089_31 ; gettimeofday
00000C48                                    1306 @@gen_label36 DS    0H
00000C48 05EF                               1307          BALR  14,15
00000C4A                                    1308 @@gen_label37 DS    0H
                                            1309 * ***      return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_u\
                                            1310 * sec;
                                                                                                                           Page   33 
  Active Usings: @REGION_1089_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000C4A E3F0 D0A8 0004          000000A8   1311          LG    15,168(0,13)
00000C50 C2F0 000F 4240                     1312          MSGFI 15,X'000F4240'
00000C56 E310 D0B0 0004          000000B0   1313          LG    1,176(0,13) ; offset of tv_usec in timeval
00000C5C B90A 00F1                          1314          ALGR  15,1
                                            1315 * ***   }
                                            1316 * * **** Start of Epilogue
                                            1317          DCCEPIL
00000C60                                    1318+         ds 0h                                                          01-DCCEP
                                            1319+* Epilog
00000C60 D707 D088 D088 00000088 00000088   1320+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C66 E3D0 D080 0004          00000080   1321+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C6C E3C0 D090 0004          00000090   1322+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C72 E3B0 C018 0004          00000018   1323+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C78 E3C0 B010 0021          00000010   1324+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C7E E3E0 D008 0004          00000008   1325+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C84 EB1C D020 0004          00000020   1326+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000C8A 078E                               1327+         bcr 8,14                if same dsab, just return              01-DCCEP
00000C8C E3F0 D010 0024          00000010   1328+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C92 E300 D018 0024          00000018   1329+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000C98 E3F0 D090 0004          00000090   1330+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C9E E3F0 F018 0004          00000018   1331+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CA4 47F0 F040               00000040   1332+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1333+* End of Epilog
                                            1334 * * **** End of Epilogue
00000CA8                                    1335          DS    0D
00000CA8 000000C8                           1336 @FRAMESIZE_1089 DC F'200'
00000CAC 00000000
00000CB0 0000000000000000                   1337 @lit_1089_31 DC AD(gettimeofday)
                                            1338          DROP  12
                                            1339 *
                                            1340 *   DSECT for automatic variables in "rd_uclock"
                                            1341 *      (FUNCTION #1089)
                                            1342 *
00000000                00000000 000000B8   1343 @AUTO#rd_uclock DSECT
00000000                                    1344          DS    XL168
000000A8                                    1345 rd_uclock#tv#0 DS 16XL1    ; tv
                                            1346 *
00000CB8                00000000 0000E868   1347 @CODE    CSECT
                                            1348 *
                                            1349 *
                                            1350 *
                                            1351 * ....... start of rd_interval0
00000CB8                                    1352 @LNAME1204 DS  0H
00000CB8 0000000C                           1353          DC    X'0000000C'
00000CBC 99846D8995A38599                   1354          DC    C'rd_interval0'
00000CC8 00                                 1355          DC    X'00'
                                            1356 rd_interval0 DCCPRLG CINDEX=1204,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME1204
                                            1357          macro
                                            1358          dccextrn &m
                                            1359          gblc    &$dccext(1000)
                                            1360          gbla    &$dccexti
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1361          lcla    &i
                                            1362 &$dccext(&$dccexti+1) setc    '&m'
                                            1363 &i       seta    1
                                            1364 .loop    aif    (&i gt &$dccexti).around
                                            1365          aif    ('&$dccext(&i)' eq '&m').getout
                                            1366 &i       seta    &i+1
                                            1367          ago     .loop
                                            1368 .around  anop
                                            1369 &$dccexti seta &$dccexti+1
                                            1370          extrn  &m
                                            1371 .getout  anop
                                            1372          mend
00000CD0                                    1373+$eye0032    ds    0d                                                    02-DCCCA
00000CD0 C4C3C3                             1374+         dc cl3'DCC'                                                    02-DCCCA
00000CD3 01                                 1375+         dc xl1'01' format one                                          02-DCCCA
00000CD4 00000000                           1376+         dc a(0)                                                        02-DCCCA
00000CD8 0000000000000D42                   1377+         dc ad(@PER_1204)                                               02-DCCCA
00000CE0 00000000000000B0                   1378+         dc ad(176)                                                     02-DCCCA
00000CE8 0000000000000000                   1379+         dc ad(0)                                                       02-DCCCA
00000CF0 0000000000001000                   1380+         dc ad(4096)                                                    02-DCCCA
00000CF8 20                                 1381+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000CF9 03                                 1382+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000CFA 03                                 1383+         dc al1(3)                                                      02-DCCCA
00000CFB 08                                 1384+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000CFC 00                                 1385+         dc bl.8'00000000'                                              02-DCCCA
00000CFD 000000                             1386+         dc al3(0)                                                      02-DCCCA
00000D00 0000000000000CB8                   1387+         dc ad(@LNAME1204)                                              02-DCCCA
00000D08                                    1388+         ds 0d                                                          02-DCCCA
00000D08 0000000000000CD0                   1389+         dc ad($eye0032)                                                02-DCCCA
00000D10 0000000000000000                   1390+         dc ad(0)                                                       02-DCCCA
00000D18                                    1391+         ds    0d                                                       01-DCCPR
00000D18                                    1392+rd_interval0 ds 0d                                                      01-DCCPR
00000D18                                    1393+@REGION_1204_1 ds 0h                                                    01-DCCPR
00000D18 EBEC D008 0024          00000008   1394+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D1E E3E0 D088 0004          00000088   1395+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D24 E3C0 D090 0004          00000090   1396+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D2A B904 002E                          1397+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D2E E3B0 C018 0004          00000018   1398+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000D34 A7EB 00B0               000000B0   1399+         aghi  14,176              increase by frame size               01-DCCPR
00000D38 E3E0 C020 0021          00000020   1400+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000D3E 4720 B020               00000020   1401+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000D42                                    1402+@PER_1204 ds   0h                                                       01-DCCPR
00000D42 EBDE 2080 0024          00000080   1403+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000D48 E3C0 2090 0024          00000090   1404+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000D4E B904 00D2                          1405+         lgr   13,2                set real frame pointer               01-DCCPR
00000D52 B904 00CF                          1406+         lgr   12,15               set base reg                         01-DCCPR
                        00000D18            1407+         using @REGION_1204_1,12                                        01-DCCPR
00000D56 B904 0041                          1408          LGR   4,1         ; ptr to parm area
                                            1409 * ******* End of Prologue
                                            1410 * *
00000D5A E330 4000 0004          00000000   1411          LG    3,0(0,4)    ; ri
00000D60 E320 4008 0004          00000008   1412          LG    2,8(0,4)    ; interval_us
                                                                                                                           Page   35 
  Active Usings: @REGION_1204_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D66 E3F0 4010 0004          00000010   1413          LG    15,16(0,4)  ; now
                                            1414 * ***           rd_ts_t diff;
                                            1415 * ***
                                            1416 * ***           if (!now)
00000D6C B902 001F                          1417          LTGR  1,15
00000D70 4770 C064               00000D7C   1418          BNZ   @L70
                                            1419 * ***                   now = rd_clock();
00000D74 E3F0 C0A8 0004          00000DC0   1420          LG    15,@lit_1204_33 ; rd_clock
00000D7A                                    1421 @@gen_label39 DS    0H
00000D7A 05EF                               1422          BALR  14,15
00000D7C                                    1423 @@gen_label40 DS    0H
00000D7C                                    1424 @L70     DS    0H
                                            1425 * ***           if (!interval_us)
00000D7C B902 0012                          1426          LTGR  1,2
00000D80 4770 C072               00000D8A   1427          BNZ   @L71
                                            1428 * ***                   interval_us = ri->ri_fixed;
00000D84 E320 3008 0004          00000008   1429          LG    2,8(0,3)    ; offset of ri_fixed in rd_interval_s
00000D8A                                    1430 @L71     DS    0H
                                            1431 * ***
                                            1432 * ***           if (ri->ri_ts_last || !immediate) {
00000D8A E310 3000 0002          00000000   1433          LTG   1,0(0,3)    ; ri
00000D90 4770 C086               00000D9E   1434          BNZ   @L73
00000D94 E310 401C 0012          0000001C   1435          LT    1,28(0,4)   ; immediate
00000D9A 4770 C0B0               00000DC8   1436          BNZ   @L72
00000D9E                                    1437 @L73     DS    0H
                                            1438 * ***                   diff = now - (ri->ri_ts_last + interval_us + r\
                                            1439 * i->ri_backoff);
00000D9E E320 3000 0008          00000000   1440          AG    2,0(0,3)
00000DA4 E320 3010 0018          00000010   1441          AGF   2,16(0,3)
00000DAA B904 001F                          1442          LGR   1,15
00000DAE B909 0012                          1443          SGR   1,2
                                            1444 * ***           } else
00000DB2 47F0 C0B4               00000DCC   1445          B     @L74
00000DB8                                    1446          DS    0D
00000DB8 000000B0                           1447 @FRAMESIZE_1204 DC F'176'
00000DBC 00000000
00000DC0 0000000000000AD0                   1448 @lit_1204_33 DC AD(rd_clock)
00000DC8                                    1449 @L72     DS    0H
                                            1450 * ***                   diff = 1;
00000DC8 A719 0001               00000001   1451          LGHI  1,1         ; 1
00000DCC                                    1452 @L74     DS    0H
                                            1453 * ***           if (((diff > 0))) {
00000DCC B902 0021                          1454          LTGR  2,1
00000DD0 47D0 C0C8               00000DE0   1455          BNH   @L75
                                            1456 * ***                   ri->ri_ts_last = now;
00000DD4 E3F0 3000 0024          00000000   1457          STG   15,0(0,3)   ; ri
                                            1458 * ***                   ri->ri_backoff = 0;
00000DDA E54C 3010 0000          00000010   1459          MVHI  16(3),0     ; offset of ri_backoff in rd_interval_s
                                            1460 * ***           }
00000DE0                                    1461 @L75     DS    0H
                                            1462 * ***
                                            1463 * ***           return diff;
                                                                                                                           Page   36 
  Active Usings: @REGION_1204_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000DE0 B904 00F1                          1464          LGR   15,1
                                            1465 * ***   }
                                            1466 * * **** Start of Epilogue
                                            1467          DCCEPIL
00000DE4                                    1468+         ds 0h                                                          01-DCCEP
                                            1469+* Epilog
00000DE4 D707 D088 D088 00000088 00000088   1470+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000DEA E3D0 D080 0004          00000080   1471+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000DF0 E3C0 D090 0004          00000090   1472+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000DF6 E3B0 C018 0004          00000018   1473+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000DFC E3C0 B010 0021          00000010   1474+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E02 E3E0 D008 0004          00000008   1475+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E08 EB1C D020 0004          00000020   1476+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E0E 078E                               1477+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E10 E3F0 D010 0024          00000010   1478+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E16 E300 D018 0024          00000018   1479+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E1C E3F0 D090 0004          00000090   1480+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E22 E3F0 F018 0004          00000018   1481+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E28 47F0 F040               00000040   1482+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1483+* End of Epilog
                                            1484 * * **** End of Epilogue
                                            1485          DROP  12
                                            1486 *
                                            1487 *   DSECT for automatic variables in "rd_interval0"
                                            1488 *      (FUNCTION #1204)
                                            1489 *
00000000                00000000 000000B0   1490 @AUTO#rd_interval0 DSECT
00000000                                    1491          DS    XL168
000000A8                                    1492 rd_interval0#diff#0 DS 8XL1 ; diff
                                            1493 *
00000E2C                00000000 0000E868   1494 @CODE    CSECT
                                            1495 *
                                            1496 *
                                            1497 *
                                            1498 * ....... start of rd_interval_expedite
00000E2C                                    1499 @LNAME1208 DS  0H
00000E2C 00000014                           1500          DC    X'00000014'
00000E30 99846D8995A38599                   1501          DC    C'rd_interval_expedite'
00000E44 00                                 1502          DC    X'00'
                                            1503 rd_interval_expedite DCCPRLG CINDEX=1208,BASER=12,FRAME=168,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1208
                                            1504          macro
                                            1505          dccextrn &m
                                            1506          gblc    &$dccext(1000)
                                            1507          gbla    &$dccexti
                                            1508          lcla    &i
                                            1509 &$dccext(&$dccexti+1) setc    '&m'
                                            1510 &i       seta    1
                                            1511 .loop    aif    (&i gt &$dccexti).around
                                            1512          aif    ('&$dccext(&i)' eq '&m').getout
                                            1513 &i       seta    &i+1
                                            1514          ago     .loop
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1515 .around  anop
                                            1516 &$dccexti seta &$dccexti+1
                                            1517          extrn  &m
                                            1518 .getout  anop
                                            1519          mend
00000E48                                    1520+$eye0035    ds    0d                                                    02-DCCCA
00000E48 C4C3C3                             1521+         dc cl3'DCC'                                                    02-DCCCA
00000E4B 01                                 1522+         dc xl1'01' format one                                          02-DCCCA
00000E4C 00000000                           1523+         dc a(0)                                                        02-DCCCA
00000E50 0000000000000000                   1524+         dc ad(0)                                                       02-DCCCA
00000E58 00000000000000A8                   1525+         dc ad(168)                                                     02-DCCCA
00000E60 0000000000000000                   1526+         dc ad(0)                                                       02-DCCCA
00000E68 0000000000001000                   1527+         dc ad(4096)                                                    02-DCCCA
00000E70 20                                 1528+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E71 03                                 1529+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E72 03                                 1530+         dc al1(3)                                                      02-DCCCA
00000E73 08                                 1531+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E74 00                                 1532+         dc bl.8'00000000'                                              02-DCCCA
00000E75 000000                             1533+         dc al3(0)                                                      02-DCCCA
00000E78 0000000000000E2C                   1534+         dc ad(@LNAME1208)                                              02-DCCCA
00000E80                                    1535+         ds 0d                                                          02-DCCCA
00000E80 0000000000000E48                   1536+         dc ad($eye0035)                                                02-DCCCA
00000E88 0000000000000000                   1537+         dc ad(0)                                                       02-DCCCA
00000E90                                    1538+         ds    0d                                                       01-DCCPR
00000E90                                    1539+rd_interval_expedite ds 0d                                              01-DCCPR
00000E90                                    1540+@REGION_1208_1 ds 0h                                                    01-DCCPR
00000E90 EBEC D008 0024          00000008   1541+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E96 B904 00CF                          1542+         lgr   12,15               set base reg                         01-DCCPR
                        00000E90            1543+         using @REGION_1208_1,12                                        01-DCCPR
                                            1544 * ******* End of Prologue
                                            1545 * *
                                            1546 * ***      if (!expedite_us)
00000E9A E3F0 100C 0012          0000000C   1547          LT    15,12(0,1)  ; expedite_us
00000EA0 4770 C024               00000EB4   1548          BNZ   @L77
                                            1549 * ***         ri->ri_ts_last = 0;
00000EA4 E3F0 1000 0004          00000000   1550          LG    15,0(0,1)   ; ri
00000EAA E548 F000 0000          00000000   1551          MVGHI 0(15),0     ; ri
00000EB0 47F0 C030               00000EC0   1552          B     @ret_lab_1208
                                            1553 * ***      else
00000EB4                                    1554 @L77     DS    0H
                                            1555 * ***         ri->ri_backoff = -expedite_us;
00000EB4 E310 1000 0004          00000000   1556          LG    1,0(0,1)    ; ri
00000EBA 13FF                               1557          LCR   15,15
00000EBC 50F0 1010               00000010   1558          ST    15,16(0,1)  ; offset of ri_backoff in rd_interval_s
00000EC0                                    1559 @L78     DS    0H
                                            1560 * ***   }
00000EC0                                    1561 @ret_lab_1208 DS 0H
                                            1562 * * **** Start of Epilogue
                                            1563          DCCEPIL
00000EC0                                    1564+         ds 0h                                                          01-DCCEP
                                            1565+* Epilog
                                            1566+* Epilog
                                                                                                                           Page   38 
  Active Usings: @REGION_1208_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000EC0 E3E0 D008 0004          00000008   1567+         lg    14,8(,13) restore the reg                                01-DCCEP
00000EC6 EB1C D020 0004          00000020   1568+         lmg   1,12,32(13)                                              01-DCCEP
00000ECC 07FE                               1569+         br   14                                                        01-DCCEP
                                            1570+* End of Epilog
                                            1571 * * **** End of Epilogue
                                            1572          DROP  12
                                            1573 *
                                            1574 *   DSECT for automatic variables in "rd_interval_expedite"
                                            1575 *      (FUNCTION #1208)
                                            1576 *
00000000                00000000 000000A8   1577 @AUTO#rd_interval_expedite DSECT
00000000                                    1578          DS    XL168
                                            1579 *
00000ECE                00000000 0000E868   1580 @CODE    CSECT
                                            1581 *
                                            1582 *
                                            1583 *
                                            1584 * ....... start of rd_slice_abs_offset
00000ECE                                    1585 @LNAME1286 DS  0H
00000ECE 00000013                           1586          DC    X'00000013'
00000ED2 99846DA293898385                   1587          DC    C'rd_slice_abs_offset'
00000EE5 00                                 1588          DC    X'00'
                                            1589 rd_slice_abs_offset DCCPRLG CINDEX=1286,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1286
                                            1590          macro
                                            1591          dccextrn &m
                                            1592          gblc    &$dccext(1000)
                                            1593          gbla    &$dccexti
                                            1594          lcla    &i
                                            1595 &$dccext(&$dccexti+1) setc    '&m'
                                            1596 &i       seta    1
                                            1597 .loop    aif    (&i gt &$dccexti).around
                                            1598          aif    ('&$dccext(&i)' eq '&m').getout
                                            1599 &i       seta    &i+1
                                            1600          ago     .loop
                                            1601 .around  anop
                                            1602 &$dccexti seta &$dccexti+1
                                            1603          extrn  &m
                                            1604 .getout  anop
                                            1605          mend
00000EE8                                    1606+$eye0038    ds    0d                                                    02-DCCCA
00000EE8 C4C3C3                             1607+         dc cl3'DCC'                                                    02-DCCCA
00000EEB 01                                 1608+         dc xl1'01' format one                                          02-DCCCA
00000EEC 00000000                           1609+         dc a(0)                                                        02-DCCCA
00000EF0 0000000000000000                   1610+         dc ad(0)                                                       02-DCCCA
00000EF8 00000000000000A8                   1611+         dc ad(168)                                                     02-DCCCA
00000F00 0000000000000000                   1612+         dc ad(0)                                                       02-DCCCA
00000F08 0000000000001000                   1613+         dc ad(4096)                                                    02-DCCCA
00000F10 20                                 1614+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F11 03                                 1615+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F12 03                                 1616+         dc al1(3)                                                      02-DCCCA
00000F13 08                                 1617+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F14 00                                 1618+         dc bl.8'00000000'                                              02-DCCCA
00000F15 000000                             1619+         dc al3(0)                                                      02-DCCCA
00000F18 0000000000000ECE                   1620+         dc ad(@LNAME1286)                                              02-DCCCA
00000F20                                    1621+         ds 0d                                                          02-DCCCA
00000F20 0000000000000EE8                   1622+         dc ad($eye0038)                                                02-DCCCA
00000F28 0000000000000000                   1623+         dc ad(0)                                                       02-DCCCA
00000F30                                    1624+         ds    0d                                                       01-DCCPR
00000F30                                    1625+rd_slice_abs_offset ds 0d                                               01-DCCPR
00000F30                                    1626+@REGION_1286_1 ds 0h                                                    01-DCCPR
00000F30 EBEC D008 0024          00000008   1627+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F36 B904 00CF                          1628+         lgr   12,15               set base reg                         01-DCCPR
                        00000F30            1629+         using @REGION_1286_1,12                                        01-DCCPR
                                            1630 * ******* End of Prologue
                                            1631 * *
                                            1632 * ***           if (((!slice->seg)))
00000F3A E3F0 1000 0004          00000000   1633          LG    15,0(0,1)   ; slice
00000F40 E310 F008 0002          00000008   1634          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000F46 4770 C024               00000F54   1635          BNZ   @L102
                                            1636 * ***                   return slice->end;
00000F4A E3F0 F020 0004          00000020   1637          LG    15,32(0,15) ; offset of end in rd_slice_s
00000F50 47F0 C03A               00000F6A   1638          B     @ret_lab_1286
00000F54                                    1639 @L102    DS    0H
                                            1640 * ***
                                            1641 * ***           return slice->seg->seg_absof + slice->rof;
00000F54 E310 F008 0004          00000008   1642          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000F5A E310 1028 0004          00000028   1643          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000F60 E310 F010 000A          00000010   1644          ALG   1,16(0,15)
00000F66 B904 00F1                          1645          LGR   15,1
                                            1646 * ***   }
00000F6A                                    1647 @ret_lab_1286 DS 0H
                                            1648 * * **** Start of Epilogue
                                            1649          DCCEPIL
00000F6A                                    1650+         ds 0h                                                          01-DCCEP
                                            1651+* Epilog
                                            1652+* Epilog
00000F6A E3E0 D008 0004          00000008   1653+         lg    14,8(,13) restore the reg                                01-DCCEP
00000F70 EB1C D020 0004          00000020   1654+         lmg   1,12,32(13)                                              01-DCCEP
00000F76 07FE                               1655+         br   14                                                        01-DCCEP
                                            1656+* End of Epilog
                                            1657 * * **** End of Epilogue
                                            1658          DROP  12
                                            1659 *
                                            1660 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                            1661 *      (FUNCTION #1286)
                                            1662 *
00000000                00000000 000000A8   1663 @AUTO#rd_slice_abs_offset DSECT
00000000                                    1664          DS    XL168
                                            1665 *
00000F78                00000000 0000E868   1666 @CODE    CSECT
                                            1667 *
                                            1668 *
                                            1669 *
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1670 * ....... start of rd_slice_offset
00000F78                                    1671 @LNAME1287 DS  0H
00000F78 0000000F                           1672          DC    X'0000000F'
00000F7C 99846DA293898385                   1673          DC    C'rd_slice_offset'
00000F8B 00                                 1674          DC    X'00'
                                            1675 rd_slice_offset DCCPRLG CINDEX=1287,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1287
                                            1676          macro
                                            1677          dccextrn &m
                                            1678          gblc    &$dccext(1000)
                                            1679          gbla    &$dccexti
                                            1680          lcla    &i
                                            1681 &$dccext(&$dccexti+1) setc    '&m'
                                            1682 &i       seta    1
                                            1683 .loop    aif    (&i gt &$dccexti).around
                                            1684          aif    ('&$dccext(&i)' eq '&m').getout
                                            1685 &i       seta    &i+1
                                            1686          ago     .loop
                                            1687 .around  anop
                                            1688 &$dccexti seta &$dccexti+1
                                            1689          extrn  &m
                                            1690 .getout  anop
                                            1691          mend
00000F90                                    1692+$eye0041    ds    0d                                                    02-DCCCA
00000F90 C4C3C3                             1693+         dc cl3'DCC'                                                    02-DCCCA
00000F93 01                                 1694+         dc xl1'01' format one                                          02-DCCCA
00000F94 00000000                           1695+         dc a(0)                                                        02-DCCCA
00000F98 0000000000000000                   1696+         dc ad(0)                                                       02-DCCCA
00000FA0 00000000000000A8                   1697+         dc ad(168)                                                     02-DCCCA
00000FA8 0000000000000000                   1698+         dc ad(0)                                                       02-DCCCA
00000FB0 0000000000001000                   1699+         dc ad(4096)                                                    02-DCCCA
00000FB8 20                                 1700+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FB9 03                                 1701+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000FBA 03                                 1702+         dc al1(3)                                                      02-DCCCA
00000FBB 08                                 1703+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FBC 00                                 1704+         dc bl.8'00000000'                                              02-DCCCA
00000FBD 000000                             1705+         dc al3(0)                                                      02-DCCCA
00000FC0 0000000000000F78                   1706+         dc ad(@LNAME1287)                                              02-DCCCA
00000FC8                                    1707+         ds 0d                                                          02-DCCCA
00000FC8 0000000000000F90                   1708+         dc ad($eye0041)                                                02-DCCCA
00000FD0 0000000000000000                   1709+         dc ad(0)                                                       02-DCCCA
00000FD8                                    1710+         ds    0d                                                       01-DCCPR
00000FD8                                    1711+rd_slice_offset ds 0d                                                   01-DCCPR
00000FD8                                    1712+@REGION_1287_1 ds 0h                                                    01-DCCPR
00000FD8 EBEC D008 0024          00000008   1713+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FDE B904 00CF                          1714+         lgr   12,15               set base reg                         01-DCCPR
                        00000FD8            1715+         using @REGION_1287_1,12                                        01-DCCPR
                                            1716 * ******* End of Prologue
                                            1717 * *
                                            1718 * ***           if (((!slice->seg)))
00000FE2 E3F0 1000 0004          00000000   1719          LG    15,0(0,1)   ; slice
00000FE8 E310 F008 0002          00000008   1720          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
                                                                                                                           Page   41 
  Active Usings: @REGION_1287_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000FEE 4770 C02E               00001006   1721          BNZ   @L103
                                            1722 * ***                   return ((slice)->end - (slice)->start);
00000FF2 E310 F020 0004          00000020   1723          LG    1,32(0,15)  ; offset of end in rd_slice_s
00000FF8 E310 F018 000B          00000018   1724          SLG   1,24(0,15)
00000FFE B904 00F1                          1725          LGR   15,1
00001002 47F0 C04A               00001022   1726          B     @ret_lab_1287
00001006                                    1727 @L103    DS    0H
                                            1728 * ***
                                            1729 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                            1730 * tart;
00001006 E310 F008 0004          00000008   1731          LG    1,8(0,15)   ; offset of seg in rd_slice_s
0000100C E310 1028 0004          00000028   1732          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00001012 E310 F010 000A          00000010   1733          ALG   1,16(0,15)
00001018 E310 F018 000B          00000018   1734          SLG   1,24(0,15)
0000101E B904 00F1                          1735          LGR   15,1
                                            1736 * ***   }
00001022                                    1737 @ret_lab_1287 DS 0H
                                            1738 * * **** Start of Epilogue
                                            1739          DCCEPIL
00001022                                    1740+         ds 0h                                                          01-DCCEP
                                            1741+* Epilog
                                            1742+* Epilog
00001022 E3E0 D008 0004          00000008   1743+         lg    14,8(,13) restore the reg                                01-DCCEP
00001028 EB1C D020 0004          00000020   1744+         lmg   1,12,32(13)                                              01-DCCEP
0000102E 07FE                               1745+         br   14                                                        01-DCCEP
                                            1746+* End of Epilog
                                            1747 * * **** End of Epilogue
                                            1748          DROP  12
                                            1749 *
                                            1750 *   DSECT for automatic variables in "rd_slice_offset"
                                            1751 *      (FUNCTION #1287)
                                            1752 *
00000000                00000000 000000A8   1753 @AUTO#rd_slice_offset DSECT
00000000                                    1754          DS    XL168
                                            1755 *
00001030                00000000 0000E868   1756 @CODE    CSECT
                                            1757 *
                                            1758 *
                                            1759 *
                                            1760 * ....... start of rd_slice_read_varint
00001030                                    1761 @LNAME1296 DS  0H
00001030 00000014                           1762          DC    X'00000014'
00001034 99846DA293898385                   1763          DC    C'rd_slice_read_varint'
00001048 00                                 1764          DC    X'00'
                                            1765 rd_slice_read_varint DCCPRLG CINDEX=1296,BASER=12,FRAME=192,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1296
                                            1766          macro
                                            1767          dccextrn &m
                                            1768          gblc    &$dccext(1000)
                                            1769          gbla    &$dccexti
                                            1770          lcla    &i
                                            1771 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1772 &i       seta    1
                                            1773 .loop    aif    (&i gt &$dccexti).around
                                            1774          aif    ('&$dccext(&i)' eq '&m').getout
                                            1775 &i       seta    &i+1
                                            1776          ago     .loop
                                            1777 .around  anop
                                            1778 &$dccexti seta &$dccexti+1
                                            1779          extrn  &m
                                            1780 .getout  anop
                                            1781          mend
00001050                                    1782+$eye0044    ds    0d                                                    02-DCCCA
00001050 C4C3C3                             1783+         dc cl3'DCC'                                                    02-DCCCA
00001053 01                                 1784+         dc xl1'01' format one                                          02-DCCCA
00001054 00000000                           1785+         dc a(0)                                                        02-DCCCA
00001058 00000000000010C2                   1786+         dc ad(@PER_1296)                                               02-DCCCA
00001060 00000000000000C0                   1787+         dc ad(192)                                                     02-DCCCA
00001068 0000000000000000                   1788+         dc ad(0)                                                       02-DCCCA
00001070 0000000000001000                   1789+         dc ad(4096)                                                    02-DCCCA
00001078 20                                 1790+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001079 03                                 1791+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000107A 03                                 1792+         dc al1(3)                                                      02-DCCCA
0000107B 08                                 1793+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000107C 00                                 1794+         dc bl.8'00000000'                                              02-DCCCA
0000107D 000000                             1795+         dc al3(0)                                                      02-DCCCA
00001080 0000000000001030                   1796+         dc ad(@LNAME1296)                                              02-DCCCA
00001088                                    1797+         ds 0d                                                          02-DCCCA
00001088 0000000000001050                   1798+         dc ad($eye0044)                                                02-DCCCA
00001090 0000000000000000                   1799+         dc ad(0)                                                       02-DCCCA
00001098                                    1800+         ds    0d                                                       01-DCCPR
00001098                                    1801+rd_slice_read_varint ds 0d                                              01-DCCPR
00001098                                    1802+@REGION_1296_1 ds 0h                                                    01-DCCPR
00001098 EBEC D008 0024          00000008   1803+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000109E E3E0 D088 0004          00000088   1804+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010A4 E3C0 D090 0004          00000090   1805+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010AA B904 002E                          1806+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010AE E3B0 C018 0004          00000018   1807+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000010B4 A7EB 00C0               000000C0   1808+         aghi  14,192              increase by frame size               01-DCCPR
000010B8 E3E0 C020 0021          00000020   1809+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000010BE 4720 B020               00000020   1810+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010C2                                    1811+@PER_1296 ds   0h                                                       01-DCCPR
000010C2 EBDE 2080 0024          00000080   1812+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000010C8 E3C0 2090 0024          00000090   1813+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000010CE B904 00D2                          1814+         lgr   13,2                set real frame pointer               01-DCCPR
000010D2 B904 00CF                          1815+         lgr   12,15               set base reg                         01-DCCPR
                        00001098            1816+         using @REGION_1296_1,12                                        01-DCCPR
000010D6 B904 0021                          1817          LGR   2,1         ; ptr to parm area
                                            1818 * ******* End of Prologue
                                            1819 * *
                                            1820 * ***           size_t r;
                                            1821 * ***           uint64_t unum;
                                            1822 * ***
                                            1823 * ***           r = rd_slice_read_uvarint(slice, &unum);
                                                                                                                           Page   43 
  Active Usings: @REGION_1296_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000010DA E3F0 2000 0004          00000000   1824          LG    15,0(0,2)   ; slice
000010E0 E3F0 D0B0 0024          000000B0   1825          STG   15,176(0,13)
000010E6 41F0 D0A8               000000A8   1826          LA    15,168(0,13)
000010EA E3F0 D0B8 0024          000000B8   1827          STG   15,184(0,13)
000010F0 4110 D0B0               000000B0   1828          LA    1,176(0,13)
000010F4 E3F0 C0E8 0004          00001180   1829          LG    15,@lit_1296_36 ; rd_slice_read_uvarint
000010FA                                    1830 @@gen_label48 DS    0H
000010FA 05EF                               1831          BALR  14,15
000010FC                                    1832 @@gen_label49 DS    0H
                                            1833 * ***           if (((r > 0))) {
000010FC C2FE 0000 0000                     1834          CLGFI 15,X'00000000'
00001102 47D0 C094               0000112C   1835          BNH   @L104
                                            1836 * ***
                                            1837 * ***                   *nump = (int64_t)((unum >> 1) ^
                                            1838 * ***                                     -(int64_t)(unum & 1));
00001106 E310 2008 0004          00000008   1839          LG    1,8(0,2)    ; nump
0000110C E320 D0A8 0004          000000A8   1840          LG    2,168(0,13) ; unum
00001112 EB32 0001 000C          00000001   1841          SRLG  3,2,1(0)
00001118 E320 C0F0 0080          00001188   1842          NG    2,@lit_1296_37
0000111E B903 0022                          1843          LCGR  2,2
00001122 B982 0032                          1844          XGR   3,2
00001126 E330 1000 0024          00000000   1845          STG   3,0(0,1)    ; nump
                                            1846 * ***           }
0000112C                                    1847 @L104    DS    0H
                                            1848 * ***
                                            1849 * ***           return r;
                                            1850 * ***   }
                                            1851 * * **** Start of Epilogue
                                            1852          DCCEPIL
0000112C                                    1853+         ds 0h                                                          01-DCCEP
                                            1854+* Epilog
0000112C D707 D088 D088 00000088 00000088   1855+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001132 E3D0 D080 0004          00000080   1856+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001138 E3C0 D090 0004          00000090   1857+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000113E E3B0 C018 0004          00000018   1858+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001144 E3C0 B010 0021          00000010   1859+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000114A E3E0 D008 0004          00000008   1860+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001150 EB1C D020 0004          00000020   1861+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001156 078E                               1862+         bcr 8,14                if same dsab, just return              01-DCCEP
00001158 E3F0 D010 0024          00000010   1863+         stg 15,16(0,13)         save return code                       01-DCCEP
0000115E E300 D018 0024          00000018   1864+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001164 E3F0 D090 0004          00000090   1865+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000116A E3F0 F018 0004          00000018   1866+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001170 47F0 F040               00000040   1867+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1868+* End of Epilog
                                            1869 * * **** End of Epilogue
00001178                                    1870          DS    0D
00001178 000000C0                           1871 @FRAMESIZE_1296 DC F'192'
0000117C 00000000
00001180 0000000000000000                   1872 @lit_1296_36 DC AD(rd_slice_read_uvarint)
00001188 0000000000000001                   1873 @lit_1296_37 DC FD'1' 0x0000000000000001
                                            1874          DROP  12
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1875 *
                                            1876 *   DSECT for automatic variables in "rd_slice_read_varint"
                                            1877 *      (FUNCTION #1296)
                                            1878 *
00000000                00000000 000000B0   1879 @AUTO#rd_slice_read_varint DSECT
00000000                                    1880          DS    XL168
000000A8                                    1881 rd_slice_read_varint#unum#0 DS 8XL1 ; unum
000000B0                000000B0 000000A8   1882          ORG   @AUTO#rd_slice_read_varint+168
000000A8                                    1883 rd_slice_read_varint#r#0 DS 8XL1 ; r
                                            1884 *
00001190                00000000 0000E868   1885 @CODE    CSECT
                                            1886 *
                                            1887 *
                                            1888 *
                                            1889 * ....... start of rd_kafka_ApiKey2str
00001190                                    1890 @LNAME1314 DS  0H
00001190 00000013                           1891          DC    X'00000013'
00001194 99846D9281869281                   1892          DC    C'rd_kafka_ApiKey2str'
000011A7 00                                 1893          DC    X'00'
                                            1894 rd_kafka_$Api$Key2str DCCPRLG CINDEX=1314,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1314
                                            1895          macro
                                            1896          dccextrn &m
                                            1897          gblc    &$dccext(1000)
                                            1898          gbla    &$dccexti
                                            1899          lcla    &i
                                            1900 &$dccext(&$dccexti+1) setc    '&m'
                                            1901 &i       seta    1
                                            1902 .loop    aif    (&i gt &$dccexti).around
                                            1903          aif    ('&$dccext(&i)' eq '&m').getout
                                            1904 &i       seta    &i+1
                                            1905          ago     .loop
                                            1906 .around  anop
                                            1907 &$dccexti seta &$dccexti+1
                                            1908          extrn  &m
                                            1909 .getout  anop
                                            1910          mend
000011A8                                    1911+$eye0047    ds    0d                                                    02-DCCCA
000011A8 C4C3C3                             1912+         dc cl3'DCC'                                                    02-DCCCA
000011AB 01                                 1913+         dc xl1'01' format one                                          02-DCCCA
000011AC 00000000                           1914+         dc a(0)                                                        02-DCCCA
000011B0 000000000000121A                   1915+         dc ad(@PER_1314)                                               02-DCCCA
000011B8 00000000000000C8                   1916+         dc ad(200)                                                     02-DCCCA
000011C0 0000000000000000                   1917+         dc ad(0)                                                       02-DCCCA
000011C8 0000000000001000                   1918+         dc ad(4096)                                                    02-DCCCA
000011D0 20                                 1919+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000011D1 03                                 1920+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000011D2 03                                 1921+         dc al1(3)                                                      02-DCCCA
000011D3 08                                 1922+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000011D4 00                                 1923+         dc bl.8'00000000'                                              02-DCCCA
000011D5 000000                             1924+         dc al3(0)                                                      02-DCCCA
000011D8 0000000000001190                   1925+         dc ad(@LNAME1314)                                              02-DCCCA
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000011E0                                    1926+         ds 0d                                                          02-DCCCA
000011E0 00000000000011A8                   1927+         dc ad($eye0047)                                                02-DCCCA
000011E8 0000000000000000                   1928+         dc ad(0)                                                       02-DCCCA
000011F0                                    1929+         ds    0d                                                       01-DCCPR
000011F0                                    1930+rd_kafka_$Api$Key2str ds 0d                                             01-DCCPR
000011F0                                    1931+@REGION_1314_1 ds 0h                                                    01-DCCPR
000011F0 EBEC D008 0024          00000008   1932+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000011F6 E3E0 D088 0004          00000088   1933+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000011FC E3C0 D090 0004          00000090   1934+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001202 B904 002E                          1935+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001206 E3B0 C018 0004          00000018   1936+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000120C A7EB 00C8               000000C8   1937+         aghi  14,200              increase by frame size               01-DCCPR
00001210 E3E0 C020 0021          00000020   1938+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001216 4720 B020               00000020   1939+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000121A                                    1940+@PER_1314 ds   0h                                                       01-DCCPR
0000121A EBDE 2080 0024          00000080   1941+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001220 E3C0 2090 0024          00000090   1942+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001226 B904 00D2                          1943+         lgr   13,2                set real frame pointer               01-DCCPR
0000122A B904 00CF                          1944+         lgr   12,15               set base reg                         01-DCCPR
                        000011F0            1945+         using @REGION_1314_1,12                                        01-DCCPR
                                            1946          DCCPRV REG=15     ; Get PRV from DVT
0000122E E3F0 B008 0004          00000008   1947+         LG 15,8(0,11)                                                  01-DCCPR
                                            1948 * ******* End of Prologue
                                            1949 * *
                                            1950 * ***           static const char *names[] = {
                                            1951 * ***                   [0] = "Produce",
                                            1952 * ***                   [1] = "Fetch",
                                            1953 * ***                   [2] = "Offset",
                                            1954 * ***                   [3] = "Metadata",
                                            1955 * ***                   [4] = "LeaderAndIsr",
                                            1956 * ***                   [5] = "StopReplica",
                                            1957 * ***                   [6] = "UpdateMetadata",
                                            1958 * ***                   [7] = "ControlledShutdown",
                                            1959 * ***                   [8] = "OffsetCommit",
                                            1960 * ***                   [9] = "OffsetFetch",
                                            1961 * ***                   [10] = "FindCoordinator",
                                            1962 * ***                   [11] = "JoinGroup",
                                            1963 * ***                   [12] = "Heartbeat",
                                            1964 * ***                   [13] = "LeaveGroup",
                                            1965 * ***                   [14] = "SyncGroup",
                                            1966 * ***                   [15] = "DescribeGroups",
                                            1967 * ***                   [16] = "ListGroups",
                                            1968 * ***                   [17] = "SaslHandshake",
                                            1969 * ***                   [18] = "ApiVersion",
                                            1970 * ***                   [19] = "CreateTopics",
                                            1971 * ***                   [20] = "DeleteTopics",
                                            1972 * ***                   [21] = "DeleteRecords",
                                            1973 * ***                   [22] = "InitProducerId",
                                            1974 * ***                   [23] = "OffsetForLeaderEpoch",
                                            1975 * ***                   [24] = "AddPartitionsToTxn",
                                            1976 * ***                   [25] = "AddOffsetsToTxn",
                                            1977 * ***                   [26] = "EndTxn",
                                                                                                                           Page   46 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1978 * ***                   [27] = "WriteTxnMarkers",
                                            1979 * ***                   [28] = "TxnOffsetCommit",
                                            1980 * ***                   [29] = "DescribeAcls",
                                            1981 * ***                   [30] = "CreateAcls",
                                            1982 * ***                   [31] = "DeleteAcls",
                                            1983 * ***                   [32] = "DescribeConfigs",
                                            1984 * ***                   [33] = "AlterConfigs",
                                            1985 * ***                   [34] = "AlterReplicaLogDirs",
                                            1986 * ***                   [35] = "DescribeLogDirs",
                                            1987 * ***                   [36] = "SaslAuthenticate",
                                            1988 * ***                   [37] = "CreatePartitions",
                                            1989 * ***                   [38] = "CreateDelegationToken",
                                            1990 * ***                   [39] = "RenewDelegationToken",
                                            1991 * ***                   [40] = "ExpireDelegationToken",
                                            1992 * ***                   [41] = "DescribeDelegationToken",
                                            1993 * ***                   [42] = "DeleteGroups",
                                            1994 * ***                   [43] = "ElectLeadersRequest",
                                            1995 * ***                   [44] =
                                            1996 * ***                   "IncrementalAlterConfigsRequest",
                                            1997 * ***                   [45] =
                                            1998 * ***                   "AlterPartitionReassignmentsRequest",
                                            1999 * ***                   [46] =
                                            2000 * ***                   "ListPartitionReassignmentsRequest",
                                            2001 * ***                   [47] = "OffsetDeleteRequest",
                                            2002 * ***                   [48] =
                                            2003 * ***                   "DescribeClientQuotasRequest",
                                            2004 * ***                   [49] =
                                            2005 * ***                   "AlterClientQuotasRequest",
                                            2006 * ***                   [50] =
                                            2007 * ***                   "DescribeUserScramCredentialsRequest",
                                            2008 * ***                   [51] =
                                            2009 * ***                   "AlterUserScramCredentialsRequest",
                                            2010 * ***                   [52] = "VoteRequest",
                                            2011 * ***                   [53] = "BeginQuorumEpochRequest",
                                            2012 * ***                   [54] = "EndQuorumEpochRequest",
                                            2013 * ***                   [55] = "DescribeQuorumRequest",
                                            2014 * ***                   [56] = "AlterIsrRequest",
                                            2015 * ***                   [57] = "UpdateFeaturesRequest",
                                            2016 * ***                   [58] = "EnvelopeRequest",
                                            2017 * ***           };
                                            2018 * ***           static  char ret[64];
                                            2019 * ***
                                            2020 * ***           if (ApiKey < 0 || ApiKey >= (int)(sizeof((names)) / si\
                                            2021 * zeof(*(names))) ||
00001234 4820 1006               00000006   2022          LH    2,6(0,1)    ; ApiKey
00001238 1222                               2023          LTR   2,2
0000123A 4740 C07A               0000126A   2024          BL    @L119
0000123E 4820 1006               00000006   2025          LH    2,6(0,1)    ; ApiKey
00001242 A72E 003B               0000003B   2026          CHI   2,59
00001246 47B0 C07A               0000126A   2027          BNL   @L119
0000124A                                    2028 @L117    DS    0H
                                            2029 * ***               !names[ApiKey]) {
                                                                                                                           Page   47 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000124A E320 1006 0015          00000006   2030          LGH   2,6(0,1)    ; ApiKey
00001250 E330 C0CC 0014          000012BC   2031          LGF   3,@lit_1314_39
00001256 4133 F000               00000000   2032          LA    3,0(3,15)
0000125A EB22 0003 000D          00000003   2033          SLLG  2,2,3(0)    ; *0x8
00001260 E322 3220 0002          00000220   2034          LTG   2,544(2,3)
00001266 4770 C0E0               000012D0   2035          BNZ   @L118
0000126A                                    2036 @L119    DS    0H
                                            2037 * ***                   snprintf(ret, sizeof(ret), "Unknown-%hd?", Api\
                                            2038 * Key);
0000126A E320 C0CC 0014          000012BC   2039          LGF   2,@lit_1314_39
00001270 4122 F000               00000000   2040          LA    2,0(2,15)
00001274 41F0 23F8               000003F8   2041          LA    15,1016(0,2)
00001278 E3F0 D0A8 0024          000000A8   2042          STG   15,168(0,13)
0000127E E548 D0B0 0040          000000B0   2043          MVGHI 176(13),64
00001284 E3F0 C0D8 0004          000012C8   2044          LG    15,@lit_1314_41
0000128A 41F0 F046               00000046   2045          LA    15,70(0,15)
0000128E E3F0 D0B8 0024          000000B8   2046          STG   15,184(0,13)
00001294 48F0 1006               00000006   2047          LH    15,6(0,1)   ; ApiKey
00001298 B914 00FF                          2048          LGFR  15,15
0000129C E3F0 D0C0 0024          000000C0   2049          STG   15,192(0,13)
000012A2 4110 D0A8               000000A8   2050          LA    1,168(0,13)
000012A6 E3F0 C0D0 0004          000012C0   2051          LG    15,@lit_1314_42 ; snprintf
000012AC                                    2052 @@gen_label54 DS    0H
000012AC 05EF                               2053          BALR  14,15
000012AE                                    2054 @@gen_label55 DS    0H
                                            2055 * ***                   return ret;
000012AE 41F0 23F8               000003F8   2056          LA    15,1016(0,2)
000012B2 47F0 C0F2               000012E2   2057          B     @ret_lab_1314
000012B8                                    2058          DS    0D
000012B8 000000C8                           2059 @FRAMESIZE_1314 DC F'200'
000012BC 00000000                           2060 @lit_1314_39 DC Q(@@STATIC)
000012C0 0000000000000000                   2061 @lit_1314_42 DC AD(snprintf)
000012C8 000000000000ECA4                   2062 @lit_1314_41 DC AD(@strings@)
                                            2063 * ***           }
000012D0                                    2064 @L118    DS    0H
                                            2065 * ***
                                            2066 * ***           return names[ApiKey];
000012D0 E3F0 1006 0015          00000006   2067          LGH   15,6(0,1)   ; ApiKey
000012D6 EBFF 0003 000D          00000003   2068          SLLG  15,15,3(0)  ; *0x8
000012DC E3FF 3220 0004          00000220   2069          LG    15,544(15,3)
                                            2070 * ***   }
000012E2                                    2071 @ret_lab_1314 DS 0H
                                            2072 * * **** Start of Epilogue
                                            2073          DCCEPIL
000012E2                                    2074+         ds 0h                                                          01-DCCEP
                                            2075+* Epilog
000012E2 D707 D088 D088 00000088 00000088   2076+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012E8 E3D0 D080 0004          00000080   2077+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012EE E3C0 D090 0004          00000090   2078+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012F4 E3B0 C018 0004          00000018   2079+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012FA E3C0 B010 0021          00000010   2080+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001300 E3E0 D008 0004          00000008   2081+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   48 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001306 EB1C D020 0004          00000020   2082+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000130C 078E                               2083+         bcr 8,14                if same dsab, just return              01-DCCEP
0000130E E3F0 D010 0024          00000010   2084+         stg 15,16(0,13)         save return code                       01-DCCEP
00001314 E300 D018 0024          00000018   2085+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000131A E3F0 D090 0004          00000090   2086+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001320 E3F0 F018 0004          00000018   2087+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001326 47F0 F040               00000040   2088+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2089+* End of Epilog
                                            2090 * * **** End of Epilogue
                                            2091          DROP  12
                                            2092 *
                                            2093 *   DSECT for automatic variables in "rd_kafka_ApiKey2str"
                                            2094 *      (FUNCTION #1314)
                                            2095 *
00000000                00000000 000000A8   2096 @AUTO#rd_kafka_$Api$Key2str DSECT
00000000                                    2097          DS    XL168
                                            2098 *
0000132A                00000000 0000E868   2099 @CODE    CSECT
                                            2100 *
                                            2101 *
                                            2102 *
                                            2103 * ....... start of rd_kafka_headers_serialized_size
0000132A                                    2104 @LNAME1333 DS  0H
0000132A 00000020                           2105          DC    X'00000020'
0000132E 99846D9281869281                   2106          DC    C'rd_kafka_headers_serialized_size'
0000134E 00                                 2107          DC    X'00'
                                            2108 rd_kafka_headers_serialized_size DCCPRLG CINDEX=1333,BASER=0,FRAME=168,*
                                                                SAVEAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1333
                                            2109          macro
                                            2110          dccextrn &m
                                            2111          gblc    &$dccext(1000)
                                            2112          gbla    &$dccexti
                                            2113          lcla    &i
                                            2114 &$dccext(&$dccexti+1) setc    '&m'
                                            2115 &i       seta    1
                                            2116 .loop    aif    (&i gt &$dccexti).around
                                            2117          aif    ('&$dccext(&i)' eq '&m').getout
                                            2118 &i       seta    &i+1
                                            2119          ago     .loop
                                            2120 .around  anop
                                            2121 &$dccexti seta &$dccexti+1
                                            2122          extrn  &m
                                            2123 .getout  anop
                                            2124          mend
00001350                                    2125+$eye0051    ds    0d                                                    02-DCCCA
00001350 C4C3C3                             2126+         dc cl3'DCC'                                                    02-DCCCA
00001353 01                                 2127+         dc xl1'01' format one                                          02-DCCCA
00001354 00000000                           2128+         dc a(0)                                                        02-DCCCA
00001358 0000000000000000                   2129+         dc ad(0)                                                       02-DCCCA
00001360 00000000000000A8                   2130+         dc ad(168)                                                     02-DCCCA
00001368 0000000000000000                   2131+         dc ad(0)                                                       02-DCCCA
00001370 0000000000001000                   2132+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001378 20                                 2133+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001379 03                                 2134+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000137A 03                                 2135+         dc al1(3)                                                      02-DCCCA
0000137B 08                                 2136+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000137C 00                                 2137+         dc bl.8'00000000'                                              02-DCCCA
0000137D 000000                             2138+         dc al3(0)                                                      02-DCCCA
00001380 000000000000132A                   2139+         dc ad(@LNAME1333)                                              02-DCCCA
00001388                                    2140+         ds 0d                                                          02-DCCCA
00001388 0000000000001350                   2141+         dc ad($eye0051)                                                02-DCCCA
00001390 0000000000000000                   2142+         dc ad(0)                                                       02-DCCCA
00001398                                    2143+         ds    0d                                                       01-DCCPR
00001398                                    2144+rd_kafka_headers_serialized_size ds 0d                                  01-DCCPR
00001398                                    2145+@REGION_1333_1 ds 0h                                                    01-DCCPR
00001398 EBEC D008 0024          00000008   2146+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2147 * ******* End of Prologue
                                            2148 * *
                                            2149 * ***           return hdrs->rkhdrs_ser_size;
0000139E E3F0 1000 0004          00000000   2150          LG    15,0(0,1)   ; hdrs
000013A4 E3F0 F028 0004          00000028   2151          LG    15,40(0,15) ; offset of rkhdrs_ser_size in rd_kafka_head*
                                                                ers_s
                                            2152 * ***   }
                                            2153 * * **** Start of Epilogue
                                            2154          DCCEPIL
000013AA                                    2155+         ds 0h                                                          01-DCCEP
                                            2156+* Epilog
                                            2157+* Epilog
000013AA E3E0 D008 0004          00000008   2158+         lg    14,8(,13) restore the reg                                01-DCCEP
000013B0 EB1C D020 0004          00000020   2159+         lmg   1,12,32(13)                                              01-DCCEP
000013B6 07FE                               2160+         br   14                                                        01-DCCEP
                                            2161+* End of Epilog
                                            2162 * * **** End of Epilogue
                                            2163 *
                                            2164 *   DSECT for automatic variables in "rd_kafka_headers_serialized_size"
                                            2165 *      (FUNCTION #1333)
                                            2166 *
00000000                00000000 000000A8   2167 @AUTO#rd_kafka_headers_serialized_size DSECT
00000000                                    2168          DS    XL168
                                            2169 *
000013B8                00000000 0000E868   2170 @CODE    CSECT
                                            2171 *
                                            2172 *
                                            2173 *
                                            2174 * ....... start of rd_kafka_msg_max_wire_size
000013B8                                    2175 @LNAME1335 DS  0H
000013B8 0000001A                           2176          DC    X'0000001A'
000013BC 99846D9281869281                   2177          DC    C'rd_kafka_msg_max_wire_size'
000013D6 00                                 2178          DC    X'00'
                                            2179 rd_kafka_msg_max_wire_size DCCPRLG CINDEX=1335,BASER=0,FRAME=168,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1335
                                            2180          macro
                                            2181          dccextrn &m
                                            2182          gblc    &$dccext(1000)
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2183          gbla    &$dccexti
                                            2184          lcla    &i
                                            2185 &$dccext(&$dccexti+1) setc    '&m'
                                            2186 &i       seta    1
                                            2187 .loop    aif    (&i gt &$dccexti).around
                                            2188          aif    ('&$dccext(&i)' eq '&m').getout
                                            2189 &i       seta    &i+1
                                            2190          ago     .loop
                                            2191 .around  anop
                                            2192 &$dccexti seta &$dccexti+1
                                            2193          extrn  &m
                                            2194 .getout  anop
                                            2195          mend
000013D8                                    2196+$eye0054    ds    0d                                                    02-DCCCA
000013D8 C4C3C3                             2197+         dc cl3'DCC'                                                    02-DCCCA
000013DB 01                                 2198+         dc xl1'01' format one                                          02-DCCCA
000013DC 00000000                           2199+         dc a(0)                                                        02-DCCCA
000013E0 0000000000000000                   2200+         dc ad(0)                                                       02-DCCCA
000013E8 00000000000000A8                   2201+         dc ad(168)                                                     02-DCCCA
000013F0 0000000000000000                   2202+         dc ad(0)                                                       02-DCCCA
000013F8 0000000000001000                   2203+         dc ad(4096)                                                    02-DCCCA
00001400 20                                 2204+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001401 03                                 2205+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001402 03                                 2206+         dc al1(3)                                                      02-DCCCA
00001403 08                                 2207+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001404 00                                 2208+         dc bl.8'00000000'                                              02-DCCCA
00001405 000000                             2209+         dc al3(0)                                                      02-DCCCA
00001408 00000000000013B8                   2210+         dc ad(@LNAME1335)                                              02-DCCCA
00001410                                    2211+         ds 0d                                                          02-DCCCA
00001410 00000000000013D8                   2212+         dc ad($eye0054)                                                02-DCCCA
00001418 0000000000000000                   2213+         dc ad(0)                                                       02-DCCCA
00001420                                    2214+         ds    0d                                                       01-DCCPR
00001420                                    2215+rd_kafka_msg_max_wire_size ds 0d                                        01-DCCPR
00001420                                    2216+@REGION_1335_1 ds 0h                                                    01-DCCPR
00001420 EBEC D008 0024          00000008   2217+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2218 * ******* End of Prologue
                                            2219 * *
                                            2220 * ***           return ( (sizeof(int32_t) + 1 + (sizeof(int32_t)/7)) +\
                                            2221 *  1 + (sizeof(int64_t) + 1 + (sizeof(int64_t)/7)) + (sizeof(int32_t) \
                                            2222 * + 1 + (sizeof(int32_t)/7)) + (sizeof(int32_t) + 1 + (sizeof(int32_t)\
                                            2223 * /7)) + (sizeof(int32_t) + 1 + (sizeof(int32_t)/7)) + (sizeof(int32_t\
                                            2224 * ) + 1 + (sizeof(int32_t)/7)) ) +
                                            2225 * ***                   keylen + valuelen + hdrslen;
00001426 E3F0 1000 0004          00000000   2226          LG    15,0(0,1)   ; keylen
0000142C A7FB 0024               00000024   2227          AGHI  15,36
00001430 E3F0 1008 000A          00000008   2228          ALG   15,8(0,1)
00001436 E3F0 1010 000A          00000010   2229          ALG   15,16(0,1)
                                            2230 * ***   }
                                            2231 * * **** Start of Epilogue
                                            2232          DCCEPIL
0000143C                                    2233+         ds 0h                                                          01-DCCEP
                                            2234+* Epilog
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2235+* Epilog
0000143C E3E0 D008 0004          00000008   2236+         lg    14,8(,13) restore the reg                                01-DCCEP
00001442 EB1C D020 0004          00000020   2237+         lmg   1,12,32(13)                                              01-DCCEP
00001448 07FE                               2238+         br   14                                                        01-DCCEP
                                            2239+* End of Epilog
                                            2240 * * **** End of Epilogue
                                            2241 *
                                            2242 *   DSECT for automatic variables in "rd_kafka_msg_max_wire_size"
                                            2243 *      (FUNCTION #1335)
                                            2244 *
00000000                00000000 000000A8   2245 @AUTO#rd_kafka_msg_max_wire_size DSECT
00000000                                    2246          DS    XL168
                                            2247 *
0000144A                00000000 0000E868   2248 @CODE    CSECT
                                            2249 *
                                            2250 *
                                            2251 *
                                            2252 * ....... start of rd_kafka_message2msg
0000144A                                    2253 @LNAME1336 DS  0H
0000144A 00000014                           2254          DC    X'00000014'
0000144E 99846D9281869281                   2255          DC    C'rd_kafka_message2msg'
00001462 00                                 2256          DC    X'00'
                                            2257 rd_kafka_message2msg DCCPRLG CINDEX=1336,BASER=0,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1336
                                            2258          macro
                                            2259          dccextrn &m
                                            2260          gblc    &$dccext(1000)
                                            2261          gbla    &$dccexti
                                            2262          lcla    &i
                                            2263 &$dccext(&$dccexti+1) setc    '&m'
                                            2264 &i       seta    1
                                            2265 .loop    aif    (&i gt &$dccexti).around
                                            2266          aif    ('&$dccext(&i)' eq '&m').getout
                                            2267 &i       seta    &i+1
                                            2268          ago     .loop
                                            2269 .around  anop
                                            2270 &$dccexti seta &$dccexti+1
                                            2271          extrn  &m
                                            2272 .getout  anop
                                            2273          mend
00001468                                    2274+$eye0057    ds    0d                                                    02-DCCCA
00001468 C4C3C3                             2275+         dc cl3'DCC'                                                    02-DCCCA
0000146B 01                                 2276+         dc xl1'01' format one                                          02-DCCCA
0000146C 00000000                           2277+         dc a(0)                                                        02-DCCCA
00001470 0000000000000000                   2278+         dc ad(0)                                                       02-DCCCA
00001478 00000000000000A8                   2279+         dc ad(168)                                                     02-DCCCA
00001480 0000000000000000                   2280+         dc ad(0)                                                       02-DCCCA
00001488 0000000000001000                   2281+         dc ad(4096)                                                    02-DCCCA
00001490 20                                 2282+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001491 03                                 2283+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001492 03                                 2284+         dc al1(3)                                                      02-DCCCA
00001493 08                                 2285+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001494 00                                 2286+         dc bl.8'00000000'                                              02-DCCCA
00001495 000000                             2287+         dc al3(0)                                                      02-DCCCA
00001498 000000000000144A                   2288+         dc ad(@LNAME1336)                                              02-DCCCA
000014A0                                    2289+         ds 0d                                                          02-DCCCA
000014A0 0000000000001468                   2290+         dc ad($eye0057)                                                02-DCCCA
000014A8 0000000000000000                   2291+         dc ad(0)                                                       02-DCCCA
000014B0                                    2292+         ds    0d                                                       01-DCCPR
000014B0                                    2293+rd_kafka_message2msg ds 0d                                              01-DCCPR
000014B0                                    2294+@REGION_1336_1 ds 0h                                                    01-DCCPR
000014B0 EBEC D008 0024          00000008   2295+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2296 * ******* End of Prologue
                                            2297 * *
                                            2298 * ***      return (rd_kafka_msg_t *)rkmessage;
000014B6 E3F0 1000 0004          00000000   2299          LG    15,0(0,1)   ; rkmessage
                                            2300 * ***   }
                                            2301 * * **** Start of Epilogue
                                            2302          DCCEPIL
000014BC                                    2303+         ds 0h                                                          01-DCCEP
                                            2304+* Epilog
                                            2305+* Epilog
000014BC E3E0 D008 0004          00000008   2306+         lg    14,8(,13) restore the reg                                01-DCCEP
000014C2 EB1C D020 0004          00000020   2307+         lmg   1,12,32(13)                                              01-DCCEP
000014C8 07FE                               2308+         br   14                                                        01-DCCEP
                                            2309+* End of Epilog
                                            2310 * * **** End of Epilogue
                                            2311 *
                                            2312 *   DSECT for automatic variables in "rd_kafka_message2msg"
                                            2313 *      (FUNCTION #1336)
                                            2314 *
00000000                00000000 000000A8   2315 @AUTO#rd_kafka_message2msg DSECT
00000000                                    2316          DS    XL168
                                            2317 *
000014CA                00000000 0000E868   2318 @CODE    CSECT
                                            2319 *
                                            2320 *
                                            2321 *
                                            2322 * ....... start of rd_kafka_msgq_len
000014CA                                    2323 @LNAME1337 DS  0H
000014CA 00000011                           2324          DC    X'00000011'
000014CE 99846D9281869281                   2325          DC    C'rd_kafka_msgq_len'
000014DF 00                                 2326          DC    X'00'
                                            2327 rd_kafka_msgq_len DCCPRLG CINDEX=1337,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1337
                                            2328          macro
                                            2329          dccextrn &m
                                            2330          gblc    &$dccext(1000)
                                            2331          gbla    &$dccexti
                                            2332          lcla    &i
                                            2333 &$dccext(&$dccexti+1) setc    '&m'
                                            2334 &i       seta    1
                                            2335 .loop    aif    (&i gt &$dccexti).around
                                            2336          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2337 &i       seta    &i+1
                                            2338          ago     .loop
                                            2339 .around  anop
                                            2340 &$dccexti seta &$dccexti+1
                                            2341          extrn  &m
                                            2342 .getout  anop
                                            2343          mend
000014E0                                    2344+$eye0060    ds    0d                                                    02-DCCCA
000014E0 C4C3C3                             2345+         dc cl3'DCC'                                                    02-DCCCA
000014E3 01                                 2346+         dc xl1'01' format one                                          02-DCCCA
000014E4 00000000                           2347+         dc a(0)                                                        02-DCCCA
000014E8 0000000000000000                   2348+         dc ad(0)                                                       02-DCCCA
000014F0 00000000000000A8                   2349+         dc ad(168)                                                     02-DCCCA
000014F8 0000000000000000                   2350+         dc ad(0)                                                       02-DCCCA
00001500 0000000000001000                   2351+         dc ad(4096)                                                    02-DCCCA
00001508 20                                 2352+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001509 03                                 2353+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000150A 03                                 2354+         dc al1(3)                                                      02-DCCCA
0000150B 08                                 2355+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000150C 00                                 2356+         dc bl.8'00000000'                                              02-DCCCA
0000150D 000000                             2357+         dc al3(0)                                                      02-DCCCA
00001510 00000000000014CA                   2358+         dc ad(@LNAME1337)                                              02-DCCCA
00001518                                    2359+         ds 0d                                                          02-DCCCA
00001518 00000000000014E0                   2360+         dc ad($eye0060)                                                02-DCCCA
00001520 0000000000000000                   2361+         dc ad(0)                                                       02-DCCCA
00001528                                    2362+         ds    0d                                                       01-DCCPR
00001528                                    2363+rd_kafka_msgq_len ds 0d                                                 01-DCCPR
00001528                                    2364+@REGION_1337_1 ds 0h                                                    01-DCCPR
00001528 EBEC D008 0024          00000008   2365+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2366 * ******* End of Prologue
                                            2367 * *
                                            2368 * ***           return (int)rkmq->rkmq_msg_cnt;
0000152E E3F0 1000 0004          00000000   2369          LG    15,0(0,1)   ; rkmq
00001534 E3F0 F010 0014          00000010   2370          LGF   15,16(0,15)
                                            2371 * ***   }
                                            2372 * * **** Start of Epilogue
                                            2373          DCCEPIL
0000153A                                    2374+         ds 0h                                                          01-DCCEP
                                            2375+* Epilog
                                            2376+* Epilog
0000153A E3E0 D008 0004          00000008   2377+         lg    14,8(,13) restore the reg                                01-DCCEP
00001540 EB1C D020 0004          00000020   2378+         lmg   1,12,32(13)                                              01-DCCEP
00001546 07FE                               2379+         br   14                                                        01-DCCEP
                                            2380+* End of Epilog
                                            2381 * * **** End of Epilogue
                                            2382 *
                                            2383 *   DSECT for automatic variables in "rd_kafka_msgq_len"
                                            2384 *      (FUNCTION #1337)
                                            2385 *
00000000                00000000 000000A8   2386 @AUTO#rd_kafka_msgq_len DSECT
00000000                                    2387          DS    XL168
                                            2388 *
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001548                00000000 0000E868   2389 @CODE    CSECT
                                            2390 *
                                            2391 *
                                            2392 *
                                            2393 * ....... start of rd_kafka_msgq_size
00001548                                    2394 @LNAME1338 DS  0H
00001548 00000012                           2395          DC    X'00000012'
0000154C 99846D9281869281                   2396          DC    C'rd_kafka_msgq_size'
0000155E 00                                 2397          DC    X'00'
                                            2398 rd_kafka_msgq_size DCCPRLG CINDEX=1338,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1338
                                            2399          macro
                                            2400          dccextrn &m
                                            2401          gblc    &$dccext(1000)
                                            2402          gbla    &$dccexti
                                            2403          lcla    &i
                                            2404 &$dccext(&$dccexti+1) setc    '&m'
                                            2405 &i       seta    1
                                            2406 .loop    aif    (&i gt &$dccexti).around
                                            2407          aif    ('&$dccext(&i)' eq '&m').getout
                                            2408 &i       seta    &i+1
                                            2409          ago     .loop
                                            2410 .around  anop
                                            2411 &$dccexti seta &$dccexti+1
                                            2412          extrn  &m
                                            2413 .getout  anop
                                            2414          mend
00001560                                    2415+$eye0063    ds    0d                                                    02-DCCCA
00001560 C4C3C3                             2416+         dc cl3'DCC'                                                    02-DCCCA
00001563 01                                 2417+         dc xl1'01' format one                                          02-DCCCA
00001564 00000000                           2418+         dc a(0)                                                        02-DCCCA
00001568 0000000000000000                   2419+         dc ad(0)                                                       02-DCCCA
00001570 00000000000000A8                   2420+         dc ad(168)                                                     02-DCCCA
00001578 0000000000000000                   2421+         dc ad(0)                                                       02-DCCCA
00001580 0000000000001000                   2422+         dc ad(4096)                                                    02-DCCCA
00001588 20                                 2423+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001589 03                                 2424+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000158A 03                                 2425+         dc al1(3)                                                      02-DCCCA
0000158B 08                                 2426+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000158C 00                                 2427+         dc bl.8'00000000'                                              02-DCCCA
0000158D 000000                             2428+         dc al3(0)                                                      02-DCCCA
00001590 0000000000001548                   2429+         dc ad(@LNAME1338)                                              02-DCCCA
00001598                                    2430+         ds 0d                                                          02-DCCCA
00001598 0000000000001560                   2431+         dc ad($eye0063)                                                02-DCCCA
000015A0 0000000000000000                   2432+         dc ad(0)                                                       02-DCCCA
000015A8                                    2433+         ds    0d                                                       01-DCCPR
000015A8                                    2434+rd_kafka_msgq_size ds 0d                                                01-DCCPR
000015A8                                    2435+@REGION_1338_1 ds 0h                                                    01-DCCPR
000015A8 EBEC D008 0024          00000008   2436+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2437 * ******* End of Prologue
                                            2438 * *
                                            2439 * ***           return (size_t)rkmq->rkmq_msg_bytes;
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015AE E3F0 1000 0004          00000000   2440          LG    15,0(0,1)   ; rkmq
000015B4 E3F0 F018 0004          00000018   2441          LG    15,24(0,15) ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
                                            2442 * ***   }
                                            2443 * * **** Start of Epilogue
                                            2444          DCCEPIL
000015BA                                    2445+         ds 0h                                                          01-DCCEP
                                            2446+* Epilog
                                            2447+* Epilog
000015BA E3E0 D008 0004          00000008   2448+         lg    14,8(,13) restore the reg                                01-DCCEP
000015C0 EB1C D020 0004          00000020   2449+         lmg   1,12,32(13)                                              01-DCCEP
000015C6 07FE                               2450+         br   14                                                        01-DCCEP
                                            2451+* End of Epilog
                                            2452 * * **** End of Epilogue
                                            2453 *
                                            2454 *   DSECT for automatic variables in "rd_kafka_msgq_size"
                                            2455 *      (FUNCTION #1338)
                                            2456 *
00000000                00000000 000000A8   2457 @AUTO#rd_kafka_msgq_size DSECT
00000000                                    2458          DS    XL168
                                            2459 *
000015C8                00000000 0000E868   2460 @CODE    CSECT
                                            2461 *
                                            2462 *
                                            2463 *
                                            2464 * ....... start of rd_kafka_msgq_init
000015C8                                    2465 @LNAME1341 DS  0H
000015C8 00000012                           2466          DC    X'00000012'
000015CC 99846D9281869281                   2467          DC    C'rd_kafka_msgq_init'
000015DE 00                                 2468          DC    X'00'
                                            2469 rd_kafka_msgq_init DCCPRLG CINDEX=1341,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1341
                                            2470          macro
                                            2471          dccextrn &m
                                            2472          gblc    &$dccext(1000)
                                            2473          gbla    &$dccexti
                                            2474          lcla    &i
                                            2475 &$dccext(&$dccexti+1) setc    '&m'
                                            2476 &i       seta    1
                                            2477 .loop    aif    (&i gt &$dccexti).around
                                            2478          aif    ('&$dccext(&i)' eq '&m').getout
                                            2479 &i       seta    &i+1
                                            2480          ago     .loop
                                            2481 .around  anop
                                            2482 &$dccexti seta &$dccexti+1
                                            2483          extrn  &m
                                            2484 .getout  anop
                                            2485          mend
000015E0                                    2486+$eye0066    ds    0d                                                    02-DCCCA
000015E0 C4C3C3                             2487+         dc cl3'DCC'                                                    02-DCCCA
000015E3 01                                 2488+         dc xl1'01' format one                                          02-DCCCA
000015E4 00000000                           2489+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015E8 0000000000000000                   2490+         dc ad(0)                                                       02-DCCCA
000015F0 00000000000000A8                   2491+         dc ad(168)                                                     02-DCCCA
000015F8 0000000000000000                   2492+         dc ad(0)                                                       02-DCCCA
00001600 0000000000001000                   2493+         dc ad(4096)                                                    02-DCCCA
00001608 20                                 2494+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001609 03                                 2495+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000160A 03                                 2496+         dc al1(3)                                                      02-DCCCA
0000160B 08                                 2497+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000160C 00                                 2498+         dc bl.8'00000000'                                              02-DCCCA
0000160D 000000                             2499+         dc al3(0)                                                      02-DCCCA
00001610 00000000000015C8                   2500+         dc ad(@LNAME1341)                                              02-DCCCA
00001618                                    2501+         ds 0d                                                          02-DCCCA
00001618 00000000000015E0                   2502+         dc ad($eye0066)                                                02-DCCCA
00001620 0000000000000000                   2503+         dc ad(0)                                                       02-DCCCA
00001628                                    2504+         ds    0d                                                       01-DCCPR
00001628                                    2505+rd_kafka_msgq_init ds 0d                                                01-DCCPR
00001628                                    2506+@REGION_1341_1 ds 0h                                                    01-DCCPR
00001628 EBEC D008 0024          00000008   2507+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2508 * ******* End of Prologue
                                            2509 * *
                                            2510 * ***           do { (&rkmq->rkmq_msgs)->tqh_first = (((void *)0)); (&\
                                            2511 * rkmq->rkmq_msgs)->tqh_last = &(&rkmq->rkmq_msgs)->tqh_first; } while\
                                            2512 *  ( 0);
0000162E E3F0 1000 0004          00000000   2513          LG    15,0(0,1)   ; rkmq
00001634                                    2514 @L178    DS    0H
00001634 A719 0000               00000000   2515          LGHI  1,0         ; 0
00001638 E310 F000 0024          00000000   2516          STG   1,0(0,15)   ; rkmq
0000163E E3F0 F008 0024          00000008   2517          STG   15,8(0,15)  ; offset of tqh_last in rd_kafka_msgs_head_s
                                            2518 * ***           rkmq->rkmq_msg_cnt   = 0;
00001644 E54C F010 0000          00000010   2519          MVHI  16(15),0    ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
                                            2520 * ***           rkmq->rkmq_msg_bytes = 0;
0000164A E548 F018 0000          00000018   2521          MVGHI 24(15),0    ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
                                            2522 * ***   }
00001650                                    2523 @ret_lab_1341 DS 0H
                                            2524 * * **** Start of Epilogue
                                            2525          DCCEPIL
00001650                                    2526+         ds 0h                                                          01-DCCEP
                                            2527+* Epilog
                                            2528+* Epilog
00001650 E3E0 D008 0004          00000008   2529+         lg    14,8(,13) restore the reg                                01-DCCEP
00001656 EB1C D020 0004          00000020   2530+         lmg   1,12,32(13)                                              01-DCCEP
0000165C 07FE                               2531+         br   14                                                        01-DCCEP
                                            2532+* End of Epilog
                                            2533 * * **** End of Epilogue
                                            2534 *
                                            2535 *   DSECT for automatic variables in "rd_kafka_msgq_init"
                                            2536 *      (FUNCTION #1341)
                                            2537 *
00000000                00000000 000000A8   2538 @AUTO#rd_kafka_msgq_init DSECT
00000000                                    2539          DS    XL168
                                            2540 *
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000165E                00000000 0000E868   2541 @CODE    CSECT
                                            2542 *
                                            2543 *
                                            2544 *
                                            2545 * ....... start of rd_kafka_msgq_deq
0000165E                                    2546 @LNAME1347 DS  0H
0000165E 00000011                           2547          DC    X'00000011'
00001662 99846D9281869281                   2548          DC    C'rd_kafka_msgq_deq'
00001673 00                                 2549          DC    X'00'
                                            2550 rd_kafka_msgq_deq DCCPRLG CINDEX=1347,BASER=12,FRAME=208,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1347
                                            2551          macro
                                            2552          dccextrn &m
                                            2553          gblc    &$dccext(1000)
                                            2554          gbla    &$dccexti
                                            2555          lcla    &i
                                            2556 &$dccext(&$dccexti+1) setc    '&m'
                                            2557 &i       seta    1
                                            2558 .loop    aif    (&i gt &$dccexti).around
                                            2559          aif    ('&$dccext(&i)' eq '&m').getout
                                            2560 &i       seta    &i+1
                                            2561          ago     .loop
                                            2562 .around  anop
                                            2563 &$dccexti seta &$dccexti+1
                                            2564          extrn  &m
                                            2565 .getout  anop
                                            2566          mend
00001678                                    2567+$eye0069    ds    0d                                                    02-DCCCA
00001678 C4C3C3                             2568+         dc cl3'DCC'                                                    02-DCCCA
0000167B 01                                 2569+         dc xl1'01' format one                                          02-DCCCA
0000167C 00000000                           2570+         dc a(0)                                                        02-DCCCA
00001680 00000000000016EA                   2571+         dc ad(@PER_1347)                                               02-DCCCA
00001688 00000000000000D0                   2572+         dc ad(208)                                                     02-DCCCA
00001690 0000000000000000                   2573+         dc ad(0)                                                       02-DCCCA
00001698 0000000000001000                   2574+         dc ad(4096)                                                    02-DCCCA
000016A0 20                                 2575+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000016A1 03                                 2576+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000016A2 03                                 2577+         dc al1(3)                                                      02-DCCCA
000016A3 08                                 2578+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000016A4 00                                 2579+         dc bl.8'00000000'                                              02-DCCCA
000016A5 000000                             2580+         dc al3(0)                                                      02-DCCCA
000016A8 000000000000165E                   2581+         dc ad(@LNAME1347)                                              02-DCCCA
000016B0                                    2582+         ds 0d                                                          02-DCCCA
000016B0 0000000000001678                   2583+         dc ad($eye0069)                                                02-DCCCA
000016B8 0000000000000000                   2584+         dc ad(0)                                                       02-DCCCA
000016C0                                    2585+         ds    0d                                                       01-DCCPR
000016C0                                    2586+rd_kafka_msgq_deq ds 0d                                                 01-DCCPR
000016C0                                    2587+@REGION_1347_1 ds 0h                                                    01-DCCPR
000016C0 EBEC D008 0024          00000008   2588+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000016C6 E3E0 D088 0004          00000088   2589+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000016CC E3C0 D090 0004          00000090   2590+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000016D2 B904 002E                          2591+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000016D6 E3B0 C018 0004          00000018   2592+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000016DC A7EB 00D0               000000D0   2593+         aghi  14,208              increase by frame size               01-DCCPR
000016E0 E3E0 C020 0021          00000020   2594+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000016E6 4720 B020               00000020   2595+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000016EA                                    2596+@PER_1347 ds   0h                                                       01-DCCPR
000016EA EBDE 2080 0024          00000080   2597+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000016F0 E3C0 2090 0024          00000090   2598+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000016F6 B904 00D2                          2599+         lgr   13,2                set real frame pointer               01-DCCPR
000016FA B904 00CF                          2600+         lgr   12,15               set base reg                         01-DCCPR
                        000016C0            2601+         using @REGION_1347_1,12                                        01-DCCPR
                                            2602 * ******* End of Prologue
                                            2603 * *
                                            2604 * ***      if (((do_count))) {
000016FE EB23 1000 0004          00000000   2605          LMG   2,3,0(1)    ; rkmq
00001704 E3F0 1014 0012          00000014   2606          LT    15,20(0,1)  ; do_count
0000170A 4780 C11E               000017DE   2607          BZ    @L221
                                            2608 * ***         do { if (((!(rkmq->rkmq_msg_cnt > 0)))) rd_kafka_crash("\
                                            2609 * C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.h",327, __FUNCTION__, (((\
                                            2610 * void *)0)), "assert: " "rkmq->rkmq_msg_cnt > 0"); } while (0);
0000170E                                    2611 @L213    DS    0H
0000170E E55C 2010 0000          00000010   2612          CHSI  16(2),0
00001714 4720 C09A               0000175A   2613          BH    @L216
00001718 E3F0 C158 0004          00001818   2614          LG    15,@lit_1347_45
0000171E 4110 F054               00000054   2615          LA    1,84(0,15)
00001722 E310 D0A8 0024          000000A8   2616          STG   1,168(0,13)
00001728 E548 D0B0 0147          000000B0   2617          MVGHI 176(13),327
0000172E E310 C150 0004          00001810   2618          LG    1,@lit_1347_46
00001734 4110 1060               00000060   2619          LA    1,96(0,1)
00001738 E310 D0B8 0024          000000B8   2620          STG   1,184(0,13)
0000173E D707 D0C0 D0C0 000000C0 000000C0   2621          XC    192(8,13),192(13)
00001744 41F0 F07E               0000007E   2622          LA    15,126(0,15)
00001748 E3F0 D0C8 0024          000000C8   2623          STG   15,200(0,13)
0000174E 4110 D0A8               000000A8   2624          LA    1,168(0,13)
00001752 E3F0 C148 0004          00001808   2625          LG    15,@lit_1347_47 ; rd_kafka_crash
00001758                                    2626 @@gen_label58 DS    0H
00001758 05EF                               2627          BALR  14,15
0000175A                                    2628 @@gen_label59 DS    0H
0000175A                                    2629 @L216    DS    0H
                                            2630 * ***                   do { if (((!(rkmq->rkmq_msg_bytes >= (int64_t)\
                                            2631 * (rkm->rkm_rkmessage.len+rkm->rkm_rkmessage.key_len))))) rd_kafka_cra\
                                            2632 * sh("C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.h",328, __FUNCTION__,\
                                            2633 *  (((void *)0)), "assert: " "rkmq->rkmq_msg_bytes >= (int64_t)(rkm->r\
                                            2634 * km_len+rkm->rkm_key_len)"); } while (0);
0000175A                                    2635 @L217    DS    0H
0000175A E3F0 2018 0004          00000018   2636          LG    15,24(0,2)  ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
00001760 E310 3020 0004          00000020   2637          LG    1,32(0,3)   ; offset of len in rd_kafka_message_s
00001766 E310 3030 000A          00000030   2638          ALG   1,48(0,3)
0000176C B920 00F1                          2639          CGR   15,1
00001770 47B0 C0F6               000017B6   2640          BNL   @L220
00001774 E3F0 C158 0004          00001818   2641          LG    15,@lit_1347_45
0000177A 4110 F054               00000054   2642          LA    1,84(0,15)
                                                                                                                           Page   59 
  Active Usings: @REGION_1347_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000177E E310 D0A8 0024          000000A8   2643          STG   1,168(0,13)
00001784 E548 D0B0 0148          000000B0   2644          MVGHI 176(13),328
0000178A E310 C150 0004          00001810   2645          LG    1,@lit_1347_46
00001790 4110 1060               00000060   2646          LA    1,96(0,1)
00001794 E310 D0B8 0024          000000B8   2647          STG   1,184(0,13)
0000179A D707 D0C0 D0C0 000000C0 000000C0   2648          XC    192(8,13),192(13)
000017A0 41F0 F09E               0000009E   2649          LA    15,158(0,15)
000017A4 E3F0 D0C8 0024          000000C8   2650          STG   15,200(0,13)
000017AA 4110 D0A8               000000A8   2651          LA    1,168(0,13)
000017AE E3F0 C148 0004          00001808   2652          LG    15,@lit_1347_47 ; rd_kafka_crash
000017B4                                    2653 @@gen_label61 DS    0H
000017B4 05EF                               2654          BALR  14,15
000017B6                                    2655 @@gen_label62 DS    0H
000017B6                                    2656 @L220    DS    0H
                                            2657 * ***
                                            2658 * ***                   rkmq->rkmq_msg_cnt--;
000017B6 58F0 2010               00000010   2659          L     15,16(0,2)
000017BA A7FA FFFF               0000FFFF   2660          AHI   15,-1
000017BE 50F0 2010               00000010   2661          ST    15,16(0,2)
                                            2662 * ***                   rkmq->rkmq_msg_bytes -= rkm->rkm_rkmessage.len\
                                            2663 * +rkm->rkm_rkmessage.key_len;
000017C2 E3F0 2018 0004          00000018   2664          LG    15,24(0,2)
000017C8 E310 3020 0004          00000020   2665          LG    1,32(0,3)   ; offset of len in rd_kafka_message_s
000017CE E310 3030 000A          00000030   2666          ALG   1,48(0,3)
000017D4 B90B 00F1                          2667          SLGR  15,1
000017D8 E3F0 2018 0024          00000018   2668          STG   15,24(0,2)
                                            2669 * ***      }
000017DE                                    2670 @L212    DS    0H
                                            2671 * ***
                                            2672 * ***      do {   if (((rkm)->rkm_link .tqe_next) != (((void *)0))) (r\
                                            2673 * km)->rkm_link .tqe_next->rkm_link .tqe_prev = (rkm)->rkm_link .tqe_p\
                                            2674 * rev; else (&rkmq->rkmq_msgs)->tqh_last = (rkm)->rkm_link .tqe_prev; \
                                            2675 * *(rkm)->rkm_link .tqe_prev = (rkm)->rkm_link .tqe_next; ; } while ( \
                                            2676 * 0);
000017DE                                    2677 @L221    DS    0H
000017DE E3F0 3048 0002          00000048   2678          LTG   15,72(0,3)  ; offset of rkm_link in rd_kafka_msg_s
000017E4 4780 C160               00001820   2679          BE    @L224
000017E8 E3F0 3048 0004          00000048   2680          LG    15,72(0,3)  ; offset of rkm_link in rd_kafka_msg_s
000017EE E310 3050 0004          00000050   2681          LG    1,80(0,3)   ; offset of tqe_prev in 0000040
000017F4 E310 F050 0024          00000050   2682          STG   1,80(0,15)  ; offset of tqe_prev in 0000040
000017FA 47F0 C16C               0000182C   2683          B     @L225
00001800                                    2684          DS    0D
00001800 000000D0                           2685 @FRAMESIZE_1347 DC F'208'
00001804 00000000
00001808 0000000000000000                   2686 @lit_1347_47 DC AD(rd_kafka_crash)
00001810 000000000000E868                   2687 @lit_1347_46 DC AD(@DATA)
00001818 000000000000ECA4                   2688 @lit_1347_45 DC AD(@strings@)
00001820                                    2689 @L224    DS    0H
00001820 E3F0 3050 0004          00000050   2690          LG    15,80(0,3)  ; offset of tqe_prev in 0000040
00001826 E3F0 2008 0024          00000008   2691          STG   15,8(0,2)   ; offset of tqh_last in rd_kafka_msgs_head_s
0000182C                                    2692 @L225    DS    0H
0000182C E3F0 3050 0004          00000050   2693          LG    15,80(0,3)  ; offset of tqe_prev in 0000040
                                                                                                                           Page   60 
  Active Usings: @REGION_1347_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001832 E310 3048 0004          00000048   2694          LG    1,72(0,3)   ; offset of rkm_link in rd_kafka_msg_s
00001838 E310 F000 0024          00000000   2695          STG   1,0(0,15)
                                            2696 * ***
                                            2697 * ***      return rkm;
0000183E B904 00F3                          2698          LGR   15,3
                                            2699 * ***   }
                                            2700 * * **** Start of Epilogue
                                            2701          DCCEPIL
00001842                                    2702+         ds 0h                                                          01-DCCEP
                                            2703+* Epilog
00001842 D707 D088 D088 00000088 00000088   2704+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001848 E3D0 D080 0004          00000080   2705+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000184E E3C0 D090 0004          00000090   2706+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001854 E3B0 C018 0004          00000018   2707+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000185A E3C0 B010 0021          00000010   2708+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001860 E3E0 D008 0004          00000008   2709+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001866 EB1C D020 0004          00000020   2710+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000186C 078E                               2711+         bcr 8,14                if same dsab, just return              01-DCCEP
0000186E E3F0 D010 0024          00000010   2712+         stg 15,16(0,13)         save return code                       01-DCCEP
00001874 E300 D018 0024          00000018   2713+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000187A E3F0 D090 0004          00000090   2714+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001880 E3F0 F018 0004          00000018   2715+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001886 47F0 F040               00000040   2716+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2717+* End of Epilog
                                            2718 * * **** End of Epilogue
                                            2719          DROP  12
                                            2720 *
                                            2721 *   DSECT for automatic variables in "rd_kafka_msgq_deq"
                                            2722 *      (FUNCTION #1347)
                                            2723 *
00000000                00000000 000000A8   2724 @AUTO#rd_kafka_msgq_deq DSECT
00000000                                    2725          DS    XL168
                                            2726 *
0000188A                00000000 0000E868   2727 @CODE    CSECT
                                            2728 *
                                            2729 *
                                            2730 *
                                            2731 * ....... start of rd_kafka_msgq_pop
0000188A                                    2732 @LNAME1348 DS  0H
0000188A 00000011                           2733          DC    X'00000011'
0000188E 99846D9281869281                   2734          DC    C'rd_kafka_msgq_pop'
0000189F 00                                 2735          DC    X'00'
                                            2736 rd_kafka_msgq_pop DCCPRLG CINDEX=1348,BASER=12,FRAME=200,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1348
                                            2737          macro
                                            2738          dccextrn &m
                                            2739          gblc    &$dccext(1000)
                                            2740          gbla    &$dccexti
                                            2741          lcla    &i
                                            2742 &$dccext(&$dccexti+1) setc    '&m'
                                            2743 &i       seta    1
                                            2744 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2745          aif    ('&$dccext(&i)' eq '&m').getout
                                            2746 &i       seta    &i+1
                                            2747          ago     .loop
                                            2748 .around  anop
                                            2749 &$dccexti seta &$dccexti+1
                                            2750          extrn  &m
                                            2751 .getout  anop
                                            2752          mend
000018A0                                    2753+$eye0072    ds    0d                                                    02-DCCCA
000018A0 C4C3C3                             2754+         dc cl3'DCC'                                                    02-DCCCA
000018A3 01                                 2755+         dc xl1'01' format one                                          02-DCCCA
000018A4 00000000                           2756+         dc a(0)                                                        02-DCCCA
000018A8 0000000000001912                   2757+         dc ad(@PER_1348)                                               02-DCCCA
000018B0 00000000000000C8                   2758+         dc ad(200)                                                     02-DCCCA
000018B8 0000000000000000                   2759+         dc ad(0)                                                       02-DCCCA
000018C0 0000000000001000                   2760+         dc ad(4096)                                                    02-DCCCA
000018C8 20                                 2761+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000018C9 03                                 2762+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000018CA 03                                 2763+         dc al1(3)                                                      02-DCCCA
000018CB 08                                 2764+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000018CC 00                                 2765+         dc bl.8'00000000'                                              02-DCCCA
000018CD 000000                             2766+         dc al3(0)                                                      02-DCCCA
000018D0 000000000000188A                   2767+         dc ad(@LNAME1348)                                              02-DCCCA
000018D8                                    2768+         ds 0d                                                          02-DCCCA
000018D8 00000000000018A0                   2769+         dc ad($eye0072)                                                02-DCCCA
000018E0 0000000000000000                   2770+         dc ad(0)                                                       02-DCCCA
000018E8                                    2771+         ds    0d                                                       01-DCCPR
000018E8                                    2772+rd_kafka_msgq_pop ds 0d                                                 01-DCCPR
000018E8                                    2773+@REGION_1348_1 ds 0h                                                    01-DCCPR
000018E8 EBEC D008 0024          00000008   2774+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000018EE E3E0 D088 0004          00000088   2775+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000018F4 E3C0 D090 0004          00000090   2776+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000018FA B904 002E                          2777+         lgr   2,14                copy addr of our savearea            01-DCCPR
000018FE E3B0 C018 0004          00000018   2778+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001904 A7EB 00C8               000000C8   2779+         aghi  14,200              increase by frame size               01-DCCPR
00001908 E3E0 C020 0021          00000020   2780+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000190E 4720 B020               00000020   2781+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001912                                    2782+@PER_1348 ds   0h                                                       01-DCCPR
00001912 EBDE 2080 0024          00000080   2783+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001918 E3C0 2090 0024          00000090   2784+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000191E B904 00D2                          2785+         lgr   13,2                set real frame pointer               01-DCCPR
00001922 B904 00CF                          2786+         lgr   12,15               set base reg                         01-DCCPR
                        000018E8            2787+         using @REGION_1348_1,12                                        01-DCCPR
                                            2788 * ******* End of Prologue
                                            2789 * *
                                            2790 * ***      rd_kafka_msg_t *rkm;
                                            2791 * ***
                                            2792 * ***      if (((rkm = ((&rkmq->rkmq_msgs)->tqh_first))))
00001926 E3F0 1000 0004          00000000   2793          LG    15,0(0,1)   ; rkmq
0000192C E320 F000 0004          00000000   2794          LG    2,0(0,15)   ; rkmq
00001932 B902 0012                          2795          LTGR  1,2
00001936 4780 C070               00001958   2796          BZ    @L226
                                                                                                                           Page   62 
  Active Usings: @REGION_1348_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2797 * ***         rd_kafka_msgq_deq(rkmq, rkm, 1);
0000193A E3F0 D0B0 0024          000000B0   2798          STG   15,176(0,13)
00001940 E320 D0B8 0024          000000B8   2799          STG   2,184(0,13)
00001946 E548 D0C0 0001          000000C0   2800          MVGHI 192(13),1
0000194C 4110 D0B0               000000B0   2801          LA    1,176(0,13)
00001950 E3F0 C0C8 0004          000019B0   2802          LG    15,@lit_1348_52 ; rd_kafka_msgq_deq
00001956                                    2803 @@gen_label65 DS    0H
00001956 05EF                               2804          BALR  14,15
00001958                                    2805 @@gen_label66 DS    0H
00001958                                    2806 @L226    DS    0H
                                            2807 * ***
                                            2808 * ***      return rkm;
00001958 B904 00F2                          2809          LGR   15,2
                                            2810 * ***   }
                                            2811 * * **** Start of Epilogue
                                            2812          DCCEPIL
0000195C                                    2813+         ds 0h                                                          01-DCCEP
                                            2814+* Epilog
0000195C D707 D088 D088 00000088 00000088   2815+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001962 E3D0 D080 0004          00000080   2816+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001968 E3C0 D090 0004          00000090   2817+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000196E E3B0 C018 0004          00000018   2818+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001974 E3C0 B010 0021          00000010   2819+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000197A E3E0 D008 0004          00000008   2820+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001980 EB1C D020 0004          00000020   2821+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001986 078E                               2822+         bcr 8,14                if same dsab, just return              01-DCCEP
00001988 E3F0 D010 0024          00000010   2823+         stg 15,16(0,13)         save return code                       01-DCCEP
0000198E E300 D018 0024          00000018   2824+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001994 E3F0 D090 0004          00000090   2825+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000199A E3F0 F018 0004          00000018   2826+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000019A0 47F0 F040               00000040   2827+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2828+* End of Epilog
                                            2829 * * **** End of Epilogue
000019A8                                    2830          DS    0D
000019A8 000000C8                           2831 @FRAMESIZE_1348 DC F'200'
000019AC 00000000
000019B0 00000000000016C0                   2832 @lit_1348_52 DC AD(rd_kafka_msgq_deq)
                                            2833          DROP  12
                                            2834 *
                                            2835 *   DSECT for automatic variables in "rd_kafka_msgq_pop"
                                            2836 *      (FUNCTION #1348)
                                            2837 *
00000000                00000000 000000A8   2838 @AUTO#rd_kafka_msgq_pop DSECT
00000000                                    2839          DS    XL168
                                            2840 *
000019B8                00000000 0000E868   2841 @CODE    CSECT
                                            2842 *
                                            2843 *
                                            2844 *
                                            2845 * ....... start of rd_kafka_msgq_first
000019B8                                    2846 @LNAME1349 DS  0H
000019B8 00000013                           2847          DC    X'00000013'
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000019BC 99846D9281869281                   2848          DC    C'rd_kafka_msgq_first'
000019CF 00                                 2849          DC    X'00'
                                            2850 rd_kafka_msgq_first DCCPRLG CINDEX=1349,BASER=0,FRAME=168,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1349
                                            2851          macro
                                            2852          dccextrn &m
                                            2853          gblc    &$dccext(1000)
                                            2854          gbla    &$dccexti
                                            2855          lcla    &i
                                            2856 &$dccext(&$dccexti+1) setc    '&m'
                                            2857 &i       seta    1
                                            2858 .loop    aif    (&i gt &$dccexti).around
                                            2859          aif    ('&$dccext(&i)' eq '&m').getout
                                            2860 &i       seta    &i+1
                                            2861          ago     .loop
                                            2862 .around  anop
                                            2863 &$dccexti seta &$dccexti+1
                                            2864          extrn  &m
                                            2865 .getout  anop
                                            2866          mend
000019D0                                    2867+$eye0075    ds    0d                                                    02-DCCCA
000019D0 C4C3C3                             2868+         dc cl3'DCC'                                                    02-DCCCA
000019D3 01                                 2869+         dc xl1'01' format one                                          02-DCCCA
000019D4 00000000                           2870+         dc a(0)                                                        02-DCCCA
000019D8 0000000000000000                   2871+         dc ad(0)                                                       02-DCCCA
000019E0 00000000000000A8                   2872+         dc ad(168)                                                     02-DCCCA
000019E8 0000000000000000                   2873+         dc ad(0)                                                       02-DCCCA
000019F0 0000000000001000                   2874+         dc ad(4096)                                                    02-DCCCA
000019F8 20                                 2875+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019F9 03                                 2876+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019FA 03                                 2877+         dc al1(3)                                                      02-DCCCA
000019FB 08                                 2878+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019FC 00                                 2879+         dc bl.8'00000000'                                              02-DCCCA
000019FD 000000                             2880+         dc al3(0)                                                      02-DCCCA
00001A00 00000000000019B8                   2881+         dc ad(@LNAME1349)                                              02-DCCCA
00001A08                                    2882+         ds 0d                                                          02-DCCCA
00001A08 00000000000019D0                   2883+         dc ad($eye0075)                                                02-DCCCA
00001A10 0000000000000000                   2884+         dc ad(0)                                                       02-DCCCA
00001A18                                    2885+         ds    0d                                                       01-DCCPR
00001A18                                    2886+rd_kafka_msgq_first ds 0d                                               01-DCCPR
00001A18                                    2887+@REGION_1349_1 ds 0h                                                    01-DCCPR
00001A18 EBEC D008 0024          00000008   2888+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2889 * ******* End of Prologue
                                            2890 * *
                                            2891 * ***           return ((&rkmq->rkmq_msgs)->tqh_first);
00001A1E E3F0 1000 0004          00000000   2892          LG    15,0(0,1)   ; rkmq
00001A24 E3F0 F000 0004          00000000   2893          LG    15,0(0,15)  ; rkmq
                                            2894 * ***   }
                                            2895 * * **** Start of Epilogue
                                            2896          DCCEPIL
00001A2A                                    2897+         ds 0h                                                          01-DCCEP
                                            2898+* Epilog
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2899+* Epilog
00001A2A E3E0 D008 0004          00000008   2900+         lg    14,8(,13) restore the reg                                01-DCCEP
00001A30 EB1C D020 0004          00000020   2901+         lmg   1,12,32(13)                                              01-DCCEP
00001A36 07FE                               2902+         br   14                                                        01-DCCEP
                                            2903+* End of Epilog
                                            2904 * * **** End of Epilogue
                                            2905 *
                                            2906 *   DSECT for automatic variables in "rd_kafka_msgq_first"
                                            2907 *      (FUNCTION #1349)
                                            2908 *
00000000                00000000 000000A8   2909 @AUTO#rd_kafka_msgq_first DSECT
00000000                                    2910          DS    XL168
                                            2911 *
00001A38                00000000 0000E868   2912 @CODE    CSECT
                                            2913 *
                                            2914 *
                                            2915 *
                                            2916 * ....... start of rd_kafka_msg_cmp_msgid
00001A38                                    2917 @LNAME1352 DS  0H
00001A38 00000016                           2918          DC    X'00000016'
00001A3C 99846D9281869281                   2919          DC    C'rd_kafka_msg_cmp_msgid'
00001A52 00                                 2920          DC    X'00'
                                            2921 rd_kafka_msg_cmp_msgid DCCPRLG CINDEX=1352,BASER=12,FRAME=176,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1352
                                            2922          macro
                                            2923          dccextrn &m
                                            2924          gblc    &$dccext(1000)
                                            2925          gbla    &$dccexti
                                            2926          lcla    &i
                                            2927 &$dccext(&$dccexti+1) setc    '&m'
                                            2928 &i       seta    1
                                            2929 .loop    aif    (&i gt &$dccexti).around
                                            2930          aif    ('&$dccext(&i)' eq '&m').getout
                                            2931 &i       seta    &i+1
                                            2932          ago     .loop
                                            2933 .around  anop
                                            2934 &$dccexti seta &$dccexti+1
                                            2935          extrn  &m
                                            2936 .getout  anop
                                            2937          mend
00001A58                                    2938+$eye0078    ds    0d                                                    02-DCCCA
00001A58 C4C3C3                             2939+         dc cl3'DCC'                                                    02-DCCCA
00001A5B 01                                 2940+         dc xl1'01' format one                                          02-DCCCA
00001A5C 00000000                           2941+         dc a(0)                                                        02-DCCCA
00001A60 0000000000000000                   2942+         dc ad(0)                                                       02-DCCCA
00001A68 00000000000000B0                   2943+         dc ad(176)                                                     02-DCCCA
00001A70 0000000000000000                   2944+         dc ad(0)                                                       02-DCCCA
00001A78 0000000000001000                   2945+         dc ad(4096)                                                    02-DCCCA
00001A80 20                                 2946+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A81 03                                 2947+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A82 03                                 2948+         dc al1(3)                                                      02-DCCCA
00001A83 08                                 2949+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001A84 00                                 2950+         dc bl.8'00000000'                                              02-DCCCA
00001A85 000000                             2951+         dc al3(0)                                                      02-DCCCA
00001A88 0000000000001A38                   2952+         dc ad(@LNAME1352)                                              02-DCCCA
00001A90                                    2953+         ds 0d                                                          02-DCCCA
00001A90 0000000000001A58                   2954+         dc ad($eye0078)                                                02-DCCCA
00001A98 0000000000000000                   2955+         dc ad(0)                                                       02-DCCCA
00001AA0                                    2956+         ds    0d                                                       01-DCCPR
00001AA0                                    2957+rd_kafka_msg_cmp_msgid ds 0d                                            01-DCCPR
00001AA0                                    2958+@REGION_1352_1 ds 0h                                                    01-DCCPR
00001AA0 EBEC D008 0024          00000008   2959+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001AA6 B904 00CF                          2960+         lgr   12,15               set base reg                         01-DCCPR
                        00001AA0            2961+         using @REGION_1352_1,12                                        01-DCCPR
                                            2962 * ******* End of Prologue
                                            2963 * *
                                            2964 * ***           const rd_kafka_msg_t *a = _a, *b = _b;
00001AAA E3F0 1000 0004          00000000   2965          LG    15,0(0,1)   ; _a
00001AB0 E310 1008 0004          00000008   2966          LG    1,8(0,1)    ; _b
                                            2967 * ***
                                            2968 * ***           do {} while (0);
00001AB6                                    2969 @L229    DS    0H
                                            2970 * ***
                                            2971 * ***           return (int)((a->rkm_u.producer.msgid) < (b->rkm_u.pro\
                                            2972 * ducer.msgid) ? -1 : ((a->rkm_u.producer.msgid) > (b->rkm_u.producer.\
                                            2973 * msgid)));
00001AB6 E320 F090 0004          00000090   2974          LG    2,144(0,15) ; offset of msgid in 0000042
00001ABC E320 1090 0021          00000090   2975          CLG   2,144(0,1)
00001AC2 47B0 C02E               00001ACE   2976          BNL   @L232
00001AC6 A7F8 FFFF               0000FFFF   2977          LHI   15,-1       ; -1
00001ACA 47F0 C04A               00001AEA   2978          B     @L233
00001ACE                                    2979 @L232    DS    0H
00001ACE E3F0 F090 0004          00000090   2980          LG    15,144(0,15) ; offset of msgid in 0000042
00001AD4 E3F0 1090 0021          00000090   2981          CLG   15,144(0,1)
00001ADA 47D0 C046               00001AE6   2982          BNH   @@gen_label68
00001ADE A7F8 0001               00000001   2983          LHI   15,1
00001AE2 47F0 C04A               00001AEA   2984          B     @@gen_label69
00001AE6                                    2985 @@gen_label68 DS 0H
00001AE6 A7F8 0000               00000000   2986          LHI   15,0
00001AEA                                    2987 @@gen_label69 DS 0H
00001AEA                                    2988 @L233    DS    0H
00001AEA B914 00FF                          2989          LGFR  15,15
                                            2990 * ***   }
                                            2991 * * **** Start of Epilogue
                                            2992          DCCEPIL
00001AEE                                    2993+         ds 0h                                                          01-DCCEP
                                            2994+* Epilog
                                            2995+* Epilog
00001AEE E3E0 D008 0004          00000008   2996+         lg    14,8(,13) restore the reg                                01-DCCEP
00001AF4 EB1C D020 0004          00000020   2997+         lmg   1,12,32(13)                                              01-DCCEP
00001AFA 07FE                               2998+         br   14                                                        01-DCCEP
                                            2999+* End of Epilog
                                            3000 * * **** End of Epilogue
                                            3001          DROP  12
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3002 *
                                            3003 *   DSECT for automatic variables in "rd_kafka_msg_cmp_msgid"
                                            3004 *      (FUNCTION #1352)
                                            3005 *
00000000                00000000 000000A8   3006 @AUTO#rd_kafka_msg_cmp_msgid DSECT
00000000                                    3007          DS    XL168
                                            3008 *
00001AFC                00000000 0000E868   3009 @CODE    CSECT
                                            3010 *
                                            3011 *
                                            3012 *
                                            3013 * ....... start of rd_kafka_msgq_enq
00001AFC                                    3014 @LNAME1357 DS  0H
00001AFC 00000011                           3015          DC    X'00000011'
00001B00 99846D9281869281                   3016          DC    C'rd_kafka_msgq_enq'
00001B11 00                                 3017          DC    X'00'
                                            3018 rd_kafka_msgq_enq DCCPRLG CINDEX=1357,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1357
                                            3019          macro
                                            3020          dccextrn &m
                                            3021          gblc    &$dccext(1000)
                                            3022          gbla    &$dccexti
                                            3023          lcla    &i
                                            3024 &$dccext(&$dccexti+1) setc    '&m'
                                            3025 &i       seta    1
                                            3026 .loop    aif    (&i gt &$dccexti).around
                                            3027          aif    ('&$dccext(&i)' eq '&m').getout
                                            3028 &i       seta    &i+1
                                            3029          ago     .loop
                                            3030 .around  anop
                                            3031 &$dccexti seta &$dccexti+1
                                            3032          extrn  &m
                                            3033 .getout  anop
                                            3034          mend
00001B18                                    3035+$eye0081    ds    0d                                                    02-DCCCA
00001B18 C4C3C3                             3036+         dc cl3'DCC'                                                    02-DCCCA
00001B1B 01                                 3037+         dc xl1'01' format one                                          02-DCCCA
00001B1C 00000000                           3038+         dc a(0)                                                        02-DCCCA
00001B20 0000000000000000                   3039+         dc ad(0)                                                       02-DCCCA
00001B28 00000000000000A8                   3040+         dc ad(168)                                                     02-DCCCA
00001B30 0000000000000000                   3041+         dc ad(0)                                                       02-DCCCA
00001B38 0000000000001000                   3042+         dc ad(4096)                                                    02-DCCCA
00001B40 20                                 3043+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B41 03                                 3044+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B42 03                                 3045+         dc al1(3)                                                      02-DCCCA
00001B43 08                                 3046+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B44 00                                 3047+         dc bl.8'00000000'                                              02-DCCCA
00001B45 000000                             3048+         dc al3(0)                                                      02-DCCCA
00001B48 0000000000001AFC                   3049+         dc ad(@LNAME1357)                                              02-DCCCA
00001B50                                    3050+         ds 0d                                                          02-DCCCA
00001B50 0000000000001B18                   3051+         dc ad($eye0081)                                                02-DCCCA
00001B58 0000000000000000                   3052+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001B60                                    3053+         ds    0d                                                       01-DCCPR
00001B60                                    3054+rd_kafka_msgq_enq ds 0d                                                 01-DCCPR
00001B60                                    3055+@REGION_1357_1 ds 0h                                                    01-DCCPR
00001B60 EBEC D008 0024          00000008   3056+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3057 * ******* End of Prologue
                                            3058 * *
                                            3059 * ***           do {  (rkm)->rkm_link .tqe_next = (((void *)0)); (rkm)\
                                            3060 * ->rkm_link .tqe_prev = (&rkmq->rkmq_msgs)->tqh_last; *(&rkmq->rkmq_m\
                                            3061 * sgs)->tqh_last = (rkm); (&rkmq->rkmq_msgs)->tqh_last = &(rkm)->rkm_l\
                                            3062 * ink .tqe_next; } while ( 0);
00001B66 E3F0 1000 0004          00000000   3063          LG    15,0(0,1)   ; rkmq
00001B6C E310 1008 0004          00000008   3064          LG    1,8(0,1)    ; rkm
00001B72                                    3065 @L244    DS    0H
00001B72 A729 0000               00000000   3066          LGHI  2,0         ; 0
00001B76 E320 1048 0024          00000048   3067          STG   2,72(0,1)   ; offset of rkm_link in rd_kafka_msg_s
00001B7C E320 F008 0004          00000008   3068          LG    2,8(0,15)   ; offset of tqh_last in rd_kafka_msgs_head_s
00001B82 E320 1050 0024          00000050   3069          STG   2,80(0,1)   ; offset of tqe_prev in 0000040
00001B88 E320 F008 0004          00000008   3070          LG    2,8(0,15)   ; offset of tqh_last in rd_kafka_msgs_head_s
00001B8E E310 2000 0024          00000000   3071          STG   1,0(0,2)
00001B94 4120 1048               00000048   3072          LA    2,72(0,1)
00001B98 E320 F008 0024          00000008   3073          STG   2,8(0,15)   ; offset of tqh_last in rd_kafka_msgs_head_s
                                            3074 * ***           rkmq->rkmq_msg_bytes += rkm->rkm_rkmessage.len+rkm->rk\
                                            3075 * m_rkmessage.key_len;
00001B9E E320 F018 0004          00000018   3076          LG    2,24(0,15)
00001BA4 E330 1020 0004          00000020   3077          LG    3,32(0,1)   ; offset of len in rd_kafka_message_s
00001BAA E330 1030 000A          00000030   3078          ALG   3,48(0,1)
00001BB0 B90A 0023                          3079          ALGR  2,3
00001BB4 E320 F018 0024          00000018   3080          STG   2,24(0,15)
                                            3081 * ***           return (int)++rkmq->rkmq_msg_cnt;
00001BBA 5810 F010               00000010   3082          L     1,16(0,15)
00001BBE A71A 0001               00000001   3083          AHI   1,1
00001BC2 5010 F010               00000010   3084          ST    1,16(0,15)
00001BC6 B914 00F1                          3085          LGFR  15,1
                                            3086 * ***   }
                                            3087 * * **** Start of Epilogue
                                            3088          DCCEPIL
00001BCA                                    3089+         ds 0h                                                          01-DCCEP
                                            3090+* Epilog
                                            3091+* Epilog
00001BCA E3E0 D008 0004          00000008   3092+         lg    14,8(,13) restore the reg                                01-DCCEP
00001BD0 EB1C D020 0004          00000020   3093+         lmg   1,12,32(13)                                              01-DCCEP
00001BD6 07FE                               3094+         br   14                                                        01-DCCEP
                                            3095+* End of Epilog
                                            3096 * * **** End of Epilogue
                                            3097 *
                                            3098 *   DSECT for automatic variables in "rd_kafka_msgq_enq"
                                            3099 *      (FUNCTION #1357)
                                            3100 *
00000000                00000000 000000A8   3101 @AUTO#rd_kafka_msgq_enq DSECT
00000000                                    3102          DS    XL168
                                            3103 *
00001BD8                00000000 0000E868   3104 @CODE    CSECT
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3105 *
                                            3106 *
                                            3107 *
                                            3108 * ....... start of rd_kafka_seq_wrap
00001BD8                                    3109 @LNAME1368 DS  0H
00001BD8 00000011                           3110          DC    X'00000011'
00001BDC 99846D9281869281                   3111          DC    C'rd_kafka_seq_wrap'
00001BED 00                                 3112          DC    X'00'
                                            3113 rd_kafka_seq_wrap DCCPRLG CINDEX=1368,BASER=12,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1368
                                            3114          macro
                                            3115          dccextrn &m
                                            3116          gblc    &$dccext(1000)
                                            3117          gbla    &$dccexti
                                            3118          lcla    &i
                                            3119 &$dccext(&$dccexti+1) setc    '&m'
                                            3120 &i       seta    1
                                            3121 .loop    aif    (&i gt &$dccexti).around
                                            3122          aif    ('&$dccext(&i)' eq '&m').getout
                                            3123 &i       seta    &i+1
                                            3124          ago     .loop
                                            3125 .around  anop
                                            3126 &$dccexti seta &$dccexti+1
                                            3127          extrn  &m
                                            3128 .getout  anop
                                            3129          mend
00001BF0                                    3130+$eye0084    ds    0d                                                    02-DCCCA
00001BF0 C4C3C3                             3131+         dc cl3'DCC'                                                    02-DCCCA
00001BF3 01                                 3132+         dc xl1'01' format one                                          02-DCCCA
00001BF4 00000000                           3133+         dc a(0)                                                        02-DCCCA
00001BF8 0000000000000000                   3134+         dc ad(0)                                                       02-DCCCA
00001C00 00000000000000A8                   3135+         dc ad(168)                                                     02-DCCCA
00001C08 0000000000000000                   3136+         dc ad(0)                                                       02-DCCCA
00001C10 0000000000001000                   3137+         dc ad(4096)                                                    02-DCCCA
00001C18 20                                 3138+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C19 03                                 3139+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C1A 03                                 3140+         dc al1(3)                                                      02-DCCCA
00001C1B 08                                 3141+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C1C 00                                 3142+         dc bl.8'00000000'                                              02-DCCCA
00001C1D 000000                             3143+         dc al3(0)                                                      02-DCCCA
00001C20 0000000000001BD8                   3144+         dc ad(@LNAME1368)                                              02-DCCCA
00001C28                                    3145+         ds 0d                                                          02-DCCCA
00001C28 0000000000001BF0                   3146+         dc ad($eye0084)                                                02-DCCCA
00001C30 0000000000000000                   3147+         dc ad(0)                                                       02-DCCCA
00001C38                                    3148+         ds    0d                                                       01-DCCPR
00001C38                                    3149+rd_kafka_seq_wrap ds 0d                                                 01-DCCPR
00001C38                                    3150+@REGION_1368_1 ds 0h                                                    01-DCCPR
00001C38 EBEC D008 0024          00000008   3151+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C3E B904 00CF                          3152+         lgr   12,15               set base reg                         01-DCCPR
                        00001C38            3153+         using @REGION_1368_1,12                                        01-DCCPR
                                            3154 * ******* End of Prologue
                                            3155 * *
                                                                                                                           Page   69 
  Active Usings: @REGION_1368_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3156 * ***           return (int32_t)(seq & (int64_t)0x7fffffff);
00001C42 E3F0 1000 0004          00000000   3157          LG    15,0(0,1)   ; seq
00001C48 E3F0 C028 0080          00001C60   3158          NG    15,@lit_1368_56
00001C4E B914 00FF                          3159          LGFR  15,15
                                            3160 * ***   }
                                            3161 * * **** Start of Epilogue
                                            3162          DCCEPIL
00001C52                                    3163+         ds 0h                                                          01-DCCEP
                                            3164+* Epilog
                                            3165+* Epilog
00001C52 E3E0 D008 0004          00000008   3166+         lg    14,8(,13) restore the reg                                01-DCCEP
00001C58 EB1C D020 0004          00000020   3167+         lmg   1,12,32(13)                                              01-DCCEP
00001C5E 07FE                               3168+         br   14                                                        01-DCCEP
                                            3169+* End of Epilog
                                            3170 * * **** End of Epilogue
00001C60                                    3171          DS    0D
00001C60 000000007FFFFFFF                   3172 @lit_1368_56 DC FD'2147483647' 0x000000007fffffff
                                            3173          DROP  12
                                            3174 *
                                            3175 *   DSECT for automatic variables in "rd_kafka_seq_wrap"
                                            3176 *      (FUNCTION #1368)
                                            3177 *
00000000                00000000 000000A8   3178 @AUTO#rd_kafka_seq_wrap DSECT
00000000                                    3179          DS    XL168
                                            3180 *
00001C68                00000000 0000E868   3181 @CODE    CSECT
                                            3182 *
                                            3183 *
                                            3184 *
                                            3185 * ....... start of rd_strlcpy
00001C68                                    3186 @LNAME1384 DS  0H
00001C68 0000000A                           3187          DC    X'0000000A'
00001C6C 99846DA2A3999383                   3188          DC    C'rd_strlcpy'
00001C76 00                                 3189          DC    X'00'
                                            3190 rd_strlcpy DCCPRLG CINDEX=1384,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1384
                                            3191          macro
                                            3192          dccextrn &m
                                            3193          gblc    &$dccext(1000)
                                            3194          gbla    &$dccexti
                                            3195          lcla    &i
                                            3196 &$dccext(&$dccexti+1) setc    '&m'
                                            3197 &i       seta    1
                                            3198 .loop    aif    (&i gt &$dccexti).around
                                            3199          aif    ('&$dccext(&i)' eq '&m').getout
                                            3200 &i       seta    &i+1
                                            3201          ago     .loop
                                            3202 .around  anop
                                            3203 &$dccexti seta &$dccexti+1
                                            3204          extrn  &m
                                            3205 .getout  anop
                                            3206          mend
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001C78                                    3207+$eye0087    ds    0d                                                    02-DCCCA
00001C78 C4C3C3                             3208+         dc cl3'DCC'                                                    02-DCCCA
00001C7B 01                                 3209+         dc xl1'01' format one                                          02-DCCCA
00001C7C 00000000                           3210+         dc a(0)                                                        02-DCCCA
00001C80 0000000000000000                   3211+         dc ad(0)                                                       02-DCCCA
00001C88 00000000000000B0                   3212+         dc ad(176)                                                     02-DCCCA
00001C90 0000000000000000                   3213+         dc ad(0)                                                       02-DCCCA
00001C98 0000000000001000                   3214+         dc ad(4096)                                                    02-DCCCA
00001CA0 20                                 3215+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001CA1 03                                 3216+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CA2 03                                 3217+         dc al1(3)                                                      02-DCCCA
00001CA3 08                                 3218+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CA4 00                                 3219+         dc bl.8'00000000'                                              02-DCCCA
00001CA5 000000                             3220+         dc al3(0)                                                      02-DCCCA
00001CA8 0000000000001C68                   3221+         dc ad(@LNAME1384)                                              02-DCCCA
00001CB0                                    3222+         ds 0d                                                          02-DCCCA
00001CB0 0000000000001C78                   3223+         dc ad($eye0087)                                                02-DCCCA
00001CB8 0000000000000000                   3224+         dc ad(0)                                                       02-DCCCA
00001CC0                                    3225+         ds    0d                                                       01-DCCPR
00001CC0                                    3226+rd_strlcpy ds  0d                                                       01-DCCPR
00001CC0                                    3227+@REGION_1384_1 ds 0h                                                    01-DCCPR
00001CC0 EBEC D008 0024          00000008   3228+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001CC6 B904 00CF                          3229+         lgr   12,15               set base reg                         01-DCCPR
                        00001CC0            3230+         using @REGION_1384_1,12                                        01-DCCPR
                                            3231 * ******* End of Prologue
                                            3232 * *
00001CCA E3F0 1010 0004          00000010   3233          LG    15,16(0,1)  ; dstsize
                                            3234 * ***
                                            3235 * ***
                                            3236 * ***
                                            3237 * ***           if (((dstsize > 0))) {
00001CD0 C2FE 0000 0000                     3238          CLGFI 15,X'00000000'
00001CD6 47D0 C0A6               00001D66   3239          BNH   @ret_lab_1384
                                            3240 * ***                   size_t srclen = __strlen(src);
00001CDA E320 1008 0004          00000008   3241          LG    2,8(0,1)
00001CE0 B904 0032                          3242          LGR   3,2
00001CE4 A709 0000               00000000   3243          LGHI  0,0
00001CE8                                    3244 @@gen_label71 DS 0H
00001CE8 B25E 0002                          3245          SRST  0,2
00001CEC 4710 C028               00001CE8   3246          BC  1,@@gen_label71
00001CF0 B90B 0003                          3247          SLGR  0,3
                                            3248 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            3249 * clen) : (dstsize-1));
00001CF4 B904 002F                          3250          LGR   2,15
00001CF8 A72B FFFF               0000FFFF   3251          AGHI  2,-1
00001CFC B921 0002                          3252          CLGR  0,2
00001D00 47B0 C056               00001D16   3253          BNL   @L252
00001D04 B904 00F0                          3254          LGR   15,0
00001D08 47F0 C05A               00001D1A   3255          B     @L253
00001D10                                    3256          DS    0D
00001D10 D200 4000 3000 00000000 00000000   3257 @lit_1384_57          MVC 0(1,4),0(3)
00001D16                                    3258 @L252    DS    0H
                                                                                                                           Page   71 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001D16 A7FB FFFF               0000FFFF   3259          AGHI  15,-1
00001D1A                                    3260 @L253    DS    0H
                                            3261 * ***                   __memcpy(dst,src,copylen);
00001D1A E330 1008 0004          00000008   3262          LG    3,8(0,1)
00001D20 E340 1000 0004          00000000   3263          LG    4,0(0,1)
00001D26 B902 002F                          3264          LTGR  2,15
00001D2A 4780 C098               00001D58   3265          BZ    @@gen_label75
00001D2E A72B FFFF               0000FFFF   3266          AGHI  2,-1
00001D32 EB52 0008 000A          00000008   3267          SRAG  5,2,8(0)
00001D38 B902 0055                          3268          LTGR  5,5
00001D3C 4780 C094               00001D54   3269          BZ    @@gen_label74
00001D40                                    3270 @@gen_label73 DS 0H
00001D40 D2FF 4000 3000 00000000 00000000   3271          MVC   0(256,4),0(3)
00001D46 4140 4100               00000100   3272          LA    4,256(0,4)
00001D4A 4130 3100               00000100   3273          LA    3,256(0,3)
00001D4E E350 C080 0046          00001D40   3274          BCTG  5,@@gen_label73
00001D54                                    3275 @@gen_label74 DS 0H
00001D54 4420 C050               00001D10   3276          EX    2,@lit_1384_57
00001D58                                    3277 @@gen_label75 DS 0H
                                            3278 * ***                   dst[copylen] = '\0';
00001D58 E310 1000 0004          00000000   3279          LG    1,0(0,1)    ; dst
00001D5E 41FF 1000               00000000   3280          LA    15,0(15,1)
00001D62 9200 F000      00000000 00000000   3281          MVI   0(15),0
                                            3282 * ***           }
00001D66                                    3283 @L251    DS    0H
                                            3284 * ***
                                            3285 * ***   }
00001D66                                    3286 @ret_lab_1384 DS 0H
                                            3287 * * **** Start of Epilogue
                                            3288          DCCEPIL
00001D66                                    3289+         ds 0h                                                          01-DCCEP
                                            3290+* Epilog
                                            3291+* Epilog
00001D66 E3E0 D008 0004          00000008   3292+         lg    14,8(,13) restore the reg                                01-DCCEP
00001D6C EB1C D020 0004          00000020   3293+         lmg   1,12,32(13)                                              01-DCCEP
00001D72 07FE                               3294+         br   14                                                        01-DCCEP
                                            3295+* End of Epilog
                                            3296 * * **** End of Epilogue
                                            3297          DROP  12
                                            3298 *
                                            3299 *   DSECT for automatic variables in "rd_strlcpy"
                                            3300 *      (FUNCTION #1384)
                                            3301 *
00000000                00000000 000000B0   3302 @AUTO#rd_strlcpy DSECT
00000000                                    3303          DS    XL168
000000A8                                    3304 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   3305          ORG   @AUTO#rd_strlcpy+168
000000A8                                    3306 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            3307 *
00001D74                00000000 0000E868   3308 @CODE    CSECT
                                            3309 *
                                            3310 *
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3311 *
                                            3312 * ....... start of rd_crc32_init
00001D74                                    3313 @LNAME1484 DS  0H
00001D74 0000000D                           3314          DC    X'0000000D'
00001D78 99846D839983F3F2                   3315          DC    C'rd_crc32_init'
00001D85 00                                 3316          DC    X'00'
                                            3317 rd_crc32_init DCCPRLG CINDEX=1484,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1484
                                            3318          macro
                                            3319          dccextrn &m
                                            3320          gblc    &$dccext(1000)
                                            3321          gbla    &$dccexti
                                            3322          lcla    &i
                                            3323 &$dccext(&$dccexti+1) setc    '&m'
                                            3324 &i       seta    1
                                            3325 .loop    aif    (&i gt &$dccexti).around
                                            3326          aif    ('&$dccext(&i)' eq '&m').getout
                                            3327 &i       seta    &i+1
                                            3328          ago     .loop
                                            3329 .around  anop
                                            3330 &$dccexti seta &$dccexti+1
                                            3331          extrn  &m
                                            3332 .getout  anop
                                            3333          mend
00001D88                                    3334+$eye0090    ds    0d                                                    02-DCCCA
00001D88 C4C3C3                             3335+         dc cl3'DCC'                                                    02-DCCCA
00001D8B 01                                 3336+         dc xl1'01' format one                                          02-DCCCA
00001D8C 00000000                           3337+         dc a(0)                                                        02-DCCCA
00001D90 0000000000000000                   3338+         dc ad(0)                                                       02-DCCCA
00001D98 00000000000000A8                   3339+         dc ad(168)                                                     02-DCCCA
00001DA0 0000000000000000                   3340+         dc ad(0)                                                       02-DCCCA
00001DA8 0000000000001000                   3341+         dc ad(4096)                                                    02-DCCCA
00001DB0 20                                 3342+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DB1 03                                 3343+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DB2 03                                 3344+         dc al1(3)                                                      02-DCCCA
00001DB3 08                                 3345+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DB4 00                                 3346+         dc bl.8'00000000'                                              02-DCCCA
00001DB5 000000                             3347+         dc al3(0)                                                      02-DCCCA
00001DB8 0000000000001D74                   3348+         dc ad(@LNAME1484)                                              02-DCCCA
00001DC0                                    3349+         ds 0d                                                          02-DCCCA
00001DC0 0000000000001D88                   3350+         dc ad($eye0090)                                                02-DCCCA
00001DC8 0000000000000000                   3351+         dc ad(0)                                                       02-DCCCA
00001DD0                                    3352+         ds    0d                                                       01-DCCPR
00001DD0                                    3353+rd_crc32_init ds 0d                                                     01-DCCPR
00001DD0                                    3354+@REGION_1484_1 ds 0h                                                    01-DCCPR
00001DD0 EBEC D008 0024          00000008   3355+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3356 * ******* End of Prologue
                                            3357 * *
                                            3358 * ***
                                            3359 * ***
                                            3360 * ***
                                            3361 * ***       return 0xffffffff;
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001DD6 C0FF FFFF FFFF                     3362          LLILF 15,X'FFFFFFFF' ; 4294967295
                                            3363 * ***
                                            3364 * ***   }
                                            3365 * * **** Start of Epilogue
                                            3366          DCCEPIL
00001DDC                                    3367+         ds 0h                                                          01-DCCEP
                                            3368+* Epilog
                                            3369+* Epilog
00001DDC E3E0 D008 0004          00000008   3370+         lg    14,8(,13) restore the reg                                01-DCCEP
00001DE2 EB1C D020 0004          00000020   3371+         lmg   1,12,32(13)                                              01-DCCEP
00001DE8 07FE                               3372+         br   14                                                        01-DCCEP
                                            3373+* End of Epilog
                                            3374 * * **** End of Epilogue
                                            3375 *
                                            3376 *   DSECT for automatic variables in "rd_crc32_init"
                                            3377 *      (FUNCTION #1484)
                                            3378 *
00000000                00000000 000000A8   3379 @AUTO#rd_crc32_init DSECT
00000000                                    3380          DS    XL168
                                            3381 *
00001DEA                00000000 0000E868   3382 @CODE    CSECT
                                            3383 *
                                            3384 *
                                            3385 *
                                            3386 * ....... start of rd_crc32_update
00001DEA                                    3387 @LNAME1485 DS  0H
00001DEA 0000000F                           3388          DC    X'0000000F'
00001DEE 99846D839983F3F2                   3389          DC    C'rd_crc32_update'
00001DFD 00                                 3390          DC    X'00'
                                            3391 rd_crc32_update DCCPRLG CINDEX=1485,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1485
                                            3392          macro
                                            3393          dccextrn &m
                                            3394          gblc    &$dccext(1000)
                                            3395          gbla    &$dccexti
                                            3396          lcla    &i
                                            3397 &$dccext(&$dccexti+1) setc    '&m'
                                            3398 &i       seta    1
                                            3399 .loop    aif    (&i gt &$dccexti).around
                                            3400          aif    ('&$dccext(&i)' eq '&m').getout
                                            3401 &i       seta    &i+1
                                            3402          ago     .loop
                                            3403 .around  anop
                                            3404 &$dccexti seta &$dccexti+1
                                            3405          extrn  &m
                                            3406 .getout  anop
                                            3407          mend
00001E00                                    3408+$eye0093    ds    0d                                                    02-DCCCA
00001E00 C4C3C3                             3409+         dc cl3'DCC'                                                    02-DCCCA
00001E03 01                                 3410+         dc xl1'01' format one                                          02-DCCCA
00001E04 00000000                           3411+         dc a(0)                                                        02-DCCCA
00001E08 0000000000001E72                   3412+         dc ad(@PER_1485)                                               02-DCCCA
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001E10 00000000000000B0                   3413+         dc ad(176)                                                     02-DCCCA
00001E18 0000000000000000                   3414+         dc ad(0)                                                       02-DCCCA
00001E20 0000000000001000                   3415+         dc ad(4096)                                                    02-DCCCA
00001E28 20                                 3416+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E29 03                                 3417+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E2A 03                                 3418+         dc al1(3)                                                      02-DCCCA
00001E2B 08                                 3419+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E2C 00                                 3420+         dc bl.8'00000000'                                              02-DCCCA
00001E2D 000000                             3421+         dc al3(0)                                                      02-DCCCA
00001E30 0000000000001DEA                   3422+         dc ad(@LNAME1485)                                              02-DCCCA
00001E38                                    3423+         ds 0d                                                          02-DCCCA
00001E38 0000000000001E00                   3424+         dc ad($eye0093)                                                02-DCCCA
00001E40 0000000000000000                   3425+         dc ad(0)                                                       02-DCCCA
00001E48                                    3426+         ds    0d                                                       01-DCCPR
00001E48                                    3427+rd_crc32_update ds 0d                                                   01-DCCPR
00001E48                                    3428+@REGION_1485_1 ds 0h                                                    01-DCCPR
00001E48 EBEC D008 0024          00000008   3429+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E4E E3E0 D088 0004          00000088   3430+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001E54 E3C0 D090 0004          00000090   3431+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E5A B904 002E                          3432+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E5E E3B0 C018 0004          00000018   3433+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E64 A7EB 00B0               000000B0   3434+         aghi  14,176              increase by frame size               01-DCCPR
00001E68 E3E0 C020 0021          00000020   3435+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E6E 4720 B020               00000020   3436+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E72                                    3437+@PER_1485 ds   0h                                                       01-DCCPR
00001E72 EBDE 2080 0024          00000080   3438+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E78 E3C0 2090 0024          00000090   3439+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E7E B904 00D2                          3440+         lgr   13,2                set real frame pointer               01-DCCPR
00001E82 B904 00CF                          3441+         lgr   12,15               set base reg                         01-DCCPR
                        00001E48            3442+         using @REGION_1485_1,12                                        01-DCCPR
                                            3443          DCCPRV REG=2      ; Get PRV from DVT
00001E86 E320 B008 0004          00000008   3444+         LG 2,8(0,11)                                                   01-DCCPR
00001E8C B904 0031                          3445          LGR   3,1         ; ptr to parm area
                                            3446 * ******* End of Prologue
                                            3447 * *
00001E90 58F0 3004               00000004   3448          L     15,4(0,3)   ; crc
00001E94 E310 3008 0004          00000008   3449          LG    1,8(0,3)    ; data
                                            3450 * ***
                                            3451 * ***
                                            3452 * ***
                                            3453 * ***
                                            3454 * ***       unsigned int tbl_idx;
                                            3455 * ***
                                            3456 * ***       while (data_len--) {
00001E9A 47F0 C090               00001ED8   3457          B     @L483
00001EA0                                    3458          DS    0D
00001EA0 000000B0                           3459 @FRAMESIZE_1485 DC F'176'
00001EA4 00000000                           3460 @lit_1485_59 DC Q(crc_table)
00001EA8                                    3461 @L482    DS    0H
                                            3462 * ***           tbl_idx = (crc ^ *data) & 0xff;
00001EA8 E340 1000 0094          00000000   3463          LLC   4,0(0,1)
00001EAE 185F                               3464          LR    5,15
                                                                                                                           Page   75 
  Active Usings: @REGION_1485_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001EB0 1754                               3465          XR    5,4
00001EB2 C05B 0000 00FF                     3466          NILF  5,X'000000FF'
                                            3467 * ***           crc = (crc_table[tbl_idx] ^ (crc >> 8)) & 0xffffffff;
00001EB8 B916 0045                          3468          LLGFR 4,5
00001EBC E350 C05C 0016          00001EA4   3469          LLGF  5,@lit_1485_59 ; crc_table
00001EC2 EB44 0002 000D          00000002   3470          SLLG  4,4,2(0)    ; *0x4
00001EC8 4145 4000               00000000   3471          LA    4,0(5,4)
00001ECC 88F0 0008               00000008   3472          SRL   15,8(0)
00001ED0 57F4 2000               00000000   3473          X     15,0(4,2)
                                            3474 * ***
                                            3475 * ***           data++;
00001ED4 4110 1001               00000001   3476          LA    1,1(0,1)
                                            3477 * ***       }
00001ED8                                    3478 @L483    DS    0H
00001ED8 E340 3010 0004          00000010   3479          LG    4,16(0,3)   ; data_len
00001EDE B904 0054                          3480          LGR   5,4
00001EE2 A75B FFFF               0000FFFF   3481          AGHI  5,-1
00001EE6 E350 3010 0024          00000010   3482          STG   5,16(0,3)   ; data_len
00001EEC B902 0044                          3483          LTGR  4,4
00001EF0 4770 C060               00001EA8   3484          BNZ   @L482
                                            3485 * ***       return crc & 0xffffffff;
00001EF4 B916 00FF                          3486          LLGFR 15,15
                                            3487 * ***
                                            3488 * ***   }
                                            3489 * * **** Start of Epilogue
                                            3490          DCCEPIL
00001EF8                                    3491+         ds 0h                                                          01-DCCEP
                                            3492+* Epilog
00001EF8 D707 D088 D088 00000088 00000088   3493+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001EFE E3D0 D080 0004          00000080   3494+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F04 E3C0 D090 0004          00000090   3495+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F0A E3B0 C018 0004          00000018   3496+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001F10 E3C0 B010 0021          00000010   3497+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F16 E3E0 D008 0004          00000008   3498+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F1C EB1C D020 0004          00000020   3499+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F22 078E                               3500+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F24 E3F0 D010 0024          00000010   3501+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F2A E300 D018 0024          00000018   3502+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F30 E3F0 D090 0004          00000090   3503+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F36 E3F0 F018 0004          00000018   3504+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F3C 47F0 F040               00000040   3505+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3506+* End of Epilog
                                            3507 * * **** End of Epilogue
                                            3508          DROP  12
                                            3509 *
                                            3510 *   DSECT for automatic variables in "rd_crc32_update"
                                            3511 *      (FUNCTION #1485)
                                            3512 *
00000000                00000000 000000AC   3513 @AUTO#rd_crc32_update DSECT
00000000                                    3514          DS    XL168
000000A8                                    3515 rd_crc32_update#tbl_idx#0 DS 1F ; tbl_idx
                                            3516 *
                                                                                                                           Page   76 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F40                00000000 0000E868   3517 @CODE    CSECT
                                            3518 *
                                            3519 *
                                            3520 *
                                            3521 * ....... start of rd_crc32_finalize
00001F40                                    3522 @LNAME1486 DS  0H
00001F40 00000011                           3523          DC    X'00000011'
00001F44 99846D839983F3F2                   3524          DC    C'rd_crc32_finalize'
00001F55 00                                 3525          DC    X'00'
                                            3526 rd_crc32_finalize DCCPRLG CINDEX=1486,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1486
                                            3527          macro
                                            3528          dccextrn &m
                                            3529          gblc    &$dccext(1000)
                                            3530          gbla    &$dccexti
                                            3531          lcla    &i
                                            3532 &$dccext(&$dccexti+1) setc    '&m'
                                            3533 &i       seta    1
                                            3534 .loop    aif    (&i gt &$dccexti).around
                                            3535          aif    ('&$dccext(&i)' eq '&m').getout
                                            3536 &i       seta    &i+1
                                            3537          ago     .loop
                                            3538 .around  anop
                                            3539 &$dccexti seta &$dccexti+1
                                            3540          extrn  &m
                                            3541 .getout  anop
                                            3542          mend
00001F58                                    3543+$eye0097    ds    0d                                                    02-DCCCA
00001F58 C4C3C3                             3544+         dc cl3'DCC'                                                    02-DCCCA
00001F5B 01                                 3545+         dc xl1'01' format one                                          02-DCCCA
00001F5C 00000000                           3546+         dc a(0)                                                        02-DCCCA
00001F60 0000000000000000                   3547+         dc ad(0)                                                       02-DCCCA
00001F68 00000000000000A8                   3548+         dc ad(168)                                                     02-DCCCA
00001F70 0000000000000000                   3549+         dc ad(0)                                                       02-DCCCA
00001F78 0000000000001000                   3550+         dc ad(4096)                                                    02-DCCCA
00001F80 20                                 3551+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F81 03                                 3552+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F82 03                                 3553+         dc al1(3)                                                      02-DCCCA
00001F83 08                                 3554+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F84 00                                 3555+         dc bl.8'00000000'                                              02-DCCCA
00001F85 000000                             3556+         dc al3(0)                                                      02-DCCCA
00001F88 0000000000001F40                   3557+         dc ad(@LNAME1486)                                              02-DCCCA
00001F90                                    3558+         ds 0d                                                          02-DCCCA
00001F90 0000000000001F58                   3559+         dc ad($eye0097)                                                02-DCCCA
00001F98 0000000000000000                   3560+         dc ad(0)                                                       02-DCCCA
00001FA0                                    3561+         ds    0d                                                       01-DCCPR
00001FA0                                    3562+rd_crc32_finalize ds 0d                                                 01-DCCPR
00001FA0                                    3563+@REGION_1486_1 ds 0h                                                    01-DCCPR
00001FA0 EBEC D008 0024          00000008   3564+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3565 * ******* End of Prologue
                                            3566 * *
                                            3567 * ***
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3568 * ***
                                            3569 * ***
                                            3570 * ***       return crc ^ 0xffffffff;
00001FA6 58F0 1004               00000004   3571          L     15,4(0,1)   ; crc
00001FAA C0F7 FFFF FFFF                     3572          XILF  15,X'FFFFFFFF'
00001FB0 B916 00FF                          3573          LLGFR 15,15
                                            3574 * ***
                                            3575 * ***   }
                                            3576 * * **** Start of Epilogue
                                            3577          DCCEPIL
00001FB4                                    3578+         ds 0h                                                          01-DCCEP
                                            3579+* Epilog
                                            3580+* Epilog
00001FB4 E3E0 D008 0004          00000008   3581+         lg    14,8(,13) restore the reg                                01-DCCEP
00001FBA EB1C D020 0004          00000020   3582+         lmg   1,12,32(13)                                              01-DCCEP
00001FC0 07FE                               3583+         br   14                                                        01-DCCEP
                                            3584+* End of Epilog
                                            3585 * * **** End of Epilogue
                                            3586 *
                                            3587 *   DSECT for automatic variables in "rd_crc32_finalize"
                                            3588 *      (FUNCTION #1486)
                                            3589 *
00000000                00000000 000000A8   3590 @AUTO#rd_crc32_finalize DSECT
00000000                                    3591          DS    XL168
                                            3592 *
00001FC2                00000000 0000E868   3593 @CODE    CSECT
                                            3594 *
                                            3595 *
                                            3596 *
                                            3597 * ....... start of rd_crc32
00001FC2                                    3598 @LNAME1487 DS  0H
00001FC2 00000008                           3599          DC    X'00000008'
00001FC6 99846D839983F3F2                   3600          DC    C'rd_crc32'
00001FCE 00                                 3601          DC    X'00'
                                            3602 rd_crc32 DCCPRLG CINDEX=1487,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1487
                                            3603          macro
                                            3604          dccextrn &m
                                            3605          gblc    &$dccext(1000)
                                            3606          gbla    &$dccexti
                                            3607          lcla    &i
                                            3608 &$dccext(&$dccexti+1) setc    '&m'
                                            3609 &i       seta    1
                                            3610 .loop    aif    (&i gt &$dccexti).around
                                            3611          aif    ('&$dccext(&i)' eq '&m').getout
                                            3612 &i       seta    &i+1
                                            3613          ago     .loop
                                            3614 .around  anop
                                            3615 &$dccexti seta &$dccexti+1
                                            3616          extrn  &m
                                            3617 .getout  anop
                                            3618          mend
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001FD0                                    3619+$eye0100    ds    0d                                                    02-DCCCA
00001FD0 C4C3C3                             3620+         dc cl3'DCC'                                                    02-DCCCA
00001FD3 01                                 3621+         dc xl1'01' format one                                          02-DCCCA
00001FD4 00000000                           3622+         dc a(0)                                                        02-DCCCA
00001FD8 0000000000002042                   3623+         dc ad(@PER_1487)                                               02-DCCCA
00001FE0 00000000000000C0                   3624+         dc ad(192)                                                     02-DCCCA
00001FE8 0000000000000000                   3625+         dc ad(0)                                                       02-DCCCA
00001FF0 0000000000001000                   3626+         dc ad(4096)                                                    02-DCCCA
00001FF8 20                                 3627+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FF9 03                                 3628+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FFA 03                                 3629+         dc al1(3)                                                      02-DCCCA
00001FFB 08                                 3630+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FFC 00                                 3631+         dc bl.8'00000000'                                              02-DCCCA
00001FFD 000000                             3632+         dc al3(0)                                                      02-DCCCA
00002000 0000000000001FC2                   3633+         dc ad(@LNAME1487)                                              02-DCCCA
00002008                                    3634+         ds 0d                                                          02-DCCCA
00002008 0000000000001FD0                   3635+         dc ad($eye0100)                                                02-DCCCA
00002010 0000000000000000                   3636+         dc ad(0)                                                       02-DCCCA
00002018                                    3637+         ds    0d                                                       01-DCCPR
00002018                                    3638+rd_crc32 ds    0d                                                       01-DCCPR
00002018                                    3639+@REGION_1487_1 ds 0h                                                    01-DCCPR
00002018 EBEC D008 0024          00000008   3640+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000201E E3E0 D088 0004          00000088   3641+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002024 E3C0 D090 0004          00000090   3642+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000202A B904 002E                          3643+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000202E E3B0 C018 0004          00000018   3644+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002034 A7EB 00C0               000000C0   3645+         aghi  14,192              increase by frame size               01-DCCPR
00002038 E3E0 C020 0021          00000020   3646+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000203E 4720 B020               00000020   3647+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002042                                    3648+@PER_1487 ds   0h                                                       01-DCCPR
00002042 EBDE 2080 0024          00000080   3649+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002048 E3C0 2090 0024          00000090   3650+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000204E B904 00D2                          3651+         lgr   13,2                set real frame pointer               01-DCCPR
00002052 B904 00CF                          3652+         lgr   12,15               set base reg                         01-DCCPR
                        00002018            3653+         using @REGION_1487_1,12                                        01-DCCPR
00002056 B904 0021                          3654          LGR   2,1         ; ptr to parm area
                                            3655 * ******* End of Prologue
                                            3656 * *
                                            3657 * ***      return rd_crc32_finalize(rd_crc32_update(rd_crc32_init(),
                                            3658 * ***                      (const unsigned char *)data,
                                            3659 * ***                      data_len));
0000205A E3F0 C0E8 0004          00002100   3660          LG    15,@lit_1487_61 ; rd_crc32_init
00002060                                    3661 @@gen_label77 DS    0H
00002060 05EF                               3662          BALR  14,15
00002062                                    3663 @@gen_label78 DS    0H
00002062 B916 00FF                          3664          LLGFR 15,15
00002066 E3F0 D0A8 0024          000000A8   3665          STG   15,168(0,13)
0000206C E3F0 2000 0004          00000000   3666          LG    15,0(0,2)   ; data
00002072 E3F0 D0B0 0024          000000B0   3667          STG   15,176(0,13)
00002078 E3F0 2008 0004          00000008   3668          LG    15,8(0,2)   ; data_len
0000207E E3F0 D0B8 0024          000000B8   3669          STG   15,184(0,13)
00002084 4110 D0A8               000000A8   3670          LA    1,168(0,13)
                                                                                                                           Page   79 
  Active Usings: @REGION_1487_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002088 E3F0 C0F0 0004          00002108   3671          LG    15,@lit_1487_62 ; rd_crc32_update
0000208E                                    3672 @@gen_label79 DS    0H
0000208E 05EF                               3673          BALR  14,15
00002090                                    3674 @@gen_label80 DS    0H
00002090 B916 00FF                          3675          LLGFR 15,15
00002094 E3F0 D0A8 0024          000000A8   3676          STG   15,168(0,13)
0000209A 4110 D0A8               000000A8   3677          LA    1,168(0,13)
0000209E E3F0 C0F8 0004          00002110   3678          LG    15,@lit_1487_63 ; rd_crc32_finalize
000020A4                                    3679 @@gen_label81 DS    0H
000020A4 05EF                               3680          BALR  14,15
000020A6                                    3681 @@gen_label82 DS    0H
000020A6 B916 00FF                          3682          LLGFR 15,15
                                            3683 * ***   }
                                            3684 * * **** Start of Epilogue
                                            3685          DCCEPIL
000020AA                                    3686+         ds 0h                                                          01-DCCEP
                                            3687+* Epilog
000020AA D707 D088 D088 00000088 00000088   3688+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000020B0 E3D0 D080 0004          00000080   3689+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020B6 E3C0 D090 0004          00000090   3690+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020BC E3B0 C018 0004          00000018   3691+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020C2 E3C0 B010 0021          00000010   3692+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000020C8 E3E0 D008 0004          00000008   3693+         lg  14,8(0,13)          load up return address                 01-DCCEP
000020CE EB1C D020 0004          00000020   3694+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000020D4 078E                               3695+         bcr 8,14                if same dsab, just return              01-DCCEP
000020D6 E3F0 D010 0024          00000010   3696+         stg 15,16(0,13)         save return code                       01-DCCEP
000020DC E300 D018 0024          00000018   3697+         stg 0,24(0,13)          save more return code                  01-DCCEP
000020E2 E3F0 D090 0004          00000090   3698+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020E8 E3F0 F018 0004          00000018   3699+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020EE 47F0 F040               00000040   3700+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3701+* End of Epilog
                                            3702 * * **** End of Epilogue
000020F8                                    3703          DS    0D
000020F8 000000C0                           3704 @FRAMESIZE_1487 DC F'192'
000020FC 00000000
00002100 0000000000001DD0                   3705 @lit_1487_61 DC AD(rd_crc32_init)
00002108 0000000000001E48                   3706 @lit_1487_62 DC AD(rd_crc32_update)
00002110 0000000000001FA0                   3707 @lit_1487_63 DC AD(rd_crc32_finalize)
                                            3708          DROP  12
                                            3709 *
                                            3710 *   DSECT for automatic variables in "rd_crc32"
                                            3711 *      (FUNCTION #1487)
                                            3712 *
00000000                00000000 000000A8   3713 @AUTO#rd_crc32 DSECT
00000000                                    3714          DS    XL168
                                            3715 *
00002118                00000000 0000E868   3716 @CODE    CSECT
                                            3717 *
                                            3718 *
                                            3719 *
                                            3720 * ....... start of rd_kafka_rkt_is_lw
00002118                                    3721 @LNAME1670 DS  0H
                                                                                                                           Page   80 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002118 00000012                           3722          DC    X'00000012'
0000211C 99846D9281869281                   3723          DC    C'rd_kafka_rkt_is_lw'
0000212E 00                                 3724          DC    X'00'
                                            3725 rd_kafka_rkt_is_lw DCCPRLG CINDEX=1670,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1670
                                            3726          macro
                                            3727          dccextrn &m
                                            3728          gblc    &$dccext(1000)
                                            3729          gbla    &$dccexti
                                            3730          lcla    &i
                                            3731 &$dccext(&$dccexti+1) setc    '&m'
                                            3732 &i       seta    1
                                            3733 .loop    aif    (&i gt &$dccexti).around
                                            3734          aif    ('&$dccext(&i)' eq '&m').getout
                                            3735 &i       seta    &i+1
                                            3736          ago     .loop
                                            3737 .around  anop
                                            3738 &$dccexti seta &$dccexti+1
                                            3739          extrn  &m
                                            3740 .getout  anop
                                            3741          mend
00002130                                    3742+$eye0103    ds    0d                                                    02-DCCCA
00002130 C4C3C3                             3743+         dc cl3'DCC'                                                    02-DCCCA
00002133 01                                 3744+         dc xl1'01' format one                                          02-DCCCA
00002134 00000000                           3745+         dc a(0)                                                        02-DCCCA
00002138 0000000000000000                   3746+         dc ad(0)                                                       02-DCCCA
00002140 00000000000000B0                   3747+         dc ad(176)                                                     02-DCCCA
00002148 0000000000000000                   3748+         dc ad(0)                                                       02-DCCCA
00002150 0000000000001000                   3749+         dc ad(4096)                                                    02-DCCCA
00002158 20                                 3750+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002159 03                                 3751+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000215A 03                                 3752+         dc al1(3)                                                      02-DCCCA
0000215B 08                                 3753+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000215C 00                                 3754+         dc bl.8'00000000'                                              02-DCCCA
0000215D 000000                             3755+         dc al3(0)                                                      02-DCCCA
00002160 0000000000002118                   3756+         dc ad(@LNAME1670)                                              02-DCCCA
00002168                                    3757+         ds 0d                                                          02-DCCCA
00002168 0000000000002130                   3758+         dc ad($eye0103)                                                02-DCCCA
00002170 0000000000000000                   3759+         dc ad(0)                                                       02-DCCCA
00002178                                    3760+         ds    0d                                                       01-DCCPR
00002178                                    3761+rd_kafka_rkt_is_lw ds 0d                                                01-DCCPR
00002178                                    3762+@REGION_1670_1 ds 0h                                                    01-DCCPR
00002178 EBEC D008 0024          00000008   3763+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000217E B904 00CF                          3764+         lgr   12,15               set base reg                         01-DCCPR
                        00002178            3765+         using @REGION_1670_1,12                                        01-DCCPR
                                            3766 * ******* End of Prologue
                                            3767 * *
                                            3768 * ***           const rd_kafka_lwtopic_t *lrkt = ((const rd_kafka_lwto\
                                            3769 * pic_t *)app_rkt);
00002182 E3F0 1000 0004          00000000   3770          LG    15,0(0,1)   ; app_rkt
                                            3771 * ***           return !__memcmp(lrkt->lrkt_magic,"LRKT",4);
00002188 E310 C058 0004          000021D0   3772          LG    1,@lit_1670_65
                                                                                                                           Page   81 
  Active Usings: @REGION_1670_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000218E 4110 10E8               000000E8   3773          LA    1,232(0,1)
00002192 D503 F000 1000 00000000 00000000   3774          CLC   0(4,15),0(1)
00002198 A7F9 0001               00000001   3775          LGHI  15,1
0000219C 4720 C034               000021AC   3776          BH    @@gen_label83
000021A0 4780 C030               000021A8   3777          BE    @@gen_label84
000021A4 A7FB FFFF               0000FFFF   3778          AGHI  15,-1
000021A8                                    3779 @@gen_label84 DS 0H
000021A8 A7FB FFFF               0000FFFF   3780          AGHI  15,-1
000021AC                                    3781 @@gen_label83 DS 0H
000021AC 10FF                               3782          LPR   15,15
000021AE A7FA FFFF               0000FFFF   3783          AHI   15,-1
000021B2 88F0 001F               0000001F   3784          SRL   15,31(0)
000021B6 E3F0 C060 0080          000021D8   3785          NG    15,@lit_1670_66
                                            3786 * ***   }
                                            3787 * * **** Start of Epilogue
                                            3788          DCCEPIL
000021BC                                    3789+         ds 0h                                                          01-DCCEP
                                            3790+* Epilog
                                            3791+* Epilog
000021BC E3E0 D008 0004          00000008   3792+         lg    14,8(,13) restore the reg                                01-DCCEP
000021C2 EB1C D020 0004          00000020   3793+         lmg   1,12,32(13)                                              01-DCCEP
000021C8 07FE                               3794+         br   14                                                        01-DCCEP
                                            3795+* End of Epilog
                                            3796 * * **** End of Epilogue
000021D0                                    3797          DS    0D
000021D0 000000000000ECA4                   3798 @lit_1670_65 DC AD(@strings@)
000021D8 00000000000000FF                   3799 @lit_1670_66 DC FD'255' 0x00000000000000ff
                                            3800          DROP  12
                                            3801 *
                                            3802 *   DSECT for automatic variables in "rd_kafka_rkt_is_lw"
                                            3803 *      (FUNCTION #1670)
                                            3804 *
00000000                00000000 000000A8   3805 @AUTO#rd_kafka_rkt_is_lw DSECT
00000000                                    3806          DS    XL168
                                            3807 *
000021E0                00000000 0000E868   3808 @CODE    CSECT
                                            3809 *
                                            3810 *
                                            3811 *
                                            3812 * ....... start of rd_kafka_rkt_get_lw
000021E0                                    3813 @LNAME1671 DS  0H
000021E0 00000013                           3814          DC    X'00000013'
000021E4 99846D9281869281                   3815          DC    C'rd_kafka_rkt_get_lw'
000021F7 00                                 3816          DC    X'00'
                                            3817 rd_kafka_rkt_get_lw DCCPRLG CINDEX=1671,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1671
                                            3818          macro
                                            3819          dccextrn &m
                                            3820          gblc    &$dccext(1000)
                                            3821          gbla    &$dccexti
                                            3822          lcla    &i
                                            3823 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   82 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3824 &i       seta    1
                                            3825 .loop    aif    (&i gt &$dccexti).around
                                            3826          aif    ('&$dccext(&i)' eq '&m').getout
                                            3827 &i       seta    &i+1
                                            3828          ago     .loop
                                            3829 .around  anop
                                            3830 &$dccexti seta &$dccexti+1
                                            3831          extrn  &m
                                            3832 .getout  anop
                                            3833          mend
000021F8                                    3834+$eye0106    ds    0d                                                    02-DCCCA
000021F8 C4C3C3                             3835+         dc cl3'DCC'                                                    02-DCCCA
000021FB 01                                 3836+         dc xl1'01' format one                                          02-DCCCA
000021FC 00000000                           3837+         dc a(0)                                                        02-DCCCA
00002200 000000000000226A                   3838+         dc ad(@PER_1671)                                               02-DCCCA
00002208 00000000000000B0                   3839+         dc ad(176)                                                     02-DCCCA
00002210 0000000000000000                   3840+         dc ad(0)                                                       02-DCCCA
00002218 0000000000001000                   3841+         dc ad(4096)                                                    02-DCCCA
00002220 20                                 3842+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002221 03                                 3843+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002222 03                                 3844+         dc al1(3)                                                      02-DCCCA
00002223 08                                 3845+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002224 00                                 3846+         dc bl.8'00000000'                                              02-DCCCA
00002225 000000                             3847+         dc al3(0)                                                      02-DCCCA
00002228 00000000000021E0                   3848+         dc ad(@LNAME1671)                                              02-DCCCA
00002230                                    3849+         ds 0d                                                          02-DCCCA
00002230 00000000000021F8                   3850+         dc ad($eye0106)                                                02-DCCCA
00002238 0000000000000000                   3851+         dc ad(0)                                                       02-DCCCA
00002240                                    3852+         ds    0d                                                       01-DCCPR
00002240                                    3853+rd_kafka_rkt_get_lw ds 0d                                               01-DCCPR
00002240                                    3854+@REGION_1671_1 ds 0h                                                    01-DCCPR
00002240 EBEC D008 0024          00000008   3855+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002246 E3E0 D088 0004          00000088   3856+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000224C E3C0 D090 0004          00000090   3857+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002252 B904 002E                          3858+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002256 E3B0 C018 0004          00000018   3859+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000225C A7EB 00B0               000000B0   3860+         aghi  14,176              increase by frame size               01-DCCPR
00002260 E3E0 C020 0021          00000020   3861+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002266 4720 B020               00000020   3862+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000226A                                    3863+@PER_1671 ds   0h                                                       01-DCCPR
0000226A EBDE 2080 0024          00000080   3864+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002270 E3C0 2090 0024          00000090   3865+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002276 B904 00D2                          3866+         lgr   13,2                set real frame pointer               01-DCCPR
0000227A B904 00CF                          3867+         lgr   12,15               set base reg                         01-DCCPR
                        00002240            3868+         using @REGION_1671_1,12                                        01-DCCPR
0000227E B904 0021                          3869          LGR   2,1         ; ptr to parm area
                                            3870 * ******* End of Prologue
                                            3871 * *
                                            3872 * ***           if (rd_kafka_rkt_is_lw(rkt))
00002282 E3F0 2000 0004          00000000   3873          LG    15,0(0,2)   ; rkt
00002288 E3F0 D0A8 0024          000000A8   3874          STG   15,168(0,13)
0000228E 4110 D0A8               000000A8   3875          LA    1,168(0,13)
                                                                                                                           Page   83 
  Active Usings: @REGION_1671_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002292 E3F0 C078 0004          000022B8   3876          LG    15,@lit_1671_67 ; rd_kafka_rkt_is_lw
00002298                                    3877 @@gen_label85 DS    0H
00002298 05EF                               3878          BALR  14,15
0000229A                                    3879 @@gen_label86 DS    0H
0000229A C0FB 0000 00FF                     3880          NILF  15,X'000000FF'
000022A0 12FF                               3881          LTR   15,15
000022A2 4780 C080               000022C0   3882          BZ    @L555
                                            3883 * ***                   return ((rd_kafka_lwtopic_t *)rkt);
000022A6 E3F0 2000 0004          00000000   3884          LG    15,0(0,2)   ; rkt
000022AC 47F0 C084               000022C4   3885          B     @ret_lab_1671
000022B0                                    3886          DS    0D
000022B0 000000B0                           3887 @FRAMESIZE_1671 DC F'176'
000022B4 00000000
000022B8 0000000000002178                   3888 @lit_1671_67 DC AD(rd_kafka_rkt_is_lw)
000022C0                                    3889 @L555    DS    0H
                                            3890 * ***           return ((void *)0);
000022C0 A7F9 0000               00000000   3891          LGHI  15,0        ; 0
                                            3892 * ***   }
000022C4                                    3893 @ret_lab_1671 DS 0H
                                            3894 * * **** Start of Epilogue
                                            3895          DCCEPIL
000022C4                                    3896+         ds 0h                                                          01-DCCEP
                                            3897+* Epilog
000022C4 D707 D088 D088 00000088 00000088   3898+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000022CA E3D0 D080 0004          00000080   3899+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000022D0 E3C0 D090 0004          00000090   3900+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000022D6 E3B0 C018 0004          00000018   3901+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000022DC E3C0 B010 0021          00000010   3902+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000022E2 E3E0 D008 0004          00000008   3903+         lg  14,8(0,13)          load up return address                 01-DCCEP
000022E8 EB1C D020 0004          00000020   3904+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000022EE 078E                               3905+         bcr 8,14                if same dsab, just return              01-DCCEP
000022F0 E3F0 D010 0024          00000010   3906+         stg 15,16(0,13)         save return code                       01-DCCEP
000022F6 E300 D018 0024          00000018   3907+         stg 0,24(0,13)          save more return code                  01-DCCEP
000022FC E3F0 D090 0004          00000090   3908+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002302 E3F0 F018 0004          00000018   3909+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002308 47F0 F040               00000040   3910+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3911+* End of Epilog
                                            3912 * * **** End of Epilogue
                                            3913          DROP  12
                                            3914 *
                                            3915 *   DSECT for automatic variables in "rd_kafka_rkt_get_lw"
                                            3916 *      (FUNCTION #1671)
                                            3917 *
00000000                00000000 000000A8   3918 @AUTO#rd_kafka_rkt_get_lw DSECT
00000000                                    3919          DS    XL168
                                            3920 *
0000230C                00000000 0000E868   3921 @CODE    CSECT
                                            3922 *
                                            3923 *
                                            3924 *
                                            3925 * ....... start of rd_kafka_lwtopic_keep
0000230C                                    3926 @LNAME1674 DS  0H
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000230C 00000015                           3927          DC    X'00000015'
00002310 99846D9281869281                   3928          DC    C'rd_kafka_lwtopic_keep'
00002325 00                                 3929          DC    X'00'
                                            3930 rd_kafka_lwtopic_keep DCCPRLG CINDEX=1674,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1674
                                            3931          macro
                                            3932          dccextrn &m
                                            3933          gblc    &$dccext(1000)
                                            3934          gbla    &$dccexti
                                            3935          lcla    &i
                                            3936 &$dccext(&$dccexti+1) setc    '&m'
                                            3937 &i       seta    1
                                            3938 .loop    aif    (&i gt &$dccexti).around
                                            3939          aif    ('&$dccext(&i)' eq '&m').getout
                                            3940 &i       seta    &i+1
                                            3941          ago     .loop
                                            3942 .around  anop
                                            3943 &$dccexti seta &$dccexti+1
                                            3944          extrn  &m
                                            3945 .getout  anop
                                            3946          mend
00002328                                    3947+$eye0109    ds    0d                                                    02-DCCCA
00002328 C4C3C3                             3948+         dc cl3'DCC'                                                    02-DCCCA
0000232B 01                                 3949+         dc xl1'01' format one                                          02-DCCCA
0000232C 00000000                           3950+         dc a(0)                                                        02-DCCCA
00002330 000000000000239A                   3951+         dc ad(@PER_1674)                                               02-DCCCA
00002338 00000000000000B8                   3952+         dc ad(184)                                                     02-DCCCA
00002340 0000000000000000                   3953+         dc ad(0)                                                       02-DCCCA
00002348 0000000000001000                   3954+         dc ad(4096)                                                    02-DCCCA
00002350 20                                 3955+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002351 03                                 3956+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002352 03                                 3957+         dc al1(3)                                                      02-DCCCA
00002353 08                                 3958+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002354 00                                 3959+         dc bl.8'00000000'                                              02-DCCCA
00002355 000000                             3960+         dc al3(0)                                                      02-DCCCA
00002358 000000000000230C                   3961+         dc ad(@LNAME1674)                                              02-DCCCA
00002360                                    3962+         ds 0d                                                          02-DCCCA
00002360 0000000000002328                   3963+         dc ad($eye0109)                                                02-DCCCA
00002368 0000000000000000                   3964+         dc ad(0)                                                       02-DCCCA
00002370                                    3965+         ds    0d                                                       01-DCCPR
00002370                                    3966+rd_kafka_lwtopic_keep ds 0d                                             01-DCCPR
00002370                                    3967+@REGION_1674_1 ds 0h                                                    01-DCCPR
00002370 EBEC D008 0024          00000008   3968+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002376 E3E0 D088 0004          00000088   3969+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000237C E3C0 D090 0004          00000090   3970+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002382 B904 002E                          3971+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002386 E3B0 C018 0004          00000018   3972+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000238C A7EB 00B8               000000B8   3973+         aghi  14,184              increase by frame size               01-DCCPR
00002390 E3E0 C020 0021          00000020   3974+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002396 4720 B020               00000020   3975+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000239A                                    3976+@PER_1674 ds   0h                                                       01-DCCPR
0000239A EBDE 2080 0024          00000080   3977+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000023A0 E3C0 2090 0024          00000090   3978+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000023A6 B904 00D2                          3979+         lgr   13,2                set real frame pointer               01-DCCPR
000023AA B904 00CF                          3980+         lgr   12,15               set base reg                         01-DCCPR
                        00002370            3981+         using @REGION_1674_1,12                                        01-DCCPR
                                            3982 * ******* End of Prologue
                                            3983 * *
                                            3984 * ***           rd_atomic32_add(&lrkt->lrkt_refcnt, 1);
000023AE E3F0 1000 0004          00000000   3985          LG    15,0(0,1)   ; lrkt
000023B4 41F0 F010               00000010   3986          LA    15,16(0,15)
000023B8 E3F0 D0A8 0024          000000A8   3987          STG   15,168(0,13)
000023BE E548 D0B0 0001          000000B0   3988          MVGHI 176(13),1
000023C4 4110 D0A8               000000A8   3989          LA    1,168(0,13)
000023C8 E3F0 C0B0 0004          00002420   3990          LG    15,@lit_1674_70 ; rd_atomic32_add
000023CE                                    3991 @@gen_label88 DS    0H
000023CE 05EF                               3992          BALR  14,15
000023D0                                    3993 @@gen_label89 DS    0H
                                            3994 * ***   }
000023D0                                    3995 @ret_lab_1674 DS 0H
                                            3996 * * **** Start of Epilogue
                                            3997          DCCEPIL
000023D0                                    3998+         ds 0h                                                          01-DCCEP
                                            3999+* Epilog
000023D0 D707 D088 D088 00000088 00000088   4000+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000023D6 E3D0 D080 0004          00000080   4001+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000023DC E3C0 D090 0004          00000090   4002+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000023E2 E3B0 C018 0004          00000018   4003+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000023E8 E3C0 B010 0021          00000010   4004+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000023EE E3E0 D008 0004          00000008   4005+         lg  14,8(0,13)          load up return address                 01-DCCEP
000023F4 EB1C D020 0004          00000020   4006+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000023FA 078E                               4007+         bcr 8,14                if same dsab, just return              01-DCCEP
000023FC E3F0 D010 0024          00000010   4008+         stg 15,16(0,13)         save return code                       01-DCCEP
00002402 E300 D018 0024          00000018   4009+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002408 E3F0 D090 0004          00000090   4010+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000240E E3F0 F018 0004          00000018   4011+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002414 47F0 F040               00000040   4012+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4013+* End of Epilog
                                            4014 * * **** End of Epilogue
00002418                                    4015          DS    0D
00002418 000000B8                           4016 @FRAMESIZE_1674 DC F'184'
0000241C 00000000
00002420 0000000000000060                   4017 @lit_1674_70 DC AD(rd_atomic32_add)
                                            4018          DROP  12
                                            4019 *
                                            4020 *   DSECT for automatic variables in "rd_kafka_lwtopic_keep"
                                            4021 *      (FUNCTION #1674)
                                            4022 *
00000000                00000000 000000A8   4023 @AUTO#rd_kafka_lwtopic_keep DSECT
00000000                                    4024          DS    XL168
                                            4025 *
00002428                00000000 0000E868   4026 @CODE    CSECT
                                            4027 *
                                            4028 *
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4029 *
                                            4030 * ....... start of rd_kafka_topic_keep
00002428                                    4031 @LNAME1675 DS  0H
00002428 00000013                           4032          DC    X'00000013'
0000242C 99846D9281869281                   4033          DC    C'rd_kafka_topic_keep'
0000243F 00                                 4034          DC    X'00'
                                            4035 rd_kafka_topic_keep DCCPRLG CINDEX=1675,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1675
                                            4036          macro
                                            4037          dccextrn &m
                                            4038          gblc    &$dccext(1000)
                                            4039          gbla    &$dccexti
                                            4040          lcla    &i
                                            4041 &$dccext(&$dccexti+1) setc    '&m'
                                            4042 &i       seta    1
                                            4043 .loop    aif    (&i gt &$dccexti).around
                                            4044          aif    ('&$dccext(&i)' eq '&m').getout
                                            4045 &i       seta    &i+1
                                            4046          ago     .loop
                                            4047 .around  anop
                                            4048 &$dccexti seta &$dccexti+1
                                            4049          extrn  &m
                                            4050 .getout  anop
                                            4051          mend
00002440                                    4052+$eye0112    ds    0d                                                    02-DCCCA
00002440 C4C3C3                             4053+         dc cl3'DCC'                                                    02-DCCCA
00002443 01                                 4054+         dc xl1'01' format one                                          02-DCCCA
00002444 00000000                           4055+         dc a(0)                                                        02-DCCCA
00002448 00000000000024B2                   4056+         dc ad(@PER_1675)                                               02-DCCCA
00002450 00000000000000C0                   4057+         dc ad(192)                                                     02-DCCCA
00002458 0000000000000000                   4058+         dc ad(0)                                                       02-DCCCA
00002460 0000000000001000                   4059+         dc ad(4096)                                                    02-DCCCA
00002468 20                                 4060+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002469 03                                 4061+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000246A 03                                 4062+         dc al1(3)                                                      02-DCCCA
0000246B 08                                 4063+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000246C 00                                 4064+         dc bl.8'00000000'                                              02-DCCCA
0000246D 000000                             4065+         dc al3(0)                                                      02-DCCCA
00002470 0000000000002428                   4066+         dc ad(@LNAME1675)                                              02-DCCCA
00002478                                    4067+         ds 0d                                                          02-DCCCA
00002478 0000000000002440                   4068+         dc ad($eye0112)                                                02-DCCCA
00002480 0000000000000000                   4069+         dc ad(0)                                                       02-DCCCA
00002488                                    4070+         ds    0d                                                       01-DCCPR
00002488                                    4071+rd_kafka_topic_keep ds 0d                                               01-DCCPR
00002488                                    4072+@REGION_1675_1 ds 0h                                                    01-DCCPR
00002488 EBEC D008 0024          00000008   4073+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000248E E3E0 D088 0004          00000088   4074+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002494 E3C0 D090 0004          00000090   4075+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000249A B904 002E                          4076+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000249E E3B0 C018 0004          00000018   4077+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000024A4 A7EB 00C0               000000C0   4078+         aghi  14,192              increase by frame size               01-DCCPR
000024A8 E3E0 C020 0021          00000020   4079+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000024AE 4720 B020               00000020   4080+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000024B2                                    4081+@PER_1675 ds   0h                                                       01-DCCPR
000024B2 EBDE 2080 0024          00000080   4082+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000024B8 E3C0 2090 0024          00000090   4083+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000024BE B904 00D2                          4084+         lgr   13,2                set real frame pointer               01-DCCPR
000024C2 B904 00CF                          4085+         lgr   12,15               set base reg                         01-DCCPR
                        00002488            4086+         using @REGION_1675_1,12                                        01-DCCPR
                                            4087 * ******* End of Prologue
                                            4088 * *
000024C6 E320 1000 0004          00000000   4089          LG    2,0(0,1)    ; rkt
                                            4090 * ***           rd_kafka_lwtopic_t *lrkt;
                                            4091 * ***           if ((((lrkt = rd_kafka_rkt_get_lw(rkt)) != ((void *)0)\
                                            4092 * )))
000024CC E320 D0B0 0024          000000B0   4093          STG   2,176(0,13)
000024D2 4110 D0B0               000000B0   4094          LA    1,176(0,13)
000024D6 E3F0 C080 0004          00002508   4095          LG    15,@lit_1675_72 ; rd_kafka_rkt_get_lw
000024DC                                    4096 @@gen_label90 DS    0H
000024DC 05EF                               4097          BALR  14,15
000024DE                                    4098 @@gen_label91 DS    0H
000024DE B902 001F                          4099          LTGR  1,15
000024E2 4780 C098               00002520   4100          BE    @L556
                                            4101 * ***                   rd_kafka_lwtopic_keep(lrkt);
000024E6 E3F0 D0B0 0024          000000B0   4102          STG   15,176(0,13)
000024EC 4110 D0B0               000000B0   4103          LA    1,176(0,13)
000024F0 E3F0 C088 0004          00002510   4104          LG    15,@lit_1675_73 ; rd_kafka_lwtopic_keep
000024F6                                    4105 @@gen_label93 DS    0H
000024F6 05EF                               4106          BALR  14,15
000024F8                                    4107 @@gen_label94 DS    0H
000024F8 47F0 C0B4               0000253C   4108          B     @L557
00002500                                    4109          DS    0D
00002500 000000C0                           4110 @FRAMESIZE_1675 DC F'192'
00002504 00000000
00002508 0000000000002240                   4111 @lit_1675_72 DC AD(rd_kafka_rkt_get_lw)
00002510 0000000000002370                   4112 @lit_1675_73 DC AD(rd_kafka_lwtopic_keep)
00002518 0000000000000060                   4113 @lit_1675_74 DC AD(rd_atomic32_add)
                                            4114 * ***           else
00002520                                    4115 @L556    DS    0H
                                            4116 * ***                   rd_atomic32_add(&rkt->rkt_refcnt, 1);
00002520 41F0 2018               00000018   4117          LA    15,24(0,2)
00002524 E3F0 D0B0 0024          000000B0   4118          STG   15,176(0,13)
0000252A E548 D0B8 0001          000000B8   4119          MVGHI 184(13),1
00002530 4110 D0B0               000000B0   4120          LA    1,176(0,13)
00002534 E3F0 C090 0004          00002518   4121          LG    15,@lit_1675_74 ; rd_atomic32_add
0000253A                                    4122 @@gen_label95 DS    0H
0000253A 05EF                               4123          BALR  14,15
0000253C                                    4124 @@gen_label96 DS    0H
0000253C                                    4125 @L557    DS    0H
                                            4126 * ***           return rkt;
0000253C B904 00F2                          4127          LGR   15,2
                                            4128 * ***   }
                                            4129 * * **** Start of Epilogue
                                            4130          DCCEPIL
                                                                                                                           Page   88 
  Active Usings: @REGION_1675_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002540                                    4131+         ds 0h                                                          01-DCCEP
                                            4132+* Epilog
00002540 D707 D088 D088 00000088 00000088   4133+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002546 E3D0 D080 0004          00000080   4134+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000254C E3C0 D090 0004          00000090   4135+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002552 E3B0 C018 0004          00000018   4136+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002558 E3C0 B010 0021          00000010   4137+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000255E E3E0 D008 0004          00000008   4138+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002564 EB1C D020 0004          00000020   4139+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000256A 078E                               4140+         bcr 8,14                if same dsab, just return              01-DCCEP
0000256C E3F0 D010 0024          00000010   4141+         stg 15,16(0,13)         save return code                       01-DCCEP
00002572 E300 D018 0024          00000018   4142+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002578 E3F0 D090 0004          00000090   4143+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000257E E3F0 F018 0004          00000018   4144+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002584 47F0 F040               00000040   4145+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4146+* End of Epilog
                                            4147 * * **** End of Epilogue
                                            4148          DROP  12
                                            4149 *
                                            4150 *   DSECT for automatic variables in "rd_kafka_topic_keep"
                                            4151 *      (FUNCTION #1675)
                                            4152 *
00000000                00000000 000000A8   4153 @AUTO#rd_kafka_topic_keep DSECT
00000000                                    4154          DS    XL168
                                            4155 *
00002588                00000000 0000E868   4156 @CODE    CSECT
                                            4157 *
                                            4158 *
                                            4159 *
                                            4160 * ....... start of rd_kafka_topic_destroy0
00002588                                    4161 @LNAME1678 DS  0H
00002588 00000017                           4162          DC    X'00000017'
0000258C 99846D9281869281                   4163          DC    C'rd_kafka_topic_destroy0'
000025A3 00                                 4164          DC    X'00'
                                            4165 rd_kafka_topic_destroy0 DCCPRLG CINDEX=1678,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1678
                                            4166          macro
                                            4167          dccextrn &m
                                            4168          gblc    &$dccext(1000)
                                            4169          gbla    &$dccexti
                                            4170          lcla    &i
                                            4171 &$dccext(&$dccexti+1) setc    '&m'
                                            4172 &i       seta    1
                                            4173 .loop    aif    (&i gt &$dccexti).around
                                            4174          aif    ('&$dccext(&i)' eq '&m').getout
                                            4175 &i       seta    &i+1
                                            4176          ago     .loop
                                            4177 .around  anop
                                            4178 &$dccexti seta &$dccexti+1
                                            4179          extrn  &m
                                            4180 .getout  anop
                                            4181          mend
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000025A8                                    4182+$eye0115    ds    0d                                                    02-DCCCA
000025A8 C4C3C3                             4183+         dc cl3'DCC'                                                    02-DCCCA
000025AB 01                                 4184+         dc xl1'01' format one                                          02-DCCCA
000025AC 00000000                           4185+         dc a(0)                                                        02-DCCCA
000025B0 000000000000261A                   4186+         dc ad(@PER_1678)                                               02-DCCCA
000025B8 00000000000000B8                   4187+         dc ad(184)                                                     02-DCCCA
000025C0 0000000000000000                   4188+         dc ad(0)                                                       02-DCCCA
000025C8 0000000000001000                   4189+         dc ad(4096)                                                    02-DCCCA
000025D0 20                                 4190+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000025D1 03                                 4191+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000025D2 03                                 4192+         dc al1(3)                                                      02-DCCCA
000025D3 08                                 4193+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000025D4 00                                 4194+         dc bl.8'00000000'                                              02-DCCCA
000025D5 000000                             4195+         dc al3(0)                                                      02-DCCCA
000025D8 0000000000002588                   4196+         dc ad(@LNAME1678)                                              02-DCCCA
000025E0                                    4197+         ds 0d                                                          02-DCCCA
000025E0 00000000000025A8                   4198+         dc ad($eye0115)                                                02-DCCCA
000025E8 0000000000000000                   4199+         dc ad(0)                                                       02-DCCCA
000025F0                                    4200+         ds    0d                                                       01-DCCPR
000025F0                                    4201+rd_kafka_topic_destroy0 ds 0d                                           01-DCCPR
000025F0                                    4202+@REGION_1678_1 ds 0h                                                    01-DCCPR
000025F0 EBEC D008 0024          00000008   4203+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000025F6 E3E0 D088 0004          00000088   4204+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000025FC E3C0 D090 0004          00000090   4205+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002602 B904 002E                          4206+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002606 E3B0 C018 0004          00000018   4207+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000260C A7EB 00B8               000000B8   4208+         aghi  14,184              increase by frame size               01-DCCPR
00002610 E3E0 C020 0021          00000020   4209+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002616 4720 B020               00000020   4210+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000261A                                    4211+@PER_1678 ds   0h                                                       01-DCCPR
0000261A EBDE 2080 0024          00000080   4212+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002620 E3C0 2090 0024          00000090   4213+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002626 B904 00D2                          4214+         lgr   13,2                set real frame pointer               01-DCCPR
0000262A B904 00CF                          4215+         lgr   12,15               set base reg                         01-DCCPR
                        000025F0            4216+         using @REGION_1678_1,12                                        01-DCCPR
                                            4217 * ******* End of Prologue
                                            4218 * *
0000262E E320 1000 0004          00000000   4219          LG    2,0(0,1)    ; rkt
                                            4220 * ***           rd_kafka_lwtopic_t *lrkt;
                                            4221 * ***           if ((((lrkt = rd_kafka_rkt_get_lw(rkt)) != ((void *)0)\
                                            4222 * )))
00002634 E320 D0B0 0024          000000B0   4223          STG   2,176(0,13)
0000263A 4110 D0B0               000000B0   4224          LA    1,176(0,13)
0000263E E3F0 C080 0004          00002670   4225          LG    15,@lit_1678_76 ; rd_kafka_rkt_get_lw
00002644                                    4226 @@gen_label97 DS    0H
00002644 05EF                               4227          BALR  14,15
00002646                                    4228 @@gen_label98 DS    0H
00002646 B902 001F                          4229          LTGR  1,15
0000264A 4780 C0A0               00002690   4230          BE    @L558
                                            4231 * ***                   rd_kafka_lwtopic_destroy(lrkt);
0000264E E3F0 D0B0 0024          000000B0   4232          STG   15,176(0,13)
00002654 4110 D0B0               000000B0   4233          LA    1,176(0,13)
                                                                                                                           Page   90 
  Active Usings: @REGION_1678_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002658 E3F0 C088 0004          00002678   4234          LG    15,@lit_1678_77 ; rd_kafka_lwtopic_destroy
0000265E                                    4235 @@gen_label100 DS    0H
0000265E 05EF                               4236          BALR  14,15
00002660                                    4237 @@gen_label101 DS    0H
00002660 47F0 C0CE               000026BE   4238          B     @L559
00002668                                    4239          DS    0D
00002668 000000B8                           4240 @FRAMESIZE_1678 DC F'184'
0000266C 00000000
00002670 0000000000002240                   4241 @lit_1678_76 DC AD(rd_kafka_rkt_get_lw)
00002678 0000000000000000                   4242 @lit_1678_77 DC AD(rd_kafka_lwtopic_destroy)
00002680 0000000000000958                   4243 @lit_1678_78 DC AD(rd_refcnt_sub0)
00002688 0000000000000000                   4244 @lit_1678_79 DC AD(rd_kafka_topic_destroy_final)
                                            4245 * ***           else if (((rd_refcnt_sub0(&rkt->rkt_refcnt) == 0)))
00002690                                    4246 @L558    DS    0H
00002690 41F0 2018               00000018   4247          LA    15,24(0,2)
00002694 E3F0 D0B0 0024          000000B0   4248          STG   15,176(0,13)
0000269A 4110 D0B0               000000B0   4249          LA    1,176(0,13)
0000269E E3F0 C090 0004          00002680   4250          LG    15,@lit_1678_78 ; rd_refcnt_sub0
000026A4                                    4251 @@gen_label102 DS    0H
000026A4 05EF                               4252          BALR  14,15
000026A6                                    4253 @@gen_label103 DS    0H
000026A6 12FF                               4254          LTR   15,15
000026A8 4770 C0CE               000026BE   4255          BNE   @L559
                                            4256 * ***                   rd_kafka_topic_destroy_final(rkt);
000026AC E320 D0B0 0024          000000B0   4257          STG   2,176(0,13)
000026B2 4110 D0B0               000000B0   4258          LA    1,176(0,13)
000026B6 E3F0 C098 0004          00002688   4259          LG    15,@lit_1678_79 ; rd_kafka_topic_destroy_final
000026BC                                    4260 @@gen_label105 DS    0H
000026BC 05EF                               4261          BALR  14,15
000026BE                                    4262 @@gen_label106 DS    0H
000026BE                                    4263 @L560    DS    0H
                                            4264 * ***   }
000026BE                                    4265 @L559    DS    0H
000026BE                                    4266 @ret_lab_1678 DS 0H
                                            4267 * * **** Start of Epilogue
                                            4268          DCCEPIL
000026BE                                    4269+         ds 0h                                                          01-DCCEP
                                            4270+* Epilog
000026BE D707 D088 D088 00000088 00000088   4271+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000026C4 E3D0 D080 0004          00000080   4272+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026CA E3C0 D090 0004          00000090   4273+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026D0 E3B0 C018 0004          00000018   4274+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026D6 E3C0 B010 0021          00000010   4275+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026DC E3E0 D008 0004          00000008   4276+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026E2 EB1C D020 0004          00000020   4277+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026E8 078E                               4278+         bcr 8,14                if same dsab, just return              01-DCCEP
000026EA E3F0 D010 0024          00000010   4279+         stg 15,16(0,13)         save return code                       01-DCCEP
000026F0 E300 D018 0024          00000018   4280+         stg 0,24(0,13)          save more return code                  01-DCCEP
000026F6 E3F0 D090 0004          00000090   4281+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000026FC E3F0 F018 0004          00000018   4282+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002702 47F0 F040               00000040   4283+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4284+* End of Epilog
                                                                                                                           Page   91 
  Active Usings: @REGION_1678_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4285 * * **** End of Epilogue
                                            4286          DROP  12
                                            4287 *
                                            4288 *   DSECT for automatic variables in "rd_kafka_topic_destroy0"
                                            4289 *      (FUNCTION #1678)
                                            4290 *
00000000                00000000 000000A8   4291 @AUTO#rd_kafka_topic_destroy0 DSECT
00000000                                    4292          DS    XL168
                                            4293 *
00002706                00000000 0000E868   4294 @CODE    CSECT
                                            4295 *
                                            4296 *
                                            4297 *
                                            4298 * ....... start of rd_kafka_toppar_keep0
00002706                                    4299 @LNAME1780 DS  0H
00002706 00000015                           4300          DC    X'00000015'
0000270A 99846D9281869281                   4301          DC    C'rd_kafka_toppar_keep0'
0000271F 00                                 4302          DC    X'00'
                                            4303 rd_kafka_toppar_keep0 DCCPRLG CINDEX=1780,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1780
                                            4304          macro
                                            4305          dccextrn &m
                                            4306          gblc    &$dccext(1000)
                                            4307          gbla    &$dccexti
                                            4308          lcla    &i
                                            4309 &$dccext(&$dccexti+1) setc    '&m'
                                            4310 &i       seta    1
                                            4311 .loop    aif    (&i gt &$dccexti).around
                                            4312          aif    ('&$dccext(&i)' eq '&m').getout
                                            4313 &i       seta    &i+1
                                            4314          ago     .loop
                                            4315 .around  anop
                                            4316 &$dccexti seta &$dccexti+1
                                            4317          extrn  &m
                                            4318 .getout  anop
                                            4319          mend
00002720                                    4320+$eye0118    ds    0d                                                    02-DCCCA
00002720 C4C3C3                             4321+         dc cl3'DCC'                                                    02-DCCCA
00002723 01                                 4322+         dc xl1'01' format one                                          02-DCCCA
00002724 00000000                           4323+         dc a(0)                                                        02-DCCCA
00002728 0000000000002792                   4324+         dc ad(@PER_1780)                                               02-DCCCA
00002730 00000000000000B8                   4325+         dc ad(184)                                                     02-DCCCA
00002738 0000000000000000                   4326+         dc ad(0)                                                       02-DCCCA
00002740 0000000000001000                   4327+         dc ad(4096)                                                    02-DCCCA
00002748 20                                 4328+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002749 03                                 4329+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000274A 03                                 4330+         dc al1(3)                                                      02-DCCCA
0000274B 08                                 4331+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000274C 00                                 4332+         dc bl.8'00000000'                                              02-DCCCA
0000274D 000000                             4333+         dc al3(0)                                                      02-DCCCA
00002750 0000000000002706                   4334+         dc ad(@LNAME1780)                                              02-DCCCA
00002758                                    4335+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002758 0000000000002720                   4336+         dc ad($eye0118)                                                02-DCCCA
00002760 0000000000000000                   4337+         dc ad(0)                                                       02-DCCCA
00002768                                    4338+         ds    0d                                                       01-DCCPR
00002768                                    4339+rd_kafka_toppar_keep0 ds 0d                                             01-DCCPR
00002768                                    4340+@REGION_1780_1 ds 0h                                                    01-DCCPR
00002768 EBEC D008 0024          00000008   4341+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000276E E3E0 D088 0004          00000088   4342+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002774 E3C0 D090 0004          00000090   4343+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000277A B904 002E                          4344+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000277E E3B0 C018 0004          00000018   4345+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002784 A7EB 00B8               000000B8   4346+         aghi  14,184              increase by frame size               01-DCCPR
00002788 E3E0 C020 0021          00000020   4347+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000278E 4720 B020               00000020   4348+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002792                                    4349+@PER_1780 ds   0h                                                       01-DCCPR
00002792 EBDE 2080 0024          00000080   4350+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002798 E3C0 2090 0024          00000090   4351+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000279E B904 00D2                          4352+         lgr   13,2                set real frame pointer               01-DCCPR
000027A2 B904 00CF                          4353+         lgr   12,15               set base reg                         01-DCCPR
                        00002768            4354+         using @REGION_1780_1,12                                        01-DCCPR
                                            4355 * ******* End of Prologue
                                            4356 * *
                                            4357 * ***           rd_atomic32_add(&rktp->rktp_refcnt, 1);
000027A6 E320 1010 0004          00000010   4358          LG    2,16(0,1)   ; rktp
000027AC 41F0 2090               00000090   4359          LA    15,144(0,2)
000027B0 E3F0 D0A8 0024          000000A8   4360          STG   15,168(0,13)
000027B6 E548 D0B0 0001          000000B0   4361          MVGHI 176(13),1
000027BC 4110 D0A8               000000A8   4362          LA    1,168(0,13)
000027C0 E3F0 C0B8 0004          00002820   4363          LG    15,@lit_1780_81 ; rd_atomic32_add
000027C6                                    4364 @@gen_label107 DS    0H
000027C6 05EF                               4365          BALR  14,15
000027C8                                    4366 @@gen_label108 DS    0H
                                            4367 * ***           return rktp;
000027C8 B904 00F2                          4368          LGR   15,2
                                            4369 * ***   }
                                            4370 * * **** Start of Epilogue
                                            4371          DCCEPIL
000027CC                                    4372+         ds 0h                                                          01-DCCEP
                                            4373+* Epilog
000027CC D707 D088 D088 00000088 00000088   4374+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000027D2 E3D0 D080 0004          00000080   4375+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000027D8 E3C0 D090 0004          00000090   4376+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000027DE E3B0 C018 0004          00000018   4377+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000027E4 E3C0 B010 0021          00000010   4378+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000027EA E3E0 D008 0004          00000008   4379+         lg  14,8(0,13)          load up return address                 01-DCCEP
000027F0 EB1C D020 0004          00000020   4380+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000027F6 078E                               4381+         bcr 8,14                if same dsab, just return              01-DCCEP
000027F8 E3F0 D010 0024          00000010   4382+         stg 15,16(0,13)         save return code                       01-DCCEP
000027FE E300 D018 0024          00000018   4383+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002804 E3F0 D090 0004          00000090   4384+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000280A E3F0 F018 0004          00000018   4385+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002810 47F0 F040               00000040   4386+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4387+* End of Epilog
                                                                                                                           Page   93 
  Active Usings: @REGION_1780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4388 * * **** End of Epilogue
00002818                                    4389          DS    0D
00002818 000000B8                           4390 @FRAMESIZE_1780 DC F'184'
0000281C 00000000
00002820 0000000000000060                   4391 @lit_1780_81 DC AD(rd_atomic32_add)
                                            4392          DROP  12
                                            4393 *
                                            4394 *   DSECT for automatic variables in "rd_kafka_toppar_keep0"
                                            4395 *      (FUNCTION #1780)
                                            4396 *
00000000                00000000 000000A8   4397 @AUTO#rd_kafka_toppar_keep0 DSECT
00000000                                    4398          DS    XL168
                                            4399 *
00002828                00000000 0000E868   4400 @CODE    CSECT
                                            4401 *
                                            4402 *
                                            4403 *
                                            4404 * ....... start of rd_kafka_toppar_topic_cmp
00002828                                    4405 @LNAME1873 DS  0H
00002828 00000019                           4406          DC    X'00000019'
0000282C 99846D9281869281                   4407          DC    C'rd_kafka_toppar_topic_cmp'
00002845 00                                 4408          DC    X'00'
                                            4409 rd_kafka_toppar_topic_cmp DCCPRLG CINDEX=1873,BASER=12,FRAME=176,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1873
                                            4410          macro
                                            4411          dccextrn &m
                                            4412          gblc    &$dccext(1000)
                                            4413          gbla    &$dccexti
                                            4414          lcla    &i
                                            4415 &$dccext(&$dccexti+1) setc    '&m'
                                            4416 &i       seta    1
                                            4417 .loop    aif    (&i gt &$dccexti).around
                                            4418          aif    ('&$dccext(&i)' eq '&m').getout
                                            4419 &i       seta    &i+1
                                            4420          ago     .loop
                                            4421 .around  anop
                                            4422 &$dccexti seta &$dccexti+1
                                            4423          extrn  &m
                                            4424 .getout  anop
                                            4425          mend
00002848                                    4426+$eye0121    ds    0d                                                    02-DCCCA
00002848 C4C3C3                             4427+         dc cl3'DCC'                                                    02-DCCCA
0000284B 01                                 4428+         dc xl1'01' format one                                          02-DCCCA
0000284C 00000000                           4429+         dc a(0)                                                        02-DCCCA
00002850 0000000000000000                   4430+         dc ad(0)                                                       02-DCCCA
00002858 00000000000000B0                   4431+         dc ad(176)                                                     02-DCCCA
00002860 0000000000000000                   4432+         dc ad(0)                                                       02-DCCCA
00002868 0000000000001000                   4433+         dc ad(4096)                                                    02-DCCCA
00002870 20                                 4434+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002871 03                                 4435+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002872 03                                 4436+         dc al1(3)                                                      02-DCCCA
00002873 08                                 4437+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   94 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002874 00                                 4438+         dc bl.8'00000000'                                              02-DCCCA
00002875 000000                             4439+         dc al3(0)                                                      02-DCCCA
00002878 0000000000002828                   4440+         dc ad(@LNAME1873)                                              02-DCCCA
00002880                                    4441+         ds 0d                                                          02-DCCCA
00002880 0000000000002848                   4442+         dc ad($eye0121)                                                02-DCCCA
00002888 0000000000000000                   4443+         dc ad(0)                                                       02-DCCCA
00002890                                    4444+         ds    0d                                                       01-DCCPR
00002890                                    4445+rd_kafka_toppar_topic_cmp ds 0d                                         01-DCCPR
00002890                                    4446+@REGION_1873_1 ds 0h                                                    01-DCCPR
00002890 EBEC D008 0024          00000008   4447+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002896 B904 00CF                          4448+         lgr   12,15               set base reg                         01-DCCPR
                        00002890            4449+         using @REGION_1873_1,12                                        01-DCCPR
                                            4450 * ******* End of Prologue
                                            4451 * *
                                            4452 * ***           const rd_kafka_toppar_t *a = _a, *b = _b;
0000289A E3F0 1000 0004          00000000   4453          LG    15,0(0,1)   ; _a
000028A0 E310 1008 0004          00000008   4454          LG    1,8(0,1)    ; _b
                                            4455 * ***           return __strcmp(a->rktp_rkt->rkt_topic->str,b->rktp_rk\
                                            4456 * t->rkt_topic->str);
000028A6 E3F0 F060 0004          00000060   4457          LG    15,96(0,15) ; offset of rktp_rkt in rd_kafka_toppar_s
000028AC E3F0 F080 0004          00000080   4458          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000028B2 E310 1060 0004          00000060   4459          LG    1,96(0,1)   ; offset of rktp_rkt in rd_kafka_toppar_s
000028B8 E310 1080 0004          00000080   4460          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000028BE E3F0 F008 0004          00000008   4461          LG    15,8(0,15)
000028C4 E310 1008 0004          00000008   4462          LG    1,8(0,1)
000028CA 4100 0000               00000000   4463          LA    0,0(0,0)
000028CE A729 0000               00000000   4464          LGHI  2,0
000028D2                                    4465 @@gen_label109 DS 0H
000028D2 B25D 00F1                          4466          CLST  15,1
000028D6 4710 C042               000028D2   4467          BC  1,@@gen_label109
000028DA 4780 C05E               000028EE   4468          BE    @@gen_label110
000028DE E320 F000 0090          00000000   4469          LLGC  2,0(0,15)
000028E4 E3F0 1000 0090          00000000   4470          LLGC  15,0(0,1)
000028EA B90B 002F                          4471          SLGR  2,15
000028EE                                    4472 @@gen_label110 DS 0H
000028EE B914 00F2                          4473          LGFR  15,2
                                            4474 * ***
                                            4475 * ***   }
                                            4476 * * **** Start of Epilogue
                                            4477          DCCEPIL
000028F2                                    4478+         ds 0h                                                          01-DCCEP
                                            4479+* Epilog
                                            4480+* Epilog
000028F2 E3E0 D008 0004          00000008   4481+         lg    14,8(,13) restore the reg                                01-DCCEP
000028F8 EB1C D020 0004          00000020   4482+         lmg   1,12,32(13)                                              01-DCCEP
000028FE 07FE                               4483+         br   14                                                        01-DCCEP
                                            4484+* End of Epilog
                                            4485 * * **** End of Epilogue
                                            4486          DROP  12
                                            4487 *
                                            4488 *   DSECT for automatic variables in "rd_kafka_toppar_topic_cmp"
                                            4489 *      (FUNCTION #1873)
                                                                                                                           Page   95 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4490 *
00000000                00000000 000000A8   4491 @AUTO#rd_kafka_toppar_topic_cmp DSECT
00000000                                    4492          DS    XL168
                                            4493 *
00002900                00000000 0000E868   4494 @CODE    CSECT
                                            4495 *
                                            4496 *
                                            4497 *
                                            4498 * ....... start of rd_kafka_txn_state2str
00002900                                    4499 @LNAME1893 DS  0H
00002900 00000016                           4500          DC    X'00000016'
00002904 99846D9281869281                   4501          DC    C'rd_kafka_txn_state2str'
0000291A 00                                 4502          DC    X'00'
                                            4503 rd_kafka_txn_state2str DCCPRLG CINDEX=1893,BASER=12,FRAME=168,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1893
                                            4504          macro
                                            4505          dccextrn &m
                                            4506          gblc    &$dccext(1000)
                                            4507          gbla    &$dccexti
                                            4508          lcla    &i
                                            4509 &$dccext(&$dccexti+1) setc    '&m'
                                            4510 &i       seta    1
                                            4511 .loop    aif    (&i gt &$dccexti).around
                                            4512          aif    ('&$dccext(&i)' eq '&m').getout
                                            4513 &i       seta    &i+1
                                            4514          ago     .loop
                                            4515 .around  anop
                                            4516 &$dccexti seta &$dccexti+1
                                            4517          extrn  &m
                                            4518 .getout  anop
                                            4519          mend
00002920                                    4520+$eye0124    ds    0d                                                    02-DCCCA
00002920 C4C3C3                             4521+         dc cl3'DCC'                                                    02-DCCCA
00002923 01                                 4522+         dc xl1'01' format one                                          02-DCCCA
00002924 00000000                           4523+         dc a(0)                                                        02-DCCCA
00002928 0000000000002992                   4524+         dc ad(@PER_1893)                                               02-DCCCA
00002930 00000000000000A8                   4525+         dc ad(168)                                                     02-DCCCA
00002938 0000000000000000                   4526+         dc ad(0)                                                       02-DCCCA
00002940 0000000000001000                   4527+         dc ad(4096)                                                    02-DCCCA
00002948 20                                 4528+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002949 03                                 4529+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000294A 03                                 4530+         dc al1(3)                                                      02-DCCCA
0000294B 08                                 4531+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000294C 00                                 4532+         dc bl.8'00000000'                                              02-DCCCA
0000294D 000000                             4533+         dc al3(0)                                                      02-DCCCA
00002950 0000000000002900                   4534+         dc ad(@LNAME1893)                                              02-DCCCA
00002958                                    4535+         ds 0d                                                          02-DCCCA
00002958 0000000000002920                   4536+         dc ad($eye0124)                                                02-DCCCA
00002960 0000000000000000                   4537+         dc ad(0)                                                       02-DCCCA
00002968                                    4538+         ds    0d                                                       01-DCCPR
00002968                                    4539+rd_kafka_txn_state2str ds 0d                                            01-DCCPR
00002968                                    4540+@REGION_1893_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002968 EBEC D008 0024          00000008   4541+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000296E E3E0 D088 0004          00000088   4542+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002974 E3C0 D090 0004          00000090   4543+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000297A B904 002E                          4544+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000297E E3B0 C018 0004          00000018   4545+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002984 A7EB 00A8               000000A8   4546+         aghi  14,168              increase by frame size               01-DCCPR
00002988 E3E0 C020 0021          00000020   4547+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000298E 4720 B020               00000020   4548+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002992                                    4549+@PER_1893 ds   0h                                                       01-DCCPR
00002992 EBDE 2080 0024          00000080   4550+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002998 E3C0 2090 0024          00000090   4551+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000299E B904 00D2                          4552+         lgr   13,2                set real frame pointer               01-DCCPR
000029A2 B904 00CF                          4553+         lgr   12,15               set base reg                         01-DCCPR
                        00002968            4554+         using @REGION_1893_1,12                                        01-DCCPR
                                            4555          DCCPRV REG=15     ; Get PRV from DVT
000029A6 E3F0 B008 0004          00000008   4556+         LG 15,8(0,11)                                                  01-DCCPR
                                            4557 * ******* End of Prologue
                                            4558 * *
                                            4559 * ***           static const char *names[] = {
                                            4560 * ***                   "Init",
                                            4561 * ***                   "WaitPID",
                                            4562 * ***                   "ReadyNotAcked",
                                            4563 * ***                   "Ready",
                                            4564 * ***                   "InTransaction",
                                            4565 * ***                   "BeginCommit",
                                            4566 * ***                   "CommittingTransaction",
                                            4567 * ***                   "CommitNotAcked",
                                            4568 * ***                   "AbortingTransaction",
                                            4569 * ***                   "AbortedNotAcked",
                                            4570 * ***                   "AbortableError",
                                            4571 * ***                   "FatalError"
                                            4572 * ***           return names[state];
000029AC E310 1004 0014          00000004   4573          LGF   1,4(0,1)    ; state
000029B2 E320 C0AC 0014          00002A14   4574          LGF   2,@lit_1893_83
000029B8 41F2 F000               00000000   4575          LA    15,0(2,15)
000029BC EB11 0003 000D          00000003   4576          SLLG  1,1,3(0)    ; *0x8
000029C2 E3F1 F678 0004          00000678   4577          LG    15,1656(1,15)
                                            4578 * ***   }
                                            4579 * * **** Start of Epilogue
                                            4580          DCCEPIL
000029C8                                    4581+         ds 0h                                                          01-DCCEP
                                            4582+* Epilog
000029C8 D707 D088 D088 00000088 00000088   4583+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000029CE E3D0 D080 0004          00000080   4584+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000029D4 E3C0 D090 0004          00000090   4585+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000029DA E3B0 C018 0004          00000018   4586+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000029E0 E3C0 B010 0021          00000010   4587+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000029E6 E3E0 D008 0004          00000008   4588+         lg  14,8(0,13)          load up return address                 01-DCCEP
000029EC EB1C D020 0004          00000020   4589+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000029F2 078E                               4590+         bcr 8,14                if same dsab, just return              01-DCCEP
000029F4 E3F0 D010 0024          00000010   4591+         stg 15,16(0,13)         save return code                       01-DCCEP
000029FA E300 D018 0024          00000018   4592+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   97 
  Active Usings: @REGION_1893_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002A00 E3F0 D090 0004          00000090   4593+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A06 E3F0 F018 0004          00000018   4594+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A0C 47F0 F040               00000040   4595+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4596+* End of Epilog
                                            4597 * * **** End of Epilogue
00002A10                                    4598          DS    0D
00002A10 000000A8                           4599 @FRAMESIZE_1893 DC F'168'
00002A14 00000000                           4600 @lit_1893_83 DC Q(@@STATIC)
                                            4601          DROP  12
                                            4602 *
                                            4603 *   DSECT for automatic variables in "rd_kafka_txn_state2str"
                                            4604 *      (FUNCTION #1893)
                                            4605 *
00000000                00000000 000000A8   4606 @AUTO#rd_kafka_txn_state2str DSECT
00000000                                    4607          DS    XL168
                                            4608 *
00002A18                00000000 0000E868   4609 @CODE    CSECT
                                            4610 *
                                            4611 *
                                            4612 *
                                            4613 * ....... start of rd_kafka_curr_msgs_add
00002A18                                    4614 @LNAME1894 DS  0H
00002A18 00000016                           4615          DC    X'00000016'
00002A1C 99846D9281869281                   4616          DC    C'rd_kafka_curr_msgs_add'
00002A32 00                                 4617          DC    X'00'
                                            4618 rd_kafka_curr_msgs_add DCCPRLG CINDEX=1894,BASER=12,FRAME=184,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1894
                                            4619          macro
                                            4620          dccextrn &m
                                            4621          gblc    &$dccext(1000)
                                            4622          gbla    &$dccexti
                                            4623          lcla    &i
                                            4624 &$dccext(&$dccexti+1) setc    '&m'
                                            4625 &i       seta    1
                                            4626 .loop    aif    (&i gt &$dccexti).around
                                            4627          aif    ('&$dccext(&i)' eq '&m').getout
                                            4628 &i       seta    &i+1
                                            4629          ago     .loop
                                            4630 .around  anop
                                            4631 &$dccexti seta &$dccexti+1
                                            4632          extrn  &m
                                            4633 .getout  anop
                                            4634          mend
00002A38                                    4635+$eye0128    ds    0d                                                    02-DCCCA
00002A38 C4C3C3                             4636+         dc cl3'DCC'                                                    02-DCCCA
00002A3B 01                                 4637+         dc xl1'01' format one                                          02-DCCCA
00002A3C 00000000                           4638+         dc a(0)                                                        02-DCCCA
00002A40 0000000000002AAA                   4639+         dc ad(@PER_1894)                                               02-DCCCA
00002A48 00000000000000B8                   4640+         dc ad(184)                                                     02-DCCCA
00002A50 0000000000000000                   4641+         dc ad(0)                                                       02-DCCCA
00002A58 0000000000001000                   4642+         dc ad(4096)                                                    02-DCCCA
00002A60 20                                 4643+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002A61 03                                 4644+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002A62 03                                 4645+         dc al1(3)                                                      02-DCCCA
00002A63 08                                 4646+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002A64 00                                 4647+         dc bl.8'00000000'                                              02-DCCCA
00002A65 000000                             4648+         dc al3(0)                                                      02-DCCCA
00002A68 0000000000002A18                   4649+         dc ad(@LNAME1894)                                              02-DCCCA
00002A70                                    4650+         ds 0d                                                          02-DCCCA
00002A70 0000000000002A38                   4651+         dc ad($eye0128)                                                02-DCCCA
00002A78 0000000000000000                   4652+         dc ad(0)                                                       02-DCCCA
00002A80                                    4653+         ds    0d                                                       01-DCCPR
00002A80                                    4654+rd_kafka_curr_msgs_add ds 0d                                            01-DCCPR
00002A80                                    4655+@REGION_1894_1 ds 0h                                                    01-DCCPR
00002A80 EBEC D008 0024          00000008   4656+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A86 E3E0 D088 0004          00000088   4657+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002A8C E3C0 D090 0004          00000090   4658+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002A92 B904 002E                          4659+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002A96 E3B0 C018 0004          00000018   4660+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002A9C A7EB 00B8               000000B8   4661+         aghi  14,184              increase by frame size               01-DCCPR
00002AA0 E3E0 C020 0021          00000020   4662+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002AA6 4720 B020               00000020   4663+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002AAA                                    4664+@PER_1894 ds   0h                                                       01-DCCPR
00002AAA EBDE 2080 0024          00000080   4665+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002AB0 E3C0 2090 0024          00000090   4666+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002AB6 B904 00D2                          4667+         lgr   13,2                set real frame pointer               01-DCCPR
00002ABA B904 00CF                          4668+         lgr   12,15               set base reg                         01-DCCPR
                        00002A80            4669+         using @REGION_1894_1,12                                        01-DCCPR
00002ABE B904 0041                          4670          LGR   4,1         ; ptr to parm area
                                            4671 * ******* End of Prologue
                                            4672 * *
00002AC2 E320 4000 0004          00000000   4673          LG    2,0(0,4)    ; rk
00002AC8 E330 4020 0004          00000020   4674          LG    3,32(0,4)   ; rdlock
                                            4675 * ***
                                            4676 * ***      if (rk->rk_type != RD_KAFKA_PRODUCER)
00002ACE E55C 29D8 0000          000009D8   4677          CHSI  2520(2),0
00002AD4 4780 C090               00002B10   4678          BE    @L595
                                            4679 * ***         return RD_KAFKA_RESP_ERR_NO_ERROR;
00002AD8 A7F9 0000               00000000   4680          LGHI  15,0        ; 0
00002ADC 47F0 C18C               00002C0C   4681          B     @ret_lab_1894
00002AE0                                    4682          DS    0D
00002AE0 000000B8                           4683 @FRAMESIZE_1894 DC F'184'
00002AE4 00000000
00002AE8 0000000000000000                   4684 @lit_1894_86 DC AD(mtx_lock)
00002AF0 0000000000000000                   4685 @lit_1894_87 DC AD(mtx_unlock)
00002AF8 0000000000000000                   4686 @lit_1894_89 DC AD(rwlock_rdunlock)
00002B00 0000000000000000                   4687 @lit_1894_90 DC AD(cnd_wait)
00002B08 0000000000000000                   4688 @lit_1894_91 DC AD(rwlock_rdlock)
00002B10                                    4689 @L595    DS    0H
                                            4690 * ***
                                            4691 * ***      mtx_lock(&rk->rk_curr_msgs.lock);
00002B10 41F0 2F98               00000F98   4692          LA    15,3992(0,2)
00002B14 E3F0 D0A8 0024          000000A8   4693          STG   15,168(0,13)
00002B1A 4110 D0A8               000000A8   4694          LA    1,168(0,13)
                                                                                                                           Page   99 
  Active Usings: @REGION_1894_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002B1E E3F0 C068 0004          00002AE8   4695          LG    15,@lit_1894_86 ; mtx_lock
00002B24                                    4696 @@gen_label112 DS    0H
00002B24 05EF                               4697          BALR  14,15
00002B26                                    4698 @@gen_label113 DS    0H
                                            4699 * ***      while (((rk->rk_curr_msgs.cnt + cnt > rk->rk_curr_msgs.max_\
                                            4700 * cnt || (unsigned long long)(rk->rk_curr_msgs.size + size) > (unsigne\
                                            4701 * d long long)rk->rk_curr_msgs.max_size))) {
00002B26 47F0 C126               00002BA6   4702          B     @L599
00002B2A                                    4703 @L598    DS    0H
                                            4704 * ***
                                            4705 * ***
                                            4706 * ***
                                            4707 * ***         if (!block) {
00002B2A E3F0 401C 0012          0000001C   4708          LT    15,28(0,4)  ; block
00002B30 4770 C0D2               00002B52   4709          BNZ   @L601
                                            4710 * ***            mtx_unlock(&rk->rk_curr_msgs.lock);
00002B34 41F0 2F98               00000F98   4711          LA    15,3992(0,2)
00002B38 E3F0 D0A8 0024          000000A8   4712          STG   15,168(0,13)
00002B3E 4110 D0A8               000000A8   4713          LA    1,168(0,13)
00002B42 E3F0 C070 0004          00002AF0   4714          LG    15,@lit_1894_87 ; mtx_unlock
00002B48                                    4715 @@gen_label115 DS    0H
00002B48 05EF                               4716          BALR  14,15
00002B4A                                    4717 @@gen_label116 DS    0H
                                            4718 * ***            return RD_KAFKA_RESP_ERR__QUEUE_FULL;
00002B4A A7F9 FF48               0000FF48   4719          LGHI  15,-184     ; -184
00002B4E 47F0 C18C               00002C0C   4720          B     @ret_lab_1894
                                            4721 * ***         }
00002B52                                    4722 @L601    DS    0H
                                            4723 * ***
                                            4724 * ***                   if (rdlock)
00002B52 B902 00F3                          4725          LTGR  15,3
00002B56 4780 C0EC               00002B6C   4726          BZ    @L602
                                            4727 * ***                           rwlock_rdunlock(rdlock);
00002B5A E330 D0A8 0024          000000A8   4728          STG   3,168(0,13)
00002B60 4110 D0A8               000000A8   4729          LA    1,168(0,13)
00002B64 E3F0 C078 0004          00002AF8   4730          LG    15,@lit_1894_89 ; rwlock_rdunlock
00002B6A                                    4731 @@gen_label118 DS    0H
00002B6A 05EF                               4732          BALR  14,15
00002B6C                                    4733 @@gen_label119 DS    0H
00002B6C                                    4734 @L602    DS    0H
                                            4735 * ***
                                            4736 * ***         cnd_wait(&rk->rk_curr_msgs.cnd, &rk->rk_curr_msgs.lock);
00002B6C 41F0 2FC0               00000FC0   4737          LA    15,4032(0,2)
00002B70 E3F0 D0A8 0024          000000A8   4738          STG   15,168(0,13)
00002B76 41F0 2F98               00000F98   4739          LA    15,3992(0,2)
00002B7A E3F0 D0B0 0024          000000B0   4740          STG   15,176(0,13)
00002B80 4110 D0A8               000000A8   4741          LA    1,168(0,13)
00002B84 E3F0 C080 0004          00002B00   4742          LG    15,@lit_1894_90 ; cnd_wait
00002B8A                                    4743 @@gen_label120 DS    0H
00002B8A 05EF                               4744          BALR  14,15
00002B8C                                    4745 @@gen_label121 DS    0H
                                            4746 * ***
                                                                                                                           Page  100 
  Active Usings: @REGION_1894_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4747 * ***                   if (rdlock)
00002B8C B902 00F3                          4748          LTGR  15,3
00002B90 4780 C126               00002BA6   4749          BZ    @L599
                                            4750 * ***                           rwlock_rdlock(rdlock);
00002B94 E330 D0A8 0024          000000A8   4751          STG   3,168(0,13)
00002B9A 4110 D0A8               000000A8   4752          LA    1,168(0,13)
00002B9E E3F0 C088 0004          00002B08   4753          LG    15,@lit_1894_91 ; rwlock_rdlock
00002BA4                                    4754 @@gen_label123 DS    0H
00002BA4 05EF                               4755          BALR  14,15
00002BA6                                    4756 @@gen_label124 DS    0H
00002BA6                                    4757 @L603    DS    0H
                                            4758 * ***
                                            4759 * ***      }
00002BA6                                    4760 @L599    DS    0H
00002BA6 58F0 2FF0               00000FF0   4761          L     15,4080(0,2) ; offset of cnt in 0000150
00002BAA 5EF0 400C               0000000C   4762          AL    15,12(0,4)
00002BAE A719 1000               00001000   4763          LGHI  1,4096      ; 4096
00002BB2 55F1 2000               00000000   4764          CL    15,0(1,2)
00002BB6 4720 C0AA               00002B2A   4765          BH    @L598
00002BBA E3F0 2FF8 0004          00000FF8   4766          LG    15,4088(0,2) ; offset of size in 0000150
00002BC0 E3F0 4010 000A          00000010   4767          ALG   15,16(0,4)
00002BC6 A719 1008               00001008   4768          LGHI  1,4104      ; 4104
00002BCA E3F1 2000 0021          00000000   4769          CLG   15,0(1,2)
00002BD0 4720 C0AA               00002B2A   4770          BH    @L598
00002BD4                                    4771 @L600    DS    0H
                                            4772 * ***
                                            4773 * ***      rk->rk_curr_msgs.cnt  += cnt;
00002BD4 58F0 2FF0               00000FF0   4774          L     15,4080(0,2)
00002BD8 5EF0 400C               0000000C   4775          AL    15,12(0,4)
00002BDC 50F0 2FF0               00000FF0   4776          ST    15,4080(0,2)
                                            4777 * ***      rk->rk_curr_msgs.size += size;
00002BE0 E3F0 2FF8 0004          00000FF8   4778          LG    15,4088(0,2)
00002BE6 E3F0 4010 000A          00000010   4779          ALG   15,16(0,4)
00002BEC E3F0 2FF8 0024          00000FF8   4780          STG   15,4088(0,2)
                                            4781 * ***      mtx_unlock(&rk->rk_curr_msgs.lock);
00002BF2 41F0 2F98               00000F98   4782          LA    15,3992(0,2)
00002BF6 E3F0 D0A8 0024          000000A8   4783          STG   15,168(0,13)
00002BFC 4110 D0A8               000000A8   4784          LA    1,168(0,13)
00002C00 E3F0 C070 0004          00002AF0   4785          LG    15,@lit_1894_87 ; mtx_unlock
00002C06                                    4786 @@gen_label127 DS    0H
00002C06 05EF                               4787          BALR  14,15
00002C08                                    4788 @@gen_label128 DS    0H
                                            4789 * ***
                                            4790 * ***      return RD_KAFKA_RESP_ERR_NO_ERROR;
00002C08 A7F9 0000               00000000   4791          LGHI  15,0        ; 0
                                            4792 * ***   }
00002C0C                                    4793 @ret_lab_1894 DS 0H
                                            4794 * * **** Start of Epilogue
                                            4795          DCCEPIL
00002C0C                                    4796+         ds 0h                                                          01-DCCEP
                                            4797+* Epilog
00002C0C D707 D088 D088 00000088 00000088   4798+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  101 
  Active Usings: @REGION_1894_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002C12 E3D0 D080 0004          00000080   4799+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C18 E3C0 D090 0004          00000090   4800+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C1E E3B0 C018 0004          00000018   4801+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002C24 E3C0 B010 0021          00000010   4802+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002C2A E3E0 D008 0004          00000008   4803+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002C30 EB1C D020 0004          00000020   4804+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002C36 078E                               4805+         bcr 8,14                if same dsab, just return              01-DCCEP
00002C38 E3F0 D010 0024          00000010   4806+         stg 15,16(0,13)         save return code                       01-DCCEP
00002C3E E300 D018 0024          00000018   4807+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002C44 E3F0 D090 0004          00000090   4808+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002C4A E3F0 F018 0004          00000018   4809+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002C50 47F0 F040               00000040   4810+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4811+* End of Epilog
                                            4812 * * **** End of Epilogue
                                            4813          DROP  12
                                            4814 *
                                            4815 *   DSECT for automatic variables in "rd_kafka_curr_msgs_add"
                                            4816 *      (FUNCTION #1894)
                                            4817 *
00000000                00000000 000000A8   4818 @AUTO#rd_kafka_curr_msgs_add DSECT
00000000                                    4819          DS    XL168
                                            4820 *
00002C54                00000000 0000E868   4821 @CODE    CSECT
                                            4822 *
                                            4823 *
                                            4824 *
                                            4825 * ....... start of rd_kafka_curr_msgs_sub
00002C54                                    4826 @LNAME1895 DS  0H
00002C54 00000016                           4827          DC    X'00000016'
00002C58 99846D9281869281                   4828          DC    C'rd_kafka_curr_msgs_sub'
00002C6E 00                                 4829          DC    X'00'
                                            4830 rd_kafka_curr_msgs_sub DCCPRLG CINDEX=1895,BASER=12,FRAME=216,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1895
                                            4831          macro
                                            4832          dccextrn &m
                                            4833          gblc    &$dccext(1000)
                                            4834          gbla    &$dccexti
                                            4835          lcla    &i
                                            4836 &$dccext(&$dccexti+1) setc    '&m'
                                            4837 &i       seta    1
                                            4838 .loop    aif    (&i gt &$dccexti).around
                                            4839          aif    ('&$dccext(&i)' eq '&m').getout
                                            4840 &i       seta    &i+1
                                            4841          ago     .loop
                                            4842 .around  anop
                                            4843 &$dccexti seta &$dccexti+1
                                            4844          extrn  &m
                                            4845 .getout  anop
                                            4846          mend
00002C70                                    4847+$eye0131    ds    0d                                                    02-DCCCA
00002C70 C4C3C3                             4848+         dc cl3'DCC'                                                    02-DCCCA
00002C73 01                                 4849+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  102 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002C74 00000000                           4850+         dc a(0)                                                        02-DCCCA
00002C78 0000000000002CE2                   4851+         dc ad(@PER_1895)                                               02-DCCCA
00002C80 00000000000000D8                   4852+         dc ad(216)                                                     02-DCCCA
00002C88 0000000000000000                   4853+         dc ad(0)                                                       02-DCCCA
00002C90 0000000000001000                   4854+         dc ad(4096)                                                    02-DCCCA
00002C98 20                                 4855+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C99 03                                 4856+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C9A 03                                 4857+         dc al1(3)                                                      02-DCCCA
00002C9B 08                                 4858+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C9C 00                                 4859+         dc bl.8'00000000'                                              02-DCCCA
00002C9D 000000                             4860+         dc al3(0)                                                      02-DCCCA
00002CA0 0000000000002C54                   4861+         dc ad(@LNAME1895)                                              02-DCCCA
00002CA8                                    4862+         ds 0d                                                          02-DCCCA
00002CA8 0000000000002C70                   4863+         dc ad($eye0131)                                                02-DCCCA
00002CB0 0000000000000000                   4864+         dc ad(0)                                                       02-DCCCA
00002CB8                                    4865+         ds    0d                                                       01-DCCPR
00002CB8                                    4866+rd_kafka_curr_msgs_sub ds 0d                                            01-DCCPR
00002CB8                                    4867+@REGION_1895_1 ds 0h                                                    01-DCCPR
00002CB8 EBEC D008 0024          00000008   4868+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002CBE E3E0 D088 0004          00000088   4869+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002CC4 E3C0 D090 0004          00000090   4870+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002CCA B904 002E                          4871+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002CCE E3B0 C018 0004          00000018   4872+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002CD4 A7EB 00D8               000000D8   4873+         aghi  14,216              increase by frame size               01-DCCPR
00002CD8 E3E0 C020 0021          00000020   4874+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CDE 4720 B020               00000020   4875+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CE2                                    4876+@PER_1895 ds   0h                                                       01-DCCPR
00002CE2 EBDE 2080 0024          00000080   4877+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002CE8 E3C0 2090 0024          00000090   4878+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002CEE B904 00D2                          4879+         lgr   13,2                set real frame pointer               01-DCCPR
00002CF2 B904 00CF                          4880+         lgr   12,15               set base reg                         01-DCCPR
                        00002CB8            4881+         using @REGION_1895_1,12                                        01-DCCPR
                                            4882 * ******* End of Prologue
                                            4883 * *
                                            4884 * ***           int broadcast = 0;
00002CF6 E330 1010 0004          00000010   4885          LG    3,16(0,1)   ; size
00002CFC E340 1000 0004          00000000   4886          LG    4,0(0,1)    ; rk
00002D02 5850 100C               0000000C   4887          L     5,12(0,1)   ; cnt
00002D06 A728 0000               00000000   4888          LHI   2,0         ; 0
                                            4889 * ***
                                            4890 * ***      if (rk->rk_type != RD_KAFKA_PRODUCER)
00002D0A E55C 49D8 0000          000009D8   4891          CHSI  2520(4),0
00002D10 4770 C16E               00002E26   4892          BNE   @ret_lab_1895
                                            4893 * ***         return;
00002D14                                    4894 @L604    DS    0H
                                            4895 * ***
                                            4896 * ***      mtx_lock(&rk->rk_curr_msgs.lock);
00002D14 41F0 4F98               00000F98   4897          LA    15,3992(0,4)
00002D18 E3F0 D0B0 0024          000000B0   4898          STG   15,176(0,13)
00002D1E 4110 D0B0               000000B0   4899          LA    1,176(0,13)
00002D22 E3F0 C1C0 0004          00002E78   4900          LG    15,@lit_1895_98 ; mtx_lock
00002D28                                    4901 @@gen_label130 DS    0H
                                                                                                                           Page  103 
  Active Usings: @REGION_1895_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002D28 05EF                               4902          BALR  14,15
00002D2A                                    4903 @@gen_label131 DS    0H
                                            4904 * ***      do { if (((!(rk->rk_curr_msgs.cnt >= cnt && rk->rk_curr_msg\
                                            4905 * s.size >= size)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rd\
                                            4906 * kafka_int.h",693, __FUNCTION__, (((void *)0)), "assert: " "rk->rk_cu\
                                            4907 * rr_msgs.cnt >= cnt && rk->rk_curr_msgs.size >= size"); } while (0);
00002D2A                                    4908 @L605    DS    0H
00002D2A 58F0 4FF0               00000FF0   4909          L     15,4080(0,4) ; offset of cnt in 0000150
00002D2E 15F5                               4910          CLR   15,5
00002D30 4740 C08A               00002D42   4911          BL    @L609
00002D34 E3F0 4FF8 0004          00000FF8   4912          LG    15,4088(0,4) ; offset of size in 0000150
00002D3A B921 00F3                          4913          CLGR  15,3
00002D3E 47B0 C0CC               00002D84   4914          BNL   @L608
00002D42                                    4915 @L609    DS    0H
00002D42 E3F0 C1D8 0004          00002E90   4916          LG    15,@lit_1895_99
00002D48 4110 F0EE               000000EE   4917          LA    1,238(0,15)
00002D4C E310 D0B0 0024          000000B0   4918          STG   1,176(0,13)
00002D52 E548 D0B8 02B5          000000B8   4919          MVGHI 184(13),693
00002D58 E310 C1D0 0004          00002E88   4920          LG    1,@lit_1895_100
00002D5E 4110 118E               0000018E   4921          LA    1,398(0,1)
00002D62 E310 D0C0 0024          000000C0   4922          STG   1,192(0,13)
00002D68 D707 D0C8 D0C8 000000C8 000000C8   4923          XC    200(8,13),200(13)
00002D6E 41F0 F118               00000118   4924          LA    15,280(0,15)
00002D72 E3F0 D0D0 0024          000000D0   4925          STG   15,208(0,13)
00002D78 4110 D0B0               000000B0   4926          LA    1,176(0,13)
00002D7C E3F0 C1C8 0004          00002E80   4927          LG    15,@lit_1895_101 ; rd_kafka_crash
00002D82                                    4928 @@gen_label134 DS    0H
00002D82 05EF                               4929          BALR  14,15
00002D84                                    4930 @@gen_label135 DS    0H
00002D84                                    4931 @L608    DS    0H
                                            4932 * ***
                                            4933 * ***
                                            4934 * ***
                                            4935 * ***
                                            4936 * ***
                                            4937 * ***           if ((rk->rk_curr_msgs.cnt - cnt == 0) ||
00002D84 58F0 4FF0               00000FF0   4938          L     15,4080(0,4) ; offset of cnt in 0000150
00002D88 1FF5                               4939          SLR   15,5
00002D8A 12FF                               4940          LTR   15,15
00002D8C 4780 C11E               00002DD6   4941          BE    @L612
                                            4942 * ***               (rk->rk_curr_msgs.cnt >= rk->rk_curr_msgs.max_cnt \
                                            4943 * &&
00002D90 58F0 4FF0               00000FF0   4944          L     15,4080(0,4) ; offset of cnt in 0000150
00002D94 A719 1000               00001000   4945          LGHI  1,4096      ; 4096
00002D98 55F1 4000               00000000   4946          CL    15,0(1,4)
00002D9C 4740 C0F6               00002DAE   4947          BL    @L610
                                            4948 * ***                rk->rk_curr_msgs.cnt - cnt < rk->rk_curr_msgs.max\
                                            4949 * _cnt) ||
00002DA0 58F0 4FF0               00000FF0   4950          L     15,4080(0,4) ; offset of cnt in 0000150
00002DA4 1FF5                               4951          SLR   15,5
00002DA6 55F1 4000               00000000   4952          CL    15,0(1,4)
00002DAA 4740 C11E               00002DD6   4953          BL    @L612
                                                                                                                           Page  104 
  Active Usings: @REGION_1895_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002DAE                                    4954 @L610    DS    0H
                                            4955 * ***               (rk->rk_curr_msgs.size >= rk->rk_curr_msgs.max_siz\
                                            4956 * e &&
00002DAE E3F0 4FF8 0004          00000FF8   4957          LG    15,4088(0,4) ; offset of size in 0000150
00002DB4 A719 1008               00001008   4958          LGHI  1,4104      ; 4104
00002DB8 E3F1 4000 0021          00000000   4959          CLG   15,0(1,4)
00002DBE 4740 C122               00002DDA   4960          BL    @L611
                                            4961 * ***                rk->rk_curr_msgs.size - size < rk->rk_curr_msgs.m\
                                            4962 * ax_size))
00002DC2 E3F0 4FF8 0004          00000FF8   4963          LG    15,4088(0,4) ; offset of size in 0000150
00002DC8 B90B 00F3                          4964          SLGR  15,3
00002DCC E3F1 4000 0021          00000000   4965          CLG   15,0(1,4)
00002DD2 47B0 C122               00002DDA   4966          BNL   @L611
00002DD6                                    4967 @L612    DS    0H
                                            4968 * ***                   broadcast = 1;
00002DD6 A728 0001               00000001   4969          LHI   2,1         ; 1
00002DDA                                    4970 @L611    DS    0H
                                            4971 * ***
                                            4972 * ***      rk->rk_curr_msgs.cnt  -= cnt;
00002DDA 58F0 4FF0               00000FF0   4973          L     15,4080(0,4)
00002DDE 1FF5                               4974          SLR   15,5
00002DE0 50F0 4FF0               00000FF0   4975          ST    15,4080(0,4)
                                            4976 * ***      rk->rk_curr_msgs.size -= size;
00002DE4 E3F0 4FF8 0004          00000FF8   4977          LG    15,4088(0,4)
00002DEA B90B 00F3                          4978          SLGR  15,3
00002DEE E3F0 4FF8 0024          00000FF8   4979          STG   15,4088(0,4)
                                            4980 * ***
                                            4981 * ***           if (((broadcast)))
00002DF4 1222                               4982          LTR   2,2
00002DF6 4780 C158               00002E10   4983          BZ    @L613
                                            4984 * ***                   cnd_broadcast(&rk->rk_curr_msgs.cnd);
00002DFA 41F0 4FC0               00000FC0   4985          LA    15,4032(0,4)
00002DFE E3F0 D0B0 0024          000000B0   4986          STG   15,176(0,13)
00002E04 4110 D0B0               000000B0   4987          LA    1,176(0,13)
00002E08 E3F0 C1E0 0004          00002E98   4988          LG    15,@lit_1895_107 ; cnd_broadcast
00002E0E                                    4989 @@gen_label142 DS    0H
00002E0E 05EF                               4990          BALR  14,15
00002E10                                    4991 @@gen_label143 DS    0H
00002E10                                    4992 @L613    DS    0H
                                            4993 * ***
                                            4994 * ***      mtx_unlock(&rk->rk_curr_msgs.lock);
00002E10 41F0 4F98               00000F98   4995          LA    15,3992(0,4)
00002E14 E3F0 D0B0 0024          000000B0   4996          STG   15,176(0,13)
00002E1A 4110 D0B0               000000B0   4997          LA    1,176(0,13)
00002E1E E3F0 C1E8 0004          00002EA0   4998          LG    15,@lit_1895_108 ; mtx_unlock
00002E24                                    4999 @@gen_label144 DS    0H
00002E24 05EF                               5000          BALR  14,15
00002E26                                    5001 @@gen_label145 DS    0H
                                            5002 * ***   }
00002E26                                    5003 @ret_lab_1895 DS 0H
                                            5004 * * **** Start of Epilogue
                                            5005          DCCEPIL
                                                                                                                           Page  105 
  Active Usings: @REGION_1895_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E26                                    5006+         ds 0h                                                          01-DCCEP
                                            5007+* Epilog
00002E26 D707 D088 D088 00000088 00000088   5008+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E2C E3D0 D080 0004          00000080   5009+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E32 E3C0 D090 0004          00000090   5010+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E38 E3B0 C018 0004          00000018   5011+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E3E E3C0 B010 0021          00000010   5012+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E44 E3E0 D008 0004          00000008   5013+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E4A EB1C D020 0004          00000020   5014+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E50 078E                               5015+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E52 E3F0 D010 0024          00000010   5016+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E58 E300 D018 0024          00000018   5017+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E5E E3F0 D090 0004          00000090   5018+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E64 E3F0 F018 0004          00000018   5019+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E6A 47F0 F040               00000040   5020+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5021+* End of Epilog
                                            5022 * * **** End of Epilogue
00002E70                                    5023          DS    0D
00002E70 000000D8                           5024 @FRAMESIZE_1895 DC F'216'
00002E74 00000000
00002E78 0000000000000000                   5025 @lit_1895_98 DC AD(mtx_lock)
00002E80 0000000000000000                   5026 @lit_1895_101 DC AD(rd_kafka_crash)
00002E88 000000000000E868                   5027 @lit_1895_100 DC AD(@DATA)
00002E90 000000000000ECA4                   5028 @lit_1895_99 DC AD(@strings@)
00002E98 0000000000000000                   5029 @lit_1895_107 DC AD(cnd_broadcast)
00002EA0 0000000000000000                   5030 @lit_1895_108 DC AD(mtx_unlock)
                                            5031          DROP  12
                                            5032 *
                                            5033 *   DSECT for automatic variables in "rd_kafka_curr_msgs_sub"
                                            5034 *      (FUNCTION #1895)
                                            5035 *
00000000                00000000 000000AC   5036 @AUTO#rd_kafka_curr_msgs_sub DSECT
00000000                                    5037          DS    XL168
000000A8                                    5038 rd_kafka_curr_msgs_sub#broadcast#0 DS 1F ; broadcast
                                            5039 *
00002EA8                00000000 0000E868   5040 @CODE    CSECT
                                            5041 *
                                            5042 *
                                            5043 *
                                            5044 * ....... start of rd_kafka_set_last_error
00002EA8                                    5045 @LNAME1904 DS  0H
00002EA8 00000017                           5046          DC    X'00000017'
00002EAC 99846D9281869281                   5047          DC    C'rd_kafka_set_last_error'
00002EC3 00                                 5048          DC    X'00'
                                            5049 rd_kafka_set_last_error DCCPRLG CINDEX=1904,BASER=12,FRAME=168,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1904
                                            5050          macro
                                            5051          dccextrn &m
                                            5052          gblc    &$dccext(1000)
                                            5053          gbla    &$dccexti
                                            5054          lcla    &i
                                            5055 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5056 &i       seta    1
                                            5057 .loop    aif    (&i gt &$dccexti).around
                                            5058          aif    ('&$dccext(&i)' eq '&m').getout
                                            5059 &i       seta    &i+1
                                            5060          ago     .loop
                                            5061 .around  anop
                                            5062 &$dccexti seta &$dccexti+1
                                            5063          extrn  &m
                                            5064 .getout  anop
                                            5065          mend
00002EC8                                    5066+$eye0134    ds    0d                                                    02-DCCCA
00002EC8 C4C3C3                             5067+         dc cl3'DCC'                                                    02-DCCCA
00002ECB 01                                 5068+         dc xl1'01' format one                                          02-DCCCA
00002ECC 00000000                           5069+         dc a(0)                                                        02-DCCCA
00002ED0 0000000000002F3A                   5070+         dc ad(@PER_1904)                                               02-DCCCA
00002ED8 00000000000000A8                   5071+         dc ad(168)                                                     02-DCCCA
00002EE0 0000000000000000                   5072+         dc ad(0)                                                       02-DCCCA
00002EE8 0000000000001000                   5073+         dc ad(4096)                                                    02-DCCCA
00002EF0 20                                 5074+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002EF1 03                                 5075+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002EF2 03                                 5076+         dc al1(3)                                                      02-DCCCA
00002EF3 08                                 5077+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002EF4 00                                 5078+         dc bl.8'00000000'                                              02-DCCCA
00002EF5 000000                             5079+         dc al3(0)                                                      02-DCCCA
00002EF8 0000000000002EA8                   5080+         dc ad(@LNAME1904)                                              02-DCCCA
00002F00                                    5081+         ds 0d                                                          02-DCCCA
00002F00 0000000000002EC8                   5082+         dc ad($eye0134)                                                02-DCCCA
00002F08 0000000000000000                   5083+         dc ad(0)                                                       02-DCCCA
00002F10                                    5084+         ds    0d                                                       01-DCCPR
00002F10                                    5085+rd_kafka_set_last_error ds 0d                                           01-DCCPR
00002F10                                    5086+@REGION_1904_1 ds 0h                                                    01-DCCPR
00002F10 EBEC D008 0024          00000008   5087+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002F16 E3E0 D088 0004          00000088   5088+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002F1C E3C0 D090 0004          00000090   5089+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F22 B904 002E                          5090+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F26 E3B0 C018 0004          00000018   5091+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F2C A7EB 00A8               000000A8   5092+         aghi  14,168              increase by frame size               01-DCCPR
00002F30 E3E0 C020 0021          00000020   5093+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F36 4720 B020               00000020   5094+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F3A                                    5095+@PER_1904 ds   0h                                                       01-DCCPR
00002F3A EBDE 2080 0024          00000080   5096+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F40 E3C0 2090 0024          00000090   5097+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F46 B904 00D2                          5098+         lgr   13,2                set real frame pointer               01-DCCPR
00002F4A B904 00CF                          5099+         lgr   12,15               set base reg                         01-DCCPR
                        00002F10            5100+         using @REGION_1904_1,12                                        01-DCCPR
                                            5101          DCCPRV REG=2      ; Get PRV from DVT
00002F4E E320 B008 0004          00000008   5102+         LG 2,8(0,11)                                                   01-DCCPR
00002F54 B904 0031                          5103          LGR   3,1         ; ptr to parm area
                                            5104 * ******* End of Prologue
                                            5105 * *
                                            5106 * ***           if (errnox) {
00002F58 E340 300C 0012          0000000C   5107          LT    4,12(0,3)   ; errnox
                                                                                                                           Page  107 
  Active Usings: @REGION_1904_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002F5E 4780 C05E               00002F6E   5108          BZ    @L621
                                            5109 * ***
                                            5110 * ***   # 926 "C:\asgkafka\librdkafka\src\rdkafka_int.h"
                                            5111 * ***                   ((* __error()) = (errnox));
00002F62 E3F0 C0C0 0004          00002FD0   5112          LG    15,@lit_1904_110 ; __error
00002F68                                    5113 @@gen_label147 DS    0H
00002F68 05EF                               5114          BALR  14,15
00002F6A                                    5115 @@gen_label148 DS    0H
00002F6A 5040 F000               00000000   5116          ST    4,0(0,15)
                                            5117 * ***           }
00002F6E                                    5118 @L621    DS    0H
                                            5119 * ***      rd_kafka_last_error_code = err;
00002F6E E3F0 C0C8 0016          00002FD8   5120          LLGF  15,@lit_1904_111 ; rd_kafka_last_error_code
00002F74 5810 3004               00000004   5121          L     1,4(0,3)    ; err
00002F78 501F 2000               00000000   5122          ST    1,0(15,2)   ; rd_kafka_last_error_code
                                            5123 * ***      return err;
00002F7C B914 00F1                          5124          LGFR  15,1
                                            5125 * ***   }
                                            5126 * * **** Start of Epilogue
                                            5127          DCCEPIL
00002F80                                    5128+         ds 0h                                                          01-DCCEP
                                            5129+* Epilog
00002F80 D707 D088 D088 00000088 00000088   5130+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F86 E3D0 D080 0004          00000080   5131+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F8C E3C0 D090 0004          00000090   5132+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F92 E3B0 C018 0004          00000018   5133+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F98 E3C0 B010 0021          00000010   5134+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F9E E3E0 D008 0004          00000008   5135+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002FA4 EB1C D020 0004          00000020   5136+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002FAA 078E                               5137+         bcr 8,14                if same dsab, just return              01-DCCEP
00002FAC E3F0 D010 0024          00000010   5138+         stg 15,16(0,13)         save return code                       01-DCCEP
00002FB2 E300 D018 0024          00000018   5139+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002FB8 E3F0 D090 0004          00000090   5140+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002FBE E3F0 F018 0004          00000018   5141+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002FC4 47F0 F040               00000040   5142+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5143+* End of Epilog
                                            5144 * * **** End of Epilogue
00002FC8                                    5145          DS    0D
00002FC8 000000A8                           5146 @FRAMESIZE_1904 DC F'168'
00002FCC 00000000
00002FD0 0000000000000000                   5147 @lit_1904_110 DC AD(__error)
00002FD8 00000000                           5148 @lit_1904_111 DC Q(rd_kafka_last_error_code)
                                            5149          DROP  12
                                            5150 *
                                            5151 *   DSECT for automatic variables in "rd_kafka_set_last_error"
                                            5152 *      (FUNCTION #1904)
                                            5153 *
00000000                00000000 000000A8   5154 @AUTO#rd_kafka_set_last_error DSECT
00000000                                    5155          DS    XL168
                                            5156 *
00002FDC                00000000 0000E868   5157 @CODE    CSECT
                                            5158 *
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5159 *
                                            5160 *
                                            5161 * ....... start of rd_kafka_fatal_error_code
00002FDC                                    5162 @LNAME1906 DS  0H
00002FDC 00000019                           5163          DC    X'00000019'
00002FE0 99846D9281869281                   5164          DC    C'rd_kafka_fatal_error_code'
00002FF9 00                                 5165          DC    X'00'
                                            5166 rd_kafka_fatal_error_code DCCPRLG CINDEX=1906,BASER=12,FRAME=176,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1906
                                            5167          macro
                                            5168          dccextrn &m
                                            5169          gblc    &$dccext(1000)
                                            5170          gbla    &$dccexti
                                            5171          lcla    &i
                                            5172 &$dccext(&$dccexti+1) setc    '&m'
                                            5173 &i       seta    1
                                            5174 .loop    aif    (&i gt &$dccexti).around
                                            5175          aif    ('&$dccext(&i)' eq '&m').getout
                                            5176 &i       seta    &i+1
                                            5177          ago     .loop
                                            5178 .around  anop
                                            5179 &$dccexti seta &$dccexti+1
                                            5180          extrn  &m
                                            5181 .getout  anop
                                            5182          mend
00003000                                    5183+$eye0138    ds    0d                                                    02-DCCCA
00003000 C4C3C3                             5184+         dc cl3'DCC'                                                    02-DCCCA
00003003 01                                 5185+         dc xl1'01' format one                                          02-DCCCA
00003004 00000000                           5186+         dc a(0)                                                        02-DCCCA
00003008 0000000000003072                   5187+         dc ad(@PER_1906)                                               02-DCCCA
00003010 00000000000000B0                   5188+         dc ad(176)                                                     02-DCCCA
00003018 0000000000000000                   5189+         dc ad(0)                                                       02-DCCCA
00003020 0000000000001000                   5190+         dc ad(4096)                                                    02-DCCCA
00003028 20                                 5191+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003029 03                                 5192+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000302A 03                                 5193+         dc al1(3)                                                      02-DCCCA
0000302B 08                                 5194+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000302C 00                                 5195+         dc bl.8'00000000'                                              02-DCCCA
0000302D 000000                             5196+         dc al3(0)                                                      02-DCCCA
00003030 0000000000002FDC                   5197+         dc ad(@LNAME1906)                                              02-DCCCA
00003038                                    5198+         ds 0d                                                          02-DCCCA
00003038 0000000000003000                   5199+         dc ad($eye0138)                                                02-DCCCA
00003040 0000000000000000                   5200+         dc ad(0)                                                       02-DCCCA
00003048                                    5201+         ds    0d                                                       01-DCCPR
00003048                                    5202+rd_kafka_fatal_error_code ds 0d                                         01-DCCPR
00003048                                    5203+@REGION_1906_1 ds 0h                                                    01-DCCPR
00003048 EBEC D008 0024          00000008   5204+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000304E E3E0 D088 0004          00000088   5205+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003054 E3C0 D090 0004          00000090   5206+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000305A B904 002E                          5207+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000305E E3B0 C018 0004          00000018   5208+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003064 A7EB 00B0               000000B0   5209+         aghi  14,176              increase by frame size               01-DCCPR
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003068 E3E0 C020 0021          00000020   5210+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000306E 4720 B020               00000020   5211+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003072                                    5212+@PER_1906 ds   0h                                                       01-DCCPR
00003072 EBDE 2080 0024          00000080   5213+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003078 E3C0 2090 0024          00000090   5214+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000307E B904 00D2                          5215+         lgr   13,2                set real frame pointer               01-DCCPR
00003082 B904 00CF                          5216+         lgr   12,15               set base reg                         01-DCCPR
                        00003048            5217+         using @REGION_1906_1,12                                        01-DCCPR
                                            5218 * ******* End of Prologue
                                            5219 * *
00003086 E3F0 1000 0004          00000000   5220          LG    15,0(0,1)   ; rk
                                            5221 * ***
                                            5222 * ***
                                            5223 * ***
                                            5224 * ***
                                            5225 * ***           if ((rk->rk_type == RD_KAFKA_PRODUCER && rk->rk_conf.e\
                                            5226 * os.idempotence) ||
0000308C E55C F9D8 0000          000009D8   5227          CHSI  2520(15),0
00003092 4770 C058               000030A0   5228          BNE   @L622
00003096 E310 F7E0 0012          000007E0   5229          LT    1,2016(0,15) ; offset of eos in rd_kafka_conf_s
0000309C 4770 C06C               000030B4   5230          BNZ   @L624
000030A0                                    5231 @L622    DS    0H
                                            5232 * ***               (rk->rk_type == RD_KAFKA_CONSUMER && rk->rk_conf.g\
                                            5233 * roup_instance_id))
000030A0 E55C F9D8 0001          000009D8   5234          CHSI  2520(15),1
000030A6 4770 C0A0               000030E8   5235          BNE   @L623
000030AA E310 F740 0002          00000740   5236          LTG   1,1856(0,15) ; offset of group_instance_id in rd_kafka_c*
                                                                onf_s
000030B0 4780 C0A0               000030E8   5237          BZ    @L623
000030B4                                    5238 @L624    DS    0H
                                            5239 * ***                   return rd_atomic32_get(&rk->rk_fatal.err);
000030B4 41F0 FA20               00000A20   5240          LA    15,2592(0,15)
000030B8 E3F0 D0A8 0024          000000A8   5241          STG   15,168(0,13)
000030BE 4110 D0A8               000000A8   5242          LA    1,168(0,13)
000030C2 E3F0 C098 0004          000030E0   5243          LG    15,@lit_1906_113 ; rd_atomic32_get
000030C8                                    5244 @@gen_label153 DS    0H
000030C8 05EF                               5245          BALR  14,15
000030CA                                    5246 @@gen_label154 DS    0H
000030CA B914 00FF                          5247          LGFR  15,15
000030CE 47F0 C0A4               000030EC   5248          B     @ret_lab_1906
000030D8                                    5249          DS    0D
000030D8 000000B0                           5250 @FRAMESIZE_1906 DC F'176'
000030DC 00000000
000030E0 00000000000002F0                   5251 @lit_1906_113 DC AD(rd_atomic32_get)
000030E8                                    5252 @L623    DS    0H
                                            5253 * ***
                                            5254 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
000030E8 A7F9 0000               00000000   5255          LGHI  15,0        ; 0
                                            5256 * ***   }
000030EC                                    5257 @ret_lab_1906 DS 0H
                                            5258 * * **** Start of Epilogue
                                            5259          DCCEPIL
                                                                                                                           Page  110 
  Active Usings: @REGION_1906_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000030EC                                    5260+         ds 0h                                                          01-DCCEP
                                            5261+* Epilog
000030EC D707 D088 D088 00000088 00000088   5262+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000030F2 E3D0 D080 0004          00000080   5263+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000030F8 E3C0 D090 0004          00000090   5264+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000030FE E3B0 C018 0004          00000018   5265+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003104 E3C0 B010 0021          00000010   5266+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000310A E3E0 D008 0004          00000008   5267+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003110 EB1C D020 0004          00000020   5268+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003116 078E                               5269+         bcr 8,14                if same dsab, just return              01-DCCEP
00003118 E3F0 D010 0024          00000010   5270+         stg 15,16(0,13)         save return code                       01-DCCEP
0000311E E300 D018 0024          00000018   5271+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003124 E3F0 D090 0004          00000090   5272+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000312A E3F0 F018 0004          00000018   5273+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003130 47F0 F040               00000040   5274+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5275+* End of Epilog
                                            5276 * * **** End of Epilogue
                                            5277          DROP  12
                                            5278 *
                                            5279 *   DSECT for automatic variables in "rd_kafka_fatal_error_code"
                                            5280 *      (FUNCTION #1906)
                                            5281 *
00000000                00000000 000000A8   5282 @AUTO#rd_kafka_fatal_error_code DSECT
00000000                                    5283          DS    XL168
                                            5284 *
00003134                00000000 0000E868   5285 @CODE    CSECT
                                            5286 *
                                            5287 *
                                            5288 *
                                            5289 * ....... start of rd_kafka_txn_may_enq_msg
00003134                                    5290 @LNAME1950 DS  0H
00003134 00000018                           5291          DC    X'00000018'
00003138 99846D9281869281                   5292          DC    C'rd_kafka_txn_may_enq_msg'
00003150 00                                 5293          DC    X'00'
                                            5294 rd_kafka_txn_may_enq_msg DCCPRLG CINDEX=1950,BASER=12,FRAME=176,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1950
                                            5295          macro
                                            5296          dccextrn &m
                                            5297          gblc    &$dccext(1000)
                                            5298          gbla    &$dccexti
                                            5299          lcla    &i
                                            5300 &$dccext(&$dccexti+1) setc    '&m'
                                            5301 &i       seta    1
                                            5302 .loop    aif    (&i gt &$dccexti).around
                                            5303          aif    ('&$dccext(&i)' eq '&m').getout
                                            5304 &i       seta    &i+1
                                            5305          ago     .loop
                                            5306 .around  anop
                                            5307 &$dccexti seta &$dccexti+1
                                            5308          extrn  &m
                                            5309 .getout  anop
                                            5310          mend
                                                                                                                           Page  111 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003158                                    5311+$eye0141    ds    0d                                                    02-DCCCA
00003158 C4C3C3                             5312+         dc cl3'DCC'                                                    02-DCCCA
0000315B 01                                 5313+         dc xl1'01' format one                                          02-DCCCA
0000315C 00000000                           5314+         dc a(0)                                                        02-DCCCA
00003160 00000000000031CA                   5315+         dc ad(@PER_1950)                                               02-DCCCA
00003168 00000000000000B0                   5316+         dc ad(176)                                                     02-DCCCA
00003170 0000000000000000                   5317+         dc ad(0)                                                       02-DCCCA
00003178 0000000000001000                   5318+         dc ad(4096)                                                    02-DCCCA
00003180 20                                 5319+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003181 03                                 5320+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003182 03                                 5321+         dc al1(3)                                                      02-DCCCA
00003183 08                                 5322+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003184 00                                 5323+         dc bl.8'00000000'                                              02-DCCCA
00003185 000000                             5324+         dc al3(0)                                                      02-DCCCA
00003188 0000000000003134                   5325+         dc ad(@LNAME1950)                                              02-DCCCA
00003190                                    5326+         ds 0d                                                          02-DCCCA
00003190 0000000000003158                   5327+         dc ad($eye0141)                                                02-DCCCA
00003198 0000000000000000                   5328+         dc ad(0)                                                       02-DCCCA
000031A0                                    5329+         ds    0d                                                       01-DCCPR
000031A0                                    5330+rd_kafka_txn_may_enq_msg ds 0d                                          01-DCCPR
000031A0                                    5331+@REGION_1950_1 ds 0h                                                    01-DCCPR
000031A0 EBEC D008 0024          00000008   5332+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000031A6 E3E0 D088 0004          00000088   5333+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000031AC E3C0 D090 0004          00000090   5334+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000031B2 B904 002E                          5335+         lgr   2,14                copy addr of our savearea            01-DCCPR
000031B6 E3B0 C018 0004          00000018   5336+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000031BC A7EB 00B0               000000B0   5337+         aghi  14,176              increase by frame size               01-DCCPR
000031C0 E3E0 C020 0021          00000020   5338+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000031C6 4720 B020               00000020   5339+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000031CA                                    5340+@PER_1950 ds   0h                                                       01-DCCPR
000031CA EBDE 2080 0024          00000080   5341+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000031D0 E3C0 2090 0024          00000090   5342+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000031D6 B904 00D2                          5343+         lgr   13,2                set real frame pointer               01-DCCPR
000031DA B904 00CF                          5344+         lgr   12,15               set base reg                         01-DCCPR
                        000031A0            5345+         using @REGION_1950_1,12                                        01-DCCPR
                                            5346 * ******* End of Prologue
                                            5347 * *
                                            5348 * ***           return !((rk)->rk_conf.eos.transactional_id != ((void \
                                            5349 * *)0)) ||
000031DE E3F0 1000 0004          00000000   5350          LG    15,0(0,1)   ; rk
000031E4 E310 F7E8 0002          000007E8   5351          LTG   1,2024(0,15) ; offset of transactional_id in 0000105
000031EA 4780 C06A               0000320A   5352          BE    @L634
                                            5353 * ***                   rd_atomic32_get(&rk->rk_eos.txn_may_enq);
000031EE 41F0 FD00               00000D00   5354          LA    15,3328(0,15)
000031F2 E3F0 D0A8 0024          000000A8   5355          STG   15,168(0,13)
000031F8 4110 D0A8               000000A8   5356          LA    1,168(0,13)
000031FC E3F0 C080 0004          00003220   5357          LG    15,@lit_1950_116 ; rd_atomic32_get
00003202                                    5358 @@gen_label156 DS    0H
00003202 05EF                               5359          BALR  14,15
00003204                                    5360 @@gen_label157 DS    0H
00003204 12FF                               5361          LTR   15,15
00003206 4780 C090               00003230   5362          BZ    @L636
                                                                                                                           Page  112 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000320A                                    5363 @L634    DS    0H
0000320A A7F8 0001               00000001   5364          LHI   15,1        ; 1
0000320E 47F0 C094               00003234   5365          B     @L635
00003218                                    5366          DS    0D
00003218 000000B0                           5367 @FRAMESIZE_1950 DC F'176'
0000321C 00000000
00003220 00000000000002F0                   5368 @lit_1950_116 DC AD(rd_atomic32_get)
00003228 00000000000000FF                   5369 @lit_1950_119 DC FD'255' 0x00000000000000ff
00003230                                    5370 @L636    DS    0H
00003230 A7F8 0000               00000000   5371          LHI   15,0        ; 0
00003234                                    5372 @L635    DS    0H
00003234 E3F0 C088 0080          00003228   5373          NG    15,@lit_1950_119
                                            5374 * ***   }
                                            5375 * * **** Start of Epilogue
                                            5376          DCCEPIL
0000323A                                    5377+         ds 0h                                                          01-DCCEP
                                            5378+* Epilog
0000323A D707 D088 D088 00000088 00000088   5379+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003240 E3D0 D080 0004          00000080   5380+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003246 E3C0 D090 0004          00000090   5381+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000324C E3B0 C018 0004          00000018   5382+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003252 E3C0 B010 0021          00000010   5383+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003258 E3E0 D008 0004          00000008   5384+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000325E EB1C D020 0004          00000020   5385+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003264 078E                               5386+         bcr 8,14                if same dsab, just return              01-DCCEP
00003266 E3F0 D010 0024          00000010   5387+         stg 15,16(0,13)         save return code                       01-DCCEP
0000326C E300 D018 0024          00000018   5388+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003272 E3F0 D090 0004          00000090   5389+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003278 E3F0 F018 0004          00000018   5390+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000327E 47F0 F040               00000040   5391+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5392+* End of Epilog
                                            5393 * * **** End of Epilogue
                                            5394          DROP  12
                                            5395 *
                                            5396 *   DSECT for automatic variables in "rd_kafka_txn_may_enq_msg"
                                            5397 *      (FUNCTION #1950)
                                            5398 *
00000000                00000000 000000A8   5399 @AUTO#rd_kafka_txn_may_enq_msg DSECT
00000000                                    5400          DS    XL168
                                            5401 *
00003282                00000000 0000E868   5402 @CODE    CSECT
                                            5403 *
                                            5404 *
                                            5405 *
                                            5406 * ....... start of rd_kafka_txn_add_partition
00003282                                    5407 @LNAME1954 DS  0H
00003282 0000001A                           5408          DC    X'0000001A'
00003286 99846D9281869281                   5409          DC    C'rd_kafka_txn_add_partition'
000032A0 00                                 5410          DC    X'00'
                                            5411 rd_kafka_txn_add_partition DCCPRLG CINDEX=1954,BASER=12,FRAME=264,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1954
                                            5412          macro
                                                                                                                           Page  113 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5413          dccextrn &m
                                            5414          gblc    &$dccext(1000)
                                            5415          gbla    &$dccexti
                                            5416          lcla    &i
                                            5417 &$dccext(&$dccexti+1) setc    '&m'
                                            5418 &i       seta    1
                                            5419 .loop    aif    (&i gt &$dccexti).around
                                            5420          aif    ('&$dccext(&i)' eq '&m').getout
                                            5421 &i       seta    &i+1
                                            5422          ago     .loop
                                            5423 .around  anop
                                            5424 &$dccexti seta &$dccexti+1
                                            5425          extrn  &m
                                            5426 .getout  anop
                                            5427          mend
000032A8                                    5428+$eye0144    ds    0d                                                    02-DCCCA
000032A8 C4C3C3                             5429+         dc cl3'DCC'                                                    02-DCCCA
000032AB 01                                 5430+         dc xl1'01' format one                                          02-DCCCA
000032AC 00000000                           5431+         dc a(0)                                                        02-DCCCA
000032B0 000000000000331A                   5432+         dc ad(@PER_1954)                                               02-DCCCA
000032B8 0000000000000108                   5433+         dc ad(264)                                                     02-DCCCA
000032C0 0000000000000000                   5434+         dc ad(0)                                                       02-DCCCA
000032C8 0000000000001000                   5435+         dc ad(4096)                                                    02-DCCCA
000032D0 20                                 5436+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000032D1 03                                 5437+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000032D2 03                                 5438+         dc al1(3)                                                      02-DCCCA
000032D3 08                                 5439+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000032D4 00                                 5440+         dc bl.8'00000000'                                              02-DCCCA
000032D5 000000                             5441+         dc al3(0)                                                      02-DCCCA
000032D8 0000000000003282                   5442+         dc ad(@LNAME1954)                                              02-DCCCA
000032E0                                    5443+         ds 0d                                                          02-DCCCA
000032E0 00000000000032A8                   5444+         dc ad($eye0144)                                                02-DCCCA
000032E8 0000000000000000                   5445+         dc ad(0)                                                       02-DCCCA
000032F0                                    5446+         ds    0d                                                       01-DCCPR
000032F0                                    5447+rd_kafka_txn_add_partition ds 0d                                        01-DCCPR
000032F0                                    5448+@REGION_1954_1 ds 0h                                                    01-DCCPR
000032F0 EBEC D008 0024          00000008   5449+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000032F6 E3E0 D088 0004          00000088   5450+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000032FC E3C0 D090 0004          00000090   5451+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003302 B904 002E                          5452+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003306 E3B0 C018 0004          00000018   5453+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000330C A7EB 0108               00000108   5454+         aghi  14,264              increase by frame size               01-DCCPR
00003310 E3E0 C020 0021          00000020   5455+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003316 4720 B020               00000020   5456+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000331A                                    5457+@PER_1954 ds   0h                                                       01-DCCPR
0000331A EBDE 2080 0024          00000080   5458+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003320 E3C0 2090 0024          00000090   5459+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003326 B904 00D2                          5460+         lgr   13,2                set real frame pointer               01-DCCPR
0000332A B904 00CF                          5461+         lgr   12,15               set base reg                         01-DCCPR
                        000032F0            5462+         using @REGION_1954_1,12                                        01-DCCPR
                                            5463 * ******* End of Prologue
                                            5464 * *
                                                                                                                           Page  114 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000332E E330 1000 0004          00000000   5465          LG    3,0(0,1)    ; rktp
                                            5466 * ***           rd_kafka_t *rk;
                                            5467 * ***           rd_bool_t schedule = 0;
00003334 9200 D0A8      000000A8 00000000   5468          MVI   168(13),0   ; schedule
                                            5469 * ***
                                            5470 * ***           mtx_lock(&(rktp)->rktp_lock);
00003338 41F0 30C0               000000C0   5471          LA    15,192(0,3)
0000333C E3F0 D0B0 0024          000000B0   5472          STG   15,176(0,13)
00003342 4110 D0B0               000000B0   5473          LA    1,176(0,13)
00003346 E320 C090 0004          00003380   5474          LG    2,@lit_1954_121 ; mtx_lock
0000334C B904 00F2                          5475          LGR   15,2
00003350                                    5476 @@gen_label159 DS    0H
00003350 05EF                               5477          BALR  14,15
00003352                                    5478 @@gen_label160 DS    0H
                                            5479 * ***
                                            5480 * ***
                                            5481 * ***           if (((rktp->rktp_flags & (0x100 | 0x200)))) {
00003352 9103 32B2      000002B2 00000003   5482          TM    690(3),3
00003356 4780 C0D0               000033C0   5483          BZ    @L641
                                            5484 * ***
                                            5485 * ***                   mtx_unlock(&(rktp)->rktp_lock);
0000335A 41F0 30C0               000000C0   5486          LA    15,192(0,3)
0000335E E3F0 D0B0 0024          000000B0   5487          STG   15,176(0,13)
00003364 4110 D0B0               000000B0   5488          LA    1,176(0,13)
00003368 E3F0 C098 0004          00003388   5489          LG    15,@lit_1954_122 ; mtx_unlock
0000336E                                    5490 @@gen_label162 DS    0H
0000336E 05EF                               5491          BALR  14,15
00003370                                    5492 @@gen_label163 DS    0H
                                            5493 * ***                   return;
00003370 47F0 C364               00003654   5494          B     @ret_lab_1954
00003378                                    5495          DS    0D
00003378 00000108                           5496 @FRAMESIZE_1954 DC F'264'
0000337C 00000000
00003380 0000000000000000                   5497 @lit_1954_121 DC AD(mtx_lock)
00003388 0000000000000000                   5498 @lit_1954_122 DC AD(mtx_unlock)
00003390 0000000000002890                   5499 @lit_1954_125 DC AD(rd_kafka_toppar_topic_cmp)
00003398 0000000000002768                   5500 @lit_1954_127 DC AD(rd_kafka_toppar_keep0)
000033A0 000000000000E868                   5501 @lit_1954_126 DC AD(@DATA)
000033A8 000000000000ECA4                   5502 @lit_1954_130 DC AD(@strings@)
000033B0 0000000000000000                   5503 @lit_1954_134 DC AD(rd_kafka_log0)
000033B8 0000000000000000                   5504 @lit_1954_135 DC AD(rd_kafka_txn_schedule_register_partitions)
                                            5505 * ***           }
000033C0                                    5506 @L641    DS    0H
                                            5507 * ***
                                            5508 * ***           rktp->rktp_flags |= 0x100;
000033C0 58F0 32B0               000002B0   5509          L     15,688(0,3)
000033C4 A5FB 0100               00000100   5510          OILL  15,256
000033C8 50F0 32B0               000002B0   5511          ST    15,688(0,3)
                                            5512 * ***
                                            5513 * ***           mtx_unlock(&(rktp)->rktp_lock);
000033CC 41F0 30C0               000000C0   5514          LA    15,192(0,3)
000033D0 E3F0 D0B0 0024          000000B0   5515          STG   15,176(0,13)
                                                                                                                           Page  115 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000033D6 4110 D0B0               000000B0   5516          LA    1,176(0,13)
000033DA E3F0 C098 0004          00003388   5517          LG    15,@lit_1954_122 ; mtx_unlock
000033E0                                    5518 @@gen_label164 DS    0H
000033E0 05EF                               5519          BALR  14,15
000033E2                                    5520 @@gen_label165 DS    0H
                                            5521 * ***
                                            5522 * ***           rk = rktp->rktp_rkt->rkt_rk;
000033E2 E3F0 3060 0004          00000060   5523          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
000033E8 E340 F148 0004          00000148   5524          LG    4,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
                                            5525 * ***
                                            5526 * ***           mtx_lock(&rk->rk_eos.txn_pending_lock);
000033EE 41F0 4E50               00000E50   5527          LA    15,3664(0,4)
000033F2 E3F0 D0B0 0024          000000B0   5528          STG   15,176(0,13)
000033F8 4110 D0B0               000000B0   5529          LA    1,176(0,13)
000033FC B904 00F2                          5530          LGR   15,2
00003400                                    5531 @@gen_label166 DS    0H
00003400 05EF                               5532          BALR  14,15
00003402                                    5533 @@gen_label167 DS    0H
                                            5534 * ***           schedule = (((&rk->rk_eos.txn_pending_rktps)->tqh_firs\
                                            5535 * t) == (((void *)0)));
00003402 E3F0 4E78 0002          00000E78   5536          LTG   15,3704(0,4) ; offset of txn_pending_rktps in 0000146
00003408 4770 C124               00003414   5537          BNE   @@gen_label168
0000340C A7F8 0001               00000001   5538          LHI   15,1
00003410 47F0 C128               00003418   5539          B     @@gen_label169
00003414                                    5540 @@gen_label168 DS 0H
00003414 A7F8 0000               00000000   5541          LHI   15,0
00003418                                    5542 @@gen_label169 DS 0H
00003418 42F0 D0A8               000000A8   5543          STC   15,168(0,13) ; schedule
                                            5544 * ***
                                            5545 * ***
                                            5546 * ***
                                            5547 * ***           do { if(((&rk->rk_eos.txn_pending_rktps)->tqh_first) =\
                                            5548 * = ((void *)0)) { do {  if (((rktp)->rktp_txnlink .tqe_next = (&rk->r\
                                            5549 * k_eos.txn_pending_rktps)->tqh_first) != (((void *)0))) (&rk->rk_eos.\
                                            5550 * txn_pending_rktps)->tqh_first->rktp_txnlink .tqe_prev = &(rktp)->rkt\
                                            5551 * p_txnlink .tqe_next; else (&rk->rk_eos.txn_pending_rktps)->tqh_last \
                                            5552 * = &(rktp)->rktp_txnlink .tqe_next; (&rk->rk_eos.txn_pending_rktps)->\
                                            5553 * tqh_first = (rktp); (rktp)->rktp_txnlink .tqe_prev = &(&rk->rk_eos.t\
                                            5554 * xn_pending_rktps)->tqh_first; } while ( 0); } else { rd_kafka_toppar\
                                            5555 * _t * _tmp; for ((_tmp) = ((&rk->rk_eos.txn_pending_rktps)->tqh_first\
                                            5556 * ); (_tmp) != (((void *)0)); (_tmp) = ((_tmp)->rktp_txnlink .tqe_next\
                                            5557 * )) { if(rd_kafka_toppar_topic_cmp(rktp,_tmp) < 0) { do {  (rktp)->rk\
                                            5558 * tp_txnlink .tqe_prev = (_tmp)->rktp_txnlink .tqe_prev; (rktp)->rktp_\
                                            5559 * txnlink .tqe_next = (_tmp); *(_tmp)->rktp_txnlink .tqe_prev = (rktp)\
                                            5560 * ; (_tmp)->rktp_txnlink .tqe_prev = &(rktp)->rktp_txnlink .tqe_next; \
                                            5561 * } while ( 0); break; } if(!((_tmp)->rktp_txnlink .tqe_next)) { do { \
                                            5562 *  if (((rktp)->rktp_txnlink .tqe_next = (_tmp)->rktp_txnlink .tqe_nex\
                                            5563 * t) != (((void *)0))) (rktp)->rktp_txnlink .tqe_next->rktp_txnlink .t\
                                            5564 * qe_prev = &(rktp)->rktp_txnlink .tqe_next; else (&rk->rk_eos.txn_pen\
                                            5565 * ding_rktps)->tqh_last = &(rktp)->rktp_txnlink .tqe_next; (_tmp)->rkt\
                                            5566 * p_txnlink .tqe_next = (rktp); (rktp)->rktp_txnlink .tqe_prev = &(_tm\
                                            5567 * p)->rktp_txnlink .tqe_next; } while ( 0); break; } } } } while(0);
                                                                                                                           Page  116 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000341C                                    5568 @L642    DS    0H
0000341C E3F0 4E78 0002          00000E78   5569          LTG   15,3704(0,4) ; offset of txn_pending_rktps in 0000146
00003422 4770 C17C               0000346C   5570          BNE   @L645
00003426                                    5571 @L646    DS    0H
00003426 E3F0 4E78 0004          00000E78   5572          LG    15,3704(0,4) ; offset of txn_pending_rktps in 0000146
0000342C E3F0 3050 0024          00000050   5573          STG   15,80(0,3)
00003432 B902 00FF                          5574          LTGR  15,15
00003436 4780 C15E               0000344E   5575          BE    @L649
0000343A E3F0 4E78 0004          00000E78   5576          LG    15,3704(0,4) ; offset of txn_pending_rktps in 0000146
00003440 4110 3050               00000050   5577          LA    1,80(0,3)
00003444 E310 F058 0024          00000058   5578          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
0000344A 47F0 C168               00003458   5579          B     @L650
0000344E                                    5580 @L649    DS    0H
0000344E 41F0 3050               00000050   5581          LA    15,80(0,3)
00003452 E3F0 4E80 0024          00000E80   5582          STG   15,3712(0,4) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00003458                                    5583 @L650    DS    0H
00003458 E330 4E78 0024          00000E78   5584          STG   3,3704(0,4) ; offset of txn_pending_rktps in 0000146
0000345E 41F0 4E78               00000E78   5585          LA    15,3704(0,4)
00003462 E3F0 3058 0024          00000058   5586          STG   15,88(0,3)  ; offset of tqe_prev in 0000134
00003468 47F0 C22E               0000351E   5587          B     @L651
0000346C                                    5588 @L645    DS    0H
0000346C E320 4E78 0004          00000E78   5589          LG    2,3704(0,4) ; offset of txn_pending_rktps in 0000146
00003472 47F0 C226               00003516   5590          B     @L653
00003476                                    5591 @L652    DS    0H
00003476 E330 D0B0 0024          000000B0   5592          STG   3,176(0,13)
0000347C E320 D0B8 0024          000000B8   5593          STG   2,184(0,13)
00003482 4110 D0B0               000000B0   5594          LA    1,176(0,13)
00003486 E3F0 C0A0 0004          00003390   5595          LG    15,@lit_1954_125 ; rd_kafka_toppar_topic_cmp
0000348C                                    5596 @@gen_label172 DS    0H
0000348C 05EF                               5597          BALR  14,15
0000348E                                    5598 @@gen_label173 DS    0H
0000348E 12FF                               5599          LTR   15,15
00003490 47B0 C1D0               000034C0   5600          BNL   @L656
00003494                                    5601 @L657    DS    0H
00003494 E3F0 2058 0004          00000058   5602          LG    15,88(0,2)  ; offset of tqe_prev in 0000134
0000349A E3F0 3058 0024          00000058   5603          STG   15,88(0,3)  ; offset of tqe_prev in 0000134
000034A0 E320 3050 0024          00000050   5604          STG   2,80(0,3)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000034A6 E3F0 2058 0004          00000058   5605          LG    15,88(0,2)  ; offset of tqe_prev in 0000134
000034AC E330 F000 0024          00000000   5606          STG   3,0(0,15)
000034B2 41F0 3050               00000050   5607          LA    15,80(0,3)
000034B6 E3F0 2058 0024          00000058   5608          STG   15,88(0,2)  ; offset of tqe_prev in 0000134
000034BC 47F0 C22E               0000351E   5609          B     @L654
000034C0                                    5610 @L656    DS    0H
000034C0 E3F0 2050 0002          00000050   5611          LTG   15,80(0,2)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000034C6 4770 C220               00003510   5612          BNZ   @L660
000034CA                                    5613 @L661    DS    0H
000034CA E3F0 2050 0004          00000050   5614          LG    15,80(0,2)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000034D0 E3F0 3050 0024          00000050   5615          STG   15,80(0,3)
                                                                                                                           Page  117 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000034D6 B902 00FF                          5616          LTGR  15,15
000034DA 4780 C202               000034F2   5617          BE    @L664
000034DE E3F0 3050 0004          00000050   5618          LG    15,80(0,3)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000034E4 4110 3050               00000050   5619          LA    1,80(0,3)
000034E8 E310 F058 0024          00000058   5620          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
000034EE 47F0 C20C               000034FC   5621          B     @L665
000034F2                                    5622 @L664    DS    0H
000034F2 41F0 3050               00000050   5623          LA    15,80(0,3)
000034F6 E3F0 4E80 0024          00000E80   5624          STG   15,3712(0,4) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
000034FC                                    5625 @L665    DS    0H
000034FC E330 2050 0024          00000050   5626          STG   3,80(0,2)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
00003502 41F0 2050               00000050   5627          LA    15,80(0,2)
00003506 E3F0 3058 0024          00000058   5628          STG   15,88(0,3)  ; offset of tqe_prev in 0000134
0000350C 47F0 C22E               0000351E   5629          B     @L654
00003510                                    5630 @L660    DS    0H
00003510 E320 2050 0004          00000050   5631          LG    2,80(0,2)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
00003516                                    5632 @L653    DS    0H
00003516 B902 00F2                          5633          LTGR  15,2
0000351A 4770 C186               00003476   5634          BNE   @L652
0000351E                                    5635 @L654    DS    0H
0000351E                                    5636 @L651    DS    0H
                                            5637 * ***
                                            5638 * ***
                                            5639 * ***           rd_kafka_toppar_keep0(__FUNCTION__,126,rktp);
0000351E E3F0 C0B0 0004          000033A0   5640          LG    15,@lit_1954_126
00003524 41F0 F1A6               000001A6   5641          LA    15,422(0,15)
00003528 E3F0 D0B0 0024          000000B0   5642          STG   15,176(0,13)
0000352E E548 D0B8 007E          000000B8   5643          MVGHI 184(13),126
00003534 E330 D0C0 0024          000000C0   5644          STG   3,192(0,13)
0000353A 4110 D0B0               000000B0   5645          LA    1,176(0,13)
0000353E E3F0 C0A8 0004          00003398   5646          LG    15,@lit_1954_127 ; rd_kafka_toppar_keep0
00003544                                    5647 @@gen_label178 DS    0H
00003544 05EF                               5648          BALR  14,15
00003546                                    5649 @@gen_label179 DS    0H
                                            5650 * ***           mtx_unlock(&rk->rk_eos.txn_pending_lock);
00003546 41F0 4E50               00000E50   5651          LA    15,3664(0,4)
0000354A E3F0 D0B0 0024          000000B0   5652          STG   15,176(0,13)
00003550 4110 D0B0               000000B0   5653          LA    1,176(0,13)
00003554 E3F0 C098 0004          00003388   5654          LG    15,@lit_1954_122 ; mtx_unlock
0000355A                                    5655 @@gen_label180 DS    0H
0000355A 05EF                               5656          BALR  14,15
0000355C                                    5657 @@gen_label181 DS    0H
                                            5658 * ***
                                            5659 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                            5660 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDPARTS","Marked %.*\
                                            5661 * s [%" "d" "] as part of transaction: " "%sscheduling registration", \
                                            5662 * (int)((rktp->rktp_rkt->rkt_topic)->len == -1 ? 0 : (rktp->rktp_rkt->\
                                            5663 * rkt_topic)->len), (rktp->rktp_rkt->rkt_topic)->str, rktp->rktp_parti\
                                                                                                                           Page  118 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5664 * tion, schedule ? "" : "not "); } while (0);
0000355C                                    5665 @L666    DS    0H
0000355C 9180 4322      00000322 00000080   5666          TM    802(4),128
00003560 4780 C344               00003634   5667          BZ    @L669
00003564 E3F0 3060 0004          00000060   5668          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000356A E3F0 F080 0004          00000080   5669          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003570 E55C F000 FFFF          00000000   5670          CHSI  0(15),-1
00003576 4770 C292               00003582   5671          BNE   @L670
0000357A A7F8 0000               00000000   5672          LHI   15,0        ; 0
0000357E 47F0 C2A2               00003592   5673          B     @L671
00003582                                    5674 @L670    DS    0H
00003582 E3F0 3060 0004          00000060   5675          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003588 E3F0 F080 0004          00000080   5676          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000358E 58F0 F000               00000000   5677          L     15,0(0,15)
00003592                                    5678 @L671    DS    0H
00003592 9500 D0A8      000000A8 00000000   5679          CLI   168(13),0
00003596 4780 C2B8               000035A8   5680          BE    @L672
0000359A E310 C0B8 0004          000033A8   5681          LG    1,@lit_1954_130
000035A0 4110 115E               0000015E   5682          LA    1,350(0,1)
000035A4 47F0 C2C2               000035B2   5683          B     @L673
000035A8                                    5684 @L672    DS    0H
000035A8 E310 C0B8 0004          000033A8   5685          LG    1,@lit_1954_130
000035AE 4110 1160               00000160   5686          LA    1,352(0,1)
000035B2                                    5687 @L673    DS    0H
000035B2 4120 4210               00000210   5688          LA    2,528(0,4)
000035B6 E320 D0B0 0024          000000B0   5689          STG   2,176(0,13)
000035BC E340 D0B8 0024          000000B8   5690          STG   4,184(0,13)
000035C2 D707 D0C0 D0C0 000000C0 000000C0   5691          XC    192(8,13),192(13)
000035C8 E548 D0C8 0007          000000C8   5692          MVGHI 200(13),7
000035CE C02F 0000 8000                     5693          LLILF 2,X'00008000' ; 32768
000035D4 E320 D0D0 0024          000000D0   5694          STG   2,208(0,13)
000035DA E320 C0B8 0004          000033A8   5695          LG    2,@lit_1954_130
000035E0 4150 2166               00000166   5696          LA    5,358(0,2)
000035E4 E350 D0D8 0024          000000D8   5697          STG   5,216(0,13)
000035EA 4120 2170               00000170   5698          LA    2,368(0,2)
000035EE E320 D0E0 0024          000000E0   5699          STG   2,224(0,13)
000035F4 B914 00FF                          5700          LGFR  15,15
000035F8 E3F0 D0E8 0024          000000E8   5701          STG   15,232(0,13)
000035FE E3F0 3060 0004          00000060   5702          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003604 E3F0 F080 0004          00000080   5703          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000360A E3F0 F008 0004          00000008   5704          LG    15,8(0,15)
00003610 E3F0 D0F0 0024          000000F0   5705          STG   15,240(0,13)
00003616 E3F0 3068 0014          00000068   5706          LGF   15,104(0,3)
0000361C E3F0 D0F8 0024          000000F8   5707          STG   15,248(0,13)
00003622 E310 D100 0024          00000100   5708          STG   1,256(0,13)
00003628 4110 D0B0               000000B0   5709          LA    1,176(0,13)
0000362C E3F0 C0C0 0004          000033B0   5710          LG    15,@lit_1954_134 ; rd_kafka_log0
00003632                                    5711 @@gen_label185 DS    0H
00003632 05EF                               5712          BALR  14,15
00003634                                    5713 @@gen_label186 DS    0H
00003634                                    5714 @L669    DS    0H
                                            5715 * ***
                                                                                                                           Page  119 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5716 * ***
                                            5717 * ***   # 137 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.h"
                                            5718 * ***
                                            5719 * ***           if (((schedule)))
00003634 9500 D0A8      000000A8 00000000   5720          CLI   168(13),0
00003638 4780 C364               00003654   5721          BE    @L674
                                            5722 * ***                   rd_kafka_txn_schedule_register_partitions(
                                            5723 * ***                           rk, 1);
0000363C E340 D0B0 0024          000000B0   5724          STG   4,176(0,13)
00003642 E548 D0B8 0001          000000B8   5725          MVGHI 184(13),1
00003648 4110 D0B0               000000B0   5726          LA    1,176(0,13)
0000364C E3F0 C0C8 0004          000033B8   5727          LG    15,@lit_1954_135 ; rd_kafka_txn_schedule_register_partit*
                                                                ions
00003652                                    5728 @@gen_label188 DS    0H
00003652 05EF                               5729          BALR  14,15
00003654                                    5730 @@gen_label189 DS    0H
00003654                                    5731 @L674    DS    0H
                                            5732 * ***   }
00003654                                    5733 @ret_lab_1954 DS 0H
                                            5734 * * **** Start of Epilogue
                                            5735          DCCEPIL
00003654                                    5736+         ds 0h                                                          01-DCCEP
                                            5737+* Epilog
00003654 D707 D088 D088 00000088 00000088   5738+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000365A E3D0 D080 0004          00000080   5739+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003660 E3C0 D090 0004          00000090   5740+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003666 E3B0 C018 0004          00000018   5741+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000366C E3C0 B010 0021          00000010   5742+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003672 E3E0 D008 0004          00000008   5743+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003678 EB1C D020 0004          00000020   5744+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000367E 078E                               5745+         bcr 8,14                if same dsab, just return              01-DCCEP
00003680 E3F0 D010 0024          00000010   5746+         stg 15,16(0,13)         save return code                       01-DCCEP
00003686 E300 D018 0024          00000018   5747+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000368C E3F0 D090 0004          00000090   5748+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003692 E3F0 F018 0004          00000018   5749+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003698 47F0 F040               00000040   5750+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5751+* End of Epilog
                                            5752 * * **** End of Epilogue
                                            5753          DROP  12
                                            5754 *
                                            5755 *   DSECT for automatic variables in "rd_kafka_txn_add_partition"
                                            5756 *      (FUNCTION #1954)
                                            5757 *
00000000                00000000 000000A9   5758 @AUTO#rd_kafka_txn_add_partition DSECT
00000000                                    5759          DS    XL168
000000A8                                    5760 rd_kafka_txn_add_partition#schedule#0 DS 1CL1 ; schedule
                                            5761 *
0000369C                00000000 0000E868   5762 @CODE    CSECT
                                            5763 *
                                            5764 *
                                            5765 *
                                            5766 * ....... start of rd_kafka_message_errstr
                                                                                                                           Page  120 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5767 rd_kafka_message_errstr ALIAS X'99846D92818692816D9485A2A28187856D85999*
                                                                9A2A399'
0000369C                                    5768 @LNAME823 DS   0H
0000369C 00000017                           5769          DC    X'00000017'
000036A0 99846D9281869281                   5770          DC    C'rd_kafka_message_errstr'
000036B7 00                                 5771          DC    X'00'
                                            5772 rd_kafka_message_errstr DCCPRLG CINDEX=823,BASER=12,FRAME=176,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME823
                                            5773          macro
                                            5774          dccextrn &m
                                            5775          gblc    &$dccext(1000)
                                            5776          gbla    &$dccexti
                                            5777          lcla    &i
                                            5778 &$dccext(&$dccexti+1) setc    '&m'
                                            5779 &i       seta    1
                                            5780 .loop    aif    (&i gt &$dccexti).around
                                            5781          aif    ('&$dccext(&i)' eq '&m').getout
                                            5782 &i       seta    &i+1
                                            5783          ago     .loop
                                            5784 .around  anop
                                            5785 &$dccexti seta &$dccexti+1
                                            5786          extrn  &m
                                            5787 .getout  anop
                                            5788          mend
000036B8                                    5789+$eye0147    ds    0d                                                    02-DCCCA
000036B8 C4C3C3                             5790+         dc cl3'DCC'                                                    02-DCCCA
000036BB 01                                 5791+         dc xl1'01' format one                                          02-DCCCA
000036BC 00000000                           5792+         dc a(0)                                                        02-DCCCA
000036C0 000000000000372A                   5793+         dc ad(@PER_823)                                                02-DCCCA
000036C8 00000000000000B0                   5794+         dc ad(176)                                                     02-DCCCA
000036D0 0000000000000000                   5795+         dc ad(0)                                                       02-DCCCA
000036D8 0000000000001000                   5796+         dc ad(4096)                                                    02-DCCCA
000036E0 20                                 5797+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000036E1 03                                 5798+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000036E2 03                                 5799+         dc al1(3)                                                      02-DCCCA
000036E3 08                                 5800+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000036E4 00                                 5801+         dc bl.8'00000000'                                              02-DCCCA
000036E5 000000                             5802+         dc al3(0)                                                      02-DCCCA
000036E8 000000000000369C                   5803+         dc ad(@LNAME823)                                               02-DCCCA
000036F0                                    5804+         ds 0d                                                          02-DCCCA
000036F0 00000000000036B8                   5805+         dc ad($eye0147)                                                02-DCCCA
000036F8 0000000000000000                   5806+         dc ad(0)                                                       02-DCCCA
00003700                                    5807+         ds    0d                                                       01-DCCPR
                                            5808+         entry rd_kafka_message_errstr                                  01-DCCPR
00003700                                    5809+rd_kafka_message_errstr ds 0d                                           01-DCCPR
00003700                                    5810+@REGION_823_1 ds 0h                                                     01-DCCPR
00003700 EBEC D008 0024          00000008   5811+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003706 E3E0 D088 0004          00000088   5812+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000370C E3C0 D090 0004          00000090   5813+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003712 B904 002E                          5814+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003716 E3B0 C018 0004          00000018   5815+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000371C A7EB 00B0               000000B0   5816+         aghi  14,176              increase by frame size               01-DCCPR
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003720 E3E0 C020 0021          00000020   5817+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003726 4720 B020               00000020   5818+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000372A                                    5819+@PER_823 ds    0h                                                       01-DCCPR
0000372A EBDE 2080 0024          00000080   5820+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003730 E3C0 2090 0024          00000090   5821+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003736 B904 00D2                          5822+         lgr   13,2                set real frame pointer               01-DCCPR
0000373A B904 00CF                          5823+         lgr   12,15               set base reg                         01-DCCPR
                        00003700            5824+         using @REGION_823_1,12                                         01-DCCPR
                                            5825 * ******* End of Prologue
                                            5826 * *
                                            5827 * ***           if (!rkmessage->err)
0000373E E3F0 1000 0004          00000000   5828          LG    15,0(0,1)   ; rkmessage
00003744 E310 F000 0012          00000000   5829          LT    1,0(0,15)   ; rkmessage
0000374A 4770 C068               00003768   5830          BNZ   @L675
                                            5831 * ***                   return ((void *)0);
0000374E A7F9 0000               00000000   5832          LGHI  15,0        ; 0
00003752 47F0 C094               00003794   5833          B     @ret_lab_823
00003758                                    5834          DS    0D
00003758 000000B0                           5835 @FRAMESIZE_823 DC F'176'
0000375C 00000000
00003760 0000000000000000                   5836 @lit_823_138 DC AD(rd_kafka_err2str)
00003768                                    5837 @L675    DS    0H
                                            5838 * ***
                                            5839 * ***           if (rkmessage->payload)
00003768 E310 F018 0002          00000018   5840          LTG   1,24(0,15)  ; offset of payload in rd_kafka_message_s
0000376E 4780 C07C               0000377C   5841          BZ    @L676
                                            5842 * ***                   return (const char *)rkmessage->payload;
00003772 E3F0 F018 0004          00000018   5843          LG    15,24(0,15) ; offset of payload in rd_kafka_message_s
00003778 47F0 C094               00003794   5844          B     @ret_lab_823
0000377C                                    5845 @L676    DS    0H
                                            5846 * ***
                                            5847 * ***           return rd_kafka_err2str(rkmessage->err);
0000377C E3F0 F000 0014          00000000   5848          LGF   15,0(0,15)
00003782 E3F0 D0A8 0024          000000A8   5849          STG   15,168(0,13)
00003788 4110 D0A8               000000A8   5850          LA    1,168(0,13)
0000378C E3F0 C060 0004          00003760   5851          LG    15,@lit_823_138 ; rd_kafka_err2str
00003792                                    5852 @@gen_label192 DS    0H
00003792 05EF                               5853          BALR  14,15
00003794                                    5854 @@gen_label193 DS    0H
                                            5855 * ***   }
00003794                                    5856 @ret_lab_823 DS 0H
                                            5857 * * **** Start of Epilogue
                                            5858          DCCEPIL
00003794                                    5859+         ds 0h                                                          01-DCCEP
                                            5860+* Epilog
00003794 D707 D088 D088 00000088 00000088   5861+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000379A E3D0 D080 0004          00000080   5862+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000037A0 E3C0 D090 0004          00000090   5863+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000037A6 E3B0 C018 0004          00000018   5864+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000037AC E3C0 B010 0021          00000010   5865+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000037B2 E3E0 D008 0004          00000008   5866+         lg  14,8(0,13)          load up return address                 01-DCCEP
000037B8 EB1C D020 0004          00000020   5867+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  122 
  Active Usings: @REGION_823_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000037BE 078E                               5868+         bcr 8,14                if same dsab, just return              01-DCCEP
000037C0 E3F0 D010 0024          00000010   5869+         stg 15,16(0,13)         save return code                       01-DCCEP
000037C6 E300 D018 0024          00000018   5870+         stg 0,24(0,13)          save more return code                  01-DCCEP
000037CC E3F0 D090 0004          00000090   5871+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000037D2 E3F0 F018 0004          00000018   5872+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000037D8 47F0 F040               00000040   5873+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5874+* End of Epilog
                                            5875 * * **** End of Epilogue
                                            5876          DROP  12
                                            5877 *
                                            5878 *   DSECT for automatic variables in "rd_kafka_message_errstr"
                                            5879 *      (FUNCTION #823)
                                            5880 *
00000000                00000000 000000A8   5881 @AUTO#rd_kafka_message_errstr DSECT
00000000                                    5882          DS    XL168
                                            5883 *
000037DC                00000000 0000E868   5884 @CODE    CSECT
                                            5885 *
                                            5886 *
                                            5887 *
                                            5888 * ....... start of rd_kafka_check_produce
000037DC                                    5889 @LNAME1978 DS  0H
000037DC 00000016                           5890          DC    X'00000016'
000037E0 99846D9281869281                   5891          DC    C'rd_kafka_check_produce'
000037F6 00                                 5892          DC    X'00'
                                            5893 rd_kafka_check_produce DCCPRLG CINDEX=1978,BASER=12,FRAME=200,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1978
                                            5894          macro
                                            5895          dccextrn &m
                                            5896          gblc    &$dccext(1000)
                                            5897          gbla    &$dccexti
                                            5898          lcla    &i
                                            5899 &$dccext(&$dccexti+1) setc    '&m'
                                            5900 &i       seta    1
                                            5901 .loop    aif    (&i gt &$dccexti).around
                                            5902          aif    ('&$dccext(&i)' eq '&m').getout
                                            5903 &i       seta    &i+1
                                            5904          ago     .loop
                                            5905 .around  anop
                                            5906 &$dccexti seta &$dccexti+1
                                            5907          extrn  &m
                                            5908 .getout  anop
                                            5909          mend
000037F8                                    5910+$eye0150    ds    0d                                                    02-DCCCA
000037F8 C4C3C3                             5911+         dc cl3'DCC'                                                    02-DCCCA
000037FB 01                                 5912+         dc xl1'01' format one                                          02-DCCCA
000037FC 00000000                           5913+         dc a(0)                                                        02-DCCCA
00003800 000000000000386A                   5914+         dc ad(@PER_1978)                                               02-DCCCA
00003808 00000000000000C8                   5915+         dc ad(200)                                                     02-DCCCA
00003810 0000000000000000                   5916+         dc ad(0)                                                       02-DCCCA
00003818 0000000000001000                   5917+         dc ad(4096)                                                    02-DCCCA
00003820 20                                 5918+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page  123 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003821 03                                 5919+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003822 03                                 5920+         dc al1(3)                                                      02-DCCCA
00003823 08                                 5921+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003824 00                                 5922+         dc bl.8'00000000'                                              02-DCCCA
00003825 000000                             5923+         dc al3(0)                                                      02-DCCCA
00003828 00000000000037DC                   5924+         dc ad(@LNAME1978)                                              02-DCCCA
00003830                                    5925+         ds 0d                                                          02-DCCCA
00003830 00000000000037F8                   5926+         dc ad($eye0150)                                                02-DCCCA
00003838 0000000000000000                   5927+         dc ad(0)                                                       02-DCCCA
00003840                                    5928+         ds    0d                                                       01-DCCPR
00003840                                    5929+rd_kafka_check_produce ds 0d                                            01-DCCPR
00003840                                    5930+@REGION_1978_1 ds 0h                                                    01-DCCPR
00003840 EBEC D008 0024          00000008   5931+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003846 E3E0 D088 0004          00000088   5932+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000384C E3C0 D090 0004          00000090   5933+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003852 B904 002E                          5934+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003856 E3B0 C018 0004          00000018   5935+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000385C A7EB 00C8               000000C8   5936+         aghi  14,200              increase by frame size               01-DCCPR
00003860 E3E0 C020 0021          00000020   5937+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003866 4720 B020               00000020   5938+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000386A                                    5939+@PER_1978 ds   0h                                                       01-DCCPR
0000386A EBDE 2080 0024          00000080   5940+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003870 E3C0 2090 0024          00000090   5941+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003876 B904 00D2                          5942+         lgr   13,2                set real frame pointer               01-DCCPR
0000387A B904 00CF                          5943+         lgr   12,15               set base reg                         01-DCCPR
                        00003840            5944+         using @REGION_1978_1,12                                        01-DCCPR
                                            5945 * ******* End of Prologue
                                            5946 * *
0000387E EB23 1000 0004          00000000   5947          LMG   2,3,0(1)    ; rk
                                            5948 * ***           rd_kafka_resp_err_t err;
                                            5949 * ***
                                            5950 * ***           if ((((err = rd_kafka_fatal_error_code(rk))))) {
00003884 E320 D0B0 0024          000000B0   5951          STG   2,176(0,13)
0000388A 4110 D0B0               000000B0   5952          LA    1,176(0,13)
0000388E E3F0 C0F0 0004          00003930   5953          LG    15,@lit_1978_140 ; rd_kafka_fatal_error_code
00003894                                    5954 @@gen_label194 DS    0H
00003894 05EF                               5955          BALR  14,15
00003896                                    5956 @@gen_label195 DS    0H
00003896 124F                               5957          LTR   4,15
00003898 4780 C138               00003978   5958          BZ    @L677
                                            5959 * ***                   rd_kafka_set_last_error(RD_KAFKA_RESP_ERR__FAT\
                                            5960 * AL, 85);
0000389C E548 D0B0 FF6A          000000B0   5961          MVGHI 176(13),-150
000038A2 E548 D0B8 0055          000000B8   5962          MVGHI 184(13),85
000038A8 4110 D0B0               000000B0   5963          LA    1,176(0,13)
000038AC E3F0 C0F8 0004          00003938   5964          LG    15,@lit_1978_141 ; rd_kafka_set_last_error
000038B2                                    5965 @@gen_label197 DS    0H
000038B2 05EF                               5966          BALR  14,15
000038B4                                    5967 @@gen_label198 DS    0H
                                            5968 * ***                   if (errorp) {
000038B4 B902 00F3                          5969          LTGR  15,3
000038B8 4780 C0E0               00003920   5970          BZ    @L678
                                                                                                                           Page  124 
  Active Usings: @REGION_1978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5971 * ***                           rwlock_rdlock(&(rk)->rk_lock);
000038BC 41F0 29A0               000009A0   5972          LA    15,2464(0,2)
000038C0 E3F0 D0B0 0024          000000B0   5973          STG   15,176(0,13)
000038C6 4110 D0B0               000000B0   5974          LA    1,176(0,13)
000038CA E3F0 C100 0004          00003940   5975          LG    15,@lit_1978_142 ; rwlock_rdlock
000038D0                                    5976 @@gen_label200 DS    0H
000038D0 05EF                               5977          BALR  14,15
000038D2                                    5978 @@gen_label201 DS    0H
                                            5979 * ***                           *errorp = rd_kafka_error_new_fatal(
                                            5980 * ***                                   err,
                                            5981 * ***                                   "Producing not allowed since a\
                                            5982 *  previous fatal "
                                            5983 * ***                                   rk->rk_fatal.errstr);
000038D2 B914 00F4                          5984          LGFR  15,4
000038D6 E3F0 D0B0 0024          000000B0   5985          STG   15,176(0,13)
                                            5986 * ***                                   "error was raised: %s",
000038DC E3F0 C110 0004          00003950   5987          LG    15,@lit_1978_143
000038E2 41F0 F1B4               000001B4   5988          LA    15,436(0,15)
000038E6 E3F0 D0B8 0024          000000B8   5989          STG   15,184(0,13)
000038EC E3F0 2A50 0004          00000A50   5990          LG    15,2640(0,2)
000038F2 E3F0 D0C0 0024          000000C0   5991          STG   15,192(0,13)
000038F8 4110 D0B0               000000B0   5992          LA    1,176(0,13)
000038FC E3F0 C108 0004          00003948   5993          LG    15,@lit_1978_144 ; rd_kafka_error_new_fatal
00003902                                    5994 @@gen_label202 DS    0H
00003902 05EF                               5995          BALR  14,15
00003904                                    5996 @@gen_label203 DS    0H
00003904 E3F0 3000 0024          00000000   5997          STG   15,0(0,3)
                                            5998 * ***                           rwlock_rdunlock(&(rk)->rk_lock);
0000390A 41F0 29A0               000009A0   5999          LA    15,2464(0,2)
0000390E E3F0 D0B0 0024          000000B0   6000          STG   15,176(0,13)
00003914 4110 D0B0               000000B0   6001          LA    1,176(0,13)
00003918 E3F0 C118 0004          00003958   6002          LG    15,@lit_1978_145 ; rwlock_rdunlock
0000391E                                    6003 @@gen_label204 DS    0H
0000391E 05EF                               6004          BALR  14,15
00003920                                    6005 @@gen_label205 DS    0H
                                            6006 * ***                   }
00003920                                    6007 @L678    DS    0H
                                            6008 * ***                   return RD_KAFKA_RESP_ERR__FATAL;
00003920 A7F9 FF6A               0000FF6A   6009          LGHI  15,-150     ; -150
00003924 47F0 C1F4               00003A34   6010          B     @ret_lab_1978
00003928                                    6011          DS    0D
00003928 000000C8                           6012 @FRAMESIZE_1978 DC F'200'
0000392C 00000000
00003930 0000000000003048                   6013 @lit_1978_140 DC AD(rd_kafka_fatal_error_code)
00003938 0000000000002F10                   6014 @lit_1978_141 DC AD(rd_kafka_set_last_error)
00003940 0000000000000000                   6015 @lit_1978_142 DC AD(rwlock_rdlock)
00003948 0000000000000000                   6016 @lit_1978_144 DC AD(rd_kafka_error_new_fatal)
00003950 000000000000ECA4                   6017 @lit_1978_143 DC AD(@strings@)
00003958 0000000000000000                   6018 @lit_1978_145 DC AD(rwlock_rdunlock)
00003960 00000000000031A0                   6019 @lit_1978_147 DC AD(rd_kafka_txn_may_enq_msg)
00003968 0000000000002968                   6020 @lit_1978_151 DC AD(rd_kafka_txn_state2str)
00003970 0000000000000000                   6021 @lit_1978_153 DC AD(rd_kafka_error_new)
                                                                                                                           Page  125 
  Active Usings: @REGION_1978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6022 * ***           }
00003978                                    6023 @L677    DS    0H
                                            6024 * ***
                                            6025 * ***           if (((rd_kafka_txn_may_enq_msg(rk))))
00003978 E320 D0B0 0024          000000B0   6026          STG   2,176(0,13)
0000397E 4110 D0B0               000000B0   6027          LA    1,176(0,13)
00003982 E3F0 C120 0004          00003960   6028          LG    15,@lit_1978_147 ; rd_kafka_txn_may_enq_msg
00003988                                    6029 @@gen_label206 DS    0H
00003988 05EF                               6030          BALR  14,15
0000398A                                    6031 @@gen_label207 DS    0H
0000398A C0FB 0000 00FF                     6032          NILF  15,X'000000FF'
00003990 12FF                               6033          LTR   15,15
00003992 4780 C15E               0000399E   6034          BZ    @L679
                                            6035 * ***                   return RD_KAFKA_RESP_ERR_NO_ERROR;
00003996 A7F9 0000               00000000   6036          LGHI  15,0        ; 0
0000399A 47F0 C1F4               00003A34   6037          B     @ret_lab_1978
0000399E                                    6038 @L679    DS    0H
                                            6039 * ***
                                            6040 * ***
                                            6041 * ***           rd_kafka_set_last_error(RD_KAFKA_RESP_ERR__STATE, 8);
0000399E E548 D0B0 FF54          000000B0   6042          MVGHI 176(13),-172
000039A4 E548 D0B8 0008          000000B8   6043          MVGHI 184(13),8
000039AA 4110 D0B0               000000B0   6044          LA    1,176(0,13)
000039AE E3F0 C0F8 0004          00003938   6045          LG    15,@lit_1978_141 ; rd_kafka_set_last_error
000039B4                                    6046 @@gen_label209 DS    0H
000039B4 05EF                               6047          BALR  14,15
000039B6                                    6048 @@gen_label210 DS    0H
                                            6049 * ***
                                            6050 * ***           if (errorp) {
000039B6 B902 00F3                          6051          LTGR  15,3
000039BA 4780 C1F0               00003A30   6052          BZ    @L680
                                            6053 * ***                   rwlock_rdlock(&(rk)->rk_lock);
000039BE 41F0 29A0               000009A0   6054          LA    15,2464(0,2)
000039C2 E3F0 D0B0 0024          000000B0   6055          STG   15,176(0,13)
000039C8 4110 D0B0               000000B0   6056          LA    1,176(0,13)
000039CC E3F0 C100 0004          00003940   6057          LG    15,@lit_1978_142 ; rwlock_rdlock
000039D2                                    6058 @@gen_label212 DS    0H
000039D2 05EF                               6059          BALR  14,15
000039D4                                    6060 @@gen_label213 DS    0H
                                            6061 * ***                   *errorp = rd_kafka_error_new(
                                            6062 * ***                           RD_KAFKA_RESP_ERR__STATE,
                                            6063 * ***                           "Producing not allowed in transactiona\
                                            6064 * l state %s",
                                            6065 * ***                           rd_kafka_txn_state2str(rk->rk_eos.txn_\
                                            6066 * state));
000039D4 E3F0 2D38 0014          00000D38   6067          LGF   15,3384(0,2)
000039DA E3F0 D0B0 0024          000000B0   6068          STG   15,176(0,13)
000039E0 4110 D0B0               000000B0   6069          LA    1,176(0,13)
000039E4 E3F0 C128 0004          00003968   6070          LG    15,@lit_1978_151 ; rd_kafka_txn_state2str
000039EA                                    6071 @@gen_label214 DS    0H
000039EA 05EF                               6072          BALR  14,15
000039EC                                    6073 @@gen_label215 DS    0H
                                                                                                                           Page  126 
  Active Usings: @REGION_1978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000039EC E548 D0B0 FF54          000000B0   6074          MVGHI 176(13),-172
000039F2 E310 C110 0004          00003950   6075          LG    1,@lit_1978_143
000039F8 4110 11F6               000001F6   6076          LA    1,502(0,1)
000039FC E310 D0B8 0024          000000B8   6077          STG   1,184(0,13)
00003A02 E3F0 D0C0 0024          000000C0   6078          STG   15,192(0,13)
00003A08 4110 D0B0               000000B0   6079          LA    1,176(0,13)
00003A0C E3F0 C130 0004          00003970   6080          LG    15,@lit_1978_153 ; rd_kafka_error_new
00003A12                                    6081 @@gen_label216 DS    0H
00003A12 05EF                               6082          BALR  14,15
00003A14                                    6083 @@gen_label217 DS    0H
00003A14 E3F0 3000 0024          00000000   6084          STG   15,0(0,3)
                                            6085 * ***                   rwlock_rdunlock(&(rk)->rk_lock);
00003A1A 41F0 29A0               000009A0   6086          LA    15,2464(0,2)
00003A1E E3F0 D0B0 0024          000000B0   6087          STG   15,176(0,13)
00003A24 4110 D0B0               000000B0   6088          LA    1,176(0,13)
00003A28 E3F0 C118 0004          00003958   6089          LG    15,@lit_1978_145 ; rwlock_rdunlock
00003A2E                                    6090 @@gen_label218 DS    0H
00003A2E 05EF                               6091          BALR  14,15
00003A30                                    6092 @@gen_label219 DS    0H
                                            6093 * ***           }
00003A30                                    6094 @L680    DS    0H
                                            6095 * ***
                                            6096 * ***           return RD_KAFKA_RESP_ERR__STATE;
00003A30 A7F9 FF54               0000FF54   6097          LGHI  15,-172     ; -172
                                            6098 * ***   }
00003A34                                    6099 @ret_lab_1978 DS 0H
                                            6100 * * **** Start of Epilogue
                                            6101          DCCEPIL
00003A34                                    6102+         ds 0h                                                          01-DCCEP
                                            6103+* Epilog
00003A34 D707 D088 D088 00000088 00000088   6104+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003A3A E3D0 D080 0004          00000080   6105+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003A40 E3C0 D090 0004          00000090   6106+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003A46 E3B0 C018 0004          00000018   6107+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003A4C E3C0 B010 0021          00000010   6108+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003A52 E3E0 D008 0004          00000008   6109+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003A58 EB1C D020 0004          00000020   6110+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003A5E 078E                               6111+         bcr 8,14                if same dsab, just return              01-DCCEP
00003A60 E3F0 D010 0024          00000010   6112+         stg 15,16(0,13)         save return code                       01-DCCEP
00003A66 E300 D018 0024          00000018   6113+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003A6C E3F0 D090 0004          00000090   6114+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003A72 E3F0 F018 0004          00000018   6115+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003A78 47F0 F040               00000040   6116+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6117+* End of Epilog
                                            6118 * * **** End of Epilogue
                                            6119          DROP  12
                                            6120 *
                                            6121 *   DSECT for automatic variables in "rd_kafka_check_produce"
                                            6122 *      (FUNCTION #1978)
                                            6123 *
00000000                00000000 000000AC   6124 @AUTO#rd_kafka_check_produce DSECT
00000000                                    6125          DS    XL168
                                                                                                                           Page  127 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    6126 rd_kafka_check_produce#err#0 DS 1F ; err
                                            6127 *
00003A7C                00000000 0000E868   6128 @CODE    CSECT
                                            6129 *
                                            6130 *
                                            6131 *
                                            6132 * ....... start of rd_kafka_msg_destroy
                                            6133 rd_kafka_msg_destroy ALIAS X'99846D92818692816D94A2876D8485A2A39996A8'
00003A7C                                    6134 @LNAME1339 DS  0H
00003A7C 00000014                           6135          DC    X'00000014'
00003A80 99846D9281869281                   6136          DC    C'rd_kafka_msg_destroy'
00003A94 00                                 6137          DC    X'00'
                                            6138 rd_kafka_msg_destroy DCCPRLG CINDEX=1339,BASER=12,FRAME=192,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1339
                                            6139          macro
                                            6140          dccextrn &m
                                            6141          gblc    &$dccext(1000)
                                            6142          gbla    &$dccexti
                                            6143          lcla    &i
                                            6144 &$dccext(&$dccexti+1) setc    '&m'
                                            6145 &i       seta    1
                                            6146 .loop    aif    (&i gt &$dccexti).around
                                            6147          aif    ('&$dccext(&i)' eq '&m').getout
                                            6148 &i       seta    &i+1
                                            6149          ago     .loop
                                            6150 .around  anop
                                            6151 &$dccexti seta &$dccexti+1
                                            6152          extrn  &m
                                            6153 .getout  anop
                                            6154          mend
00003A98                                    6155+$eye0153    ds    0d                                                    02-DCCCA
00003A98 C4C3C3                             6156+         dc cl3'DCC'                                                    02-DCCCA
00003A9B 01                                 6157+         dc xl1'01' format one                                          02-DCCCA
00003A9C 00000000                           6158+         dc a(0)                                                        02-DCCCA
00003AA0 0000000000003B0A                   6159+         dc ad(@PER_1339)                                               02-DCCCA
00003AA8 00000000000000C0                   6160+         dc ad(192)                                                     02-DCCCA
00003AB0 0000000000000000                   6161+         dc ad(0)                                                       02-DCCCA
00003AB8 0000000000001000                   6162+         dc ad(4096)                                                    02-DCCCA
00003AC0 20                                 6163+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003AC1 03                                 6164+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003AC2 03                                 6165+         dc al1(3)                                                      02-DCCCA
00003AC3 08                                 6166+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003AC4 00                                 6167+         dc bl.8'00000000'                                              02-DCCCA
00003AC5 000000                             6168+         dc al3(0)                                                      02-DCCCA
00003AC8 0000000000003A7C                   6169+         dc ad(@LNAME1339)                                              02-DCCCA
00003AD0                                    6170+         ds 0d                                                          02-DCCCA
00003AD0 0000000000003A98                   6171+         dc ad($eye0153)                                                02-DCCCA
00003AD8 0000000000000000                   6172+         dc ad(0)                                                       02-DCCCA
00003AE0                                    6173+         ds    0d                                                       01-DCCPR
                                            6174+         entry rd_kafka_msg_destroy                                     01-DCCPR
00003AE0                                    6175+rd_kafka_msg_destroy ds 0d                                              01-DCCPR
00003AE0                                    6176+@REGION_1339_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003AE0 EBEC D008 0024          00000008   6177+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003AE6 E3E0 D088 0004          00000088   6178+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003AEC E3C0 D090 0004          00000090   6179+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003AF2 B904 002E                          6180+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003AF6 E3B0 C018 0004          00000018   6181+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003AFC A7EB 00C0               000000C0   6182+         aghi  14,192              increase by frame size               01-DCCPR
00003B00 E3E0 C020 0021          00000020   6183+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003B06 4720 B020               00000020   6184+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003B0A                                    6185+@PER_1339 ds   0h                                                       01-DCCPR
00003B0A EBDE 2080 0024          00000080   6186+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003B10 E3C0 2090 0024          00000090   6187+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003B16 B904 00D2                          6188+         lgr   13,2                set real frame pointer               01-DCCPR
00003B1A B904 00CF                          6189+         lgr   12,15               set base reg                         01-DCCPR
                        00003AE0            6190+         using @REGION_1339_1,12                                        01-DCCPR
                                            6191 * ******* End of Prologue
                                            6192 * *
00003B1E E320 1008 0004          00000008   6193          LG    2,8(0,1)    ; rkm
                                            6194 * ***
                                            6195 * ***      if (rkm->rkm_flags & 0x20000) {
00003B24 9102 2059      00000059 00000002   6196          TM    89(2),2
00003B28 4780 C0B8               00003B98   6197          BZ    @L681
                                            6198 * ***         do {} while (0);
00003B2C                                    6199 @L682    DS    0H
                                            6200 * ***         rd_kafka_curr_msgs_sub(
                                            6201 * ***            rk ? rk :
                                            6202 * ***            1, rkm->rkm_rkmessage.len);
00003B2C E3F0 1000 0004          00000000   6203          LG    15,0(0,1)   ; rk
00003B32 B902 001F                          6204          LTGR  1,15
00003B36 4780 C088               00003B68   6205          BZ    @L685
00003B3A 47F0 C094               00003B74   6206          B     @L686
00003B40                                    6207          DS    0D
00003B40 000000C0                           6208 @FRAMESIZE_1339 DC F'192'
00003B44 00000000
00003B48 0000000000002CB8                   6209 @lit_1339_157 DC AD(rd_kafka_curr_msgs_sub)
00003B50 0000000000000000                   6210 @lit_1339_158 DC AD(rd_kafka_headers_destroy)
00003B58 00000000000025F0                   6211 @lit_1339_159 DC AD(rd_kafka_topic_destroy0)
00003B60 0000000000000848                   6212 @lit_1339_160 DC AD(rd_free)
00003B68                                    6213 @L685    DS    0H
                                            6214 * ***            rkm->rkm_rkmessage.rkt->rkt_rk,
00003B68 E3F0 2008 0004          00000008   6215          LG    15,8(0,2)   ; offset of rkt in rd_kafka_message_s
00003B6E E3F0 F148 0004          00000148   6216          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00003B74                                    6217 @L686    DS    0H
00003B74 E3F0 D0A8 0024          000000A8   6218          STG   15,168(0,13)
00003B7A E548 D0B0 0001          000000B0   6219          MVGHI 176(13),1
00003B80 E3F0 2020 0004          00000020   6220          LG    15,32(0,2)
00003B86 E3F0 D0B8 0024          000000B8   6221          STG   15,184(0,13)
00003B8C 4110 D0A8               000000A8   6222          LA    1,168(0,13)
00003B90 E3F0 C068 0004          00003B48   6223          LG    15,@lit_1339_157 ; rd_kafka_curr_msgs_sub
00003B96                                    6224 @@gen_label222 DS    0H
00003B96 05EF                               6225          BALR  14,15
00003B98                                    6226 @@gen_label223 DS    0H
                                            6227 * ***      }
                                                                                                                           Page  129 
  Active Usings: @REGION_1339_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003B98                                    6228 @L681    DS    0H
                                            6229 * ***
                                            6230 * ***           if (rkm->rkm_headers)
00003B98 E3F0 2068 0002          00000068   6231          LTG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
00003B9E 4780 C0DA               00003BBA   6232          BZ    @L687
                                            6233 * ***                   rd_kafka_headers_destroy(rkm->rkm_headers);
00003BA2 E3F0 2068 0004          00000068   6234          LG    15,104(0,2)
00003BA8 E3F0 D0A8 0024          000000A8   6235          STG   15,168(0,13)
00003BAE 4110 D0A8               000000A8   6236          LA    1,168(0,13)
00003BB2 E3F0 C070 0004          00003B50   6237          LG    15,@lit_1339_158 ; rd_kafka_headers_destroy
00003BB8                                    6238 @@gen_label225 DS    0H
00003BB8 05EF                               6239          BALR  14,15
00003BBA                                    6240 @@gen_label226 DS    0H
00003BBA                                    6241 @L687    DS    0H
                                            6242 * ***
                                            6243 * ***      if (((rkm->rkm_rkmessage.rkt != ((void *)0))))
00003BBA E3F0 2008 0002          00000008   6244          LTG   15,8(0,2)   ; offset of rkt in rd_kafka_message_s
00003BC0 4780 C0FC               00003BDC   6245          BE    @L688
                                            6246 * ***         rd_kafka_topic_destroy0(rkm->rkm_rkmessage.rkt);
00003BC4 E3F0 2008 0004          00000008   6247          LG    15,8(0,2)
00003BCA E3F0 D0A8 0024          000000A8   6248          STG   15,168(0,13)
00003BD0 4110 D0A8               000000A8   6249          LA    1,168(0,13)
00003BD4 E3F0 C078 0004          00003B58   6250          LG    15,@lit_1339_159 ; rd_kafka_topic_destroy0
00003BDA                                    6251 @@gen_label228 DS    0H
00003BDA 05EF                               6252          BALR  14,15
00003BDC                                    6253 @@gen_label229 DS    0H
00003BDC                                    6254 @L688    DS    0H
                                            6255 * ***
                                            6256 * ***      if (rkm->rkm_flags & 0x1 && rkm->rkm_rkmessage.payload)
00003BDC 9101 205B      0000005B 00000001   6257          TM    91(2),1
00003BE0 4780 C126               00003C06   6258          BZ    @L689
00003BE4 E3F0 2018 0002          00000018   6259          LTG   15,24(0,2)  ; offset of payload in rd_kafka_message_s
00003BEA 4780 C126               00003C06   6260          BZ    @L689
                                            6261 * ***         rd_free(rkm->rkm_rkmessage.payload);
00003BEE E3F0 2018 0004          00000018   6262          LG    15,24(0,2)
00003BF4 E3F0 D0A8 0024          000000A8   6263          STG   15,168(0,13)
00003BFA 4110 D0A8               000000A8   6264          LA    1,168(0,13)
00003BFE E3F0 C080 0004          00003B60   6265          LG    15,@lit_1339_160 ; rd_free
00003C04                                    6266 @@gen_label232 DS    0H
00003C04 05EF                               6267          BALR  14,15
00003C06                                    6268 @@gen_label233 DS    0H
00003C06                                    6269 @L689    DS    0H
                                            6270 * ***
                                            6271 * ***      if (rkm->rkm_flags & 0x10000)
00003C06 9101 2059      00000059 00000001   6272          TM    89(2),1
00003C0A 4780 C140               00003C20   6273          BZ    @ret_lab_1339
                                            6274 * ***         rd_free(rkm);
00003C0E E320 D0A8 0024          000000A8   6275          STG   2,168(0,13)
00003C14 4110 D0A8               000000A8   6276          LA    1,168(0,13)
00003C18 E3F0 C080 0004          00003B60   6277          LG    15,@lit_1339_160 ; rd_free
00003C1E                                    6278 @@gen_label235 DS    0H
00003C1E 05EF                               6279          BALR  14,15
                                                                                                                           Page  130 
  Active Usings: @REGION_1339_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C20                                    6280 @@gen_label236 DS    0H
00003C20                                    6281 @L690    DS    0H
                                            6282 * ***   }
00003C20                                    6283 @ret_lab_1339 DS 0H
                                            6284 * * **** Start of Epilogue
                                            6285          DCCEPIL
00003C20                                    6286+         ds 0h                                                          01-DCCEP
                                            6287+* Epilog
00003C20 D707 D088 D088 00000088 00000088   6288+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C26 E3D0 D080 0004          00000080   6289+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003C2C E3C0 D090 0004          00000090   6290+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C32 E3B0 C018 0004          00000018   6291+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C38 E3C0 B010 0021          00000010   6292+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C3E E3E0 D008 0004          00000008   6293+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C44 EB1C D020 0004          00000020   6294+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C4A 078E                               6295+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C4C E3F0 D010 0024          00000010   6296+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C52 E300 D018 0024          00000018   6297+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C58 E3F0 D090 0004          00000090   6298+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C5E E3F0 F018 0004          00000018   6299+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C64 47F0 F040               00000040   6300+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6301+* End of Epilog
                                            6302 * * **** End of Epilogue
                                            6303          DROP  12
                                            6304 *
                                            6305 *   DSECT for automatic variables in "rd_kafka_msg_destroy"
                                            6306 *      (FUNCTION #1339)
                                            6307 *
00000000                00000000 000000A8   6308 @AUTO#rd_kafka_msg_destroy DSECT
00000000                                    6309          DS    XL168
                                            6310 *
00003C68                00000000 0000E868   6311 @CODE    CSECT
                                            6312 *
                                            6313 *
                                            6314 *
                                            6315 * ....... start of rd_kafka_msg_new00
00003C68                                    6316 @LNAME1979 DS  0H
00003C68 00000012                           6317          DC    X'00000012'
00003C6C 99846D9281869281                   6318          DC    C'rd_kafka_msg_new00'
00003C7E 00                                 6319          DC    X'00'
                                            6320 rd_kafka_msg_new00 DCCPRLG CINDEX=1979,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1979
                                            6321          macro
                                            6322          dccextrn &m
                                            6323          gblc    &$dccext(1000)
                                            6324          gbla    &$dccexti
                                            6325          lcla    &i
                                            6326 &$dccext(&$dccexti+1) setc    '&m'
                                            6327 &i       seta    1
                                            6328 .loop    aif    (&i gt &$dccexti).around
                                            6329          aif    ('&$dccext(&i)' eq '&m').getout
                                            6330 &i       seta    &i+1
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6331          ago     .loop
                                            6332 .around  anop
                                            6333 &$dccexti seta &$dccexti+1
                                            6334          extrn  &m
                                            6335 .getout  anop
                                            6336          mend
00003C80                                    6337+$eye0156    ds    0d                                                    02-DCCCA
00003C80 C4C3C3                             6338+         dc cl3'DCC'                                                    02-DCCCA
00003C83 01                                 6339+         dc xl1'01' format one                                          02-DCCCA
00003C84 00000000                           6340+         dc a(0)                                                        02-DCCCA
00003C88 0000000000003CF2                   6341+         dc ad(@PER_1979)                                               02-DCCCA
00003C90 00000000000000B8                   6342+         dc ad(184)                                                     02-DCCCA
00003C98 0000000000000000                   6343+         dc ad(0)                                                       02-DCCCA
00003CA0 0000000000001000                   6344+         dc ad(4096)                                                    02-DCCCA
00003CA8 20                                 6345+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003CA9 03                                 6346+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003CAA 03                                 6347+         dc al1(3)                                                      02-DCCCA
00003CAB 08                                 6348+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003CAC 00                                 6349+         dc bl.8'00000000'                                              02-DCCCA
00003CAD 000000                             6350+         dc al3(0)                                                      02-DCCCA
00003CB0 0000000000003C68                   6351+         dc ad(@LNAME1979)                                              02-DCCCA
00003CB8                                    6352+         ds 0d                                                          02-DCCCA
00003CB8 0000000000003C80                   6353+         dc ad($eye0156)                                                02-DCCCA
00003CC0 0000000000000000                   6354+         dc ad(0)                                                       02-DCCCA
00003CC8                                    6355+         ds    0d                                                       01-DCCPR
00003CC8                                    6356+rd_kafka_msg_new00 ds 0d                                                01-DCCPR
00003CC8                                    6357+@REGION_1979_1 ds 0h                                                    01-DCCPR
00003CC8 EBEC D008 0024          00000008   6358+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003CCE E3E0 D088 0004          00000088   6359+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003CD4 E3C0 D090 0004          00000090   6360+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003CDA B904 002E                          6361+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003CDE E3B0 C018 0004          00000018   6362+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003CE4 A7EB 00B8               000000B8   6363+         aghi  14,184              increase by frame size               01-DCCPR
00003CE8 E3E0 C020 0021          00000020   6364+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003CEE 4720 B020               00000020   6365+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003CF2                                    6366+@PER_1979 ds   0h                                                       01-DCCPR
00003CF2 EBDE 2080 0024          00000080   6367+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003CF8 E3C0 2090 0024          00000090   6368+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003CFE B904 00D2                          6369+         lgr   13,2                set real frame pointer               01-DCCPR
00003D02 B904 00CF                          6370+         lgr   12,15               set base reg                         01-DCCPR
                        00003CC8            6371+         using @REGION_1979_1,12                                        01-DCCPR
00003D06 B904 0071                          6372          LGR   7,1         ; ptr to parm area
                                            6373 * ******* End of Prologue
                                            6374 * *
00003D0A 5820 7014               00000014   6375          L     2,20(0,7)   ; msgflags
00003D0E EB34 7018 0004          00000018   6376          LMG   3,4,24(7)   ; payload
00003D14 E350 7030 0004          00000030   6377          LG    5,48(0,7)   ; keylen
                                            6378 * ***      rd_kafka_msg_t *rkm;
                                            6379 * ***      size_t mlen = sizeof(*rkm);
00003D1A A7F9 00A8               000000A8   6380          LGHI  15,168      ; 168
                                            6381 * ***      char *p;
                                            6382 * ***
                                                                                                                           Page  132 
  Active Usings: @REGION_1979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6383 * ***
                                            6384 * ***      if (msgflags & 0x2) {
00003D1E A721 0002               00000002   6385          TML   2,2
00003D22 4780 C066               00003D2E   6386          BZ    @L691
                                            6387 * ***         msgflags &= ~0x1;
00003D26 A527 FFFE               0000FFFE   6388          NILL  2,65534
                                            6389 * ***         mlen += len;
00003D2A B90A 00F4                          6390          ALGR  15,4
                                            6391 * ***      }
00003D2E                                    6392 @L691    DS    0H
                                            6393 * ***
                                            6394 * ***      mlen += keylen;
00003D2E B90A 00F5                          6395          ALGR  15,5
                                            6396 * ***
                                            6397 * ***
                                            6398 * ***
                                            6399 * ***      rkm                 = rd_malloc(mlen);
00003D32 E3F0 D0B0 0024          000000B0   6400          STG   15,176(0,13)
00003D38 4110 D0B0               000000B0   6401          LA    1,176(0,13)
00003D3C E3F0 C150 0004          00003E18   6402          LG    15,@lit_1979_164 ; rd_malloc
00003D42                                    6403 @@gen_label238 DS    0H
00003D42 05EF                               6404          BALR  14,15
00003D44                                    6405 @@gen_label239 DS    0H
00003D44 B904 006F                          6406          LGR   6,15
                                            6407 * ***      rkm->rkm_rkmessage.err        = 0;
00003D48 E54C 6000 0000          00000000   6408          MVHI  0(6),0      ; rkm
                                            6409 * ***      rkm->rkm_flags      = (0x40000 |
                                            6410 * ***                                  0x10000 | msgflags);
00003D4E 1812                               6411          LR    1,2
00003D50 A51A 0005               00000005   6412          OILH  1,5
00003D54 5010 6058               00000058   6413          ST    1,88(0,6)   ; offset of rkm_flags in rd_kafka_msg_s
                                            6414 * ***      rkm->rkm_rkmessage.len        = len;
00003D58 E340 6020 0024          00000020   6415          STG   4,32(0,6)   ; offset of len in rd_kafka_message_s
                                            6416 * ***      rkm->rkm_rkmessage._private     = msg_opaque;
00003D5E E310 7038 0004          00000038   6417          LG    1,56(0,7)   ; msg_opaque
00003D64 E310 6040 0024          00000040   6418          STG   1,64(0,6)   ; offset of _private in rd_kafka_message_s
                                            6419 * ***      rkm->rkm_rkmessage.rkt = rd_kafka_topic_keep(rkt);
00003D6A E3F0 7000 0004          00000000   6420          LG    15,0(0,7)   ; rkt
00003D70 E3F0 D0B0 0024          000000B0   6421          STG   15,176(0,13)
00003D76 4110 D0B0               000000B0   6422          LA    1,176(0,13)
00003D7A E3F0 C158 0004          00003E20   6423          LG    15,@lit_1979_165 ; rd_kafka_topic_keep
00003D80                                    6424 @@gen_label240 DS    0H
00003D80 05EF                               6425          BALR  14,15
00003D82                                    6426 @@gen_label241 DS    0H
00003D82 E3F0 6008 0024          00000008   6427          STG   15,8(0,6)
                                            6428 * ***
                                            6429 * ***           rkm->rkm_broker_id  = -1;
00003D88 E54C 6074 FFFF          00000074   6430          MVHI  116(6),-1   ; offset of rkm_broker_id in rd_kafka_msg_s
                                            6431 * ***      rkm->rkm_rkmessage.partition  = partition;
00003D8E 58F0 700C               0000000C   6432          L     15,12(0,7)  ; partition
00003D92 50F0 6010               00000010   6433          ST    15,16(0,6)  ; offset of partition in rd_kafka_message_s
                                            6434 * ***           rkm->rkm_rkmessage.offset     = -1001;
                                                                                                                           Page  133 
  Active Usings: @REGION_1979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003D96 E548 6038 FC17          00000038   6435          MVGHI 56(6),-1001 ; offset of offset in rd_kafka_message_s
                                            6436 * ***      rkm->rkm_timestamp  = 0;
00003D9C E548 6060 0000          00000060   6437          MVGHI 96(6),0     ; offset of rkm_timestamp in rd_kafka_msg_s
                                            6438 * ***      rkm->rkm_tstype     = RD_KAFKA_TIMESTAMP_NOT_AVAILABLE;
00003DA2 E54C 605C 0000          0000005C   6439          MVHI  92(6),0     ; offset of rkm_tstype in rd_kafka_msg_s
                                            6440 * ***           rkm->rkm_status     = RD_KAFKA_MSG_STATUS_NOT_PERSISTE\
                                            6441 * D;
00003DA8 E54C 6070 0000          00000070   6442          MVHI  112(6),0    ; offset of rkm_status in rd_kafka_msg_s
                                            6443 * ***           rkm->rkm_headers    = ((void *)0);
00003DAE A7F9 0000               00000000   6444          LGHI  15,0        ; 0
00003DB2 E3F0 6068 0024          00000068   6445          STG   15,104(0,6) ; offset of rkm_headers in rd_kafka_msg_s
                                            6446 * ***
                                            6447 * ***      p = (char *)(rkm+1);
00003DB8 41F0 60A8               000000A8   6448          LA    15,168(0,6)
                                            6449 * ***
                                            6450 * ***      if (payload && msgflags & 0x2) {
00003DBC B902 0013                          6451          LTGR  1,3
00003DC0 4780 C16C               00003E34   6452          BZ    @L692
00003DC4 A721 0002               00000002   6453          TML   2,2
00003DC8 4780 C16C               00003E34   6454          BZ    @L692
                                            6455 * ***
                                            6456 * ***         rkm->rkm_rkmessage.payload = p;
00003DCC E3F0 6018 0024          00000018   6457          STG   15,24(0,6)  ; offset of payload in rd_kafka_message_s
                                            6458 * ***         __memcpy(rkm->rkm_rkmessage.payload,payload,len);
00003DD2 B904 002F                          6459          LGR   2,15
00003DD6 B902 0014                          6460          LTGR  1,4
00003DDA 4780 C140               00003E08   6461          BZ    @@gen_label246
00003DDE A71B FFFF               0000FFFF   6462          AGHI  1,-1
00003DE2 EB81 0008 000A          00000008   6463          SRAG  8,1,8(0)
00003DE8 B902 0088                          6464          LTGR  8,8
00003DEC 4780 C13C               00003E04   6465          BZ    @@gen_label245
00003DF0                                    6466 @@gen_label244 DS 0H
00003DF0 D2FF 2000 3000 00000000 00000000   6467          MVC   0(256,2),0(3)
00003DF6 4120 2100               00000100   6468          LA    2,256(0,2)
00003DFA 4130 3100               00000100   6469          LA    3,256(0,3)
00003DFE E380 C128 0046          00003DF0   6470          BCTG  8,@@gen_label244
00003E04                                    6471 @@gen_label245 DS 0H
00003E04 4410 C160               00003E28   6472          EX    1,@lit_1979_167
00003E08                                    6473 @@gen_label246 DS 0H
                                            6474 * ***         p += len;
00003E08 41F4 F000               00000000   6475          LA    15,0(4,15)
                                            6476 * ***
                                            6477 * ***      } else {
00003E0C 47F0 C172               00003E3A   6478          B     @L693
00003E10                                    6479          DS    0D
00003E10 000000B8                           6480 @FRAMESIZE_1979 DC F'184'
00003E14 00000000
00003E18 00000000000006E0                   6481 @lit_1979_164 DC AD(rd_malloc)
00003E20 0000000000002488                   6482 @lit_1979_165 DC AD(rd_kafka_topic_keep)
00003E28 D200 2000 3000 00000000 00000000   6483 @lit_1979_167          MVC 0(1,2),0(3)
00003E2E D200 2000 1000 00000000 00000000   6484 @lit_1979_168          MVC 0(1,2),0(1)
00003E34                                    6485 @L692    DS    0H
                                                                                                                           Page  134 
  Active Usings: @REGION_1979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6486 * ***
                                            6487 * ***         rkm->rkm_rkmessage.payload = payload;
00003E34 E330 6018 0024          00000018   6488          STG   3,24(0,6)   ; offset of payload in rd_kafka_message_s
                                            6489 * ***      }
00003E3A                                    6490 @L693    DS    0H
                                            6491 * ***
                                            6492 * ***      if (key) {
00003E3A E310 7028 0004          00000028   6493          LG    1,40(0,7)   ; key
00003E40 B902 0021                          6494          LTGR  2,1
00003E44 4780 C1C8               00003E90   6495          BZ    @L694
                                            6496 * ***         rkm->rkm_rkmessage.key     = p;
00003E48 E3F0 6028 0024          00000028   6497          STG   15,40(0,6)  ; offset of key in rd_kafka_message_s
                                            6498 * ***         rkm->rkm_rkmessage.key_len = keylen;
00003E4E E350 6030 0024          00000030   6499          STG   5,48(0,6)   ; offset of key_len in rd_kafka_message_s
                                            6500 * ***         __memcpy(rkm->rkm_rkmessage.key,key,keylen);
00003E54 E320 6028 0004          00000028   6501          LG    2,40(0,6)
00003E5A B902 00F5                          6502          LTGR  15,5
00003E5E 4780 C1D8               00003EA0   6503          BZ    @L695
00003E62 A7FB FFFF               0000FFFF   6504          AGHI  15,-1
00003E66 EB3F 0008 000A          00000008   6505          SRAG  3,15,8(0)
00003E6C B902 0033                          6506          LTGR  3,3
00003E70 4780 C1C0               00003E88   6507          BZ    @@gen_label249
00003E74                                    6508 @@gen_label248 DS 0H
00003E74 D2FF 2000 1000 00000000 00000000   6509          MVC   0(256,2),0(1)
00003E7A 4120 2100               00000100   6510          LA    2,256(0,2)
00003E7E 4110 1100               00000100   6511          LA    1,256(0,1)
00003E82 E330 C1AC 0046          00003E74   6512          BCTG  3,@@gen_label248
00003E88                                    6513 @@gen_label249 DS 0H
00003E88 44F0 C166               00003E2E   6514          EX    15,@lit_1979_168
00003E8C                                    6515 @@gen_label250 DS 0H
                                            6516 * ***      } else {
00003E8C 47F0 C1D8               00003EA0   6517          B     @L695
00003E90                                    6518 @L694    DS    0H
                                            6519 * ***         rkm->rkm_rkmessage.key = ((void *)0);
00003E90 A7F9 0000               00000000   6520          LGHI  15,0        ; 0
00003E94 E3F0 6028 0024          00000028   6521          STG   15,40(0,6)  ; offset of key in rd_kafka_message_s
                                            6522 * ***         rkm->rkm_rkmessage.key_len = 0;
00003E9A E548 6030 0000          00000030   6523          MVGHI 48(6),0     ; offset of key_len in rd_kafka_message_s
                                            6524 * ***      }
00003EA0                                    6525 @L695    DS    0H
                                            6526 * ***
                                            6527 * ***           return rkm;
00003EA0 B904 00F6                          6528          LGR   15,6
                                            6529 * ***   }
                                            6530 * * **** Start of Epilogue
                                            6531          DCCEPIL
00003EA4                                    6532+         ds 0h                                                          01-DCCEP
                                            6533+* Epilog
00003EA4 D707 D088 D088 00000088 00000088   6534+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003EAA E3D0 D080 0004          00000080   6535+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003EB0 E3C0 D090 0004          00000090   6536+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003EB6 E3B0 C018 0004          00000018   6537+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  135 
  Active Usings: @REGION_1979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003EBC E3C0 B010 0021          00000010   6538+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003EC2 E3E0 D008 0004          00000008   6539+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003EC8 EB1C D020 0004          00000020   6540+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003ECE 078E                               6541+         bcr 8,14                if same dsab, just return              01-DCCEP
00003ED0 E3F0 D010 0024          00000010   6542+         stg 15,16(0,13)         save return code                       01-DCCEP
00003ED6 E300 D018 0024          00000018   6543+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003EDC E3F0 D090 0004          00000090   6544+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003EE2 E3F0 F018 0004          00000018   6545+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003EE8 47F0 F040               00000040   6546+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6547+* End of Epilog
                                            6548 * * **** End of Epilogue
                                            6549          DROP  12
                                            6550 *
                                            6551 *   DSECT for automatic variables in "rd_kafka_msg_new00"
                                            6552 *      (FUNCTION #1979)
                                            6553 *
00000000                00000000 000000B0   6554 @AUTO#rd_kafka_msg_new00 DSECT
00000000                                    6555          DS    XL168
000000A8                                    6556 rd_kafka_msg_new00#mlen#0 DS 8XL1 ; mlen
                                            6557 *
00003EEC                00000000 0000E868   6558 @CODE    CSECT
                                            6559 *
                                            6560 *
                                            6561 *
                                            6562 * ....... start of rd_kafka_msg_new0
00003EEC                                    6563 @LNAME1980 DS  0H
00003EEC 00000011                           6564          DC    X'00000011'
00003EF0 99846D9281869281                   6565          DC    C'rd_kafka_msg_new0'
00003F01 00                                 6566          DC    X'00'
                                            6567 rd_kafka_msg_new0 DCCPRLG CINDEX=1980,BASER=12,FRAME=240,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1980
                                            6568          macro
                                            6569          dccextrn &m
                                            6570          gblc    &$dccext(1000)
                                            6571          gbla    &$dccexti
                                            6572          lcla    &i
                                            6573 &$dccext(&$dccexti+1) setc    '&m'
                                            6574 &i       seta    1
                                            6575 .loop    aif    (&i gt &$dccexti).around
                                            6576          aif    ('&$dccext(&i)' eq '&m').getout
                                            6577 &i       seta    &i+1
                                            6578          ago     .loop
                                            6579 .around  anop
                                            6580 &$dccexti seta &$dccexti+1
                                            6581          extrn  &m
                                            6582 .getout  anop
                                            6583          mend
00003F08                                    6584+$eye0159    ds    0d                                                    02-DCCCA
00003F08 C4C3C3                             6585+         dc cl3'DCC'                                                    02-DCCCA
00003F0B 01                                 6586+         dc xl1'01' format one                                          02-DCCCA
00003F0C 00000000                           6587+         dc a(0)                                                        02-DCCCA
00003F10 0000000000003F7A                   6588+         dc ad(@PER_1980)                                               02-DCCCA
                                                                                                                           Page  136 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003F18 00000000000000F0                   6589+         dc ad(240)                                                     02-DCCCA
00003F20 0000000000000000                   6590+         dc ad(0)                                                       02-DCCCA
00003F28 0000000000001000                   6591+         dc ad(4096)                                                    02-DCCCA
00003F30 20                                 6592+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003F31 03                                 6593+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003F32 03                                 6594+         dc al1(3)                                                      02-DCCCA
00003F33 08                                 6595+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003F34 00                                 6596+         dc bl.8'00000000'                                              02-DCCCA
00003F35 000000                             6597+         dc al3(0)                                                      02-DCCCA
00003F38 0000000000003EEC                   6598+         dc ad(@LNAME1980)                                              02-DCCCA
00003F40                                    6599+         ds 0d                                                          02-DCCCA
00003F40 0000000000003F08                   6600+         dc ad($eye0159)                                                02-DCCCA
00003F48 0000000000000000                   6601+         dc ad(0)                                                       02-DCCCA
00003F50                                    6602+         ds    0d                                                       01-DCCPR
00003F50                                    6603+rd_kafka_msg_new0 ds 0d                                                 01-DCCPR
00003F50                                    6604+@REGION_1980_1 ds 0h                                                    01-DCCPR
00003F50 EBEC D008 0024          00000008   6605+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003F56 E3E0 D088 0004          00000088   6606+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003F5C E3C0 D090 0004          00000090   6607+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003F62 B904 002E                          6608+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003F66 E3B0 C018 0004          00000018   6609+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003F6C A7EB 00F0               000000F0   6610+         aghi  14,240              increase by frame size               01-DCCPR
00003F70 E3E0 C020 0021          00000020   6611+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003F76 4720 B020               00000020   6612+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003F7A                                    6613+@PER_1980 ds   0h                                                       01-DCCPR
00003F7A EBDE 2080 0024          00000080   6614+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003F80 E3C0 2090 0024          00000090   6615+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003F86 B904 00D2                          6616+         lgr   13,2                set real frame pointer               01-DCCPR
00003F8A B904 00CF                          6617+         lgr   12,15               set base reg                         01-DCCPR
                        00003F50            6618+         using @REGION_1980_1,12                                        01-DCCPR
00003F8E B904 00B1                          6619          LGR   11,1        ; ptr to parm area
                                            6620 * ******* End of Prologue
                                            6621 * *
00003F92 E360 B000 0004          00000000   6622          LG    6,0(0,11)   ; rkt
00003F98 5870 B014               00000014   6623          L     7,20(0,11)  ; msgflags
00003F9C E320 B020 0004          00000020   6624          LG    2,32(0,11)  ; len
00003FA2 E330 B030 0004          00000030   6625          LG    3,48(0,11)  ; keylen
00003FA8 EB8A B040 0004          00000040   6626          LMG   8,10,64(11) ; errp
                                            6627 * ***      rd_kafka_msg_t *rkm;
                                            6628 * ***           size_t hdrs_size = 0;
00003FAE A7F9 0000               00000000   6629          LGHI  15,0        ; 0
                                            6630 * ***
                                            6631 * ***      if (((!payload)))
00003FB2 E340 B018 0004          00000018   6632          LG    4,24(0,11)  ; payload
00003FB8 B902 0014                          6633          LTGR  1,4
00003FBC 4770 C074               00003FC4   6634          BNZ   @L696
                                            6635 * ***         len = 0;
00003FC0 A729 0000               00000000   6636          LGHI  2,0         ; 0
00003FC4                                    6637 @L696    DS    0H
                                            6638 * ***      if (!key)
00003FC4 E350 B028 0004          00000028   6639          LG    5,40(0,11)  ; key
00003FCA B902 0015                          6640          LTGR  1,5
                                                                                                                           Page  137 
  Active Usings: @REGION_1980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003FCE 4770 C086               00003FD6   6641          BNZ   @L697
                                            6642 * ***         keylen = 0;
00003FD2 A739 0000               00000000   6643          LGHI  3,0         ; 0
00003FD6                                    6644 @L697    DS    0H
                                            6645 * ***           if (hdrs)
00003FD6 B902 001A                          6646          LTGR  1,10
00003FDA 4780 C0A0               00003FF0   6647          BZ    @L698
                                            6648 * ***                   hdrs_size = rd_kafka_headers_serialized_size(h\
                                            6649 * drs);
00003FDE E3A0 D0B0 0024          000000B0   6650          STG   10,176(0,13)
00003FE4 4110 D0B0               000000B0   6651          LA    1,176(0,13)
00003FE8 E3F0 C110 0004          00004060   6652          LG    15,@lit_1980_174 ; rd_kafka_headers_serialized_size
00003FEE                                    6653 @@gen_label254 DS    0H
00003FEE 05EF                               6654          BALR  14,15
00003FF0                                    6655 @@gen_label255 DS    0H
00003FF0                                    6656 @L698    DS    0H
                                            6657 * ***
                                            6658 * ***           if (((len > 0x7fffffff || keylen > 0x7fffffff || rd_ka\
                                            6659 * fka_msg_max_wire_size(keylen, len, hdrs_size) > (size_t)rkt->rkt_rk-\
                                            6660 * >rk_conf.max_msg_size))) {
00003FF0 C22E 7FFF FFFF                     6661          CLGFI 2,X'7FFFFFFF'
00003FF6 4720 C0E6               00004036   6662          BH    @L701
00003FFA C23E 7FFF FFFF                     6663          CLGFI 3,X'7FFFFFFF'
00004000 4720 C0E6               00004036   6664          BH    @L701
00004004                                    6665 @L699    DS    0H
00004004 E330 D0B0 0024          000000B0   6666          STG   3,176(0,13)
0000400A E320 D0B8 0024          000000B8   6667          STG   2,184(0,13)
00004010 E3F0 D0C0 0024          000000C0   6668          STG   15,192(0,13)
00004016 4110 D0B0               000000B0   6669          LA    1,176(0,13)
0000401A E3F0 C118 0004          00004068   6670          LG    15,@lit_1980_175 ; rd_kafka_msg_max_wire_size
00004020                                    6671 @@gen_label258 DS    0H
00004020 05EF                               6672          BALR  14,15
00004022                                    6673 @@gen_label259 DS    0H
00004022 E310 6148 0004          00000148   6674          LG    1,328(0,6)  ; offset of rkt_rk in rd_kafka_topic_s
00004028 E310 12F4 0014          000002F4   6675          LGF   1,756(0,1)
0000402E B921 00F1                          6676          CLGR  15,1
00004032 47D0 C150               000040A0   6677          BNH   @L700
00004036                                    6678 @L701    DS    0H
                                            6679 * ***
                                            6680 * ***
                                            6681 * ***                   *errp = RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE;
00004036 E54C 8000 000A          00000000   6682          MVHI  0(8),10     ; errp
                                            6683 * ***                   if (errnop)
0000403C B902 00F9                          6684          LTGR  15,9
00004040 4780 C0FA               0000404A   6685          BZ    @L702
                                            6686 * ***                           *errnop = 40;
00004044 E54C 9000 0028          00000000   6687          MVHI  0(9),40     ; errnop
0000404A                                    6688 @L702    DS    0H
                                            6689 * ***                   return ((void *)0);
0000404A A7F9 0000               00000000   6690          LGHI  15,0        ; 0
0000404E 47F0 C2F2               00004242   6691          B     @ret_lab_1980
00004058                                    6692          DS    0D
                                                                                                                           Page  138 
  Active Usings: @REGION_1980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004058 000000F0                           6693 @FRAMESIZE_1980 DC F'240'
0000405C 00000000
00004060 0000000000001398                   6694 @lit_1980_174 DC AD(rd_kafka_headers_serialized_size)
00004068 0000000000001420                   6695 @lit_1980_175 DC AD(rd_kafka_msg_max_wire_size)
00004070 0000000000002A80                   6696 @lit_1980_178 DC AD(rd_kafka_curr_msgs_add)
00004078 0000000000003CC8                   6697 @lit_1980_181 DC AD(rd_kafka_msg_new00)
00004080 0000000000000BF0                   6698 @lit_1980_182 DC AD(rd_uclock)
00004088 000003E8                           6699 @lit_1980_183 DC F'1000' 0x000003e8
0000408C 00000000
00004090 7FFFFFFFFFFFFFFF                   6700 @lit_1980_185 DC FD'9223372036854775807' 0x7fffffffffffffff
00004098 0000000000000000                   6701 @lit_1980_186 DC AD(rd_kafka_interceptors_on_send)
                                            6702 * ***           }
000040A0                                    6703 @L700    DS    0H
                                            6704 * ***
                                            6705 * ***           if (msgflags & 0x4)
000040A0 A771 0004               00000004   6706          TML   7,4
000040A4 4780 C1AA               000040FA   6707          BZ    @L703
                                            6708 * ***                   *errp = rd_kafka_curr_msgs_add(
                                            6709 * ***                           rkt->rkt_rk, 1, len, 1,
                                            6710 * ***                           (msgflags & 0x100000) ?
000040A8 18F7                               6711          LR    15,7
000040AA C0FB 0010 0000                     6712          NILF  15,X'00100000'
000040B0 12FF                               6713          LTR   15,15
000040B2 4780 C16E               000040BE   6714          BZ    @L704
                                            6715 * ***                           &rkt->rkt_lock : ((void *)0));
000040B6 41F0 6048               00000048   6716          LA    15,72(0,6)
000040BA 47F0 C172               000040C2   6717          B     @L705
000040BE                                    6718 @L704    DS    0H
000040BE A7F9 0000               00000000   6719          LGHI  15,0        ; 0
000040C2                                    6720 @L705    DS    0H
000040C2 E310 6148 0004          00000148   6721          LG    1,328(0,6)
000040C8 E310 D0B0 0024          000000B0   6722          STG   1,176(0,13)
000040CE E548 D0B8 0001          000000B8   6723          MVGHI 184(13),1
000040D4 E320 D0C0 0024          000000C0   6724          STG   2,192(0,13)
000040DA E548 D0C8 0001          000000C8   6725          MVGHI 200(13),1
000040E0 E3F0 D0D0 0024          000000D0   6726          STG   15,208(0,13)
000040E6 4110 D0B0               000000B0   6727          LA    1,176(0,13)
000040EA E3F0 C120 0004          00004070   6728          LG    15,@lit_1980_178 ; rd_kafka_curr_msgs_add
000040F0                                    6729 @@gen_label264 DS    0H
000040F0 05EF                               6730          BALR  14,15
000040F2                                    6731 @@gen_label265 DS    0H
000040F2 50F0 8000               00000000   6732          ST    15,0(0,8)
000040F6 47F0 C1D8               00004128   6733          B     @L706
                                            6734 * ***           else
000040FA                                    6735 @L703    DS    0H
                                            6736 * ***                   *errp = rd_kafka_curr_msgs_add(rkt->rkt_rk, 1,\
                                            6737 *  len, 0, ((void *)0));
000040FA E3F0 6148 0004          00000148   6738          LG    15,328(0,6)
00004100 E3F0 D0B0 0024          000000B0   6739          STG   15,176(0,13)
00004106 E548 D0B8 0001          000000B8   6740          MVGHI 184(13),1
0000410C E320 D0C0 0024          000000C0   6741          STG   2,192(0,13)
00004112 D70F D0C8 D0C8 000000C8 000000C8   6742          XC    200(16,13),200(13)
                                                                                                                           Page  139 
  Active Usings: @REGION_1980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004118 4110 D0B0               000000B0   6743          LA    1,176(0,13)
0000411C E3F0 C120 0004          00004070   6744          LG    15,@lit_1980_178 ; rd_kafka_curr_msgs_add
00004122                                    6745 @@gen_label266 DS    0H
00004122 05EF                               6746          BALR  14,15
00004124                                    6747 @@gen_label267 DS    0H
00004124 50F0 8000               00000000   6748          ST    15,0(0,8)
00004128                                    6749 @L706    DS    0H
                                            6750 * ***
                                            6751 * ***           if (((*errp))) {
00004128 E3F0 8000 0012          00000000   6752          LT    15,0(0,8)   ; errp
0000412E 4780 C1F8               00004148   6753          BZ    @L707
                                            6754 * ***         if (errnop)
00004132 B902 00F9                          6755          LTGR  15,9
00004136 4780 C1F0               00004140   6756          BZ    @L708
                                            6757 * ***            *errnop = 55;
0000413A E54C 9000 0037          00000000   6758          MVHI  0(9),55     ; errnop
00004140                                    6759 @L708    DS    0H
                                            6760 * ***         return ((void *)0);
00004140 A7F9 0000               00000000   6761          LGHI  15,0        ; 0
00004144 47F0 C2F2               00004242   6762          B     @ret_lab_1980
                                            6763 * ***      }
00004148                                    6764 @L707    DS    0H
                                            6765 * ***
                                            6766 * ***
                                            6767 * ***      rkm = rd_kafka_msg_new00(rkt, force_partition,
                                            6768 * ***                msgflags|0x20000 ,
                                            6769 * ***                payload, len, key, keylen, msg_opaque);
00004148 E360 D0B0 0024          000000B0   6770          STG   6,176(0,13)
0000414E E3F0 B00C 0014          0000000C   6771          LGF   15,12(0,11) ; force_partition
00004154 E3F0 D0B8 0024          000000B8   6772          STG   15,184(0,13)
0000415A A57A 0002               00000002   6773          OILH  7,2
0000415E B914 00F7                          6774          LGFR  15,7
00004162 E3F0 D0C0 0024          000000C0   6775          STG   15,192(0,13)
00004168 E340 D0C8 0024          000000C8   6776          STG   4,200(0,13)
0000416E E320 D0D0 0024          000000D0   6777          STG   2,208(0,13)
00004174 E350 D0D8 0024          000000D8   6778          STG   5,216(0,13)
0000417A E330 D0E0 0024          000000E0   6779          STG   3,224(0,13)
00004180 E3F0 B038 0004          00000038   6780          LG    15,56(0,11) ; msg_opaque
00004186 E3F0 D0E8 0024          000000E8   6781          STG   15,232(0,13)
0000418C 4110 D0B0               000000B0   6782          LA    1,176(0,13)
00004190 E3F0 C128 0004          00004078   6783          LG    15,@lit_1980_181 ; rd_kafka_msg_new00
00004196                                    6784 @@gen_label270 DS    0H
00004196 05EF                               6785          BALR  14,15
00004198                                    6786 @@gen_label271 DS    0H
00004198 B904 002F                          6787          LGR   2,15
                                            6788 * ***
                                            6789 * ***           __memset(&rkm->rkm_u.producer,0,sizeof(rkm->rkm_u.prod\
                                            6790 * ucer));
0000419C 41F0 2078               00000078   6791          LA    15,120(0,2)
                                            6792 * setting 48 bytes to 0x00
000041A0 D72F F000 F000 00000000 00000000   6793          XC    0(48,15),0(15)
                                            6794 * ***
                                                                                                                           Page  140 
  Active Usings: @REGION_1980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6795 * ***           if (timestamp)
000041A6 E3F0 B058 0002          00000058   6796          LTG   15,88(0,11) ; timestamp
000041AC 4780 C26A               000041BA   6797          BZ    @L709
                                            6798 * ***                   rkm->rkm_timestamp  = timestamp;
000041B0 E3F0 2060 0024          00000060   6799          STG   15,96(0,2)  ; offset of rkm_timestamp in rd_kafka_msg_s
000041B6 47F0 C282               000041D2   6800          B     @L710
                                            6801 * ***           else
000041BA                                    6802 @L709    DS    0H
                                            6803 * ***                   rkm->rkm_timestamp = rd_uclock()/1000;
000041BA E3F0 C130 0004          00004080   6804          LG    15,@lit_1980_182 ; rd_uclock
000041C0                                    6805 @@gen_label273 DS    0H
000041C0 05EF                               6806          BALR  14,15
000041C2                                    6807 @@gen_label274 DS    0H
000041C2 B904 005F                          6808          LGR   5,15
000041C6 E340 C138 001D          00004088   6809          DSGF  4,@lit_1980_183
000041CC E350 2060 0024          00000060   6810          STG   5,96(0,2)
000041D2                                    6811 @L710    DS    0H
                                            6812 * ***           rkm->rkm_tstype     = RD_KAFKA_TIMESTAMP_CREATE_TIME;
000041D2 E54C 205C 0001          0000005C   6813          MVHI  92(2),1     ; offset of rkm_tstype in rd_kafka_msg_s
                                            6814 * ***
                                            6815 * ***           if (hdrs) {
000041D8 B902 00FA                          6816          LTGR  15,10
000041DC 4780 C296               000041E6   6817          BZ    @L711
                                            6818 * ***                   do {} while (0);
000041E0                                    6819 @L712    DS    0H
                                            6820 * ***                   rkm->rkm_headers = hdrs;
000041E0 E3A0 2068 0024          00000068   6821          STG   10,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
                                            6822 * ***           }
000041E6                                    6823 @L711    DS    0H
                                            6824 * ***
                                            6825 * ***           rkm->rkm_u.producer.ts_enq = now;
000041E6 E3F0 B060 0004          00000060   6826          LG    15,96(0,11) ; now
000041EC E3F0 2080 0024          00000080   6827          STG   15,128(0,2) ; offset of ts_enq in 0000042
                                            6828 * ***
                                            6829 * ***      if (rkt->rkt_conf.message_timeout_ms == 0) {
000041F2 E55C 63A8 0000          000003A8   6830          CHSI  936(6),0
000041F8 4770 C2BC               0000420C   6831          BNE   @L715
                                            6832 * ***         rkm->rkm_u.producer.ts_timeout = 0x7fffffffffffffffLL;
000041FC E3F0 C140 0004          00004090   6833          LG    15,@lit_1980_185 ; 9223372036854775807
00004202 E3F0 2078 0024          00000078   6834          STG   15,120(0,2) ; offset of rkm_u in rd_kafka_msg_s
                                            6835 * ***      } else {
00004208 47F0 C2D0               00004220   6836          B     @L716
0000420C                                    6837 @L715    DS    0H
                                            6838 * ***         rkm->rkm_u.producer.ts_timeout = now +
                                            6839 * ***            (int64_t) rkt->rkt_conf.message_timeout_ms * 1000;
0000420C E310 63A8 0014          000003A8   6840          LGF   1,936(0,6)
00004212 A71D 03E8               000003E8   6841          MGHI  1,1000
00004216 B908 00F1                          6842          AGR   15,1
0000421A E3F0 2078 0024          00000078   6843          STG   15,120(0,2) ; offset of rkm_u in rd_kafka_msg_s
                                            6844 * ***      }
00004220                                    6845 @L716    DS    0H
                                            6846 * ***
                                                                                                                           Page  141 
  Active Usings: @REGION_1980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6847 * ***
                                            6848 * ***           rd_kafka_interceptors_on_send(rkt->rkt_rk, &rkm->rkm_r\
                                            6849 * kmessage);
00004220 E3F0 6148 0004          00000148   6850          LG    15,328(0,6)
00004226 E3F0 D0B0 0024          000000B0   6851          STG   15,176(0,13)
0000422C E320 D0B8 0024          000000B8   6852          STG   2,184(0,13)
00004232 4110 D0B0               000000B0   6853          LA    1,176(0,13)
00004236 E3F0 C148 0004          00004098   6854          LG    15,@lit_1980_186 ; rd_kafka_interceptors_on_send
0000423C                                    6855 @@gen_label277 DS    0H
0000423C 05EF                               6856          BALR  14,15
0000423E                                    6857 @@gen_label278 DS    0H
                                            6858 * ***
                                            6859 * ***           return rkm;
0000423E B904 00F2                          6860          LGR   15,2
                                            6861 * ***   }
00004242                                    6862 @ret_lab_1980 DS 0H
                                            6863 * * **** Start of Epilogue
                                            6864          DCCEPIL
00004242                                    6865+         ds 0h                                                          01-DCCEP
                                            6866+* Epilog
00004242 D707 D088 D088 00000088 00000088   6867+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004248 E3D0 D080 0004          00000080   6868+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000424E E3C0 D090 0004          00000090   6869+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004254 E3B0 C018 0004          00000018   6870+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000425A E3C0 B010 0021          00000010   6871+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004260 E3E0 D008 0004          00000008   6872+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004266 EB1C D020 0004          00000020   6873+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000426C 078E                               6874+         bcr 8,14                if same dsab, just return              01-DCCEP
0000426E E3F0 D010 0024          00000010   6875+         stg 15,16(0,13)         save return code                       01-DCCEP
00004274 E300 D018 0024          00000018   6876+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000427A E3F0 D090 0004          00000090   6877+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004280 E3F0 F018 0004          00000018   6878+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004286 47F0 F040               00000040   6879+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6880+* End of Epilog
                                            6881 * * **** End of Epilogue
                                            6882          DROP  12
                                            6883 *
                                            6884 *   DSECT for automatic variables in "rd_kafka_msg_new0"
                                            6885 *      (FUNCTION #1980)
                                            6886 *
00000000                00000000 000000B0   6887 @AUTO#rd_kafka_msg_new0 DSECT
00000000                                    6888          DS    XL168
000000A8                                    6889 rd_kafka_msg_new0#hdrs_size#0 DS 8XL1 ; hdrs_size
                                            6890 *
0000428A                00000000 0000E868   6891 @CODE    CSECT
                                            6892 *
                                            6893 *
                                            6894 *
                                            6895 * ....... start of rd_kafka_msg_new
                                            6896 rd_kafka_msg_new ALIAS X'99846D92818692816D94A2876D9585A6'
0000428A                                    6897 @LNAME1340 DS  0H
0000428A 00000010                           6898          DC    X'00000010'
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000428E 99846D9281869281                   6899          DC    C'rd_kafka_msg_new'
0000429E 00                                 6900          DC    X'00'
                                            6901 rd_kafka_msg_new DCCPRLG CINDEX=1340,BASER=12,FRAME=280,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1340
                                            6902          macro
                                            6903          dccextrn &m
                                            6904          gblc    &$dccext(1000)
                                            6905          gbla    &$dccexti
                                            6906          lcla    &i
                                            6907 &$dccext(&$dccexti+1) setc    '&m'
                                            6908 &i       seta    1
                                            6909 .loop    aif    (&i gt &$dccexti).around
                                            6910          aif    ('&$dccext(&i)' eq '&m').getout
                                            6911 &i       seta    &i+1
                                            6912          ago     .loop
                                            6913 .around  anop
                                            6914 &$dccexti seta &$dccexti+1
                                            6915          extrn  &m
                                            6916 .getout  anop
                                            6917          mend
000042A0                                    6918+$eye0162    ds    0d                                                    02-DCCCA
000042A0 C4C3C3                             6919+         dc cl3'DCC'                                                    02-DCCCA
000042A3 01                                 6920+         dc xl1'01' format one                                          02-DCCCA
000042A4 00000000                           6921+         dc a(0)                                                        02-DCCCA
000042A8 0000000000004312                   6922+         dc ad(@PER_1340)                                               02-DCCCA
000042B0 0000000000000118                   6923+         dc ad(280)                                                     02-DCCCA
000042B8 0000000000000000                   6924+         dc ad(0)                                                       02-DCCCA
000042C0 0000000000001000                   6925+         dc ad(4096)                                                    02-DCCCA
000042C8 20                                 6926+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000042C9 03                                 6927+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000042CA 03                                 6928+         dc al1(3)                                                      02-DCCCA
000042CB 08                                 6929+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000042CC 00                                 6930+         dc bl.8'00000000'                                              02-DCCCA
000042CD 000000                             6931+         dc al3(0)                                                      02-DCCCA
000042D0 000000000000428A                   6932+         dc ad(@LNAME1340)                                              02-DCCCA
000042D8                                    6933+         ds 0d                                                          02-DCCCA
000042D8 00000000000042A0                   6934+         dc ad($eye0162)                                                02-DCCCA
000042E0 0000000000000000                   6935+         dc ad(0)                                                       02-DCCCA
000042E8                                    6936+         ds    0d                                                       01-DCCPR
                                            6937+         entry rd_kafka_msg_new                                         01-DCCPR
000042E8                                    6938+rd_kafka_msg_new ds 0d                                                  01-DCCPR
000042E8                                    6939+@REGION_1340_1 ds 0h                                                    01-DCCPR
000042E8 EBEC D008 0024          00000008   6940+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000042EE E3E0 D088 0004          00000088   6941+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000042F4 E3C0 D090 0004          00000090   6942+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000042FA B904 002E                          6943+         lgr   2,14                copy addr of our savearea            01-DCCPR
000042FE E3B0 C018 0004          00000018   6944+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004304 A7EB 0118               00000118   6945+         aghi  14,280              increase by frame size               01-DCCPR
00004308 E3E0 C020 0021          00000020   6946+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000430E 4720 B020               00000020   6947+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004312                                    6948+@PER_1340 ds   0h                                                       01-DCCPR
00004312 EBDE 2080 0024          00000080   6949+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  143 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004318 E3C0 2090 0024          00000090   6950+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000431E B904 00D2                          6951+         lgr   13,2                set real frame pointer               01-DCCPR
00004322 B904 00CF                          6952+         lgr   12,15               set base reg                         01-DCCPR
                        000042E8            6953+         using @REGION_1340_1,12                                        01-DCCPR
00004326 B904 0031                          6954          LGR   3,1         ; ptr to parm area
                                            6955 * ******* End of Prologue
                                            6956 * *
0000432A E320 3000 0004          00000000   6957          LG    2,0(0,3)    ; rkt
                                            6958 * ***      rd_kafka_msg_t *rkm;
                                            6959 * ***      rd_kafka_resp_err_t err;
                                            6960 * ***      int errnox;
                                            6961 * ***
                                            6962 * ***           if ((((err = rd_kafka_check_produce(rkt->rkt_rk, ((voi\
                                            6963 * d *)0))))))
00004330 E3F0 2148 0004          00000148   6964          LG    15,328(0,2)
00004336 E3F0 D0B0 0024          000000B0   6965          STG   15,176(0,13)
0000433C D707 D0B8 D0B8 000000B8 000000B8   6966          XC    184(8,13),184(13)
00004342 4110 D0B0               000000B0   6967          LA    1,176(0,13)
00004346 E3F0 C080 0004          00004368   6968          LG    15,@lit_1340_188 ; rd_kafka_check_produce
0000434C                                    6969 @@gen_label279 DS    0H
0000434C 05EF                               6970          BALR  14,15
0000434E                                    6971 @@gen_label280 DS    0H
0000434E 50F0 D0AC               000000AC   6972          ST    15,172(0,13) ; err
00004352 12FF                               6973          LTR   15,15
00004354 4780 C0B8               000043A0   6974          BZ    @L717
                                            6975 * ***                   return -1;
00004358 A7F9 FFFF               0000FFFF   6976          LGHI  15,-1       ; -1
0000435C 47F0 C280               00004568   6977          B     @ret_lab_1340
00004360                                    6978          DS    0D
00004360 00000118                           6979 @FRAMESIZE_1340 DC F'280'
00004364 00000000
00004368 0000000000003840                   6980 @lit_1340_188 DC AD(rd_kafka_check_produce)
00004370 0000000000000AD0                   6981 @lit_1340_190 DC AD(rd_clock)
00004378 0000000000003F50                   6982 @lit_1340_191 DC AD(rd_kafka_msg_new0)
00004380 0000000000002F10                   6983 @lit_1340_192 DC AD(rd_kafka_set_last_error)
00004388 0000000000007430                   6984 @lit_1340_194 DC AD(rd_kafka_msg_partitioner)
00004390 0000000000000000                   6985 @lit_1340_197 DC AD(rd_kafka_interceptors_on_acknowledgement)
00004398 0000000000003AE0                   6986 @lit_1340_198 DC AD(rd_kafka_msg_destroy)
000043A0                                    6987 @L717    DS    0H
                                            6988 * ***
                                            6989 * ***
                                            6990 * ***           rkm = rd_kafka_msg_new0(rkt, force_partition, msgflags\
                                            6991 * ,
                                            6992 * ***                                   payload, len, key, keylen, msg\
                                            6993 * _opaque,
                                            6994 * ***                                   &err, &errnox, ((void *)0), 0,\
                                            6995 *  rd_clock());
000043A0 E3F0 C088 0004          00004370   6996          LG    15,@lit_1340_190 ; rd_clock
000043A6                                    6997 @@gen_label282 DS    0H
000043A6 05EF                               6998          BALR  14,15
000043A8                                    6999 @@gen_label283 DS    0H
000043A8 E320 D0B0 0024          000000B0   7000          STG   2,176(0,13)
                                                                                                                           Page  144 
  Active Usings: @REGION_1340_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000043AE E310 300C 0014          0000000C   7001          LGF   1,12(0,3)   ; force_partition
000043B4 E310 D0B8 0024          000000B8   7002          STG   1,184(0,13)
000043BA E310 3014 0014          00000014   7003          LGF   1,20(0,3)   ; msgflags
000043C0 E310 D0C0 0024          000000C0   7004          STG   1,192(0,13)
000043C6 E310 3018 0004          00000018   7005          LG    1,24(0,3)   ; payload
000043CC E310 D0C8 0024          000000C8   7006          STG   1,200(0,13)
000043D2 E310 3020 0004          00000020   7007          LG    1,32(0,3)   ; len
000043D8 E310 D0D0 0024          000000D0   7008          STG   1,208(0,13)
000043DE E310 3028 0004          00000028   7009          LG    1,40(0,3)   ; key
000043E4 E310 D0D8 0024          000000D8   7010          STG   1,216(0,13)
000043EA E310 3030 0004          00000030   7011          LG    1,48(0,3)   ; keylen
000043F0 E310 D0E0 0024          000000E0   7012          STG   1,224(0,13)
000043F6 E310 3038 0004          00000038   7013          LG    1,56(0,3)   ; msg_opaque
000043FC E310 D0E8 0024          000000E8   7014          STG   1,232(0,13)
00004402 4110 D0AC               000000AC   7015          LA    1,172(0,13)
00004406 E310 D0F0 0024          000000F0   7016          STG   1,240(0,13)
0000440C 4110 D0A8               000000A8   7017          LA    1,168(0,13)
00004410 E310 D0F8 0024          000000F8   7018          STG   1,248(0,13)
00004416 D70F D100 D100 00000100 00000100   7019          XC    256(16,13),256(13)
0000441C E3F0 D110 0024          00000110   7020          STG   15,272(0,13)
00004422 4110 D0B0               000000B0   7021          LA    1,176(0,13)
00004426 E3F0 C090 0004          00004378   7022          LG    15,@lit_1340_191 ; rd_kafka_msg_new0
0000442C                                    7023 @@gen_label284 DS    0H
0000442C 05EF                               7024          BALR  14,15
0000442E                                    7025 @@gen_label285 DS    0H
0000442E B904 003F                          7026          LGR   3,15
                                            7027 * ***           if (((!rkm))) {
00004432 B902 00F3                          7028          LTGR  15,3
00004436 4770 C17E               00004466   7029          BNZ   @L718
                                            7030 * ***
                                            7031 * ***         rd_kafka_set_last_error(err, errnox);
0000443A E3F0 D0AC 0014          000000AC   7032          LGF   15,172(0,13) ; err
00004440 E3F0 D0B0 0024          000000B0   7033          STG   15,176(0,13)
00004446 E3F0 D0A8 0014          000000A8   7034          LGF   15,168(0,13) ; errnox
0000444C E3F0 D0B8 0024          000000B8   7035          STG   15,184(0,13)
00004452 4110 D0B0               000000B0   7036          LA    1,176(0,13)
00004456 E3F0 C098 0004          00004380   7037          LG    15,@lit_1340_192 ; rd_kafka_set_last_error
0000445C                                    7038 @@gen_label287 DS    0H
0000445C 05EF                               7039          BALR  14,15
0000445E                                    7040 @@gen_label288 DS    0H
                                            7041 * ***                   return -1;
0000445E A7F9 FFFF               0000FFFF   7042          LGHI  15,-1       ; -1
00004462 47F0 C280               00004568   7043          B     @ret_lab_1340
                                            7044 * ***           }
00004466                                    7045 @L718    DS    0H
                                            7046 * ***
                                            7047 * ***
                                            7048 * ***
                                            7049 * ***      err = rd_kafka_msg_partitioner(rkt, rkm, 1);
00004466 EB23 D0B0 0024          000000B0   7050          STMG  2,3,176(13)
0000446C E548 D0C0 0001          000000C0   7051          MVGHI 192(13),1
00004472 4110 D0B0               000000B0   7052          LA    1,176(0,13)
                                                                                                                           Page  145 
  Active Usings: @REGION_1340_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004476 E3F0 C0A0 0004          00004388   7053          LG    15,@lit_1340_194 ; rd_kafka_msg_partitioner
0000447C                                    7054 @@gen_label289 DS    0H
0000447C 05EF                               7055          BALR  14,15
0000447E                                    7056 @@gen_label290 DS    0H
0000447E 50F0 D0AC               000000AC   7057          ST    15,172(0,13) ; err
                                            7058 * ***      if (((!err))) {
00004482 12FF                               7059          LTR   15,15
00004484 4770 C1BA               000044A2   7060          BNZ   @L719
                                            7061 * ***         rd_kafka_set_last_error(0, 0);
00004488 D70F D0B0 D0B0 000000B0 000000B0   7062          XC    176(16,13),176(13)
0000448E 4110 D0B0               000000B0   7063          LA    1,176(0,13)
00004492 E3F0 C098 0004          00004380   7064          LG    15,@lit_1340_192 ; rd_kafka_set_last_error
00004498                                    7065 @@gen_label292 DS    0H
00004498 05EF                               7066          BALR  14,15
0000449A                                    7067 @@gen_label293 DS    0H
                                            7068 * ***         return 0;
0000449A A7F9 0000               00000000   7069          LGHI  15,0        ; 0
0000449E 47F0 C280               00004568   7070          B     @ret_lab_1340
                                            7071 * ***      }
000044A2                                    7072 @L719    DS    0H
                                            7073 * ***
                                            7074 * ***
                                            7075 * ***           rkm->rkm_rkmessage.err = err;
000044A2 50F0 3000               00000000   7076          ST    15,0(0,3)   ; rkm
                                            7077 * ***           rd_kafka_interceptors_on_acknowledgement(rkt->rkt_rk,
                                            7078 * ***                                                    &rkm->rkm_rkm\
                                            7079 * essage);
000044A6 E3F0 2148 0004          00000148   7080          LG    15,328(0,2)
000044AC E3F0 D0B0 0024          000000B0   7081          STG   15,176(0,13)
000044B2 E330 D0B8 0024          000000B8   7082          STG   3,184(0,13)
000044B8 4110 D0B0               000000B0   7083          LA    1,176(0,13)
000044BC E3F0 C0A8 0004          00004390   7084          LG    15,@lit_1340_197 ; rd_kafka_interceptors_on_acknowledgem*
                                                                ent
000044C2                                    7085 @@gen_label294 DS    0H
000044C2 05EF                               7086          BALR  14,15
000044C4                                    7087 @@gen_label295 DS    0H
                                            7088 * ***
                                            7089 * ***
                                            7090 * ***
                                            7091 * ***
                                            7092 * ***
                                            7093 * ***
                                            7094 * ***
                                            7095 * ***      rkm->rkm_flags &= ~0x1;
000044C4 58F0 3058               00000058   7096          L     15,88(0,3)
000044C8 A5F7 FFFE               0000FFFE   7097          NILL  15,65534
000044CC 50F0 3058               00000058   7098          ST    15,88(0,3)
                                            7099 * ***      rd_kafka_msg_destroy(rkt->rkt_rk, rkm);
000044D0 E3F0 2148 0004          00000148   7100          LG    15,328(0,2)
000044D6 E3F0 D0B0 0024          000000B0   7101          STG   15,176(0,13)
000044DC E330 D0B8 0024          000000B8   7102          STG   3,184(0,13)
000044E2 4110 D0B0               000000B0   7103          LA    1,176(0,13)
                                                                                                                           Page  146 
  Active Usings: @REGION_1340_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000044E6 E3F0 C0B0 0004          00004398   7104          LG    15,@lit_1340_198 ; rd_kafka_msg_destroy
000044EC                                    7105 @@gen_label296 DS    0H
000044EC 05EF                               7106          BALR  14,15
000044EE                                    7107 @@gen_label297 DS    0H
                                            7108 * ***
                                            7109 * ***
                                            7110 * ***      if (err == RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION)
000044EE E55C D0AC FF42          000000AC   7111          CHSI  172(13),-190
000044F4 4770 C232               0000451A   7112          BNE   @L720
                                            7113 * ***         rd_kafka_set_last_error(err, 3);
000044F8 E3F0 D0AC 0014          000000AC   7114          LGF   15,172(0,13) ; err
000044FE E3F0 D0B0 0024          000000B0   7115          STG   15,176(0,13)
00004504 E548 D0B8 0003          000000B8   7116          MVGHI 184(13),3
0000450A 4110 D0B0               000000B0   7117          LA    1,176(0,13)
0000450E E3F0 C098 0004          00004380   7118          LG    15,@lit_1340_192 ; rd_kafka_set_last_error
00004514                                    7119 @@gen_label299 DS    0H
00004514 05EF                               7120          BALR  14,15
00004516                                    7121 @@gen_label300 DS    0H
00004516 47F0 C27C               00004564   7122          B     @L721
                                            7123 * ***      else if (err == RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC)
0000451A                                    7124 @L720    DS    0H
0000451A E55C D0AC FF44          000000AC   7125          CHSI  172(13),-188
00004520 4770 C25E               00004546   7126          BNE   @L722
                                            7127 * ***         rd_kafka_set_last_error(err, 2);
00004524 E3F0 D0AC 0014          000000AC   7128          LGF   15,172(0,13) ; err
0000452A E3F0 D0B0 0024          000000B0   7129          STG   15,176(0,13)
00004530 E548 D0B8 0002          000000B8   7130          MVGHI 184(13),2
00004536 4110 D0B0               000000B0   7131          LA    1,176(0,13)
0000453A E3F0 C098 0004          00004380   7132          LG    15,@lit_1340_192 ; rd_kafka_set_last_error
00004540                                    7133 @@gen_label302 DS    0H
00004540 05EF                               7134          BALR  14,15
00004542                                    7135 @@gen_label303 DS    0H
00004542 47F0 C27C               00004564   7136          B     @L721
                                            7137 * ***      else
00004546                                    7138 @L722    DS    0H
                                            7139 * ***         rd_kafka_set_last_error(err, 22);
00004546 E3F0 D0AC 0014          000000AC   7140          LGF   15,172(0,13) ; err
0000454C E3F0 D0B0 0024          000000B0   7141          STG   15,176(0,13)
00004552 E548 D0B8 0016          000000B8   7142          MVGHI 184(13),22
00004558 4110 D0B0               000000B0   7143          LA    1,176(0,13)
0000455C E3F0 C098 0004          00004380   7144          LG    15,@lit_1340_192 ; rd_kafka_set_last_error
00004562                                    7145 @@gen_label304 DS    0H
00004562 05EF                               7146          BALR  14,15
00004564                                    7147 @@gen_label305 DS    0H
00004564                                    7148 @L723    DS    0H
                                            7149 * ***
                                            7150 * ***      return -1;
00004564                                    7151 @L721    DS    0H
00004564 A7F9 FFFF               0000FFFF   7152          LGHI  15,-1       ; -1
                                            7153 * ***   }
00004568                                    7154 @ret_lab_1340 DS 0H
                                            7155 * * **** Start of Epilogue
                                                                                                                           Page  147 
  Active Usings: @REGION_1340_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7156          DCCEPIL
00004568                                    7157+         ds 0h                                                          01-DCCEP
                                            7158+* Epilog
00004568 D707 D088 D088 00000088 00000088   7159+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000456E E3D0 D080 0004          00000080   7160+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004574 E3C0 D090 0004          00000090   7161+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000457A E3B0 C018 0004          00000018   7162+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004580 E3C0 B010 0021          00000010   7163+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004586 E3E0 D008 0004          00000008   7164+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000458C EB1C D020 0004          00000020   7165+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004592 078E                               7166+         bcr 8,14                if same dsab, just return              01-DCCEP
00004594 E3F0 D010 0024          00000010   7167+         stg 15,16(0,13)         save return code                       01-DCCEP
0000459A E300 D018 0024          00000018   7168+         stg 0,24(0,13)          save more return code                  01-DCCEP
000045A0 E3F0 D090 0004          00000090   7169+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000045A6 E3F0 F018 0004          00000018   7170+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000045AC 47F0 F040               00000040   7171+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7172+* End of Epilog
                                            7173 * * **** End of Epilogue
                                            7174          DROP  12
                                            7175 *
                                            7176 *   DSECT for automatic variables in "rd_kafka_msg_new"
                                            7177 *      (FUNCTION #1340)
                                            7178 *
00000000                00000000 000000B0   7179 @AUTO#rd_kafka_msg_new DSECT
00000000                                    7180          DS    XL168
000000A8                                    7181 rd_kafka_msg_new#errnox#0 DS 1F ; errnox
000000AC                                    7182 rd_kafka_msg_new#err#0 DS 1F ; err
                                            7183 *
000045B0                00000000 0000E868   7184 @CODE    CSECT
                                            7185 *
                                            7186 *
                                            7187 *
                                            7188 * ....... start of rd_kafka_produceva
                                            7189 rd_kafka_produceva ALIAS X'99846D92818692816D97999684A48385A581'
000045B0                                    7190 @LNAME951 DS   0H
000045B0 00000012                           7191          DC    X'00000012'
000045B4 99846D9281869281                   7192          DC    C'rd_kafka_produceva'
000045C6 00                                 7193          DC    X'00'
                                            7194 rd_kafka_produceva DCCPRLG CINDEX=951,BASER=12,FRAME=456,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME951
                                            7195          macro
                                            7196          dccextrn &m
                                            7197          gblc    &$dccext(1000)
                                            7198          gbla    &$dccexti
                                            7199          lcla    &i
                                            7200 &$dccext(&$dccexti+1) setc    '&m'
                                            7201 &i       seta    1
                                            7202 .loop    aif    (&i gt &$dccexti).around
                                            7203          aif    ('&$dccext(&i)' eq '&m').getout
                                            7204 &i       seta    &i+1
                                            7205          ago     .loop
                                            7206 .around  anop
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7207 &$dccexti seta &$dccexti+1
                                            7208          extrn  &m
                                            7209 .getout  anop
                                            7210          mend
000045C8                                    7211+$eye0165    ds    0d                                                    02-DCCCA
000045C8 C4C3C3                             7212+         dc cl3'DCC'                                                    02-DCCCA
000045CB 01                                 7213+         dc xl1'01' format one                                          02-DCCCA
000045CC 00000000                           7214+         dc a(0)                                                        02-DCCCA
000045D0 000000000000463A                   7215+         dc ad(@PER_951)                                                02-DCCCA
000045D8 00000000000001C8                   7216+         dc ad(456)                                                     02-DCCCA
000045E0 0000000000000000                   7217+         dc ad(0)                                                       02-DCCCA
000045E8 0000000000001000                   7218+         dc ad(4096)                                                    02-DCCCA
000045F0 20                                 7219+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000045F1 03                                 7220+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000045F2 03                                 7221+         dc al1(3)                                                      02-DCCCA
000045F3 08                                 7222+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000045F4 00                                 7223+         dc bl.8'00000000'                                              02-DCCCA
000045F5 000000                             7224+         dc al3(0)                                                      02-DCCCA
000045F8 00000000000045B0                   7225+         dc ad(@LNAME951)                                               02-DCCCA
00004600                                    7226+         ds 0d                                                          02-DCCCA
00004600 00000000000045C8                   7227+         dc ad($eye0165)                                                02-DCCCA
00004608 0000000000000000                   7228+         dc ad(0)                                                       02-DCCCA
00004610                                    7229+         ds    0d                                                       01-DCCPR
                                            7230+         entry rd_kafka_produceva                                       01-DCCPR
00004610                                    7231+rd_kafka_produceva ds 0d                                                01-DCCPR
00004610                                    7232+@REGION_951_1 ds 0h                                                     01-DCCPR
00004610 EBEC D008 0024          00000008   7233+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004616 E3E0 D088 0004          00000088   7234+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000461C E3C0 D090 0004          00000090   7235+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004622 B904 002E                          7236+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004626 E3B0 C018 0004          00000018   7237+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000462C A7EB 01C8               000001C8   7238+         aghi  14,456              increase by frame size               01-DCCPR
00004630 E3E0 C020 0021          00000020   7239+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004636 4720 B020               00000020   7240+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000463A                                    7241+@PER_951 ds    0h                                                       01-DCCPR
0000463A EBDE 2080 0024          00000080   7242+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004640 E3C0 2090 0024          00000090   7243+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004646 B904 00D2                          7244+         lgr   13,2                set real frame pointer               01-DCCPR
0000464A B904 00CF                          7245+         lgr   12,15               set base reg                         01-DCCPR
                        00004610            7246+         using @REGION_951_1,12                                         01-DCCPR
0000464E B904 0091                          7247          LGR   9,1         ; ptr to parm area
                                            7248 * ******* End of Prologue
                                            7249 * *
00004652 E370 9000 0004          00000000   7250          LG    7,0(0,9)    ; rk
                                            7251 * ***           rd_kafka_msg_t s_rkm = {
                                            7252 * ***
                                            7253 * ***                   . rkm_rkmessage.partition = ((int32_t)-1),
00004658 E54C D0B8 FFFF          000000B8   7254          MVHI  184(13),-1
                                            7255 * ***                   .rkm_timestamp = 0,
                                            7256 * ***           };
                                            7257 * setting 16 bytes to 0x00
0000465E D70F D0A8 D0A8 000000A8 000000A8   7258          XC    168(16,13),168(13)
                                                                                                                           Page  149 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7259 * setting 148 bytes to 0x00
00004664 D793 D0BC D0BC 000000BC 000000BC   7260          XC    188(148,13),188(13)
                                            7261 * ***           rd_kafka_msg_t *rkm = &s_rkm;
0000466A 4120 D0A8               000000A8   7262          LA    2,168(0,13)
                                            7263 * ***           rd_kafka_topic_t *rkt = ((void *)0);
0000466E A739 0000               00000000   7264          LGHI  3,0         ; 0
                                            7265 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
00004672 E54C D150 0000          00000150   7266          MVHI  336(13),0   ; err
                                            7267 * ***           rd_kafka_error_t *error = ((void *)0);
00004678 E330 D158 0024          00000158   7268          STG   3,344(0,13) ; error
                                            7269 * ***           rd_kafka_headers_t *hdrs = ((void *)0);
0000467E B904 0043                          7270          LGR   4,3         ; hdrs
                                            7271 * ***           rd_kafka_headers_t *app_hdrs = ((void *)0);
00004682 B904 0053                          7272          LGR   5,3         ; app_hdrs
                                            7273 * ***           size_t i;
                                            7274 * ***
                                            7275 * ***           if (((rd_kafka_check_produce(rk, &error))))
00004686 E370 D160 0024          00000160   7276          STG   7,352(0,13)
0000468C 41F0 D158               00000158   7277          LA    15,344(0,13)
00004690 E3F0 D168 0024          00000168   7278          STG   15,360(0,13)
00004696 4110 D160               00000160   7279          LA    1,352(0,13)
0000469A E3F0 C0B0 0004          000046C0   7280          LG    15,@lit_951_208 ; rd_kafka_check_produce
000046A0                                    7281 @@gen_label306 DS    0H
000046A0 05EF                               7282          BALR  14,15
000046A2                                    7283 @@gen_label307 DS    0H
000046A2 12FF                               7284          LTR   15,15
000046A4 4780 C144               00004754   7285          BZ    @L724
                                            7286 * ***                   return error;
000046A8 E3F0 D158 0004          00000158   7287          LG    15,344(0,13) ; error
000046AE 47F0 C718               00004D28   7288          B     @ret_lab_951
000046B8                                    7289          DS    0D
000046B8 000001C8                           7290 @FRAMESIZE_951 DC F'456'
000046BC 00000000
000046C0 0000000000003840                   7291 @lit_951_208 DC AD(rd_kafka_check_produce)
000046C8 0000000000000000                   7292 @lit_951_210 DC AD(rd_kafka_topic_new0)
000046D0 0000000000000000                   7293 @lit_951_211 DC AD(rd_kafka_topic_proper)
000046D8 0000000000002488                   7294 @lit_951_212 DC AD(rd_kafka_topic_keep)
000046E0 0000000000000000                   7295 @lit_951_214 DC AD(rd_kafka_error_new)
000046E8 000000000000ECA4                   7296 @lit_951_213 DC AD(@strings@)
000046F0 0000000000000000                   7297 @lit_951_215 DC AD(rd_kafka_headers_new)
000046F8 0000000000000000                   7298 @lit_951_216 DC AD(rd_kafka_header_add)
00004700 0000000000000000                   7299 @lit_951_217 DC AD(rd_kafka_err2str)
00004708 0000000000000000                   7300 @lit_951_227 DC AD(__assert)
00004710 000000000000E868                   7301 @lit_951_225 DC AD(@DATA)
00004718 0000000000000AD0                   7302 @lit_951_230 DC AD(rd_clock)
00004720 0000000000003F50                   7303 @lit_951_231 DC AD(rd_kafka_msg_new0)
00004728 0000000000007430                   7304 @lit_951_235 DC AD(rd_kafka_msg_partitioner)
00004730 0000000000000000                   7305 @lit_951_236 DC AD(rd_kafka_interceptors_on_acknowledgement)
00004738 0000000000003AE0                   7306 @lit_951_238 DC AD(rd_kafka_msg_destroy)
00004740 00000000000025F0                   7307 @lit_951_242 DC AD(rd_kafka_topic_destroy0)
00004748 0000000000000000                   7308 @lit_951_245 DC AD(rd_kafka_headers_destroy)
00004750 0000071E                           7309 @lit_region_diff_951_1_2  DC A(@REGION_951_2-@REGION_951_1)
                                                                                                                           Page  150 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004754                                    7310 @L724    DS    0H
                                            7311 * ***
                                            7312 * ***           for (i = 0 ; i < cnt ; i++) {
00004754 B904 0063                          7313          LGR   6,3         ; i
00004758 47F0 C41C               00004A2C   7314          B     @L726
0000475C                                    7315 @L725    DS    0H
                                            7316 * ***                   const rd_kafka_vu_t *vu = &vus[i];
0000475C E3F0 9008 0004          00000008   7317          LG    15,8(0,9)   ; vus
00004762 EB16 0003 000D          00000003   7318          SLLG  1,6,3(0)    ;   .
00004768 B90A 0016                          7319          ALGR  1,6         ;   .
0000476C EB11 0003 000D          00000003   7320          SLLG  1,1,3(0)    ;   .
00004772 4181 F000               00000000   7321          LA    8,0(1,15)
                                            7322 * ***                   switch (vu->vtype)
00004776 47F0 C39A               000049AA   7323          B     @L729
                                            7324 * ***                   {
                                            7325 * ***                   case RD_KAFKA_VTYPE_TOPIC:
0000477A                                    7326 @L731    DS    0H
                                            7327 * ***                           rkt = rd_kafka_topic_new0(rk,
                                            7328 * ***                                                     vu->u.cstr,
                                            7329 * ***                                                     ((void *)0),\
                                            7330 *  ((void *)0), 1);
0000477A E370 D160 0024          00000160   7331          STG   7,352(0,13)
00004780 E3F0 8008 0004          00000008   7332          LG    15,8(0,8)
00004786 E3F0 D168 0024          00000168   7333          STG   15,360(0,13)
0000478C D70F D170 D170 00000170 00000170   7334          XC    368(16,13),368(13)
00004792 E548 D180 0001          00000180   7335          MVGHI 384(13),1
00004798 4110 D160               00000160   7336          LA    1,352(0,13)
0000479C E3F0 C0B8 0004          000046C8   7337          LG    15,@lit_951_210 ; rd_kafka_topic_new0
000047A2                                    7338 @@gen_label309 DS    0H
000047A2 05EF                               7339          BALR  14,15
000047A4                                    7340 @@gen_label310 DS    0H
000047A4 B904 003F                          7341          LGR   3,15        ; rkt
                                            7342 * ***                           break;
000047A8 47F0 C418               00004A28   7343          B     @L730
                                            7344 * ***
                                            7345 * ***                   case RD_KAFKA_VTYPE_RKT:
000047AC                                    7346 @L732    DS    0H
                                            7347 * ***                           rkt = rd_kafka_topic_proper(vu->u.rkt)\
                                            7348 * ;
000047AC E3F0 8008 0004          00000008   7349          LG    15,8(0,8)
000047B2 E3F0 D160 0024          00000160   7350          STG   15,352(0,13)
000047B8 4110 D160               00000160   7351          LA    1,352(0,13)
000047BC E3F0 C0C0 0004          000046D0   7352          LG    15,@lit_951_211 ; rd_kafka_topic_proper
000047C2                                    7353 @@gen_label311 DS    0H
000047C2 05EF                               7354          BALR  14,15
000047C4                                    7355 @@gen_label312 DS    0H
000047C4 B904 003F                          7356          LGR   3,15        ; rkt
                                            7357 * ***                           rd_kafka_topic_keep(rkt);
000047C8 E3F0 D160 0024          00000160   7358          STG   15,352(0,13)
000047CE 4110 D160               00000160   7359          LA    1,352(0,13)
000047D2 E3F0 C0C8 0004          000046D8   7360          LG    15,@lit_951_212 ; rd_kafka_topic_keep
000047D8                                    7361 @@gen_label313 DS    0H
                                                                                                                           Page  151 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000047D8 05EF                               7362          BALR  14,15
000047DA                                    7363 @@gen_label314 DS    0H
                                            7364 * ***                           break;
000047DA 47F0 C418               00004A28   7365          B     @L730
                                            7366 * ***
                                            7367 * ***                   case RD_KAFKA_VTYPE_PARTITION:
000047DE                                    7368 @L733    DS    0H
                                            7369 * ***                           rkm->rkm_rkmessage.partition = vu->u.i\
                                            7370 * 32;
000047DE 58F0 8008               00000008   7371          L     15,8(0,8)   ; offset of u in rd_kafka_vu_s
000047E2 50F0 2010               00000010   7372          ST    15,16(0,2)  ; offset of partition in rd_kafka_message_s
                                            7373 * ***                           break;
000047E6 47F0 C418               00004A28   7374          B     @L730
                                            7375 * ***
                                            7376 * ***                   case RD_KAFKA_VTYPE_VALUE:
000047EA                                    7377 @L734    DS    0H
                                            7378 * ***                           rkm->rkm_rkmessage.payload = vu->u.mem\
                                            7379 * .ptr;
000047EA E3F0 8008 0004          00000008   7380          LG    15,8(0,8)   ; offset of u in rd_kafka_vu_s
000047F0 E3F0 2018 0024          00000018   7381          STG   15,24(0,2)  ; offset of payload in rd_kafka_message_s
                                            7382 * ***                           rkm->rkm_rkmessage.len = vu->u.mem.siz\
                                            7383 * e;
000047F6 E3F0 8010 0004          00000010   7384          LG    15,16(0,8)  ; offset of size in 0000029
000047FC E3F0 2020 0024          00000020   7385          STG   15,32(0,2)  ; offset of len in rd_kafka_message_s
                                            7386 * ***                           break;
00004802 47F0 C418               00004A28   7387          B     @L730
                                            7388 * ***
                                            7389 * ***                   case RD_KAFKA_VTYPE_KEY:
00004806                                    7390 @L735    DS    0H
                                            7391 * ***                           rkm->rkm_rkmessage.key = vu->u.mem.ptr\
                                            7392 * ;
00004806 E3F0 8008 0004          00000008   7393          LG    15,8(0,8)   ; offset of u in rd_kafka_vu_s
0000480C E3F0 2028 0024          00000028   7394          STG   15,40(0,2)  ; offset of key in rd_kafka_message_s
                                            7395 * ***                           rkm->rkm_rkmessage.key_len = vu->u.mem\
                                            7396 * .size;
00004812 E3F0 8010 0004          00000010   7397          LG    15,16(0,8)  ; offset of size in 0000029
00004818 E3F0 2030 0024          00000030   7398          STG   15,48(0,2)  ; offset of key_len in rd_kafka_message_s
                                            7399 * ***                           break;
0000481E 47F0 C418               00004A28   7400          B     @L730
                                            7401 * ***
                                            7402 * ***                   case RD_KAFKA_VTYPE_OPAQUE:
00004822                                    7403 @L736    DS    0H
                                            7404 * ***                           rkm->rkm_rkmessage._private = vu->u.pt\
                                            7405 * r;
00004822 E3F0 8008 0004          00000008   7406          LG    15,8(0,8)   ; offset of u in rd_kafka_vu_s
00004828 E3F0 2040 0024          00000040   7407          STG   15,64(0,2)  ; offset of _private in rd_kafka_message_s
                                            7408 * ***                           break;
0000482E 47F0 C418               00004A28   7409          B     @L730
                                            7410 * ***
                                            7411 * ***                   case RD_KAFKA_VTYPE_MSGFLAGS:
00004832                                    7412 @L737    DS    0H
                                            7413 * ***                           rkm->rkm_flags = vu->u.i;
                                                                                                                           Page  152 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004832 58F0 8008               00000008   7414          L     15,8(0,8)   ; offset of u in rd_kafka_vu_s
00004836 50F0 2058               00000058   7415          ST    15,88(0,2)  ; offset of rkm_flags in rd_kafka_msg_s
                                            7416 * ***                           break;
0000483A 47F0 C418               00004A28   7417          B     @L730
                                            7418 * ***
                                            7419 * ***                   case RD_KAFKA_VTYPE_TIMESTAMP:
0000483E                                    7420 @L738    DS    0H
                                            7421 * ***                           rkm->rkm_timestamp = vu->u.i64;
0000483E E3F0 8008 0004          00000008   7422          LG    15,8(0,8)   ; offset of u in rd_kafka_vu_s
00004844 E3F0 2060 0024          00000060   7423          STG   15,96(0,2)  ; offset of rkm_timestamp in rd_kafka_msg_s
                                            7424 * ***                           break;
0000484A 47F0 C418               00004A28   7425          B     @L730
                                            7426 * ***
                                            7427 * ***                   case RD_KAFKA_VTYPE_HEADER:
0000484E                                    7428 @L739    DS    0H
                                            7429 * ***                           if (((app_hdrs != ((void *)0)))) {
0000484E B902 00F5                          7430          LTGR  15,5
00004852 4780 C272               00004882   7431          BE    @L740
                                            7432 * ***                                   error = rd_kafka_error_new(
                                            7433 * ***                                           RD_KAFKA_RESP_ERR__CON\
                                            7434 * FLICT,
                                            7435 * ***                                           "VTYPE_HEADER and VTYP\
                                            7436 * E_HEADERS "
00004856 E548 D160 FF53          00000160   7437          MVGHI 352(13),-173
                                            7438 * ***                                           "are mutually exclusiv\
                                            7439 * e");
0000485C E3F0 C0D8 0004          000046E8   7440          LG    15,@lit_951_213
00004862 41F0 F226               00000226   7441          LA    15,550(0,15)
00004866 E3F0 D168 0024          00000168   7442          STG   15,360(0,13)
0000486C 4110 D160               00000160   7443          LA    1,352(0,13)
00004870 E3F0 C0D0 0004          000046E0   7444          LG    15,@lit_951_214 ; rd_kafka_error_new
00004876                                    7445 @@gen_label316 DS    0H
00004876 05EF                               7446          BALR  14,15
00004878                                    7447 @@gen_label317 DS    0H
00004878 E3F0 D158 0024          00000158   7448          STG   15,344(0,13) ; error
                                            7449 * ***                                   goto err;
0000487E 47F0 C698               00004CA8   7450          B     @_err@951@0
                                            7451 * ***                           }
00004882                                    7452 @L740    DS    0H
                                            7453 * ***
                                            7454 * ***                           if (((!hdrs)))
00004882 B902 00F4                          7455          LTGR  15,4
00004886 4770 C290               000048A0   7456          BNZ   @L741
                                            7457 * ***                                   hdrs = rd_kafka_headers_new(8)\
                                            7458 * ;
0000488A E548 D160 0008          00000160   7459          MVGHI 352(13),8
00004890 4110 D160               00000160   7460          LA    1,352(0,13)
00004894 E3F0 C0E0 0004          000046F0   7461          LG    15,@lit_951_215 ; rd_kafka_headers_new
0000489A                                    7462 @@gen_label319 DS    0H
0000489A 05EF                               7463          BALR  14,15
0000489C                                    7464 @@gen_label320 DS    0H
0000489C B904 004F                          7465          LGR   4,15        ; hdrs
                                                                                                                           Page  153 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000048A0                                    7466 @L741    DS    0H
                                            7467 * ***
                                            7468 * ***                           err = rd_kafka_header_add(hdrs,
                                            7469 * ***                                                     vu->u.header\
                                            7470 * .name, -1,
                                            7471 * ***                                                     vu->u.header\
                                            7472 * .val,
                                            7473 * ***                                                     vu->u.header\
                                            7474 * .size);
000048A0 E340 D160 0024          00000160   7475          STG   4,352(0,13)
000048A6 E3F0 8008 0004          00000008   7476          LG    15,8(0,8)
000048AC E3F0 D168 0024          00000168   7477          STG   15,360(0,13)
000048B2 E548 D170 FFFF          00000170   7478          MVGHI 368(13),-1
000048B8 E3F0 8010 0004          00000010   7479          LG    15,16(0,8)
000048BE E3F0 D178 0024          00000178   7480          STG   15,376(0,13)
000048C4 E3F0 8018 0004          00000018   7481          LG    15,24(0,8)
000048CA E3F0 D180 0024          00000180   7482          STG   15,384(0,13)
000048D0 4110 D160               00000160   7483          LA    1,352(0,13)
000048D4 E3F0 C0E8 0004          000046F8   7484          LG    15,@lit_951_216 ; rd_kafka_header_add
000048DA                                    7485 @@gen_label321 DS    0H
000048DA 05EF                               7486          BALR  14,15
000048DC                                    7487 @@gen_label322 DS    0H
000048DC 50F0 D150               00000150   7488          ST    15,336(0,13) ; err
                                            7489 * ***                           if (((err))) {
000048E0 12FF                               7490          LTR   15,15
000048E2 4780 C418               00004A28   7491          BZ    @L730
                                            7492 * ***                                   error = rd_kafka_error_new(
                                            7493 * ***                                           err,
                                            7494 * ***                                           "Failed to add header:\
                                            7495 *  %s",
                                            7496 * ***                                           rd_kafka_err2str(err))\
                                            7497 * ;
000048E6 B914 00FF                          7498          LGFR  15,15
000048EA E3F0 D160 0024          00000160   7499          STG   15,352(0,13)
000048F0 4110 D160               00000160   7500          LA    1,352(0,13)
000048F4 E3F0 C0F0 0004          00004700   7501          LG    15,@lit_951_217 ; rd_kafka_err2str
000048FA                                    7502 @@gen_label324 DS    0H
000048FA 05EF                               7503          BALR  14,15
000048FC                                    7504 @@gen_label325 DS    0H
000048FC E310 D150 0014          00000150   7505          LGF   1,336(0,13) ; err
00004902 E310 D160 0024          00000160   7506          STG   1,352(0,13)
00004908 E310 C0D8 0004          000046E8   7507          LG    1,@lit_951_213
0000490E 4110 125C               0000025C   7508          LA    1,604(0,1)
00004912 E310 D168 0024          00000168   7509          STG   1,360(0,13)
00004918 E3F0 D170 0024          00000170   7510          STG   15,368(0,13)
0000491E 4110 D160               00000160   7511          LA    1,352(0,13)
00004922 E3F0 C0D0 0004          000046E0   7512          LG    15,@lit_951_214 ; rd_kafka_error_new
00004928                                    7513 @@gen_label326 DS    0H
00004928 05EF                               7514          BALR  14,15
0000492A                                    7515 @@gen_label327 DS    0H
0000492A E3F0 D158 0024          00000158   7516          STG   15,344(0,13) ; error
                                            7517 * ***                                   goto err;
                                                                                                                           Page  154 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004930 47F0 C698               00004CA8   7518          B     @_err@951@0
                                            7519 * ***                           }
                                            7520 * ***                           break;
                                            7521 * ***
                                            7522 * ***                   case RD_KAFKA_VTYPE_HEADERS:
00004934                                    7523 @L743    DS    0H
                                            7524 * ***                           if (((hdrs != ((void *)0)))) {
00004934 B902 00F4                          7525          LTGR  15,4
00004938 4780 C358               00004968   7526          BE    @L744
                                            7527 * ***                                   error = rd_kafka_error_new(
                                            7528 * ***                                           RD_KAFKA_RESP_ERR__CON\
                                            7529 * FLICT,
                                            7530 * ***                                           "VTYPE_HEADERS and VTY\
                                            7531 * PE_HEADER "
0000493C E548 D160 FF53          00000160   7532          MVGHI 352(13),-173
                                            7533 * ***                                           "are mutually exclusiv\
                                            7534 * e");
00004942 E3F0 C0D8 0004          000046E8   7535          LG    15,@lit_951_213
00004948 41F0 F276               00000276   7536          LA    15,630(0,15)
0000494C E3F0 D168 0024          00000168   7537          STG   15,360(0,13)
00004952 4110 D160               00000160   7538          LA    1,352(0,13)
00004956 E3F0 C0D0 0004          000046E0   7539          LG    15,@lit_951_214 ; rd_kafka_error_new
0000495C                                    7540 @@gen_label329 DS    0H
0000495C 05EF                               7541          BALR  14,15
0000495E                                    7542 @@gen_label330 DS    0H
0000495E E3F0 D158 0024          00000158   7543          STG   15,344(0,13) ; error
                                            7544 * ***                                   goto err;
00004964 47F0 C698               00004CA8   7545          B     @_err@951@0
                                            7546 * ***                           }
00004968                                    7547 @L744    DS    0H
                                            7548 * ***                           app_hdrs = vu->u.headers;
00004968 E350 8008 0004          00000008   7549          LG    5,8(0,8)    ; offset of u in rd_kafka_vu_s
                                            7550 * ***                           break;
0000496E 47F0 C418               00004A28   7551          B     @L730
                                            7552 * ***
                                            7553 * ***                   default:
                                            7554 * ***                           error = rd_kafka_error_new(
00004972                                    7555 @L745    DS    0H
                                            7556 * ***                                   RD_KAFKA_RESP_ERR__INVALID_ARG\
                                            7557 * ,
                                            7558 * ***                                   "Unsupported VTYPE %d", (int)v\
                                            7559 * u->vtype);
00004972 E548 D160 FF46          00000160   7560          MVGHI 352(13),-186
00004978 E3F0 C0D8 0004          000046E8   7561          LG    15,@lit_951_213
0000497E 41F0 F2AC               000002AC   7562          LA    15,684(0,15)
00004982 E3F0 D168 0024          00000168   7563          STG   15,360(0,13)
00004988 E3F0 8000 0014          00000000   7564          LGF   15,0(0,8)
0000498E E3F0 D170 0024          00000170   7565          STG   15,368(0,13)
00004994 4110 D160               00000160   7566          LA    1,352(0,13)
00004998 E3F0 C0D0 0004          000046E0   7567          LG    15,@lit_951_214 ; rd_kafka_error_new
0000499E                                    7568 @@gen_label331 DS    0H
0000499E 05EF                               7569          BALR  14,15
                                                                                                                           Page  155 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000049A0                                    7570 @@gen_label332 DS    0H
000049A0 E3F0 D158 0024          00000158   7571          STG   15,344(0,13) ; error
                                            7572 * ***                           goto err;
000049A6 47F0 C698               00004CA8   7573          B     @_err@951@0
                                            7574 * ***                   }
000049AA                                    7575 @L729    DS    0H
000049AA 58F0 8000               00000000   7576          L     15,0(0,8)   ; vu
000049AE A7FA FFFF               0000FFFF   7577          AHI   15,-1
000049B2 C2FF 0000 0009                     7578          CLFI  15,X'00000009'
000049B8 4720 C362               00004972   7579          BH    @L745
000049BC B914 00FF                          7580          LGFR  15,15
000049C0 4110 C3C8               000049D8   7581          LA    1,@@gen_label333
000049C4 EBFF 0003 000D          00000003   7582          SLLG  15,15,3(0)
000049CA E3F1 F000 0004          00000000   7583          LG    15,0(1,15)
000049D0 47FF C000               00000000   7584          B     0(15,12)
000049D8                                    7585 @@gen_label333 DS    0D
000049D8 000000000000016A                   7586          DC AD(@L731-@REGION_951_1)
000049E0 000000000000019C                   7587          DC AD(@L732-@REGION_951_1)
000049E8 00000000000001CE                   7588          DC AD(@L733-@REGION_951_1)
000049F0 00000000000001DA                   7589          DC AD(@L734-@REGION_951_1)
000049F8 00000000000001F6                   7590          DC AD(@L735-@REGION_951_1)
00004A00 0000000000000212                   7591          DC AD(@L736-@REGION_951_1)
00004A08 0000000000000222                   7592          DC AD(@L737-@REGION_951_1)
00004A10 000000000000022E                   7593          DC AD(@L738-@REGION_951_1)
00004A18 000000000000023E                   7594          DC AD(@L739-@REGION_951_1)
00004A20 0000000000000324                   7595          DC AD(@L743-@REGION_951_1)
00004A28                                    7596 @L730    DS    0H
                                            7597 * ***           }
00004A28 A76B 0001               00000001   7598          AGHI  6,1
00004A2C                                    7599 @L726    DS    0H
00004A2C E360 9010 0021          00000010   7600          CLG   6,16(0,9)
00004A32 4740 C14C               0000475C   7601          BL    @L725
                                            7602 * ***
                                            7603 * ***           ((!error) ? (void)0 : __assert(__func__, "C:\\asgkafka\
                                            7604 * \\librdkafka\\src\\rdkafka_msg.c", 463, "!error"));
00004A36 E3F0 D158 0002          00000158   7605          LTG   15,344(0,13) ; error
00004A3C 4780 C46C               00004A7C   7606          BZ    @L747
00004A40                                    7607 @L746    DS    0H
00004A40 E3F0 C100 0004          00004710   7608          LG    15,@lit_951_225
00004A46 41F0 F1C2               000001C2   7609          LA    15,450(0,15)
00004A4A E3F0 D160 0024          00000160   7610          STG   15,352(0,13)
00004A50 E3F0 C0D8 0004          000046E8   7611          LG    15,@lit_951_213
00004A56 4110 F2C2               000002C2   7612          LA    1,706(0,15)
00004A5A E310 D168 0024          00000168   7613          STG   1,360(0,13)
00004A60 E548 D170 01CF          00000170   7614          MVGHI 368(13),463
00004A66 41F0 F2EC               000002EC   7615          LA    15,748(0,15)
00004A6A E3F0 D178 0024          00000178   7616          STG   15,376(0,13)
00004A70 4110 D160               00000160   7617          LA    1,352(0,13)
00004A74 E3F0 C0F8 0004          00004708   7618          LG    15,@lit_951_227 ; __assert
00004A7A                                    7619 @@gen_label336 DS    0H
00004A7A 05EF                               7620          BALR  14,15
00004A7C                                    7621 @@gen_label337 DS    0H
                                                                                                                           Page  156 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004A7C                                    7622 @L747    DS    0H
                                            7623 * ***
                                            7624 * ***           if (((!rkt))) {
00004A7C B902 00F3                          7625          LTGR  15,3
00004A80 4770 C4A0               00004AB0   7626          BNZ   @L748
                                            7627 * ***                   error = rd_kafka_error_new(
                                            7628 * ***                           RD_KAFKA_RESP_ERR__INVALID_ARG,
                                            7629 * ***                           "Topic name or object required");
00004A84 E548 D160 FF46          00000160   7630          MVGHI 352(13),-186
00004A8A E3F0 C0D8 0004          000046E8   7631          LG    15,@lit_951_213
00004A90 41F0 F2F4               000002F4   7632          LA    15,756(0,15)
00004A94 E3F0 D168 0024          00000168   7633          STG   15,360(0,13)
00004A9A 4110 D160               00000160   7634          LA    1,352(0,13)
00004A9E E3F0 C0D0 0004          000046E0   7635          LG    15,@lit_951_214 ; rd_kafka_error_new
00004AA4                                    7636 @@gen_label339 DS    0H
00004AA4 05EF                               7637          BALR  14,15
00004AA6                                    7638 @@gen_label340 DS    0H
00004AA6 E3F0 D158 0024          00000158   7639          STG   15,344(0,13) ; error
                                            7640 * ***                   goto err;
00004AAC 47F0 C698               00004CA8   7641          B     @_err@951@0
                                            7642 * ***           }
00004AB0                                    7643 @L748    DS    0H
                                            7644 * ***
                                            7645 * ***           rkm = rd_kafka_msg_new0(rkt,
                                            7646 * ***                                   rkm->rkm_rkmessage.partition,
                                            7647 * ***                                   rkm->rkm_flags,
                                            7648 * ***                                   rkm->rkm_rkmessage.payload, rk\
                                            7649 * m->rkm_rkmessage.len,
                                            7650 * ***                                   rkm->rkm_rkmessage.key, rkm->r\
                                            7651 * km_rkmessage.key_len,
                                            7652 * ***                                   rkm->rkm_rkmessage._private,
                                            7653 * ***                                   &err, ((void *)0),
                                            7654 * ***                                   app_hdrs ? app_hdrs : hdrs,
                                            7655 * ***                                   rkm->rkm_timestamp,
                                            7656 * ***                                   rd_clock());
00004AB0 B902 00F5                          7657          LTGR  15,5
00004AB4 4780 C4B0               00004AC0   7658          BZ    @L749
00004AB8 B904 0065                          7659          LGR   6,5
00004ABC 47F0 C4B4               00004AC4   7660          B     @L750
00004AC0                                    7661 @L749    DS    0H
00004AC0 B904 0064                          7662          LGR   6,4
00004AC4                                    7663 @L750    DS    0H
00004AC4 E3F0 C108 0004          00004718   7664          LG    15,@lit_951_230 ; rd_clock
00004ACA                                    7665 @@gen_label342 DS    0H
00004ACA 05EF                               7666          BALR  14,15
00004ACC                                    7667 @@gen_label343 DS    0H
00004ACC E330 D160 0024          00000160   7668          STG   3,352(0,13)
00004AD2 E310 2010 0014          00000010   7669          LGF   1,16(0,2)
00004AD8 E310 D168 0024          00000168   7670          STG   1,360(0,13)
00004ADE E310 2058 0014          00000058   7671          LGF   1,88(0,2)
00004AE4 E310 D170 0024          00000170   7672          STG   1,368(0,13)
00004AEA E310 2018 0004          00000018   7673          LG    1,24(0,2)
                                                                                                                           Page  157 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004AF0 E310 D178 0024          00000178   7674          STG   1,376(0,13)
00004AF6 E310 2020 0004          00000020   7675          LG    1,32(0,2)
00004AFC E310 D180 0024          00000180   7676          STG   1,384(0,13)
00004B02 E310 2028 0004          00000028   7677          LG    1,40(0,2)
00004B08 E310 D188 0024          00000188   7678          STG   1,392(0,13)
00004B0E E310 2030 0004          00000030   7679          LG    1,48(0,2)
00004B14 E310 D190 0024          00000190   7680          STG   1,400(0,13)
00004B1A E310 2040 0004          00000040   7681          LG    1,64(0,2)
00004B20 E310 D198 0024          00000198   7682          STG   1,408(0,13)
00004B26 4110 D150               00000150   7683          LA    1,336(0,13)
00004B2A E310 D1A0 0024          000001A0   7684          STG   1,416(0,13)
00004B30 D707 D1A8 D1A8 000001A8 000001A8   7685          XC    424(8,13),424(13)
00004B36 E360 D1B0 0024          000001B0   7686          STG   6,432(0,13)
00004B3C E310 2060 0004          00000060   7687          LG    1,96(0,2)
00004B42 E310 D1B8 0024          000001B8   7688          STG   1,440(0,13)
00004B48 E3F0 D1C0 0024          000001C0   7689          STG   15,448(0,13)
00004B4E 4110 D160               00000160   7690          LA    1,352(0,13)
00004B52 E3F0 C110 0004          00004720   7691          LG    15,@lit_951_231 ; rd_kafka_msg_new0
00004B58                                    7692 @@gen_label344 DS    0H
00004B58 05EF                               7693          BALR  14,15
00004B5A                                    7694 @@gen_label345 DS    0H
00004B5A B904 002F                          7695          LGR   2,15        ; rkm
                                            7696 * ***
                                            7697 * ***           if (((err))) {
00004B5E E3F0 D150 0012          00000150   7698          LT    15,336(0,13) ; err
00004B64 4780 C5A6               00004BB6   7699          BZ    @L751
                                            7700 * ***                   error = rd_kafka_error_new(
                                            7701 * ***                           err,
                                            7702 * ***                           "Failed to produce message: %s",
                                            7703 * ***                           rd_kafka_err2str(err));
00004B68 B914 00FF                          7704          LGFR  15,15
00004B6C E3F0 D160 0024          00000160   7705          STG   15,352(0,13)
00004B72 4110 D160               00000160   7706          LA    1,352(0,13)
00004B76 E3F0 C0F0 0004          00004700   7707          LG    15,@lit_951_217 ; rd_kafka_err2str
00004B7C                                    7708 @@gen_label347 DS    0H
00004B7C 05EF                               7709          BALR  14,15
00004B7E                                    7710 @@gen_label348 DS    0H
00004B7E E310 D150 0014          00000150   7711          LGF   1,336(0,13) ; err
00004B84 E310 D160 0024          00000160   7712          STG   1,352(0,13)
00004B8A E310 C0D8 0004          000046E8   7713          LG    1,@lit_951_213
00004B90 4110 1312               00000312   7714          LA    1,786(0,1)
00004B94 E310 D168 0024          00000168   7715          STG   1,360(0,13)
00004B9A E3F0 D170 0024          00000170   7716          STG   15,368(0,13)
00004BA0 4110 D160               00000160   7717          LA    1,352(0,13)
00004BA4 E3F0 C0D0 0004          000046E0   7718          LG    15,@lit_951_214 ; rd_kafka_error_new
00004BAA                                    7719 @@gen_label349 DS    0H
00004BAA 05EF                               7720          BALR  14,15
00004BAC                                    7721 @@gen_label350 DS    0H
00004BAC E3F0 D158 0024          00000158   7722          STG   15,344(0,13) ; error
                                            7723 * ***                   goto err;
00004BB2 47F0 C698               00004CA8   7724          B     @_err@951@0
                                            7725 * ***           }
                                                                                                                           Page  158 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004BB6                                    7726 @L751    DS    0H
                                            7727 * ***
                                            7728 * ***
                                            7729 * ***           err = rd_kafka_msg_partitioner(rkt, rkm, 1);
00004BB6 E330 D160 0024          00000160   7730          STG   3,352(0,13)
00004BBC E320 D168 0024          00000168   7731          STG   2,360(0,13)
00004BC2 E548 D170 0001          00000170   7732          MVGHI 368(13),1
00004BC8 4110 D160               00000160   7733          LA    1,352(0,13)
00004BCC E3F0 C118 0004          00004728   7734          LG    15,@lit_951_235 ; rd_kafka_msg_partitioner
00004BD2                                    7735 @@gen_label351 DS    0H
00004BD2 05EF                               7736          BALR  14,15
00004BD4                                    7737 @@gen_label352 DS    0H
00004BD4 50F0 D150               00000150   7738          ST    15,336(0,13) ; err
                                            7739 * ***           if (((err))) {
00004BD8 12FF                               7740          LTR   15,15
00004BDA 4780 C67E               00004C8E   7741          BZ    @L752
                                            7742 * ***
                                            7743 * ***
                                            7744 * ***
                                            7745 * ***
                                            7746 * ***
                                            7747 * ***                   rkm->rkm_rkmessage.err = err;
00004BDE 50F0 2000               00000000   7748          ST    15,0(0,2)   ; rkm
                                            7749 * ***                   rd_kafka_interceptors_on_acknowledgement(rk,
                                            7750 * ***                                                            &rkm-\
                                            7751 * >rkm_rkmessage);
00004BE2 E370 D160 0024          00000160   7752          STG   7,352(0,13)
00004BE8 E320 D168 0024          00000168   7753          STG   2,360(0,13)
00004BEE 4110 D160               00000160   7754          LA    1,352(0,13)
00004BF2 E3F0 C120 0004          00004730   7755          LG    15,@lit_951_236 ; rd_kafka_interceptors_on_acknowledgeme*
                                                                nt
00004BF8                                    7756 @@gen_label354 DS    0H
00004BF8 05EF                               7757          BALR  14,15
00004BFA                                    7758 @@gen_label355 DS    0H
                                            7759 * ***
                                            7760 * ***
                                            7761 * ***
                                            7762 * ***
                                            7763 * ***                   rkm->rkm_flags &= ~0x1;
00004BFA 58F0 2058               00000058   7764          L     15,88(0,2)
00004BFE A5F7 FFFE               0000FFFE   7765          NILL  15,65534
00004C02 50F0 2058               00000058   7766          ST    15,88(0,2)
                                            7767 * ***
                                            7768 * ***
                                            7769 * ***
                                            7770 * ***
                                            7771 * ***                   if (app_hdrs && app_hdrs == rkm->rkm_headers)
00004C06 B902 00F5                          7772          LTGR  15,5
00004C0A 4780 C616               00004C26   7773          BZ    @L753
00004C0E E3F0 2068 0004          00000068   7774          LG    15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
00004C14 B920 005F                          7775          CGR   5,15
00004C18 4770 C616               00004C26   7776          BNE   @L753
                                                                                                                           Page  159 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7777 * ***                           rkm->rkm_headers = ((void *)0);
00004C1C A7F9 0000               00000000   7778          LGHI  15,0        ; 0
00004C20 E3F0 2068 0024          00000068   7779          STG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
00004C26                                    7780 @L753    DS    0H
                                            7781 * ***
                                            7782 * ***                   rd_kafka_msg_destroy(rk, rkm);
00004C26 E370 D160 0024          00000160   7783          STG   7,352(0,13)
00004C2C E320 D168 0024          00000168   7784          STG   2,360(0,13)
00004C32 4110 D160               00000160   7785          LA    1,352(0,13)
00004C36 E3F0 C128 0004          00004738   7786          LG    15,@lit_951_238 ; rd_kafka_msg_destroy
00004C3C                                    7787 @@gen_label358 DS    0H
00004C3C 05EF                               7788          BALR  14,15
00004C3E                                    7789 @@gen_label359 DS    0H
                                            7790 * ***
                                            7791 * ***                   error = rd_kafka_error_new(err,
                                            7792 * ***                                              "Failed to enqueue \
                                            7793 * message: %s",
                                            7794 * ***                                              rd_kafka_err2str(er\
                                            7795 * r));
00004C3E E3F0 D150 0014          00000150   7796          LGF   15,336(0,13) ; err
00004C44 E3F0 D160 0024          00000160   7797          STG   15,352(0,13)
00004C4A 4110 D160               00000160   7798          LA    1,352(0,13)
00004C4E E3F0 C0F0 0004          00004700   7799          LG    15,@lit_951_217 ; rd_kafka_err2str
00004C54                                    7800 @@gen_label360 DS    0H
00004C54 05EF                               7801          BALR  14,15
00004C56                                    7802 @@gen_label361 DS    0H
00004C56 E310 D150 0014          00000150   7803          LGF   1,336(0,13) ; err
00004C5C E310 D160 0024          00000160   7804          STG   1,352(0,13)
00004C62 E310 C0D8 0004          000046E8   7805          LG    1,@lit_951_213
00004C68 4110 1330               00000330   7806          LA    1,816(0,1)
00004C6C E310 D168 0024          00000168   7807          STG   1,360(0,13)
00004C72 E3F0 D170 0024          00000170   7808          STG   15,368(0,13)
00004C78 4110 D160               00000160   7809          LA    1,352(0,13)
00004C7C E3F0 C0D0 0004          000046E0   7810          LG    15,@lit_951_214 ; rd_kafka_error_new
00004C82                                    7811 @@gen_label362 DS    0H
00004C82 05EF                               7812          BALR  14,15
00004C84                                    7813 @@gen_label363 DS    0H
00004C84 E3F0 D158 0024          00000158   7814          STG   15,344(0,13) ; error
                                            7815 * ***                   goto err;
00004C8A 47F0 C698               00004CA8   7816          B     @_err@951@0
                                            7817 * ***           }
00004C8E                                    7818 @L752    DS    0H
                                            7819 * ***
                                            7820 * ***           rd_kafka_topic_destroy0(rkt);
00004C8E E330 D160 0024          00000160   7821          STG   3,352(0,13)
00004C94 4110 D160               00000160   7822          LA    1,352(0,13)
00004C98 E3F0 C130 0004          00004740   7823          LG    15,@lit_951_242 ; rd_kafka_topic_destroy0
00004C9E                                    7824 @@gen_label364 DS    0H
00004C9E 05EF                               7825          BALR  14,15
00004CA0                                    7826 @@gen_label365 DS    0H
                                            7827 * ***
                                            7828 * ***           return ((void *)0);
                                                                                                                           Page  160 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004CA0 A7F9 0000               00000000   7829          LGHI  15,0        ; 0
00004CA4 47F0 C718               00004D28   7830          B     @ret_lab_951
                                            7831 * ***
                                            7832 * ***    err:
                                            7833 * ***           if (rkt)
00004CA8                                    7834 @_err@951@0 DS 0H
00004CA8 B902 00F3                          7835          LTGR  15,3
00004CAC 4780 C6B2               00004CC2   7836          BZ    @L754
                                            7837 * ***                   rd_kafka_topic_destroy0(rkt);
00004CB0 E330 D160 0024          00000160   7838          STG   3,352(0,13)
00004CB6 4110 D160               00000160   7839          LA    1,352(0,13)
00004CBA E3F0 C130 0004          00004740   7840          LG    15,@lit_951_242 ; rd_kafka_topic_destroy0
00004CC0                                    7841 @@gen_label367 DS    0H
00004CC0 05EF                               7842          BALR  14,15
00004CC2                                    7843 @@gen_label368 DS    0H
00004CC2                                    7844 @L754    DS    0H
                                            7845 * ***
                                            7846 * ***           if (hdrs)
00004CC2 B902 00F4                          7847          LTGR  15,4
00004CC6 4780 C6CC               00004CDC   7848          BZ    @L755
                                            7849 * ***                   rd_kafka_headers_destroy(hdrs);
00004CCA E340 D160 0024          00000160   7850          STG   4,352(0,13)
00004CD0 4110 D160               00000160   7851          LA    1,352(0,13)
00004CD4 E3F0 C138 0004          00004748   7852          LG    15,@lit_951_245 ; rd_kafka_headers_destroy
00004CDA                                    7853 @@gen_label370 DS    0H
00004CDA 05EF                               7854          BALR  14,15
00004CDC                                    7855 @@gen_label371 DS    0H
00004CDC                                    7856 @L755    DS    0H
                                            7857 * ***
                                            7858 * ***           ((error != ((void *)0)) ? (void)0 : __assert(__func__,\
                                            7859 *  "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 533, "error != ((vo\
                                            7860 * id *)0)"));
00004CDC E3F0 D158 0002          00000158   7861          LTG   15,344(0,13) ; error
00004CE2 4770 C712               00004D22   7862          BNE   @L757
00004CE6                                    7863 @L756    DS    0H
00004CE6 E3F0 C100 0004          00004710   7864          LG    15,@lit_951_225
00004CEC 41F0 F1C2               000001C2   7865          LA    15,450(0,15)
00004CF0 E3F0 D160 0024          00000160   7866          STG   15,352(0,13)
00004CF6 E3F0 C0D8 0004          000046E8   7867          LG    15,@lit_951_213
00004CFC 4110 F2C2               000002C2   7868          LA    1,706(0,15)
00004D00 E310 D168 0024          00000168   7869          STG   1,360(0,13)
00004D06 E548 D170 0215          00000170   7870          MVGHI 368(13),533
00004D0C 41F0 F34E               0000034E   7871          LA    15,846(0,15)
00004D10 E3F0 D178 0024          00000178   7872          STG   15,376(0,13)
00004D16 4110 D160               00000160   7873          LA    1,352(0,13)
00004D1A E3F0 C0F8 0004          00004708   7874          LG    15,@lit_951_227 ; __assert
00004D20                                    7875 @@gen_label373 DS    0H
00004D20 05EF                               7876          BALR  14,15
00004D22                                    7877 @@gen_label374 DS    0H
00004D22                                    7878 @L757    DS    0H
                                            7879 * ***           return error;
00004D22 E3F0 D158 0004          00000158   7880          LG    15,344(0,13) ; error
                                                                                                                           Page  161 
  Active Usings: @REGION_951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7881 * ***   }
00004D28                                    7882 @ret_lab_951 DS 0H
00004D28 E3C0 C140 001A          00004750   7883          ALGF  12,@lit_region_diff_951_1_2
00004D2E                                    7884 @REGION_951_2 DS 0H
                                            7885          DROP  12
                        00004D2E            7886          USING @REGION_951_2,12
                                            7887 * * **** Start of Epilogue
                                            7888          DCCEPIL
00004D2E                                    7889+         ds 0h                                                          01-DCCEP
                                            7890+* Epilog
00004D2E D707 D088 D088 00000088 00000088   7891+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D34 E3D0 D080 0004          00000080   7892+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D3A E3C0 D090 0004          00000090   7893+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004D40 E3B0 C018 0004          00000018   7894+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004D46 E3C0 B010 0021          00000010   7895+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004D4C E3E0 D008 0004          00000008   7896+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004D52 EB1C D020 0004          00000020   7897+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004D58 078E                               7898+         bcr 8,14                if same dsab, just return              01-DCCEP
00004D5A E3F0 D010 0024          00000010   7899+         stg 15,16(0,13)         save return code                       01-DCCEP
00004D60 E300 D018 0024          00000018   7900+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004D66 E3F0 D090 0004          00000090   7901+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004D6C E3F0 F018 0004          00000018   7902+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004D72 47F0 F040               00000040   7903+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7904+* End of Epilog
                                            7905 * * **** End of Epilogue
                                            7906          DROP  12
                                            7907 *
                                            7908 *   DSECT for automatic variables in "rd_kafka_produceva"
                                            7909 *      (FUNCTION #951)
                                            7910 *
00000000                00000000 00000154   7911 @AUTO#rd_kafka_produceva DSECT
00000000                                    7912          DS    XL168
000000A8                                    7913 rd_kafka_produceva#i#0 DS 8XL1 ; i
000000B0                000000B0 000000A8   7914          ORG   @AUTO#rd_kafka_produceva+168
000000A8                                    7915 rd_kafka_produceva#s_rkm#0 DS 168XL1 ; s_rkm
00000150                00000150 00000150   7916          ORG   @AUTO#rd_kafka_produceva+336
00000150                                    7917 rd_kafka_produceva#err#0 DS 1F ; err
                                            7918 *
00004D76                00000000 0000E868   7919 @CODE    CSECT
                                            7920 *
                                            7921 *
                                            7922 *
                                            7923 * ....... start of rd_kafka_producev
                                            7924 rd_kafka_producev ALIAS X'99846D92818692816D97999684A48385A5'
00004D76                                    7925 @LNAME950 DS   0H
00004D76 00000011                           7926          DC    X'00000011'
00004D7A 99846D9281869281                   7927          DC    C'rd_kafka_producev'
00004D8B 00                                 7928          DC    X'00'
                                            7929 rd_kafka_producev DCCPRLG CINDEX=950,BASER=12,FRAME=448,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME950
                                            7930          macro
                                            7931          dccextrn &m
                                                                                                                           Page  162 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7932          gblc    &$dccext(1000)
                                            7933          gbla    &$dccexti
                                            7934          lcla    &i
                                            7935 &$dccext(&$dccexti+1) setc    '&m'
                                            7936 &i       seta    1
                                            7937 .loop    aif    (&i gt &$dccexti).around
                                            7938          aif    ('&$dccext(&i)' eq '&m').getout
                                            7939 &i       seta    &i+1
                                            7940          ago     .loop
                                            7941 .around  anop
                                            7942 &$dccexti seta &$dccexti+1
                                            7943          extrn  &m
                                            7944 .getout  anop
                                            7945          mend
00004D90                                    7946+$eye0168    ds    0d                                                    02-DCCCA
00004D90 C4C3C3                             7947+         dc cl3'DCC'                                                    02-DCCCA
00004D93 01                                 7948+         dc xl1'01' format one                                          02-DCCCA
00004D94 00000000                           7949+         dc a(0)                                                        02-DCCCA
00004D98 0000000000004E02                   7950+         dc ad(@PER_950)                                                02-DCCCA
00004DA0 00000000000001C0                   7951+         dc ad(448)                                                     02-DCCCA
00004DA8 0000000000000000                   7952+         dc ad(0)                                                       02-DCCCA
00004DB0 0000000000001000                   7953+         dc ad(4096)                                                    02-DCCCA
00004DB8 20                                 7954+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004DB9 03                                 7955+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004DBA 03                                 7956+         dc al1(3)                                                      02-DCCCA
00004DBB 08                                 7957+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004DBC 00                                 7958+         dc bl.8'00000000'                                              02-DCCCA
00004DBD 000000                             7959+         dc al3(0)                                                      02-DCCCA
00004DC0 0000000000004D76                   7960+         dc ad(@LNAME950)                                               02-DCCCA
00004DC8                                    7961+         ds 0d                                                          02-DCCCA
00004DC8 0000000000004D90                   7962+         dc ad($eye0168)                                                02-DCCCA
00004DD0 0000000000000000                   7963+         dc ad(0)                                                       02-DCCCA
00004DD8                                    7964+         ds    0d                                                       01-DCCPR
                                            7965+         entry rd_kafka_producev                                        01-DCCPR
00004DD8                                    7966+rd_kafka_producev ds 0d                                                 01-DCCPR
00004DD8                                    7967+@REGION_950_1 ds 0h                                                     01-DCCPR
00004DD8 EBEC D008 0024          00000008   7968+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004DDE E3E0 D088 0004          00000088   7969+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004DE4 E3C0 D090 0004          00000090   7970+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004DEA B904 002E                          7971+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004DEE E3B0 C018 0004          00000018   7972+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004DF4 A7EB 01C0               000001C0   7973+         aghi  14,448              increase by frame size               01-DCCPR
00004DF8 E3E0 C020 0021          00000020   7974+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004DFE 4720 B020               00000020   7975+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004E02                                    7976+@PER_950 ds    0h                                                       01-DCCPR
00004E02 EBDE 2080 0024          00000080   7977+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004E08 E3C0 2090 0024          00000090   7978+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004E0E B904 00D2                          7979+         lgr   13,2                set real frame pointer               01-DCCPR
00004E12 B904 00CF                          7980+         lgr   12,15               set base reg                         01-DCCPR
                        00004DD8            7981+         using @REGION_950_1,12                                         01-DCCPR
00004E16 B904 0071                          7982          LGR   7,1         ; ptr to parm area
                                            7983 * ******* End of Prologue
                                                                                                                           Page  163 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7984 * *
                                            7985 * ***           va_list ap;
                                            7986 * ***           rd_kafka_msg_t s_rkm = {
                                            7987 * ***
                                            7988 * ***                   . rkm_rkmessage.partition = ((int32_t)-1),
00004E1A E54C D0B8 FFFF          000000B8   7989          MVHI  184(13),-1
                                            7990 * ***                   .rkm_timestamp = 0,
                                            7991 * ***           };
                                            7992 * setting 16 bytes to 0x00
00004E20 D70F D0A8 D0A8 000000A8 000000A8   7993          XC    168(16,13),168(13)
                                            7994 * setting 148 bytes to 0x00
00004E26 D793 D0BC D0BC 000000BC 000000BC   7995          XC    188(148,13),188(13)
                                            7996 * ***           rd_kafka_msg_t *rkm = &s_rkm;
00004E2C 4120 D0A8               000000A8   7997          LA    2,168(0,13)
                                            7998 * ***           rd_kafka_vtype_t vtype;
                                            7999 * ***           rd_kafka_topic_t *rkt = ((void *)0);
00004E30 A749 0000               00000000   8000          LGHI  4,0         ; 0
                                            8001 * ***           rd_kafka_resp_err_t err;
                                            8002 * ***           rd_kafka_headers_t *hdrs = ((void *)0);
00004E34 B904 0054                          8003          LGR   5,4         ; hdrs
                                            8004 * ***           rd_kafka_headers_t *app_hdrs = ((void *)0);
00004E38 B904 0064                          8005          LGR   6,4         ; app_hdrs
                                            8006 * ***
                                            8007 * ***           if ((((err = rd_kafka_check_produce(rk, ((void *)0))))\
                                            8008 * ))
00004E3C E3F0 7000 0004          00000000   8009          LG    15,0(0,7)   ; rk
00004E42 E3F0 D158 0024          00000158   8010          STG   15,344(0,13)
00004E48 D707 D160 D160 00000160 00000160   8011          XC    352(8,13),352(13)
00004E4E 4110 D158               00000158   8012          LA    1,344(0,13)
00004E52 E3F0 C0A0 0004          00004E78   8013          LG    15,@lit_950_254 ; rd_kafka_check_produce
00004E58                                    8014 @@gen_label375 DS    0H
00004E58 05EF                               8015          BALR  14,15
00004E5A                                    8016 @@gen_label376 DS    0H
00004E5A 50F0 D150               00000150   8017          ST    15,336(0,13) ; err
00004E5E 12FF                               8018          LTR   15,15
00004E60 4780 C108               00004EE0   8019          BZ    @L758
                                            8020 * ***                   return err;
00004E64 B914 00FF                          8021          LGFR  15,15
00004E68 47F0 C52C               00005304   8022          B     @ret_lab_950
00004E70                                    8023          DS    0D
00004E70 000001C0                           8024 @FRAMESIZE_950 DC F'448'
00004E74 00000000
00004E78 0000000000003840                   8025 @lit_950_254 DC AD(rd_kafka_check_produce)
00004E80 0000000000000000                   8026 @lit_950_256 DC AD(rd_kafka_topic_new0)
00004E88 0000000000000000                   8027 @lit_950_258 DC AD(rd_kafka_topic_proper)
00004E90 0000000000002488                   8028 @lit_950_259 DC AD(rd_kafka_topic_keep)
00004E98 0000000000000000                   8029 @lit_950_268 DC AD(rd_kafka_headers_new)
00004EA0 0000000000000000                   8030 @lit_950_272 DC AD(rd_kafka_header_add)
00004EA8 0000000000000AD0                   8031 @lit_950_277 DC AD(rd_clock)
00004EB0 0000000000003F50                   8032 @lit_950_278 DC AD(rd_kafka_msg_new0)
00004EB8 00000000000025F0                   8033 @lit_950_279 DC AD(rd_kafka_topic_destroy0)
00004EC0 0000000000000000                   8034 @lit_950_280 DC AD(rd_kafka_headers_destroy)
                                                                                                                           Page  164 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004EC8 0000000000007430                   8035 @lit_950_281 DC AD(rd_kafka_msg_partitioner)
00004ED0 0000000000000000                   8036 @lit_950_282 DC AD(rd_kafka_interceptors_on_acknowledgement)
00004ED8 0000000000003AE0                   8037 @lit_950_284 DC AD(rd_kafka_msg_destroy)
00004EE0                                    8038 @L758    DS    0H
                                            8039 * ***
                                            8040 * ***           ((ap) = (va_list)&(rk) + ((__builtin_classify_type(rk)\
                                            8041 *  == 1 || __builtin_classify_type(rk) == 2 || __builtin_classify_type\
                                            8042 * (rk) == 4) ? sizeof(rk) : (((sizeof(rk) + sizeof(long) - 1) & ~(size\
                                            8043 * of(long) -1)))));
00004EE0 4130 7008               00000008   8044          LA    3,8(0,7)
                                            8045 * ***           while (!err &&
00004EE4 47F0 C360               00005138   8046          B     @L762
                                            8047 * ***                   switch (vtype)
                                            8048 * ***                   {
                                            8049 * ***                   case RD_KAFKA_VTYPE_TOPIC:
00004EE8                                    8050 @L766    DS    0H
                                            8051 * ***                           rkt = rd_kafka_topic_new0(rk,
                                            8052 * ***                                                     (*(const cha\
                                            8053 * r * *)((ap) += (((sizeof(const char *) + sizeof(long) - 1) & ~(sizeo\
                                            8054 * f(long) -1))), (ap) - ((__builtin_classify_type(const char *) == 1 |\
                                            8055 * | __builtin_classify_type(const char *) == 2 || __builtin_classify_t\
                                            8056 * ype(const char *) == 4) ? sizeof(const char *) : (((sizeof(const cha\
                                            8057 * r *) + sizeof(long) - 1) & ~(sizeof(long) -1)))))),
                                            8058 * ***                                                     ((void *)0),\
                                            8059 *  ((void *)0), 1);
00004EE8 4130 3008               00000008   8060          LA    3,8(0,3)
00004EEC A7F9 FFF8               0000FFF8   8061          LGHI  15,-8       ; -8
00004EF0 E3FF 3000 0004          00000000   8062          LG    15,0(15,3)
00004EF6 E310 7000 0004          00000000   8063          LG    1,0(0,7)    ; rk
00004EFC E310 D158 0024          00000158   8064          STG   1,344(0,13)
00004F02 E3F0 D160 0024          00000160   8065          STG   15,352(0,13)
00004F08 D70F D168 D168 00000168 00000168   8066          XC    360(16,13),360(13)
00004F0E E548 D178 0001          00000178   8067          MVGHI 376(13),1
00004F14 4110 D158               00000158   8068          LA    1,344(0,13)
00004F18 E3F0 C0A8 0004          00004E80   8069          LG    15,@lit_950_256 ; rd_kafka_topic_new0
00004F1E                                    8070 @@gen_label378 DS    0H
00004F1E 05EF                               8071          BALR  14,15
00004F20                                    8072 @@gen_label379 DS    0H
00004F20 B904 004F                          8073          LGR   4,15        ; rkt
                                            8074 * ***                           break;
00004F24 47F0 C360               00005138   8075          B     @L762
                                            8076 * ***
                                            8077 * ***                   case RD_KAFKA_VTYPE_RKT:
00004F28                                    8078 @L767    DS    0H
                                            8079 * ***                           rkt = rd_kafka_topic_proper(
                                            8080 * ***                                   (*(rd_kafka_topic_t * *)((ap) \
                                            8081 * += (((sizeof(rd_kafka_topic_t *) + sizeof(long) - 1) & ~(sizeof(long\
                                            8082 * ) -1))), (ap) - ((__builtin_classify_type(rd_kafka_topic_t *) == 1 |\
                                            8083 * | __builtin_classify_type(rd_kafka_topic_t *) == 2 || __builtin_clas\
                                            8084 * sify_type(rd_kafka_topic_t *) == 4) ? sizeof(rd_kafka_topic_t *) : (\
                                            8085 * ((sizeof(rd_kafka_topic_t *) + sizeof(long) - 1) & ~(sizeof(long) -1\
                                            8086 * )))))));
                                                                                                                           Page  165 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004F28 4130 3008               00000008   8087          LA    3,8(0,3)
00004F2C A7F9 FFF8               0000FFF8   8088          LGHI  15,-8       ; -8
00004F30 E3FF 3000 0004          00000000   8089          LG    15,0(15,3)
00004F36 E3F0 D158 0024          00000158   8090          STG   15,344(0,13)
00004F3C 4110 D158               00000158   8091          LA    1,344(0,13)
00004F40 E3F0 C0B0 0004          00004E88   8092          LG    15,@lit_950_258 ; rd_kafka_topic_proper
00004F46                                    8093 @@gen_label380 DS    0H
00004F46 05EF                               8094          BALR  14,15
00004F48                                    8095 @@gen_label381 DS    0H
00004F48 B904 004F                          8096          LGR   4,15        ; rkt
                                            8097 * ***                           rd_kafka_topic_keep(rkt);
00004F4C E3F0 D158 0024          00000158   8098          STG   15,344(0,13)
00004F52 4110 D158               00000158   8099          LA    1,344(0,13)
00004F56 E3F0 C0B8 0004          00004E90   8100          LG    15,@lit_950_259 ; rd_kafka_topic_keep
00004F5C                                    8101 @@gen_label382 DS    0H
00004F5C 05EF                               8102          BALR  14,15
00004F5E                                    8103 @@gen_label383 DS    0H
                                            8104 * ***                           break;
00004F5E 47F0 C360               00005138   8105          B     @L762
                                            8106 * ***
                                            8107 * ***                   case RD_KAFKA_VTYPE_PARTITION:
00004F62                                    8108 @L768    DS    0H
                                            8109 * ***                           rkm->rkm_rkmessage.partition = (*(int3\
                                            8110 * 2_t *)((ap) += (((sizeof(int32_t) + sizeof(long) - 1) & ~(sizeof(lon\
                                            8111 * g) -1))), (ap) - ((__builtin_classify_type(int32_t) == 1 || __builti\
                                            8112 * n_classify_type(int32_t) == 2 || __builtin_classify_type(int32_t) ==\
                                            8113 *  4) ? sizeof(int32_t) : (((sizeof(int32_t) + sizeof(long) - 1) & ~(s\
                                            8114 * izeof(long) -1))))));
00004F62 4130 3008               00000008   8115          LA    3,8(0,3)
00004F66 A7F9 FFFC               0000FFFC   8116          LGHI  15,-4       ; -4
00004F6A 58FF 3000               00000000   8117          L     15,0(15,3)
00004F6E 50F0 2010               00000010   8118          ST    15,16(0,2)
                                            8119 * ***                           break;
00004F72 47F0 C360               00005138   8120          B     @L762
                                            8121 * ***
                                            8122 * ***                   case RD_KAFKA_VTYPE_VALUE:
00004F76                                    8123 @L769    DS    0H
                                            8124 * ***                           rkm->rkm_rkmessage.payload = (*(void *\
                                            8125 *  *)((ap) += (((sizeof(void *) + sizeof(long) - 1) & ~(sizeof(long) -\
                                            8126 * 1))), (ap) - ((__builtin_classify_type(void *) == 1 || __builtin_cla\
                                            8127 * ssify_type(void *) == 2 || __builtin_classify_type(void *) == 4) ? s\
                                            8128 * izeof(void *) : (((sizeof(void *) + sizeof(long) - 1) & ~(sizeof(lon\
                                            8129 * g) -1))))));
00004F76 41F0 3008               00000008   8130          LA    15,8(0,3)
00004F7A A719 FFF8               0000FFF8   8131          LGHI  1,-8        ; -8
00004F7E E331 F000 0004          00000000   8132          LG    3,0(1,15)
00004F84 E330 2018 0024          00000018   8133          STG   3,24(0,2)
                                            8134 * ***                           rkm->rkm_rkmessage.len = (*(size_t *)(\
                                            8135 * (ap) += (((sizeof(size_t) + sizeof(long) - 1) & ~(sizeof(long) -1)))\
                                            8136 * , (ap) - ((__builtin_classify_type(size_t) == 1 || __builtin_classif\
                                            8137 * y_type(size_t) == 2 || __builtin_classify_type(size_t) == 4) ? sizeo\
                                            8138 * f(size_t) : (((sizeof(size_t) + sizeof(long) - 1) & ~(sizeof(long) -\
                                                                                                                           Page  166 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8139 * 1))))));
00004F8A 4130 F008               00000008   8140          LA    3,8(0,15)
00004F8E E3F1 3000 0004          00000000   8141          LG    15,0(1,3)
00004F94 E3F0 2020 0024          00000020   8142          STG   15,32(0,2)
                                            8143 * ***                           break;
00004F9A 47F0 C360               00005138   8144          B     @L762
                                            8145 * ***
                                            8146 * ***                   case RD_KAFKA_VTYPE_KEY:
00004F9E                                    8147 @L770    DS    0H
                                            8148 * ***                           rkm->rkm_rkmessage.key = (*(void * *)(\
                                            8149 * (ap) += (((sizeof(void *) + sizeof(long) - 1) & ~(sizeof(long) -1)))\
                                            8150 * , (ap) - ((__builtin_classify_type(void *) == 1 || __builtin_classif\
                                            8151 * y_type(void *) == 2 || __builtin_classify_type(void *) == 4) ? sizeo\
                                            8152 * f(void *) : (((sizeof(void *) + sizeof(long) - 1) & ~(sizeof(long) -\
                                            8153 * 1))))));
00004F9E 41F0 3008               00000008   8154          LA    15,8(0,3)
00004FA2 A719 FFF8               0000FFF8   8155          LGHI  1,-8        ; -8
00004FA6 E331 F000 0004          00000000   8156          LG    3,0(1,15)
00004FAC E330 2028 0024          00000028   8157          STG   3,40(0,2)
                                            8158 * ***                           rkm->rkm_rkmessage.key_len = (*(size_t\
                                            8159 *  *)((ap) += (((sizeof(size_t) + sizeof(long) - 1) & ~(sizeof(long) -\
                                            8160 * 1))), (ap) - ((__builtin_classify_type(size_t) == 1 || __builtin_cla\
                                            8161 * ssify_type(size_t) == 2 || __builtin_classify_type(size_t) == 4) ? s\
                                            8162 * izeof(size_t) : (((sizeof(size_t) + sizeof(long) - 1) & ~(sizeof(lon\
                                            8163 * g) -1))))));
00004FB2 4130 F008               00000008   8164          LA    3,8(0,15)
00004FB6 E3F1 3000 0004          00000000   8165          LG    15,0(1,3)
00004FBC E3F0 2030 0024          00000030   8166          STG   15,48(0,2)
                                            8167 * ***                           break;
00004FC2 47F0 C360               00005138   8168          B     @L762
                                            8169 * ***
                                            8170 * ***                   case RD_KAFKA_VTYPE_OPAQUE:
00004FC6                                    8171 @L771    DS    0H
                                            8172 * ***                           rkm->rkm_rkmessage._private = (*(void \
                                            8173 * * *)((ap) += (((sizeof(void *) + sizeof(long) - 1) & ~(sizeof(long) \
                                            8174 * -1))), (ap) - ((__builtin_classify_type(void *) == 1 || __builtin_cl\
                                            8175 * assify_type(void *) == 2 || __builtin_classify_type(void *) == 4) ? \
                                            8176 * sizeof(void *) : (((sizeof(void *) + sizeof(long) - 1) & ~(sizeof(lo\
                                            8177 * ng) -1))))));
00004FC6 4130 3008               00000008   8178          LA    3,8(0,3)
00004FCA A7F9 FFF8               0000FFF8   8179          LGHI  15,-8       ; -8
00004FCE E3FF 3000 0004          00000000   8180          LG    15,0(15,3)
00004FD4 E3F0 2040 0024          00000040   8181          STG   15,64(0,2)
                                            8182 * ***                           break;
00004FDA 47F0 C360               00005138   8183          B     @L762
                                            8184 * ***
                                            8185 * ***                   case RD_KAFKA_VTYPE_MSGFLAGS:
00004FDE                                    8186 @L772    DS    0H
                                            8187 * ***                           rkm->rkm_flags = (*(int *)((ap) += (((\
                                            8188 * sizeof(int) + sizeof(long) - 1) & ~(sizeof(long) -1))), (ap) - ((__b\
                                            8189 * uiltin_classify_type(int) == 1 || __builtin_classify_type(int) == 2 \
                                            8190 * || __builtin_classify_type(int) == 4) ? sizeof(int) : (((sizeof(int)\
                                                                                                                           Page  167 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8191 *  + sizeof(long) - 1) & ~(sizeof(long) -1))))));
00004FDE 4130 3008               00000008   8192          LA    3,8(0,3)
00004FE2 A7F9 FFFC               0000FFFC   8193          LGHI  15,-4       ; -4
00004FE6 58FF 3000               00000000   8194          L     15,0(15,3)
00004FEA 50F0 2058               00000058   8195          ST    15,88(0,2)
                                            8196 * ***                           break;
00004FEE 47F0 C360               00005138   8197          B     @L762
                                            8198 * ***
                                            8199 * ***                   case RD_KAFKA_VTYPE_TIMESTAMP:
00004FF2                                    8200 @L773    DS    0H
                                            8201 * ***                           rkm->rkm_timestamp = (*(int64_t *)((ap\
                                            8202 * ) += (((sizeof(int64_t) + sizeof(long) - 1) & ~(sizeof(long) -1))), \
                                            8203 * (ap) - ((__builtin_classify_type(int64_t) == 1 || __builtin_classify\
                                            8204 * _type(int64_t) == 2 || __builtin_classify_type(int64_t) == 4) ? size\
                                            8205 * of(int64_t) : (((sizeof(int64_t) + sizeof(long) - 1) & ~(sizeof(long\
                                            8206 * ) -1))))));
00004FF2 4130 3008               00000008   8207          LA    3,8(0,3)
00004FF6 A7F9 FFF8               0000FFF8   8208          LGHI  15,-8       ; -8
00004FFA E3FF 3000 0004          00000000   8209          LG    15,0(15,3)
00005000 E3F0 2060 0024          00000060   8210          STG   15,96(0,2)
                                            8211 * ***                           break;
00005006 47F0 C360               00005138   8212          B     @L762
                                            8213 * ***
                                            8214 * ***                   case RD_KAFKA_VTYPE_HEADER:
0000500A                                    8215 @L774    DS    0H
                                            8216 * ***                   {
                                            8217 * ***                           const char *name;
                                            8218 * ***                           const void *value;
                                            8219 * ***                           ssize_t size;
                                            8220 * ***
                                            8221 * ***                           if (((app_hdrs != ((void *)0)))) {
0000500A B902 00F6                          8222          LTGR  15,6
0000500E 4780 C244               0000501C   8223          BE    @L775
                                            8224 * ***                                   err = RD_KAFKA_RESP_ERR__CONFL\
                                            8225 * ICT;
00005012 E54C D150 FF53          00000150   8226          MVHI  336(13),-173 ; err
                                            8227 * ***                                   break;
00005018 47F0 C360               00005138   8228          B     @L762
                                            8229 * ***                           }
0000501C                                    8230 @L775    DS    0H
                                            8231 * ***
                                            8232 * ***                           if (((!hdrs)))
0000501C B902 00F5                          8233          LTGR  15,5
00005020 4770 C262               0000503A   8234          BNZ   @L776
                                            8235 * ***                                   hdrs = rd_kafka_headers_new(8)\
                                            8236 * ;
00005024 E548 D158 0008          00000158   8237          MVGHI 344(13),8
0000502A 4110 D158               00000158   8238          LA    1,344(0,13)
0000502E E3F0 C0C0 0004          00004E98   8239          LG    15,@lit_950_268 ; rd_kafka_headers_new
00005034                                    8240 @@gen_label386 DS    0H
00005034 05EF                               8241          BALR  14,15
00005036                                    8242 @@gen_label387 DS    0H
                                                                                                                           Page  168 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005036 B904 005F                          8243          LGR   5,15        ; hdrs
0000503A                                    8244 @L776    DS    0H
                                            8245 * ***
                                            8246 * ***                           name = (*(const char * *)((ap) += (((s\
                                            8247 * izeof(const char *) + sizeof(long) - 1) & ~(sizeof(long) -1))), (ap)\
                                            8248 *  - ((__builtin_classify_type(const char *) == 1 || __builtin_classif\
                                            8249 * y_type(const char *) == 2 || __builtin_classify_type(const char *) =\
                                            8250 * = 4) ? sizeof(const char *) : (((sizeof(const char *) + sizeof(long)\
                                            8251 *  - 1) & ~(sizeof(long) -1))))));
0000503A 41F0 3008               00000008   8252          LA    15,8(0,3)
0000503E A719 FFF8               0000FFF8   8253          LGHI  1,-8        ; -8
00005042 E381 F000 0004          00000000   8254          LG    8,0(1,15)
                                            8255 * ***                           value = (*(const void * *)((ap) += (((\
                                            8256 * sizeof(const void *) + sizeof(long) - 1) & ~(sizeof(long) -1))), (ap\
                                            8257 * ) - ((__builtin_classify_type(const void *) == 1 || __builtin_classi\
                                            8258 * fy_type(const void *) == 2 || __builtin_classify_type(const void *) \
                                            8259 * == 4) ? sizeof(const void *) : (((sizeof(const void *) + sizeof(long\
                                            8260 * ) - 1) & ~(sizeof(long) -1))))));
00005048 41F0 F008               00000008   8261          LA    15,8(0,15)
0000504C E391 F000 0004          00000000   8262          LG    9,0(1,15)
                                            8263 * ***                           size = (*(ssize_t *)((ap) += (((sizeof\
                                            8264 * (ssize_t) + sizeof(long) - 1) & ~(sizeof(long) -1))), (ap) - ((__bui\
                                            8265 * ltin_classify_type(ssize_t) == 1 || __builtin_classify_type(ssize_t)\
                                            8266 *  == 2 || __builtin_classify_type(ssize_t) == 4) ? sizeof(ssize_t) : \
                                            8267 * (((sizeof(ssize_t) + sizeof(long) - 1) & ~(sizeof(long) -1))))));
00005052 4130 F008               00000008   8268          LA    3,8(0,15)
00005056 E3F1 3000 0004          00000000   8269          LG    15,0(1,3)
                                            8270 * ***
                                            8271 * ***                           err = rd_kafka_header_add(hdrs, name, \
                                            8272 * -1, value, size);
0000505C E350 D158 0024          00000158   8273          STG   5,344(0,13)
00005062 E380 D160 0024          00000160   8274          STG   8,352(0,13)
00005068 E548 D168 FFFF          00000168   8275          MVGHI 360(13),-1
0000506E E390 D170 0024          00000170   8276          STG   9,368(0,13)
00005074 E3F0 D178 0024          00000178   8277          STG   15,376(0,13)
0000507A 4110 D158               00000158   8278          LA    1,344(0,13)
0000507E E3F0 C0C8 0004          00004EA0   8279          LG    15,@lit_950_272 ; rd_kafka_header_add
00005084                                    8280 @@gen_label388 DS    0H
00005084 05EF                               8281          BALR  14,15
00005086                                    8282 @@gen_label389 DS    0H
00005086 50F0 D150               00000150   8283          ST    15,336(0,13) ; err
                                            8284 * ***                   }
                                            8285 * ***                   break;
0000508A 47F0 C360               00005138   8286          B     @L762
                                            8287 * ***
                                            8288 * ***                   case RD_KAFKA_VTYPE_HEADERS:
0000508E                                    8289 @L777    DS    0H
                                            8290 * ***                           if (((hdrs != ((void *)0)))) {
0000508E B902 00F5                          8291          LTGR  15,5
00005092 4780 C2C8               000050A0   8292          BE    @L778
                                            8293 * ***                                   err = RD_KAFKA_RESP_ERR__CONFL\
                                            8294 * ICT;
                                                                                                                           Page  169 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005096 E54C D150 FF53          00000150   8295          MVHI  336(13),-173 ; err
                                            8296 * ***                                   break;
0000509C 47F0 C360               00005138   8297          B     @L762
                                            8298 * ***                           }
000050A0                                    8299 @L778    DS    0H
                                            8300 * ***                           app_hdrs = (*(rd_kafka_headers_t * *)(\
                                            8301 * (ap) += (((sizeof(rd_kafka_headers_t *) + sizeof(long) - 1) & ~(size\
                                            8302 * of(long) -1))), (ap) - ((__builtin_classify_type(rd_kafka_headers_t \
                                            8303 * *) == 1 || __builtin_classify_type(rd_kafka_headers_t *) == 2 || __b\
                                            8304 * uiltin_classify_type(rd_kafka_headers_t *) == 4) ? sizeof(rd_kafka_h\
                                            8305 * eaders_t *) : (((sizeof(rd_kafka_headers_t *) + sizeof(long) - 1) & \
                                            8306 * ~(sizeof(long) -1))))));
000050A0 4130 3008               00000008   8307          LA    3,8(0,3)
000050A4 A7F9 FFF8               0000FFF8   8308          LGHI  15,-8       ; -8
000050A8 E36F 3000 0004          00000000   8309          LG    6,0(15,3)
                                            8310 * ***                           break;
000050AE 47F0 C360               00005138   8311          B     @L762
                                            8312 * ***
                                            8313 * ***                   default:
                                            8314 * ***                           err = RD_KAFKA_RESP_ERR__INVALID_ARG;
000050B2                                    8315 @L779    DS    0H
000050B2 E54C D150 FF46          00000150   8316          MVHI  336(13),-186 ; err
                                            8317 * ***                           break;
000050B8 47F0 C360               00005138   8318          B     @L762
                                            8319 * ***                   }
000050BC                                    8320 @L764    DS    0H
000050BC A7FA FFFF               0000FFFF   8321          AHI   15,-1
000050C0 C2FF 0000 0009                     8322          CLFI  15,X'00000009'
000050C6 4720 C2DA               000050B2   8323          BH    @L779
000050CA B914 00FF                          8324          LGFR  15,15
000050CE 4110 C310               000050E8   8325          LA    1,@@gen_label391
000050D2 EBFF 0003 000D          00000003   8326          SLLG  15,15,3(0)
000050D8 E3F1 F000 0004          00000000   8327          LG    15,0(1,15)
000050DE 47FF C000               00000000   8328          B     0(15,12)
000050E8                                    8329 @@gen_label391 DS    0D
000050E8 0000000000000110                   8330          DC AD(@L766-@REGION_950_1)
000050F0 0000000000000150                   8331          DC AD(@L767-@REGION_950_1)
000050F8 000000000000018A                   8332          DC AD(@L768-@REGION_950_1)
00005100 000000000000019E                   8333          DC AD(@L769-@REGION_950_1)
00005108 00000000000001C6                   8334          DC AD(@L770-@REGION_950_1)
00005110 00000000000001EE                   8335          DC AD(@L771-@REGION_950_1)
00005118 0000000000000206                   8336          DC AD(@L772-@REGION_950_1)
00005120 000000000000021A                   8337          DC AD(@L773-@REGION_950_1)
00005128 0000000000000232                   8338          DC AD(@L774-@REGION_950_1)
00005130 00000000000002B6                   8339          DC AD(@L777-@REGION_950_1)
                                            8340 * ***           }
00005138                                    8341 @L762    DS    0H
00005138 E310 D150 0012          00000150   8342          LT    1,336(0,13) ; err
0000513E 4770 C37C               00005154   8343          BNZ   @L763
                                            8344 * ***                  (vtype = (*(rd_kafka_vtype_t *)((ap) += (((size\
                                            8345 * of(rd_kafka_vtype_t) + sizeof(long) - 1) & ~(sizeof(long) -1))), (ap\
                                            8346 * ) - ((__builtin_classify_type(rd_kafka_vtype_t) == 1 || __builtin_cl\
                                                                                                                           Page  170 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8347 * assify_type(rd_kafka_vtype_t) == 2 || __builtin_classify_type(rd_kaf\
                                            8348 * ka_vtype_t) == 4) ? sizeof(rd_kafka_vtype_t) : (((sizeof(rd_kafka_vt\
                                            8349 * ype_t) + sizeof(long) - 1) & ~(sizeof(long) -1))))))) != RD_KAFKA_VT\
                                            8350 * YPE_END) {
00005142 4130 3008               00000008   8351          LA    3,8(0,3)
00005146 A7F9 FFFC               0000FFFC   8352          LGHI  15,-4       ; -4
0000514A E3FF 3000 0012          00000000   8353          LT    15,0(15,3)
00005150 4770 C2E4               000050BC   8354          BNE   @L764
00005154                                    8355 @L763    DS    0H
                                            8356 * ***
                                            8357 * ***           ;
                                            8358 * ***
                                            8359 * ***           if (((!rkt)))
00005154 B902 00F4                          8360          LTGR  15,4
00005158 4770 C38C               00005164   8361          BNZ   @L780
                                            8362 * ***                   return RD_KAFKA_RESP_ERR__INVALID_ARG;
0000515C A7F9 FF46               0000FF46   8363          LGHI  15,-186     ; -186
00005160 47F0 C52C               00005304   8364          B     @ret_lab_950
00005164                                    8365 @L780    DS    0H
                                            8366 * ***
                                            8367 * ***           if (((!err)))
00005164 1211                               8368          LTR   1,1
00005166 4770 C440               00005218   8369          BNZ   @L781
                                            8370 * ***                   rkm = rd_kafka_msg_new0(rkt,
                                            8371 * ***                                           rkm->rkm_rkmessage.par\
                                            8372 * tition,
                                            8373 * ***                                           rkm->rkm_flags,
                                            8374 * ***                                           rkm->rkm_rkmessage.pay\
                                            8375 * load, rkm->rkm_rkmessage.len,
                                            8376 * ***                                           rkm->rkm_rkmessage.key\
                                            8377 * , rkm->rkm_rkmessage.key_len,
                                            8378 * ***                                           rkm->rkm_rkmessage._pr\
                                            8379 * ivate,
                                            8380 * ***                                           &err, ((void *)0),
                                            8381 * ***                                           app_hdrs ? app_hdrs : \
                                            8382 * hdrs,
                                            8383 * ***                                           rkm->rkm_timestamp,
                                            8384 * ***                                           rd_clock());
0000516A B902 00F6                          8385          LTGR  15,6
0000516E 4780 C3A2               0000517A   8386          BZ    @L782
00005172 B904 0036                          8387          LGR   3,6
00005176 47F0 C3A6               0000517E   8388          B     @L783
0000517A                                    8389 @L782    DS    0H
0000517A B904 0035                          8390          LGR   3,5
0000517E                                    8391 @L783    DS    0H
0000517E E3F0 C0D0 0004          00004EA8   8392          LG    15,@lit_950_277 ; rd_clock
00005184                                    8393 @@gen_label397 DS    0H
00005184 05EF                               8394          BALR  14,15
00005186                                    8395 @@gen_label398 DS    0H
00005186 E340 D158 0024          00000158   8396          STG   4,344(0,13)
0000518C E310 2010 0014          00000010   8397          LGF   1,16(0,2)
00005192 E310 D160 0024          00000160   8398          STG   1,352(0,13)
                                                                                                                           Page  171 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005198 E310 2058 0014          00000058   8399          LGF   1,88(0,2)
0000519E E310 D168 0024          00000168   8400          STG   1,360(0,13)
000051A4 E310 2018 0004          00000018   8401          LG    1,24(0,2)
000051AA E310 D170 0024          00000170   8402          STG   1,368(0,13)
000051B0 E310 2020 0004          00000020   8403          LG    1,32(0,2)
000051B6 E310 D178 0024          00000178   8404          STG   1,376(0,13)
000051BC E310 2028 0004          00000028   8405          LG    1,40(0,2)
000051C2 E310 D180 0024          00000180   8406          STG   1,384(0,13)
000051C8 E310 2030 0004          00000030   8407          LG    1,48(0,2)
000051CE E310 D188 0024          00000188   8408          STG   1,392(0,13)
000051D4 E310 2040 0004          00000040   8409          LG    1,64(0,2)
000051DA E310 D190 0024          00000190   8410          STG   1,400(0,13)
000051E0 4110 D150               00000150   8411          LA    1,336(0,13)
000051E4 E310 D198 0024          00000198   8412          STG   1,408(0,13)
000051EA D707 D1A0 D1A0 000001A0 000001A0   8413          XC    416(8,13),416(13)
000051F0 E330 D1A8 0024          000001A8   8414          STG   3,424(0,13)
000051F6 E310 2060 0004          00000060   8415          LG    1,96(0,2)
000051FC E310 D1B0 0024          000001B0   8416          STG   1,432(0,13)
00005202 E3F0 D1B8 0024          000001B8   8417          STG   15,440(0,13)
00005208 4110 D158               00000158   8418          LA    1,344(0,13)
0000520C E3F0 C0D8 0004          00004EB0   8419          LG    15,@lit_950_278 ; rd_kafka_msg_new0
00005212                                    8420 @@gen_label399 DS    0H
00005212 05EF                               8421          BALR  14,15
00005214                                    8422 @@gen_label400 DS    0H
00005214 B904 002F                          8423          LGR   2,15        ; rkm
00005218                                    8424 @L781    DS    0H
                                            8425 * ***
                                            8426 * ***           if (((err))) {
00005218 E3F0 D150 0012          00000150   8427          LT    15,336(0,13) ; err
0000521E 4780 C480               00005258   8428          BZ    @L784
                                            8429 * ***                   rd_kafka_topic_destroy0(rkt);
00005222 E340 D158 0024          00000158   8430          STG   4,344(0,13)
00005228 4110 D158               00000158   8431          LA    1,344(0,13)
0000522C E3F0 C0E0 0004          00004EB8   8432          LG    15,@lit_950_279 ; rd_kafka_topic_destroy0
00005232                                    8433 @@gen_label402 DS    0H
00005232 05EF                               8434          BALR  14,15
00005234                                    8435 @@gen_label403 DS    0H
                                            8436 * ***                   if (hdrs)
00005234 B902 00F5                          8437          LTGR  15,5
00005238 4780 C476               0000524E   8438          BZ    @L785
                                            8439 * ***                           rd_kafka_headers_destroy(hdrs);
0000523C E350 D158 0024          00000158   8440          STG   5,344(0,13)
00005242 4110 D158               00000158   8441          LA    1,344(0,13)
00005246 E3F0 C0E8 0004          00004EC0   8442          LG    15,@lit_950_280 ; rd_kafka_headers_destroy
0000524C                                    8443 @@gen_label405 DS    0H
0000524C 05EF                               8444          BALR  14,15
0000524E                                    8445 @@gen_label406 DS    0H
0000524E                                    8446 @L785    DS    0H
                                            8447 * ***                   return err;
0000524E E3F0 D150 0014          00000150   8448          LGF   15,336(0,13) ; err
00005254 47F0 C52C               00005304   8449          B     @ret_lab_950
                                            8450 * ***           }
                                                                                                                           Page  172 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005258                                    8451 @L784    DS    0H
                                            8452 * ***
                                            8453 * ***
                                            8454 * ***           err = rd_kafka_msg_partitioner(rkt, rkm, 1);
00005258 E340 D158 0024          00000158   8455          STG   4,344(0,13)
0000525E E320 D160 0024          00000160   8456          STG   2,352(0,13)
00005264 E548 D168 0001          00000168   8457          MVGHI 360(13),1
0000526A 4110 D158               00000158   8458          LA    1,344(0,13)
0000526E E3F0 C0F0 0004          00004EC8   8459          LG    15,@lit_950_281 ; rd_kafka_msg_partitioner
00005274                                    8460 @@gen_label407 DS    0H
00005274 05EF                               8461          BALR  14,15
00005276                                    8462 @@gen_label408 DS    0H
00005276 50F0 D150               00000150   8463          ST    15,336(0,13) ; err
                                            8464 * ***           if (((err))) {
0000527A 12FF                               8465          LTR   15,15
0000527C 4780 C514               000052EC   8466          BZ    @L786
                                            8467 * ***
                                            8468 * ***
                                            8469 * ***
                                            8470 * ***
                                            8471 * ***
                                            8472 * ***                   rkm->rkm_rkmessage.err = err;
00005280 50F0 2000               00000000   8473          ST    15,0(0,2)   ; rkm
                                            8474 * ***                   rd_kafka_interceptors_on_acknowledgement(rk,
                                            8475 * ***                                                            &rkm-\
                                            8476 * >rkm_rkmessage);
00005284 E3F0 7000 0004          00000000   8477          LG    15,0(0,7)   ; rk
0000528A E3F0 D158 0024          00000158   8478          STG   15,344(0,13)
00005290 E320 D160 0024          00000160   8479          STG   2,352(0,13)
00005296 4110 D158               00000158   8480          LA    1,344(0,13)
0000529A E3F0 C0F8 0004          00004ED0   8481          LG    15,@lit_950_282 ; rd_kafka_interceptors_on_acknowledgeme*
                                                                nt
000052A0                                    8482 @@gen_label410 DS    0H
000052A0 05EF                               8483          BALR  14,15
000052A2                                    8484 @@gen_label411 DS    0H
                                            8485 * ***
                                            8486 * ***
                                            8487 * ***
                                            8488 * ***
                                            8489 * ***                   rkm->rkm_flags &= ~0x1;
000052A2 58F0 2058               00000058   8490          L     15,88(0,2)
000052A6 A5F7 FFFE               0000FFFE   8491          NILL  15,65534
000052AA 50F0 2058               00000058   8492          ST    15,88(0,2)
                                            8493 * ***
                                            8494 * ***
                                            8495 * ***
                                            8496 * ***
                                            8497 * ***                   if (app_hdrs && app_hdrs == rkm->rkm_headers)
000052AE B902 00F6                          8498          LTGR  15,6
000052B2 4780 C4F6               000052CE   8499          BZ    @L787
000052B6 E3F0 2068 0004          00000068   8500          LG    15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000052BC B920 006F                          8501          CGR   6,15
                                                                                                                           Page  173 
  Active Usings: @REGION_950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000052C0 4770 C4F6               000052CE   8502          BNE   @L787
                                            8503 * ***                           rkm->rkm_headers = ((void *)0);
000052C4 A7F9 0000               00000000   8504          LGHI  15,0        ; 0
000052C8 E3F0 2068 0024          00000068   8505          STG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000052CE                                    8506 @L787    DS    0H
                                            8507 * ***
                                            8508 * ***                   rd_kafka_msg_destroy(rk, rkm);
000052CE E3F0 7000 0004          00000000   8509          LG    15,0(0,7)   ; rk
000052D4 E3F0 D158 0024          00000158   8510          STG   15,344(0,13)
000052DA E320 D160 0024          00000160   8511          STG   2,352(0,13)
000052E0 4110 D158               00000158   8512          LA    1,344(0,13)
000052E4 E3F0 C100 0004          00004ED8   8513          LG    15,@lit_950_284 ; rd_kafka_msg_destroy
000052EA                                    8514 @@gen_label414 DS    0H
000052EA 05EF                               8515          BALR  14,15
000052EC                                    8516 @@gen_label415 DS    0H
                                            8517 * ***           }
000052EC                                    8518 @L786    DS    0H
                                            8519 * ***
                                            8520 * ***           rd_kafka_topic_destroy0(rkt);
000052EC E340 D158 0024          00000158   8521          STG   4,344(0,13)
000052F2 4110 D158               00000158   8522          LA    1,344(0,13)
000052F6 E3F0 C0E0 0004          00004EB8   8523          LG    15,@lit_950_279 ; rd_kafka_topic_destroy0
000052FC                                    8524 @@gen_label416 DS    0H
000052FC 05EF                               8525          BALR  14,15
000052FE                                    8526 @@gen_label417 DS    0H
                                            8527 * ***
                                            8528 * ***           return err;
000052FE E3F0 D150 0014          00000150   8529          LGF   15,336(0,13) ; err
                                            8530 * ***   }
00005304                                    8531 @ret_lab_950 DS 0H
                                            8532 * * **** Start of Epilogue
                                            8533          DCCEPIL
00005304                                    8534+         ds 0h                                                          01-DCCEP
                                            8535+* Epilog
00005304 D707 D088 D088 00000088 00000088   8536+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000530A E3D0 D080 0004          00000080   8537+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005310 E3C0 D090 0004          00000090   8538+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005316 E3B0 C018 0004          00000018   8539+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000531C E3C0 B010 0021          00000010   8540+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005322 E3E0 D008 0004          00000008   8541+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005328 EB1C D020 0004          00000020   8542+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000532E 078E                               8543+         bcr 8,14                if same dsab, just return              01-DCCEP
00005330 E3F0 D010 0024          00000010   8544+         stg 15,16(0,13)         save return code                       01-DCCEP
00005336 E300 D018 0024          00000018   8545+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000533C E3F0 D090 0004          00000090   8546+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005342 E3F0 F018 0004          00000018   8547+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005348 47F0 F040               00000040   8548+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8549+* End of Epilog
                                            8550 * * **** End of Epilogue
                                            8551          DROP  12
                                            8552 *
                                            8553 *   DSECT for automatic variables in "rd_kafka_producev"
                                                                                                                           Page  174 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8554 *      (FUNCTION #950)
                                            8555 *
00000000                00000000 00000154   8556 @AUTO#rd_kafka_producev DSECT
00000000                                    8557          DS    XL168
000000A8                                    8558 rd_kafka_producev#size#3 DS 8XL1 ; size
000000B0                000000B0 000000A8   8559          ORG   @AUTO#rd_kafka_producev+168
000000A8                                    8560 rd_kafka_producev#vtype#0 DS 1F ; vtype
000000AC                000000AC 000000A8   8561          ORG   @AUTO#rd_kafka_producev+168
000000A8                                    8562 rd_kafka_producev#s_rkm#0 DS 168XL1 ; s_rkm
00000150                00000150 00000150   8563          ORG   @AUTO#rd_kafka_producev+336
00000150                                    8564 rd_kafka_producev#err#0 DS 1F ; err
                                            8565 *
0000534C                00000000 0000E868   8566 @CODE    CSECT
                                            8567 *
                                            8568 *
                                            8569 *
                                            8570 * ....... start of rd_kafka_produce
                                            8571 rd_kafka_produce ALIAS X'99846D92818692816D97999684A48385'
0000534C                                    8572 @LNAME949 DS   0H
0000534C 00000010                           8573          DC    X'00000010'
00005350 99846D9281869281                   8574          DC    C'rd_kafka_produce'
00005360 00                                 8575          DC    X'00'
                                            8576 rd_kafka_produce DCCPRLG CINDEX=949,BASER=12,FRAME=232,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME949
                                            8577          macro
                                            8578          dccextrn &m
                                            8579          gblc    &$dccext(1000)
                                            8580          gbla    &$dccexti
                                            8581          lcla    &i
                                            8582 &$dccext(&$dccexti+1) setc    '&m'
                                            8583 &i       seta    1
                                            8584 .loop    aif    (&i gt &$dccexti).around
                                            8585          aif    ('&$dccext(&i)' eq '&m').getout
                                            8586 &i       seta    &i+1
                                            8587          ago     .loop
                                            8588 .around  anop
                                            8589 &$dccexti seta &$dccexti+1
                                            8590          extrn  &m
                                            8591 .getout  anop
                                            8592          mend
00005368                                    8593+$eye0171    ds    0d                                                    02-DCCCA
00005368 C4C3C3                             8594+         dc cl3'DCC'                                                    02-DCCCA
0000536B 01                                 8595+         dc xl1'01' format one                                          02-DCCCA
0000536C 00000000                           8596+         dc a(0)                                                        02-DCCCA
00005370 00000000000053DA                   8597+         dc ad(@PER_949)                                                02-DCCCA
00005378 00000000000000E8                   8598+         dc ad(232)                                                     02-DCCCA
00005380 0000000000000000                   8599+         dc ad(0)                                                       02-DCCCA
00005388 0000000000001000                   8600+         dc ad(4096)                                                    02-DCCCA
00005390 20                                 8601+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005391 03                                 8602+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005392 03                                 8603+         dc al1(3)                                                      02-DCCCA
00005393 08                                 8604+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  175 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005394 00                                 8605+         dc bl.8'00000000'                                              02-DCCCA
00005395 000000                             8606+         dc al3(0)                                                      02-DCCCA
00005398 000000000000534C                   8607+         dc ad(@LNAME949)                                               02-DCCCA
000053A0                                    8608+         ds 0d                                                          02-DCCCA
000053A0 0000000000005368                   8609+         dc ad($eye0171)                                                02-DCCCA
000053A8 0000000000000000                   8610+         dc ad(0)                                                       02-DCCCA
000053B0                                    8611+         ds    0d                                                       01-DCCPR
                                            8612+         entry rd_kafka_produce                                         01-DCCPR
000053B0                                    8613+rd_kafka_produce ds 0d                                                  01-DCCPR
000053B0                                    8614+@REGION_949_1 ds 0h                                                     01-DCCPR
000053B0 EBEC D008 0024          00000008   8615+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000053B6 E3E0 D088 0004          00000088   8616+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000053BC E3C0 D090 0004          00000090   8617+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000053C2 B904 002E                          8618+         lgr   2,14                copy addr of our savearea            01-DCCPR
000053C6 E3B0 C018 0004          00000018   8619+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000053CC A7EB 00E8               000000E8   8620+         aghi  14,232              increase by frame size               01-DCCPR
000053D0 E3E0 C020 0021          00000020   8621+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000053D6 4720 B020               00000020   8622+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000053DA                                    8623+@PER_949 ds    0h                                                       01-DCCPR
000053DA EBDE 2080 0024          00000080   8624+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000053E0 E3C0 2090 0024          00000090   8625+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000053E6 B904 00D2                          8626+         lgr   13,2                set real frame pointer               01-DCCPR
000053EA B904 00CF                          8627+         lgr   12,15               set base reg                         01-DCCPR
                        000053B0            8628+         using @REGION_949_1,12                                         01-DCCPR
                                            8629 * ******* End of Prologue
                                            8630 * *
                                            8631 * ***           return rd_kafka_msg_new(rkt, partition,
                                            8632 * ***                                   msgflags, payload, len,
                                            8633 * ***                                   key, keylen, msg_opaque);
000053EE E3F0 1000 0004          00000000   8634          LG    15,0(0,1)   ; rkt
000053F4 E3F0 D0A8 0024          000000A8   8635          STG   15,168(0,13)
000053FA E3F0 100C 0014          0000000C   8636          LGF   15,12(0,1)  ; partition
00005400 E3F0 D0B0 0024          000000B0   8637          STG   15,176(0,13)
00005406 E3F0 1014 0014          00000014   8638          LGF   15,20(0,1)  ; msgflags
0000540C E3F0 D0B8 0024          000000B8   8639          STG   15,184(0,13)
00005412 E3F0 1018 0004          00000018   8640          LG    15,24(0,1)  ; payload
00005418 E3F0 D0C0 0024          000000C0   8641          STG   15,192(0,13)
0000541E E3F0 1020 0004          00000020   8642          LG    15,32(0,1)  ; len
00005424 E3F0 D0C8 0024          000000C8   8643          STG   15,200(0,13)
0000542A E3F0 1028 0004          00000028   8644          LG    15,40(0,1)  ; key
00005430 E3F0 D0D0 0024          000000D0   8645          STG   15,208(0,13)
00005436 E3F0 1030 0004          00000030   8646          LG    15,48(0,1)  ; keylen
0000543C E3F0 D0D8 0024          000000D8   8647          STG   15,216(0,13)
00005442 E3F0 1038 0004          00000038   8648          LG    15,56(0,1)  ; msg_opaque
00005448 E3F0 D0E0 0024          000000E0   8649          STG   15,224(0,13)
0000544E 4110 D0A8               000000A8   8650          LA    1,168(0,13)
00005452 E3F0 C100 0004          000054B0   8651          LG    15,@lit_949_287 ; rd_kafka_msg_new
00005458                                    8652 @@gen_label418 DS    0H
00005458 05EF                               8653          BALR  14,15
0000545A                                    8654 @@gen_label419 DS    0H
0000545A B914 00FF                          8655          LGFR  15,15
                                            8656 * ***   }
                                                                                                                           Page  176 
  Active Usings: @REGION_949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8657 * * **** Start of Epilogue
                                            8658          DCCEPIL
0000545E                                    8659+         ds 0h                                                          01-DCCEP
                                            8660+* Epilog
0000545E D707 D088 D088 00000088 00000088   8661+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005464 E3D0 D080 0004          00000080   8662+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000546A E3C0 D090 0004          00000090   8663+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005470 E3B0 C018 0004          00000018   8664+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005476 E3C0 B010 0021          00000010   8665+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000547C E3E0 D008 0004          00000008   8666+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005482 EB1C D020 0004          00000020   8667+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005488 078E                               8668+         bcr 8,14                if same dsab, just return              01-DCCEP
0000548A E3F0 D010 0024          00000010   8669+         stg 15,16(0,13)         save return code                       01-DCCEP
00005490 E300 D018 0024          00000018   8670+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005496 E3F0 D090 0004          00000090   8671+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000549C E3F0 F018 0004          00000018   8672+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000054A2 47F0 F040               00000040   8673+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8674+* End of Epilog
                                            8675 * * **** End of Epilogue
000054A8                                    8676          DS    0D
000054A8 000000E8                           8677 @FRAMESIZE_949 DC F'232'
000054AC 00000000
000054B0 00000000000042E8                   8678 @lit_949_287 DC AD(rd_kafka_msg_new)
                                            8679          DROP  12
                                            8680 *
                                            8681 *   DSECT for automatic variables in "rd_kafka_produce"
                                            8682 *      (FUNCTION #949)
                                            8683 *
00000000                00000000 000000A8   8684 @AUTO#rd_kafka_produce DSECT
00000000                                    8685          DS    XL168
                                            8686 *
000054B8                00000000 0000E868   8687 @CODE    CSECT
                                            8688 *
                                            8689 *
                                            8690 *
                                            8691 * ....... start of rd_kafka_produce_batch
                                            8692 rd_kafka_produce_batch ALIAS X'99846D92818692816D97999684A483856D8281A3*
                                                                8388'
000054B8                                    8693 @LNAME952 DS   0H
000054B8 00000016                           8694          DC    X'00000016'
000054BC 99846D9281869281                   8695          DC    C'rd_kafka_produce_batch'
000054D2 00                                 8696          DC    X'00'
                                            8697 rd_kafka_produce_batch DCCPRLG CINDEX=952,BASER=12,FRAME=344,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME952
                                            8698          macro
                                            8699          dccextrn &m
                                            8700          gblc    &$dccext(1000)
                                            8701          gbla    &$dccexti
                                            8702          lcla    &i
                                            8703 &$dccext(&$dccexti+1) setc    '&m'
                                            8704 &i       seta    1
                                            8705 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  177 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8706          aif    ('&$dccext(&i)' eq '&m').getout
                                            8707 &i       seta    &i+1
                                            8708          ago     .loop
                                            8709 .around  anop
                                            8710 &$dccexti seta &$dccexti+1
                                            8711          extrn  &m
                                            8712 .getout  anop
                                            8713          mend
000054D8                                    8714+$eye0174    ds    0d                                                    02-DCCCA
000054D8 C4C3C3                             8715+         dc cl3'DCC'                                                    02-DCCCA
000054DB 01                                 8716+         dc xl1'01' format one                                          02-DCCCA
000054DC 00000000                           8717+         dc a(0)                                                        02-DCCCA
000054E0 000000000000554A                   8718+         dc ad(@PER_952)                                                02-DCCCA
000054E8 0000000000000158                   8719+         dc ad(344)                                                     02-DCCCA
000054F0 0000000000000000                   8720+         dc ad(0)                                                       02-DCCCA
000054F8 0000000000001000                   8721+         dc ad(4096)                                                    02-DCCCA
00005500 20                                 8722+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005501 03                                 8723+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005502 03                                 8724+         dc al1(3)                                                      02-DCCCA
00005503 08                                 8725+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005504 00                                 8726+         dc bl.8'00000000'                                              02-DCCCA
00005505 000000                             8727+         dc al3(0)                                                      02-DCCCA
00005508 00000000000054B8                   8728+         dc ad(@LNAME952)                                               02-DCCCA
00005510                                    8729+         ds 0d                                                          02-DCCCA
00005510 00000000000054D8                   8730+         dc ad($eye0174)                                                02-DCCCA
00005518 0000000000000000                   8731+         dc ad(0)                                                       02-DCCCA
00005520                                    8732+         ds    0d                                                       01-DCCPR
                                            8733+         entry rd_kafka_produce_batch                                   01-DCCPR
00005520                                    8734+rd_kafka_produce_batch ds 0d                                            01-DCCPR
00005520                                    8735+@REGION_952_1 ds 0h                                                     01-DCCPR
00005520 EBEC D008 0024          00000008   8736+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005526 E3E0 D088 0004          00000088   8737+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000552C E3C0 D090 0004          00000090   8738+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005532 B904 002E                          8739+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005536 E3B0 C018 0004          00000018   8740+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000553C A7EB 0158               00000158   8741+         aghi  14,344              increase by frame size               01-DCCPR
00005540 E3E0 C020 0021          00000020   8742+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005546 4720 B020               00000020   8743+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000554A                                    8744+@PER_952 ds    0h                                                       01-DCCPR
0000554A EBDE 2080 0024          00000080   8745+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005550 E3C0 2090 0024          00000090   8746+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005556 B904 00D2                          8747+         lgr   13,2                set real frame pointer               01-DCCPR
0000555A B904 00CF                          8748+         lgr   12,15               set base reg                         01-DCCPR
                        00005520            8749+         using @REGION_952_1,12                                         01-DCCPR
0000555E B904 0071                          8750          LGR   7,1
                                            8751 * ******* End of Prologue
                                            8752 * *
                                            8753 * ***           rd_kafka_msgq_t tmpq = { .rkmq_msgs = { (((void *)0)),\
                                            8754 *  &((tmpq).rkmq_msgs).tqh_first } };
00005562 58B0 700C               0000000C   8755          L     11,12(0,7)  ; partition
00005566 5880 7014               00000014   8756          L     8,20(0,7)   ; msgflags
0000556A E340 7018 0004          00000018   8757          LG    4,24(0,7)   ; rkmessages
                                                                                                                           Page  178 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005570 41F0 D0B0               000000B0   8758          LA    15,176(0,13)
00005574 E3F0 D0B8 0024          000000B8   8759          STG   15,184(0,13)
                                            8760 * setting 8 bytes to 0x00
0000557A D707 D0B0 D0B0 000000B0 000000B0   8761          XC    176(8,13),176(13)
                                            8762 * setting 16 bytes to 0x00
00005580 D70F D0C0 D0C0 000000C0 000000C0   8763          XC    192(16,13),192(13)
                                            8764 * ***           int i;
                                            8765 * ***      int64_t utc_now = rd_uclock() / 1000;
00005586 E3F0 C0B0 0004          000055D0   8766          LG    15,@lit_952_289 ; rd_uclock
0000558C                                    8767 @@gen_label420 DS    0H
0000558C 05EF                               8768          BALR  14,15
0000558E                                    8769 @@gen_label421 DS    0H
0000558E B904 003F                          8770          LGR   3,15
00005592 E320 C0C0 001D          000055E0   8771          DSGF  2,@lit_952_290
00005598 E330 D140 0024          00000140   8772          STG   3,320(0,13) ; spill
                                            8773 * ***           rd_ts_t now = rd_clock();
0000559E E3F0 C0B8 0004          000055D8   8774          LG    15,@lit_952_291 ; rd_clock
000055A4                                    8775 @@gen_label422 DS    0H
000055A4 05EF                               8776          BALR  14,15
000055A6                                    8777 @@gen_label423 DS    0H
000055A6 E3F0 D148 0024          00000148   8778          STG   15,328(0,13) ; spill
                                            8779 * ***           int good = 0;
000055AC A798 0000               00000000   8780          LHI   9,0         ; 0
                                            8781 * ***           int multiple_partitions = (partition == ((int32_t)-1) \
                                            8782 * ||
000055B0 A7BE FFFF               0000FFFF   8783          CHI   11,-1
000055B4 4780 C0A0               000055C0   8784          BE    @L788
                                            8785 * ***                                      (msgflags & 0x8));
000055B8 A781 0008               00000008   8786          TML   8,8
000055BC 4780 C130               00005650   8787          BZ    @L790
000055C0                                    8788 @L788    DS    0H
000055C0 A7A8 0001               00000001   8789          LHI   10,1        ; 1
000055C4 47F0 C132               00005652   8790          B     @L789
000055C8                                    8791          DS    0D
000055C8 00000158                           8792 @FRAMESIZE_952 DC F'344'
000055CC 00000000
000055D0 0000000000000BF0                   8793 @lit_952_289 DC AD(rd_uclock)
000055D8 0000000000000AD0                   8794 @lit_952_291 DC AD(rd_clock)
000055E0 000003E8                           8795 @lit_952_290 DC F'1000' 0x000003e8
000055E4 00000000
000055E8 0000000000000000                   8796 @lit_952_295 DC AD(rd_kafka_topic_proper)
000055F0 0000000000003840                   8797 @lit_952_297 DC AD(rd_kafka_check_produce)
000055F8 0000000000000000                   8798 @lit_952_298 DC AD(rwlock_rdlock)
00005600 0000000000000000                   8799 @lit_952_299 DC AD(rd_kafka_toppar_get_avail)
00005608 0000000000003F50                   8800 @lit_952_301 DC AD(rd_kafka_msg_new0)
00005610 0000000000007430                   8801 @lit_952_302 DC AD(rd_kafka_msg_partitioner)
00005618 0000000000000958                   8802 @lit_952_303 DC AD(rd_refcnt_sub0)
00005620 0000000000000000                   8803 @lit_952_304 DC AD(rd_kafka_toppar_destroy_final)
00005628 0000000000000000                   8804 @lit_952_306 DC AD(rd_kafka_toppar_enq_msg)
00005630 00000000000032F0                   8805 @lit_952_307 DC AD(rd_kafka_txn_add_partition)
00005638 0000000000000000                   8806 @lit_952_308 DC AD(rd_kafka_interceptors_on_acknowledgement)
00005640 0000000000003AE0                   8807 @lit_952_309 DC AD(rd_kafka_msg_destroy)
                                                                                                                           Page  179 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005648 0000000000000000                   8808 @lit_952_311 DC AD(rwlock_rdunlock)
00005650                                    8809 @L790    DS    0H
00005650 18A9                               8810          LR    10,9
00005652                                    8811 @L789    DS    0H
                                            8812 * ***           rd_kafka_resp_err_t all_err;
                                            8813 * ***           rd_kafka_topic_t *rkt = rd_kafka_topic_proper(app_rkt)\
                                            8814 * ;
00005652 E3F0 7000 0004          00000000   8815          LG    15,0(0,7)   ; app_rkt
00005658 E3F0 D0D8 0024          000000D8   8816          STG   15,216(0,13)
0000565E 4110 D0D8               000000D8   8817          LA    1,216(0,13)
00005662 E3F0 C0C8 0004          000055E8   8818          LG    15,@lit_952_295 ; rd_kafka_topic_proper
00005668                                    8819 @@gen_label426 DS    0H
00005668 05EF                               8820          BALR  14,15
0000566A                                    8821 @@gen_label427 DS    0H
0000566A B904 005F                          8822          LGR   5,15
                                            8823 * ***           rd_kafka_toppar_t *rktp = ((void *)0);
0000566E A739 0000               00000000   8824          LGHI  3,0         ; 0
                                            8825 * ***
                                            8826 * ***
                                            8827 * ***           all_err = rd_kafka_check_produce(rkt->rkt_rk, ((void *\
                                            8828 * )0));
00005672 E3F0 F148 0004          00000148   8829          LG    15,328(0,15)
00005678 E3F0 D0D8 0024          000000D8   8830          STG   15,216(0,13)
0000567E D707 D0E0 D0E0 000000E0 000000E0   8831          XC    224(8,13),224(13)
00005684 4110 D0D8               000000D8   8832          LA    1,216(0,13)
00005688 E3F0 C0D0 0004          000055F0   8833          LG    15,@lit_952_297 ; rd_kafka_check_produce
0000568E                                    8834 @@gen_label428 DS    0H
0000568E 05EF                               8835          BALR  14,15
00005690                                    8836 @@gen_label429 DS    0H
00005690 50F0 D0D0               000000D0   8837          ST    15,208(0,13) ; all_err
                                            8838 * ***
                                            8839 * ***           rwlock_rdlock(&(rkt)->rkt_lock);
00005694 41F0 5048               00000048   8840          LA    15,72(0,5)
00005698 E3F0 D0D8 0024          000000D8   8841          STG   15,216(0,13)
0000569E 4110 D0D8               000000D8   8842          LA    1,216(0,13)
000056A2 E3F0 C0D8 0004          000055F8   8843          LG    15,@lit_952_298 ; rwlock_rdlock
000056A8                                    8844 @@gen_label430 DS    0H
000056A8 05EF                               8845          BALR  14,15
000056AA                                    8846 @@gen_label431 DS    0H
                                            8847 * ***           if (!multiple_partitions) {
000056AA 12AA                               8848          LTR   10,10
000056AC 4770 C1C4               000056E4   8849          BNZ   @L791
                                            8850 * ***
                                            8851 * ***                   rktp = rd_kafka_toppar_get_avail(rkt, partitio\
                                            8852 * n,
                                            8853 * ***                                                    1, &all_err);
000056B0 E350 D0D8 0024          000000D8   8854          STG   5,216(0,13)
000056B6 B914 00FB                          8855          LGFR  15,11
000056BA E3F0 D0E0 0024          000000E0   8856          STG   15,224(0,13)
000056C0 E548 D0E8 0001          000000E8   8857          MVGHI 232(13),1
000056C6 41F0 D0D0               000000D0   8858          LA    15,208(0,13)
000056CA E3F0 D0F0 0024          000000F0   8859          STG   15,240(0,13)
                                                                                                                           Page  180 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000056D0 4110 D0D8               000000D8   8860          LA    1,216(0,13)
000056D4 E3F0 C0E0 0004          00005600   8861          LG    15,@lit_952_299 ; rd_kafka_toppar_get_avail
000056DA                                    8862 @@gen_label433 DS    0H
000056DA 05EF                               8863          BALR  14,15
000056DC                                    8864 @@gen_label434 DS    0H
000056DC B904 003F                          8865          LGR   3,15        ; rktp
                                            8866 * ***
                                            8867 * ***           } else {
000056E0 47F0 C1C8               000056E8   8868          B     @L792
000056E4                                    8869 @L791    DS    0H
                                            8870 * ***
                                            8871 * ***
                                            8872 * ***                   msgflags |= 0x100000;
000056E4 A58A 0010               00000010   8873          OILH  8,16
                                            8874 * ***           }
000056E8                                    8875 @L792    DS    0H
                                            8876 * ***
                                            8877 * ***           for (i = 0 ; i < message_cnt ; i++) {
000056E8 1829                               8878          LR    2,9         ; i
000056EA 47F0 C54A               00005A6A   8879          B     @L794
000056EE                                    8880 @L793    DS    0H
                                            8881 * ***                   rd_kafka_msg_t *rkm;
                                            8882 * ***
                                            8883 * ***
                                            8884 * ***                   if (((all_err))) {
000056EE E310 D0D0 0012          000000D0   8885          LT    1,208(0,13) ; all_err
000056F4 4780 C1F4               00005714   8886          BZ    @L797
                                            8887 * ***                           rkmessages[i].err = all_err;
000056F8 B914 0062                          8888          LGFR  6,2
000056FC EBF6 0003 000D          00000003   8889          SLLG  15,6,3(0)   ;   .
00005702 B90A 00F6                          8890          ALGR  15,6        ;   .
00005706 EBFF 0003 000D          00000003   8891          SLLG  15,15,3(0)  ;   .
0000570C 501F 4000               00000000   8892          ST    1,0(15,4)
                                            8893 * ***                           continue;
00005710 47F0 C546               00005A66   8894          B     @L796
                                            8895 * ***                   }
00005714                                    8896 @L797    DS    0H
                                            8897 * ***
                                            8898 * ***
                                            8899 * ***                   rkm = rd_kafka_msg_new0(rkt,
                                            8900 * ***                                           (msgflags & 0x8) ?
                                            8901 * ***                                           msgflags,
                                            8902 * ***                                           rkmessages[i].payload,
                                            8903 * ***                                           rkmessages[i].len,
                                            8904 * ***                                           rkmessages[i].key,
                                            8905 * ***                                           rkmessages[i].key_len,
                                            8906 * ***                                           rkmessages[i]._private\
                                            8907 * ,
                                            8908 * ***                                           &rkmessages[i].err, ((\
                                            8909 * void *)0),
                                            8910 * ***                  ((void *)0), utc_now, now);
00005714 A781 0008               00000008   8911          TML   8,8
                                                                                                                           Page  181 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005718 4780 C218               00005738   8912          BZ    @L798
                                            8913 * ***                                           rkmessages[i].partitio\
                                            8914 * n : partition,
0000571C B914 00F2                          8915          LGFR  15,2
00005720 EB1F 0003 000D          00000003   8916          SLLG  1,15,3(0)   ;   .
00005726 B90A 001F                          8917          ALGR  1,15        ;   .
0000572A EB11 0003 000D          00000003   8918          SLLG  1,1,3(0)    ;   .
00005730 58F1 4010               00000010   8919          L     15,16(1,4)  ; offset of partition in rd_kafka_message_s
00005734 47F0 C21A               0000573A   8920          B     @L799
00005738                                    8921 @L798    DS    0H
00005738 18FB                               8922          LR    15,11
0000573A                                    8923 @L799    DS    0H
0000573A E350 D0D8 0024          000000D8   8924          STG   5,216(0,13)
00005740 B914 00FF                          8925          LGFR  15,15
00005744 E3F0 D0E0 0024          000000E0   8926          STG   15,224(0,13)
0000574A B914 00F8                          8927          LGFR  15,8
0000574E E3F0 D0E8 0024          000000E8   8928          STG   15,232(0,13)
00005754 B914 00F2                          8929          LGFR  15,2
00005758 EB1F 0003 000D          00000003   8930          SLLG  1,15,3(0)   ;   .
0000575E B90A 001F                          8931          ALGR  1,15        ;   .
00005762 EB11 0003 000D          00000003   8932          SLLG  1,1,3(0)    ;   .
00005768 E3F1 4018 0004          00000018   8933          LG    15,24(1,4)
0000576E E3F0 D0F0 0024          000000F0   8934          STG   15,240(0,13)
00005774 B914 00F2                          8935          LGFR  15,2
00005778 EB1F 0003 000D          00000003   8936          SLLG  1,15,3(0)   ;   .
0000577E B90A 001F                          8937          ALGR  1,15        ;   .
00005782 EB11 0003 000D          00000003   8938          SLLG  1,1,3(0)    ;   .
00005788 E3F1 4020 0004          00000020   8939          LG    15,32(1,4)
0000578E E3F0 D0F8 0024          000000F8   8940          STG   15,248(0,13)
00005794 B914 00F2                          8941          LGFR  15,2
00005798 EB1F 0003 000D          00000003   8942          SLLG  1,15,3(0)   ;   .
0000579E B90A 001F                          8943          ALGR  1,15        ;   .
000057A2 EB11 0003 000D          00000003   8944          SLLG  1,1,3(0)    ;   .
000057A8 E3F1 4028 0004          00000028   8945          LG    15,40(1,4)
000057AE E3F0 D100 0024          00000100   8946          STG   15,256(0,13)
000057B4 B914 00F2                          8947          LGFR  15,2
000057B8 EB1F 0003 000D          00000003   8948          SLLG  1,15,3(0)   ;   .
000057BE B90A 001F                          8949          ALGR  1,15        ;   .
000057C2 EB11 0003 000D          00000003   8950          SLLG  1,1,3(0)    ;   .
000057C8 E3F1 4030 0004          00000030   8951          LG    15,48(1,4)
000057CE E3F0 D108 0024          00000108   8952          STG   15,264(0,13)
000057D4 B914 00F2                          8953          LGFR  15,2
000057D8 EB1F 0003 000D          00000003   8954          SLLG  1,15,3(0)   ;   .
000057DE B90A 001F                          8955          ALGR  1,15        ;   .
000057E2 EB11 0003 000D          00000003   8956          SLLG  1,1,3(0)    ;   .
000057E8 E3F1 4040 0004          00000040   8957          LG    15,64(1,4)
000057EE E3F0 D110 0024          00000110   8958          STG   15,272(0,13)
000057F4 B914 00F2                          8959          LGFR  15,2
000057F8 EB1F 0003 000D          00000003   8960          SLLG  1,15,3(0)   ;   .
000057FE B90A 001F                          8961          ALGR  1,15        ;   .
00005802 EB11 0003 000D          00000003   8962          SLLG  1,1,3(0)    ;   .
00005808 41F1 4000               00000000   8963          LA    15,0(1,4)
                                                                                                                           Page  182 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000580C E3F0 D118 0024          00000118   8964          STG   15,280(0,13)
00005812 D70F D120 D120 00000120 00000120   8965          XC    288(16,13),288(13)
00005818 E3F0 D140 0004          00000140   8966          LG    15,320(0,13) ; spill
0000581E E3F0 D130 0024          00000130   8967          STG   15,304(0,13)
00005824 E3F0 D148 0004          00000148   8968          LG    15,328(0,13) ; spill
0000582A E3F0 D138 0024          00000138   8969          STG   15,312(0,13)
00005830 4110 D0D8               000000D8   8970          LA    1,216(0,13)
00005834 E3F0 C0E8 0004          00005608   8971          LG    15,@lit_952_301 ; rd_kafka_msg_new0
0000583A                                    8972 @@gen_label437 DS    0H
0000583A 05EF                               8973          BALR  14,15
0000583C                                    8974 @@gen_label438 DS    0H
0000583C B902 006F                          8975          LTGR  6,15
                                            8976 * ***                   if (((!rkm))) {
00005840 4770 C366               00005886   8977          BNZ   @L800
                                            8978 * ***            if (rkmessages[i].err == RD_KAFKA_RESP_ERR__QUEUE_FUL\
                                            8979 * L)
00005844 B914 00F2                          8980          LGFR  15,2
00005848 EB1F 0003 000D          00000003   8981          SLLG  1,15,3(0)   ;   .
0000584E B90A 001F                          8982          ALGR  1,15        ;   .
00005852 EB11 0003 000D          00000003   8983          SLLG  1,1,3(0)    ;   .
00005858 41F1 4000               00000000   8984          LA    15,0(1,4)
0000585C E55C F000 FF48          00000000   8985          CHSI  0(15),-184
00005862 4770 C546               00005A66   8986          BNE   @L796
                                            8987 * ***               all_err = rkmessages[i].err;
00005866 B914 00F2                          8988          LGFR  15,2
0000586A EB1F 0003 000D          00000003   8989          SLLG  1,15,3(0)   ;   .
00005870 B90A 001F                          8990          ALGR  1,15        ;   .
00005874 EB11 0003 000D          00000003   8991          SLLG  1,1,3(0)    ;   .
0000587A 58F1 4000               00000000   8992          L     15,0(1,4)
0000587E 50F0 D0D0               000000D0   8993          ST    15,208(0,13) ; all_err
00005882                                    8994 @L801    DS    0H
                                            8995 * ***                           continue;
00005882 47F0 C546               00005A66   8996          B     @L796
                                            8997 * ***         }
00005886                                    8998 @L800    DS    0H
                                            8999 * ***
                                            9000 * ***
                                            9001 * ***   # 777 "C:\asgkafka\librdkafka\src\rdkafka_msg.c"
                                            9002 * ***                   if (multiple_partitions) {
00005886 12AA                               9003          LTR   10,10
00005888 4780 C50C               00005A2C   9004          BZ    @L802
                                            9005 * ***                           if (rkm->rkm_rkmessage.partition == ((\
                                            9006 * int32_t)-1)) {
0000588C E55C 6010 FFFF          00000010   9007          CHSI  16(6),-1
00005892 4770 C3BC               000058DC   9008          BNE   @L803
                                            9009 * ***
                                            9010 * ***                                   rkmessages[i].err =
00005896 B914 0012                          9011          LGFR  1,2
0000589A EBF1 0003 000D          00000003   9012          SLLG  15,1,3(0)   ;   .
000058A0 B90A 00F1                          9013          ALGR  15,1        ;   .
000058A4 EBFF 0003 000D          00000003   9014          SLLG  15,15,3(0)  ;   .
000058AA E3F0 D150 0024          00000150   9015          STG   15,336(0,13) ; spill
                                                                                                                           Page  183 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9016 * ***                                           rd_kafka_msg_partition\
                                            9017 * er(
                                            9018 * ***                                                   rkt, rkm, 0);
000058B0 EB56 D0D8 0024          000000D8   9019          STMG  5,6,216(13)
000058B6 D707 D0E8 D0E8 000000E8 000000E8   9020          XC    232(8,13),232(13)
000058BC 4110 D0D8               000000D8   9021          LA    1,216(0,13)
000058C0 E3F0 C0F0 0004          00005610   9022          LG    15,@lit_952_302 ; rd_kafka_msg_partitioner
000058C6                                    9023 @@gen_label443 DS    0H
000058C6 05EF                               9024          BALR  14,15
000058C8                                    9025 @@gen_label444 DS    0H
000058C8 18EF                               9026          LR    14,15
000058CA E3F0 D150 0004          00000150   9027          LG    15,336(0,13) ; spill
000058D0 B904 0014                          9028          LGR   1,4
000058D4 50EF 1000               00000000   9029          ST    14,0(15,1)
                                            9030 * ***                           } else {
000058D8 47F0 C496               000059B6   9031          B     @L804
000058DC                                    9032 @L803    DS    0H
                                            9033 * ***                                   if (rktp == ((void *)0) ||
000058DC B902 00F3                          9034          LTGR  15,3
000058E0 4780 C3D0               000058F0   9035          BE    @L806
                                            9036 * ***                                       rkm->rkm_rkmessage.partiti\
                                            9037 * on !=
                                            9038 * ***                                       rktp->rktp_partition) {
000058E4 58F0 6010               00000010   9039          L     15,16(0,6)  ; offset of partition in rd_kafka_message_s
000058E8 59F0 3068               00000068   9040          C     15,104(0,3)
000058EC 4780 C45C               0000597C   9041          BE    @L805
000058F0                                    9042 @L806    DS    0H
                                            9043 * ***                                           rd_kafka_resp_err_t er\
                                            9044 * r;
                                            9045 * ***                                           if (rktp != ((void *)0\
                                            9046 * ))
000058F0 B902 00F3                          9047          LTGR  15,3
000058F4 4780 C406               00005926   9048          BE    @L807
                                            9049 * ***                                                   do { rd_kafka_\
                                            9050 * toppar_t *_RKTP = (rktp); if (((rd_refcnt_sub0(&_RKTP->rktp_refcnt) \
                                            9051 * == 0))) rd_kafka_toppar_destroy_final(_RKTP); } while (0);
000058F8                                    9052 @L808    DS    0H
000058F8 41F0 3090               00000090   9053          LA    15,144(0,3)
000058FC E3F0 D0D8 0024          000000D8   9054          STG   15,216(0,13)
00005902 4110 D0D8               000000D8   9055          LA    1,216(0,13)
00005906 E3F0 C0F8 0004          00005618   9056          LG    15,@lit_952_303 ; rd_refcnt_sub0
0000590C                                    9057 @@gen_label448 DS    0H
0000590C 05EF                               9058          BALR  14,15
0000590E                                    9059 @@gen_label449 DS    0H
0000590E 12FF                               9060          LTR   15,15
00005910 4770 C406               00005926   9061          BNE   @L811
00005914 E330 D0D8 0024          000000D8   9062          STG   3,216(0,13)
0000591A 4110 D0D8               000000D8   9063          LA    1,216(0,13)
0000591E E3F0 C100 0004          00005620   9064          LG    15,@lit_952_304 ; rd_kafka_toppar_destroy_final
00005924                                    9065 @@gen_label451 DS    0H
00005924 05EF                               9066          BALR  14,15
00005926                                    9067 @@gen_label452 DS    0H
                                                                                                                           Page  184 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005926                                    9068 @L811    DS    0H
                                            9069 * ***                                           rktp = rd_kafka_toppar\
                                            9070 * _get_avail(
00005926                                    9071 @L807    DS    0H
                                            9072 * ***                                                   rkt, rkm->rkm_\
                                            9073 * rkmessage.partition,
                                            9074 * ***                                                   1, &err);
00005926 E350 D0D8 0024          000000D8   9075          STG   5,216(0,13)
0000592C E3F0 6010 0014          00000010   9076          LGF   15,16(0,6)
00005932 E3F0 D0E0 0024          000000E0   9077          STG   15,224(0,13)
00005938 E548 D0E8 0001          000000E8   9078          MVGHI 232(13),1
0000593E 41F0 D0A8               000000A8   9079          LA    15,168(0,13)
00005942 E3F0 D0F0 0024          000000F0   9080          STG   15,240(0,13)
00005948 4110 D0D8               000000D8   9081          LA    1,216(0,13)
0000594C E3F0 C0E0 0004          00005600   9082          LG    15,@lit_952_299 ; rd_kafka_toppar_get_avail
00005952                                    9083 @@gen_label453 DS    0H
00005952 05EF                               9084          BALR  14,15
00005954                                    9085 @@gen_label454 DS    0H
00005954 B902 003F                          9086          LTGR  3,15        ; rktp
                                            9087 * ***
                                            9088 * ***                                           if (((!rktp))) {
00005958 4770 C45C               0000597C   9089          BNZ   @L812
                                            9090 * ***                                                   rkmessages[i].\
                                            9091 * err = err;
0000595C B914 00F2                          9092          LGFR  15,2
00005960 EB1F 0003 000D          00000003   9093          SLLG  1,15,3(0)   ;   .
00005966 B90A 001F                          9094          ALGR  1,15        ;   .
0000596A EB11 0003 000D          00000003   9095          SLLG  1,1,3(0)    ;   .
00005970 58F0 D0A8               000000A8   9096          L     15,168(0,13) ; err
00005974 50F1 4000               00000000   9097          ST    15,0(1,4)
                                            9098 * ***                                                   continue;
00005978 47F0 C546               00005A66   9099          B     @L796
                                            9100 * ***                                           }
0000597C                                    9101 @L812    DS    0H
                                            9102 * ***                                   }
0000597C                                    9103 @L805    DS    0H
                                            9104 * ***                                   rd_kafka_toppar_enq_msg(rktp, \
                                            9105 * rkm);
0000597C E330 D0D8 0024          000000D8   9106          STG   3,216(0,13)
00005982 E360 D0E0 0024          000000E0   9107          STG   6,224(0,13)
00005988 4110 D0D8               000000D8   9108          LA    1,216(0,13)
0000598C E3F0 C108 0004          00005628   9109          LG    15,@lit_952_306 ; rd_kafka_toppar_enq_msg
00005992                                    9110 @@gen_label456 DS    0H
00005992 05EF                               9111          BALR  14,15
00005994                                    9112 @@gen_label457 DS    0H
                                            9113 * ***
                                            9114 * ***                                   if (((rkt->rkt_rk)->rk_conf.eo\
                                            9115 * s.transactional_id != ((void *)0))) {
00005994 E3F0 5148 0004          00000148   9116          LG    15,328(0,5) ; offset of rkt_rk in rd_kafka_topic_s
0000599A E3F0 F7E8 0002          000007E8   9117          LTG   15,2024(0,15) ; offset of transactional_id in 0000105
000059A0 4780 C496               000059B6   9118          BE    @L804
                                            9119 * ***
                                                                                                                           Page  185 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9120 * ***                                           rd_kafka_txn_add_parti\
                                            9121 * tion(rktp);
000059A4 E330 D0D8 0024          000000D8   9122          STG   3,216(0,13)
000059AA 4110 D0D8               000000D8   9123          LA    1,216(0,13)
000059AE E3F0 C110 0004          00005630   9124          LG    15,@lit_952_307 ; rd_kafka_txn_add_partition
000059B4                                    9125 @@gen_label459 DS    0H
000059B4 05EF                               9126          BALR  14,15
000059B6                                    9127 @@gen_label460 DS    0H
                                            9128 * ***                                   }
000059B6                                    9129 @L813    DS    0H
                                            9130 * ***                           }
000059B6                                    9131 @L804    DS    0H
                                            9132 * ***
                                            9133 * ***                           if (((rkmessages[i].err))) {
000059B6 B914 0012                          9134          LGFR  1,2
000059BA EBF1 0003 000D          00000003   9135          SLLG  15,1,3(0)   ;   .
000059C0 B90A 00F1                          9136          ALGR  15,1        ;   .
000059C4 EBFF 0003 000D          00000003   9137          SLLG  15,15,3(0)  ;   .
000059CA E3FF 4000 0012          00000000   9138          LT    15,0(15,4)
000059D0 4780 C524               00005A44   9139          BZ    @L815
                                            9140 * ***
                                            9141 * ***                                   rd_kafka_interceptors_on_ackno\
                                            9142 * wledgement(
                                            9143 * ***                                           rkt->rkt_rk, &rkmessag\
                                            9144 * es[i]);
000059D4 E3F0 5148 0004          00000148   9145          LG    15,328(0,5)
000059DA E3F0 D0D8 0024          000000D8   9146          STG   15,216(0,13)
000059E0 B914 0012                          9147          LGFR  1,2
000059E4 EBF1 0003 000D          00000003   9148          SLLG  15,1,3(0)   ;   .
000059EA B90A 00F1                          9149          ALGR  15,1        ;   .
000059EE EBFF 0003 000D          00000003   9150          SLLG  15,15,3(0)  ;   .
000059F4 41FF 4000               00000000   9151          LA    15,0(15,4)
000059F8 E3F0 D0E0 0024          000000E0   9152          STG   15,224(0,13)
000059FE 4110 D0D8               000000D8   9153          LA    1,216(0,13)
00005A02 E3F0 C118 0004          00005638   9154          LG    15,@lit_952_308 ; rd_kafka_interceptors_on_acknowledgeme*
                                                                nt
00005A08                                    9155 @@gen_label462 DS    0H
00005A08 05EF                               9156          BALR  14,15
00005A0A                                    9157 @@gen_label463 DS    0H
                                            9158 * ***
                                            9159 * ***                                   rd_kafka_msg_destroy(rkt->rkt_\
                                            9160 * rk, rkm);
00005A0A E3F0 5148 0004          00000148   9161          LG    15,328(0,5)
00005A10 E3F0 D0D8 0024          000000D8   9162          STG   15,216(0,13)
00005A16 E360 D0E0 0024          000000E0   9163          STG   6,224(0,13)
00005A1C 4110 D0D8               000000D8   9164          LA    1,216(0,13)
00005A20 E3F0 C120 0004          00005640   9165          LG    15,@lit_952_309 ; rd_kafka_msg_destroy
00005A26                                    9166 @@gen_label464 DS    0H
00005A26 05EF                               9167          BALR  14,15
00005A28                                    9168 @@gen_label465 DS    0H
                                            9169 * ***                                   continue;
00005A28 47F0 C546               00005A66   9170          B     @L796
                                                                                                                           Page  186 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9171 * ***                           }
                                            9172 * ***
                                            9173 * ***
                                            9174 * ***                   } else {
00005A2C                                    9175 @L802    DS    0H
                                            9176 * ***
                                            9177 * ***                           rd_kafka_toppar_enq_msg(rktp, rkm);
00005A2C E330 D0D8 0024          000000D8   9178          STG   3,216(0,13)
00005A32 E360 D0E0 0024          000000E0   9179          STG   6,224(0,13)
00005A38 4110 D0D8               000000D8   9180          LA    1,216(0,13)
00005A3C E3F0 C108 0004          00005628   9181          LG    15,@lit_952_306 ; rd_kafka_toppar_enq_msg
00005A42                                    9182 @@gen_label466 DS    0H
00005A42 05EF                               9183          BALR  14,15
00005A44                                    9184 @@gen_label467 DS    0H
                                            9185 * ***                   }
00005A44                                    9186 @L815    DS    0H
                                            9187 * ***
                                            9188 * ***                   rkmessages[i].err = RD_KAFKA_RESP_ERR_NO_ERROR\
                                            9189 * ;
00005A44 B914 00F2                          9190          LGFR  15,2
00005A48 EB1F 0003 000D          00000003   9191          SLLG  1,15,3(0)   ;   .
00005A4E B90A 001F                          9192          ALGR  1,15        ;   .
00005A52 EB11 0003 000D          00000003   9193          SLLG  1,1,3(0)    ;   .
00005A58 41F1 4000               00000000   9194          LA    15,0(1,4)
00005A5C E54C F000 0000          00000000   9195          MVHI  0(15),0
                                            9196 * ***                   good++;
00005A62 A79A 0001               00000001   9197          AHI   9,1
                                            9198 * ***           }
00005A66                                    9199 @L796    DS    0H
00005A66 A72A 0001               00000001   9200          AHI   2,1
00005A6A                                    9201 @L794    DS    0H
00005A6A 5920 7024               00000024   9202          C     2,36(0,7)
00005A6E 4740 C1CE               000056EE   9203          BL    @L793
                                            9204 * ***
                                            9205 * ***           rwlock_rdunlock(&(rkt)->rkt_lock);
00005A72 41F0 5048               00000048   9206          LA    15,72(0,5)
00005A76 E3F0 D0D8 0024          000000D8   9207          STG   15,216(0,13)
00005A7C 4110 D0D8               000000D8   9208          LA    1,216(0,13)
00005A80 E3F0 C128 0004          00005648   9209          LG    15,@lit_952_311 ; rwlock_rdunlock
00005A86                                    9210 @@gen_label469 DS    0H
00005A86 05EF                               9211          BALR  14,15
00005A88                                    9212 @@gen_label470 DS    0H
                                            9213 * ***
                                            9214 * ***      if (!multiple_partitions && good > 0 &&
00005A88 12AA                               9215          LTR   10,10
00005A8A 4770 C5A0               00005AC0   9216          BNZ   @L816
00005A8E 1299                               9217          LTR   9,9
00005A90 47D0 C5A0               00005AC0   9218          BNH   @L816
                                            9219 * ***               ((rkt->rkt_rk)->rk_conf.eos.transactional_id != ((\
                                            9220 * void *)0)) &&
00005A94 E3F0 5148 0004          00000148   9221          LG    15,328(0,5) ; offset of rkt_rk in rd_kafka_topic_s
00005A9A E3F0 F7E8 0002          000007E8   9222          LTG   15,2024(0,15) ; offset of transactional_id in 0000105
                                                                                                                           Page  187 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005AA0 4780 C5A0               00005AC0   9223          BE    @L816
                                            9224 * ***               rktp->rktp_partition != ((int32_t)-1)) {
00005AA4 E55C 3068 FFFF          00000068   9225          CHSI  104(3),-1
00005AAA 4780 C5A0               00005AC0   9226          BE    @L816
                                            9227 * ***
                                            9228 * ***                   rd_kafka_txn_add_partition(rktp);
00005AAE E330 D0D8 0024          000000D8   9229          STG   3,216(0,13)
00005AB4 4110 D0D8               000000D8   9230          LA    1,216(0,13)
00005AB8 E3F0 C110 0004          00005630   9231          LG    15,@lit_952_307 ; rd_kafka_txn_add_partition
00005ABE                                    9232 @@gen_label475 DS    0H
00005ABE 05EF                               9233          BALR  14,15
00005AC0                                    9234 @@gen_label476 DS    0H
                                            9235 * ***           }
00005AC0                                    9236 @L816    DS    0H
                                            9237 * ***
                                            9238 * ***           if (rktp != ((void *)0))
00005AC0 B902 00F3                          9239          LTGR  15,3
00005AC4 4780 C5D6               00005AF6   9240          BE    @L817
                                            9241 * ***                   do { rd_kafka_toppar_t *_RKTP = (rktp); if (((\
                                            9242 * rd_refcnt_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_\
                                            9243 * final(_RKTP); } while (0);
00005AC8                                    9244 @L818    DS    0H
00005AC8 41F0 3090               00000090   9245          LA    15,144(0,3)
00005ACC E3F0 D0D8 0024          000000D8   9246          STG   15,216(0,13)
00005AD2 4110 D0D8               000000D8   9247          LA    1,216(0,13)
00005AD6 E3F0 C0F8 0004          00005618   9248          LG    15,@lit_952_303 ; rd_refcnt_sub0
00005ADC                                    9249 @@gen_label478 DS    0H
00005ADC 05EF                               9250          BALR  14,15
00005ADE                                    9251 @@gen_label479 DS    0H
00005ADE 12FF                               9252          LTR   15,15
00005AE0 4770 C5D6               00005AF6   9253          BNE   @L821
00005AE4 E330 D0D8 0024          000000D8   9254          STG   3,216(0,13)
00005AEA 4110 D0D8               000000D8   9255          LA    1,216(0,13)
00005AEE E3F0 C100 0004          00005620   9256          LG    15,@lit_952_304 ; rd_kafka_toppar_destroy_final
00005AF4                                    9257 @@gen_label481 DS    0H
00005AF4 05EF                               9258          BALR  14,15
00005AF6                                    9259 @@gen_label482 DS    0H
00005AF6                                    9260 @L821    DS    0H
                                            9261 * ***
                                            9262 * ***           return good;
00005AF6                                    9263 @L817    DS    0H
00005AF6 B914 00F9                          9264          LGFR  15,9
                                            9265 * ***   }
                                            9266 * * **** Start of Epilogue
                                            9267          DCCEPIL
00005AFA                                    9268+         ds 0h                                                          01-DCCEP
                                            9269+* Epilog
00005AFA D707 D088 D088 00000088 00000088   9270+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005B00 E3D0 D080 0004          00000080   9271+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005B06 E3C0 D090 0004          00000090   9272+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005B0C E3B0 C018 0004          00000018   9273+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005B12 E3C0 B010 0021          00000010   9274+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  188 
  Active Usings: @REGION_952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005B18 E3E0 D008 0004          00000008   9275+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005B1E EB1C D020 0004          00000020   9276+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005B24 078E                               9277+         bcr 8,14                if same dsab, just return              01-DCCEP
00005B26 E3F0 D010 0024          00000010   9278+         stg 15,16(0,13)         save return code                       01-DCCEP
00005B2C E300 D018 0024          00000018   9279+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005B32 E3F0 D090 0004          00000090   9280+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005B38 E3F0 F018 0004          00000018   9281+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005B3E 47F0 F040               00000040   9282+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9283+* End of Epilog
                                            9284 * * **** End of Epilogue
                                            9285          DROP  12
                                            9286 *
                                            9287 *   DSECT for automatic variables in "rd_kafka_produce_batch"
                                            9288 *      (FUNCTION #952)
                                            9289 *
00000000                00000000 000000D4   9290 @AUTO#rd_kafka_produce_batch DSECT
00000000                                    9291          DS    XL168
000000A8                                    9292 rd_kafka_produce_batch#err#9 DS 1F ; err
000000AC                000000AC 000000A8   9293          ORG   @AUTO#rd_kafka_produce_batch+168
000000A8                                    9294 rd_kafka_produce_batch#multiple_partitions#0 DS 1F ; multiple_partition*
                                                                s
000000AC                000000AC 000000A8   9295          ORG   @AUTO#rd_kafka_produce_batch+168
000000A8                                    9296 rd_kafka_produce_batch#good#0 DS 1F ; good
000000AC                000000AC 000000A8   9297          ORG   @AUTO#rd_kafka_produce_batch+168
000000A8                                    9298 rd_kafka_produce_batch#now#0 DS 8XL1 ; now
000000B0                000000B0 000000A8   9299          ORG   @AUTO#rd_kafka_produce_batch+168
000000A8                                    9300 rd_kafka_produce_batch#utc_now#0 DS 8XL1 ; utc_now
000000B0                000000B0 000000A8   9301          ORG   @AUTO#rd_kafka_produce_batch+168
000000A8                                    9302 rd_kafka_produce_batch#i#0 DS 1F ; i
000000AC                000000AC 000000B0   9303          ORG   @AUTO#rd_kafka_produce_batch+176
000000B0                                    9304 rd_kafka_produce_batch#tmpq#0 DS 32XL1 ; tmpq
000000D0                000000D0 000000D0   9305          ORG   @AUTO#rd_kafka_produce_batch+208
000000D0                                    9306 rd_kafka_produce_batch#all_err#0 DS 1F ; all_err
                                            9307 *
00005B42                00000000 0000E868   9308 @CODE    CSECT
                                            9309 *
                                            9310 *
                                            9311 *
                                            9312 * ....... start of rd_kafka_msgq_age_scan
                                            9313 rd_kafka_msgq_age_scan ALIAS X'99846D92818692816D94A287986D8187856DA283*
                                                                8195'
00005B42                                    9314 @LNAME1359 DS  0H
00005B42 00000016                           9315          DC    X'00000016'
00005B46 99846D9281869281                   9316          DC    C'rd_kafka_msgq_age_scan'
00005B5C 00                                 9317          DC    X'00'
                                            9318 rd_kafka_msgq_age_scan DCCPRLG CINDEX=1359,BASER=12,FRAME=200,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1359
                                            9319          macro
                                            9320          dccextrn &m
                                            9321          gblc    &$dccext(1000)
                                            9322          gbla    &$dccexti
                                            9323          lcla    &i
                                                                                                                           Page  189 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9324 &$dccext(&$dccexti+1) setc    '&m'
                                            9325 &i       seta    1
                                            9326 .loop    aif    (&i gt &$dccexti).around
                                            9327          aif    ('&$dccext(&i)' eq '&m').getout
                                            9328 &i       seta    &i+1
                                            9329          ago     .loop
                                            9330 .around  anop
                                            9331 &$dccexti seta &$dccexti+1
                                            9332          extrn  &m
                                            9333 .getout  anop
                                            9334          mend
00005B60                                    9335+$eye0177    ds    0d                                                    02-DCCCA
00005B60 C4C3C3                             9336+         dc cl3'DCC'                                                    02-DCCCA
00005B63 01                                 9337+         dc xl1'01' format one                                          02-DCCCA
00005B64 00000000                           9338+         dc a(0)                                                        02-DCCCA
00005B68 0000000000005BD2                   9339+         dc ad(@PER_1359)                                               02-DCCCA
00005B70 00000000000000C8                   9340+         dc ad(200)                                                     02-DCCCA
00005B78 0000000000000000                   9341+         dc ad(0)                                                       02-DCCCA
00005B80 0000000000001000                   9342+         dc ad(4096)                                                    02-DCCCA
00005B88 20                                 9343+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005B89 03                                 9344+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005B8A 03                                 9345+         dc al1(3)                                                      02-DCCCA
00005B8B 08                                 9346+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005B8C 00                                 9347+         dc bl.8'00000000'                                              02-DCCCA
00005B8D 000000                             9348+         dc al3(0)                                                      02-DCCCA
00005B90 0000000000005B42                   9349+         dc ad(@LNAME1359)                                              02-DCCCA
00005B98                                    9350+         ds 0d                                                          02-DCCCA
00005B98 0000000000005B60                   9351+         dc ad($eye0177)                                                02-DCCCA
00005BA0 0000000000000000                   9352+         dc ad(0)                                                       02-DCCCA
00005BA8                                    9353+         ds    0d                                                       01-DCCPR
                                            9354+         entry rd_kafka_msgq_age_scan                                   01-DCCPR
00005BA8                                    9355+rd_kafka_msgq_age_scan ds 0d                                            01-DCCPR
00005BA8                                    9356+@REGION_1359_1 ds 0h                                                    01-DCCPR
00005BA8 EBEC D008 0024          00000008   9357+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005BAE E3E0 D088 0004          00000088   9358+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005BB4 E3C0 D090 0004          00000090   9359+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005BBA B904 002E                          9360+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005BBE E3B0 C018 0004          00000018   9361+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005BC4 A7EB 00C8               000000C8   9362+         aghi  14,200              increase by frame size               01-DCCPR
00005BC8 E3E0 C020 0021          00000020   9363+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005BCE 4720 B020               00000020   9364+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005BD2                                    9365+@PER_1359 ds   0h                                                       01-DCCPR
00005BD2 EBDE 2080 0024          00000080   9366+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005BD8 E3C0 2090 0024          00000090   9367+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005BDE B904 00D2                          9368+         lgr   13,2                set real frame pointer               01-DCCPR
00005BE2 B904 00CF                          9369+         lgr   12,15               set base reg                         01-DCCPR
                        00005BA8            9370+         using @REGION_1359_1,12                                        01-DCCPR
00005BE6 B904 0081                          9371          LGR   8,1         ; ptr to parm area
                                            9372 * ******* End of Prologue
                                            9373 * *
                                            9374 * ***           rd_kafka_msg_t *rkm, *tmp, *first = ((void *)0);
00005BEA E340 8010 0004          00000010   9375          LG    4,16(0,8)   ; timedout
                                                                                                                           Page  190 
  Active Usings: @REGION_1359_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005BF0 E350 8020 0004          00000020   9376          LG    5,32(0,8)   ; abs_next_timeout
00005BF6 A739 0000               00000000   9377          LGHI  3,0         ; 0
                                            9378 * ***           int cnt = timedout->rkmq_msg_cnt;
00005BFA 5870 4010               00000010   9379          L     7,16(0,4)   ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
                                            9380 * ***
                                            9381 * ***           if (abs_next_timeout)
00005BFE B902 00F5                          9382          LTGR  15,5
00005C02 4780 C064               00005C0C   9383          BZ    @L822
                                            9384 * ***                   *abs_next_timeout = 0;
00005C06 E548 5000 0000          00000000   9385          MVGHI 0(5),0      ; abs_next_timeout
00005C0C                                    9386 @L822    DS    0H
                                            9387 * ***
                                            9388 * ***
                                            9389 * ***           for ((rkm) = ((&rkmq->rkmq_msgs)->tqh_first); (rkm) !=\
                                            9390 *  (((void *)0)) && ((tmp) = ((rkm)->rkm_link .tqe_next), 1); (rkm) = \
                                            9391 * (tmp)) {
00005C0C E3F0 8008 0004          00000008   9392          LG    15,8(0,8)   ; rkmq
00005C12 E320 F000 0004          00000000   9393          LG    2,0(0,15)   ; rkmq
00005C18 47F0 C104               00005CAC   9394          B     @L824
00005C20                                    9395          DS    0D
00005C20 000000C8                           9396 @FRAMESIZE_1359 DC F'200'
00005C24 00000000
00005C28 00000000000016C0                   9397 @lit_1359_317 DC AD(rd_kafka_msgq_deq)
00005C30 0000000000001B60                   9398 @lit_1359_318 DC AD(rd_kafka_msgq_enq)
00005C38                                    9399 @L823    DS    0H
                                            9400 * ***
                                            9401 * ***
                                            9402 * ***                   if (((rkm->rkm_u.producer.ts_timeout > now))) \
                                            9403 * {
00005C38 E3F0 2078 0004          00000078   9404          LG    15,120(0,2) ; offset of rkm_u in rd_kafka_msg_s
00005C3E E3F0 8018 0020          00000018   9405          CG    15,24(0,8)
00005C44 47D0 C0B8               00005C60   9406          BNH   @L828
                                            9407 * ***                           if (abs_next_timeout)
00005C48 B902 00F5                          9408          LTGR  15,5
00005C4C 4780 C116               00005CBE   9409          BZ    @L826
                                            9410 * ***                                   *abs_next_timeout = rkm->rkm_u\
                                            9411 * .producer.ts_timeout;
00005C50 E3F0 2078 0004          00000078   9412          LG    15,120(0,2) ; offset of rkm_u in rd_kafka_msg_s
00005C56 E3F0 5000 0024          00000000   9413          STG   15,0(0,5)   ; abs_next_timeout
00005C5C                                    9414 @L829    DS    0H
                                            9415 * ***                           break;
00005C5C 47F0 C116               00005CBE   9416          B     @L826
                                            9417 * ***                   }
00005C60                                    9418 @L828    DS    0H
                                            9419 * ***
                                            9420 * ***                   if (!first)
00005C60 B902 00F3                          9421          LTGR  15,3
00005C64 4770 C0C4               00005C6C   9422          BNZ   @L830
                                            9423 * ***                           first = rkm;
00005C68 B904 0032                          9424          LGR   3,2         ; first
00005C6C                                    9425 @L830    DS    0H
                                            9426 * ***
                                                                                                                           Page  191 
  Active Usings: @REGION_1359_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9427 * ***                   rd_kafka_msgq_deq(rkmq, rkm, 1);
00005C6C E3F0 8008 0004          00000008   9428          LG    15,8(0,8)   ; rkmq
00005C72 E3F0 D0B0 0024          000000B0   9429          STG   15,176(0,13)
00005C78 E320 D0B8 0024          000000B8   9430          STG   2,184(0,13)
00005C7E E548 D0C0 0001          000000C0   9431          MVGHI 192(13),1
00005C84 4110 D0B0               000000B0   9432          LA    1,176(0,13)
00005C88 E3F0 C080 0004          00005C28   9433          LG    15,@lit_1359_317 ; rd_kafka_msgq_deq
00005C8E                                    9434 @@gen_label487 DS    0H
00005C8E 05EF                               9435          BALR  14,15
00005C90                                    9436 @@gen_label488 DS    0H
                                            9437 * ***                   rd_kafka_msgq_enq(timedout, rkm);
00005C90 E340 D0B0 0024          000000B0   9438          STG   4,176(0,13)
00005C96 E320 D0B8 0024          000000B8   9439          STG   2,184(0,13)
00005C9C 4110 D0B0               000000B0   9440          LA    1,176(0,13)
00005CA0 E3F0 C088 0004          00005C30   9441          LG    15,@lit_1359_318 ; rd_kafka_msgq_enq
00005CA6                                    9442 @@gen_label489 DS    0H
00005CA6 05EF                               9443          BALR  14,15
00005CA8                                    9444 @@gen_label490 DS    0H
                                            9445 * ***           }
00005CA8 B904 0026                          9446          LGR   2,6         ; rkm
00005CAC                                    9447 @L824    DS    0H
00005CAC B902 00F2                          9448          LTGR  15,2
00005CB0 4780 C116               00005CBE   9449          BE    @L826
00005CB4 E360 2048 0004          00000048   9450          LG    6,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
00005CBA 47F0 C090               00005C38   9451          B     @L823
00005CBE                                    9452 @L826    DS    0H
                                            9453 * ***
                                            9454 * ***           return timedout->rkmq_msg_cnt - cnt;
00005CBE 58F0 4010               00000010   9455          L     15,16(0,4)  ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
00005CC2 1BF7                               9456          SR    15,7
00005CC4 B914 00FF                          9457          LGFR  15,15
                                            9458 * ***   }
                                            9459 * * **** Start of Epilogue
                                            9460          DCCEPIL
00005CC8                                    9461+         ds 0h                                                          01-DCCEP
                                            9462+* Epilog
00005CC8 D707 D088 D088 00000088 00000088   9463+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005CCE E3D0 D080 0004          00000080   9464+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005CD4 E3C0 D090 0004          00000090   9465+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005CDA E3B0 C018 0004          00000018   9466+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005CE0 E3C0 B010 0021          00000010   9467+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005CE6 E3E0 D008 0004          00000008   9468+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005CEC EB1C D020 0004          00000020   9469+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005CF2 078E                               9470+         bcr 8,14                if same dsab, just return              01-DCCEP
00005CF4 E3F0 D010 0024          00000010   9471+         stg 15,16(0,13)         save return code                       01-DCCEP
00005CFA E300 D018 0024          00000018   9472+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005D00 E3F0 D090 0004          00000090   9473+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005D06 E3F0 F018 0004          00000018   9474+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005D0C 47F0 F040               00000040   9475+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9476+* End of Epilog
                                            9477 * * **** End of Epilogue
                                            9478          DROP  12
                                                                                                                           Page  192 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9479 *
                                            9480 *   DSECT for automatic variables in "rd_kafka_msgq_age_scan"
                                            9481 *      (FUNCTION #1359)
                                            9482 *
00000000                00000000 000000AC   9483 @AUTO#rd_kafka_msgq_age_scan DSECT
00000000                                    9484          DS    XL168
000000A8                                    9485 rd_kafka_msgq_age_scan#cnt#0 DS 1F ; cnt
                                            9486 *
00005D10                00000000 0000E868   9487 @CODE    CSECT
                                            9488 *
                                            9489 *
                                            9490 *
                                            9491 * ....... start of rd_kafka_msgq_enq_sorted0
                                            9492 rd_kafka_msgq_enq_sorted0 ALIAS X'99846D92818692816D94A287986D8595986DA*
                                                                29699A38584F0'
00005D10                                    9493 @LNAME1354 DS  0H
00005D10 00000019                           9494          DC    X'00000019'
00005D14 99846D9281869281                   9495          DC    C'rd_kafka_msgq_enq_sorted0'
00005D2D 00                                 9496          DC    X'00'
                                            9497 rd_kafka_msgq_enq_sorted0 DCCPRLG CINDEX=1354,BASER=12,FRAME=192,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1354
                                            9498          macro
                                            9499          dccextrn &m
                                            9500          gblc    &$dccext(1000)
                                            9501          gbla    &$dccexti
                                            9502          lcla    &i
                                            9503 &$dccext(&$dccexti+1) setc    '&m'
                                            9504 &i       seta    1
                                            9505 .loop    aif    (&i gt &$dccexti).around
                                            9506          aif    ('&$dccext(&i)' eq '&m').getout
                                            9507 &i       seta    &i+1
                                            9508          ago     .loop
                                            9509 .around  anop
                                            9510 &$dccexti seta &$dccexti+1
                                            9511          extrn  &m
                                            9512 .getout  anop
                                            9513          mend
00005D30                                    9514+$eye0180    ds    0d                                                    02-DCCCA
00005D30 C4C3C3                             9515+         dc cl3'DCC'                                                    02-DCCCA
00005D33 01                                 9516+         dc xl1'01' format one                                          02-DCCCA
00005D34 00000000                           9517+         dc a(0)                                                        02-DCCCA
00005D38 0000000000005DA2                   9518+         dc ad(@PER_1354)                                               02-DCCCA
00005D40 00000000000000C0                   9519+         dc ad(192)                                                     02-DCCCA
00005D48 0000000000000000                   9520+         dc ad(0)                                                       02-DCCCA
00005D50 0000000000001000                   9521+         dc ad(4096)                                                    02-DCCCA
00005D58 20                                 9522+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005D59 03                                 9523+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005D5A 03                                 9524+         dc al1(3)                                                      02-DCCCA
00005D5B 08                                 9525+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005D5C 00                                 9526+         dc bl.8'00000000'                                              02-DCCCA
00005D5D 000000                             9527+         dc al3(0)                                                      02-DCCCA
00005D60 0000000000005D10                   9528+         dc ad(@LNAME1354)                                              02-DCCCA
                                                                                                                           Page  193 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D68                                    9529+         ds 0d                                                          02-DCCCA
00005D68 0000000000005D30                   9530+         dc ad($eye0180)                                                02-DCCCA
00005D70 0000000000000000                   9531+         dc ad(0)                                                       02-DCCCA
00005D78                                    9532+         ds    0d                                                       01-DCCPR
                                            9533+         entry rd_kafka_msgq_enq_sorted0                                01-DCCPR
00005D78                                    9534+rd_kafka_msgq_enq_sorted0 ds 0d                                         01-DCCPR
00005D78                                    9535+@REGION_1354_1 ds 0h                                                    01-DCCPR
00005D78 EBEC D008 0024          00000008   9536+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005D7E E3E0 D088 0004          00000088   9537+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005D84 E3C0 D090 0004          00000090   9538+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005D8A B904 002E                          9539+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005D8E E3B0 C018 0004          00000018   9540+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005D94 A7EB 00C0               000000C0   9541+         aghi  14,192              increase by frame size               01-DCCPR
00005D98 E3E0 C020 0021          00000020   9542+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005D9E 4720 B020               00000020   9543+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005DA2                                    9544+@PER_1354 ds   0h                                                       01-DCCPR
00005DA2 EBDE 2080 0024          00000080   9545+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005DA8 E3C0 2090 0024          00000090   9546+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005DAE B904 00D2                          9547+         lgr   13,2                set real frame pointer               01-DCCPR
00005DB2 B904 00CF                          9548+         lgr   12,15               set base reg                         01-DCCPR
                        00005D78            9549+         using @REGION_1354_1,12                                        01-DCCPR
00005DB6 B904 0051                          9550          LGR   5,1         ; ptr to parm area
                                            9551 * ******* End of Prologue
                                            9552 * *
                                            9553 * ***           do { if(((&rkmq->rkmq_msgs)->tqh_first) == ((void *)0)\
                                            9554 * ) { do {  if (((rkm)->rkm_link .tqe_next = (&rkmq->rkmq_msgs)->tqh_f\
                                            9555 * irst) != (((void *)0))) (&rkmq->rkmq_msgs)->tqh_first->rkm_link .tqe\
                                            9556 * _prev = &(rkm)->rkm_link .tqe_next; else (&rkmq->rkmq_msgs)->tqh_las\
                                            9557 * t = &(rkm)->rkm_link .tqe_next; (&rkmq->rkmq_msgs)->tqh_first = (rkm\
                                            9558 * ); (rkm)->rkm_link .tqe_prev = &(&rkmq->rkmq_msgs)->tqh_first; } whi\
                                            9559 * le ( 0); } else { rd_kafka_msg_t * _tmp; for ((_tmp) = ((&rkmq->rkmq\
                                            9560 * _msgs)->tqh_first); (_tmp) != (((void *)0)); (_tmp) = ((_tmp)->rkm_l\
                                            9561 * ink .tqe_next)) { if(order_cmp(rkm,_tmp) < 0) { do {  (rkm)->rkm_lin\
                                            9562 * k .tqe_prev = (_tmp)->rkm_link .tqe_prev; (rkm)->rkm_link .tqe_next \
                                            9563 * = (_tmp); *(_tmp)->rkm_link .tqe_prev = (rkm); (_tmp)->rkm_link .tqe\
                                            9564 * _prev = &(rkm)->rkm_link .tqe_next; } while ( 0); break; } if(!((_tm\
                                            9565 * p)->rkm_link .tqe_next)) { do {  if (((rkm)->rkm_link .tqe_next = (_\
                                            9566 * tmp)->rkm_link .tqe_next) != (((void *)0))) (rkm)->rkm_link .tqe_nex\
                                            9567 * t->rkm_link .tqe_prev = &(rkm)->rkm_link .tqe_next; else (&rkmq->rkm\
                                            9568 * q_msgs)->tqh_last = &(rkm)->rkm_link .tqe_next; (_tmp)->rkm_link .tq\
                                            9569 * e_next = (rkm); (rkm)->rkm_link .tqe_prev = &(_tmp)->rkm_link .tqe_n\
                                            9570 * ext; } while ( 0); break; } } } } while(0);
00005DBA EB34 5000 0004          00000000   9571          LMG   3,4,0(5)    ; rkmq
00005DC0                                    9572 @L831    DS    0H
00005DC0 E3F0 3000 0002          00000000   9573          LTG   15,0(0,3)   ; rkmq
00005DC6 4770 C09E               00005E16   9574          BNE   @L834
00005DCA                                    9575 @L835    DS    0H
00005DCA E3F0 3000 0004          00000000   9576          LG    15,0(0,3)   ; rkmq
00005DD0 E3F0 4048 0024          00000048   9577          STG   15,72(0,4)
00005DD6 B902 00FF                          9578          LTGR  15,15
00005DDA 4780 C084               00005DFC   9579          BE    @L838
00005DDE E3F0 3000 0004          00000000   9580          LG    15,0(0,3)   ; rkmq
                                                                                                                           Page  194 
  Active Usings: @REGION_1354_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005DE4 4110 4048               00000048   9581          LA    1,72(0,4)
00005DE8 E310 F050 0024          00000050   9582          STG   1,80(0,15)  ; offset of tqe_prev in 0000040
00005DEE 47F0 C08E               00005E06   9583          B     @L839
00005DF8                                    9584          DS    0D
00005DF8 000000C0                           9585 @FRAMESIZE_1354 DC F'192'
00005DFC                                    9586 @L838    DS    0H
00005DFC 41F0 4048               00000048   9587          LA    15,72(0,4)
00005E00 E3F0 3008 0024          00000008   9588          STG   15,8(0,3)   ; offset of tqh_last in rd_kafka_msgs_head_s
00005E06                                    9589 @L839    DS    0H
00005E06 E340 3000 0024          00000000   9590          STG   4,0(0,3)    ; rkmq
00005E0C E330 4050 0024          00000050   9591          STG   3,80(0,4)   ; offset of tqe_prev in 0000040
00005E12 47F0 C150               00005EC8   9592          B     @L840
00005E16                                    9593 @L834    DS    0H
00005E16 E320 3000 0004          00000000   9594          LG    2,0(0,3)    ; rkmq
00005E1C 47F0 C148               00005EC0   9595          B     @L842
00005E20                                    9596 @L841    DS    0H
00005E20 E340 D0B0 0024          000000B0   9597          STG   4,176(0,13)
00005E26 E320 D0B8 0024          000000B8   9598          STG   2,184(0,13)
00005E2C E3F0 5010 0004          00000010   9599          LG    15,16(0,5)  ; order_cmp
00005E32 4110 D0B0               000000B0   9600          LA    1,176(0,13)
00005E36                                    9601 @@gen_label494 DS    0H
00005E36 05EF                               9602          BALR  14,15
00005E38                                    9603 @@gen_label495 DS    0H
00005E38 12FF                               9604          LTR   15,15
00005E3A 47B0 C0F2               00005E6A   9605          BNL   @L845
00005E3E                                    9606 @L846    DS    0H
00005E3E E3F0 2050 0004          00000050   9607          LG    15,80(0,2)  ; offset of tqe_prev in 0000040
00005E44 E3F0 4050 0024          00000050   9608          STG   15,80(0,4)  ; offset of tqe_prev in 0000040
00005E4A E320 4048 0024          00000048   9609          STG   2,72(0,4)   ; offset of rkm_link in rd_kafka_msg_s
00005E50 E3F0 2050 0004          00000050   9610          LG    15,80(0,2)  ; offset of tqe_prev in 0000040
00005E56 E340 F000 0024          00000000   9611          STG   4,0(0,15)
00005E5C 41F0 4048               00000048   9612          LA    15,72(0,4)
00005E60 E3F0 2050 0024          00000050   9613          STG   15,80(0,2)  ; offset of tqe_prev in 0000040
00005E66 47F0 C150               00005EC8   9614          B     @L843
00005E6A                                    9615 @L845    DS    0H
00005E6A E3F0 2048 0002          00000048   9616          LTG   15,72(0,2)  ; offset of rkm_link in rd_kafka_msg_s
00005E70 4770 C142               00005EBA   9617          BNZ   @L849
00005E74                                    9618 @L850    DS    0H
00005E74 E3F0 2048 0004          00000048   9619          LG    15,72(0,2)  ; offset of rkm_link in rd_kafka_msg_s
00005E7A E3F0 4048 0024          00000048   9620          STG   15,72(0,4)
00005E80 B902 00FF                          9621          LTGR  15,15
00005E84 4780 C124               00005E9C   9622          BE    @L853
00005E88 E3F0 4048 0004          00000048   9623          LG    15,72(0,4)  ; offset of rkm_link in rd_kafka_msg_s
00005E8E 4110 4048               00000048   9624          LA    1,72(0,4)
00005E92 E310 F050 0024          00000050   9625          STG   1,80(0,15)  ; offset of tqe_prev in 0000040
00005E98 47F0 C12E               00005EA6   9626          B     @L854
00005E9C                                    9627 @L853    DS    0H
00005E9C 41F0 4048               00000048   9628          LA    15,72(0,4)
00005EA0 E3F0 3008 0024          00000008   9629          STG   15,8(0,3)   ; offset of tqh_last in rd_kafka_msgs_head_s
00005EA6                                    9630 @L854    DS    0H
00005EA6 E340 2048 0024          00000048   9631          STG   4,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
00005EAC 41F0 2048               00000048   9632          LA    15,72(0,2)
                                                                                                                           Page  195 
  Active Usings: @REGION_1354_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005EB0 E3F0 4050 0024          00000050   9633          STG   15,80(0,4)  ; offset of tqe_prev in 0000040
00005EB6 47F0 C150               00005EC8   9634          B     @L843
00005EBA                                    9635 @L849    DS    0H
00005EBA E320 2048 0004          00000048   9636          LG    2,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
00005EC0                                    9637 @L842    DS    0H
00005EC0 B902 00F2                          9638          LTGR  15,2
00005EC4 4770 C0A8               00005E20   9639          BNE   @L841
00005EC8                                    9640 @L843    DS    0H
00005EC8                                    9641 @L840    DS    0H
                                            9642 * ***
                                            9643 * ***           rkmq->rkmq_msg_bytes += rkm->rkm_rkmessage.len+rkm->rk\
                                            9644 * m_rkmessage.key_len;
00005EC8 E3F0 3018 0004          00000018   9645          LG    15,24(0,3)
00005ECE E310 4020 0004          00000020   9646          LG    1,32(0,4)   ; offset of len in rd_kafka_message_s
00005ED4 E310 4030 000A          00000030   9647          ALG   1,48(0,4)
00005EDA B90A 00F1                          9648          ALGR  15,1
00005EDE E3F0 3018 0024          00000018   9649          STG   15,24(0,3)
                                            9650 * ***           return ++rkmq->rkmq_msg_cnt;
00005EE4 58F0 3010               00000010   9651          L     15,16(0,3)
00005EE8 A7FA 0001               00000001   9652          AHI   15,1
00005EEC 50F0 3010               00000010   9653          ST    15,16(0,3)
00005EF0 B914 00FF                          9654          LGFR  15,15
                                            9655 * ***   }
                                            9656 * * **** Start of Epilogue
                                            9657          DCCEPIL
00005EF4                                    9658+         ds 0h                                                          01-DCCEP
                                            9659+* Epilog
00005EF4 D707 D088 D088 00000088 00000088   9660+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005EFA E3D0 D080 0004          00000080   9661+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005F00 E3C0 D090 0004          00000090   9662+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005F06 E3B0 C018 0004          00000018   9663+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005F0C E3C0 B010 0021          00000010   9664+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005F12 E3E0 D008 0004          00000008   9665+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005F18 EB1C D020 0004          00000020   9666+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005F1E 078E                               9667+         bcr 8,14                if same dsab, just return              01-DCCEP
00005F20 E3F0 D010 0024          00000010   9668+         stg 15,16(0,13)         save return code                       01-DCCEP
00005F26 E300 D018 0024          00000018   9669+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005F2C E3F0 D090 0004          00000090   9670+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005F32 E3F0 F018 0004          00000018   9671+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005F38 47F0 F040               00000040   9672+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9673+* End of Epilog
                                            9674 * * **** End of Epilogue
                                            9675          DROP  12
                                            9676 *
                                            9677 *   DSECT for automatic variables in "rd_kafka_msgq_enq_sorted0"
                                            9678 *      (FUNCTION #1354)
                                            9679 *
00000000                00000000 000000A8   9680 @AUTO#rd_kafka_msgq_enq_sorted0 DSECT
00000000                                    9681          DS    XL168
                                            9682 *
00005F3C                00000000 0000E868   9683 @CODE    CSECT
                                            9684 *
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9685 *
                                            9686 *
                                            9687 * ....... start of rd_kafka_msgq_enq_sorted
                                            9688 rd_kafka_msgq_enq_sorted ALIAS X'99846D92818692816D94A287986D8595986DA2*
                                                                9699A38584'
00005F3C                                    9689 @LNAME1355 DS  0H
00005F3C 00000018                           9690          DC    X'00000018'
00005F40 99846D9281869281                   9691          DC    C'rd_kafka_msgq_enq_sorted'
00005F58 00                                 9692          DC    X'00'
                                            9693 rd_kafka_msgq_enq_sorted DCCPRLG CINDEX=1355,BASER=12,FRAME=192,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1355
                                            9694          macro
                                            9695          dccextrn &m
                                            9696          gblc    &$dccext(1000)
                                            9697          gbla    &$dccexti
                                            9698          lcla    &i
                                            9699 &$dccext(&$dccexti+1) setc    '&m'
                                            9700 &i       seta    1
                                            9701 .loop    aif    (&i gt &$dccexti).around
                                            9702          aif    ('&$dccext(&i)' eq '&m').getout
                                            9703 &i       seta    &i+1
                                            9704          ago     .loop
                                            9705 .around  anop
                                            9706 &$dccexti seta &$dccexti+1
                                            9707          extrn  &m
                                            9708 .getout  anop
                                            9709          mend
00005F60                                    9710+$eye0183    ds    0d                                                    02-DCCCA
00005F60 C4C3C3                             9711+         dc cl3'DCC'                                                    02-DCCCA
00005F63 01                                 9712+         dc xl1'01' format one                                          02-DCCCA
00005F64 00000000                           9713+         dc a(0)                                                        02-DCCCA
00005F68 0000000000005FD2                   9714+         dc ad(@PER_1355)                                               02-DCCCA
00005F70 00000000000000C0                   9715+         dc ad(192)                                                     02-DCCCA
00005F78 0000000000000000                   9716+         dc ad(0)                                                       02-DCCCA
00005F80 0000000000001000                   9717+         dc ad(4096)                                                    02-DCCCA
00005F88 20                                 9718+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005F89 03                                 9719+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005F8A 03                                 9720+         dc al1(3)                                                      02-DCCCA
00005F8B 08                                 9721+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005F8C 00                                 9722+         dc bl.8'00000000'                                              02-DCCCA
00005F8D 000000                             9723+         dc al3(0)                                                      02-DCCCA
00005F90 0000000000005F3C                   9724+         dc ad(@LNAME1355)                                              02-DCCCA
00005F98                                    9725+         ds 0d                                                          02-DCCCA
00005F98 0000000000005F60                   9726+         dc ad($eye0183)                                                02-DCCCA
00005FA0 0000000000000000                   9727+         dc ad(0)                                                       02-DCCCA
00005FA8                                    9728+         ds    0d                                                       01-DCCPR
                                            9729+         entry rd_kafka_msgq_enq_sorted                                 01-DCCPR
00005FA8                                    9730+rd_kafka_msgq_enq_sorted ds 0d                                          01-DCCPR
00005FA8                                    9731+@REGION_1355_1 ds 0h                                                    01-DCCPR
00005FA8 EBEC D008 0024          00000008   9732+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005FAE E3E0 D088 0004          00000088   9733+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005FB4 E3C0 D090 0004          00000090   9734+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  197 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005FBA B904 002E                          9735+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005FBE E3B0 C018 0004          00000018   9736+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005FC4 A7EB 00C0               000000C0   9737+         aghi  14,192              increase by frame size               01-DCCPR
00005FC8 E3E0 C020 0021          00000020   9738+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005FCE 4720 B020               00000020   9739+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005FD2                                    9740+@PER_1355 ds   0h                                                       01-DCCPR
00005FD2 EBDE 2080 0024          00000080   9741+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005FD8 E3C0 2090 0024          00000090   9742+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005FDE B904 00D2                          9743+         lgr   13,2                set real frame pointer               01-DCCPR
00005FE2 B904 00CF                          9744+         lgr   12,15               set base reg                         01-DCCPR
                        00005FA8            9745+         using @REGION_1355_1,12                                        01-DCCPR
                                            9746 * ******* End of Prologue
                                            9747 * *
                                            9748 * ***           do {} while (0);
00005FE6                                    9749 @L855    DS    0H
                                            9750 * ***           return rd_kafka_msgq_enq_sorted0(rkmq, rkm,
                                            9751 * ***                                            rkt->rkt_conf.msg_ord\
                                            9752 * er_cmp);
00005FE6 E3F0 1008 0004          00000008   9753          LG    15,8(0,1)   ; rkmq
00005FEC E3F0 D0A8 0024          000000A8   9754          STG   15,168(0,13)
00005FF2 E3F0 1010 0004          00000010   9755          LG    15,16(0,1)  ; rkm
00005FF8 E3F0 D0B0 0024          000000B0   9756          STG   15,176(0,13)
00005FFE E3F0 1000 0004          00000000   9757          LG    15,0(0,1)   ; rkt
00006004 E3F0 F3C8 0004          000003C8   9758          LG    15,968(0,15)
0000600A E3F0 D0B8 0024          000000B8   9759          STG   15,184(0,13)
00006010 4110 D0A8               000000A8   9760          LA    1,168(0,13)
00006014 E3F0 C0C8 0004          00006070   9761          LG    15,@lit_1355_321 ; rd_kafka_msgq_enq_sorted0
0000601A                                    9762 @@gen_label500 DS    0H
0000601A 05EF                               9763          BALR  14,15
0000601C                                    9764 @@gen_label501 DS    0H
0000601C B914 00FF                          9765          LGFR  15,15
                                            9766 * ***   }
                                            9767 * * **** Start of Epilogue
                                            9768          DCCEPIL
00006020                                    9769+         ds 0h                                                          01-DCCEP
                                            9770+* Epilog
00006020 D707 D088 D088 00000088 00000088   9771+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006026 E3D0 D080 0004          00000080   9772+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000602C E3C0 D090 0004          00000090   9773+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006032 E3B0 C018 0004          00000018   9774+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006038 E3C0 B010 0021          00000010   9775+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000603E E3E0 D008 0004          00000008   9776+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006044 EB1C D020 0004          00000020   9777+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000604A 078E                               9778+         bcr 8,14                if same dsab, just return              01-DCCEP
0000604C E3F0 D010 0024          00000010   9779+         stg 15,16(0,13)         save return code                       01-DCCEP
00006052 E300 D018 0024          00000018   9780+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006058 E3F0 D090 0004          00000090   9781+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000605E E3F0 F018 0004          00000018   9782+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006064 47F0 F040               00000040   9783+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9784+* End of Epilog
                                            9785 * * **** End of Epilogue
00006068                                    9786          DS    0D
                                                                                                                           Page  198 
  Active Usings: @REGION_1355_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006068 000000C0                           9787 @FRAMESIZE_1355 DC F'192'
0000606C 00000000
00006070 0000000000005D78                   9788 @lit_1355_321 DC AD(rd_kafka_msgq_enq_sorted0)
                                            9789          DROP  12
                                            9790 *
                                            9791 *   DSECT for automatic variables in "rd_kafka_msgq_enq_sorted"
                                            9792 *      (FUNCTION #1355)
                                            9793 *
00000000                00000000 000000A8   9794 @AUTO#rd_kafka_msgq_enq_sorted DSECT
00000000                                    9795          DS    XL168
                                            9796 *
00006078                00000000 0000E868   9797 @CODE    CSECT
                                            9798 *
                                            9799 *
                                            9800 *
                                            9801 * ....... start of rd_kafka_msgq_find_pos
                                            9802 rd_kafka_msgq_find_pos ALIAS X'99846D92818692816D94A287986D868995846D97*
                                                                96A2'
00006078                                    9803 @LNAME1361 DS  0H
00006078 00000016                           9804          DC    X'00000016'
0000607C 99846D9281869281                   9805          DC    C'rd_kafka_msgq_find_pos'
00006092 00                                 9806          DC    X'00'
                                            9807 rd_kafka_msgq_find_pos DCCPRLG CINDEX=1361,BASER=12,FRAME=192,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1361
                                            9808          macro
                                            9809          dccextrn &m
                                            9810          gblc    &$dccext(1000)
                                            9811          gbla    &$dccexti
                                            9812          lcla    &i
                                            9813 &$dccext(&$dccexti+1) setc    '&m'
                                            9814 &i       seta    1
                                            9815 .loop    aif    (&i gt &$dccexti).around
                                            9816          aif    ('&$dccext(&i)' eq '&m').getout
                                            9817 &i       seta    &i+1
                                            9818          ago     .loop
                                            9819 .around  anop
                                            9820 &$dccexti seta &$dccexti+1
                                            9821          extrn  &m
                                            9822 .getout  anop
                                            9823          mend
00006098                                    9824+$eye0186    ds    0d                                                    02-DCCCA
00006098 C4C3C3                             9825+         dc cl3'DCC'                                                    02-DCCCA
0000609B 01                                 9826+         dc xl1'01' format one                                          02-DCCCA
0000609C 00000000                           9827+         dc a(0)                                                        02-DCCCA
000060A0 000000000000610A                   9828+         dc ad(@PER_1361)                                               02-DCCCA
000060A8 00000000000000C0                   9829+         dc ad(192)                                                     02-DCCCA
000060B0 0000000000000000                   9830+         dc ad(0)                                                       02-DCCCA
000060B8 0000000000001000                   9831+         dc ad(4096)                                                    02-DCCCA
000060C0 20                                 9832+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000060C1 03                                 9833+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000060C2 03                                 9834+         dc al1(3)                                                      02-DCCCA
000060C3 08                                 9835+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000060C4 00                                 9836+         dc bl.8'00000000'                                              02-DCCCA
000060C5 000000                             9837+         dc al3(0)                                                      02-DCCCA
000060C8 0000000000006078                   9838+         dc ad(@LNAME1361)                                              02-DCCCA
000060D0                                    9839+         ds 0d                                                          02-DCCCA
000060D0 0000000000006098                   9840+         dc ad($eye0186)                                                02-DCCCA
000060D8 0000000000000000                   9841+         dc ad(0)                                                       02-DCCCA
000060E0                                    9842+         ds    0d                                                       01-DCCPR
                                            9843+         entry rd_kafka_msgq_find_pos                                   01-DCCPR
000060E0                                    9844+rd_kafka_msgq_find_pos ds 0d                                            01-DCCPR
000060E0                                    9845+@REGION_1361_1 ds 0h                                                    01-DCCPR
000060E0 EBEC D008 0024          00000008   9846+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000060E6 E3E0 D088 0004          00000088   9847+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000060EC E3C0 D090 0004          00000090   9848+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000060F2 B904 002E                          9849+         lgr   2,14                copy addr of our savearea            01-DCCPR
000060F6 E3B0 C018 0004          00000018   9850+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000060FC A7EB 00C0               000000C0   9851+         aghi  14,192              increase by frame size               01-DCCPR
00006100 E3E0 C020 0021          00000020   9852+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006106 4720 B020               00000020   9853+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000610A                                    9854+@PER_1361 ds   0h                                                       01-DCCPR
0000610A EBDE 2080 0024          00000080   9855+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006110 E3C0 2090 0024          00000090   9856+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006116 B904 00D2                          9857+         lgr   13,2                set real frame pointer               01-DCCPR
0000611A B904 00CF                          9858+         lgr   12,15               set base reg                         01-DCCPR
                        000060E0            9859+         using @REGION_1361_1,12                                        01-DCCPR
0000611E B904 0071                          9860          LGR   7,1         ; ptr to parm area
                                            9861 * ******* End of Prologue
                                            9862 * *
00006122 E350 7010 0004          00000010   9863          LG    5,16(0,7)   ; rkm
00006128 E360 7020 0004          00000020   9864          LG    6,32(0,7)   ; cntp
                                            9865 * ***           const rd_kafka_msg_t *curr;
                                            9866 * ***           int cnt = 0;
0000612E A738 0000               00000000   9867          LHI   3,0         ; 0
                                            9868 * ***           int64_t bytes = 0;
00006132 A749 0000               00000000   9869          LGHI  4,0         ; 0
                                            9870 * ***
                                            9871 * ***           for (curr = start_pos ? start_pos : rd_kafka_msgq_firs\
                                            9872 * t(rkmq) ;
00006136 E3F0 7008 0004          00000008   9873          LG    15,8(0,7)   ; start_pos
0000613C B902 001F                          9874          LTGR  1,15
00006140 4780 C078               00006158   9875          BZ    @L859
00006144 47F0 C090               00006170   9876          B     @L860
00006148                                    9877          DS    0D
00006148 000000C0                           9878 @FRAMESIZE_1361 DC F'192'
0000614C 00000000
00006150 0000000000001A18                   9879 @lit_1361_325 DC AD(rd_kafka_msgq_first)
00006158                                    9880 @L859    DS    0H
00006158 E3F0 7000 0004          00000000   9881          LG    15,0(0,7)   ; rkmq
0000615E E3F0 D0B0 0024          000000B0   9882          STG   15,176(0,13)
00006164 4110 D0B0               000000B0   9883          LA    1,176(0,13)
00006168 E3F0 C070 0004          00006150   9884          LG    15,@lit_1361_325 ; rd_kafka_msgq_first
0000616E                                    9885 @@gen_label503 DS    0H
0000616E 05EF                               9886          BALR  14,15
                                                                                                                           Page  200 
  Active Usings: @REGION_1361_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006170                                    9887 @@gen_label504 DS    0H
00006170                                    9888 @L860    DS    0H
00006170 B904 002F                          9889          LGR   2,15        ; curr
                                            9890 * ***                curr ; curr = ((curr)->rkm_link .tqe_next)) {
00006174 47F0 C0F8               000061D8   9891          B     @L861
00006178                                    9892 @L858    DS    0H
                                            9893 * ***                   if (cmp(rkm, curr) < 0) {
00006178 E350 D0B0 0024          000000B0   9894          STG   5,176(0,13)
0000617E E320 D0B8 0024          000000B8   9895          STG   2,184(0,13)
00006184 E3F0 7018 0004          00000018   9896          LG    15,24(0,7)  ; cmp
0000618A 4110 D0B0               000000B0   9897          LA    1,176(0,13)
0000618E                                    9898 @@gen_label505 DS    0H
0000618E 05EF                               9899          BALR  14,15
00006190                                    9900 @@gen_label506 DS    0H
00006190 12FF                               9901          LTR   15,15
00006192 47B0 C0D6               000061B6   9902          BNL   @L864
                                            9903 * ***                           if (cntp) {
00006196 B902 00F6                          9904          LTGR  15,6
0000619A 4780 C0CE               000061AE   9905          BZ    @L865
                                            9906 * ***                                   *cntp = cnt;
0000619E 5030 6000               00000000   9907          ST    3,0(0,6)    ; cntp
                                            9908 * ***                                   *bytesp = bytes;
000061A2 E3F0 7028 0004          00000028   9909          LG    15,40(0,7)  ; bytesp
000061A8 E340 F000 0024          00000000   9910          STG   4,0(0,15)   ; bytesp
                                            9911 * ***                           }
000061AE                                    9912 @L865    DS    0H
                                            9913 * ***                           return (rd_kafka_msg_t *)curr;
000061AE B904 00F2                          9914          LGR   15,2
000061B2 47F0 C104               000061E4   9915          B     @ret_lab_1361
                                            9916 * ***                   }
000061B6                                    9917 @L864    DS    0H
                                            9918 * ***                   if (cntp) {
000061B6 B902 00F6                          9919          LTGR  15,6
000061BA 4780 C0F2               000061D2   9920          BZ    @L866
                                            9921 * ***                           cnt++;
000061BE A73A 0001               00000001   9922          AHI   3,1
                                            9923 * ***                           bytes += rkm->rkm_rkmessage.len+rkm->r\
                                            9924 * km_rkmessage.key_len;
000061C2 E3F0 5020 0004          00000020   9925          LG    15,32(0,5)  ; offset of len in rd_kafka_message_s
000061C8 E3F0 5030 000A          00000030   9926          ALG   15,48(0,5)
000061CE B90A 004F                          9927          ALGR  4,15
                                            9928 * ***                   }
000061D2                                    9929 @L866    DS    0H
                                            9930 * ***           }
000061D2 E320 2048 0004          00000048   9931          LG    2,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
000061D8                                    9932 @L861    DS    0H
000061D8 B902 00F2                          9933          LTGR  15,2
000061DC 4770 C098               00006178   9934          BNZ   @L858
                                            9935 * ***
                                            9936 * ***           return ((void *)0);
000061E0 A7F9 0000               00000000   9937          LGHI  15,0        ; 0
                                            9938 * ***   }
                                                                                                                           Page  201 
  Active Usings: @REGION_1361_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000061E4                                    9939 @ret_lab_1361 DS 0H
                                            9940 * * **** Start of Epilogue
                                            9941          DCCEPIL
000061E4                                    9942+         ds 0h                                                          01-DCCEP
                                            9943+* Epilog
000061E4 D707 D088 D088 00000088 00000088   9944+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000061EA E3D0 D080 0004          00000080   9945+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000061F0 E3C0 D090 0004          00000090   9946+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000061F6 E3B0 C018 0004          00000018   9947+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000061FC E3C0 B010 0021          00000010   9948+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006202 E3E0 D008 0004          00000008   9949+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006208 EB1C D020 0004          00000020   9950+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000620E 078E                               9951+         bcr 8,14                if same dsab, just return              01-DCCEP
00006210 E3F0 D010 0024          00000010   9952+         stg 15,16(0,13)         save return code                       01-DCCEP
00006216 E300 D018 0024          00000018   9953+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000621C E3F0 D090 0004          00000090   9954+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006222 E3F0 F018 0004          00000018   9955+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006228 47F0 F040               00000040   9956+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9957+* End of Epilog
                                            9958 * * **** End of Epilogue
                                            9959          DROP  12
                                            9960 *
                                            9961 *   DSECT for automatic variables in "rd_kafka_msgq_find_pos"
                                            9962 *      (FUNCTION #1361)
                                            9963 *
00000000                00000000 000000B0   9964 @AUTO#rd_kafka_msgq_find_pos DSECT
00000000                                    9965          DS    XL168
000000A8                                    9966 rd_kafka_msgq_find_pos#bytes#0 DS 8XL1 ; bytes
000000B0                000000B0 000000A8   9967          ORG   @AUTO#rd_kafka_msgq_find_pos+168
000000A8                                    9968 rd_kafka_msgq_find_pos#cnt#0 DS 1F ; cnt
                                            9969 *
0000622C                00000000 0000E868   9970 @CODE    CSECT
                                            9971 *
                                            9972 *
                                            9973 *
                                            9974 * ....... start of rd_kafka_msgq_split
                                            9975 rd_kafka_msgq_split ALIAS X'99846D92818692816D94A287986DA2979389A3'
0000622C                                    9976 @LNAME1360 DS  0H
0000622C 00000013                           9977          DC    X'00000013'
00006230 99846D9281869281                   9978          DC    C'rd_kafka_msgq_split'
00006243 00                                 9979          DC    X'00'
                                            9980 rd_kafka_msgq_split DCCPRLG CINDEX=1360,BASER=12,FRAME=208,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1360
                                            9981          macro
                                            9982          dccextrn &m
                                            9983          gblc    &$dccext(1000)
                                            9984          gbla    &$dccexti
                                            9985          lcla    &i
                                            9986 &$dccext(&$dccexti+1) setc    '&m'
                                            9987 &i       seta    1
                                            9988 .loop    aif    (&i gt &$dccexti).around
                                            9989          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9990 &i       seta    &i+1
                                            9991          ago     .loop
                                            9992 .around  anop
                                            9993 &$dccexti seta &$dccexti+1
                                            9994          extrn  &m
                                            9995 .getout  anop
                                            9996          mend
00006248                                    9997+$eye0189    ds    0d                                                    02-DCCCA
00006248 C4C3C3                             9998+         dc cl3'DCC'                                                    02-DCCCA
0000624B 01                                 9999+         dc xl1'01' format one                                          02-DCCCA
0000624C 00000000                          10000+         dc a(0)                                                        02-DCCCA
00006250 00000000000062BA                  10001+         dc ad(@PER_1360)                                               02-DCCCA
00006258 00000000000000D0                  10002+         dc ad(208)                                                     02-DCCCA
00006260 0000000000000000                  10003+         dc ad(0)                                                       02-DCCCA
00006268 0000000000001000                  10004+         dc ad(4096)                                                    02-DCCCA
00006270 20                                10005+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006271 03                                10006+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006272 03                                10007+         dc al1(3)                                                      02-DCCCA
00006273 08                                10008+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006274 00                                10009+         dc bl.8'00000000'                                              02-DCCCA
00006275 000000                            10010+         dc al3(0)                                                      02-DCCCA
00006278 000000000000622C                  10011+         dc ad(@LNAME1360)                                              02-DCCCA
00006280                                   10012+         ds 0d                                                          02-DCCCA
00006280 0000000000006248                  10013+         dc ad($eye0189)                                                02-DCCCA
00006288 0000000000000000                  10014+         dc ad(0)                                                       02-DCCCA
00006290                                   10015+         ds    0d                                                       01-DCCPR
                                           10016+         entry rd_kafka_msgq_split                                      01-DCCPR
00006290                                   10017+rd_kafka_msgq_split ds 0d                                               01-DCCPR
00006290                                   10018+@REGION_1360_1 ds 0h                                                    01-DCCPR
00006290 EBEC D008 0024          00000008  10019+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006296 E3E0 D088 0004          00000088  10020+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000629C E3C0 D090 0004          00000090  10021+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000062A2 B904 002E                         10022+         lgr   2,14                copy addr of our savearea            01-DCCPR
000062A6 E3B0 C018 0004          00000018  10023+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000062AC A7EB 00D0               000000D0  10024+         aghi  14,208              increase by frame size               01-DCCPR
000062B0 E3E0 C020 0021          00000020  10025+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000062B6 4720 B020               00000020  10026+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000062BA                                   10027+@PER_1360 ds   0h                                                       01-DCCPR
000062BA EBDE 2080 0024          00000080  10028+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000062C0 E3C0 2090 0024          00000090  10029+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000062C6 B904 00D2                         10030+         lgr   13,2                set real frame pointer               01-DCCPR
000062CA B904 00CF                         10031+         lgr   12,15               set base reg                         01-DCCPR
                        00006290           10032+         using @REGION_1360_1,12                                        01-DCCPR
000062CE B904 0061                         10033          LGR   6,1         ; ptr to parm area
                                           10034 * ******* End of Prologue
                                           10035 * *
000062D2 EB24 6000 0004          00000000  10036          LMG   2,4,0(6)    ; leftq
                                           10037 * ***           rd_kafka_msg_t *llast;
                                           10038 * ***
                                           10039 * ***           ((first_right != ((&leftq->rkmq_msgs)->tqh_first)) ? (\
                                           10040 * void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_\
                                           10041 * msg.c", 968, "first_right != ((&leftq->rkmq_msgs)->tqh_first)"));
                                                                                                                           Page  203 
  Active Usings: @REGION_1360_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000062D8 E3F0 2000 0004          00000000  10042          LG    15,0(0,2)   ; leftq
000062DE B920 004F                         10043          CGR   4,15
000062E2 4770 C092               00006322  10044          BNE   @L868
000062E6                                   10045 @L867    DS    0H
000062E6 E3F0 C178 0004          00006408  10046          LG    15,@lit_1360_328
000062EC 41F0 F1D6               000001D6  10047          LA    15,470(0,15)
000062F0 E3F0 D0B0 0024          000000B0  10048          STG   15,176(0,13)
000062F6 E3F0 C170 0004          00006400  10049          LG    15,@lit_1360_329
000062FC 4110 F2C2               000002C2  10050          LA    1,706(0,15)
00006300 E310 D0B8 0024          000000B8  10051          STG   1,184(0,13)
00006306 E548 D0C0 03C8          000000C0  10052          MVGHI 192(13),968
0000630C 41F0 F364               00000364  10053          LA    15,868(0,15)
00006310 E3F0 D0C8 0024          000000C8  10054          STG   15,200(0,13)
00006316 4110 D0B0               000000B0  10055          LA    1,176(0,13)
0000631A E3F0 C168 0004          000063F8  10056          LG    15,@lit_1360_330 ; __assert
00006320                                   10057 @@gen_label512 DS    0H
00006320 05EF                              10058          BALR  14,15
00006322                                   10059 @@gen_label513 DS    0H
00006322                                   10060 @L868    DS    0H
                                           10061 * ***
                                           10062 * ***           llast = (*(((struct rd_kafka_msg_head_s *)((first_righ\
                                           10063 * t)->rkm_link .tqe_prev))->tqh_last));
00006322 E3F0 4050 0004          00000050  10064          LG    15,80(0,4)  ; offset of tqe_prev in 0000040
00006328 E3F0 F008 0004          00000008  10065          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_msg_head_s
0000632E E350 F000 0004          00000000  10066          LG    5,0(0,15)
                                           10067 * ***
                                           10068 * ***           rd_kafka_msgq_init(rightq);
00006334 E330 D0B0 0024          000000B0  10069          STG   3,176(0,13)
0000633A 4110 D0B0               000000B0  10070          LA    1,176(0,13)
0000633E E3F0 C180 0004          00006410  10071          LG    15,@lit_1360_331 ; rd_kafka_msgq_init
00006344                                   10072 @@gen_label514 DS    0H
00006344 05EF                              10073          BALR  14,15
00006346                                   10074 @@gen_label515 DS    0H
                                           10075 * ***
                                           10076 * ***           rightq->rkmq_msgs.tqh_first = first_right;
00006346 E340 3000 0024          00000000  10077          STG   4,0(0,3)    ; rightq
                                           10078 * ***           rightq->rkmq_msgs.tqh_last = leftq->rkmq_msgs.tqh_last\
                                           10079 * ;
0000634C E3F0 2008 0004          00000008  10080          LG    15,8(0,2)   ; offset of tqh_last in rd_kafka_msgs_head_s
00006352 E3F0 3008 0024          00000008  10081          STG   15,8(0,3)   ; offset of tqh_last in rd_kafka_msgs_head_s
                                           10082 * ***
                                           10083 * ***           first_right->rkm_link.tqe_prev = &rightq->rkmq_msgs.tq\
                                           10084 * h_first;
00006358 E330 4050 0024          00000050  10085          STG   3,80(0,4)   ; offset of tqe_prev in 0000040
                                           10086 * ***
                                           10087 * ***           leftq->rkmq_msgs.tqh_last = &llast->rkm_link.tqe_next;
0000635E 41F0 5048               00000048  10088          LA    15,72(0,5)
00006362 E3F0 2008 0024          00000008  10089          STG   15,8(0,2)   ; offset of tqh_last in rd_kafka_msgs_head_s
                                           10090 * ***           llast->rkm_link.tqe_next = ((void *)0);
00006368 A7F9 0000               00000000  10091          LGHI  15,0        ; 0
0000636C E3F0 5048 0024          00000048  10092          STG   15,72(0,5)  ; offset of rkm_link in rd_kafka_msg_s
                                           10093 * ***
                                                                                                                           Page  204 
  Active Usings: @REGION_1360_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10094 * ***           rightq->rkmq_msg_cnt   = leftq->rkmq_msg_cnt - cnt;
00006372 58F0 2010               00000010  10095          L     15,16(0,2)  ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
00006376 5BF0 601C               0000001C  10096          S     15,28(0,6)
0000637A 50F0 3010               00000010  10097          ST    15,16(0,3)  ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
                                           10098 * ***           rightq->rkmq_msg_bytes = leftq->rkmq_msg_bytes - bytes\
                                           10099 * ;
0000637E E3F0 2018 0004          00000018  10100          LG    15,24(0,2)  ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
00006384 E3F0 6020 0009          00000020  10101          SG    15,32(0,6)
0000638A E3F0 3018 0024          00000018  10102          STG   15,24(0,3)  ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
                                           10103 * ***           leftq->rkmq_msg_cnt    = cnt;
00006390 58F0 601C               0000001C  10104          L     15,28(0,6)  ; cnt
00006394 50F0 2010               00000010  10105          ST    15,16(0,2)  ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
                                           10106 * ***           leftq->rkmq_msg_bytes  = bytes;
00006398 E3F0 6020 0004          00000020  10107          LG    15,32(0,6)  ; bytes
0000639E E3F0 2018 0024          00000018  10108          STG   15,24(0,2)  ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
                                           10109 * ***
                                           10110 * ***           do { } while (0);
000063A4                                   10111 @L869    DS    0H
                                           10112 * ***           do { } while (0);
000063A4                                   10113 @L872    DS    0H
                                           10114 * ***   }
000063A4                                   10115 @ret_lab_1360 DS 0H
                                           10116 * * **** Start of Epilogue
                                           10117          DCCEPIL
000063A4                                   10118+         ds 0h                                                          01-DCCEP
                                           10119+* Epilog
000063A4 D707 D088 D088 00000088 00000088  10120+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000063AA E3D0 D080 0004          00000080  10121+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000063B0 E3C0 D090 0004          00000090  10122+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000063B6 E3B0 C018 0004          00000018  10123+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000063BC E3C0 B010 0021          00000010  10124+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000063C2 E3E0 D008 0004          00000008  10125+         lg  14,8(0,13)          load up return address                 01-DCCEP
000063C8 EB1C D020 0004          00000020  10126+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000063CE 078E                              10127+         bcr 8,14                if same dsab, just return              01-DCCEP
000063D0 E3F0 D010 0024          00000010  10128+         stg 15,16(0,13)         save return code                       01-DCCEP
000063D6 E300 D018 0024          00000018  10129+         stg 0,24(0,13)          save more return code                  01-DCCEP
000063DC E3F0 D090 0004          00000090  10130+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000063E2 E3F0 F018 0004          00000018  10131+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000063E8 47F0 F040               00000040  10132+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10133+* End of Epilog
                                           10134 * * **** End of Epilogue
000063F0                                   10135          DS    0D
000063F0 000000D0                          10136 @FRAMESIZE_1360 DC F'208'
000063F4 00000000
000063F8 0000000000000000                  10137 @lit_1360_330 DC AD(__assert)
00006400 000000000000ECA4                  10138 @lit_1360_329 DC AD(@strings@)
00006408 000000000000E868                  10139 @lit_1360_328 DC AD(@DATA)
00006410 0000000000001628                  10140 @lit_1360_331 DC AD(rd_kafka_msgq_init)
                                           10141          DROP  12
                                                                                                                           Page  205 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10142 *
                                           10143 *   DSECT for automatic variables in "rd_kafka_msgq_split"
                                           10144 *      (FUNCTION #1360)
                                           10145 *
00000000                00000000 000000A8  10146 @AUTO#rd_kafka_msgq_split DSECT
00000000                                   10147          DS    XL168
                                           10148 *
00006418                00000000 0000E868  10149 @CODE    CSECT
                                           10150 *
                                           10151 *
                                           10152 *
                                           10153 * ....... start of rd_kafka_msgq_set_metadata
                                           10154 rd_kafka_msgq_set_metadata ALIAS X'99846D92818692816D94A287986DA285A36D*
                                                                9485A3818481A381'
00006418                                   10155 @LNAME1362 DS  0H
00006418 0000001A                          10156          DC    X'0000001A'
0000641C 99846D9281869281                  10157          DC    C'rd_kafka_msgq_set_metadata'
00006436 00                                10158          DC    X'00'
                                           10159 rd_kafka_msgq_set_metadata DCCPRLG CINDEX=1362,BASER=12,FRAME=176,SAVEA*
                                                                REA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1362
                                           10160          macro
                                           10161          dccextrn &m
                                           10162          gblc    &$dccext(1000)
                                           10163          gbla    &$dccexti
                                           10164          lcla    &i
                                           10165 &$dccext(&$dccexti+1) setc    '&m'
                                           10166 &i       seta    1
                                           10167 .loop    aif    (&i gt &$dccexti).around
                                           10168          aif    ('&$dccext(&i)' eq '&m').getout
                                           10169 &i       seta    &i+1
                                           10170          ago     .loop
                                           10171 .around  anop
                                           10172 &$dccexti seta &$dccexti+1
                                           10173          extrn  &m
                                           10174 .getout  anop
                                           10175          mend
00006438                                   10176+$eye0192    ds    0d                                                    02-DCCCA
00006438 C4C3C3                            10177+         dc cl3'DCC'                                                    02-DCCCA
0000643B 01                                10178+         dc xl1'01' format one                                          02-DCCCA
0000643C 00000000                          10179+         dc a(0)                                                        02-DCCCA
00006440 0000000000000000                  10180+         dc ad(0)                                                       02-DCCCA
00006448 00000000000000B0                  10181+         dc ad(176)                                                     02-DCCCA
00006450 0000000000000000                  10182+         dc ad(0)                                                       02-DCCCA
00006458 0000000000001000                  10183+         dc ad(4096)                                                    02-DCCCA
00006460 20                                10184+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006461 03                                10185+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006462 03                                10186+         dc al1(3)                                                      02-DCCCA
00006463 08                                10187+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006464 00                                10188+         dc bl.8'00000000'                                              02-DCCCA
00006465 000000                            10189+         dc al3(0)                                                      02-DCCCA
00006468 0000000000006418                  10190+         dc ad(@LNAME1362)                                              02-DCCCA
00006470                                   10191+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  206 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006470 0000000000006438                  10192+         dc ad($eye0192)                                                02-DCCCA
00006478 0000000000000000                  10193+         dc ad(0)                                                       02-DCCCA
00006480                                   10194+         ds    0d                                                       01-DCCPR
                                           10195+         entry rd_kafka_msgq_set_metadata                               01-DCCPR
00006480                                   10196+rd_kafka_msgq_set_metadata ds 0d                                        01-DCCPR
00006480                                   10197+@REGION_1362_1 ds 0h                                                    01-DCCPR
00006480 EBEC D008 0024          00000008  10198+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006486 B904 00CF                         10199+         lgr   12,15               set base reg                         01-DCCPR
                        00006480           10200+         using @REGION_1362_1,12                                        01-DCCPR
                                           10201 * ******* End of Prologue
                                           10202 * *
                                           10203 * ***           rd_kafka_msg_t *rkm;
                                           10204 * ***
                                           10205 * ***           for ((rkm) = ((&rkmq->rkmq_msgs)->tqh_first); (rkm) !=\
                                           10206 *  (((void *)0)); (rkm) = ((rkm)->rkm_link .tqe_next)) {
0000648A E3F0 1000 0004          00000000  10207          LG    15,0(0,1)   ; rkmq
00006490 E3F0 F000 0004          00000000  10208          LG    15,0(0,15)  ; rkmq
00006496 47F0 C07A               000064FA  10209          B     @L876
0000649A                                   10210 @L875    DS    0H
                                           10211 * ***                   rkm->rkm_broker_id = broker_id;
0000649A 5820 100C               0000000C  10212          L     2,12(0,1)   ; broker_id
0000649E 5020 F074               00000074  10213          ST    2,116(0,15) ; offset of rkm_broker_id in rd_kafka_msg_s
                                           10214 * ***                   rkm->rkm_rkmessage.offset = base_offset++;
000064A2 E320 1010 0004          00000010  10215          LG    2,16(0,1)   ; base_offset
000064A8 B904 0032                         10216          LGR   3,2
000064AC A73B 0001               00000001  10217          AGHI  3,1
000064B0 E330 1010 0024          00000010  10218          STG   3,16(0,1)   ; base_offset
000064B6 E320 F038 0024          00000038  10219          STG   2,56(0,15)
                                           10220 * ***                   if (timestamp != -1) {
000064BC E558 1018 FFFF          00000018  10221          CGHSI 24(1),-1
000064C2 4780 C058               000064D8  10222          BE    @L879
                                           10223 * ***                           rkm->rkm_timestamp = timestamp;
000064C6 E320 1018 0004          00000018  10224          LG    2,24(0,1)   ; timestamp
000064CC E320 F060 0024          00000060  10225          STG   2,96(0,15)  ; offset of rkm_timestamp in rd_kafka_msg_s
                                           10226 * ***                           rkm->rkm_tstype = RD_KAFKA_TIMESTAMP_L\
                                           10227 * OG_APPEND_TIME;
000064D2 E54C F05C 0002          0000005C  10228          MVHI  92(15),2    ; offset of rkm_tstype in rd_kafka_msg_s
                                           10229 * ***                   }
000064D8                                   10230 @L879    DS    0H
                                           10231 * ***
                                           10232 * ***
                                           10233 * ***
                                           10234 * ***
                                           10235 * ***
                                           10236 * ***                   if (((status == RD_KAFKA_MSG_STATUS_NOT_PERSIS\
                                           10237 * TED && rkm->rkm_status != RD_KAFKA_MSG_STATUS_NOT_PERSISTED)))
000064D8 E55C 1024 0000          00000024  10238          CHSI  36(1),0
000064DE 4770 C06C               000064EC  10239          BNE   @L880
000064E2 E55C F070 0000          00000070  10240          CHSI  112(15),0
000064E8 4770 C074               000064F4  10241          BNE   @L878
                                           10242 * ***
                                           10243 * ***                           continue;
                                                                                                                           Page  207 
  Active Usings: @REGION_1362_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000064EC                                   10244 @L880    DS    0H
                                           10245 * ***
                                           10246 * ***                   rkm->rkm_status = status;
000064EC 5820 1024               00000024  10247          L     2,36(0,1)   ; status
000064F0 5020 F070               00000070  10248          ST    2,112(0,15) ; offset of rkm_status in rd_kafka_msg_s
                                           10249 * ***           }
000064F4                                   10250 @L878    DS    0H
000064F4 E3F0 F048 0004          00000048  10251          LG    15,72(0,15) ; offset of rkm_link in rd_kafka_msg_s
000064FA                                   10252 @L876    DS    0H
000064FA B902 002F                         10253          LTGR  2,15
000064FE 4770 C01A               0000649A  10254          BNE   @L875
                                           10255 * ***   }
00006502                                   10256 @ret_lab_1362 DS 0H
                                           10257 * * **** Start of Epilogue
                                           10258          DCCEPIL
00006502                                   10259+         ds 0h                                                          01-DCCEP
                                           10260+* Epilog
                                           10261+* Epilog
00006502 E3E0 D008 0004          00000008  10262+         lg    14,8(,13) restore the reg                                01-DCCEP
00006508 EB1C D020 0004          00000020  10263+         lmg   1,12,32(13)                                              01-DCCEP
0000650E 07FE                              10264+         br   14                                                        01-DCCEP
                                           10265+* End of Epilog
                                           10266 * * **** End of Epilogue
                                           10267          DROP  12
                                           10268 *
                                           10269 *   DSECT for automatic variables in "rd_kafka_msgq_set_metadata"
                                           10270 *      (FUNCTION #1362)
                                           10271 *
00000000                00000000 000000A8  10272 @AUTO#rd_kafka_msgq_set_metadata DSECT
00000000                                   10273          DS    XL168
                                           10274 *
00006510                00000000 0000E868  10275 @CODE    CSECT
                                           10276 *
                                           10277 *
                                           10278 *
                                           10279 * ....... start of rd_kafka_msgq_move_acked
                                           10280 rd_kafka_msgq_move_acked ALIAS X'99846D92818692816D94A287986D9496A5856D*
                                                                8183928584'
00006510                                   10281 @LNAME1363 DS  0H
00006510 00000018                          10282          DC    X'00000018'
00006514 99846D9281869281                  10283          DC    C'rd_kafka_msgq_move_acked'
0000652C 00                                10284          DC    X'00'
                                           10285 rd_kafka_msgq_move_acked DCCPRLG CINDEX=1363,BASER=12,FRAME=200,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1363
                                           10286          macro
                                           10287          dccextrn &m
                                           10288          gblc    &$dccext(1000)
                                           10289          gbla    &$dccexti
                                           10290          lcla    &i
                                           10291 &$dccext(&$dccexti+1) setc    '&m'
                                           10292 &i       seta    1
                                           10293 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  208 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10294          aif    ('&$dccext(&i)' eq '&m').getout
                                           10295 &i       seta    &i+1
                                           10296          ago     .loop
                                           10297 .around  anop
                                           10298 &$dccexti seta &$dccexti+1
                                           10299          extrn  &m
                                           10300 .getout  anop
                                           10301          mend
00006530                                   10302+$eye0195    ds    0d                                                    02-DCCCA
00006530 C4C3C3                            10303+         dc cl3'DCC'                                                    02-DCCCA
00006533 01                                10304+         dc xl1'01' format one                                          02-DCCCA
00006534 00000000                          10305+         dc a(0)                                                        02-DCCCA
00006538 00000000000065A2                  10306+         dc ad(@PER_1363)                                               02-DCCCA
00006540 00000000000000C8                  10307+         dc ad(200)                                                     02-DCCCA
00006548 0000000000000000                  10308+         dc ad(0)                                                       02-DCCCA
00006550 0000000000001000                  10309+         dc ad(4096)                                                    02-DCCCA
00006558 20                                10310+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006559 03                                10311+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000655A 03                                10312+         dc al1(3)                                                      02-DCCCA
0000655B 08                                10313+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000655C 00                                10314+         dc bl.8'00000000'                                              02-DCCCA
0000655D 000000                            10315+         dc al3(0)                                                      02-DCCCA
00006560 0000000000006510                  10316+         dc ad(@LNAME1363)                                              02-DCCCA
00006568                                   10317+         ds 0d                                                          02-DCCCA
00006568 0000000000006530                  10318+         dc ad($eye0195)                                                02-DCCCA
00006570 0000000000000000                  10319+         dc ad(0)                                                       02-DCCCA
00006578                                   10320+         ds    0d                                                       01-DCCPR
                                           10321+         entry rd_kafka_msgq_move_acked                                 01-DCCPR
00006578                                   10322+rd_kafka_msgq_move_acked ds 0d                                          01-DCCPR
00006578                                   10323+@REGION_1363_1 ds 0h                                                    01-DCCPR
00006578 EBEC D008 0024          00000008  10324+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000657E E3E0 D088 0004          00000088  10325+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006584 E3C0 D090 0004          00000090  10326+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000658A B904 002E                         10327+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000658E E3B0 C018 0004          00000018  10328+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006594 A7EB 00C8               000000C8  10329+         aghi  14,200              increase by frame size               01-DCCPR
00006598 E3E0 C020 0021          00000020  10330+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000659E 4720 B020               00000020  10331+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000065A2                                   10332+@PER_1363 ds   0h                                                       01-DCCPR
000065A2 EBDE 2080 0024          00000080  10333+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000065A8 E3C0 2090 0024          00000090  10334+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000065AE B904 00D2                         10335+         lgr   13,2                set real frame pointer               01-DCCPR
000065B2 B904 00CF                         10336+         lgr   12,15               set base reg                         01-DCCPR
                        00006578           10337+         using @REGION_1363_1,12                                        01-DCCPR
000065B6 B904 0031                         10338          LGR   3,1         ; ptr to parm area
                                           10339 * ******* End of Prologue
                                           10340 * *
                                           10341 * ***           rd_kafka_msg_t *rkm;
                                           10342 * ***
                                           10343 * ***           while ((rkm = rd_kafka_msgq_first(src)) &&
000065BA 47F0 C0B2               0000662A  10344          B     @L884
000065C0                                   10345          DS    0D
                                                                                                                           Page  209 
  Active Usings: @REGION_1363_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000065C0 000000C8                          10346 @FRAMESIZE_1363 DC F'200'
000065C4 00000000
000065C8 00000000000016C0                  10347 @lit_1363_334 DC AD(rd_kafka_msgq_deq)
000065D0 0000000000001B60                  10348 @lit_1363_335 DC AD(rd_kafka_msgq_enq)
000065D8 0000000000001A18                  10349 @lit_1363_336 DC AD(rd_kafka_msgq_first)
000065E0                                   10350 @L883    DS    0H
                                           10351 * ***                   rd_kafka_msgq_deq(src, rkm, 1);
000065E0 E3F0 3008 0004          00000008  10352          LG    15,8(0,3)   ; src
000065E6 E3F0 D0B0 0024          000000B0  10353          STG   15,176(0,13)
000065EC E320 D0B8 0024          000000B8  10354          STG   2,184(0,13)
000065F2 E548 D0C0 0001          000000C0  10355          MVGHI 192(13),1
000065F8 4110 D0B0               000000B0  10356          LA    1,176(0,13)
000065FC E3F0 C050 0004          000065C8  10357          LG    15,@lit_1363_334 ; rd_kafka_msgq_deq
00006602                                   10358 @@gen_label520 DS    0H
00006602 05EF                              10359          BALR  14,15
00006604                                   10360 @@gen_label521 DS    0H
                                           10361 * ***         rd_kafka_msgq_enq(dest, rkm);
00006604 E3F0 3000 0004          00000000  10362          LG    15,0(0,3)   ; dest
0000660A E3F0 D0B0 0024          000000B0  10363          STG   15,176(0,13)
00006610 E320 D0B8 0024          000000B8  10364          STG   2,184(0,13)
00006616 4110 D0B0               000000B0  10365          LA    1,176(0,13)
0000661A E3F0 C058 0004          000065D0  10366          LG    15,@lit_1363_335 ; rd_kafka_msgq_enq
00006620                                   10367 @@gen_label522 DS    0H
00006620 05EF                              10368          BALR  14,15
00006622                                   10369 @@gen_label523 DS    0H
                                           10370 * ***
                                           10371 * ***                   rkm->rkm_status = status;
00006622 58F0 301C               0000001C  10372          L     15,28(0,3)  ; status
00006626 50F0 2070               00000070  10373          ST    15,112(0,2) ; offset of rkm_status in rd_kafka_msg_s
                                           10374 * ***           }
0000662A                                   10375 @L884    DS    0H
0000662A E3F0 3008 0004          00000008  10376          LG    15,8(0,3)   ; src
00006630 E3F0 D0B0 0024          000000B0  10377          STG   15,176(0,13)
00006636 4110 D0B0               000000B0  10378          LA    1,176(0,13)
0000663A E3F0 C060 0004          000065D8  10379          LG    15,@lit_1363_336 ; rd_kafka_msgq_first
00006640                                   10380 @@gen_label524 DS    0H
00006640 05EF                              10381          BALR  14,15
00006642                                   10382 @@gen_label525 DS    0H
00006642 B904 002F                         10383          LGR   2,15
00006646 B902 00F2                         10384          LTGR  15,2
0000664A 4780 C0EA               00006662  10385          BZ    @L886
                                           10386 * ***                  rkm->rkm_u.producer.msgid <= last_msgid) {
0000664E E3F0 2090 0004          00000090  10387          LG    15,144(0,2) ; offset of msgid in 0000042
00006654 E3F0 3010 0021          00000010  10388          CLG   15,16(0,3)
0000665A 4720 C0EA               00006662  10389          BH    @L886
0000665E 47F0 C068               000065E0  10390          B     @L883
                                           10391 * ***
                                           10392 * ***           do { } while (0);
00006662                                   10393 @L886    DS    0H
                                           10394 * ***           do { } while (0);
00006662                                   10395 @L889    DS    0H
                                           10396 * ***   }
                                                                                                                           Page  210 
  Active Usings: @REGION_1363_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006662                                   10397 @ret_lab_1363 DS 0H
                                           10398 * * **** Start of Epilogue
                                           10399          DCCEPIL
00006662                                   10400+         ds 0h                                                          01-DCCEP
                                           10401+* Epilog
00006662 D707 D088 D088 00000088 00000088  10402+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006668 E3D0 D080 0004          00000080  10403+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000666E E3C0 D090 0004          00000090  10404+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006674 E3B0 C018 0004          00000018  10405+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000667A E3C0 B010 0021          00000010  10406+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006680 E3E0 D008 0004          00000008  10407+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006686 EB1C D020 0004          00000020  10408+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000668C 078E                              10409+         bcr 8,14                if same dsab, just return              01-DCCEP
0000668E E3F0 D010 0024          00000010  10410+         stg 15,16(0,13)         save return code                       01-DCCEP
00006694 E300 D018 0024          00000018  10411+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000669A E3F0 D090 0004          00000090  10412+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000066A0 E3F0 F018 0004          00000018  10413+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000066A6 47F0 F040               00000040  10414+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10415+* End of Epilog
                                           10416 * * **** End of Epilogue
                                           10417          DROP  12
                                           10418 *
                                           10419 *   DSECT for automatic variables in "rd_kafka_msgq_move_acked"
                                           10420 *      (FUNCTION #1363)
                                           10421 *
00000000                00000000 000000A8  10422 @AUTO#rd_kafka_msgq_move_acked DSECT
00000000                                   10423          DS    XL168
                                           10424 *
000066AA                00000000 0000E868  10425 @CODE    CSECT
                                           10426 *
                                           10427 *
                                           10428 *
                                           10429 * ....... start of rd_kafka_msg_partitioner_random
                                           10430 rd_kafka_msg_partitioner_random ALIAS X'99846D92818692816D94A2876D97819*
                                                                9A389A389969585996D998195849694'
000066AA                                   10431 @LNAME875 DS   0H
000066AA 0000001F                          10432          DC    X'0000001F'
000066AE 99846D9281869281                  10433          DC    C'rd_kafka_msg_partitioner_random'
000066CD 00                                10434          DC    X'00'
                                           10435 rd_kafka_msg_partitioner_random DCCPRLG CINDEX=875,BASER=12,FRAME=192,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME875
                                           10436          macro
                                           10437          dccextrn &m
                                           10438          gblc    &$dccext(1000)
                                           10439          gbla    &$dccexti
                                           10440          lcla    &i
                                           10441 &$dccext(&$dccexti+1) setc    '&m'
                                           10442 &i       seta    1
                                           10443 .loop    aif    (&i gt &$dccexti).around
                                           10444          aif    ('&$dccext(&i)' eq '&m').getout
                                           10445 &i       seta    &i+1
                                           10446          ago     .loop
                                                                                                                           Page  211 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10447 .around  anop
                                           10448 &$dccexti seta &$dccexti+1
                                           10449          extrn  &m
                                           10450 .getout  anop
                                           10451          mend
000066D0                                   10452+$eye0198    ds    0d                                                    02-DCCCA
000066D0 C4C3C3                            10453+         dc cl3'DCC'                                                    02-DCCCA
000066D3 01                                10454+         dc xl1'01' format one                                          02-DCCCA
000066D4 00000000                          10455+         dc a(0)                                                        02-DCCCA
000066D8 0000000000006742                  10456+         dc ad(@PER_875)                                                02-DCCCA
000066E0 00000000000000C0                  10457+         dc ad(192)                                                     02-DCCCA
000066E8 0000000000000000                  10458+         dc ad(0)                                                       02-DCCCA
000066F0 0000000000001000                  10459+         dc ad(4096)                                                    02-DCCCA
000066F8 20                                10460+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000066F9 03                                10461+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000066FA 03                                10462+         dc al1(3)                                                      02-DCCCA
000066FB 08                                10463+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000066FC 00                                10464+         dc bl.8'00000000'                                              02-DCCCA
000066FD 000000                            10465+         dc al3(0)                                                      02-DCCCA
00006700 00000000000066AA                  10466+         dc ad(@LNAME875)                                               02-DCCCA
00006708                                   10467+         ds 0d                                                          02-DCCCA
00006708 00000000000066D0                  10468+         dc ad($eye0198)                                                02-DCCCA
00006710 0000000000000000                  10469+         dc ad(0)                                                       02-DCCCA
00006718                                   10470+         ds    0d                                                       01-DCCPR
                                           10471+         entry rd_kafka_msg_partitioner_random                          01-DCCPR
00006718                                   10472+rd_kafka_msg_partitioner_random ds 0d                                   01-DCCPR
00006718                                   10473+@REGION_875_1 ds 0h                                                     01-DCCPR
00006718 EBEC D008 0024          00000008  10474+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000671E E3E0 D088 0004          00000088  10475+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006724 E3C0 D090 0004          00000090  10476+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000672A B904 002E                         10477+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000672E E3B0 C018 0004          00000018  10478+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006734 A7EB 00C0               000000C0  10479+         aghi  14,192              increase by frame size               01-DCCPR
00006738 E3E0 C020 0021          00000020  10480+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000673E 4720 B020               00000020  10481+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006742                                   10482+@PER_875 ds    0h                                                       01-DCCPR
00006742 EBDE 2080 0024          00000080  10483+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006748 E3C0 2090 0024          00000090  10484+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000674E B904 00D2                         10485+         lgr   13,2                set real frame pointer               01-DCCPR
00006752 B904 00CF                         10486+         lgr   12,15               set base reg                         01-DCCPR
                        00006718           10487+         using @REGION_875_1,12                                         01-DCCPR
00006756 B904 0031                         10488          LGR   3,1         ; ptr to parm area
                                           10489 * ******* End of Prologue
                                           10490 * *
                                           10491 * ***      int32_t p = rd_jitter(0, partition_cnt-1);
0000675A D707 D0B0 D0B0 000000B0 000000B0  10492          XC    176(8,13),176(13)
00006760 5840 301C               0000001C  10493          L     4,28(0,3)   ; partition_cnt
00006764 18F4                              10494          LR    15,4
00006766 A7FA FFFF               0000FFFF  10495          AHI   15,-1
0000676A B914 00FF                         10496          LGFR  15,15
0000676E E3F0 D0B8 0024          000000B8  10497          STG   15,184(0,13)
00006774 4110 D0B0               000000B0  10498          LA    1,176(0,13)
                                                                                                                           Page  212 
  Active Usings: @REGION_875_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006778 E350 C0C8 0004          000067E0  10499          LG    5,@lit_875_338 ; rd_jitter
0000677E B904 00F5                         10500          LGR   15,5
00006782                                   10501 @@gen_label528 DS    0H
00006782 05EF                              10502          BALR  14,15
00006784                                   10503 @@gen_label529 DS    0H
00006784 182F                              10504          LR    2,15
                                           10505 * ***      if (((!rd_kafka_topic_partition_available(rkt, p))))
00006786 E310 3000 0004          00000000  10506          LG    1,0(0,3)    ; rkt
0000678C E310 D0B0 0024          000000B0  10507          STG   1,176(0,13)
00006792 B914 00F2                         10508          LGFR  15,2
00006796 E3F0 D0B8 0024          000000B8  10509          STG   15,184(0,13)
0000679C 4110 D0B0               000000B0  10510          LA    1,176(0,13)
000067A0 E3F0 C0D0 0004          000067E8  10511          LG    15,@lit_875_339 ; rd_kafka_topic_partition_available
000067A6                                   10512 @@gen_label530 DS    0H
000067A6 05EF                              10513          BALR  14,15
000067A8                                   10514 @@gen_label531 DS    0H
000067A8 12FF                              10515          LTR   15,15
000067AA 4770 C0D8               000067F0  10516          BNZ   @L892
                                           10517 * ***         return rd_jitter(0, partition_cnt-1);
000067AE D707 D0B0 D0B0 000000B0 000000B0  10518          XC    176(8,13),176(13)
000067B4 A74A FFFF               0000FFFF  10519          AHI   4,-1
000067B8 B914 00F4                         10520          LGFR  15,4
000067BC E3F0 D0B8 0024          000000B8  10521          STG   15,184(0,13)
000067C2 4110 D0B0               000000B0  10522          LA    1,176(0,13)
000067C6 B904 00F5                         10523          LGR   15,5
000067CA                                   10524 @@gen_label533 DS    0H
000067CA 05EF                              10525          BALR  14,15
000067CC                                   10526 @@gen_label534 DS    0H
000067CC B914 00FF                         10527          LGFR  15,15
000067D0 47F0 C0DC               000067F4  10528          B     @ret_lab_875
000067D8                                   10529          DS    0D
000067D8 000000C0                          10530 @FRAMESIZE_875 DC F'192'
000067DC 00000000
000067E0 0000000000000000                  10531 @lit_875_338 DC AD(rd_jitter)
000067E8 0000000000000000                  10532 @lit_875_339 DC AD(rd_kafka_topic_partition_available)
                                           10533 * ***      else
000067F0                                   10534 @L892    DS    0H
                                           10535 * ***         return p;
000067F0 B914 00F2                         10536          LGFR  15,2
                                           10537 * ***   }
000067F4                                   10538 @ret_lab_875 DS 0H
                                           10539 * * **** Start of Epilogue
                                           10540          DCCEPIL
000067F4                                   10541+         ds 0h                                                          01-DCCEP
                                           10542+* Epilog
000067F4 D707 D088 D088 00000088 00000088  10543+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000067FA E3D0 D080 0004          00000080  10544+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006800 E3C0 D090 0004          00000090  10545+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006806 E3B0 C018 0004          00000018  10546+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000680C E3C0 B010 0021          00000010  10547+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006812 E3E0 D008 0004          00000008  10548+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006818 EB1C D020 0004          00000020  10549+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  213 
  Active Usings: @REGION_875_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000681E 078E                              10550+         bcr 8,14                if same dsab, just return              01-DCCEP
00006820 E3F0 D010 0024          00000010  10551+         stg 15,16(0,13)         save return code                       01-DCCEP
00006826 E300 D018 0024          00000018  10552+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000682C E3F0 D090 0004          00000090  10553+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006832 E3F0 F018 0004          00000018  10554+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006838 47F0 F040               00000040  10555+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10556+* End of Epilog
                                           10557 * * **** End of Epilogue
                                           10558          DROP  12
                                           10559 *
                                           10560 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_random"
                                           10561 *      (FUNCTION #875)
                                           10562 *
00000000                00000000 000000AC  10563 @AUTO#rd_kafka_msg_partitioner_random DSECT
00000000                                   10564          DS    XL168
000000A8                                   10565 rd_kafka_msg_partitioner_random#p#0 DS 1F ; p
                                           10566 *
0000683C                00000000 0000E868  10567 @CODE    CSECT
                                           10568 *
                                           10569 *
                                           10570 *
                                           10571 * ....... start of rd_kafka_msg_partitioner_consistent
                                           10572 rd_kafka_msg_partitioner_consistent ALIAS X'99846D92818692816D94A2876D9*
                                                                78199A389A389969585996D839695A289A2A38595A3'
0000683C                                   10573 @LNAME876 DS   0H
0000683C 00000023                          10574          DC    X'00000023'
00006840 99846D9281869281                  10575          DC    C'rd_kafka_msg_partitioner_consist'
00006860 8595A3                            10576          DC    C'ent'
00006863 00                                10577          DC    X'00'
                                           10578 rd_kafka_msg_partitioner_consistent DCCPRLG CINDEX=876,BASER=12,FRAME=1*
                                                                84,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME876
                                           10579          macro
                                           10580          dccextrn &m
                                           10581          gblc    &$dccext(1000)
                                           10582          gbla    &$dccexti
                                           10583          lcla    &i
                                           10584 &$dccext(&$dccexti+1) setc    '&m'
                                           10585 &i       seta    1
                                           10586 .loop    aif    (&i gt &$dccexti).around
                                           10587          aif    ('&$dccext(&i)' eq '&m').getout
                                           10588 &i       seta    &i+1
                                           10589          ago     .loop
                                           10590 .around  anop
                                           10591 &$dccexti seta &$dccexti+1
                                           10592          extrn  &m
                                           10593 .getout  anop
                                           10594          mend
00006868                                   10595+$eye0201    ds    0d                                                    02-DCCCA
00006868 C4C3C3                            10596+         dc cl3'DCC'                                                    02-DCCCA
0000686B 01                                10597+         dc xl1'01' format one                                          02-DCCCA
0000686C 00000000                          10598+         dc a(0)                                                        02-DCCCA
00006870 00000000000068DA                  10599+         dc ad(@PER_876)                                                02-DCCCA
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006878 00000000000000B8                  10600+         dc ad(184)                                                     02-DCCCA
00006880 0000000000000000                  10601+         dc ad(0)                                                       02-DCCCA
00006888 0000000000001000                  10602+         dc ad(4096)                                                    02-DCCCA
00006890 20                                10603+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006891 03                                10604+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006892 03                                10605+         dc al1(3)                                                      02-DCCCA
00006893 08                                10606+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006894 00                                10607+         dc bl.8'00000000'                                              02-DCCCA
00006895 000000                            10608+         dc al3(0)                                                      02-DCCCA
00006898 000000000000683C                  10609+         dc ad(@LNAME876)                                               02-DCCCA
000068A0                                   10610+         ds 0d                                                          02-DCCCA
000068A0 0000000000006868                  10611+         dc ad($eye0201)                                                02-DCCCA
000068A8 0000000000000000                  10612+         dc ad(0)                                                       02-DCCCA
000068B0                                   10613+         ds    0d                                                       01-DCCPR
                                           10614+         entry rd_kafka_msg_partitioner_consistent                      01-DCCPR
000068B0                                   10615+rd_kafka_msg_partitioner_consistent ds 0d                               01-DCCPR
000068B0                                   10616+@REGION_876_1 ds 0h                                                     01-DCCPR
000068B0 EBEC D008 0024          00000008  10617+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000068B6 E3E0 D088 0004          00000088  10618+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000068BC E3C0 D090 0004          00000090  10619+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000068C2 B904 002E                         10620+         lgr   2,14                copy addr of our savearea            01-DCCPR
000068C6 E3B0 C018 0004          00000018  10621+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000068CC A7EB 00B8               000000B8  10622+         aghi  14,184              increase by frame size               01-DCCPR
000068D0 E3E0 C020 0021          00000020  10623+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000068D6 4720 B020               00000020  10624+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000068DA                                   10625+@PER_876 ds    0h                                                       01-DCCPR
000068DA EBDE 2080 0024          00000080  10626+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000068E0 E3C0 2090 0024          00000090  10627+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000068E6 B904 00D2                         10628+         lgr   13,2                set real frame pointer               01-DCCPR
000068EA B904 00CF                         10629+         lgr   12,15               set base reg                         01-DCCPR
                        000068B0           10630+         using @REGION_876_1,12                                         01-DCCPR
000068EE B904 0021                         10631          LGR   2,1         ; ptr to parm area
                                           10632 * ******* End of Prologue
                                           10633 * *
                                           10634 * ***       return rd_crc32(key, keylen) % partition_cnt;
000068F2 E3F0 2008 0004          00000008  10635          LG    15,8(0,2)   ; key
000068F8 E3F0 D0A8 0024          000000A8  10636          STG   15,168(0,13)
000068FE E3F0 2010 0004          00000010  10637          LG    15,16(0,2)  ; keylen
00006904 E3F0 D0B0 0024          000000B0  10638          STG   15,176(0,13)
0000690A 4110 D0A8               000000A8  10639          LA    1,168(0,13)
0000690E E3F0 C0C8 0004          00006978  10640          LG    15,@lit_876_342 ; rd_crc32
00006914                                   10641 @@gen_label535 DS    0H
00006914 05EF                              10642          BALR  14,15
00006916                                   10643 @@gen_label536 DS    0H
00006916 5810 201C               0000001C  10644          L     1,28(0,2)   ; partition_cnt
0000691A 183F                              10645          LR    3,15
0000691C A728 0000               00000000  10646          LHI   2,0
00006920 B997 0021                         10647          DLR   2,1
00006924 B914 00F2                         10648          LGFR  15,2
                                           10649 * ***   }
                                           10650 * * **** Start of Epilogue
                                           10651          DCCEPIL
                                                                                                                           Page  215 
  Active Usings: @REGION_876_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006928                                   10652+         ds 0h                                                          01-DCCEP
                                           10653+* Epilog
00006928 D707 D088 D088 00000088 00000088  10654+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000692E E3D0 D080 0004          00000080  10655+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006934 E3C0 D090 0004          00000090  10656+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000693A E3B0 C018 0004          00000018  10657+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006940 E3C0 B010 0021          00000010  10658+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006946 E3E0 D008 0004          00000008  10659+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000694C EB1C D020 0004          00000020  10660+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006952 078E                              10661+         bcr 8,14                if same dsab, just return              01-DCCEP
00006954 E3F0 D010 0024          00000010  10662+         stg 15,16(0,13)         save return code                       01-DCCEP
0000695A E300 D018 0024          00000018  10663+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006960 E3F0 D090 0004          00000090  10664+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006966 E3F0 F018 0004          00000018  10665+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000696C 47F0 F040               00000040  10666+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10667+* End of Epilog
                                           10668 * * **** End of Epilogue
00006970                                   10669          DS    0D
00006970 000000B8                          10670 @FRAMESIZE_876 DC F'184'
00006974 00000000
00006978 0000000000002018                  10671 @lit_876_342 DC AD(rd_crc32)
                                           10672          DROP  12
                                           10673 *
                                           10674 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_consist
                                           10675 *           ent"
                                           10676 *      (FUNCTION #876)
                                           10677 *
00000000                00000000 000000A8  10678 @AUTO#rd_kafka_msg_partitioner_consistent DSECT
00000000                                   10679          DS    XL168
                                           10680 *
00006980                00000000 0000E868  10681 @CODE    CSECT
                                           10682 *
                                           10683 *
                                           10684 *
                                           10685 * ....... start of rd_kafka_msg_partitioner_consistent_random
                                           10686 rd_kafka_msg_partitioner_consistent_random ALIAS X'99846D92818692816D94*
                                                                A2876D978199A389A389969585996D839695A289A2A38595A36D9981*
                                                                95849694'
00006980                                   10687 @LNAME877 DS   0H
00006980 0000002A                          10688          DC    X'0000002A'
00006984 99846D9281869281                  10689          DC    C'rd_kafka_msg_partitioner_consist'
000069A4 8595A36D99819584                  10690          DC    C'ent_random'
000069AE 00                                10691          DC    X'00'
                                           10692 rd_kafka_msg_partitioner_consistent_random DCCPRLG CINDEX=877,BASER=12,*
                                                                FRAME=216,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME877
                                           10693          macro
                                           10694          dccextrn &m
                                           10695          gblc    &$dccext(1000)
                                           10696          gbla    &$dccexti
                                           10697          lcla    &i
                                           10698 &$dccext(&$dccexti+1) setc    '&m'
                                           10699 &i       seta    1
                                                                                                                           Page  216 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10700 .loop    aif    (&i gt &$dccexti).around
                                           10701          aif    ('&$dccext(&i)' eq '&m').getout
                                           10702 &i       seta    &i+1
                                           10703          ago     .loop
                                           10704 .around  anop
                                           10705 &$dccexti seta &$dccexti+1
                                           10706          extrn  &m
                                           10707 .getout  anop
                                           10708          mend
000069B0                                   10709+$eye0204    ds    0d                                                    02-DCCCA
000069B0 C4C3C3                            10710+         dc cl3'DCC'                                                    02-DCCCA
000069B3 01                                10711+         dc xl1'01' format one                                          02-DCCCA
000069B4 00000000                          10712+         dc a(0)                                                        02-DCCCA
000069B8 0000000000006A22                  10713+         dc ad(@PER_877)                                                02-DCCCA
000069C0 00000000000000D8                  10714+         dc ad(216)                                                     02-DCCCA
000069C8 0000000000000000                  10715+         dc ad(0)                                                       02-DCCCA
000069D0 0000000000001000                  10716+         dc ad(4096)                                                    02-DCCCA
000069D8 20                                10717+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000069D9 03                                10718+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000069DA 03                                10719+         dc al1(3)                                                      02-DCCCA
000069DB 08                                10720+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000069DC 00                                10721+         dc bl.8'00000000'                                              02-DCCCA
000069DD 000000                            10722+         dc al3(0)                                                      02-DCCCA
000069E0 0000000000006980                  10723+         dc ad(@LNAME877)                                               02-DCCCA
000069E8                                   10724+         ds 0d                                                          02-DCCCA
000069E8 00000000000069B0                  10725+         dc ad($eye0204)                                                02-DCCCA
000069F0 0000000000000000                  10726+         dc ad(0)                                                       02-DCCCA
000069F8                                   10727+         ds    0d                                                       01-DCCPR
                                           10728+         entry rd_kafka_msg_partitioner_consistent_random               01-DCCPR
000069F8                                   10729+rd_kafka_msg_partitioner_consistent_random ds 0d                        01-DCCPR
000069F8                                   10730+@REGION_877_1 ds 0h                                                     01-DCCPR
000069F8 EBEC D008 0024          00000008  10731+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000069FE E3E0 D088 0004          00000088  10732+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006A04 E3C0 D090 0004          00000090  10733+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006A0A B904 002E                         10734+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006A0E E3B0 C018 0004          00000018  10735+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006A14 A7EB 00D8               000000D8  10736+         aghi  14,216              increase by frame size               01-DCCPR
00006A18 E3E0 C020 0021          00000020  10737+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006A1E 4720 B020               00000020  10738+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006A22                                   10739+@PER_877 ds    0h                                                       01-DCCPR
00006A22 EBDE 2080 0024          00000080  10740+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006A28 E3C0 2090 0024          00000090  10741+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006A2E B904 00D2                         10742+         lgr   13,2                set real frame pointer               01-DCCPR
00006A32 B904 00CF                         10743+         lgr   12,15               set base reg                         01-DCCPR
                        000069F8           10744+         using @REGION_877_1,12                                         01-DCCPR
                                           10745 * ******* End of Prologue
                                           10746 * *
                                           10747 * ***       if (keylen == 0)
00006A36 E3F0 1010 0004          00000010  10748          LG    15,16(0,1)  ; keylen
00006A3C B902 002F                         10749          LTGR  2,15
00006A40 4770 C0C0               00006AB8  10750          BNE   @L894
                                           10751 * ***         return rd_kafka_msg_partitioner_random(rkt,
                                                                                                                           Page  217 
  Active Usings: @REGION_877_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10752 * ***                                                key,
                                           10753 * ***                                                keylen,
                                           10754 * ***                                                partition_cnt,
                                           10755 * ***                                                rkt_opaque,
                                           10756 * ***                                                msg_opaque);
00006A44 E320 1000 0004          00000000  10757          LG    2,0(0,1)    ; rkt
00006A4A E320 D0A8 0024          000000A8  10758          STG   2,168(0,13)
00006A50 E320 1008 0004          00000008  10759          LG    2,8(0,1)    ; key
00006A56 E320 D0B0 0024          000000B0  10760          STG   2,176(0,13)
00006A5C E3F0 D0B8 0024          000000B8  10761          STG   15,184(0,13)
00006A62 E3F0 101C 0014          0000001C  10762          LGF   15,28(0,1)  ; partition_cnt
00006A68 E3F0 D0C0 0024          000000C0  10763          STG   15,192(0,13)
00006A6E E3F0 1020 0004          00000020  10764          LG    15,32(0,1)  ; rkt_opaque
00006A74 E3F0 D0C8 0024          000000C8  10765          STG   15,200(0,13)
00006A7A E3F0 1028 0004          00000028  10766          LG    15,40(0,1)  ; msg_opaque
00006A80 E3F0 D0D0 0024          000000D0  10767          STG   15,208(0,13)
00006A86 4110 D0A8               000000A8  10768          LA    1,168(0,13)
00006A8A E3F0 C0B0 0004          00006AA8  10769          LG    15,@lit_877_344 ; rd_kafka_msg_partitioner_random
00006A90                                   10770 @@gen_label538 DS    0H
00006A90 05EF                              10771          BALR  14,15
00006A92                                   10772 @@gen_label539 DS    0H
00006A92 B914 00FF                         10773          LGFR  15,15
00006A96 47F0 C112               00006B0A  10774          B     @ret_lab_877
00006AA0                                   10775          DS    0D
00006AA0 000000D8                          10776 @FRAMESIZE_877 DC F'216'
00006AA4 00000000
00006AA8 0000000000006718                  10777 @lit_877_344 DC AD(rd_kafka_msg_partitioner_random)
00006AB0 00000000000068B0                  10778 @lit_877_345 DC AD(rd_kafka_msg_partitioner_consistent)
                                           10779 * ***       else
00006AB8                                   10780 @L894    DS    0H
                                           10781 * ***         return rd_kafka_msg_partitioner_consistent(rkt,
                                           10782 * ***                                                    key,
                                           10783 * ***                                                    keylen,
                                           10784 * ***                                                    partition_cnt\
                                           10785 * ,
                                           10786 * ***                                                    rkt_opaque,
                                           10787 * ***                                                    msg_opaque);
00006AB8 E320 1000 0004          00000000  10788          LG    2,0(0,1)    ; rkt
00006ABE E320 D0A8 0024          000000A8  10789          STG   2,168(0,13)
00006AC4 E320 1008 0004          00000008  10790          LG    2,8(0,1)    ; key
00006ACA E320 D0B0 0024          000000B0  10791          STG   2,176(0,13)
00006AD0 E3F0 D0B8 0024          000000B8  10792          STG   15,184(0,13)
00006AD6 E3F0 101C 0014          0000001C  10793          LGF   15,28(0,1)  ; partition_cnt
00006ADC E3F0 D0C0 0024          000000C0  10794          STG   15,192(0,13)
00006AE2 E3F0 1020 0004          00000020  10795          LG    15,32(0,1)  ; rkt_opaque
00006AE8 E3F0 D0C8 0024          000000C8  10796          STG   15,200(0,13)
00006AEE E3F0 1028 0004          00000028  10797          LG    15,40(0,1)  ; msg_opaque
00006AF4 E3F0 D0D0 0024          000000D0  10798          STG   15,208(0,13)
00006AFA 4110 D0A8               000000A8  10799          LA    1,168(0,13)
00006AFE E3F0 C0B8 0004          00006AB0  10800          LG    15,@lit_877_345 ; rd_kafka_msg_partitioner_consistent
00006B04                                   10801 @@gen_label540 DS    0H
00006B04 05EF                              10802          BALR  14,15
                                                                                                                           Page  218 
  Active Usings: @REGION_877_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006B06                                   10803 @@gen_label541 DS    0H
00006B06 B914 00FF                         10804          LGFR  15,15
                                           10805 * ***   }
00006B0A                                   10806 @ret_lab_877 DS 0H
                                           10807 * * **** Start of Epilogue
                                           10808          DCCEPIL
00006B0A                                   10809+         ds 0h                                                          01-DCCEP
                                           10810+* Epilog
00006B0A D707 D088 D088 00000088 00000088  10811+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006B10 E3D0 D080 0004          00000080  10812+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006B16 E3C0 D090 0004          00000090  10813+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006B1C E3B0 C018 0004          00000018  10814+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006B22 E3C0 B010 0021          00000010  10815+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006B28 E3E0 D008 0004          00000008  10816+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006B2E EB1C D020 0004          00000020  10817+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006B34 078E                              10818+         bcr 8,14                if same dsab, just return              01-DCCEP
00006B36 E3F0 D010 0024          00000010  10819+         stg 15,16(0,13)         save return code                       01-DCCEP
00006B3C E300 D018 0024          00000018  10820+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006B42 E3F0 D090 0004          00000090  10821+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006B48 E3F0 F018 0004          00000018  10822+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006B4E 47F0 F040               00000040  10823+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10824+* End of Epilog
                                           10825 * * **** End of Epilogue
                                           10826          DROP  12
                                           10827 *
                                           10828 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_consist
                                           10829 *           ent_random"
                                           10830 *      (FUNCTION #877)
                                           10831 *
00000000                00000000 000000A8  10832 @AUTO#rd_kafka_msg_partitioner_consistent_random DSECT
00000000                                   10833          DS    XL168
                                           10834 *
00006B52                00000000 0000E868  10835 @CODE    CSECT
                                           10836 *
                                           10837 *
                                           10838 *
                                           10839 * ....... start of rd_kafka_msg_partitioner_murmur2
                                           10840 rd_kafka_msg_partitioner_murmur2 ALIAS X'99846D92818692816D94A2876D9781*
                                                                99A389A389969585996D94A49994A499F2'
00006B52                                   10841 @LNAME878 DS   0H
00006B52 00000020                          10842          DC    X'00000020'
00006B56 99846D9281869281                  10843          DC    C'rd_kafka_msg_partitioner_murmur2'
00006B76 00                                10844          DC    X'00'
                                           10845 rd_kafka_msg_partitioner_murmur2 DCCPRLG CINDEX=878,BASER=12,FRAME=184,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME878
                                           10846          macro
                                           10847          dccextrn &m
                                           10848          gblc    &$dccext(1000)
                                           10849          gbla    &$dccexti
                                           10850          lcla    &i
                                           10851 &$dccext(&$dccexti+1) setc    '&m'
                                           10852 &i       seta    1
                                                                                                                           Page  219 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10853 .loop    aif    (&i gt &$dccexti).around
                                           10854          aif    ('&$dccext(&i)' eq '&m').getout
                                           10855 &i       seta    &i+1
                                           10856          ago     .loop
                                           10857 .around  anop
                                           10858 &$dccexti seta &$dccexti+1
                                           10859          extrn  &m
                                           10860 .getout  anop
                                           10861          mend
00006B78                                   10862+$eye0207    ds    0d                                                    02-DCCCA
00006B78 C4C3C3                            10863+         dc cl3'DCC'                                                    02-DCCCA
00006B7B 01                                10864+         dc xl1'01' format one                                          02-DCCCA
00006B7C 00000000                          10865+         dc a(0)                                                        02-DCCCA
00006B80 0000000000006BEA                  10866+         dc ad(@PER_878)                                                02-DCCCA
00006B88 00000000000000B8                  10867+         dc ad(184)                                                     02-DCCCA
00006B90 0000000000000000                  10868+         dc ad(0)                                                       02-DCCCA
00006B98 0000000000001000                  10869+         dc ad(4096)                                                    02-DCCCA
00006BA0 20                                10870+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006BA1 03                                10871+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006BA2 03                                10872+         dc al1(3)                                                      02-DCCCA
00006BA3 08                                10873+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006BA4 00                                10874+         dc bl.8'00000000'                                              02-DCCCA
00006BA5 000000                            10875+         dc al3(0)                                                      02-DCCCA
00006BA8 0000000000006B52                  10876+         dc ad(@LNAME878)                                               02-DCCCA
00006BB0                                   10877+         ds 0d                                                          02-DCCCA
00006BB0 0000000000006B78                  10878+         dc ad($eye0207)                                                02-DCCCA
00006BB8 0000000000000000                  10879+         dc ad(0)                                                       02-DCCCA
00006BC0                                   10880+         ds    0d                                                       01-DCCPR
                                           10881+         entry rd_kafka_msg_partitioner_murmur2                         01-DCCPR
00006BC0                                   10882+rd_kafka_msg_partitioner_murmur2 ds 0d                                  01-DCCPR
00006BC0                                   10883+@REGION_878_1 ds 0h                                                     01-DCCPR
00006BC0 EBEC D008 0024          00000008  10884+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006BC6 E3E0 D088 0004          00000088  10885+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006BCC E3C0 D090 0004          00000090  10886+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006BD2 B904 002E                         10887+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006BD6 E3B0 C018 0004          00000018  10888+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006BDC A7EB 00B8               000000B8  10889+         aghi  14,184              increase by frame size               01-DCCPR
00006BE0 E3E0 C020 0021          00000020  10890+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006BE6 4720 B020               00000020  10891+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006BEA                                   10892+@PER_878 ds    0h                                                       01-DCCPR
00006BEA EBDE 2080 0024          00000080  10893+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006BF0 E3C0 2090 0024          00000090  10894+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006BF6 B904 00D2                         10895+         lgr   13,2                set real frame pointer               01-DCCPR
00006BFA B904 00CF                         10896+         lgr   12,15               set base reg                         01-DCCPR
                        00006BC0           10897+         using @REGION_878_1,12                                         01-DCCPR
00006BFE B904 0021                         10898          LGR   2,1         ; ptr to parm area
                                           10899 * ******* End of Prologue
                                           10900 * *
                                           10901 * ***           return (rd_murmur2(key, keylen) & 0x7fffffff) % partit\
                                           10902 * ion_cnt;
00006C02 E3F0 2008 0004          00000008  10903          LG    15,8(0,2)   ; key
00006C08 E3F0 D0A8 0024          000000A8  10904          STG   15,168(0,13)
                                                                                                                           Page  220 
  Active Usings: @REGION_878_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006C0E E3F0 2010 0004          00000010  10905          LG    15,16(0,2)  ; keylen
00006C14 E3F0 D0B0 0024          000000B0  10906          STG   15,176(0,13)
00006C1A 4110 D0A8               000000A8  10907          LA    1,168(0,13)
00006C1E E3F0 C0D0 0004          00006C90  10908          LG    15,@lit_878_347 ; rd_murmur2
00006C24                                   10909 @@gen_label542 DS    0H
00006C24 05EF                              10910          BALR  14,15
00006C26                                   10911 @@gen_label543 DS    0H
00006C26 A5F6 7FFF               00007FFF  10912          NILH  15,32767
00006C2A 5810 201C               0000001C  10913          L     1,28(0,2)   ; partition_cnt
00006C2E 183F                              10914          LR    3,15
00006C30 A728 0000               00000000  10915          LHI   2,0
00006C34 B997 0021                         10916          DLR   2,1
00006C38 B914 00F2                         10917          LGFR  15,2
                                           10918 * ***   }
                                           10919 * * **** Start of Epilogue
                                           10920          DCCEPIL
00006C3C                                   10921+         ds 0h                                                          01-DCCEP
                                           10922+* Epilog
00006C3C D707 D088 D088 00000088 00000088  10923+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006C42 E3D0 D080 0004          00000080  10924+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006C48 E3C0 D090 0004          00000090  10925+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006C4E E3B0 C018 0004          00000018  10926+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006C54 E3C0 B010 0021          00000010  10927+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006C5A E3E0 D008 0004          00000008  10928+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006C60 EB1C D020 0004          00000020  10929+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006C66 078E                              10930+         bcr 8,14                if same dsab, just return              01-DCCEP
00006C68 E3F0 D010 0024          00000010  10931+         stg 15,16(0,13)         save return code                       01-DCCEP
00006C6E E300 D018 0024          00000018  10932+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006C74 E3F0 D090 0004          00000090  10933+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006C7A E3F0 F018 0004          00000018  10934+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006C80 47F0 F040               00000040  10935+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10936+* End of Epilog
                                           10937 * * **** End of Epilogue
00006C88                                   10938          DS    0D
00006C88 000000B8                          10939 @FRAMESIZE_878 DC F'184'
00006C8C 00000000
00006C90 0000000000000000                  10940 @lit_878_347 DC AD(rd_murmur2)
                                           10941          DROP  12
                                           10942 *
                                           10943 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_murmur2"
                                           10944 *      (FUNCTION #878)
                                           10945 *
00000000                00000000 000000A8  10946 @AUTO#rd_kafka_msg_partitioner_murmur2 DSECT
00000000                                   10947          DS    XL168
                                           10948 *
00006C98                00000000 0000E868  10949 @CODE    CSECT
                                           10950 *
                                           10951 *
                                           10952 *
                                           10953 * ....... start of rd_kafka_msg_partitioner_murmur2_random
                                           10954 rd_kafka_msg_partitioner_murmur2_random ALIAS X'99846D92818692816D94A28*
                                                                76D978199A389A389969585996D94A49994A499F26D998195849694'
                                                                                                                           Page  221 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006C98                                   10955 @LNAME879 DS   0H
00006C98 00000027                          10956          DC    X'00000027'
00006C9C 99846D9281869281                  10957          DC    C'rd_kafka_msg_partitioner_murmur2'
00006CBC 6D998195849694                    10958          DC    C'_random'
00006CC3 00                                10959          DC    X'00'
                                           10960 rd_kafka_msg_partitioner_murmur2_random DCCPRLG CINDEX=879,BASER=12,FRA*
                                                                ME=216,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME879
                                           10961          macro
                                           10962          dccextrn &m
                                           10963          gblc    &$dccext(1000)
                                           10964          gbla    &$dccexti
                                           10965          lcla    &i
                                           10966 &$dccext(&$dccexti+1) setc    '&m'
                                           10967 &i       seta    1
                                           10968 .loop    aif    (&i gt &$dccexti).around
                                           10969          aif    ('&$dccext(&i)' eq '&m').getout
                                           10970 &i       seta    &i+1
                                           10971          ago     .loop
                                           10972 .around  anop
                                           10973 &$dccexti seta &$dccexti+1
                                           10974          extrn  &m
                                           10975 .getout  anop
                                           10976          mend
00006CC8                                   10977+$eye0210    ds    0d                                                    02-DCCCA
00006CC8 C4C3C3                            10978+         dc cl3'DCC'                                                    02-DCCCA
00006CCB 01                                10979+         dc xl1'01' format one                                          02-DCCCA
00006CCC 00000000                          10980+         dc a(0)                                                        02-DCCCA
00006CD0 0000000000006D3A                  10981+         dc ad(@PER_879)                                                02-DCCCA
00006CD8 00000000000000D8                  10982+         dc ad(216)                                                     02-DCCCA
00006CE0 0000000000000000                  10983+         dc ad(0)                                                       02-DCCCA
00006CE8 0000000000001000                  10984+         dc ad(4096)                                                    02-DCCCA
00006CF0 20                                10985+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006CF1 03                                10986+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006CF2 03                                10987+         dc al1(3)                                                      02-DCCCA
00006CF3 08                                10988+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006CF4 00                                10989+         dc bl.8'00000000'                                              02-DCCCA
00006CF5 000000                            10990+         dc al3(0)                                                      02-DCCCA
00006CF8 0000000000006C98                  10991+         dc ad(@LNAME879)                                               02-DCCCA
00006D00                                   10992+         ds 0d                                                          02-DCCCA
00006D00 0000000000006CC8                  10993+         dc ad($eye0210)                                                02-DCCCA
00006D08 0000000000000000                  10994+         dc ad(0)                                                       02-DCCCA
00006D10                                   10995+         ds    0d                                                       01-DCCPR
                                           10996+         entry rd_kafka_msg_partitioner_murmur2_random                  01-DCCPR
00006D10                                   10997+rd_kafka_msg_partitioner_murmur2_random ds 0d                           01-DCCPR
00006D10                                   10998+@REGION_879_1 ds 0h                                                     01-DCCPR
00006D10 EBEC D008 0024          00000008  10999+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006D16 E3E0 D088 0004          00000088  11000+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006D1C E3C0 D090 0004          00000090  11001+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006D22 B904 002E                         11002+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006D26 E3B0 C018 0004          00000018  11003+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006D2C A7EB 00D8               000000D8  11004+         aghi  14,216              increase by frame size               01-DCCPR
00006D30 E3E0 C020 0021          00000020  11005+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page  222 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006D36 4720 B020               00000020  11006+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006D3A                                   11007+@PER_879 ds    0h                                                       01-DCCPR
00006D3A EBDE 2080 0024          00000080  11008+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006D40 E3C0 2090 0024          00000090  11009+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006D46 B904 00D2                         11010+         lgr   13,2                set real frame pointer               01-DCCPR
00006D4A B904 00CF                         11011+         lgr   12,15               set base reg                         01-DCCPR
                        00006D10           11012+         using @REGION_879_1,12                                         01-DCCPR
00006D4E B904 0021                         11013          LGR   2,1         ; ptr to parm area
                                           11014 * ******* End of Prologue
                                           11015 * *
                                           11016 * ***           if (!key)
00006D52 E3F0 2008 0004          00000008  11017          LG    15,8(0,2)   ; key
00006D58 B902 001F                         11018          LTGR  1,15
00006D5C 4770 C0C0               00006DD0  11019          BNZ   @L896
                                           11020 * ***                   return rd_kafka_msg_partitioner_random(rkt,
                                           11021 * ***                                                          key,
                                           11022 * ***                                                          keylen,
                                           11023 * ***                                                          partiti\
                                           11024 * on_cnt,
                                           11025 * ***                                                          rkt_opa\
                                           11026 * que,
                                           11027 * ***                                                          msg_opa\
                                           11028 * que);
00006D60 E310 2000 0004          00000000  11029          LG    1,0(0,2)    ; rkt
00006D66 E310 D0A8 0024          000000A8  11030          STG   1,168(0,13)
00006D6C E3F0 D0B0 0024          000000B0  11031          STG   15,176(0,13)
00006D72 E3F0 2010 0004          00000010  11032          LG    15,16(0,2)  ; keylen
00006D78 E3F0 D0B8 0024          000000B8  11033          STG   15,184(0,13)
00006D7E E3F0 201C 0014          0000001C  11034          LGF   15,28(0,2)  ; partition_cnt
00006D84 E3F0 D0C0 0024          000000C0  11035          STG   15,192(0,13)
00006D8A E3F0 2020 0004          00000020  11036          LG    15,32(0,2)  ; rkt_opaque
00006D90 E3F0 D0C8 0024          000000C8  11037          STG   15,200(0,13)
00006D96 E3F0 2028 0004          00000028  11038          LG    15,40(0,2)  ; msg_opaque
00006D9C E3F0 D0D0 0024          000000D0  11039          STG   15,208(0,13)
00006DA2 4110 D0A8               000000A8  11040          LA    1,168(0,13)
00006DA6 E3F0 C0B0 0004          00006DC0  11041          LG    15,@lit_879_349 ; rd_kafka_msg_partitioner_random
00006DAC                                   11042 @@gen_label545 DS    0H
00006DAC 05EF                              11043          BALR  14,15
00006DAE                                   11044 @@gen_label546 DS    0H
00006DAE B914 00FF                         11045          LGFR  15,15
00006DB2 47F0 C0F4               00006E04  11046          B     @ret_lab_879
00006DB8                                   11047          DS    0D
00006DB8 000000D8                          11048 @FRAMESIZE_879 DC F'216'
00006DBC 00000000
00006DC0 0000000000006718                  11049 @lit_879_349 DC AD(rd_kafka_msg_partitioner_random)
00006DC8 0000000000000000                  11050 @lit_879_350 DC AD(rd_murmur2)
                                           11051 * ***           else
00006DD0                                   11052 @L896    DS    0H
                                           11053 * ***                   return (rd_murmur2(key, keylen) & 0x7fffffff) \
                                           11054 * % partition_cnt;
00006DD0 E3F0 D0A8 0024          000000A8  11055          STG   15,168(0,13)
00006DD6 E3F0 2010 0004          00000010  11056          LG    15,16(0,2)  ; keylen
                                                                                                                           Page  223 
  Active Usings: @REGION_879_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006DDC E3F0 D0B0 0024          000000B0  11057          STG   15,176(0,13)
00006DE2 4110 D0A8               000000A8  11058          LA    1,168(0,13)
00006DE6 E3F0 C0B8 0004          00006DC8  11059          LG    15,@lit_879_350 ; rd_murmur2
00006DEC                                   11060 @@gen_label547 DS    0H
00006DEC 05EF                              11061          BALR  14,15
00006DEE                                   11062 @@gen_label548 DS    0H
00006DEE A5F6 7FFF               00007FFF  11063          NILH  15,32767
00006DF2 5810 201C               0000001C  11064          L     1,28(0,2)   ; partition_cnt
00006DF6 183F                              11065          LR    3,15
00006DF8 A728 0000               00000000  11066          LHI   2,0
00006DFC B997 0021                         11067          DLR   2,1
00006E00 B914 00F2                         11068          LGFR  15,2
                                           11069 * ***   }
00006E04                                   11070 @ret_lab_879 DS 0H
                                           11071 * * **** Start of Epilogue
                                           11072          DCCEPIL
00006E04                                   11073+         ds 0h                                                          01-DCCEP
                                           11074+* Epilog
00006E04 D707 D088 D088 00000088 00000088  11075+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006E0A E3D0 D080 0004          00000080  11076+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006E10 E3C0 D090 0004          00000090  11077+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006E16 E3B0 C018 0004          00000018  11078+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006E1C E3C0 B010 0021          00000010  11079+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006E22 E3E0 D008 0004          00000008  11080+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006E28 EB1C D020 0004          00000020  11081+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006E2E 078E                              11082+         bcr 8,14                if same dsab, just return              01-DCCEP
00006E30 E3F0 D010 0024          00000010  11083+         stg 15,16(0,13)         save return code                       01-DCCEP
00006E36 E300 D018 0024          00000018  11084+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006E3C E3F0 D090 0004          00000090  11085+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006E42 E3F0 F018 0004          00000018  11086+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006E48 47F0 F040               00000040  11087+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11088+* End of Epilog
                                           11089 * * **** End of Epilogue
                                           11090          DROP  12
                                           11091 *
                                           11092 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_murmur2
                                           11093 *           _random"
                                           11094 *      (FUNCTION #879)
                                           11095 *
00000000                00000000 000000A8  11096 @AUTO#rd_kafka_msg_partitioner_murmur2_random DSECT
00000000                                   11097          DS    XL168
                                           11098 *
00006E4C                00000000 0000E868  11099 @CODE    CSECT
                                           11100 *
                                           11101 *
                                           11102 *
                                           11103 * ....... start of rd_kafka_msg_partitioner_fnv1a
                                           11104 rd_kafka_msg_partitioner_fnv1a ALIAS X'99846D92818692816D94A2876D978199*
                                                                A389A389969585996D8695A5F181'
00006E4C                                   11105 @LNAME880 DS   0H
00006E4C 0000001E                          11106          DC    X'0000001E'
00006E50 99846D9281869281                  11107          DC    C'rd_kafka_msg_partitioner_fnv1a'
                                                                                                                           Page  224 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006E6E 00                                11108          DC    X'00'
                                           11109 rd_kafka_msg_partitioner_fnv1a DCCPRLG CINDEX=880,BASER=12,FRAME=184,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME880
                                           11110          macro
                                           11111          dccextrn &m
                                           11112          gblc    &$dccext(1000)
                                           11113          gbla    &$dccexti
                                           11114          lcla    &i
                                           11115 &$dccext(&$dccexti+1) setc    '&m'
                                           11116 &i       seta    1
                                           11117 .loop    aif    (&i gt &$dccexti).around
                                           11118          aif    ('&$dccext(&i)' eq '&m').getout
                                           11119 &i       seta    &i+1
                                           11120          ago     .loop
                                           11121 .around  anop
                                           11122 &$dccexti seta &$dccexti+1
                                           11123          extrn  &m
                                           11124 .getout  anop
                                           11125          mend
00006E70                                   11126+$eye0213    ds    0d                                                    02-DCCCA
00006E70 C4C3C3                            11127+         dc cl3'DCC'                                                    02-DCCCA
00006E73 01                                11128+         dc xl1'01' format one                                          02-DCCCA
00006E74 00000000                          11129+         dc a(0)                                                        02-DCCCA
00006E78 0000000000006EE2                  11130+         dc ad(@PER_880)                                                02-DCCCA
00006E80 00000000000000B8                  11131+         dc ad(184)                                                     02-DCCCA
00006E88 0000000000000000                  11132+         dc ad(0)                                                       02-DCCCA
00006E90 0000000000001000                  11133+         dc ad(4096)                                                    02-DCCCA
00006E98 20                                11134+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006E99 03                                11135+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006E9A 03                                11136+         dc al1(3)                                                      02-DCCCA
00006E9B 08                                11137+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006E9C 00                                11138+         dc bl.8'00000000'                                              02-DCCCA
00006E9D 000000                            11139+         dc al3(0)                                                      02-DCCCA
00006EA0 0000000000006E4C                  11140+         dc ad(@LNAME880)                                               02-DCCCA
00006EA8                                   11141+         ds 0d                                                          02-DCCCA
00006EA8 0000000000006E70                  11142+         dc ad($eye0213)                                                02-DCCCA
00006EB0 0000000000000000                  11143+         dc ad(0)                                                       02-DCCCA
00006EB8                                   11144+         ds    0d                                                       01-DCCPR
                                           11145+         entry rd_kafka_msg_partitioner_fnv1a                           01-DCCPR
00006EB8                                   11146+rd_kafka_msg_partitioner_fnv1a ds 0d                                    01-DCCPR
00006EB8                                   11147+@REGION_880_1 ds 0h                                                     01-DCCPR
00006EB8 EBEC D008 0024          00000008  11148+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006EBE E3E0 D088 0004          00000088  11149+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006EC4 E3C0 D090 0004          00000090  11150+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006ECA B904 002E                         11151+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006ECE E3B0 C018 0004          00000018  11152+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006ED4 A7EB 00B8               000000B8  11153+         aghi  14,184              increase by frame size               01-DCCPR
00006ED8 E3E0 C020 0021          00000020  11154+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006EDE 4720 B020               00000020  11155+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006EE2                                   11156+@PER_880 ds    0h                                                       01-DCCPR
00006EE2 EBDE 2080 0024          00000080  11157+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006EE8 E3C0 2090 0024          00000090  11158+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  225 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006EEE B904 00D2                         11159+         lgr   13,2                set real frame pointer               01-DCCPR
00006EF2 B904 00CF                         11160+         lgr   12,15               set base reg                         01-DCCPR
                        00006EB8           11161+         using @REGION_880_1,12                                         01-DCCPR
00006EF6 B904 0021                         11162          LGR   2,1         ; ptr to parm area
                                           11163 * ******* End of Prologue
                                           11164 * *
                                           11165 * ***           return rd_fnv1a(key, keylen) % partition_cnt;
00006EFA E3F0 2008 0004          00000008  11166          LG    15,8(0,2)   ; key
00006F00 E3F0 D0A8 0024          000000A8  11167          STG   15,168(0,13)
00006F06 E3F0 2010 0004          00000010  11168          LG    15,16(0,2)  ; keylen
00006F0C E3F0 D0B0 0024          000000B0  11169          STG   15,176(0,13)
00006F12 4110 D0A8               000000A8  11170          LA    1,168(0,13)
00006F16 E3F0 C0C8 0004          00006F80  11171          LG    15,@lit_880_352 ; rd_fnv1a
00006F1C                                   11172 @@gen_label549 DS    0H
00006F1C 05EF                              11173          BALR  14,15
00006F1E                                   11174 @@gen_label550 DS    0H
00006F1E 5810 201C               0000001C  11175          L     1,28(0,2)   ; partition_cnt
00006F22 183F                              11176          LR    3,15
00006F24 A728 0000               00000000  11177          LHI   2,0
00006F28 B997 0021                         11178          DLR   2,1
00006F2C B914 00F2                         11179          LGFR  15,2
                                           11180 * ***   }
                                           11181 * * **** Start of Epilogue
                                           11182          DCCEPIL
00006F30                                   11183+         ds 0h                                                          01-DCCEP
                                           11184+* Epilog
00006F30 D707 D088 D088 00000088 00000088  11185+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006F36 E3D0 D080 0004          00000080  11186+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006F3C E3C0 D090 0004          00000090  11187+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006F42 E3B0 C018 0004          00000018  11188+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006F48 E3C0 B010 0021          00000010  11189+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006F4E E3E0 D008 0004          00000008  11190+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006F54 EB1C D020 0004          00000020  11191+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006F5A 078E                              11192+         bcr 8,14                if same dsab, just return              01-DCCEP
00006F5C E3F0 D010 0024          00000010  11193+         stg 15,16(0,13)         save return code                       01-DCCEP
00006F62 E300 D018 0024          00000018  11194+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006F68 E3F0 D090 0004          00000090  11195+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006F6E E3F0 F018 0004          00000018  11196+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006F74 47F0 F040               00000040  11197+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11198+* End of Epilog
                                           11199 * * **** End of Epilogue
00006F78                                   11200          DS    0D
00006F78 000000B8                          11201 @FRAMESIZE_880 DC F'184'
00006F7C 00000000
00006F80 0000000000000000                  11202 @lit_880_352 DC AD(rd_fnv1a)
                                           11203          DROP  12
                                           11204 *
                                           11205 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_fnv1a"
                                           11206 *      (FUNCTION #880)
                                           11207 *
00000000                00000000 000000A8  11208 @AUTO#rd_kafka_msg_partitioner_fnv1a DSECT
00000000                                   11209          DS    XL168
                                                                                                                           Page  226 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11210 *
00006F88                00000000 0000E868  11211 @CODE    CSECT
                                           11212 *
                                           11213 *
                                           11214 *
                                           11215 * ....... start of rd_kafka_msg_partitioner_fnv1a_random
                                           11216 rd_kafka_msg_partitioner_fnv1a_random ALIAS X'99846D92818692816D94A2876*
                                                                D978199A389A389969585996D8695A5F1816D998195849694'
00006F88                                   11217 @LNAME881 DS   0H
00006F88 00000025                          11218          DC    X'00000025'
00006F8C 99846D9281869281                  11219          DC    C'rd_kafka_msg_partitioner_fnv1a_r'
00006FAC 8195849694                        11220          DC    C'andom'
00006FB1 00                                11221          DC    X'00'
                                           11222 rd_kafka_msg_partitioner_fnv1a_random DCCPRLG CINDEX=881,BASER=12,FRAME*
                                                                =216,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME881
                                           11223          macro
                                           11224          dccextrn &m
                                           11225          gblc    &$dccext(1000)
                                           11226          gbla    &$dccexti
                                           11227          lcla    &i
                                           11228 &$dccext(&$dccexti+1) setc    '&m'
                                           11229 &i       seta    1
                                           11230 .loop    aif    (&i gt &$dccexti).around
                                           11231          aif    ('&$dccext(&i)' eq '&m').getout
                                           11232 &i       seta    &i+1
                                           11233          ago     .loop
                                           11234 .around  anop
                                           11235 &$dccexti seta &$dccexti+1
                                           11236          extrn  &m
                                           11237 .getout  anop
                                           11238          mend
00006FB8                                   11239+$eye0216    ds    0d                                                    02-DCCCA
00006FB8 C4C3C3                            11240+         dc cl3'DCC'                                                    02-DCCCA
00006FBB 01                                11241+         dc xl1'01' format one                                          02-DCCCA
00006FBC 00000000                          11242+         dc a(0)                                                        02-DCCCA
00006FC0 000000000000702A                  11243+         dc ad(@PER_881)                                                02-DCCCA
00006FC8 00000000000000D8                  11244+         dc ad(216)                                                     02-DCCCA
00006FD0 0000000000000000                  11245+         dc ad(0)                                                       02-DCCCA
00006FD8 0000000000001000                  11246+         dc ad(4096)                                                    02-DCCCA
00006FE0 20                                11247+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006FE1 03                                11248+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006FE2 03                                11249+         dc al1(3)                                                      02-DCCCA
00006FE3 08                                11250+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006FE4 00                                11251+         dc bl.8'00000000'                                              02-DCCCA
00006FE5 000000                            11252+         dc al3(0)                                                      02-DCCCA
00006FE8 0000000000006F88                  11253+         dc ad(@LNAME881)                                               02-DCCCA
00006FF0                                   11254+         ds 0d                                                          02-DCCCA
00006FF0 0000000000006FB8                  11255+         dc ad($eye0216)                                                02-DCCCA
00006FF8 0000000000000000                  11256+         dc ad(0)                                                       02-DCCCA
00007000                                   11257+         ds    0d                                                       01-DCCPR
                                           11258+         entry rd_kafka_msg_partitioner_fnv1a_random                    01-DCCPR
00007000                                   11259+rd_kafka_msg_partitioner_fnv1a_random ds 0d                             01-DCCPR
                                                                                                                           Page  227 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007000                                   11260+@REGION_881_1 ds 0h                                                     01-DCCPR
00007000 EBEC D008 0024          00000008  11261+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007006 E3E0 D088 0004          00000088  11262+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000700C E3C0 D090 0004          00000090  11263+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007012 B904 002E                         11264+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007016 E3B0 C018 0004          00000018  11265+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000701C A7EB 00D8               000000D8  11266+         aghi  14,216              increase by frame size               01-DCCPR
00007020 E3E0 C020 0021          00000020  11267+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007026 4720 B020               00000020  11268+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000702A                                   11269+@PER_881 ds    0h                                                       01-DCCPR
0000702A EBDE 2080 0024          00000080  11270+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007030 E3C0 2090 0024          00000090  11271+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007036 B904 00D2                         11272+         lgr   13,2                set real frame pointer               01-DCCPR
0000703A B904 00CF                         11273+         lgr   12,15               set base reg                         01-DCCPR
                        00007000           11274+         using @REGION_881_1,12                                         01-DCCPR
0000703E B904 0021                         11275          LGR   2,1         ; ptr to parm area
                                           11276 * ******* End of Prologue
                                           11277 * *
                                           11278 * ***           if (!key)
00007042 E3F0 2008 0004          00000008  11279          LG    15,8(0,2)   ; key
00007048 B902 001F                         11280          LTGR  1,15
0000704C 4770 C0C0               000070C0  11281          BNZ   @L898
                                           11282 * ***                   return rd_kafka_msg_partitioner_random(rkt,
                                           11283 * ***                                                          key,
                                           11284 * ***                                                          keylen,
                                           11285 * ***                                                          partiti\
                                           11286 * on_cnt,
                                           11287 * ***                                                          rkt_opa\
                                           11288 * que,
                                           11289 * ***                                                          msg_opa\
                                           11290 * que);
00007050 E310 2000 0004          00000000  11291          LG    1,0(0,2)    ; rkt
00007056 E310 D0A8 0024          000000A8  11292          STG   1,168(0,13)
0000705C E3F0 D0B0 0024          000000B0  11293          STG   15,176(0,13)
00007062 E3F0 2010 0004          00000010  11294          LG    15,16(0,2)  ; keylen
00007068 E3F0 D0B8 0024          000000B8  11295          STG   15,184(0,13)
0000706E E3F0 201C 0014          0000001C  11296          LGF   15,28(0,2)  ; partition_cnt
00007074 E3F0 D0C0 0024          000000C0  11297          STG   15,192(0,13)
0000707A E3F0 2020 0004          00000020  11298          LG    15,32(0,2)  ; rkt_opaque
00007080 E3F0 D0C8 0024          000000C8  11299          STG   15,200(0,13)
00007086 E3F0 2028 0004          00000028  11300          LG    15,40(0,2)  ; msg_opaque
0000708C E3F0 D0D0 0024          000000D0  11301          STG   15,208(0,13)
00007092 4110 D0A8               000000A8  11302          LA    1,168(0,13)
00007096 E3F0 C0B0 0004          000070B0  11303          LG    15,@lit_881_354 ; rd_kafka_msg_partitioner_random
0000709C                                   11304 @@gen_label552 DS    0H
0000709C 05EF                              11305          BALR  14,15
0000709E                                   11306 @@gen_label553 DS    0H
0000709E B914 00FF                         11307          LGFR  15,15
000070A2 47F0 C0F0               000070F0  11308          B     @ret_lab_881
000070A8                                   11309          DS    0D
000070A8 000000D8                          11310 @FRAMESIZE_881 DC F'216'
000070AC 00000000
                                                                                                                           Page  228 
  Active Usings: @REGION_881_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000070B0 0000000000006718                  11311 @lit_881_354 DC AD(rd_kafka_msg_partitioner_random)
000070B8 0000000000000000                  11312 @lit_881_355 DC AD(rd_fnv1a)
                                           11313 * ***           else
000070C0                                   11314 @L898    DS    0H
                                           11315 * ***                   return rd_fnv1a(key, keylen) % partition_cnt;
000070C0 E3F0 D0A8 0024          000000A8  11316          STG   15,168(0,13)
000070C6 E3F0 2010 0004          00000010  11317          LG    15,16(0,2)  ; keylen
000070CC E3F0 D0B0 0024          000000B0  11318          STG   15,176(0,13)
000070D2 4110 D0A8               000000A8  11319          LA    1,168(0,13)
000070D6 E3F0 C0B8 0004          000070B8  11320          LG    15,@lit_881_355 ; rd_fnv1a
000070DC                                   11321 @@gen_label554 DS    0H
000070DC 05EF                              11322          BALR  14,15
000070DE                                   11323 @@gen_label555 DS    0H
000070DE 5810 201C               0000001C  11324          L     1,28(0,2)   ; partition_cnt
000070E2 183F                              11325          LR    3,15
000070E4 A728 0000               00000000  11326          LHI   2,0
000070E8 B997 0021                         11327          DLR   2,1
000070EC B914 00F2                         11328          LGFR  15,2
                                           11329 * ***   }
000070F0                                   11330 @ret_lab_881 DS 0H
                                           11331 * * **** Start of Epilogue
                                           11332          DCCEPIL
000070F0                                   11333+         ds 0h                                                          01-DCCEP
                                           11334+* Epilog
000070F0 D707 D088 D088 00000088 00000088  11335+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000070F6 E3D0 D080 0004          00000080  11336+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000070FC E3C0 D090 0004          00000090  11337+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007102 E3B0 C018 0004          00000018  11338+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007108 E3C0 B010 0021          00000010  11339+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000710E E3E0 D008 0004          00000008  11340+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007114 EB1C D020 0004          00000020  11341+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000711A 078E                              11342+         bcr 8,14                if same dsab, just return              01-DCCEP
0000711C E3F0 D010 0024          00000010  11343+         stg 15,16(0,13)         save return code                       01-DCCEP
00007122 E300 D018 0024          00000018  11344+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007128 E3F0 D090 0004          00000090  11345+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000712E E3F0 F018 0004          00000018  11346+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007134 47F0 F040               00000040  11347+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11348+* End of Epilog
                                           11349 * * **** End of Epilogue
                                           11350          DROP  12
                                           11351 *
                                           11352 *   DSECT for automatic variables in "rd_kafka_msg_partitioner_fnv1a_r
                                           11353 *           andom"
                                           11354 *      (FUNCTION #881)
                                           11355 *
00000000                00000000 000000A8  11356 @AUTO#rd_kafka_msg_partitioner_fnv1a_random DSECT
00000000                                   11357          DS    XL168
                                           11358 *
00007138                00000000 0000E868  11359 @CODE    CSECT
                                           11360 *
                                           11361 *
                                           11362 *
                                                                                                                           Page  229 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11363 * ....... start of rd_kafka_msg_sticky_partition
                                           11364 rd_kafka_msg_sticky_partition ALIAS X'99846D92818692816D94A2876DA2A3898*
                                                                392A86D978199A389A3899695'
00007138                                   11365 @LNAME1981 DS  0H
00007138 0000001D                          11366          DC    X'0000001D'
0000713C 99846D9281869281                  11367          DC    C'rd_kafka_msg_sticky_partition'
00007159 00                                11368          DC    X'00'
                                           11369 rd_kafka_msg_sticky_partition DCCPRLG CINDEX=1981,BASER=12,FRAME=240,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1981
                                           11370          macro
                                           11371          dccextrn &m
                                           11372          gblc    &$dccext(1000)
                                           11373          gbla    &$dccexti
                                           11374          lcla    &i
                                           11375 &$dccext(&$dccexti+1) setc    '&m'
                                           11376 &i       seta    1
                                           11377 .loop    aif    (&i gt &$dccexti).around
                                           11378          aif    ('&$dccext(&i)' eq '&m').getout
                                           11379 &i       seta    &i+1
                                           11380          ago     .loop
                                           11381 .around  anop
                                           11382 &$dccexti seta &$dccexti+1
                                           11383          extrn  &m
                                           11384 .getout  anop
                                           11385          mend
00007160                                   11386+$eye0219    ds    0d                                                    02-DCCCA
00007160 C4C3C3                            11387+         dc cl3'DCC'                                                    02-DCCCA
00007163 01                                11388+         dc xl1'01' format one                                          02-DCCCA
00007164 00000000                          11389+         dc a(0)                                                        02-DCCCA
00007168 00000000000071D2                  11390+         dc ad(@PER_1981)                                               02-DCCCA
00007170 00000000000000F0                  11391+         dc ad(240)                                                     02-DCCCA
00007178 0000000000000000                  11392+         dc ad(0)                                                       02-DCCCA
00007180 0000000000001000                  11393+         dc ad(4096)                                                    02-DCCCA
00007188 20                                11394+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007189 03                                11395+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000718A 03                                11396+         dc al1(3)                                                      02-DCCCA
0000718B 08                                11397+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000718C 00                                11398+         dc bl.8'00000000'                                              02-DCCCA
0000718D 000000                            11399+         dc al3(0)                                                      02-DCCCA
00007190 0000000000007138                  11400+         dc ad(@LNAME1981)                                              02-DCCCA
00007198                                   11401+         ds 0d                                                          02-DCCCA
00007198 0000000000007160                  11402+         dc ad($eye0219)                                                02-DCCCA
000071A0 0000000000000000                  11403+         dc ad(0)                                                       02-DCCCA
000071A8                                   11404+         ds    0d                                                       01-DCCPR
                                           11405+         entry rd_kafka_msg_sticky_partition                            01-DCCPR
000071A8                                   11406+rd_kafka_msg_sticky_partition ds 0d                                     01-DCCPR
000071A8                                   11407+@REGION_1981_1 ds 0h                                                    01-DCCPR
000071A8 EBEC D008 0024          00000008  11408+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000071AE E3E0 D088 0004          00000088  11409+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000071B4 E3C0 D090 0004          00000090  11410+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000071BA B904 002E                         11411+         lgr   2,14                copy addr of our savearea            01-DCCPR
000071BE E3B0 C018 0004          00000018  11412+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  230 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000071C4 A7EB 00F0               000000F0  11413+         aghi  14,240              increase by frame size               01-DCCPR
000071C8 E3E0 C020 0021          00000020  11414+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000071CE 4720 B020               00000020  11415+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000071D2                                   11416+@PER_1981 ds   0h                                                       01-DCCPR
000071D2 EBDE 2080 0024          00000080  11417+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000071D8 E3C0 2090 0024          00000090  11418+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000071DE B904 00D2                         11419+         lgr   13,2                set real frame pointer               01-DCCPR
000071E2 B904 00CF                         11420+         lgr   12,15               set base reg                         01-DCCPR
                        000071A8           11421+         using @REGION_1981_1,12                                        01-DCCPR
000071E6 B904 0031                         11422          LGR   3,1         ; ptr to parm area
                                           11423 * ******* End of Prologue
                                           11424 * *
000071EA E320 3000 0004          00000000  11425          LG    2,0(0,3)    ; rkt
                                           11426 * ***
                                           11427 * ***           if (!rd_kafka_topic_partition_available(rkt, rkt->rkt_\
                                           11428 * sticky_partition))
000071F0 E320 D0A8 0024          000000A8  11429          STG   2,168(0,13)
000071F6 E3F0 209C 0014          0000009C  11430          LGF   15,156(0,2)
000071FC E3F0 D0B0 0024          000000B0  11431          STG   15,176(0,13)
00007202 4110 D0A8               000000A8  11432          LA    1,168(0,13)
00007206 E3F0 C1F0 0004          00007398  11433          LG    15,@lit_1981_357 ; rd_kafka_topic_partition_available
0000720C                                   11434 @@gen_label556 DS    0H
0000720C 05EF                              11435          BALR  14,15
0000720E                                   11436 @@gen_label557 DS    0H
0000720E 12FF                              11437          LTR   15,15
00007210 4770 C088               00007230  11438          BNZ   @L900
                                           11439 * ***                   rd_interval_expedite(&rkt->rkt_sticky_intvl, 0\
                                           11440 * );
00007214 41F0 20A0               000000A0  11441          LA    15,160(0,2)
00007218 E3F0 D0A8 0024          000000A8  11442          STG   15,168(0,13)
0000721E D707 D0B0 D0B0 000000B0 000000B0  11443          XC    176(8,13),176(13)
00007224 4110 D0A8               000000A8  11444          LA    1,168(0,13)
00007228 E3F0 C1F8 0004          000073A0  11445          LG    15,@lit_1981_358 ; rd_interval_expedite
0000722E                                   11446 @@gen_label559 DS    0H
0000722E 05EF                              11447          BALR  14,15
00007230                                   11448 @@gen_label560 DS    0H
00007230                                   11449 @L900    DS    0H
                                           11450 * ***
                                           11451 * ***           if (rd_interval0(&rkt->rkt_sticky_intvl,rkt->rkt_rk->r\
                                           11452 * k_conf.sticky_partition_linger_ms * 1000,0,0) > 0) {
00007230 41F0 20A0               000000A0  11453          LA    15,160(0,2)
00007234 E3F0 D0A8 0024          000000A8  11454          STG   15,168(0,13)
0000723A E3F0 2148 0004          00000148  11455          LG    15,328(0,2) ; offset of rkt_rk in rd_kafka_topic_s
00007240 58F0 F82C               0000082C  11456          L     15,2092(0,15) ; offset of sticky_partition_linger_ms in *
                                                                rd_kafka_conf_s
00007244 A7FC 03E8               000003E8  11457          MHI   15,1000
00007248 B914 00FF                         11458          LGFR  15,15
0000724C E3F0 D0B0 0024          000000B0  11459          STG   15,176(0,13)
00007252 D70F D0B8 D0B8 000000B8 000000B8  11460          XC    184(16,13),184(13)
00007258 4110 D0A8               000000A8  11461          LA    1,168(0,13)
0000725C E3F0 C200 0004          000073A8  11462          LG    15,@lit_1981_359 ; rd_interval0
00007262                                   11463 @@gen_label561 DS    0H
                                                                                                                           Page  231 
  Active Usings: @REGION_1981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007262 05EF                              11464          BALR  14,15
00007264                                   11465 @@gen_label562 DS    0H
00007264 B902 00FF                         11466          LTGR  15,15
00007268 47D0 C196               0000733E  11467          BNH   @L901
                                           11468 * ***
                                           11469 * ***
                                           11470 * ***                   rkt->rkt_sticky_partition =
                                           11471 * ***                           rd_kafka_msg_partitioner_random(rkt,
                                           11472 * ***                                                           key,
                                           11473 * ***                                                           keylen\
                                           11474 * ,
                                           11475 * ***                                                           partit\
                                           11476 * ion_cnt,
                                           11477 * ***                                                           rkt_op\
                                           11478 * aque,
                                           11479 * ***                                                           msg_op\
                                           11480 * aque);
0000726C E320 D0A8 0024          000000A8  11481          STG   2,168(0,13)
00007272 E3F0 3008 0004          00000008  11482          LG    15,8(0,3)   ; key
00007278 E3F0 D0B0 0024          000000B0  11483          STG   15,176(0,13)
0000727E E3F0 3010 0004          00000010  11484          LG    15,16(0,3)  ; keylen
00007284 E3F0 D0B8 0024          000000B8  11485          STG   15,184(0,13)
0000728A E3F0 301C 0014          0000001C  11486          LGF   15,28(0,3)  ; partition_cnt
00007290 E3F0 D0C0 0024          000000C0  11487          STG   15,192(0,13)
00007296 E3F0 3020 0004          00000020  11488          LG    15,32(0,3)  ; rkt_opaque
0000729C E3F0 D0C8 0024          000000C8  11489          STG   15,200(0,13)
000072A2 E3F0 3028 0004          00000028  11490          LG    15,40(0,3)  ; msg_opaque
000072A8 E3F0 D0D0 0024          000000D0  11491          STG   15,208(0,13)
000072AE 4110 D0A8               000000A8  11492          LA    1,168(0,13)
000072B2 E3F0 C208 0004          000073B0  11493          LG    15,@lit_1981_360 ; rd_kafka_msg_partitioner_random
000072B8                                   11494 @@gen_label564 DS    0H
000072B8 05EF                              11495          BALR  14,15
000072BA                                   11496 @@gen_label565 DS    0H
000072BA 50F0 209C               0000009C  11497          ST    15,156(0,2)
                                           11498 * ***                   do { if ((((rkt->rkt_rk)->rk_conf.debug & (0x4\
                                           11499 * )))) rd_kafka_log0(&rkt->rkt_rk->rk_conf,rkt->rkt_rk,((void *)0), 7,\
                                           11500 * (0x4), "PARTITIONER","%s [%" "d" "] is the new sticky partition", rk\
                                           11501 * t->rkt_topic->str, rkt->rkt_sticky_partition); } while (0);
000072BE                                   11502 @L902    DS    0H
000072BE E3F0 2148 0004          00000148  11503          LG    15,328(0,2) ; offset of rkt_rk in rd_kafka_topic_s
000072C4 9104 F323      00000323 00000004  11504          TM    803(15),4
000072C8 4780 C196               0000733E  11505          BZ    @L905
000072CC E3F0 2148 0004          00000148  11506          LG    15,328(0,2) ; offset of rkt_rk in rd_kafka_topic_s
000072D2 41F0 F210               00000210  11507          LA    15,528(0,15)
000072D6 E3F0 D0A8 0024          000000A8  11508          STG   15,168(0,13)
000072DC E3F0 2148 0004          00000148  11509          LG    15,328(0,2)
000072E2 E3F0 D0B0 0024          000000B0  11510          STG   15,176(0,13)
000072E8 D707 D0B8 D0B8 000000B8 000000B8  11511          XC    184(8,13),184(13)
000072EE E548 D0C0 0007          000000C0  11512          MVGHI 192(13),7
000072F4 E548 D0C8 0004          000000C8  11513          MVGHI 200(13),4
000072FA E3F0 C218 0004          000073C0  11514          LG    15,@lit_1981_361
00007300 4110 F394               00000394  11515          LA    1,916(0,15)
                                                                                                                           Page  232 
  Active Usings: @REGION_1981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007304 E310 D0D0 0024          000000D0  11516          STG   1,208(0,13)
0000730A 41F0 F3A0               000003A0  11517          LA    15,928(0,15)
0000730E E3F0 D0D8 0024          000000D8  11518          STG   15,216(0,13)
00007314 E3F0 2080 0004          00000080  11519          LG    15,128(0,2) ; offset of rkt_topic in rd_kafka_topic_s
0000731A E3F0 F008 0004          00000008  11520          LG    15,8(0,15)
00007320 E3F0 D0E0 0024          000000E0  11521          STG   15,224(0,13)
00007326 E3F0 209C 0014          0000009C  11522          LGF   15,156(0,2)
0000732C E3F0 D0E8 0024          000000E8  11523          STG   15,232(0,13)
00007332 4110 D0A8               000000A8  11524          LA    1,168(0,13)
00007336 E3F0 C210 0004          000073B8  11525          LG    15,@lit_1981_362 ; rd_kafka_log0
0000733C                                   11526 @@gen_label567 DS    0H
0000733C 05EF                              11527          BALR  14,15
0000733E                                   11528 @@gen_label568 DS    0H
0000733E                                   11529 @L905    DS    0H
                                           11530 * ***
                                           11531 * ***
                                           11532 * ***           }
0000733E                                   11533 @L901    DS    0H
                                           11534 * ***
                                           11535 * ***           return rkt->rkt_sticky_partition;
0000733E E3F0 209C 0014          0000009C  11536          LGF   15,156(0,2)
                                           11537 * ***   }
                                           11538 * * **** Start of Epilogue
                                           11539          DCCEPIL
00007344                                   11540+         ds 0h                                                          01-DCCEP
                                           11541+* Epilog
00007344 D707 D088 D088 00000088 00000088  11542+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000734A E3D0 D080 0004          00000080  11543+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007350 E3C0 D090 0004          00000090  11544+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007356 E3B0 C018 0004          00000018  11545+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000735C E3C0 B010 0021          00000010  11546+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007362 E3E0 D008 0004          00000008  11547+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007368 EB1C D020 0004          00000020  11548+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000736E 078E                              11549+         bcr 8,14                if same dsab, just return              01-DCCEP
00007370 E3F0 D010 0024          00000010  11550+         stg 15,16(0,13)         save return code                       01-DCCEP
00007376 E300 D018 0024          00000018  11551+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000737C E3F0 D090 0004          00000090  11552+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007382 E3F0 F018 0004          00000018  11553+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007388 47F0 F040               00000040  11554+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11555+* End of Epilog
                                           11556 * * **** End of Epilogue
00007390                                   11557          DS    0D
00007390 000000F0                          11558 @FRAMESIZE_1981 DC F'240'
00007394 00000000
00007398 0000000000000000                  11559 @lit_1981_357 DC AD(rd_kafka_topic_partition_available)
000073A0 0000000000000E90                  11560 @lit_1981_358 DC AD(rd_interval_expedite)
000073A8 0000000000000D18                  11561 @lit_1981_359 DC AD(rd_interval0)
000073B0 0000000000006718                  11562 @lit_1981_360 DC AD(rd_kafka_msg_partitioner_random)
000073B8 0000000000000000                  11563 @lit_1981_362 DC AD(rd_kafka_log0)
000073C0 000000000000ECA4                  11564 @lit_1981_361 DC AD(@strings@)
                                           11565          DROP  12
                                           11566 *
                                                                                                                           Page  233 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11567 *   DSECT for automatic variables in "rd_kafka_msg_sticky_partition"
                                           11568 *      (FUNCTION #1981)
                                           11569 *
00000000                00000000 000000A8  11570 @AUTO#rd_kafka_msg_sticky_partition DSECT
00000000                                   11571          DS    XL168
                                           11572 *
000073C8                00000000 0000E868  11573 @CODE    CSECT
                                           11574 *
                                           11575 *
                                           11576 *
                                           11577 * ....... start of rd_kafka_msg_partitioner
                                           11578 rd_kafka_msg_partitioner ALIAS X'99846D92818692816D94A2876D978199A389A3*
                                                                8996958599'
000073C8                                   11579 @LNAME1364 DS  0H
000073C8 00000018                          11580          DC    X'00000018'
000073CC 99846D9281869281                  11581          DC    C'rd_kafka_msg_partitioner'
000073E4 00                                11582          DC    X'00'
                                           11583 rd_kafka_msg_partitioner DCCPRLG CINDEX=1364,BASER=12,FRAME=224,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1364
                                           11584          macro
                                           11585          dccextrn &m
                                           11586          gblc    &$dccext(1000)
                                           11587          gbla    &$dccexti
                                           11588          lcla    &i
                                           11589 &$dccext(&$dccexti+1) setc    '&m'
                                           11590 &i       seta    1
                                           11591 .loop    aif    (&i gt &$dccexti).around
                                           11592          aif    ('&$dccext(&i)' eq '&m').getout
                                           11593 &i       seta    &i+1
                                           11594          ago     .loop
                                           11595 .around  anop
                                           11596 &$dccexti seta &$dccexti+1
                                           11597          extrn  &m
                                           11598 .getout  anop
                                           11599          mend
000073E8                                   11600+$eye0222    ds    0d                                                    02-DCCCA
000073E8 C4C3C3                            11601+         dc cl3'DCC'                                                    02-DCCCA
000073EB 01                                11602+         dc xl1'01' format one                                          02-DCCCA
000073EC 00000000                          11603+         dc a(0)                                                        02-DCCCA
000073F0 000000000000745A                  11604+         dc ad(@PER_1364)                                               02-DCCCA
000073F8 00000000000000E0                  11605+         dc ad(224)                                                     02-DCCCA
00007400 0000000000000000                  11606+         dc ad(0)                                                       02-DCCCA
00007408 0000000000001000                  11607+         dc ad(4096)                                                    02-DCCCA
00007410 20                                11608+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007411 03                                11609+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007412 03                                11610+         dc al1(3)                                                      02-DCCCA
00007413 08                                11611+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007414 00                                11612+         dc bl.8'00000000'                                              02-DCCCA
00007415 000000                            11613+         dc al3(0)                                                      02-DCCCA
00007418 00000000000073C8                  11614+         dc ad(@LNAME1364)                                              02-DCCCA
00007420                                   11615+         ds 0d                                                          02-DCCCA
00007420 00000000000073E8                  11616+         dc ad($eye0222)                                                02-DCCCA
                                                                                                                           Page  234 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007428 0000000000000000                  11617+         dc ad(0)                                                       02-DCCCA
00007430                                   11618+         ds    0d                                                       01-DCCPR
                                           11619+         entry rd_kafka_msg_partitioner                                 01-DCCPR
00007430                                   11620+rd_kafka_msg_partitioner ds 0d                                          01-DCCPR
00007430                                   11621+@REGION_1364_1 ds 0h                                                    01-DCCPR
00007430 EBEC D008 0024          00000008  11622+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007436 E3E0 D088 0004          00000088  11623+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000743C E3C0 D090 0004          00000090  11624+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007442 B904 002E                         11625+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007446 E3B0 C018 0004          00000018  11626+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000744C A7EB 00E0               000000E0  11627+         aghi  14,224              increase by frame size               01-DCCPR
00007450 E3E0 C020 0021          00000020  11628+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007456 4720 B020               00000020  11629+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000745A                                   11630+@PER_1364 ds   0h                                                       01-DCCPR
0000745A EBDE 2080 0024          00000080  11631+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007460 E3C0 2090 0024          00000090  11632+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007466 B904 00D2                         11633+         lgr   13,2                set real frame pointer               01-DCCPR
0000746A B904 00CF                         11634+         lgr   12,15               set base reg                         01-DCCPR
                        00007430           11635+         using @REGION_1364_1,12                                        01-DCCPR
                                           11636 * ******* End of Prologue
                                           11637 * *
0000746E EB34 1000 0004          00000000  11638          LMG   3,4,0(1)    ; rkt
00007474 E350 1014 0012          00000014  11639          LT    5,20(0,1)   ; do_lock
                                           11640 * ***      int32_t partition;
                                           11641 * ***      rd_kafka_toppar_t *rktp_new;
                                           11642 * ***      rd_kafka_resp_err_t err;
                                           11643 * ***
                                           11644 * ***      if (do_lock)
0000747A 4780 C2B0               000076E0  11645          BZ    @L907
                                           11646 * ***         rwlock_rdlock(&(rkt)->rkt_lock);
0000747E 41F0 3048               00000048  11647          LA    15,72(0,3)
00007482 E3F0 D0B0 0024          000000B0  11648          STG   15,176(0,13)
00007488 4110 D0B0               000000B0  11649          LA    1,176(0,13)
0000748C E3F0 C070 0004          000074A0  11650          LG    15,@lit_1364_364 ; rwlock_rdlock
00007492                                   11651 @@gen_label570 DS    0H
00007492 05EF                              11652          BALR  14,15
00007494                                   11653 @@gen_label571 DS    0H
00007494                                   11654 @L906    DS    0H
                                           11655 * ***
                                           11656 * ***           switch (rkt->rkt_state)
00007494 47F0 C2B0               000076E0  11657          B     @L907
00007498                                   11658          DS    0D
00007498 000000E0                          11659 @FRAMESIZE_1364 DC F'224'
0000749C 00000000
000074A0 0000000000000000                  11660 @lit_1364_364 DC AD(rwlock_rdlock)
000074A8 0000000000000000                  11661 @lit_1364_367 DC AD(rwlock_rdunlock)
000074B0 00000000000069F8                  11662 @lit_1364_370 DC AD(rd_kafka_msg_partitioner_consistent_random)
000074B8 00000000000071A8                  11663 @lit_1364_371 DC AD(rd_kafka_msg_sticky_partition)
000074C0 000000000000ECA4                  11664 @lit_1364_374 DC AD(@strings@)
000074C8 0000000000000000                  11665 @lit_1364_376 DC AD(rd_kafka_crash)
000074D0 000000000000E868                  11666 @lit_1364_375 DC AD(@DATA)
000074D8 0000000000000000                  11667 @lit_1364_379 DC AD(rd_kafka_toppar_get0)
                                                                                                                           Page  235 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000074E0 0000000000000428                  11668 @lit_1364_383 DC AD(rd_atomic64_add)
000074E8 0000000000000000                  11669 @lit_1364_384 DC AD(rd_kafka_toppar_enq_msg)
000074F0 00000000000032F0                  11670 @lit_1364_386 DC AD(rd_kafka_txn_add_partition)
000074F8 0000000000000958                  11671 @lit_1364_387 DC AD(rd_refcnt_sub0)
00007500 0000000000000000                  11672 @lit_1364_388 DC AD(rd_kafka_toppar_destroy_final)
                                           11673 * ***           {
                                           11674 * ***           case RD_KAFKA_TOPIC_S_UNKNOWN:
00007508                                   11675 @L909    DS    0H
                                           11676 * ***
                                           11677 * ***
                                           11678 * ***
                                           11679 * ***         partition = ((int32_t)-1);
00007508 A728 FFFF               0000FFFF  11680          LHI   2,-1        ; -1
                                           11681 * ***                   break;
0000750C 47F0 C2F8               00007728  11682          B     @L908
                                           11683 * ***
                                           11684 * ***           case RD_KAFKA_TOPIC_S_NOTEXISTS:
00007510                                   11685 @L910    DS    0H
                                           11686 * ***
                                           11687 * ***
                                           11688 * ***                   err = RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC;
00007510 A728 FF44               0000FF44  11689          LHI   2,-188      ; -188
                                           11690 * ***         if (do_lock)
00007514 1255                              11691          LTR   5,5
00007516 4780 C100               00007530  11692          BZ    @L911
                                           11693 * ***            rwlock_rdunlock(&(rkt)->rkt_lock);
0000751A 41F0 3048               00000048  11694          LA    15,72(0,3)
0000751E E3F0 D0B0 0024          000000B0  11695          STG   15,176(0,13)
00007524 4110 D0B0               000000B0  11696          LA    1,176(0,13)
00007528 E3F0 C078 0004          000074A8  11697          LG    15,@lit_1364_367 ; rwlock_rdunlock
0000752E                                   11698 @@gen_label573 DS    0H
0000752E 05EF                              11699          BALR  14,15
00007530                                   11700 @@gen_label574 DS    0H
00007530                                   11701 @L911    DS    0H
                                           11702 * ***                   return err;
00007530 B914 00F2                         11703          LGFR  15,2
00007534 47F0 C432               00007862  11704          B     @ret_lab_1364
                                           11705 * ***
                                           11706 * ***           case RD_KAFKA_TOPIC_S_ERROR:
00007538                                   11707 @L912    DS    0H
                                           11708 * ***
                                           11709 * ***
                                           11710 * ***                   err = rkt->rkt_err;
00007538 5820 3140               00000140  11711          L     2,320(0,3)  ; offset of rkt_err in rd_kafka_topic_s
                                           11712 * ***                   if (do_lock)
0000753C 1255                              11713          LTR   5,5
0000753E 4780 C128               00007558  11714          BZ    @L913
                                           11715 * ***                           rwlock_rdunlock(&(rkt)->rkt_lock);
00007542 41F0 3048               00000048  11716          LA    15,72(0,3)
00007546 E3F0 D0B0 0024          000000B0  11717          STG   15,176(0,13)
0000754C 4110 D0B0               000000B0  11718          LA    1,176(0,13)
00007550 E3F0 C078 0004          000074A8  11719          LG    15,@lit_1364_367 ; rwlock_rdunlock
                                                                                                                           Page  236 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007556                                   11720 @@gen_label576 DS    0H
00007556 05EF                              11721          BALR  14,15
00007558                                   11722 @@gen_label577 DS    0H
00007558                                   11723 @L913    DS    0H
                                           11724 * ***                   return err;
00007558 B914 00F2                         11725          LGFR  15,2
0000755C 47F0 C432               00007862  11726          B     @ret_lab_1364
                                           11727 * ***
                                           11728 * ***           case RD_KAFKA_TOPIC_S_EXISTS:
00007560                                   11729 @L914    DS    0H
                                           11730 * ***
                                           11731 * ***
                                           11732 * ***
                                           11733 * ***
                                           11734 * ***
                                           11735 * ***                   if (((rkt->rkt_partition_cnt == 0))) {
00007560 E55C 3098 0000          00000098  11736          CHSI  152(3),0
00007566 4770 C142               00007572  11737          BNE   @L915
                                           11738 * ***                           partition = ((int32_t)-1);
0000756A A728 FFFF               0000FFFF  11739          LHI   2,-1        ; -1
                                           11740 * ***                           break;
0000756E 47F0 C2F8               00007728  11741          B     @L908
                                           11742 * ***                   }
00007572                                   11743 @L915    DS    0H
                                           11744 * ***
                                           11745 * ***
                                           11746 * ***                   if (rkm->rkm_rkmessage.partition == ((int32_t)\
                                           11747 * -1)) {
00007572 E55C 4010 FFFF          00000010  11748          CHSI  16(4),-1
00007578 4770 C224               00007654  11749          BNE   @L916
                                           11750 * ***
                                           11751 * ***                           if (!rkt->rkt_conf.random_partitioner \
                                           11752 * &&
0000757C 9500 33C0      000003C0 00000000  11753          CLI   960(3),0
00007580 4770 C1D0               00007600  11754          BNE   @L917
                                           11755 * ***                               (!rkm->rkm_rkmessage.key ||
00007584 E3F0 4028 0002          00000028  11756          LTG   15,40(0,4)  ; offset of key in rd_kafka_message_s
0000758A 4780 C17C               000075AC  11757          BZ    @L918
                                           11758 * ***                                (rkm->rkm_rkmessage.key_len == 0 \
                                           11759 * &&
0000758E E559 4030 0000          00000030  11760          CLGHSI 48(4),0
00007594 4770 C1D0               00007600  11761          BNE   @L917
                                           11762 * ***                                 rkt->rkt_conf.partitioner ==
                                           11763 * ***                                 rd_kafka_msg_partitioner_consist\
                                           11764 * ent_random))) {
00007598 E3F0 33B0 0004          000003B0  11765          LG    15,944(0,3) ; offset of partitioner in rd_kafka_topic_co*
                                                                nf_s
0000759E E310 C080 0004          000074B0  11766          LG    1,@lit_1364_370 ; rd_kafka_msg_partitioner_consistent_ra*
                                                                ndom
000075A4 B920 00F1                         11767          CGR   15,1
000075A8 4770 C1D0               00007600  11768          BNE   @L917
000075AC                                   11769 @L918    DS    0H
                                                                                                                           Page  237 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11770 * ***                                   partition =
                                           11771 * ***                                           rd_kafka_msg_sticky_pa\
                                           11772 * rtition(
                                           11773 * ***                                                   rkt,
                                           11774 * ***                                                   rkm->rkm_rkmes\
                                           11775 * sage.key,
                                           11776 * ***                                                   rkm->rkm_rkmes\
                                           11777 * sage.key_len,
                                           11778 * ***                                                   rkt->rkt_parti\
                                           11779 * tion_cnt,
                                           11780 * ***                                                   rkt->rkt_conf.\
                                           11781 * opaque,
                                           11782 * ***                                                   rkm->rkm_rkmes\
                                           11783 * sage._private);
000075AC E330 D0B0 0024          000000B0  11784          STG   3,176(0,13)
000075B2 E3F0 4028 0004          00000028  11785          LG    15,40(0,4)
000075B8 E3F0 D0B8 0024          000000B8  11786          STG   15,184(0,13)
000075BE E3F0 4030 0004          00000030  11787          LG    15,48(0,4)
000075C4 E3F0 D0C0 0024          000000C0  11788          STG   15,192(0,13)
000075CA E3F0 3098 0014          00000098  11789          LGF   15,152(0,3)
000075D0 E3F0 D0C8 0024          000000C8  11790          STG   15,200(0,13)
000075D6 E3F0 3400 0004          00000400  11791          LG    15,1024(0,3)
000075DC E3F0 D0D0 0024          000000D0  11792          STG   15,208(0,13)
000075E2 E3F0 4040 0004          00000040  11793          LG    15,64(0,4)
000075E8 E3F0 D0D8 0024          000000D8  11794          STG   15,216(0,13)
000075EE 4110 D0B0               000000B0  11795          LA    1,176(0,13)
000075F2 E3F0 C088 0004          000074B8  11796          LG    15,@lit_1364_371 ; rd_kafka_msg_sticky_partition
000075F8                                   11797 @@gen_label584 DS    0H
000075F8 05EF                              11798          BALR  14,15
000075FA                                   11799 @@gen_label585 DS    0H
000075FA 182F                              11800          LR    2,15        ; partition
                                           11801 * ***                           } else {
000075FC 47F0 C228               00007658  11802          B     @L920
00007600                                   11803 @L917    DS    0H
                                           11804 * ***                                   partition = rkt->rkt_conf.
                                           11805 * ***                                           partitioner(rkt,
                                           11806 * ***                                                       rkm->rkm_r\
                                           11807 * kmessage.key,
                                           11808 * ***                                                       rkm->rkm_r\
                                           11809 * kmessage.key_len,
                                           11810 * ***                                                       rkt->rkt_p\
                                           11811 * artition_cnt,
                                           11812 * ***                                                       rkt->rkt_c\
                                           11813 * onf.opaque,
                                           11814 * ***                                                       rkm->rkm_r\
                                           11815 * kmessage._private);
00007600 E330 D0B0 0024          000000B0  11816          STG   3,176(0,13)
00007606 E3F0 4028 0004          00000028  11817          LG    15,40(0,4)
0000760C E3F0 D0B8 0024          000000B8  11818          STG   15,184(0,13)
00007612 E3F0 4030 0004          00000030  11819          LG    15,48(0,4)
00007618 E3F0 D0C0 0024          000000C0  11820          STG   15,192(0,13)
0000761E E3F0 3098 0014          00000098  11821          LGF   15,152(0,3)
                                                                                                                           Page  238 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007624 E3F0 D0C8 0024          000000C8  11822          STG   15,200(0,13)
0000762A E3F0 3400 0004          00000400  11823          LG    15,1024(0,3)
00007630 E3F0 D0D0 0024          000000D0  11824          STG   15,208(0,13)
00007636 E3F0 4040 0004          00000040  11825          LG    15,64(0,4)
0000763C E3F0 D0D8 0024          000000D8  11826          STG   15,216(0,13)
00007642 E3F0 33B0 0004          000003B0  11827          LG    15,944(0,3) ; offset of partitioner in rd_kafka_topic_co*
                                                                nf_s
00007648 4110 D0B0               000000B0  11828          LA    1,176(0,13)
0000764C                                   11829 @@gen_label586 DS    0H
0000764C 05EF                              11830          BALR  14,15
0000764E                                   11831 @@gen_label587 DS    0H
0000764E 182F                              11832          LR    2,15        ; partition
                                           11833 * ***                           }
00007650                                   11834 @L919    DS    0H
                                           11835 * ***                   } else
00007650 47F0 C228               00007658  11836          B     @L920
00007654                                   11837 @L916    DS    0H
                                           11838 * ***                           partition = rkm->rkm_rkmessage.partiti\
                                           11839 * on;
00007654 5820 4010               00000010  11840          L     2,16(0,4)   ; offset of partition in rd_kafka_message_s
00007658                                   11841 @L920    DS    0H
                                           11842 * ***
                                           11843 * ***
                                           11844 * ***                   if (partition >= rkt->rkt_partition_cnt) {
00007658 5920 3098               00000098  11845          C     2,152(0,3)
0000765C 4740 C2F8               00007728  11846          BL    @L908
                                           11847 * ***                           err = RD_KAFKA_RESP_ERR__UNKNOWN_PARTI\
                                           11848 * TION;
00007660 A728 FF42               0000FF42  11849          LHI   2,-190      ; -190
                                           11850 * ***                           if (do_lock)
00007664 1255                              11851          LTR   5,5
00007666 4780 C250               00007680  11852          BZ    @L922
                                           11853 * ***                                   rwlock_rdunlock(&(rkt)->rkt_lo\
                                           11854 * ck);
0000766A 41F0 3048               00000048  11855          LA    15,72(0,3)
0000766E E3F0 D0B0 0024          000000B0  11856          STG   15,176(0,13)
00007674 4110 D0B0               000000B0  11857          LA    1,176(0,13)
00007678 E3F0 C078 0004          000074A8  11858          LG    15,@lit_1364_367 ; rwlock_rdunlock
0000767E                                   11859 @@gen_label590 DS    0H
0000767E 05EF                              11860          BALR  14,15
00007680                                   11861 @@gen_label591 DS    0H
00007680                                   11862 @L922    DS    0H
                                           11863 * ***                           return err;
00007680 B914 00F2                         11864          LGFR  15,2
00007684 47F0 C432               00007862  11865          B     @ret_lab_1364
                                           11866 * ***                   }
                                           11867 * ***                   break;
                                           11868 * ***
                                           11869 * ***           default:
                                           11870 * ***                   do { if (((!(!*"NOTREACHED")))) rd_kafka_crash\
                                           11871 * ("C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c",1255, __FUNCTION__, \
                                           11872 * (rkt->rkt_rk), "assert: " "!*\"NOTREACHED\""); } while (0);
                                                                                                                           Page  239 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007688                                   11873 @L924    DS    0H
00007688 E3F0 C090 0004          000074C0  11874          LG    15,@lit_1364_374
0000768E 4110 F3C4               000003C4  11875          LA    1,964(0,15)
00007692 9500 1000      00000000 00000000  11876          CLI   0(1),0
00007696 4780 C2F8               00007728  11877          BE    @L908
0000769A 4110 F2C2               000002C2  11878          LA    1,706(0,15)
0000769E E310 D0B0 0024          000000B0  11879          STG   1,176(0,13)
000076A4 E548 D0B8 04E7          000000B8  11880          MVGHI 184(13),1255
000076AA E310 C0A0 0004          000074D0  11881          LG    1,@lit_1364_375
000076B0 4110 11EA               000001EA  11882          LA    1,490(0,1)
000076B4 E310 D0C0 0024          000000C0  11883          STG   1,192(0,13)
000076BA E310 3148 0004          00000148  11884          LG    1,328(0,3)
000076C0 E310 D0C8 0024          000000C8  11885          STG   1,200(0,13)
000076C6 41F0 F3D0               000003D0  11886          LA    15,976(0,15)
000076CA E3F0 D0D0 0024          000000D0  11887          STG   15,208(0,13)
000076D0 4110 D0B0               000000B0  11888          LA    1,176(0,13)
000076D4 E3F0 C098 0004          000074C8  11889          LG    15,@lit_1364_376 ; rd_kafka_crash
000076DA                                   11890 @@gen_label593 DS    0H
000076DA 05EF                              11891          BALR  14,15
000076DC                                   11892 @@gen_label594 DS    0H
000076DC                                   11893 @L927    DS    0H
                                           11894 * ***                   break;
000076DC 47F0 C2F8               00007728  11895          B     @L908
                                           11896 * ***           }
000076E0                                   11897 @L907    DS    0H
000076E0 58F0 3138               00000138  11898          L     15,312(0,3) ; offset of rkt_state in rd_kafka_topic_s
000076E4 C2FF 0000 0003                    11899          CLFI  15,X'00000003'
000076EA 4720 C258               00007688  11900          BH    @L924
000076EE B914 00FF                         11901          LGFR  15,15
000076F2 4110 C2D8               00007708  11902          LA    1,@@gen_label595
000076F6 EBFF 0003 000D          00000003  11903          SLLG  15,15,3(0)
000076FC E3F1 F000 0004          00000000  11904          LG    15,0(1,15)
00007702 47FF C000               00000000  11905          B     0(15,12)
00007708                                   11906 @@gen_label595 DS    0D
00007708 00000000000000D8                  11907          DC AD(@L909-@REGION_1364_1)
00007710 0000000000000130                  11908          DC AD(@L914-@REGION_1364_1)
00007718 00000000000000E0                  11909          DC AD(@L910-@REGION_1364_1)
00007720 0000000000000108                  11910          DC AD(@L912-@REGION_1364_1)
00007728                                   11911 @L908    DS    0H
                                           11912 * ***
                                           11913 * ***
                                           11914 * ***      rktp_new = rd_kafka_toppar_get0(__FUNCTION__,1260,rkt,parti\
                                           11915 * tion,0);
00007728 E3F0 C0A0 0004          000074D0  11916          LG    15,@lit_1364_375
0000772E 41F0 F1EA               000001EA  11917          LA    15,490(0,15)
00007732 E3F0 D0B0 0024          000000B0  11918          STG   15,176(0,13)
00007738 E548 D0B8 04EC          000000B8  11919          MVGHI 184(13),1260
0000773E E330 D0C0 0024          000000C0  11920          STG   3,192(0,13)
00007744 B914 00F2                         11921          LGFR  15,2
00007748 E3F0 D0C8 0024          000000C8  11922          STG   15,200(0,13)
0000774E D707 D0D0 D0D0 000000D0 000000D0  11923          XC    208(8,13),208(13)
00007754 4110 D0B0               000000B0  11924          LA    1,176(0,13)
                                                                                                                           Page  240 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007758 E3F0 C0A8 0004          000074D8  11925          LG    15,@lit_1364_379 ; rd_kafka_toppar_get0
0000775E                                   11926 @@gen_label596 DS    0H
0000775E 05EF                              11927          BALR  14,15
00007760                                   11928 @@gen_label597 DS    0H
00007760 B904 006F                         11929          LGR   6,15
                                           11930 * ***
                                           11931 * ***      if (((!rktp_new))) {
00007764 B902 00F6                         11932          LTGR  15,6
00007768 4770 C376               000077A6  11933          BNZ   @L928
                                           11934 * ***
                                           11935 * ***         if (rkt->rkt_state == RD_KAFKA_TOPIC_S_NOTEXISTS)
0000776C E55C 3138 0002          00000138  11936          CHSI  312(3),2
00007772 4770 C34E               0000777E  11937          BNE   @L929
                                           11938 * ***            err = RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC;
00007776 A728 FF44               0000FF44  11939          LHI   2,-188      ; -188
0000777A 47F0 C352               00007782  11940          B     @L930
                                           11941 * ***         else
0000777E                                   11942 @L929    DS    0H
                                           11943 * ***            err = RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION;
0000777E A728 FF42               0000FF42  11944          LHI   2,-190      ; -190
00007782                                   11945 @L930    DS    0H
                                           11946 * ***
                                           11947 * ***         if (do_lock)
00007782 1255                              11948          LTR   5,5
00007784 4780 C36E               0000779E  11949          BZ    @L931
                                           11950 * ***            rwlock_rdunlock(&(rkt)->rkt_lock);
00007788 41F0 3048               00000048  11951          LA    15,72(0,3)
0000778C E3F0 D0B0 0024          000000B0  11952          STG   15,176(0,13)
00007792 4110 D0B0               000000B0  11953          LA    1,176(0,13)
00007796 E3F0 C078 0004          000074A8  11954          LG    15,@lit_1364_367 ; rwlock_rdunlock
0000779C                                   11955 @@gen_label601 DS    0H
0000779C 05EF                              11956          BALR  14,15
0000779E                                   11957 @@gen_label602 DS    0H
0000779E                                   11958 @L931    DS    0H
                                           11959 * ***
                                           11960 * ***         return  err;
0000779E B914 00F2                         11961          LGFR  15,2
000077A2 47F0 C432               00007862  11962          B     @ret_lab_1364
                                           11963 * ***      }
000077A6                                   11964 @L928    DS    0H
                                           11965 * ***
                                           11966 * ***           rd_atomic64_add(&rktp_new->rktp_c.producer_enq_msgs, 1\
                                           11967 * );
000077A6 41F0 64E0               000004E0  11968          LA    15,1248(0,6)
000077AA E3F0 D0B0 0024          000000B0  11969          STG   15,176(0,13)
000077B0 E548 D0B8 0001          000000B8  11970          MVGHI 184(13),1
000077B6 4110 D0B0               000000B0  11971          LA    1,176(0,13)
000077BA E3F0 C0B0 0004          000074E0  11972          LG    15,@lit_1364_383 ; rd_atomic64_add
000077C0                                   11973 @@gen_label603 DS    0H
000077C0 05EF                              11974          BALR  14,15
000077C2                                   11975 @@gen_label604 DS    0H
                                           11976 * ***
                                                                                                                           Page  241 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11977 * ***
                                           11978 * ***           if (rkm->rkm_rkmessage.partition == ((int32_t)-1))
000077C2 E55C 4010 FFFF          00000010  11979          CHSI  16(4),-1
000077C8 4770 C3A0               000077D0  11980          BNE   @L932
                                           11981 * ***                   rkm->rkm_rkmessage.partition = partition;
000077CC 5020 4010               00000010  11982          ST    2,16(0,4)   ; offset of partition in rd_kafka_message_s
000077D0                                   11983 @L932    DS    0H
                                           11984 * ***
                                           11985 * ***
                                           11986 * ***      rd_kafka_toppar_enq_msg(rktp_new, rkm);
000077D0 E360 D0B0 0024          000000B0  11987          STG   6,176(0,13)
000077D6 E340 D0B8 0024          000000B8  11988          STG   4,184(0,13)
000077DC 4110 D0B0               000000B0  11989          LA    1,176(0,13)
000077E0 E3F0 C0B8 0004          000074E8  11990          LG    15,@lit_1364_384 ; rd_kafka_toppar_enq_msg
000077E6                                   11991 @@gen_label606 DS    0H
000077E6 05EF                              11992          BALR  14,15
000077E8                                   11993 @@gen_label607 DS    0H
                                           11994 * ***      if (do_lock)
000077E8 1255                              11995          LTR   5,5
000077EA 4780 C3D4               00007804  11996          BZ    @L933
                                           11997 * ***         rwlock_rdunlock(&(rkt)->rkt_lock);
000077EE 41F0 3048               00000048  11998          LA    15,72(0,3)
000077F2 E3F0 D0B0 0024          000000B0  11999          STG   15,176(0,13)
000077F8 4110 D0B0               000000B0  12000          LA    1,176(0,13)
000077FC E3F0 C078 0004          000074A8  12001          LG    15,@lit_1364_367 ; rwlock_rdunlock
00007802                                   12002 @@gen_label609 DS    0H
00007802 05EF                              12003          BALR  14,15
00007804                                   12004 @@gen_label610 DS    0H
00007804                                   12005 @L933    DS    0H
                                           12006 * ***
                                           12007 * ***           if (rktp_new->rktp_partition != ((int32_t)-1) &&
00007804 E55C 6068 FFFF          00000068  12008          CHSI  104(6),-1
0000780A 4780 C400               00007830  12009          BE    @L935
                                           12010 * ***               ((rkt->rkt_rk)->rk_conf.eos.transactional_id != ((\
                                           12011 * void *)0))) {
0000780E E3F0 3148 0004          00000148  12012          LG    15,328(0,3) ; offset of rkt_rk in rd_kafka_topic_s
00007814 E3F0 F7E8 0002          000007E8  12013          LTG   15,2024(0,15) ; offset of transactional_id in 0000105
0000781A 4780 C400               00007830  12014          BE    @L935
                                           12015 * ***
                                           12016 * ***                   rd_kafka_txn_add_partition(rktp_new);
0000781E E360 D0B0 0024          000000B0  12017          STG   6,176(0,13)
00007824 4110 D0B0               000000B0  12018          LA    1,176(0,13)
00007828 E3F0 C0C0 0004          000074F0  12019          LG    15,@lit_1364_386 ; rd_kafka_txn_add_partition
0000782E                                   12020 @@gen_label613 DS    0H
0000782E 05EF                              12021          BALR  14,15
00007830                                   12022 @@gen_label614 DS    0H
                                           12023 * ***           }
00007830                                   12024 @L934    DS    0H
                                           12025 * ***
                                           12026 * ***      do { rd_kafka_toppar_t *_RKTP = (rktp_new); if (((rd_refcnt\
                                           12027 * _sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_final(_RK\
                                           12028 * TP); } while (0);
                                                                                                                           Page  242 
  Active Usings: @REGION_1364_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007830                                   12029 @L935    DS    0H
00007830 41F0 6090               00000090  12030          LA    15,144(0,6)
00007834 E3F0 D0B0 0024          000000B0  12031          STG   15,176(0,13)
0000783A 4110 D0B0               000000B0  12032          LA    1,176(0,13)
0000783E E3F0 C0C8 0004          000074F8  12033          LG    15,@lit_1364_387 ; rd_refcnt_sub0
00007844                                   12034 @@gen_label615 DS    0H
00007844 05EF                              12035          BALR  14,15
00007846                                   12036 @@gen_label616 DS    0H
00007846 12FF                              12037          LTR   15,15
00007848 4770 C42E               0000785E  12038          BNE   @L938
0000784C E360 D0B0 0024          000000B0  12039          STG   6,176(0,13)
00007852 4110 D0B0               000000B0  12040          LA    1,176(0,13)
00007856 E3F0 C0D0 0004          00007500  12041          LG    15,@lit_1364_388 ; rd_kafka_toppar_destroy_final
0000785C                                   12042 @@gen_label618 DS    0H
0000785C 05EF                              12043          BALR  14,15
0000785E                                   12044 @@gen_label619 DS    0H
0000785E                                   12045 @L938    DS    0H
                                           12046 * ***      return 0;
0000785E A7F9 0000               00000000  12047          LGHI  15,0        ; 0
                                           12048 * ***   }
00007862                                   12049 @ret_lab_1364 DS 0H
                                           12050 * * **** Start of Epilogue
                                           12051          DCCEPIL
00007862                                   12052+         ds 0h                                                          01-DCCEP
                                           12053+* Epilog
00007862 D707 D088 D088 00000088 00000088  12054+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007868 E3D0 D080 0004          00000080  12055+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000786E E3C0 D090 0004          00000090  12056+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007874 E3B0 C018 0004          00000018  12057+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000787A E3C0 B010 0021          00000010  12058+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007880 E3E0 D008 0004          00000008  12059+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007886 EB1C D020 0004          00000020  12060+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000788C 078E                              12061+         bcr 8,14                if same dsab, just return              01-DCCEP
0000788E E3F0 D010 0024          00000010  12062+         stg 15,16(0,13)         save return code                       01-DCCEP
00007894 E300 D018 0024          00000018  12063+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000789A E3F0 D090 0004          00000090  12064+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000078A0 E3F0 F018 0004          00000018  12065+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000078A6 47F0 F040               00000040  12066+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12067+* End of Epilog
                                           12068 * * **** End of Epilogue
                                           12069          DROP  12
                                           12070 *
                                           12071 *   DSECT for automatic variables in "rd_kafka_msg_partitioner"
                                           12072 *      (FUNCTION #1364)
                                           12073 *
00000000                00000000 000000AC  12074 @AUTO#rd_kafka_msg_partitioner DSECT
00000000                                   12075          DS    XL168
000000A8                                   12076 rd_kafka_msg_partitioner#err#0 DS 1F ; err
000000AC                000000AC 000000A8  12077          ORG   @AUTO#rd_kafka_msg_partitioner+168
000000A8                                   12078 rd_kafka_msg_partitioner#partition#0 DS 1F ; partition
                                           12079 *
000078AA                00000000 0000E868  12080 @CODE    CSECT
                                                                                                                           Page  243 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12081 *
                                           12082 *
                                           12083 *
                                           12084 * ....... start of rd_kafka_message_destroy
                                           12085 rd_kafka_message_destroy ALIAS X'99846D92818692816D9485A2A28187856D8485*
                                                                A2A39996A8'
000078AA                                   12086 @LNAME822 DS   0H
000078AA 00000018                          12087          DC    X'00000018'
000078AE 99846D9281869281                  12088          DC    C'rd_kafka_message_destroy'
000078C6 00                                12089          DC    X'00'
                                           12090 rd_kafka_message_destroy DCCPRLG CINDEX=822,BASER=12,FRAME=192,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME822
                                           12091          macro
                                           12092          dccextrn &m
                                           12093          gblc    &$dccext(1000)
                                           12094          gbla    &$dccexti
                                           12095          lcla    &i
                                           12096 &$dccext(&$dccexti+1) setc    '&m'
                                           12097 &i       seta    1
                                           12098 .loop    aif    (&i gt &$dccexti).around
                                           12099          aif    ('&$dccext(&i)' eq '&m').getout
                                           12100 &i       seta    &i+1
                                           12101          ago     .loop
                                           12102 .around  anop
                                           12103 &$dccexti seta &$dccexti+1
                                           12104          extrn  &m
                                           12105 .getout  anop
                                           12106          mend
000078C8                                   12107+$eye0225    ds    0d                                                    02-DCCCA
000078C8 C4C3C3                            12108+         dc cl3'DCC'                                                    02-DCCCA
000078CB 01                                12109+         dc xl1'01' format one                                          02-DCCCA
000078CC 00000000                          12110+         dc a(0)                                                        02-DCCCA
000078D0 000000000000793A                  12111+         dc ad(@PER_822)                                                02-DCCCA
000078D8 00000000000000C0                  12112+         dc ad(192)                                                     02-DCCCA
000078E0 0000000000000000                  12113+         dc ad(0)                                                       02-DCCCA
000078E8 0000000000001000                  12114+         dc ad(4096)                                                    02-DCCCA
000078F0 20                                12115+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000078F1 03                                12116+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000078F2 03                                12117+         dc al1(3)                                                      02-DCCCA
000078F3 08                                12118+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000078F4 00                                12119+         dc bl.8'00000000'                                              02-DCCCA
000078F5 000000                            12120+         dc al3(0)                                                      02-DCCCA
000078F8 00000000000078AA                  12121+         dc ad(@LNAME822)                                               02-DCCCA
00007900                                   12122+         ds 0d                                                          02-DCCCA
00007900 00000000000078C8                  12123+         dc ad($eye0225)                                                02-DCCCA
00007908 0000000000000000                  12124+         dc ad(0)                                                       02-DCCCA
00007910                                   12125+         ds    0d                                                       01-DCCPR
                                           12126+         entry rd_kafka_message_destroy                                 01-DCCPR
00007910                                   12127+rd_kafka_message_destroy ds 0d                                          01-DCCPR
00007910                                   12128+@REGION_822_1 ds 0h                                                     01-DCCPR
00007910 EBEC D008 0024          00000008  12129+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007916 E3E0 D088 0004          00000088  12130+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  244 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000791C E3C0 D090 0004          00000090  12131+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007922 B904 002E                         12132+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007926 E3B0 C018 0004          00000018  12133+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000792C A7EB 00C0               000000C0  12134+         aghi  14,192              increase by frame size               01-DCCPR
00007930 E3E0 C020 0021          00000020  12135+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007936 4720 B020               00000020  12136+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000793A                                   12137+@PER_822 ds    0h                                                       01-DCCPR
0000793A EBDE 2080 0024          00000080  12138+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007940 E3C0 2090 0024          00000090  12139+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007946 B904 00D2                         12140+         lgr   13,2                set real frame pointer               01-DCCPR
0000794A B904 00CF                         12141+         lgr   12,15               set base reg                         01-DCCPR
                        00007910           12142+         using @REGION_822_1,12                                         01-DCCPR
                                           12143 * ******* End of Prologue
                                           12144 * *
                                           12145 * ***           rd_kafka_op_t *rko;
                                           12146 * ***
                                           12147 * ***           if ((((rko = (rd_kafka_op_t *)rkmessage->_private) != \
                                           12148 * ((void *)0))))
0000794E E310 1000 0004          00000000  12149          LG    1,0(0,1)    ; rkmessage
00007954 E3F0 1040 0004          00000040  12150          LG    15,64(0,1)  ; offset of _private in rd_kafka_message_s
0000795A B902 002F                         12151          LTGR  2,15
0000795E 4780 C088               00007998  12152          BE    @L939
                                           12153 * ***                   rd_kafka_op_destroy(rko);
00007962 E3F0 D0B0 0024          000000B0  12154          STG   15,176(0,13)
00007968 4110 D0B0               000000B0  12155          LA    1,176(0,13)
0000796C E3F0 C070 0004          00007980  12156          LG    15,@lit_822_391 ; rd_kafka_op_destroy
00007972                                   12157 @@gen_label621 DS    0H
00007972 05EF                              12158          BALR  14,15
00007974                                   12159 @@gen_label622 DS    0H
00007974 47F0 C0B2               000079C2  12160          B     @L940
00007978                                   12161          DS    0D
00007978 000000C0                          12162 @FRAMESIZE_822 DC F'192'
0000797C 00000000
00007980 0000000000000000                  12163 @lit_822_391 DC AD(rd_kafka_op_destroy)
00007988 00000000000014B0                  12164 @lit_822_392 DC AD(rd_kafka_message2msg)
00007990 0000000000003AE0                  12165 @lit_822_393 DC AD(rd_kafka_msg_destroy)
                                           12166 * ***           else {
00007998                                   12167 @L939    DS    0H
                                           12168 * ***                   rd_kafka_msg_t *rkm = rd_kafka_message2msg(rkm\
                                           12169 * essage);
00007998 E310 D0B0 0024          000000B0  12170          STG   1,176(0,13)
0000799E 4110 D0B0               000000B0  12171          LA    1,176(0,13)
000079A2 E3F0 C078 0004          00007988  12172          LG    15,@lit_822_392 ; rd_kafka_message2msg
000079A8                                   12173 @@gen_label623 DS    0H
000079A8 05EF                              12174          BALR  14,15
000079AA                                   12175 @@gen_label624 DS    0H
                                           12176 * ***                   rd_kafka_msg_destroy(((void *)0), rkm);
000079AA D707 D0B0 D0B0 000000B0 000000B0  12177          XC    176(8,13),176(13)
000079B0 E3F0 D0B8 0024          000000B8  12178          STG   15,184(0,13)
000079B6 4110 D0B0               000000B0  12179          LA    1,176(0,13)
000079BA E3F0 C080 0004          00007990  12180          LG    15,@lit_822_393 ; rd_kafka_msg_destroy
000079C0                                   12181 @@gen_label625 DS    0H
                                                                                                                           Page  245 
  Active Usings: @REGION_822_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000079C0 05EF                              12182          BALR  14,15
000079C2                                   12183 @@gen_label626 DS    0H
                                           12184 * ***           }
000079C2                                   12185 @L940    DS    0H
                                           12186 * ***   }
000079C2                                   12187 @ret_lab_822 DS 0H
                                           12188 * * **** Start of Epilogue
                                           12189          DCCEPIL
000079C2                                   12190+         ds 0h                                                          01-DCCEP
                                           12191+* Epilog
000079C2 D707 D088 D088 00000088 00000088  12192+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000079C8 E3D0 D080 0004          00000080  12193+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000079CE E3C0 D090 0004          00000090  12194+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000079D4 E3B0 C018 0004          00000018  12195+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000079DA E3C0 B010 0021          00000010  12196+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000079E0 E3E0 D008 0004          00000008  12197+         lg  14,8(0,13)          load up return address                 01-DCCEP
000079E6 EB1C D020 0004          00000020  12198+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000079EC 078E                              12199+         bcr 8,14                if same dsab, just return              01-DCCEP
000079EE E3F0 D010 0024          00000010  12200+         stg 15,16(0,13)         save return code                       01-DCCEP
000079F4 E300 D018 0024          00000018  12201+         stg 0,24(0,13)          save more return code                  01-DCCEP
000079FA E3F0 D090 0004          00000090  12202+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007A00 E3F0 F018 0004          00000018  12203+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007A06 47F0 F040               00000040  12204+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12205+* End of Epilog
                                           12206 * * **** End of Epilogue
                                           12207          DROP  12
                                           12208 *
                                           12209 *   DSECT for automatic variables in "rd_kafka_message_destroy"
                                           12210 *      (FUNCTION #822)
                                           12211 *
00000000                00000000 000000A8  12212 @AUTO#rd_kafka_message_destroy DSECT
00000000                                   12213          DS    XL168
                                           12214 *
00007A0A                00000000 0000E868  12215 @CODE    CSECT
                                           12216 *
                                           12217 *
                                           12218 *
                                           12219 * ....... start of rd_kafka_message_new
                                           12220 rd_kafka_message_new ALIAS X'99846D92818692816D9485A2A28187856D9585A6'
00007A0A                                   12221 @LNAME1367 DS  0H
00007A0A 00000014                          12222          DC    X'00000014'
00007A0E 99846D9281869281                  12223          DC    C'rd_kafka_message_new'
00007A22 00                                12224          DC    X'00'
                                           12225 rd_kafka_message_new DCCPRLG CINDEX=1367,BASER=12,FRAME=192,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1367
                                           12226          macro
                                           12227          dccextrn &m
                                           12228          gblc    &$dccext(1000)
                                           12229          gbla    &$dccexti
                                           12230          lcla    &i
                                           12231 &$dccext(&$dccexti+1) setc    '&m'
                                           12232 &i       seta    1
                                                                                                                           Page  246 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12233 .loop    aif    (&i gt &$dccexti).around
                                           12234          aif    ('&$dccext(&i)' eq '&m').getout
                                           12235 &i       seta    &i+1
                                           12236          ago     .loop
                                           12237 .around  anop
                                           12238 &$dccexti seta &$dccexti+1
                                           12239          extrn  &m
                                           12240 .getout  anop
                                           12241          mend
00007A28                                   12242+$eye0228    ds    0d                                                    02-DCCCA
00007A28 C4C3C3                            12243+         dc cl3'DCC'                                                    02-DCCCA
00007A2B 01                                12244+         dc xl1'01' format one                                          02-DCCCA
00007A2C 00000000                          12245+         dc a(0)                                                        02-DCCCA
00007A30 0000000000007A9A                  12246+         dc ad(@PER_1367)                                               02-DCCCA
00007A38 00000000000000C0                  12247+         dc ad(192)                                                     02-DCCCA
00007A40 0000000000000000                  12248+         dc ad(0)                                                       02-DCCCA
00007A48 0000000000001000                  12249+         dc ad(4096)                                                    02-DCCCA
00007A50 20                                12250+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007A51 03                                12251+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007A52 03                                12252+         dc al1(3)                                                      02-DCCCA
00007A53 08                                12253+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007A54 00                                12254+         dc bl.8'00000000'                                              02-DCCCA
00007A55 000000                            12255+         dc al3(0)                                                      02-DCCCA
00007A58 0000000000007A0A                  12256+         dc ad(@LNAME1367)                                              02-DCCCA
00007A60                                   12257+         ds 0d                                                          02-DCCCA
00007A60 0000000000007A28                  12258+         dc ad($eye0228)                                                02-DCCCA
00007A68 0000000000000000                  12259+         dc ad(0)                                                       02-DCCCA
00007A70                                   12260+         ds    0d                                                       01-DCCPR
                                           12261+         entry rd_kafka_message_new                                     01-DCCPR
00007A70                                   12262+rd_kafka_message_new ds 0d                                              01-DCCPR
00007A70                                   12263+@REGION_1367_1 ds 0h                                                    01-DCCPR
00007A70 EBEC D008 0024          00000008  12264+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007A76 E3E0 D088 0004          00000088  12265+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007A7C E3C0 D090 0004          00000090  12266+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007A82 B904 002E                         12267+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007A86 E3B0 C018 0004          00000018  12268+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007A8C A7EB 00C0               000000C0  12269+         aghi  14,192              increase by frame size               01-DCCPR
00007A90 E3E0 C020 0021          00000020  12270+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007A96 4720 B020               00000020  12271+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007A9A                                   12272+@PER_1367 ds   0h                                                       01-DCCPR
00007A9A EBDE 2080 0024          00000080  12273+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007AA0 E3C0 2090 0024          00000090  12274+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007AA6 B904 00D2                         12275+         lgr   13,2                set real frame pointer               01-DCCPR
00007AAA B904 00CF                         12276+         lgr   12,15               set base reg                         01-DCCPR
                        00007A70           12277+         using @REGION_1367_1,12                                        01-DCCPR
                                           12278 * ******* End of Prologue
                                           12279 * *
                                           12280 * ***           rd_kafka_msg_t *rkm = rd_calloc(1, sizeof(*rkm));
00007AAE E548 D0B0 0001          000000B0  12281          MVGHI 176(13),1
00007AB4 E548 D0B8 00A8          000000B8  12282          MVGHI 184(13),168
00007ABA 4110 D0B0               000000B0  12283          LA    1,176(0,13)
00007ABE E3F0 C0B8 0004          00007B28  12284          LG    15,@lit_1367_395 ; rd_calloc
                                                                                                                           Page  247 
  Active Usings: @REGION_1367_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007AC4                                   12285 @@gen_label627 DS    0H
00007AC4 05EF                              12286          BALR  14,15
00007AC6                                   12287 @@gen_label628 DS    0H
                                           12288 * ***           rkm->rkm_flags      = 0x10000;
00007AC6 C019 0001 0000                    12289          IILF  1,X'00010000' ; 65536
00007ACC 5010 F058               00000058  12290          ST    1,88(0,15)  ; offset of rkm_flags in rd_kafka_msg_s
                                           12291 * ***           rkm->rkm_broker_id  = -1;
00007AD0 E54C F074 FFFF          00000074  12292          MVHI  116(15),-1  ; offset of rkm_broker_id in rd_kafka_msg_s
                                           12293 * ***           return (rd_kafka_message_t *)rkm;
                                           12294 * ***   }
                                           12295 * * **** Start of Epilogue
                                           12296          DCCEPIL
00007AD6                                   12297+         ds 0h                                                          01-DCCEP
                                           12298+* Epilog
00007AD6 D707 D088 D088 00000088 00000088  12299+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007ADC E3D0 D080 0004          00000080  12300+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007AE2 E3C0 D090 0004          00000090  12301+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007AE8 E3B0 C018 0004          00000018  12302+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007AEE E3C0 B010 0021          00000010  12303+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007AF4 E3E0 D008 0004          00000008  12304+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007AFA EB1C D020 0004          00000020  12305+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007B00 078E                              12306+         bcr 8,14                if same dsab, just return              01-DCCEP
00007B02 E3F0 D010 0024          00000010  12307+         stg 15,16(0,13)         save return code                       01-DCCEP
00007B08 E300 D018 0024          00000018  12308+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007B0E E3F0 D090 0004          00000090  12309+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007B14 E3F0 F018 0004          00000018  12310+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007B1A 47F0 F040               00000040  12311+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12312+* End of Epilog
                                           12313 * * **** End of Epilogue
00007B20                                   12314          DS    0D
00007B20 000000C0                          12315 @FRAMESIZE_1367 DC F'192'
00007B24 00000000
00007B28 0000000000000570                  12316 @lit_1367_395 DC AD(rd_calloc)
                                           12317          DROP  12
                                           12318 *
                                           12319 *   DSECT for automatic variables in "rd_kafka_message_new"
                                           12320 *      (FUNCTION #1367)
                                           12321 *
00000000                00000000 000000A8  12322 @AUTO#rd_kafka_message_new DSECT
00000000                                   12323          DS    XL168
                                           12324 *
00007B30                00000000 0000E868  12325 @CODE    CSECT
                                           12326 *
                                           12327 *
                                           12328 *
                                           12329 * ....... start of rd_kafka_message_setup
00007B30                                   12330 @LNAME1982 DS  0H
00007B30 00000016                          12331          DC    X'00000016'
00007B34 99846D9281869281                  12332          DC    C'rd_kafka_message_setup'
00007B4A 00                                12333          DC    X'00'
                                           12334 rd_kafka_message_setup DCCPRLG CINDEX=1982,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1982
                                                                                                                           Page  248 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12335          macro
                                           12336          dccextrn &m
                                           12337          gblc    &$dccext(1000)
                                           12338          gbla    &$dccexti
                                           12339          lcla    &i
                                           12340 &$dccext(&$dccexti+1) setc    '&m'
                                           12341 &i       seta    1
                                           12342 .loop    aif    (&i gt &$dccexti).around
                                           12343          aif    ('&$dccext(&i)' eq '&m').getout
                                           12344 &i       seta    &i+1
                                           12345          ago     .loop
                                           12346 .around  anop
                                           12347 &$dccexti seta &$dccexti+1
                                           12348          extrn  &m
                                           12349 .getout  anop
                                           12350          mend
00007B50                                   12351+$eye0231    ds    0d                                                    02-DCCCA
00007B50 C4C3C3                            12352+         dc cl3'DCC'                                                    02-DCCCA
00007B53 01                                12353+         dc xl1'01' format one                                          02-DCCCA
00007B54 00000000                          12354+         dc a(0)                                                        02-DCCCA
00007B58 0000000000007BC2                  12355+         dc ad(@PER_1982)                                               02-DCCCA
00007B60 00000000000000C0                  12356+         dc ad(192)                                                     02-DCCCA
00007B68 0000000000000000                  12357+         dc ad(0)                                                       02-DCCCA
00007B70 0000000000001000                  12358+         dc ad(4096)                                                    02-DCCCA
00007B78 20                                12359+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007B79 03                                12360+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007B7A 03                                12361+         dc al1(3)                                                      02-DCCCA
00007B7B 08                                12362+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007B7C 00                                12363+         dc bl.8'00000000'                                              02-DCCCA
00007B7D 000000                            12364+         dc al3(0)                                                      02-DCCCA
00007B80 0000000000007B30                  12365+         dc ad(@LNAME1982)                                              02-DCCCA
00007B88                                   12366+         ds 0d                                                          02-DCCCA
00007B88 0000000000007B50                  12367+         dc ad($eye0231)                                                02-DCCCA
00007B90 0000000000000000                  12368+         dc ad(0)                                                       02-DCCCA
00007B98                                   12369+         ds    0d                                                       01-DCCPR
00007B98                                   12370+rd_kafka_message_setup ds 0d                                            01-DCCPR
00007B98                                   12371+@REGION_1982_1 ds 0h                                                    01-DCCPR
00007B98 EBEC D008 0024          00000008  12372+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007B9E E3E0 D088 0004          00000088  12373+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007BA4 E3C0 D090 0004          00000090  12374+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007BAA B904 002E                         12375+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007BAE E3B0 C018 0004          00000018  12376+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007BB4 A7EB 00C0               000000C0  12377+         aghi  14,192              increase by frame size               01-DCCPR
00007BB8 E3E0 C020 0021          00000020  12378+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007BBE 4720 B020               00000020  12379+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007BC2                                   12380+@PER_1982 ds   0h                                                       01-DCCPR
00007BC2 EBDE 2080 0024          00000080  12381+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007BC8 E3C0 2090 0024          00000090  12382+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007BCE B904 00D2                         12383+         lgr   13,2                set real frame pointer               01-DCCPR
00007BD2 B904 00CF                         12384+         lgr   12,15               set base reg                         01-DCCPR
                        00007B98           12385+         using @REGION_1982_1,12                                        01-DCCPR
                                           12386 * ******* End of Prologue
                                                                                                                           Page  249 
  Active Usings: @REGION_1982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12387 * *
00007BD6 EB45 1000 0004          00000000  12388          LMG   4,5,0(1)    ; rko
                                           12389 * ***           rd_kafka_topic_t *rkt;
                                           12390 * ***           rd_kafka_toppar_t *rktp = ((void *)0);
00007BDC A739 0000               00000000  12391          LGHI  3,0         ; 0
                                           12392 * ***
                                           12393 * ***           if (rko->rko_type == RD_KAFKA_OP_DR) {
00007BE0 E55C 4010 0004          00000010  12394          CHSI  16(4),4
00007BE6 4770 C078               00007C10  12395          BNE   @L941
                                           12396 * ***                   rkt = rko->rko_u.dr.rkt;
00007BEA E320 4070 0004          00000070  12397          LG    2,112(0,4)  ; offset of rko_u in rd_kafka_op_s
                                           12398 * ***           } else {
00007BF0 47F0 C09C               00007C34  12399          B     @L942
00007BF8                                   12400          DS    0D
00007BF8 000000C0                          12401 @FRAMESIZE_1982 DC F'192'
00007BFC 00000000
00007C00 0000000000002488                  12402 @lit_1982_400 DC AD(rd_kafka_topic_keep)
00007C08 0000000000000000                  12403 @lit_1982_401 DC AD(rd_kafka_interceptors_on_consume)
00007C10                                   12404 @L941    DS    0H
                                           12405 * ***                   if (rko->rko_rktp) {
00007C10 E3F0 4038 0002          00000038  12406          LTG   15,56(0,4)  ; offset of rko_rktp in rd_kafka_op_s
00007C16 4780 C092               00007C2A  12407          BZ    @L943
                                           12408 * ***                           rktp = rko->rko_rktp;
00007C1A E330 4038 0004          00000038  12409          LG    3,56(0,4)   ; offset of rko_rktp in rd_kafka_op_s
                                           12410 * ***                           rkt = rktp->rktp_rkt;
00007C20 E320 3060 0004          00000060  12411          LG    2,96(0,3)   ; offset of rktp_rkt in rd_kafka_toppar_s
                                           12412 * ***                   } else
00007C26 47F0 C096               00007C2E  12413          B     @L944
00007C2A                                   12414 @L943    DS    0H
                                           12415 * ***                           rkt = ((void *)0);
00007C2A B904 0023                         12416          LGR   2,3         ; rkt
00007C2E                                   12417 @L944    DS    0H
                                           12418 * ***
                                           12419 * ***                   rkmessage->_private = rko;
00007C2E E340 5040 0024          00000040  12420          STG   4,64(0,5)   ; offset of _private in rd_kafka_message_s
                                           12421 * ***           }
00007C34                                   12422 @L942    DS    0H
                                           12423 * ***
                                           12424 * ***
                                           12425 * ***           if (!rkmessage->rkt && rkt)
00007C34 E3F0 5008 0002          00000008  12426          LTG   15,8(0,5)   ; offset of rkt in rd_kafka_message_s
00007C3A 4770 C0C6               00007C5E  12427          BNZ   @L945
00007C3E B902 00F2                         12428          LTGR  15,2
00007C42 4780 C0C6               00007C5E  12429          BZ    @L945
                                           12430 * ***                   rkmessage->rkt = rd_kafka_topic_keep(rkt);
00007C46 E320 D0B0 0024          000000B0  12431          STG   2,176(0,13)
00007C4C 4110 D0B0               000000B0  12432          LA    1,176(0,13)
00007C50 E3F0 C068 0004          00007C00  12433          LG    15,@lit_1982_400 ; rd_kafka_topic_keep
00007C56                                   12434 @@gen_label633 DS    0H
00007C56 05EF                              12435          BALR  14,15
00007C58                                   12436 @@gen_label634 DS    0H
00007C58 E3F0 5008 0024          00000008  12437          STG   15,8(0,5)
                                                                                                                           Page  250 
  Active Usings: @REGION_1982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007C5E                                   12438 @L945    DS    0H
                                           12439 * ***
                                           12440 * ***           if (rktp)
00007C5E B902 00F3                         12441          LTGR  15,3
00007C62 4780 C0D6               00007C6E  12442          BZ    @L946
                                           12443 * ***                   rkmessage->partition = rktp->rktp_partition;
00007C66 58F0 3068               00000068  12444          L     15,104(0,3) ; offset of rktp_partition in rd_kafka_toppa*
                                                                r_s
00007C6A 50F0 5010               00000010  12445          ST    15,16(0,5)  ; offset of partition in rd_kafka_message_s
00007C6E                                   12446 @L946    DS    0H
                                           12447 * ***
                                           12448 * ***           if (!rkmessage->err)
00007C6E E3F0 5000 0012          00000000  12449          LT    15,0(0,5)   ; rkmessage
00007C74 4770 C120               00007CB8  12450          BNZ   @L948
                                           12451 * ***                   rkmessage->err = rko->rko_err;
00007C78 58F0 4020               00000020  12452          L     15,32(0,4)  ; offset of rko_err in rd_kafka_op_s
00007C7C 50F0 5000               00000000  12453          ST    15,0(0,5)   ; rkmessage
00007C80                                   12454 @L947    DS    0H
                                           12455 * ***
                                           12456 * ***
                                           12457 * ***           switch (rko->rko_type)
00007C80 47F0 C120               00007CB8  12458          B     @L948
                                           12459 * ***           {
                                           12460 * ***           case RD_KAFKA_OP_FETCH:
00007C84                                   12461 @L950    DS    0H
                                           12462 * ***                   if (!rkmessage->err && rkt)
00007C84 E3F0 5000 0012          00000000  12463          LT    15,0(0,5)   ; rkmessage
00007C8A 4770 C12C               00007CC4  12464          BNZ   @L949
00007C8E B902 00F2                         12465          LTGR  15,2
00007C92 4780 C12C               00007CC4  12466          BZ    @L949
                                           12467 * ***                           rd_kafka_interceptors_on_consume(rkt->\
                                           12468 * rkt_rk,
                                           12469 * ***                                                            rkmes\
                                           12470 * sage);
00007C96 E3F0 2148 0004          00000148  12471          LG    15,328(0,2)
00007C9C E3F0 D0B0 0024          000000B0  12472          STG   15,176(0,13)
00007CA2 E350 D0B8 0024          000000B8  12473          STG   5,184(0,13)
00007CA8 4110 D0B0               000000B0  12474          LA    1,176(0,13)
00007CAC E3F0 C070 0004          00007C08  12475          LG    15,@lit_1982_401 ; rd_kafka_interceptors_on_consume
00007CB2                                   12476 @@gen_label639 DS    0H
00007CB2 05EF                              12477          BALR  14,15
00007CB4                                   12478 @@gen_label640 DS    0H
00007CB4                                   12479 @L951    DS    0H
                                           12480 * ***                   break;
00007CB4 47F0 C12C               00007CC4  12481          B     @L949
                                           12482 * ***
                                           12483 * ***           default:
                                           12484 * ***                   break;
                                           12485 * ***           }
00007CB8                                   12486 @L948    DS    0H
00007CB8 58F0 4010               00000010  12487          L     15,16(0,4)  ; offset of rko_type in rd_kafka_op_s
00007CBC A7FE 0001               00000001  12488          CHI   15,1
                                                                                                                           Page  251 
  Active Usings: @REGION_1982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007CC0 4780 C0EC               00007C84  12489          BE    @L950
00007CC4                                   12490 @L949    DS    0H
                                           12491 * ***
                                           12492 * ***           return rkmessage;
00007CC4 B904 00F5                         12493          LGR   15,5
                                           12494 * ***   }
                                           12495 * * **** Start of Epilogue
                                           12496          DCCEPIL
00007CC8                                   12497+         ds 0h                                                          01-DCCEP
                                           12498+* Epilog
00007CC8 D707 D088 D088 00000088 00000088  12499+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007CCE E3D0 D080 0004          00000080  12500+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007CD4 E3C0 D090 0004          00000090  12501+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007CDA E3B0 C018 0004          00000018  12502+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007CE0 E3C0 B010 0021          00000010  12503+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007CE6 E3E0 D008 0004          00000008  12504+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007CEC EB1C D020 0004          00000020  12505+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007CF2 078E                              12506+         bcr 8,14                if same dsab, just return              01-DCCEP
00007CF4 E3F0 D010 0024          00000010  12507+         stg 15,16(0,13)         save return code                       01-DCCEP
00007CFA E300 D018 0024          00000018  12508+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007D00 E3F0 D090 0004          00000090  12509+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007D06 E3F0 F018 0004          00000018  12510+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007D0C 47F0 F040               00000040  12511+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12512+* End of Epilog
                                           12513 * * **** End of Epilogue
                                           12514          DROP  12
                                           12515 *
                                           12516 *   DSECT for automatic variables in "rd_kafka_message_setup"
                                           12517 *      (FUNCTION #1982)
                                           12518 *
00000000                00000000 000000A8  12519 @AUTO#rd_kafka_message_setup DSECT
00000000                                   12520          DS    XL168
                                           12521 *
00007D10                00000000 0000E868  12522 @CODE    CSECT
                                           12523 *
                                           12524 *
                                           12525 *
                                           12526 * ....... start of rd_kafka_message_get_from_rkm
                                           12527 rd_kafka_message_get_from_rkm ALIAS X'99846D92818692816D9485A2A28187856*
                                                                D8785A36D869996946D999294'
00007D10                                   12528 @LNAME1366 DS  0H
00007D10 0000001D                          12529          DC    X'0000001D'
00007D14 99846D9281869281                  12530          DC    C'rd_kafka_message_get_from_rkm'
00007D31 00                                12531          DC    X'00'
                                           12532 rd_kafka_message_get_from_rkm DCCPRLG CINDEX=1366,BASER=12,FRAME=184,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1366
                                           12533          macro
                                           12534          dccextrn &m
                                           12535          gblc    &$dccext(1000)
                                           12536          gbla    &$dccexti
                                           12537          lcla    &i
                                           12538 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  252 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12539 &i       seta    1
                                           12540 .loop    aif    (&i gt &$dccexti).around
                                           12541          aif    ('&$dccext(&i)' eq '&m').getout
                                           12542 &i       seta    &i+1
                                           12543          ago     .loop
                                           12544 .around  anop
                                           12545 &$dccexti seta &$dccexti+1
                                           12546          extrn  &m
                                           12547 .getout  anop
                                           12548          mend
00007D38                                   12549+$eye0234    ds    0d                                                    02-DCCCA
00007D38 C4C3C3                            12550+         dc cl3'DCC'                                                    02-DCCCA
00007D3B 01                                12551+         dc xl1'01' format one                                          02-DCCCA
00007D3C 00000000                          12552+         dc a(0)                                                        02-DCCCA
00007D40 0000000000007DAA                  12553+         dc ad(@PER_1366)                                               02-DCCCA
00007D48 00000000000000B8                  12554+         dc ad(184)                                                     02-DCCCA
00007D50 0000000000000000                  12555+         dc ad(0)                                                       02-DCCCA
00007D58 0000000000001000                  12556+         dc ad(4096)                                                    02-DCCCA
00007D60 20                                12557+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007D61 03                                12558+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007D62 03                                12559+         dc al1(3)                                                      02-DCCCA
00007D63 08                                12560+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007D64 00                                12561+         dc bl.8'00000000'                                              02-DCCCA
00007D65 000000                            12562+         dc al3(0)                                                      02-DCCCA
00007D68 0000000000007D10                  12563+         dc ad(@LNAME1366)                                              02-DCCCA
00007D70                                   12564+         ds 0d                                                          02-DCCCA
00007D70 0000000000007D38                  12565+         dc ad($eye0234)                                                02-DCCCA
00007D78 0000000000000000                  12566+         dc ad(0)                                                       02-DCCCA
00007D80                                   12567+         ds    0d                                                       01-DCCPR
                                           12568+         entry rd_kafka_message_get_from_rkm                            01-DCCPR
00007D80                                   12569+rd_kafka_message_get_from_rkm ds 0d                                     01-DCCPR
00007D80                                   12570+@REGION_1366_1 ds 0h                                                    01-DCCPR
00007D80 EBEC D008 0024          00000008  12571+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007D86 E3E0 D088 0004          00000088  12572+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007D8C E3C0 D090 0004          00000090  12573+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007D92 B904 002E                         12574+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007D96 E3B0 C018 0004          00000018  12575+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007D9C A7EB 00B8               000000B8  12576+         aghi  14,184              increase by frame size               01-DCCPR
00007DA0 E3E0 C020 0021          00000020  12577+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007DA6 4720 B020               00000020  12578+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007DAA                                   12579+@PER_1366 ds   0h                                                       01-DCCPR
00007DAA EBDE 2080 0024          00000080  12580+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007DB0 E3C0 2090 0024          00000090  12581+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007DB6 B904 00D2                         12582+         lgr   13,2                set real frame pointer               01-DCCPR
00007DBA B904 00CF                         12583+         lgr   12,15               set base reg                         01-DCCPR
                        00007D80           12584+         using @REGION_1366_1,12                                        01-DCCPR
                                           12585 * ******* End of Prologue
                                           12586 * *
                                           12587 * ***           return rd_kafka_message_setup(rko, &rkm->rkm_rkmessage\
                                           12588 * );
00007DBE E3F0 1000 0004          00000000  12589          LG    15,0(0,1)   ; rko
00007DC4 E3F0 D0A8 0024          000000A8  12590          STG   15,168(0,13)
                                                                                                                           Page  253 
  Active Usings: @REGION_1366_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007DCA E3F0 1008 0004          00000008  12591          LG    15,8(0,1)   ; rkm
00007DD0 E3F0 D0B0 0024          000000B0  12592          STG   15,176(0,13)
00007DD6 4110 D0A8               000000A8  12593          LA    1,168(0,13)
00007DDA E3F0 C0B8 0004          00007E38  12594          LG    15,@lit_1366_403 ; rd_kafka_message_setup
00007DE0                                   12595 @@gen_label641 DS    0H
00007DE0 05EF                              12596          BALR  14,15
00007DE2                                   12597 @@gen_label642 DS    0H
                                           12598 * ***   }
                                           12599 * * **** Start of Epilogue
                                           12600          DCCEPIL
00007DE2                                   12601+         ds 0h                                                          01-DCCEP
                                           12602+* Epilog
00007DE2 D707 D088 D088 00000088 00000088  12603+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007DE8 E3D0 D080 0004          00000080  12604+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007DEE E3C0 D090 0004          00000090  12605+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007DF4 E3B0 C018 0004          00000018  12606+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007DFA E3C0 B010 0021          00000010  12607+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007E00 E3E0 D008 0004          00000008  12608+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007E06 EB1C D020 0004          00000020  12609+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007E0C 078E                              12610+         bcr 8,14                if same dsab, just return              01-DCCEP
00007E0E E3F0 D010 0024          00000010  12611+         stg 15,16(0,13)         save return code                       01-DCCEP
00007E14 E300 D018 0024          00000018  12612+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007E1A E3F0 D090 0004          00000090  12613+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007E20 E3F0 F018 0004          00000018  12614+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007E26 47F0 F040               00000040  12615+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12616+* End of Epilog
                                           12617 * * **** End of Epilogue
00007E30                                   12618          DS    0D
00007E30 000000B8                          12619 @FRAMESIZE_1366 DC F'184'
00007E34 00000000
00007E38 0000000000007B98                  12620 @lit_1366_403 DC AD(rd_kafka_message_setup)
                                           12621          DROP  12
                                           12622 *
                                           12623 *   DSECT for automatic variables in "rd_kafka_message_get_from_rkm"
                                           12624 *      (FUNCTION #1366)
                                           12625 *
00000000                00000000 000000A8  12626 @AUTO#rd_kafka_message_get_from_rkm DSECT
00000000                                   12627          DS    XL168
                                           12628 *
00007E40                00000000 0000E868  12629 @CODE    CSECT
                                           12630 *
                                           12631 *
                                           12632 *
                                           12633 * ....... start of rd_kafka_message_get
                                           12634 rd_kafka_message_get ALIAS X'99846D92818692816D9485A2A28187856D8785A3'
00007E40                                   12635 @LNAME1365 DS  0H
00007E40 00000014                          12636          DC    X'00000014'
00007E44 99846D9281869281                  12637          DC    C'rd_kafka_message_get'
00007E58 00                                12638          DC    X'00'
                                           12639 rd_kafka_message_get DCCPRLG CINDEX=1365,BASER=12,FRAME=216,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1365
                                           12640          macro
                                                                                                                           Page  254 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12641          dccextrn &m
                                           12642          gblc    &$dccext(1000)
                                           12643          gbla    &$dccexti
                                           12644          lcla    &i
                                           12645 &$dccext(&$dccexti+1) setc    '&m'
                                           12646 &i       seta    1
                                           12647 .loop    aif    (&i gt &$dccexti).around
                                           12648          aif    ('&$dccext(&i)' eq '&m').getout
                                           12649 &i       seta    &i+1
                                           12650          ago     .loop
                                           12651 .around  anop
                                           12652 &$dccexti seta &$dccexti+1
                                           12653          extrn  &m
                                           12654 .getout  anop
                                           12655          mend
00007E60                                   12656+$eye0237    ds    0d                                                    02-DCCCA
00007E60 C4C3C3                            12657+         dc cl3'DCC'                                                    02-DCCCA
00007E63 01                                12658+         dc xl1'01' format one                                          02-DCCCA
00007E64 00000000                          12659+         dc a(0)                                                        02-DCCCA
00007E68 0000000000007ED2                  12660+         dc ad(@PER_1365)                                               02-DCCCA
00007E70 00000000000000D8                  12661+         dc ad(216)                                                     02-DCCCA
00007E78 0000000000000000                  12662+         dc ad(0)                                                       02-DCCCA
00007E80 0000000000001000                  12663+         dc ad(4096)                                                    02-DCCCA
00007E88 20                                12664+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007E89 03                                12665+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007E8A 03                                12666+         dc al1(3)                                                      02-DCCCA
00007E8B 08                                12667+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007E8C 00                                12668+         dc bl.8'00000000'                                              02-DCCCA
00007E8D 000000                            12669+         dc al3(0)                                                      02-DCCCA
00007E90 0000000000007E40                  12670+         dc ad(@LNAME1365)                                              02-DCCCA
00007E98                                   12671+         ds 0d                                                          02-DCCCA
00007E98 0000000000007E60                  12672+         dc ad($eye0237)                                                02-DCCCA
00007EA0 0000000000000000                  12673+         dc ad(0)                                                       02-DCCCA
00007EA8                                   12674+         ds    0d                                                       01-DCCPR
                                           12675+         entry rd_kafka_message_get                                     01-DCCPR
00007EA8                                   12676+rd_kafka_message_get ds 0d                                              01-DCCPR
00007EA8                                   12677+@REGION_1365_1 ds 0h                                                    01-DCCPR
00007EA8 EBEC D008 0024          00000008  12678+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007EAE E3E0 D088 0004          00000088  12679+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007EB4 E3C0 D090 0004          00000090  12680+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007EBA B904 002E                         12681+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007EBE E3B0 C018 0004          00000018  12682+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007EC4 A7EB 00D8               000000D8  12683+         aghi  14,216              increase by frame size               01-DCCPR
00007EC8 E3E0 C020 0021          00000020  12684+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007ECE 4720 B020               00000020  12685+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007ED2                                   12686+@PER_1365 ds   0h                                                       01-DCCPR
00007ED2 EBDE 2080 0024          00000080  12687+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007ED8 E3C0 2090 0024          00000090  12688+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007EDE B904 00D2                         12689+         lgr   13,2                set real frame pointer               01-DCCPR
00007EE2 B904 00CF                         12690+         lgr   12,15               set base reg                         01-DCCPR
                        00007EA8           12691+         using @REGION_1365_1,12                                        01-DCCPR
                                           12692 * ******* End of Prologue
                                                                                                                           Page  255 
  Active Usings: @REGION_1365_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12693 * *
00007EE6 E3F0 1000 0004          00000000  12694          LG    15,0(0,1)   ; rko
                                           12695 * ***           rd_kafka_message_t *rkmessage;
                                           12696 * ***
                                           12697 * ***           if (!rko)
00007EEC B902 001F                         12698          LTGR  1,15
00007EF0 4770 C190               00008038  12699          BNZ   @L954
                                           12700 * ***                   return rd_kafka_message_new();
00007EF4 E3F0 C060 0004          00007F08  12701          LG    15,@lit_1365_405 ; rd_kafka_message_new
00007EFA                                   12702 @@gen_label644 DS    0H
00007EFA 05EF                              12703          BALR  14,15
00007EFC                                   12704 @@gen_label645 DS    0H
00007EFC 47F0 C1E4               0000808C  12705          B     @ret_lab_1365
00007F00                                   12706          DS    0D
00007F00 000000D8                          12707 @FRAMESIZE_1365 DC F'216'
00007F04 00000000
00007F08 0000000000007A70                  12708 @lit_1365_405 DC AD(rd_kafka_message_new)
00007F10 000000000000ECA4                  12709 @lit_1365_407 DC AD(@strings@)
00007F18 0000000000000000                  12710 @lit_1365_409 DC AD(rd_kafka_crash)
00007F20 000000000000E868                  12711 @lit_1365_408 DC AD(@DATA)
00007F28 0000000000000000                  12712 @lit_1365_411 DC AD(__assert)
00007F30 0000000000000001                  12713 @lit_1365_413 DC FD'1' 0x0000000000000001
00007F38 0000000000000006                  12714 @lit_1365_414 DC FD'6' 0x0000000000000006
00007F40 0000000000007B98                  12715 @lit_1365_415 DC AD(rd_kafka_message_setup)
                                           12716 * ***
                                           12717 * ***           switch (rko->rko_type)
                                           12718 * ***           {
                                           12719 * ***           case RD_KAFKA_OP_FETCH:
00007F48                                   12720 @L956    DS    0H
                                           12721 * ***
                                           12722 * ***                   rkmessage = &rko->rko_u.fetch.rkm.rkm_rkmessag\
                                           12723 * e;
00007F48 4110 F078               00000078  12724          LA    1,120(0,15)
                                           12725 * ***                   break;
00007F4C 47F0 C1CC               00008074  12726          B     @L955
                                           12727 * ***
                                           12728 * ***           case RD_KAFKA_OP_ERR:
                                           12729 * ***           case RD_KAFKA_OP_CONSUMER_ERR:
00007F50                                   12730 @L958    DS    0H
                                           12731 * ***                   rkmessage = &rko->rko_u.err.rkm.rkm_rkmessage;
00007F50 4110 F080               00000080  12732          LA    1,128(0,15)
                                           12733 * ***                   rkmessage->payload = rko->rko_u.err.errstr;
00007F54 E320 F078 0004          00000078  12734          LG    2,120(0,15) ; offset of errstr in 0000065
00007F5A E320 1018 0024          00000018  12735          STG   2,24(0,1)   ; offset of payload in rd_kafka_message_s
                                           12736 * ***                   rkmessage->len = rkmessage->payload ?
00007F60 B902 0022                         12737          LTGR  2,2
00007F64 4780 C0DE               00007F86  12738          BZ    @L959
                                           12739 * ***                           __strlen(rkmessage->payload) : 0;
00007F68 E320 1018 0004          00000018  12740          LG    2,24(0,1)
00007F6E B904 0032                         12741          LGR   3,2
00007F72 A709 0000               00000000  12742          LGHI  0,0
00007F76                                   12743 @@gen_label647 DS 0H
                                                                                                                           Page  256 
  Active Usings: @REGION_1365_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007F76 B25E 0002                         12744          SRST  0,2
00007F7A 4710 C0CE               00007F76  12745          BC  1,@@gen_label647
00007F7E B90B 0003                         12746          SLGR  0,3
00007F82 47F0 C0E2               00007F8A  12747          B     @L960
00007F86                                   12748 @L959    DS    0H
00007F86 A709 0000               00000000  12749          LGHI  0,0         ; 0
00007F8A                                   12750 @L960    DS    0H
00007F8A E300 1020 0024          00000020  12751          STG   0,32(0,1)
                                           12752 * ***                   rkmessage->offset  = rko->rko_u.err.offset;
00007F90 E320 F070 0004          00000070  12753          LG    2,112(0,15) ; offset of rko_u in rd_kafka_op_s
00007F96 E320 1038 0024          00000038  12754          STG   2,56(0,1)   ; offset of offset in rd_kafka_message_s
                                           12755 * ***                   break;
00007F9C 47F0 C1CC               00008074  12756          B     @L955
                                           12757 * ***
                                           12758 * ***           default:
                                           12759 * ***                   do { if (((!(!*"unhandled optype")))) rd_kafka\
                                           12760 * _crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c",1410, __FUNCTI\
                                           12761 * ON__, (((void *)0)), "assert: " "!*\"unhandled optype\""); } while (\
                                           12762 * 0);
00007FA0                                   12763 @L962    DS    0H
00007FA0 E320 C068 0004          00007F10  12764          LG    2,@lit_1365_407
00007FA6 41F0 23E8               000003E8  12765          LA    15,1000(0,2)
00007FAA 9500 F000      00000000 00000000  12766          CLI   0(15),0
00007FAE 4780 C146               00007FEE  12767          BE    @L965
00007FB2 41F0 22C2               000002C2  12768          LA    15,706(0,2)
00007FB6 E3F0 D0B0 0024          000000B0  12769          STG   15,176(0,13)
00007FBC E548 D0B8 0582          000000B8  12770          MVGHI 184(13),1410
00007FC2 E3F0 C078 0004          00007F20  12771          LG    15,@lit_1365_408
00007FC8 41F0 F204               00000204  12772          LA    15,516(0,15)
00007FCC E3F0 D0C0 0024          000000C0  12773          STG   15,192(0,13)
00007FD2 D707 D0C8 D0C8 000000C8 000000C8  12774          XC    200(8,13),200(13)
00007FD8 41F0 23FA               000003FA  12775          LA    15,1018(0,2)
00007FDC E3F0 D0D0 0024          000000D0  12776          STG   15,208(0,13)
00007FE2 4110 D0B0               000000B0  12777          LA    1,176(0,13)
00007FE6 E3F0 C070 0004          00007F18  12778          LG    15,@lit_1365_409 ; rd_kafka_crash
00007FEC                                   12779 @@gen_label649 DS    0H
00007FEC 05EF                              12780          BALR  14,15
00007FEE                                   12781 @@gen_label650 DS    0H
00007FEE                                   12782 @L965    DS    0H
                                           12783 * ***                   ((!*"/* NOTREACHED */ violated") ? (void)0 : _\
                                           12784 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 14\
                                           12785 * 11, "!*\"/* NOTREACHED */ violated\""));
00007FEE 41F0 2418               00000418  12786          LA    15,1048(0,2)
00007FF2 9500 F000      00000000 00000000  12787          CLI   0(15),0
00007FF6 4780 C188               00008030  12788          BE    @L967
00007FFA                                   12789 @L966    DS    0H
00007FFA E3F0 C078 0004          00007F20  12790          LG    15,@lit_1365_408
00008000 41F0 F204               00000204  12791          LA    15,516(0,15)
00008004 E3F0 D0B0 0024          000000B0  12792          STG   15,176(0,13)
0000800A 41F0 22C2               000002C2  12793          LA    15,706(0,2)
0000800E E3F0 D0B8 0024          000000B8  12794          STG   15,184(0,13)
00008014 E548 D0C0 0583          000000C0  12795          MVGHI 192(13),1411
                                                                                                                           Page  257 
  Active Usings: @REGION_1365_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000801A 41F0 2432               00000432  12796          LA    15,1074(0,2)
0000801E E3F0 D0C8 0024          000000C8  12797          STG   15,200(0,13)
00008024 4110 D0B0               000000B0  12798          LA    1,176(0,13)
00008028 E3F0 C080 0004          00007F28  12799          LG    15,@lit_1365_411 ; __assert
0000802E                                   12800 @@gen_label652 DS    0H
0000802E 05EF                              12801          BALR  14,15
00008030                                   12802 @@gen_label653 DS    0H
00008030                                   12803 @L967    DS    0H
                                           12804 * ***                   return ((void *)0);
00008030 A7F9 0000               00000000  12805          LGHI  15,0        ; 0
00008034 47F0 C1E4               0000808C  12806          B     @ret_lab_1365
                                           12807 * ***           }
00008038                                   12808 @L954    DS    0H
00008038 5810 F010               00000010  12809          L     1,16(0,15)  ; offset of rko_type in rd_kafka_op_s
0000803C A71A FFFF               0000FFFF  12810          AHI   1,-1
00008040 C21F 0000 0002                    12811          CLFI  1,X'00000002'
00008046 4720 C0F8               00007FA0  12812          BH    @L962
0000804A B914 0011                         12813          LGFR  1,1
0000804E A729 0001               00000001  12814          LGHI  2,1
00008052 EB22 1000 000D          00000000  12815          SLLG  2,2,0(1)
00008058 B904 0012                         12816          LGR   1,2
0000805C E310 C088 0080          00007F30  12817          NG    1,@lit_1365_413
00008062 4770 C0A0               00007F48  12818          BNZ   @L956
00008066 E320 C090 0080          00007F38  12819          NG    2,@lit_1365_414
0000806C 4770 C0A8               00007F50  12820          BNZ   @L958
00008070 47F0 C0F8               00007FA0  12821          B     @L962
00008074                                   12822 @L955    DS    0H
                                           12823 * ***
                                           12824 * ***           return rd_kafka_message_setup(rko, rkmessage);
00008074 E3F0 D0B0 0024          000000B0  12825          STG   15,176(0,13)
0000807A E310 D0B8 0024          000000B8  12826          STG   1,184(0,13)
00008080 4110 D0B0               000000B0  12827          LA    1,176(0,13)
00008084 E3F0 C098 0004          00007F40  12828          LG    15,@lit_1365_415 ; rd_kafka_message_setup
0000808A                                   12829 @@gen_label654 DS    0H
0000808A 05EF                              12830          BALR  14,15
0000808C                                   12831 @@gen_label655 DS    0H
                                           12832 * ***   }
0000808C                                   12833 @ret_lab_1365 DS 0H
                                           12834 * * **** Start of Epilogue
                                           12835          DCCEPIL
0000808C                                   12836+         ds 0h                                                          01-DCCEP
                                           12837+* Epilog
0000808C D707 D088 D088 00000088 00000088  12838+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00008092 E3D0 D080 0004          00000080  12839+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00008098 E3C0 D090 0004          00000090  12840+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000809E E3B0 C018 0004          00000018  12841+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000080A4 E3C0 B010 0021          00000010  12842+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000080AA E3E0 D008 0004          00000008  12843+         lg  14,8(0,13)          load up return address                 01-DCCEP
000080B0 EB1C D020 0004          00000020  12844+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000080B6 078E                              12845+         bcr 8,14                if same dsab, just return              01-DCCEP
000080B8 E3F0 D010 0024          00000010  12846+         stg 15,16(0,13)         save return code                       01-DCCEP
000080BE E300 D018 0024          00000018  12847+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  258 
  Active Usings: @REGION_1365_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000080C4 E3F0 D090 0004          00000090  12848+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000080CA E3F0 F018 0004          00000018  12849+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000080D0 47F0 F040               00000040  12850+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12851+* End of Epilog
                                           12852 * * **** End of Epilogue
                                           12853          DROP  12
                                           12854 *
                                           12855 *   DSECT for automatic variables in "rd_kafka_message_get"
                                           12856 *      (FUNCTION #1365)
                                           12857 *
00000000                00000000 000000A8  12858 @AUTO#rd_kafka_message_get DSECT
00000000                                   12859          DS    XL168
                                           12860 *
000080D4                00000000 0000E868  12861 @CODE    CSECT
                                           12862 *
                                           12863 *
                                           12864 *
                                           12865 * ....... start of rd_kafka_message_timestamp
                                           12866 rd_kafka_message_timestamp ALIAS X'99846D92818692816D9485A2A28187856DA3*
                                                                899485A2A3819497'
000080D4                                   12867 @LNAME824 DS   0H
000080D4 0000001A                          12868          DC    X'0000001A'
000080D8 99846D9281869281                  12869          DC    C'rd_kafka_message_timestamp'
000080F2 00                                12870          DC    X'00'
                                           12871 rd_kafka_message_timestamp DCCPRLG CINDEX=824,BASER=12,FRAME=184,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME824
                                           12872          macro
                                           12873          dccextrn &m
                                           12874          gblc    &$dccext(1000)
                                           12875          gbla    &$dccexti
                                           12876          lcla    &i
                                           12877 &$dccext(&$dccexti+1) setc    '&m'
                                           12878 &i       seta    1
                                           12879 .loop    aif    (&i gt &$dccexti).around
                                           12880          aif    ('&$dccext(&i)' eq '&m').getout
                                           12881 &i       seta    &i+1
                                           12882          ago     .loop
                                           12883 .around  anop
                                           12884 &$dccexti seta &$dccexti+1
                                           12885          extrn  &m
                                           12886 .getout  anop
                                           12887          mend
000080F8                                   12888+$eye0240    ds    0d                                                    02-DCCCA
000080F8 C4C3C3                            12889+         dc cl3'DCC'                                                    02-DCCCA
000080FB 01                                12890+         dc xl1'01' format one                                          02-DCCCA
000080FC 00000000                          12891+         dc a(0)                                                        02-DCCCA
00008100 000000000000816A                  12892+         dc ad(@PER_824)                                                02-DCCCA
00008108 00000000000000B8                  12893+         dc ad(184)                                                     02-DCCCA
00008110 0000000000000000                  12894+         dc ad(0)                                                       02-DCCCA
00008118 0000000000001000                  12895+         dc ad(4096)                                                    02-DCCCA
00008120 20                                12896+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00008121 03                                12897+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page  259 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008122 03                                12898+         dc al1(3)                                                      02-DCCCA
00008123 08                                12899+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00008124 00                                12900+         dc bl.8'00000000'                                              02-DCCCA
00008125 000000                            12901+         dc al3(0)                                                      02-DCCCA
00008128 00000000000080D4                  12902+         dc ad(@LNAME824)                                               02-DCCCA
00008130                                   12903+         ds 0d                                                          02-DCCCA
00008130 00000000000080F8                  12904+         dc ad($eye0240)                                                02-DCCCA
00008138 0000000000000000                  12905+         dc ad(0)                                                       02-DCCCA
00008140                                   12906+         ds    0d                                                       01-DCCPR
                                           12907+         entry rd_kafka_message_timestamp                               01-DCCPR
00008140                                   12908+rd_kafka_message_timestamp ds 0d                                        01-DCCPR
00008140                                   12909+@REGION_824_1 ds 0h                                                     01-DCCPR
00008140 EBEC D008 0024          00000008  12910+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00008146 E3E0 D088 0004          00000088  12911+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000814C E3C0 D090 0004          00000090  12912+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00008152 B904 002E                         12913+         lgr   2,14                copy addr of our savearea            01-DCCPR
00008156 E3B0 C018 0004          00000018  12914+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000815C A7EB 00B8               000000B8  12915+         aghi  14,184              increase by frame size               01-DCCPR
00008160 E3E0 C020 0021          00000020  12916+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00008166 4720 B020               00000020  12917+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000816A                                   12918+@PER_824 ds    0h                                                       01-DCCPR
0000816A EBDE 2080 0024          00000080  12919+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00008170 E3C0 2090 0024          00000090  12920+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00008176 B904 00D2                         12921+         lgr   13,2                set real frame pointer               01-DCCPR
0000817A B904 00CF                         12922+         lgr   12,15               set base reg                         01-DCCPR
                        00008140           12923+         using @REGION_824_1,12                                         01-DCCPR
                                           12924 * ******* End of Prologue
                                           12925 * *
0000817E E320 1008 0004          00000008  12926          LG    2,8(0,1)    ; tstype
                                           12927 * ***           rd_kafka_msg_t *rkm;
                                           12928 * ***
                                           12929 * ***           if (rkmessage->err) {
00008184 E3F0 1000 0004          00000000  12930          LG    15,0(0,1)   ; rkmessage
0000818A E310 F000 0012          00000000  12931          LT    1,0(0,15)   ; rkmessage
00008190 4780 C080               000081C0  12932          BZ    @L968
                                           12933 * ***                   if (tstype)
00008194 B902 00F2                         12934          LTGR  15,2
00008198 4780 C062               000081A2  12935          BZ    @L969
                                           12936 * ***                           *tstype = RD_KAFKA_TIMESTAMP_NOT_AVAIL\
                                           12937 * ABLE;
0000819C E54C 2000 0000          00000000  12938          MVHI  0(2),0      ; tstype
000081A2                                   12939 @L969    DS    0H
                                           12940 * ***                   return -1;
000081A2 A7F9 FFFF               0000FFFF  12941          LGHI  15,-1       ; -1
000081A6 47F0 C0A8               000081E8  12942          B     @ret_lab_824
000081B0                                   12943          DS    0D
000081B0 000000B8                          12944 @FRAMESIZE_824 DC F'184'
000081B4 00000000
000081B8 00000000000014B0                  12945 @lit_824_418 DC AD(rd_kafka_message2msg)
                                           12946 * ***           }
000081C0                                   12947 @L968    DS    0H
                                           12948 * ***
                                                                                                                           Page  260 
  Active Usings: @REGION_824_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12949 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           12950 * sage);
000081C0 E3F0 D0B0 0024          000000B0  12951          STG   15,176(0,13)
000081C6 4110 D0B0               000000B0  12952          LA    1,176(0,13)
000081CA E3F0 C078 0004          000081B8  12953          LG    15,@lit_824_418 ; rd_kafka_message2msg
000081D0                                   12954 @@gen_label658 DS    0H
000081D0 05EF                              12955          BALR  14,15
000081D2                                   12956 @@gen_label659 DS    0H
                                           12957 * ***
                                           12958 * ***           if (tstype)
000081D2 B902 0012                         12959          LTGR  1,2
000081D6 4780 C0A2               000081E2  12960          BZ    @L970
                                           12961 * ***                   *tstype = rkm->rkm_tstype;
000081DA 5810 F05C               0000005C  12962          L     1,92(0,15)  ; offset of rkm_tstype in rd_kafka_msg_s
000081DE 5010 2000               00000000  12963          ST    1,0(0,2)    ; tstype
000081E2                                   12964 @L970    DS    0H
                                           12965 * ***
                                           12966 * ***           return rkm->rkm_timestamp;
000081E2 E3F0 F060 0004          00000060  12967          LG    15,96(0,15) ; offset of rkm_timestamp in rd_kafka_msg_s
                                           12968 * ***   }
000081E8                                   12969 @ret_lab_824 DS 0H
                                           12970 * * **** Start of Epilogue
                                           12971          DCCEPIL
000081E8                                   12972+         ds 0h                                                          01-DCCEP
                                           12973+* Epilog
000081E8 D707 D088 D088 00000088 00000088  12974+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000081EE E3D0 D080 0004          00000080  12975+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000081F4 E3C0 D090 0004          00000090  12976+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000081FA E3B0 C018 0004          00000018  12977+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00008200 E3C0 B010 0021          00000010  12978+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00008206 E3E0 D008 0004          00000008  12979+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000820C EB1C D020 0004          00000020  12980+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00008212 078E                              12981+         bcr 8,14                if same dsab, just return              01-DCCEP
00008214 E3F0 D010 0024          00000010  12982+         stg 15,16(0,13)         save return code                       01-DCCEP
0000821A E300 D018 0024          00000018  12983+         stg 0,24(0,13)          save more return code                  01-DCCEP
00008220 E3F0 D090 0004          00000090  12984+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00008226 E3F0 F018 0004          00000018  12985+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000822C 47F0 F040               00000040  12986+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           12987+* End of Epilog
                                           12988 * * **** End of Epilogue
                                           12989          DROP  12
                                           12990 *
                                           12991 *   DSECT for automatic variables in "rd_kafka_message_timestamp"
                                           12992 *      (FUNCTION #824)
                                           12993 *
00000000                00000000 000000A8  12994 @AUTO#rd_kafka_message_timestamp DSECT
00000000                                   12995          DS    XL168
                                           12996 *
00008230                00000000 0000E868  12997 @CODE    CSECT
                                           12998 *
                                           12999 *
                                           13000 *
                                                                                                                           Page  261 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13001 * ....... start of rd_kafka_message_latency
                                           13002 rd_kafka_message_latency ALIAS X'99846D92818692816D9485A2A28187856D9381*
                                                                A3859583A8'
00008230                                   13003 @LNAME825 DS   0H
00008230 00000018                          13004          DC    X'00000018'
00008234 99846D9281869281                  13005          DC    C'rd_kafka_message_latency'
0000824C 00                                13006          DC    X'00'
                                           13007 rd_kafka_message_latency DCCPRLG CINDEX=825,BASER=12,FRAME=184,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME825
                                           13008          macro
                                           13009          dccextrn &m
                                           13010          gblc    &$dccext(1000)
                                           13011          gbla    &$dccexti
                                           13012          lcla    &i
                                           13013 &$dccext(&$dccexti+1) setc    '&m'
                                           13014 &i       seta    1
                                           13015 .loop    aif    (&i gt &$dccexti).around
                                           13016          aif    ('&$dccext(&i)' eq '&m').getout
                                           13017 &i       seta    &i+1
                                           13018          ago     .loop
                                           13019 .around  anop
                                           13020 &$dccexti seta &$dccexti+1
                                           13021          extrn  &m
                                           13022 .getout  anop
                                           13023          mend
00008250                                   13024+$eye0243    ds    0d                                                    02-DCCCA
00008250 C4C3C3                            13025+         dc cl3'DCC'                                                    02-DCCCA
00008253 01                                13026+         dc xl1'01' format one                                          02-DCCCA
00008254 00000000                          13027+         dc a(0)                                                        02-DCCCA
00008258 00000000000082C2                  13028+         dc ad(@PER_825)                                                02-DCCCA
00008260 00000000000000B8                  13029+         dc ad(184)                                                     02-DCCCA
00008268 0000000000000000                  13030+         dc ad(0)                                                       02-DCCCA
00008270 0000000000001000                  13031+         dc ad(4096)                                                    02-DCCCA
00008278 20                                13032+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00008279 03                                13033+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000827A 03                                13034+         dc al1(3)                                                      02-DCCCA
0000827B 08                                13035+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000827C 00                                13036+         dc bl.8'00000000'                                              02-DCCCA
0000827D 000000                            13037+         dc al3(0)                                                      02-DCCCA
00008280 0000000000008230                  13038+         dc ad(@LNAME825)                                               02-DCCCA
00008288                                   13039+         ds 0d                                                          02-DCCCA
00008288 0000000000008250                  13040+         dc ad($eye0243)                                                02-DCCCA
00008290 0000000000000000                  13041+         dc ad(0)                                                       02-DCCCA
00008298                                   13042+         ds    0d                                                       01-DCCPR
                                           13043+         entry rd_kafka_message_latency                                 01-DCCPR
00008298                                   13044+rd_kafka_message_latency ds 0d                                          01-DCCPR
00008298                                   13045+@REGION_825_1 ds 0h                                                     01-DCCPR
00008298 EBEC D008 0024          00000008  13046+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000829E E3E0 D088 0004          00000088  13047+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000082A4 E3C0 D090 0004          00000090  13048+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000082AA B904 002E                         13049+         lgr   2,14                copy addr of our savearea            01-DCCPR
000082AE E3B0 C018 0004          00000018  13050+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  262 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000082B4 A7EB 00B8               000000B8  13051+         aghi  14,184              increase by frame size               01-DCCPR
000082B8 E3E0 C020 0021          00000020  13052+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000082BE 4720 B020               00000020  13053+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000082C2                                   13054+@PER_825 ds    0h                                                       01-DCCPR
000082C2 EBDE 2080 0024          00000080  13055+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000082C8 E3C0 2090 0024          00000090  13056+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000082CE B904 00D2                         13057+         lgr   13,2                set real frame pointer               01-DCCPR
000082D2 B904 00CF                         13058+         lgr   12,15               set base reg                         01-DCCPR
                        00008298           13059+         using @REGION_825_1,12                                         01-DCCPR
                                           13060 * ******* End of Prologue
                                           13061 * *
                                           13062 * ***           rd_kafka_msg_t *rkm;
                                           13063 * ***
                                           13064 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           13065 * sage);
000082D6 E3F0 1000 0004          00000000  13066          LG    15,0(0,1)   ; rkmessage
000082DC E3F0 D0B0 0024          000000B0  13067          STG   15,176(0,13)
000082E2 4110 D0B0               000000B0  13068          LA    1,176(0,13)
000082E6 E3F0 C078 0004          00008310  13069          LG    15,@lit_825_420 ; rd_kafka_message2msg
000082EC                                   13070 @@gen_label661 DS    0H
000082EC 05EF                              13071          BALR  14,15
000082EE                                   13072 @@gen_label662 DS    0H
000082EE B904 002F                         13073          LGR   2,15
                                           13074 * ***
                                           13075 * ***           if (((!rkm->rkm_u.producer.ts_enq)))
000082F2 E3F0 2080 0002          00000080  13076          LTG   15,128(0,2) ; offset of ts_enq in 0000042
000082F8 4770 C088               00008320  13077          BNZ   @L971
                                           13078 * ***                   return -1;
000082FC A7F9 FFFF               0000FFFF  13079          LGHI  15,-1       ; -1
00008300 47F0 C096               0000832E  13080          B     @ret_lab_825
00008308                                   13081          DS    0D
00008308 000000B8                          13082 @FRAMESIZE_825 DC F'184'
0000830C 00000000
00008310 00000000000014B0                  13083 @lit_825_420 DC AD(rd_kafka_message2msg)
00008318 0000000000000AD0                  13084 @lit_825_422 DC AD(rd_clock)
00008320                                   13085 @L971    DS    0H
                                           13086 * ***
                                           13087 * ***           return rd_clock() - rkm->rkm_u.producer.ts_enq;
00008320 E3F0 C080 0004          00008318  13088          LG    15,@lit_825_422 ; rd_clock
00008326                                   13089 @@gen_label664 DS    0H
00008326 05EF                              13090          BALR  14,15
00008328                                   13091 @@gen_label665 DS    0H
00008328 E3F0 2080 0009          00000080  13092          SG    15,128(0,2)
                                           13093 * ***   }
0000832E                                   13094 @ret_lab_825 DS 0H
                                           13095 * * **** Start of Epilogue
                                           13096          DCCEPIL
0000832E                                   13097+         ds 0h                                                          01-DCCEP
                                           13098+* Epilog
0000832E D707 D088 D088 00000088 00000088  13099+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00008334 E3D0 D080 0004          00000080  13100+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000833A E3C0 D090 0004          00000090  13101+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page  263 
  Active Usings: @REGION_825_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008340 E3B0 C018 0004          00000018  13102+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00008346 E3C0 B010 0021          00000010  13103+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000834C E3E0 D008 0004          00000008  13104+         lg  14,8(0,13)          load up return address                 01-DCCEP
00008352 EB1C D020 0004          00000020  13105+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00008358 078E                              13106+         bcr 8,14                if same dsab, just return              01-DCCEP
0000835A E3F0 D010 0024          00000010  13107+         stg 15,16(0,13)         save return code                       01-DCCEP
00008360 E300 D018 0024          00000018  13108+         stg 0,24(0,13)          save more return code                  01-DCCEP
00008366 E3F0 D090 0004          00000090  13109+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000836C E3F0 F018 0004          00000018  13110+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00008372 47F0 F040               00000040  13111+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           13112+* End of Epilog
                                           13113 * * **** End of Epilogue
                                           13114          DROP  12
                                           13115 *
                                           13116 *   DSECT for automatic variables in "rd_kafka_message_latency"
                                           13117 *      (FUNCTION #825)
                                           13118 *
00000000                00000000 000000A8  13119 @AUTO#rd_kafka_message_latency DSECT
00000000                                   13120          DS    XL168
                                           13121 *
00008376                00000000 0000E868  13122 @CODE    CSECT
                                           13123 *
                                           13124 *
                                           13125 *
                                           13126 * ....... start of rd_kafka_message_broker_id
                                           13127 rd_kafka_message_broker_id ALIAS X'99846D92818692816D9485A2A28187856D82*
                                                                99969285996D8984'
00008376                                   13128 @LNAME826 DS   0H
00008376 0000001A                          13129          DC    X'0000001A'
0000837A 99846D9281869281                  13130          DC    C'rd_kafka_message_broker_id'
00008394 00                                13131          DC    X'00'
                                           13132 rd_kafka_message_broker_id DCCPRLG CINDEX=826,BASER=12,FRAME=184,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME826
                                           13133          macro
                                           13134          dccextrn &m
                                           13135          gblc    &$dccext(1000)
                                           13136          gbla    &$dccexti
                                           13137          lcla    &i
                                           13138 &$dccext(&$dccexti+1) setc    '&m'
                                           13139 &i       seta    1
                                           13140 .loop    aif    (&i gt &$dccexti).around
                                           13141          aif    ('&$dccext(&i)' eq '&m').getout
                                           13142 &i       seta    &i+1
                                           13143          ago     .loop
                                           13144 .around  anop
                                           13145 &$dccexti seta &$dccexti+1
                                           13146          extrn  &m
                                           13147 .getout  anop
                                           13148          mend
00008398                                   13149+$eye0246    ds    0d                                                    02-DCCCA
00008398 C4C3C3                            13150+         dc cl3'DCC'                                                    02-DCCCA
0000839B 01                                13151+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  264 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000839C 00000000                          13152+         dc a(0)                                                        02-DCCCA
000083A0 000000000000840A                  13153+         dc ad(@PER_826)                                                02-DCCCA
000083A8 00000000000000B8                  13154+         dc ad(184)                                                     02-DCCCA
000083B0 0000000000000000                  13155+         dc ad(0)                                                       02-DCCCA
000083B8 0000000000001000                  13156+         dc ad(4096)                                                    02-DCCCA
000083C0 20                                13157+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000083C1 03                                13158+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000083C2 03                                13159+         dc al1(3)                                                      02-DCCCA
000083C3 08                                13160+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000083C4 00                                13161+         dc bl.8'00000000'                                              02-DCCCA
000083C5 000000                            13162+         dc al3(0)                                                      02-DCCCA
000083C8 0000000000008376                  13163+         dc ad(@LNAME826)                                               02-DCCCA
000083D0                                   13164+         ds 0d                                                          02-DCCCA
000083D0 0000000000008398                  13165+         dc ad($eye0246)                                                02-DCCCA
000083D8 0000000000000000                  13166+         dc ad(0)                                                       02-DCCCA
000083E0                                   13167+         ds    0d                                                       01-DCCPR
                                           13168+         entry rd_kafka_message_broker_id                               01-DCCPR
000083E0                                   13169+rd_kafka_message_broker_id ds 0d                                        01-DCCPR
000083E0                                   13170+@REGION_826_1 ds 0h                                                     01-DCCPR
000083E0 EBEC D008 0024          00000008  13171+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000083E6 E3E0 D088 0004          00000088  13172+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000083EC E3C0 D090 0004          00000090  13173+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000083F2 B904 002E                         13174+         lgr   2,14                copy addr of our savearea            01-DCCPR
000083F6 E3B0 C018 0004          00000018  13175+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000083FC A7EB 00B8               000000B8  13176+         aghi  14,184              increase by frame size               01-DCCPR
00008400 E3E0 C020 0021          00000020  13177+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00008406 4720 B020               00000020  13178+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000840A                                   13179+@PER_826 ds    0h                                                       01-DCCPR
0000840A EBDE 2080 0024          00000080  13180+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00008410 E3C0 2090 0024          00000090  13181+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00008416 B904 00D2                         13182+         lgr   13,2                set real frame pointer               01-DCCPR
0000841A B904 00CF                         13183+         lgr   12,15               set base reg                         01-DCCPR
                        000083E0           13184+         using @REGION_826_1,12                                         01-DCCPR
                                           13185 * ******* End of Prologue
                                           13186 * *
                                           13187 * ***           rd_kafka_msg_t *rkm;
                                           13188 * ***
                                           13189 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           13190 * sage);
0000841E E3F0 1000 0004          00000000  13191          LG    15,0(0,1)   ; rkmessage
00008424 E3F0 D0B0 0024          000000B0  13192          STG   15,176(0,13)
0000842A 4110 D0B0               000000B0  13193          LA    1,176(0,13)
0000842E E3F0 C0B0 0004          00008490  13194          LG    15,@lit_826_424 ; rd_kafka_message2msg
00008434                                   13195 @@gen_label666 DS    0H
00008434 05EF                              13196          BALR  14,15
00008436                                   13197 @@gen_label667 DS    0H
                                           13198 * ***
                                           13199 * ***           return rkm->rkm_broker_id;
00008436 E3F0 F074 0014          00000074  13200          LGF   15,116(0,15)
                                           13201 * ***   }
                                           13202 * * **** Start of Epilogue
                                           13203          DCCEPIL
                                                                                                                           Page  265 
  Active Usings: @REGION_826_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000843C                                   13204+         ds 0h                                                          01-DCCEP
                                           13205+* Epilog
0000843C D707 D088 D088 00000088 00000088  13206+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00008442 E3D0 D080 0004          00000080  13207+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00008448 E3C0 D090 0004          00000090  13208+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000844E E3B0 C018 0004          00000018  13209+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00008454 E3C0 B010 0021          00000010  13210+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000845A E3E0 D008 0004          00000008  13211+         lg  14,8(0,13)          load up return address                 01-DCCEP
00008460 EB1C D020 0004          00000020  13212+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00008466 078E                              13213+         bcr 8,14                if same dsab, just return              01-DCCEP
00008468 E3F0 D010 0024          00000010  13214+         stg 15,16(0,13)         save return code                       01-DCCEP
0000846E E300 D018 0024          00000018  13215+         stg 0,24(0,13)          save more return code                  01-DCCEP
00008474 E3F0 D090 0004          00000090  13216+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000847A E3F0 F018 0004          00000018  13217+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00008480 47F0 F040               00000040  13218+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           13219+* End of Epilog
                                           13220 * * **** End of Epilogue
00008488                                   13221          DS    0D
00008488 000000B8                          13222 @FRAMESIZE_826 DC F'184'
0000848C 00000000
00008490 00000000000014B0                  13223 @lit_826_424 DC AD(rd_kafka_message2msg)
                                           13224          DROP  12
                                           13225 *
                                           13226 *   DSECT for automatic variables in "rd_kafka_message_broker_id"
                                           13227 *      (FUNCTION #826)
                                           13228 *
00000000                00000000 000000A8  13229 @AUTO#rd_kafka_message_broker_id DSECT
00000000                                   13230          DS    XL168
                                           13231 *
00008498                00000000 0000E868  13232 @CODE    CSECT
                                           13233 *
                                           13234 *
                                           13235 *
                                           13236 * ....... start of rd_kafka_msg_headers_parse
00008498                                   13237 @LNAME1983 DS  0H
00008498 0000001A                          13238          DC    X'0000001A'
0000849C 99846D9281869281                  13239          DC    C'rd_kafka_msg_headers_parse'
000084B6 00                                13240          DC    X'00'
                                           13241 rd_kafka_msg_headers_parse DCCPRLG CINDEX=1983,BASER=12,FRAME=880,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1983
                                           13242          macro
                                           13243          dccextrn &m
                                           13244          gblc    &$dccext(1000)
                                           13245          gbla    &$dccexti
                                           13246          lcla    &i
                                           13247 &$dccext(&$dccexti+1) setc    '&m'
                                           13248 &i       seta    1
                                           13249 .loop    aif    (&i gt &$dccexti).around
                                           13250          aif    ('&$dccext(&i)' eq '&m').getout
                                           13251 &i       seta    &i+1
                                           13252          ago     .loop
                                           13253 .around  anop
                                                                                                                           Page  266 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13254 &$dccexti seta &$dccexti+1
                                           13255          extrn  &m
                                           13256 .getout  anop
                                           13257          mend
000084B8                                   13258+$eye0249    ds    0d                                                    02-DCCCA
000084B8 C4C3C3                            13259+         dc cl3'DCC'                                                    02-DCCCA
000084BB 01                                13260+         dc xl1'01' format one                                          02-DCCCA
000084BC 00000000                          13261+         dc a(0)                                                        02-DCCCA
000084C0 000000000000852A                  13262+         dc ad(@PER_1983)                                               02-DCCCA
000084C8 0000000000000370                  13263+         dc ad(880)                                                     02-DCCCA
000084D0 0000000000000000                  13264+         dc ad(0)                                                       02-DCCCA
000084D8 0000000000001000                  13265+         dc ad(4096)                                                    02-DCCCA
000084E0 20                                13266+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000084E1 03                                13267+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000084E2 03                                13268+         dc al1(3)                                                      02-DCCCA
000084E3 08                                13269+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000084E4 00                                13270+         dc bl.8'00000000'                                              02-DCCCA
000084E5 000000                            13271+         dc al3(0)                                                      02-DCCCA
000084E8 0000000000008498                  13272+         dc ad(@LNAME1983)                                              02-DCCCA
000084F0                                   13273+         ds 0d                                                          02-DCCCA
000084F0 00000000000084B8                  13274+         dc ad($eye0249)                                                02-DCCCA
000084F8 0000000000000000                  13275+         dc ad(0)                                                       02-DCCCA
00008500                                   13276+         ds    0d                                                       01-DCCPR
00008500                                   13277+rd_kafka_msg_headers_parse ds 0d                                        01-DCCPR
00008500                                   13278+@REGION_1983_1 ds 0h                                                    01-DCCPR
00008500 EBEC D008 0024          00000008  13279+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00008506 E3E0 D088 0004          00000088  13280+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000850C E3C0 D090 0004          00000090  13281+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00008512 B904 002E                         13282+         lgr   2,14                copy addr of our savearea            01-DCCPR
00008516 E3B0 C018 0004          00000018  13283+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000851C A7EB 0370               00000370  13284+         aghi  14,880              increase by frame size               01-DCCPR
00008520 E3E0 C020 0021          00000020  13285+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00008526 4720 B020               00000020  13286+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000852A                                   13287+@PER_1983 ds   0h                                                       01-DCCPR
0000852A EBDE 2080 0024          00000080  13288+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00008530 E3C0 2090 0024          00000090  13289+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00008536 B904 00D2                         13290+         lgr   13,2                set real frame pointer               01-DCCPR
0000853A B904 00CF                         13291+         lgr   12,15               set base reg                         01-DCCPR
                        00008500           13292+         using @REGION_1983_1,12                                        01-DCCPR
                                           13293 * ******* End of Prologue
                                           13294 * *
0000853E E350 1000 0004          00000000  13295          LG    5,0(0,1)    ; rkm
                                           13296 * ***           rd_kafka_buf_t *rkbuf;
                                           13297 * ***           int64_t HeaderCount;
                                           13298 * ***           const int log_decode_errors = 0;
00008544 A778 0000               00000000  13299          LHI   7,0         ; 0
                                           13300 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR__BAD_MSG;
                                           13301 * ***           int i;
                                           13302 * ***           rd_kafka_headers_t *hdrs = ((void *)0);
00008548 A729 0000               00000000  13303          LGHI  2,0         ; 0
                                           13304 * ***
                                           13305 * ***           do {} while (0);
                                                                                                                           Page  267 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000854C                                   13306 @L972    DS    0H
                                           13307 * ***
                                           13308 * ***           if ((((&rkm->rkm_u.consumer.binhdrs)->len) == -1 ? 0:(\
                                           13309 * (&rkm->rkm_u.consumer.binhdrs)->len)) == 0)
0000854C E55C 5078 FFFF          00000078  13310          CHSI  120(5),-1
00008552 4770 C0F0               000085F0  13311          BNE   @L975
00008556 A7F8 0000               00000000  13312          LHI   15,0        ; 0
0000855A 47F0 C0F4               000085F4  13313          B     @L976
00008560                                   13314          DS    0D
00008560 00000370                          13315 @FRAMESIZE_1983 DC F'880'
00008564 00000860                          13316 @lit_region_diff_1983_1_2  DC A(@REGION_1983_2-@REGION_1983_1)
00008568 0000000000000000                  13317 @lit_1983_432 DC AD(rd_kafka_buf_new_shadow)
00008570 0000000000001098                  13318 @lit_1983_433 DC AD(rd_slice_read_varint)
00008578 0000000000000000                  13319 @lit_1983_436 DC AD(rd_kafka_crash)
00008580 000000000000E868                  13320 @lit_1983_435 DC AD(@DATA)
00008588 000000000000ECA4                  13321 @lit_1983_434 DC AD(@strings@)
00008590 0000000000000000                  13322 @lit_1983_438 DC AD(snprintf)
00008598 0000000000000000                  13323 @lit_1983_440 DC AD(mtx_lock)
000085A0 0000000000001CC0                  13324 @lit_1983_442 DC AD(rd_strlcpy)
000085A8 0000000000000000                  13325 @lit_1983_444 DC AD(mtx_unlock)
000085B0 00000000000011F0                  13326 @lit_1983_445 DC AD(rd_kafka_$Api$Key2str)
000085B8 0000000000000FD8                  13327 @lit_1983_446 DC AD(rd_slice_offset)
000085C0 0000000000000F30                  13328 @lit_1983_447 DC AD(rd_slice_abs_offset)
000085C8 0000000000000000                  13329 @lit_1983_451 DC AD(rd_kafka_log0)
000085D0 0000000000000958                  13330 @lit_1983_452 DC AD(rd_refcnt_sub0)
000085D8 0000000000000000                  13331 @lit_1983_453 DC AD(rd_kafka_buf_destroy_final)
000085E0 0000000000000000                  13332 @lit_1983_458 DC AD(rd_kafka_headers_new)
000085E8 0000000000000000                  13333 @lit_1983_479 DC AD(rd_slice_ensure_contig)
000085F0                                   13334 @L975    DS    0H
000085F0 58F0 5078               00000078  13335          L     15,120(0,5) ; offset of rkm_u in rd_kafka_msg_s
000085F4                                   13336 @L976    DS    0H
000085F4 12FF                              13337          LTR   15,15
000085F6 4770 C108               00008608  13338          BNE   @L977
                                           13339 * ***                   return RD_KAFKA_RESP_ERR__NOENT;
000085FA A7F9 FF64               0000FF64  13340          LGHI  15,-156     ; -156
000085FE E3C0 C064 001A          00008564  13341          ALGF  12,@lit_region_diff_1983_1_2
                                           13342          DROP  12
                        00008D60           13343          USING @REGION_1983_2,12
00008604 47F0 C858               000095B8  13344          B     @ret_lab_1983
                                           13345          DROP  12
                        00008500           13346          USING @REGION_1983_1,12
00008608                                   13347 @L977    DS    0H
                                           13348 * ***
                                           13349 * ***           rkbuf = rd_kafka_buf_new_shadow(rkm->rkm_u.consumer.bi\
                                           13350 * nhdrs.data,
                                           13351 * ***                                           (((&rkm->rkm_u. consum\
                                           13352 * er.binhdrs)->len) == -1 ? 0:((&rkm->rkm_u. consumer.binhdrs)->len)),
                                           13353 * ***
                                           13354 * ***                                           ((void *)0));
00008608 E55C 5078 FFFF          00000078  13355          CHSI  120(5),-1
0000860E 4770 C11A               0000861A  13356          BNE   @L978
00008612 A7F8 0000               00000000  13357          LHI   15,0        ; 0
                                                                                                                           Page  268 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008616 47F0 C11E               0000861E  13358          B     @L979
0000861A                                   13359 @L978    DS    0H
0000861A 58F0 5078               00000078  13360          L     15,120(0,5) ; offset of rkm_u in rd_kafka_msg_s
0000861E                                   13361 @L979    DS    0H
0000861E B914 00FF                         13362          LGFR  15,15
00008622 E310 5080 0004          00000080  13363          LG    1,128(0,5)
00008628 E310 D2E8 0024          000002E8  13364          STG   1,744(0,13)
0000862E E3F0 D2F0 0024          000002F0  13365          STG   15,752(0,13)
00008634 D707 D2F8 D2F8 000002F8 000002F8  13366          XC    760(8,13),760(13)
0000863A 4110 D2E8               000002E8  13367          LA    1,744(0,13)
0000863E E3F0 C068 0004          00008568  13368          LG    15,@lit_1983_432 ; rd_kafka_buf_new_shadow
00008644                                   13369 @@gen_label671 DS    0H
00008644 05EF                              13370          BALR  14,15
00008646                                   13371 @@gen_label672 DS    0H
00008646 B904 006F                         13372          LGR   6,15
                                           13373 * ***
                                           13374 * ***           do { int64_t _v; size_t _r = rd_slice_read_varint(&(rk\
                                           13375 * buf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_decode_err\
                                           13376 * ors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asg\
                                           13377 * kafka\\librdkafka\\src\\rdkafka_msg.c",1482, __FUNCTION__, (((void *\
                                           13378 * )0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256\
                                           13379 * ]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint parsing failed"\
                                           13380 * ); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logna\
                                           13381 * me[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy\
                                           13382 * (_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unl\
                                           13383 * ock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->r\
                                           13384 * kbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, lo\
                                           13385 * g_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow \
                                           13386 * " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu\
                                           13387 * " " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2st\
                                           13388 * r(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_s\
                                           13389 * lice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&\
                                           13390 * rkbuf->rkbuf_reader)->start), __FUNCTION__, 1482, (size_t)0, ((&rkbu\
                                           13391 * f->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), \
                                           13392 * rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "inc\
                                           13393 * orrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)-\
                                           13394 * >rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (\
                                           13395 * 0); *(&HeaderCount) = _v; } while (0);
0000864A                                   13396 @L980    DS    0H
0000864A 41F0 6078               00000078  13397          LA    15,120(0,6)
0000864E E3F0 D2E8 0024          000002E8  13398          STG   15,744(0,13)
00008654 41F0 D0A8               000000A8  13399          LA    15,168(0,13)
00008658 E3F0 D2F0 0024          000002F0  13400          STG   15,752(0,13)
0000865E 4110 D2E8               000002E8  13401          LA    1,744(0,13)
00008662 E3F0 C070 0004          00008570  13402          LG    15,@lit_1983_433 ; rd_slice_read_varint
00008668                                   13403 @@gen_label673 DS    0H
00008668 05EF                              13404          BALR  14,15
0000866A                                   13405 @@gen_label674 DS    0H
0000866A B902 00FF                         13406          LTGR  15,15
0000866E 4770 C3CC               000088CC  13407          BNE   @L983
00008672                                   13408 @L984    DS    0H
00008672 1277                              13409          LTR   7,7
                                                                                                                           Page  269 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008674 47D0 C3BC               000088BC  13410          BNH   @L987
00008678                                   13411 @L988    DS    0H
00008678 E3F0 6100 0002          00000100  13412          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000867E 4770 C1C4               000086C4  13413          BNZ   @L991
00008682 E3F0 C088 0004          00008588  13414          LG    15,@lit_1983_434
00008688 4110 F2C2               000002C2  13415          LA    1,706(0,15)
0000868C E310 D2E8 0024          000002E8  13416          STG   1,744(0,13)
00008692 E548 D2F0 05CA          000002F0  13417          MVGHI 752(13),1482
00008698 E310 C080 0004          00008580  13418          LG    1,@lit_1983_435
0000869E 4110 121A               0000021A  13419          LA    1,538(0,1)
000086A2 E310 D2F8 0024          000002F8  13420          STG   1,760(0,13)
000086A8 D707 D300 D300 00000300 00000300  13421          XC    768(8,13),768(13)
000086AE 41F0 F450               00000450  13422          LA    15,1104(0,15)
000086B2 E3F0 D308 0024          00000308  13423          STG   15,776(0,13)
000086B8 4110 D2E8               000002E8  13424          LA    1,744(0,13)
000086BC E3F0 C078 0004          00008578  13425          LG    15,@lit_1983_436 ; rd_kafka_crash
000086C2                                   13426 @@gen_label678 DS    0H
000086C2 05EF                              13427          BALR  14,15
000086C4                                   13428 @@gen_label679 DS    0H
000086C4                                   13429 @L991    DS    0H
000086C4 41F0 D0E8               000000E8  13430          LA    15,232(0,13)
000086C8 E3F0 D2E8 0024          000002E8  13431          STG   15,744(0,13)
000086CE E548 D2F0 0100          000002F0  13432          MVGHI 752(13),256
000086D4 E3F0 C088 0004          00008588  13433          LG    15,@lit_1983_434
000086DA 41F0 F46A               0000046A  13434          LA    15,1130(0,15)
000086DE E3F0 D2F8 0024          000002F8  13435          STG   15,760(0,13)
000086E4 4110 D2E8               000002E8  13436          LA    1,744(0,13)
000086E8 E3F0 C090 0004          00008590  13437          LG    15,@lit_1983_438 ; snprintf
000086EE                                   13438 @@gen_label680 DS    0H
000086EE 05EF                              13439          BALR  14,15
000086F0                                   13440 @@gen_label681 DS    0H
000086F0 41F0 D0E8               000000E8  13441          LA    15,232(0,13)
000086F4 B904 001F                         13442          LGR   1,15
000086F8 A709 0000               00000000  13443          LGHI  0,0
000086FC                                   13444 @@gen_label682 DS 0H
000086FC B25E 000F                         13445          SRST  0,15
00008700 4710 C1FC               000086FC  13446          BC  1,@@gen_label682
00008704 B90B 0001                         13447          SLGR  0,1
00008708 A70F 0002               00000002  13448          CGHI  0,2
0000870C 4770 C214               00008714  13449          BNE   @L993
00008710 9200 D0E8      000000E8 00000000  13450          MVI   232(13),0
00008714                                   13451 @L992    DS    0H
00008714                                   13452 @L993    DS    0H
00008714 E3F0 6100 0004          00000100  13453          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000871A A739 1638               00001638  13454          LGHI  3,5688      ; 5688
0000871E 41F3 F000               00000000  13455          LA    15,0(3,15)
00008722 E3F0 D2E8 0024          000002E8  13456          STG   15,744(0,13)
00008728 4110 D2E8               000002E8  13457          LA    1,744(0,13)
0000872C E3F0 C098 0004          00008598  13458          LG    15,@lit_1983_440 ; mtx_lock
00008732                                   13459 @@gen_label684 DS    0H
00008732 05EF                              13460          BALR  14,15
00008734                                   13461 @@gen_label685 DS    0H
                                                                                                                           Page  270 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008734 41F0 D1E8               000001E8  13462          LA    15,488(0,13)
00008738 E3F0 D2E8 0024          000002E8  13463          STG   15,744(0,13)
0000873E E3F0 6100 0004          00000100  13464          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008744 A719 1630               00001630  13465          LGHI  1,5680      ; 5680
00008748 E3F1 F000 0004          00000000  13466          LG    15,0(1,15)
0000874E E3F0 D2F0 0024          000002F0  13467          STG   15,752(0,13)
00008754 E548 D2F8 0100          000002F8  13468          MVGHI 760(13),256
0000875A 4110 D2E8               000002E8  13469          LA    1,744(0,13)
0000875E E3F0 C0A0 0004          000085A0  13470          LG    15,@lit_1983_442 ; rd_strlcpy
00008764                                   13471 @@gen_label686 DS    0H
00008764 05EF                              13472          BALR  14,15
00008766                                   13473 @@gen_label687 DS    0H
00008766 E3F0 6100 0004          00000100  13474          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000876C 41F3 F000               00000000  13475          LA    15,0(3,15)
00008770 E3F0 D2E8 0024          000002E8  13476          STG   15,744(0,13)
00008776 4110 D2E8               000002E8  13477          LA    1,744(0,13)
0000877A E3F0 C0A8 0004          000085A8  13478          LG    15,@lit_1983_444 ; mtx_unlock
00008780                                   13479 @@gen_label688 DS    0H
00008780 05EF                              13480          BALR  14,15
00008782                                   13481 @@gen_label689 DS    0H
00008782 E3F0 60B8 0015          000000B8  13482          LGH   15,184(0,6)
00008788 E3F0 D2E8 0024          000002E8  13483          STG   15,744(0,13)
0000878E 4110 D2E8               000002E8  13484          LA    1,744(0,13)
00008792 E3F0 C0B0 0004          000085B0  13485          LG    15,@lit_1983_445 ; rd_kafka_ApiKey2str
00008798                                   13486 @@gen_label690 DS    0H
00008798 05EF                              13487          BALR  14,15
0000879A                                   13488 @@gen_label691 DS    0H
0000879A B904 003F                         13489          LGR   3,15
0000879E 41F0 6078               00000078  13490          LA    15,120(0,6)
000087A2 E3F0 D2E8 0024          000002E8  13491          STG   15,744(0,13)
000087A8 4110 D2E8               000002E8  13492          LA    1,744(0,13)
000087AC E3F0 C0B8 0004          000085B8  13493          LG    15,@lit_1983_446 ; rd_slice_offset
000087B2                                   13494 @@gen_label692 DS    0H
000087B2 05EF                              13495          BALR  14,15
000087B4                                   13496 @@gen_label693 DS    0H
000087B4 B904 004F                         13497          LGR   4,15
000087B8 E350 6098 0004          00000098  13498          LG    5,152(0,6)  ; offset of end in rd_slice_s
000087BE 41F0 6078               00000078  13499          LA    15,120(0,6)
000087C2 E3F0 D2E8 0024          000002E8  13500          STG   15,744(0,13)
000087C8 4110 D2E8               000002E8  13501          LA    1,744(0,13)
000087CC E3F0 C0C0 0004          000085C0  13502          LG    15,@lit_1983_447 ; rd_slice_abs_offset
000087D2                                   13503 @@gen_label694 DS    0H
000087D2 05EF                              13504          BALR  14,15
000087D4                                   13505 @@gen_label695 DS    0H
000087D4 B90B 005F                         13506          SLGR  5,15
000087D8 E3F0 61E8 0002          000001E8  13507          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000087DE 4780 C2EC               000087EC  13508          BZ    @L996
000087E2 E3F0 61E8 0004          000001E8  13509          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000087E8 47F0 C2F6               000087F6  13510          B     @L997
000087EC                                   13511 @L996    DS    0H
                                                                                                                           Page  271 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000087EC E3F0 C088 0004          00008588  13512          LG    15,@lit_1983_434
000087F2 41F0 F482               00000482  13513          LA    15,1154(0,15)
000087F6                                   13514 @L997    DS    0H
000087F6 E310 6100 0004          00000100  13515          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000087FC E310 1FD0 0004          00000FD0  13516          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00008802 4110 1210               00000210  13517          LA    1,528(0,1)
00008806 E310 D2E8 0024          000002E8  13518          STG   1,744(0,13)
0000880C E310 6100 0004          00000100  13519          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008812 E310 1FD0 0004          00000FD0  13520          LG    1,4048(0,1)
00008818 E310 D2F0 0024          000002F0  13521          STG   1,752(0,13)
0000881E 4110 D1E8               000001E8  13522          LA    1,488(0,13)
00008822 E310 D2F8 0024          000002F8  13523          STG   1,760(0,13)
00008828 B914 0017                         13524          LGFR  1,7
0000882C E310 D300 0024          00000300  13525          STG   1,768(0,13)
00008832 D707 D308 D308 00000308 00000308  13526          XC    776(8,13),776(13)
00008838 E310 C088 0004          00008588  13527          LG    1,@lit_1983_434
0000883E 4170 14A6               000004A6  13528          LA    7,1190(0,1)
00008842 E370 D310 0024          00000310  13529          STG   7,784(0,13)
00008848 4110 14B2               000004B2  13530          LA    1,1202(0,1)
0000884C E310 D318 0024          00000318  13531          STG   1,792(0,13)
00008852 E330 D320 0024          00000320  13532          STG   3,800(0,13)
00008858 4810 60BA               000000BA  13533          LH    1,186(0,6)
0000885C B914 0011                         13534          LGFR  1,1
00008860 E310 D328 0024          00000328  13535          STG   1,808(0,13)
00008866 E340 D330 0024          00000330  13536          STG   4,816(0,13)
0000886C E310 6098 0004          00000098  13537          LG    1,152(0,6)  ; offset of end in rd_slice_s
00008872 E310 6090 000B          00000090  13538          SLG   1,144(0,6)
00008878 E310 D338 0024          00000338  13539          STG   1,824(0,13)
0000887E E310 C080 0004          00008580  13540          LG    1,@lit_1983_435
00008884 4110 121A               0000021A  13541          LA    1,538(0,1)
00008888 E310 D340 0024          00000340  13542          STG   1,832(0,13)
0000888E E548 D348 05CA          00000348  13543          MVGHI 840(13),1482
00008894 D707 D350 D350 00000350 00000350  13544          XC    848(8,13),848(13)
0000889A E350 D358 0024          00000358  13545          STG   5,856(0,13)
000088A0 E3F0 D360 0024          00000360  13546          STG   15,864(0,13)
000088A6 41F0 D0E8               000000E8  13547          LA    15,232(0,13)
000088AA E3F0 D368 0024          00000368  13548          STG   15,872(0,13)
000088B0 4110 D2E8               000002E8  13549          LA    1,744(0,13)
000088B4 E3F0 C0C8 0004          000085C8  13550          LG    15,@lit_1983_451 ; rd_kafka_log0
000088BA                                   13551 @@gen_label697 DS    0H
000088BA 05EF                              13552          BALR  14,15
000088BC                                   13553 @@gen_label698 DS    0H
000088BC                                   13554 @L987    DS    0H
000088BC E54C 6188 FF65          00000188  13555          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000088C2 E3C0 C064 001A          00008564  13556          ALGF  12,@lit_region_diff_1983_1_2
                                           13557          DROP  12
                        00008D60           13558          USING @REGION_1983_2,12
000088C8 47F0 C808               00009568  13559          B     @_err_parse@1983@1
                                           13560          DROP  12
                        00008500           13561          USING @REGION_1983_1,12
000088CC                                   13562 @L983    DS    0H
000088CC E3F0 D0A8 0004          000000A8  13563          LG    15,168(0,13) ; _v
                                                                                                                           Page  272 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000088D2 E3F0 D0E0 0024          000000E0  13564          STG   15,224(0,13)
                                           13565 * ***
                                           13566 * ***           if (HeaderCount <= 0) {
000088D8 E558 D0E0 0000          000000E0  13567          CGHSI 224(13),0
000088DE 4720 C41E               0000891E  13568          BH    @L998
                                           13569 * ***                   do { if (rd_refcnt_sub0(&(rkbuf)->rkbuf_refcnt\
                                           13570 * ) > 0) break; rd_kafka_buf_destroy_final(rkbuf); } while (0);
000088E2                                   13571 @L999    DS    0H
000088E2 41F0 6108               00000108  13572          LA    15,264(0,6)
000088E6 E3F0 D2E8 0024          000002E8  13573          STG   15,744(0,13)
000088EC 4110 D2E8               000002E8  13574          LA    1,744(0,13)
000088F0 E3F0 C0D0 0004          000085D0  13575          LG    15,@lit_1983_452 ; rd_refcnt_sub0
000088F6                                   13576 @@gen_label700 DS    0H
000088F6 05EF                              13577          BALR  14,15
000088F8                                   13578 @@gen_label701 DS    0H
000088F8 12FF                              13579          LTR   15,15
000088FA 4720 C410               00008910  13580          BH    @L1000
000088FE                                   13581 @L1002   DS    0H
000088FE E360 D2E8 0024          000002E8  13582          STG   6,744(0,13)
00008904 4110 D2E8               000002E8  13583          LA    1,744(0,13)
00008908 E3F0 C0D8 0004          000085D8  13584          LG    15,@lit_1983_453 ; rd_kafka_buf_destroy_final
0000890E                                   13585 @@gen_label703 DS    0H
0000890E 05EF                              13586          BALR  14,15
00008910                                   13587 @@gen_label704 DS    0H
00008910                                   13588 @L1000   DS    0H
                                           13589 * ***                   return RD_KAFKA_RESP_ERR__NOENT;
00008910 A7F9 FF64               0000FF64  13590          LGHI  15,-156     ; -156
00008914 E3C0 C064 001A          00008564  13591          ALGF  12,@lit_region_diff_1983_1_2
                                           13592          DROP  12
                        00008D60           13593          USING @REGION_1983_2,12
0000891A 47F0 C858               000095B8  13594          B     @ret_lab_1983
                                           13595          DROP  12
                        00008500           13596          USING @REGION_1983_1,12
                                           13597 * ***           } else if (((HeaderCount > 100000))) {
0000891E                                   13598 @L998    DS    0H
0000891E E3F0 D0E0 0004          000000E0  13599          LG    15,224(0,13) ; HeaderCount
00008924 C2FC 0001 86A0                    13600          CGFI  15,X'000186A0'
0000892A 47D0 C46A               0000896A  13601          BNH   @L1003
                                           13602 * ***                   do { if (rd_refcnt_sub0(&(rkbuf)->rkbuf_refcnt\
                                           13603 * ) > 0) break; rd_kafka_buf_destroy_final(rkbuf); } while (0);
0000892E                                   13604 @L1005   DS    0H
0000892E 41F0 6108               00000108  13605          LA    15,264(0,6)
00008932 E3F0 D2E8 0024          000002E8  13606          STG   15,744(0,13)
00008938 4110 D2E8               000002E8  13607          LA    1,744(0,13)
0000893C E3F0 C0D0 0004          000085D0  13608          LG    15,@lit_1983_452 ; rd_refcnt_sub0
00008942                                   13609 @@gen_label706 DS    0H
00008942 05EF                              13610          BALR  14,15
00008944                                   13611 @@gen_label707 DS    0H
00008944 12FF                              13612          LTR   15,15
00008946 4720 C45C               0000895C  13613          BH    @L1006
0000894A                                   13614 @L1008   DS    0H
0000894A E360 D2E8 0024          000002E8  13615          STG   6,744(0,13)
                                                                                                                           Page  273 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008950 4110 D2E8               000002E8  13616          LA    1,744(0,13)
00008954 E3F0 C0D8 0004          000085D8  13617          LG    15,@lit_1983_453 ; rd_kafka_buf_destroy_final
0000895A                                   13618 @@gen_label709 DS    0H
0000895A 05EF                              13619          BALR  14,15
0000895C                                   13620 @@gen_label710 DS    0H
0000895C                                   13621 @L1006   DS    0H
                                           13622 * ***                   return RD_KAFKA_RESP_ERR__BAD_MSG;
0000895C A7F9 FF39               0000FF39  13623          LGHI  15,-199     ; -199
00008960 E3C0 C064 001A          00008564  13624          ALGF  12,@lit_region_diff_1983_1_2
                                           13625          DROP  12
                        00008D60           13626          USING @REGION_1983_2,12
00008966 47F0 C858               000095B8  13627          B     @ret_lab_1983
                                           13628          DROP  12
                        00008500           13629          USING @REGION_1983_1,12
                                           13630 * ***           }
                                           13631 * ***
                                           13632 * ***           hdrs = rd_kafka_headers_new((size_t)HeaderCount);
0000896A                                   13633 @L1003   DS    0H
0000896A E3F0 D0E0 0004          000000E0  13634          LG    15,224(0,13) ; HeaderCount
00008970 E3F0 D2E8 0024          000002E8  13635          STG   15,744(0,13)
00008976 4110 D2E8               000002E8  13636          LA    1,744(0,13)
0000897A E3F0 C0E0 0004          000085E0  13637          LG    15,@lit_1983_458 ; rd_kafka_headers_new
00008980                                   13638 @@gen_label711 DS    0H
00008980 05EF                              13639          BALR  14,15
00008982                                   13640 @@gen_label712 DS    0H
00008982 B904 002F                         13641          LGR   2,15        ; hdrs
                                           13642 * ***
                                           13643 * ***           for (i = 0 ; (int64_t)i < HeaderCount ; i++) {
00008986 A738 0000               00000000  13644          LHI   3,0         ; 0
0000898A E3C0 C064 001A          00008564  13645          ALGF  12,@lit_region_diff_1983_1_2
                                           13646          DROP  12
                        00008D60           13647          USING @REGION_1983_2,12
00008990 47F0 C7B4               00009514  13648          B     @L1010
                                           13649          DROP  12
                        00008500           13650          USING @REGION_1983_1,12
                                           13651 * ***                   int64_t KeyLen, ValueLen;
                                           13652 * ***                   const char *Key, *Value;
                                           13653 * ***
                                           13654 * ***                   do { int64_t _v; size_t _r = rd_slice_read_var\
                                           13655 * int(&(rkbuf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_de\
                                           13656 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                           13657 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c",1498, __FUNCTION__, (\
                                           13658 * ((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tm\
                                           13659 * pstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint parsing\
                                           13660 *  failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { cha\
                                           13661 * r _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd\
                                           13662 * _strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname));\
                                           13663 *  mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(\
                                           13664 * rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _log\
                                           13665 * name, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer un\
                                           13666 * derflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expecte\
                                           13667 * d %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_A\
                                                                                                                           Page  274 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13668 * piKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersi\
                                           13669 * on, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->\
                                           13670 * end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1498, (size_t)0,\
                                           13671 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           13672 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           13673 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           13674 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           13675 *  while (0); *(&KeyLen) = _v; } while (0);
00008994                                   13676 @L1013   DS    0H
00008994 41F0 6078               00000078  13677          LA    15,120(0,6)
00008998 E3F0 D2E8 0024          000002E8  13678          STG   15,744(0,13)
0000899E 41F0 D0D0               000000D0  13679          LA    15,208(0,13)
000089A2 E3F0 D2F0 0024          000002F0  13680          STG   15,752(0,13)
000089A8 4110 D2E8               000002E8  13681          LA    1,744(0,13)
000089AC E3F0 C070 0004          00008570  13682          LG    15,@lit_1983_433 ; rd_slice_read_varint
000089B2                                   13683 @@gen_label713 DS    0H
000089B2 05EF                              13684          BALR  14,15
000089B4                                   13685 @@gen_label714 DS    0H
000089B4 B902 00FF                         13686          LTGR  15,15
000089B8 4770 C716               00008C16  13687          BNE   @L1016
000089BC                                   13688 @L1017   DS    0H
000089BC 1277                              13689          LTR   7,7
000089BE 47D0 C706               00008C06  13690          BNH   @L1020
000089C2                                   13691 @L1021   DS    0H
000089C2 E3F0 6100 0002          00000100  13692          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000089C8 4770 C50E               00008A0E  13693          BNZ   @L1024
000089CC E3F0 C088 0004          00008588  13694          LG    15,@lit_1983_434
000089D2 4110 F2C2               000002C2  13695          LA    1,706(0,15)
000089D6 E310 D2E8 0024          000002E8  13696          STG   1,744(0,13)
000089DC E548 D2F0 05DA          000002F0  13697          MVGHI 752(13),1498
000089E2 E310 C080 0004          00008580  13698          LG    1,@lit_1983_435
000089E8 4110 121A               0000021A  13699          LA    1,538(0,1)
000089EC E310 D2F8 0024          000002F8  13700          STG   1,760(0,13)
000089F2 D707 D300 D300 00000300 00000300  13701          XC    768(8,13),768(13)
000089F8 41F0 F450               00000450  13702          LA    15,1104(0,15)
000089FC E3F0 D308 0024          00000308  13703          STG   15,776(0,13)
00008A02 4110 D2E8               000002E8  13704          LA    1,744(0,13)
00008A06 E3F0 C078 0004          00008578  13705          LG    15,@lit_1983_436 ; rd_kafka_crash
00008A0C                                   13706 @@gen_label718 DS    0H
00008A0C 05EF                              13707          BALR  14,15
00008A0E                                   13708 @@gen_label719 DS    0H
00008A0E                                   13709 @L1024   DS    0H
00008A0E 41F0 D0E8               000000E8  13710          LA    15,232(0,13)
00008A12 E3F0 D2E8 0024          000002E8  13711          STG   15,744(0,13)
00008A18 E548 D2F0 0100          000002F0  13712          MVGHI 752(13),256
00008A1E E3F0 C088 0004          00008588  13713          LG    15,@lit_1983_434
00008A24 41F0 F46A               0000046A  13714          LA    15,1130(0,15)
00008A28 E3F0 D2F8 0024          000002F8  13715          STG   15,760(0,13)
00008A2E 4110 D2E8               000002E8  13716          LA    1,744(0,13)
00008A32 E3F0 C090 0004          00008590  13717          LG    15,@lit_1983_438 ; snprintf
00008A38                                   13718 @@gen_label720 DS    0H
00008A38 05EF                              13719          BALR  14,15
                                                                                                                           Page  275 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008A3A                                   13720 @@gen_label721 DS    0H
00008A3A 41F0 D0E8               000000E8  13721          LA    15,232(0,13)
00008A3E B904 001F                         13722          LGR   1,15
00008A42 A709 0000               00000000  13723          LGHI  0,0
00008A46                                   13724 @@gen_label722 DS 0H
00008A46 B25E 000F                         13725          SRST  0,15
00008A4A 4710 C546               00008A46  13726          BC  1,@@gen_label722
00008A4E B90B 0001                         13727          SLGR  0,1
00008A52 A70F 0002               00000002  13728          CGHI  0,2
00008A56 4770 C55E               00008A5E  13729          BNE   @L1026
00008A5A 9200 D0E8      000000E8 00000000  13730          MVI   232(13),0
00008A5E                                   13731 @L1025   DS    0H
00008A5E                                   13732 @L1026   DS    0H
00008A5E E3F0 6100 0004          00000100  13733          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008A64 A739 1638               00001638  13734          LGHI  3,5688      ; 5688
00008A68 41F3 F000               00000000  13735          LA    15,0(3,15)
00008A6C E3F0 D2E8 0024          000002E8  13736          STG   15,744(0,13)
00008A72 4110 D2E8               000002E8  13737          LA    1,744(0,13)
00008A76 E3F0 C098 0004          00008598  13738          LG    15,@lit_1983_440 ; mtx_lock
00008A7C                                   13739 @@gen_label724 DS    0H
00008A7C 05EF                              13740          BALR  14,15
00008A7E                                   13741 @@gen_label725 DS    0H
00008A7E 41F0 D1E8               000001E8  13742          LA    15,488(0,13)
00008A82 E3F0 D2E8 0024          000002E8  13743          STG   15,744(0,13)
00008A88 E3F0 6100 0004          00000100  13744          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008A8E A719 1630               00001630  13745          LGHI  1,5680      ; 5680
00008A92 E3F1 F000 0004          00000000  13746          LG    15,0(1,15)
00008A98 E3F0 D2F0 0024          000002F0  13747          STG   15,752(0,13)
00008A9E E548 D2F8 0100          000002F8  13748          MVGHI 760(13),256
00008AA4 4110 D2E8               000002E8  13749          LA    1,744(0,13)
00008AA8 E3F0 C0A0 0004          000085A0  13750          LG    15,@lit_1983_442 ; rd_strlcpy
00008AAE                                   13751 @@gen_label726 DS    0H
00008AAE 05EF                              13752          BALR  14,15
00008AB0                                   13753 @@gen_label727 DS    0H
00008AB0 E3F0 6100 0004          00000100  13754          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008AB6 41F3 F000               00000000  13755          LA    15,0(3,15)
00008ABA E3F0 D2E8 0024          000002E8  13756          STG   15,744(0,13)
00008AC0 4110 D2E8               000002E8  13757          LA    1,744(0,13)
00008AC4 E3F0 C0A8 0004          000085A8  13758          LG    15,@lit_1983_444 ; mtx_unlock
00008ACA                                   13759 @@gen_label728 DS    0H
00008ACA 05EF                              13760          BALR  14,15
00008ACC                                   13761 @@gen_label729 DS    0H
00008ACC E3F0 60B8 0015          000000B8  13762          LGH   15,184(0,6)
00008AD2 E3F0 D2E8 0024          000002E8  13763          STG   15,744(0,13)
00008AD8 4110 D2E8               000002E8  13764          LA    1,744(0,13)
00008ADC E3F0 C0B0 0004          000085B0  13765          LG    15,@lit_1983_445 ; rd_kafka_ApiKey2str
00008AE2                                   13766 @@gen_label730 DS    0H
00008AE2 05EF                              13767          BALR  14,15
00008AE4                                   13768 @@gen_label731 DS    0H
00008AE4 B904 003F                         13769          LGR   3,15
00008AE8 41F0 6078               00000078  13770          LA    15,120(0,6)
00008AEC E3F0 D2E8 0024          000002E8  13771          STG   15,744(0,13)
                                                                                                                           Page  276 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008AF2 4110 D2E8               000002E8  13772          LA    1,744(0,13)
00008AF6 E3F0 C0B8 0004          000085B8  13773          LG    15,@lit_1983_446 ; rd_slice_offset
00008AFC                                   13774 @@gen_label732 DS    0H
00008AFC 05EF                              13775          BALR  14,15
00008AFE                                   13776 @@gen_label733 DS    0H
00008AFE B904 004F                         13777          LGR   4,15
00008B02 E350 6098 0004          00000098  13778          LG    5,152(0,6)  ; offset of end in rd_slice_s
00008B08 41F0 6078               00000078  13779          LA    15,120(0,6)
00008B0C E3F0 D2E8 0024          000002E8  13780          STG   15,744(0,13)
00008B12 4110 D2E8               000002E8  13781          LA    1,744(0,13)
00008B16 E3F0 C0C0 0004          000085C0  13782          LG    15,@lit_1983_447 ; rd_slice_abs_offset
00008B1C                                   13783 @@gen_label734 DS    0H
00008B1C 05EF                              13784          BALR  14,15
00008B1E                                   13785 @@gen_label735 DS    0H
00008B1E B90B 005F                         13786          SLGR  5,15
00008B22 E3F0 61E8 0002          000001E8  13787          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00008B28 4780 C636               00008B36  13788          BZ    @L1029
00008B2C E3F0 61E8 0004          000001E8  13789          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00008B32 47F0 C640               00008B40  13790          B     @L1030
00008B36                                   13791 @L1029   DS    0H
00008B36 E3F0 C088 0004          00008588  13792          LG    15,@lit_1983_434
00008B3C 41F0 F482               00000482  13793          LA    15,1154(0,15)
00008B40                                   13794 @L1030   DS    0H
00008B40 E310 6100 0004          00000100  13795          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008B46 E310 1FD0 0004          00000FD0  13796          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00008B4C 4110 1210               00000210  13797          LA    1,528(0,1)
00008B50 E310 D2E8 0024          000002E8  13798          STG   1,744(0,13)
00008B56 E310 6100 0004          00000100  13799          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008B5C E310 1FD0 0004          00000FD0  13800          LG    1,4048(0,1)
00008B62 E310 D2F0 0024          000002F0  13801          STG   1,752(0,13)
00008B68 4110 D1E8               000001E8  13802          LA    1,488(0,13)
00008B6C E310 D2F8 0024          000002F8  13803          STG   1,760(0,13)
00008B72 B914 0017                         13804          LGFR  1,7
00008B76 E310 D300 0024          00000300  13805          STG   1,768(0,13)
00008B7C D707 D308 D308 00000308 00000308  13806          XC    776(8,13),776(13)
00008B82 E310 C088 0004          00008588  13807          LG    1,@lit_1983_434
00008B88 4170 14A6               000004A6  13808          LA    7,1190(0,1)
00008B8C E370 D310 0024          00000310  13809          STG   7,784(0,13)
00008B92 4110 14B2               000004B2  13810          LA    1,1202(0,1)
00008B96 E310 D318 0024          00000318  13811          STG   1,792(0,13)
00008B9C E330 D320 0024          00000320  13812          STG   3,800(0,13)
00008BA2 4810 60BA               000000BA  13813          LH    1,186(0,6)
00008BA6 B914 0011                         13814          LGFR  1,1
00008BAA E310 D328 0024          00000328  13815          STG   1,808(0,13)
00008BB0 E340 D330 0024          00000330  13816          STG   4,816(0,13)
00008BB6 E310 6098 0004          00000098  13817          LG    1,152(0,6)  ; offset of end in rd_slice_s
00008BBC E310 6090 000B          00000090  13818          SLG   1,144(0,6)
00008BC2 E310 D338 0024          00000338  13819          STG   1,824(0,13)
00008BC8 E310 C080 0004          00008580  13820          LG    1,@lit_1983_435
00008BCE 4110 121A               0000021A  13821          LA    1,538(0,1)
                                                                                                                           Page  277 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008BD2 E310 D340 0024          00000340  13822          STG   1,832(0,13)
00008BD8 E548 D348 05DA          00000348  13823          MVGHI 840(13),1498
00008BDE D707 D350 D350 00000350 00000350  13824          XC    848(8,13),848(13)
00008BE4 E350 D358 0024          00000358  13825          STG   5,856(0,13)
00008BEA E3F0 D360 0024          00000360  13826          STG   15,864(0,13)
00008BF0 41F0 D0E8               000000E8  13827          LA    15,232(0,13)
00008BF4 E3F0 D368 0024          00000368  13828          STG   15,872(0,13)
00008BFA 4110 D2E8               000002E8  13829          LA    1,744(0,13)
00008BFE E3F0 C0C8 0004          000085C8  13830          LG    15,@lit_1983_451 ; rd_kafka_log0
00008C04                                   13831 @@gen_label737 DS    0H
00008C04 05EF                              13832          BALR  14,15
00008C06                                   13833 @@gen_label738 DS    0H
00008C06                                   13834 @L1020   DS    0H
00008C06 E54C 6188 FF65          00000188  13835          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00008C0C E3C0 C064 001A          00008564  13836          ALGF  12,@lit_region_diff_1983_1_2
                                           13837          DROP  12
                        00008D60           13838          USING @REGION_1983_2,12
00008C12 47F0 C808               00009568  13839          B     @_err_parse@1983@1
                                           13840          DROP  12
                        00008500           13841          USING @REGION_1983_1,12
00008C16                                   13842 @L1016   DS    0H
00008C16 E3F0 D0D0 0004          000000D0  13843          LG    15,208(0,13) ; _v
00008C1C E3F0 D0B0 0024          000000B0  13844          STG   15,176(0,13)
                                           13845 * ***                   do { size_t _klen = (size_t)KeyLen; if (!(*(&K\
                                           13846 * ey) = (void *) rd_slice_ensure_contig(&(rkbuf)->rkbuf_reader, _klen)\
                                           13847 * )) do { size_t __len0 = (size_t)(_klen); if (((__len0 > ((&(rkbuf)->\
                                           13848 * rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))))\
                                           13849 *  { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb))\
                                           13850 * )) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c",149\
                                           13851 * 9, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } wh\
                                           13852 * ile (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ":\
                                           13853 *  "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _log\
                                           13854 * name[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlc\
                                           13855 * py(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_u\
                                           13856 * nlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf-\
                                           13857 * >rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, \
                                           13858 * log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflo\
                                           13859 * w " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "\
                                           13860 * zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2\
                                           13861 * str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd\
                                           13862 * _slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - \
                                           13863 * (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1499, __len0, ((&rkbuf\
                                           13864 * ->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), r\
                                           13865 * kbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "inco\
                                           13866 * rrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->\
                                           13867 * rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0\
                                           13868 * ); } } while (0); } while (0);
00008C22                                   13869 @L1031   DS    0H
00008C22 E340 D0B0 0004          000000B0  13870          LG    4,176(0,13) ; KeyLen
00008C28 41F0 6078               00000078  13871          LA    15,120(0,6)
00008C2C E3F0 D2E8 0024          000002E8  13872          STG   15,744(0,13)
00008C32 E340 D2F0 0024          000002F0  13873          STG   4,752(0,13)
                                                                                                                           Page  278 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008C38 4110 D2E8               000002E8  13874          LA    1,744(0,13)
00008C3C E3F0 C0E8 0004          000085E8  13875          LG    15,@lit_1983_479 ; rd_slice_ensure_contig
00008C42                                   13876 @@gen_label739 DS    0H
00008C42 05EF                              13877          BALR  14,15
00008C44                                   13878 @@gen_label740 DS    0H
00008C44 E3F0 D0C0 0024          000000C0  13879          STG   15,192(0,13)
00008C4A B902 00FF                         13880          LTGR  15,15
00008C4E 4780 C75C               00008C5C  13881          BZ    *+14  Around region break
00008C52 E3C0 C064 001A          00008564  13882          ALGF  12,@lit_region_diff_1983_1_2
                                           13883          DROP  12
                        00008D60           13884          USING @REGION_1983_2,12
00008C58 47F0 C222               00008F82  13885          B     @L1034
                                           13886          DROP  12
                        00008500           13887          USING @REGION_1983_1,12
00008C5C                                   13888 @L1035   DS    0H
00008C5C E380 6098 0004          00000098  13889          LG    8,152(0,6)  ; offset of end in rd_slice_s
00008C62 41F0 6078               00000078  13890          LA    15,120(0,6)
00008C66 E3F0 D2E8 0024          000002E8  13891          STG   15,744(0,13)
00008C6C 4110 D2E8               000002E8  13892          LA    1,744(0,13)
00008C70 E3F0 C0C0 0004          000085C0  13893          LG    15,@lit_1983_447 ; rd_slice_abs_offset
00008C76                                   13894 @@gen_label742 DS    0H
00008C76 05EF                              13895          BALR  14,15
00008C78                                   13896 @@gen_label743 DS    0H
00008C78 B90B 008F                         13897          SLGR  8,15
00008C7C B921 0048                         13898          CLGR  4,8
00008C80 4720 C78E               00008C8E  13899          BH    *+14  Around region break
00008C84 E3C0 C064 001A          00008564  13900          ALGF  12,@lit_region_diff_1983_1_2
                                           13901          DROP  12
                        00008D60           13902          USING @REGION_1983_2,12
00008C8A 47F0 C222               00008F82  13903          B     @L1038
                                           13904          DROP  12
                        00008500           13905          USING @REGION_1983_1,12
00008C8E                                   13906 @L1039   DS    0H
00008C8E 1277                              13907          LTR   7,7
00008C90 4720 C79E               00008C9E  13908          BH    *+14  Around region break
00008C94 E3C0 C064 001A          00008564  13909          ALGF  12,@lit_region_diff_1983_1_2
                                           13910          DROP  12
                        00008D60           13911          USING @REGION_1983_2,12
00008C9A 47F0 C218               00008F78  13912          B     @L1042
                                           13913          DROP  12
                        00008500           13914          USING @REGION_1983_1,12
00008C9E                                   13915 @L1043   DS    0H
00008C9E E3F0 6100 0002          00000100  13916          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008CA4 4770 C7EA               00008CEA  13917          BNZ   @L1046
00008CA8 E3F0 C088 0004          00008588  13918          LG    15,@lit_1983_434
00008CAE 4110 F2C2               000002C2  13919          LA    1,706(0,15)
00008CB2 E310 D2E8 0024          000002E8  13920          STG   1,744(0,13)
00008CB8 E548 D2F0 05DB          000002F0  13921          MVGHI 752(13),1499
00008CBE E310 C080 0004          00008580  13922          LG    1,@lit_1983_435
00008CC4 4110 121A               0000021A  13923          LA    1,538(0,1)
00008CC8 E310 D2F8 0024          000002F8  13924          STG   1,760(0,13)
00008CCE D707 D300 D300 00000300 00000300  13925          XC    768(8,13),768(13)
                                                                                                                           Page  279 
  Active Usings: @REGION_1983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008CD4 41F0 F450               00000450  13926          LA    15,1104(0,15)
00008CD8 E3F0 D308 0024          00000308  13927          STG   15,776(0,13)
00008CDE 4110 D2E8               000002E8  13928          LA    1,744(0,13)
00008CE2 E3F0 C078 0004          00008578  13929          LG    15,@lit_1983_436 ; rd_kafka_crash
00008CE8                                   13930 @@gen_label747 DS    0H
00008CE8 05EF                              13931          BALR  14,15
00008CEA                                   13932 @@gen_label748 DS    0H
00008CEA                                   13933 @L1046   DS    0H
00008CEA 41F0 D0E8               000000E8  13934          LA    15,232(0,13)
00008CEE E3F0 D2E8 0024          000002E8  13935          STG   15,744(0,13)
00008CF4 E548 D2F0 0100          000002F0  13936          MVGHI 752(13),256
00008CFA E3F0 C088 0004          00008588  13937          LG    15,@lit_1983_434
00008D00 41F0 F522               00000522  13938          LA    15,1314(0,15)
00008D04 E3F0 D2F8 0024          000002F8  13939          STG   15,760(0,13)
00008D0A 4110 D2E8               000002E8  13940          LA    1,744(0,13)
00008D0E E3F0 C090 0004          00008590  13941          LG    15,@lit_1983_438 ; snprintf
00008D14                                   13942 @@gen_label749 DS    0H
00008D14 05EF                              13943          BALR  14,15
00008D16                                   13944 @@gen_label750 DS    0H
00008D16 41F0 D0E8               000000E8  13945          LA    15,232(0,13)
00008D1A B904 001F                         13946          LGR   1,15
00008D1E A709 0000               00000000  13947          LGHI  0,0
00008D22                                   13948 @@gen_label751 DS 0H
00008D22 B25E 000F                         13949          SRST  0,15
00008D26 4710 C822               00008D22  13950          BC  1,@@gen_label751
00008D2A B90B 0001                         13951          SLGR  0,1
00008D2E A70F 0002               00000002  13952          CGHI  0,2
00008D32 4770 C83A               00008D3A  13953          BNE   @L1048
00008D36 9200 D0E8      000000E8 00000000  13954          MVI   232(13),0
00008D3A                                   13955 @L1047   DS    0H
00008D3A                                   13956 @L1048   DS    0H
00008D3A E3F0 6100 0004          00000100  13957          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D40 A739 1638               00001638  13958          LGHI  3,5688      ; 5688
00008D44 41F3 F000               00000000  13959          LA    15,0(3,15)
00008D48 E3F0 D2E8 0024          000002E8  13960          STG   15,744(0,13)
00008D4E 4110 D2E8               000002E8  13961          LA    1,744(0,13)
00008D52 E3F0 C098 0004          00008598  13962          LG    15,@lit_1983_440 ; mtx_lock
00008D58                                   13963 @@gen_label753 DS    0H
00008D58 05EF                              13964          BALR  14,15
00008D5A                                   13965 @@gen_label754 DS    0H
00008D5A E3C0 C064 001A          00008564  13966          ALGF  12,@lit_region_diff_1983_1_2
00008D60                                   13967 @REGION_1983_2 DS 0H
                                           13968          DROP  12
                        00008D60           13969          USING @REGION_1983_2,12
00008D60 41F0 D1E8               000001E8  13970          LA    15,488(0,13)
00008D64 E3F0 D2E8 0024          000002E8  13971          STG   15,744(0,13)
00008D6A E3F0 6100 0004          00000100  13972          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D70 A719 1630               00001630  13973          LGHI  1,5680      ; 5680
00008D74 E3F1 F000 0004          00000000  13974          LG    15,0(1,15)
00008D7A E3F0 D2F0 0024          000002F0  13975          STG   15,752(0,13)
00008D80 E548 D2F8 0100          000002F8  13976          MVGHI 760(13),256
00008D86 4110 D2E8               000002E8  13977          LA    1,744(0,13)
                                                                                                                           Page  280 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008D8A E3F0 C0B8 0004          00008E18  13978          LG    15,@lit_1983_489 ; rd_strlcpy
00008D90                                   13979 @@gen_label755 DS    0H
00008D90 05EF                              13980          BALR  14,15
00008D92                                   13981 @@gen_label756 DS    0H
00008D92 E3F0 6100 0004          00000100  13982          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D98 41F3 F000               00000000  13983          LA    15,0(3,15)
00008D9C E3F0 D2E8 0024          000002E8  13984          STG   15,744(0,13)
00008DA2 4110 D2E8               000002E8  13985          LA    1,744(0,13)
00008DA6 E3F0 C0C0 0004          00008E20  13986          LG    15,@lit_1983_491 ; mtx_unlock
00008DAC                                   13987 @@gen_label757 DS    0H
00008DAC 05EF                              13988          BALR  14,15
00008DAE                                   13989 @@gen_label758 DS    0H
00008DAE E3F0 60B8 0015          000000B8  13990          LGH   15,184(0,6)
00008DB4 E3F0 D2E8 0024          000002E8  13991          STG   15,744(0,13)
00008DBA 4110 D2E8               000002E8  13992          LA    1,744(0,13)
00008DBE E3F0 C0C8 0004          00008E28  13993          LG    15,@lit_1983_492 ; rd_kafka_ApiKey2str
00008DC4                                   13994 @@gen_label759 DS    0H
00008DC4 05EF                              13995          BALR  14,15
00008DC6                                   13996 @@gen_label760 DS    0H
00008DC6 B904 003F                         13997          LGR   3,15
00008DCA 41F0 6078               00000078  13998          LA    15,120(0,6)
00008DCE E3F0 D2E8 0024          000002E8  13999          STG   15,744(0,13)
00008DD4 4110 D2E8               000002E8  14000          LA    1,744(0,13)
00008DD8 E3F0 C0D0 0004          00008E30  14001          LG    15,@lit_1983_493 ; rd_slice_offset
00008DDE                                   14002 @@gen_label761 DS    0H
00008DDE 05EF                              14003          BALR  14,15
00008DE0                                   14004 @@gen_label762 DS    0H
00008DE0 B904 005F                         14005          LGR   5,15
00008DE4 E380 6098 0004          00000098  14006          LG    8,152(0,6)  ; offset of end in rd_slice_s
00008DEA 41F0 6078               00000078  14007          LA    15,120(0,6)
00008DEE E3F0 D2E8 0024          000002E8  14008          STG   15,744(0,13)
00008DF4 4110 D2E8               000002E8  14009          LA    1,744(0,13)
00008DF8 E3F0 C0D8 0004          00008E38  14010          LG    15,@lit_1983_494 ; rd_slice_abs_offset
00008DFE                                   14011 @@gen_label763 DS    0H
00008DFE 05EF                              14012          BALR  14,15
00008E00                                   14013 @@gen_label764 DS    0H
00008E00 B90B 008F                         14014          SLGR  8,15
00008E04 E3F0 61E8 0002          000001E8  14015          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00008E0A 4780 C148               00008EA8  14016          BZ    @L1051
00008E0E E3F0 61E8 0004          000001E8  14017          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00008E14 47F0 C152               00008EB2  14018          B     @L1052
00008E18                                   14019          DS    0D
00008E18 0000000000001CC0                  14020 @lit_1983_489 DC AD(rd_strlcpy)
00008E20 0000000000000000                  14021 @lit_1983_491 DC AD(mtx_unlock)
00008E28 00000000000011F0                  14022 @lit_1983_492 DC AD(rd_kafka_$Api$Key2str)
00008E30 0000000000000FD8                  14023 @lit_1983_493 DC AD(rd_slice_offset)
00008E38 0000000000000F30                  14024 @lit_1983_494 DC AD(rd_slice_abs_offset)
00008E40 000000000000ECA4                  14025 @lit_1983_495 DC AD(@strings@)
00008E48 0000000000000000                  14026 @lit_1983_498 DC AD(rd_kafka_log0)
00008E50 000000000000E868                  14027 @lit_1983_497 DC AD(@DATA)
                                                                                                                           Page  281 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008E58 0000000000001098                  14028 @lit_1983_499 DC AD(rd_slice_read_varint)
00008E60 0000000000000000                  14029 @lit_1983_502 DC AD(rd_kafka_crash)
00008E68 0000000000000000                  14030 @lit_1983_504 DC AD(snprintf)
00008E70 0000000000000000                  14031 @lit_1983_506 DC AD(mtx_lock)
00008E78 0000000000000000                  14032 @lit_1983_519 DC AD(rd_slice_ensure_contig)
00008E80 0000000000000000                  14033 @lit_1983_539 DC AD(rd_kafka_header_add)
00008E88 00000860                          14034 @lit_region_diff_1983_2_1  DC A(@REGION_1983_2-@REGION_1983_1)
00008E8C 00000000
00008E90 0000000000000958                  14035 @lit_1983_540 DC AD(rd_refcnt_sub0)
00008E98 0000000000000000                  14036 @lit_1983_541 DC AD(rd_kafka_buf_destroy_final)
00008EA0 0000000000000000                  14037 @lit_1983_545 DC AD(rd_kafka_headers_destroy)
00008EA8                                   14038 @L1051   DS    0H
00008EA8 E3F0 C0E0 0004          00008E40  14039          LG    15,@lit_1983_495
00008EAE 41F0 F482               00000482  14040          LA    15,1154(0,15)
00008EB2                                   14041 @L1052   DS    0H
00008EB2 E310 6100 0004          00000100  14042          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008EB8 E310 1FD0 0004          00000FD0  14043          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00008EBE 4110 1210               00000210  14044          LA    1,528(0,1)
00008EC2 E310 D2E8 0024          000002E8  14045          STG   1,744(0,13)
00008EC8 E310 6100 0004          00000100  14046          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008ECE E310 1FD0 0004          00000FD0  14047          LG    1,4048(0,1)
00008ED4 E310 D2F0 0024          000002F0  14048          STG   1,752(0,13)
00008EDA 4110 D1E8               000001E8  14049          LA    1,488(0,13)
00008EDE E310 D2F8 0024          000002F8  14050          STG   1,760(0,13)
00008EE4 B914 0017                         14051          LGFR  1,7
00008EE8 E310 D300 0024          00000300  14052          STG   1,768(0,13)
00008EEE D707 D308 D308 00000308 00000308  14053          XC    776(8,13),776(13)
00008EF4 E310 C0E0 0004          00008E40  14054          LG    1,@lit_1983_495
00008EFA 4170 14A6               000004A6  14055          LA    7,1190(0,1)
00008EFE E370 D310 0024          00000310  14056          STG   7,784(0,13)
00008F04 4110 14B2               000004B2  14057          LA    1,1202(0,1)
00008F08 E310 D318 0024          00000318  14058          STG   1,792(0,13)
00008F0E E330 D320 0024          00000320  14059          STG   3,800(0,13)
00008F14 4810 60BA               000000BA  14060          LH    1,186(0,6)
00008F18 B914 0011                         14061          LGFR  1,1
00008F1C E310 D328 0024          00000328  14062          STG   1,808(0,13)
00008F22 E350 D330 0024          00000330  14063          STG   5,816(0,13)
00008F28 E310 6098 0004          00000098  14064          LG    1,152(0,6)  ; offset of end in rd_slice_s
00008F2E E310 6090 000B          00000090  14065          SLG   1,144(0,6)
00008F34 E310 D338 0024          00000338  14066          STG   1,824(0,13)
00008F3A E310 C0F0 0004          00008E50  14067          LG    1,@lit_1983_497
00008F40 4110 121A               0000021A  14068          LA    1,538(0,1)
00008F44 E310 D340 0024          00000340  14069          STG   1,832(0,13)
00008F4A E548 D348 05DB          00000348  14070          MVGHI 840(13),1499
00008F50 E340 D350 0024          00000350  14071          STG   4,848(0,13)
00008F56 E380 D358 0024          00000358  14072          STG   8,856(0,13)
00008F5C E3F0 D360 0024          00000360  14073          STG   15,864(0,13)
00008F62 41F0 D0E8               000000E8  14074          LA    15,232(0,13)
00008F66 E3F0 D368 0024          00000368  14075          STG   15,872(0,13)
00008F6C 4110 D2E8               000002E8  14076          LA    1,744(0,13)
00008F70 E3F0 C0E8 0004          00008E48  14077          LG    15,@lit_1983_498 ; rd_kafka_log0
00008F76                                   14078 @@gen_label766 DS    0H
                                                                                                                           Page  282 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008F76 05EF                              14079          BALR  14,15
00008F78                                   14080 @@gen_label767 DS    0H
00008F78                                   14081 @L1042   DS    0H
00008F78 E54C 6188 FF65          00000188  14082          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00008F7E 47F0 C808               00009568  14083          B     @_err_parse@1983@1
00008F82                                   14084 @L1038   DS    0H
00008F82                                   14085 @L1034   DS    0H
                                           14086 * ***
                                           14087 * ***                   do { int64_t _v; size_t _r = rd_slice_read_var\
                                           14088 * int(&(rkbuf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_de\
                                           14089 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                           14090 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c",1501, __FUNCTION__, (\
                                           14091 * ((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tm\
                                           14092 * pstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint parsing\
                                           14093 *  failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { cha\
                                           14094 * r _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd\
                                           14095 * _strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname));\
                                           14096 *  mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(\
                                           14097 * rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _log\
                                           14098 * name, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer un\
                                           14099 * derflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expecte\
                                           14100 * d %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_A\
                                           14101 * piKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersi\
                                           14102 * on, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->\
                                           14103 * end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1501, (size_t)0,\
                                           14104 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           14105 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           14106 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           14107 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           14108 *  while (0); *(&ValueLen) = _v; } while (0);
00008F82                                   14109 @L1053   DS    0H
00008F82 41F0 6078               00000078  14110          LA    15,120(0,6)
00008F86 E3F0 D2E8 0024          000002E8  14111          STG   15,744(0,13)
00008F8C 41F0 D0D8               000000D8  14112          LA    15,216(0,13)
00008F90 E3F0 D2F0 0024          000002F0  14113          STG   15,752(0,13)
00008F96 4110 D2E8               000002E8  14114          LA    1,744(0,13)
00008F9A E3F0 C0F8 0004          00008E58  14115          LG    15,@lit_1983_499 ; rd_slice_read_varint
00008FA0                                   14116 @@gen_label768 DS    0H
00008FA0 05EF                              14117          BALR  14,15
00008FA2                                   14118 @@gen_label769 DS    0H
00008FA2 B902 00FF                         14119          LTGR  15,15
00008FA6 4770 C49E               000091FE  14120          BNE   @L1056
00008FAA                                   14121 @L1057   DS    0H
00008FAA 1277                              14122          LTR   7,7
00008FAC 47D0 C494               000091F4  14123          BNH   @L1060
00008FB0                                   14124 @L1061   DS    0H
00008FB0 E3F0 6100 0002          00000100  14125          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008FB6 4770 C29C               00008FFC  14126          BNZ   @L1064
00008FBA E3F0 C0E0 0004          00008E40  14127          LG    15,@lit_1983_495
00008FC0 4110 F2C2               000002C2  14128          LA    1,706(0,15)
00008FC4 E310 D2E8 0024          000002E8  14129          STG   1,744(0,13)
00008FCA E548 D2F0 05DD          000002F0  14130          MVGHI 752(13),1501
                                                                                                                           Page  283 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008FD0 E310 C0F0 0004          00008E50  14131          LG    1,@lit_1983_497
00008FD6 4110 121A               0000021A  14132          LA    1,538(0,1)
00008FDA E310 D2F8 0024          000002F8  14133          STG   1,760(0,13)
00008FE0 D707 D300 D300 00000300 00000300  14134          XC    768(8,13),768(13)
00008FE6 41F0 F450               00000450  14135          LA    15,1104(0,15)
00008FEA E3F0 D308 0024          00000308  14136          STG   15,776(0,13)
00008FF0 4110 D2E8               000002E8  14137          LA    1,744(0,13)
00008FF4 E3F0 C100 0004          00008E60  14138          LG    15,@lit_1983_502 ; rd_kafka_crash
00008FFA                                   14139 @@gen_label773 DS    0H
00008FFA 05EF                              14140          BALR  14,15
00008FFC                                   14141 @@gen_label774 DS    0H
00008FFC                                   14142 @L1064   DS    0H
00008FFC 41F0 D0E8               000000E8  14143          LA    15,232(0,13)
00009000 E3F0 D2E8 0024          000002E8  14144          STG   15,744(0,13)
00009006 E548 D2F0 0100          000002F0  14145          MVGHI 752(13),256
0000900C E3F0 C0E0 0004          00008E40  14146          LG    15,@lit_1983_495
00009012 41F0 F46A               0000046A  14147          LA    15,1130(0,15)
00009016 E3F0 D2F8 0024          000002F8  14148          STG   15,760(0,13)
0000901C 4110 D2E8               000002E8  14149          LA    1,744(0,13)
00009020 E3F0 C108 0004          00008E68  14150          LG    15,@lit_1983_504 ; snprintf
00009026                                   14151 @@gen_label775 DS    0H
00009026 05EF                              14152          BALR  14,15
00009028                                   14153 @@gen_label776 DS    0H
00009028 41F0 D0E8               000000E8  14154          LA    15,232(0,13)
0000902C B904 001F                         14155          LGR   1,15
00009030 A709 0000               00000000  14156          LGHI  0,0
00009034                                   14157 @@gen_label777 DS 0H
00009034 B25E 000F                         14158          SRST  0,15
00009038 4710 C2D4               00009034  14159          BC  1,@@gen_label777
0000903C B90B 0001                         14160          SLGR  0,1
00009040 A70F 0002               00000002  14161          CGHI  0,2
00009044 4770 C2EC               0000904C  14162          BNE   @L1066
00009048 9200 D0E8      000000E8 00000000  14163          MVI   232(13),0
0000904C                                   14164 @L1065   DS    0H
0000904C                                   14165 @L1066   DS    0H
0000904C E3F0 6100 0004          00000100  14166          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009052 A739 1638               00001638  14167          LGHI  3,5688      ; 5688
00009056 41F3 F000               00000000  14168          LA    15,0(3,15)
0000905A E3F0 D2E8 0024          000002E8  14169          STG   15,744(0,13)
00009060 4110 D2E8               000002E8  14170          LA    1,744(0,13)
00009064 E3F0 C110 0004          00008E70  14171          LG    15,@lit_1983_506 ; mtx_lock
0000906A                                   14172 @@gen_label779 DS    0H
0000906A 05EF                              14173          BALR  14,15
0000906C                                   14174 @@gen_label780 DS    0H
0000906C 41F0 D1E8               000001E8  14175          LA    15,488(0,13)
00009070 E3F0 D2E8 0024          000002E8  14176          STG   15,744(0,13)
00009076 E3F0 6100 0004          00000100  14177          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000907C A719 1630               00001630  14178          LGHI  1,5680      ; 5680
00009080 E3F1 F000 0004          00000000  14179          LG    15,0(1,15)
00009086 E3F0 D2F0 0024          000002F0  14180          STG   15,752(0,13)
0000908C E548 D2F8 0100          000002F8  14181          MVGHI 760(13),256
00009092 4110 D2E8               000002E8  14182          LA    1,744(0,13)
                                                                                                                           Page  284 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009096 E3F0 C0B8 0004          00008E18  14183          LG    15,@lit_1983_489 ; rd_strlcpy
0000909C                                   14184 @@gen_label781 DS    0H
0000909C 05EF                              14185          BALR  14,15
0000909E                                   14186 @@gen_label782 DS    0H
0000909E E3F0 6100 0004          00000100  14187          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000090A4 41F3 F000               00000000  14188          LA    15,0(3,15)
000090A8 E3F0 D2E8 0024          000002E8  14189          STG   15,744(0,13)
000090AE 4110 D2E8               000002E8  14190          LA    1,744(0,13)
000090B2 E3F0 C0C0 0004          00008E20  14191          LG    15,@lit_1983_491 ; mtx_unlock
000090B8                                   14192 @@gen_label783 DS    0H
000090B8 05EF                              14193          BALR  14,15
000090BA                                   14194 @@gen_label784 DS    0H
000090BA E3F0 60B8 0015          000000B8  14195          LGH   15,184(0,6)
000090C0 E3F0 D2E8 0024          000002E8  14196          STG   15,744(0,13)
000090C6 4110 D2E8               000002E8  14197          LA    1,744(0,13)
000090CA E3F0 C0C8 0004          00008E28  14198          LG    15,@lit_1983_492 ; rd_kafka_ApiKey2str
000090D0                                   14199 @@gen_label785 DS    0H
000090D0 05EF                              14200          BALR  14,15
000090D2                                   14201 @@gen_label786 DS    0H
000090D2 B904 003F                         14202          LGR   3,15
000090D6 41F0 6078               00000078  14203          LA    15,120(0,6)
000090DA E3F0 D2E8 0024          000002E8  14204          STG   15,744(0,13)
000090E0 4110 D2E8               000002E8  14205          LA    1,744(0,13)
000090E4 E3F0 C0D0 0004          00008E30  14206          LG    15,@lit_1983_493 ; rd_slice_offset
000090EA                                   14207 @@gen_label787 DS    0H
000090EA 05EF                              14208          BALR  14,15
000090EC                                   14209 @@gen_label788 DS    0H
000090EC B904 004F                         14210          LGR   4,15
000090F0 E350 6098 0004          00000098  14211          LG    5,152(0,6)  ; offset of end in rd_slice_s
000090F6 41F0 6078               00000078  14212          LA    15,120(0,6)
000090FA E3F0 D2E8 0024          000002E8  14213          STG   15,744(0,13)
00009100 4110 D2E8               000002E8  14214          LA    1,744(0,13)
00009104 E3F0 C0D8 0004          00008E38  14215          LG    15,@lit_1983_494 ; rd_slice_abs_offset
0000910A                                   14216 @@gen_label789 DS    0H
0000910A 05EF                              14217          BALR  14,15
0000910C                                   14218 @@gen_label790 DS    0H
0000910C B90B 005F                         14219          SLGR  5,15
00009110 E3F0 61E8 0002          000001E8  14220          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009116 4780 C3C4               00009124  14221          BZ    @L1069
0000911A E3F0 61E8 0004          000001E8  14222          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009120 47F0 C3CE               0000912E  14223          B     @L1070
00009124                                   14224 @L1069   DS    0H
00009124 E3F0 C0E0 0004          00008E40  14225          LG    15,@lit_1983_495
0000912A 41F0 F482               00000482  14226          LA    15,1154(0,15)
0000912E                                   14227 @L1070   DS    0H
0000912E E310 6100 0004          00000100  14228          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009134 E310 1FD0 0004          00000FD0  14229          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000913A 4110 1210               00000210  14230          LA    1,528(0,1)
0000913E E310 D2E8 0024          000002E8  14231          STG   1,744(0,13)
00009144 E310 6100 0004          00000100  14232          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  285 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000914A E310 1FD0 0004          00000FD0  14233          LG    1,4048(0,1)
00009150 E310 D2F0 0024          000002F0  14234          STG   1,752(0,13)
00009156 4110 D1E8               000001E8  14235          LA    1,488(0,13)
0000915A E310 D2F8 0024          000002F8  14236          STG   1,760(0,13)
00009160 B914 0017                         14237          LGFR  1,7
00009164 E310 D300 0024          00000300  14238          STG   1,768(0,13)
0000916A D707 D308 D308 00000308 00000308  14239          XC    776(8,13),776(13)
00009170 E310 C0E0 0004          00008E40  14240          LG    1,@lit_1983_495
00009176 4170 14A6               000004A6  14241          LA    7,1190(0,1)
0000917A E370 D310 0024          00000310  14242          STG   7,784(0,13)
00009180 4110 14B2               000004B2  14243          LA    1,1202(0,1)
00009184 E310 D318 0024          00000318  14244          STG   1,792(0,13)
0000918A E330 D320 0024          00000320  14245          STG   3,800(0,13)
00009190 4810 60BA               000000BA  14246          LH    1,186(0,6)
00009194 B914 0011                         14247          LGFR  1,1
00009198 E310 D328 0024          00000328  14248          STG   1,808(0,13)
0000919E E340 D330 0024          00000330  14249          STG   4,816(0,13)
000091A4 E310 6098 0004          00000098  14250          LG    1,152(0,6)  ; offset of end in rd_slice_s
000091AA E310 6090 000B          00000090  14251          SLG   1,144(0,6)
000091B0 E310 D338 0024          00000338  14252          STG   1,824(0,13)
000091B6 E310 C0F0 0004          00008E50  14253          LG    1,@lit_1983_497
000091BC 4110 121A               0000021A  14254          LA    1,538(0,1)
000091C0 E310 D340 0024          00000340  14255          STG   1,832(0,13)
000091C6 E548 D348 05DD          00000348  14256          MVGHI 840(13),1501
000091CC D707 D350 D350 00000350 00000350  14257          XC    848(8,13),848(13)
000091D2 E350 D358 0024          00000358  14258          STG   5,856(0,13)
000091D8 E3F0 D360 0024          00000360  14259          STG   15,864(0,13)
000091DE 41F0 D0E8               000000E8  14260          LA    15,232(0,13)
000091E2 E3F0 D368 0024          00000368  14261          STG   15,872(0,13)
000091E8 4110 D2E8               000002E8  14262          LA    1,744(0,13)
000091EC E3F0 C0E8 0004          00008E48  14263          LG    15,@lit_1983_498 ; rd_kafka_log0
000091F2                                   14264 @@gen_label792 DS    0H
000091F2 05EF                              14265          BALR  14,15
000091F4                                   14266 @@gen_label793 DS    0H
000091F4                                   14267 @L1060   DS    0H
000091F4 E54C 6188 FF65          00000188  14268          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000091FA 47F0 C808               00009568  14269          B     @_err_parse@1983@1
000091FE                                   14270 @L1056   DS    0H
000091FE E3F0 D0D8 0004          000000D8  14271          LG    15,216(0,13) ; _v
00009204 E3F0 D0B8 0024          000000B8  14272          STG   15,184(0,13)
                                           14273 * ***                   if (((ValueLen == -1)))
0000920A E558 D0B8 FFFF          000000B8  14274          CGHSI 184(13),-1
00009210 4770 C4C2               00009222  14275          BNE   @L1073
                                           14276 * ***                           Value = ((void *)0);
00009214 A7F9 0000               00000000  14277          LGHI  15,0        ; 0
00009218 E3F0 D0C8 0024          000000C8  14278          STG   15,200(0,13) ; Value
0000921E 47F0 C76E               000094CE  14279          B     @L1072
                                           14280 * ***                   else
                                           14281 * ***                           do { size_t _klen = (size_t)ValueLen; \
                                           14282 * if (!(*(&Value) = (void *) rd_slice_ensure_contig(&(rkbuf)->rkbuf_re\
                                           14283 * ader, _klen))) do { size_t __len0 = (size_t)(_klen); if (((__len0 > \
                                           14284 * ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf\
                                                                                                                           Page  286 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14285 * _reader))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf-\
                                           14286 * >rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafk\
                                           14287 * a_msg.c",1505, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf\
                                           14288 * _rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(_\
                                           14289 * _tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do\
                                           14290 *  { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_loc\
                                           14291 * k); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logn\
                                           14292 * ame)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_l\
                                           14293 * og0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk\
                                           14294 * , _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buf\
                                           14295 * fer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "e\
                                           14296 * xpected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_k\
                                           14297 * afka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.Ap\
                                           14298 * iVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_rea\
                                           14299 * der)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1505, __le\
                                           14300 * n0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf\
                                           14301 * _reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitiga\
                                           14302 * tion : "incorrect broker.version.fallback?", __tmpstr); } while (0);\
                                           14303 *  } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse\
                                           14304 * ; } while (0); } } while (0); } while (0);
00009222                                   14305 @L1073   DS    0H
00009222 E340 D0B8 0004          000000B8  14306          LG    4,184(0,13) ; ValueLen
00009228 41F0 6078               00000078  14307          LA    15,120(0,6)
0000922C E3F0 D2E8 0024          000002E8  14308          STG   15,744(0,13)
00009232 E340 D2F0 0024          000002F0  14309          STG   4,752(0,13)
00009238 4110 D2E8               000002E8  14310          LA    1,744(0,13)
0000923C E3F0 C118 0004          00008E78  14311          LG    15,@lit_1983_519 ; rd_slice_ensure_contig
00009242                                   14312 @@gen_label795 DS    0H
00009242 05EF                              14313          BALR  14,15
00009244                                   14314 @@gen_label796 DS    0H
00009244 E3F0 D0C8 0024          000000C8  14315          STG   15,200(0,13)
0000924A B902 00FF                         14316          LTGR  15,15
0000924E 4770 C76E               000094CE  14317          BNZ   @L1076
00009252                                   14318 @L1077   DS    0H
00009252 E380 6098 0004          00000098  14319          LG    8,152(0,6)  ; offset of end in rd_slice_s
00009258 41F0 6078               00000078  14320          LA    15,120(0,6)
0000925C E3F0 D2E8 0024          000002E8  14321          STG   15,744(0,13)
00009262 4110 D2E8               000002E8  14322          LA    1,744(0,13)
00009266 E3F0 C0D8 0004          00008E38  14323          LG    15,@lit_1983_494 ; rd_slice_abs_offset
0000926C                                   14324 @@gen_label798 DS    0H
0000926C 05EF                              14325          BALR  14,15
0000926E                                   14326 @@gen_label799 DS    0H
0000926E B90B 008F                         14327          SLGR  8,15
00009272 B921 0048                         14328          CLGR  4,8
00009276 47D0 C76E               000094CE  14329          BNH   @L1080
0000927A                                   14330 @L1081   DS    0H
0000927A 1277                              14331          LTR   7,7
0000927C 47D0 C764               000094C4  14332          BNH   @L1084
00009280                                   14333 @L1085   DS    0H
00009280 E3F0 6100 0002          00000100  14334          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009286 4770 C56C               000092CC  14335          BNZ   @L1088
0000928A E3F0 C0E0 0004          00008E40  14336          LG    15,@lit_1983_495
                                                                                                                           Page  287 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009290 4110 F2C2               000002C2  14337          LA    1,706(0,15)
00009294 E310 D2E8 0024          000002E8  14338          STG   1,744(0,13)
0000929A E548 D2F0 05E1          000002F0  14339          MVGHI 752(13),1505
000092A0 E310 C0F0 0004          00008E50  14340          LG    1,@lit_1983_497
000092A6 4110 121A               0000021A  14341          LA    1,538(0,1)
000092AA E310 D2F8 0024          000002F8  14342          STG   1,760(0,13)
000092B0 D707 D300 D300 00000300 00000300  14343          XC    768(8,13),768(13)
000092B6 41F0 F450               00000450  14344          LA    15,1104(0,15)
000092BA E3F0 D308 0024          00000308  14345          STG   15,776(0,13)
000092C0 4110 D2E8               000002E8  14346          LA    1,744(0,13)
000092C4 E3F0 C100 0004          00008E60  14347          LG    15,@lit_1983_502 ; rd_kafka_crash
000092CA                                   14348 @@gen_label803 DS    0H
000092CA 05EF                              14349          BALR  14,15
000092CC                                   14350 @@gen_label804 DS    0H
000092CC                                   14351 @L1088   DS    0H
000092CC 41F0 D0E8               000000E8  14352          LA    15,232(0,13)
000092D0 E3F0 D2E8 0024          000002E8  14353          STG   15,744(0,13)
000092D6 E548 D2F0 0100          000002F0  14354          MVGHI 752(13),256
000092DC E3F0 C0E0 0004          00008E40  14355          LG    15,@lit_1983_495
000092E2 41F0 F522               00000522  14356          LA    15,1314(0,15)
000092E6 E3F0 D2F8 0024          000002F8  14357          STG   15,760(0,13)
000092EC 4110 D2E8               000002E8  14358          LA    1,744(0,13)
000092F0 E3F0 C108 0004          00008E68  14359          LG    15,@lit_1983_504 ; snprintf
000092F6                                   14360 @@gen_label805 DS    0H
000092F6 05EF                              14361          BALR  14,15
000092F8                                   14362 @@gen_label806 DS    0H
000092F8 41F0 D0E8               000000E8  14363          LA    15,232(0,13)
000092FC B904 001F                         14364          LGR   1,15
00009300 A709 0000               00000000  14365          LGHI  0,0
00009304                                   14366 @@gen_label807 DS 0H
00009304 B25E 000F                         14367          SRST  0,15
00009308 4710 C5A4               00009304  14368          BC  1,@@gen_label807
0000930C B90B 0001                         14369          SLGR  0,1
00009310 A70F 0002               00000002  14370          CGHI  0,2
00009314 4770 C5BC               0000931C  14371          BNE   @L1090
00009318 9200 D0E8      000000E8 00000000  14372          MVI   232(13),0
0000931C                                   14373 @L1089   DS    0H
0000931C                                   14374 @L1090   DS    0H
0000931C E3F0 6100 0004          00000100  14375          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009322 A739 1638               00001638  14376          LGHI  3,5688      ; 5688
00009326 41F3 F000               00000000  14377          LA    15,0(3,15)
0000932A E3F0 D2E8 0024          000002E8  14378          STG   15,744(0,13)
00009330 4110 D2E8               000002E8  14379          LA    1,744(0,13)
00009334 E3F0 C110 0004          00008E70  14380          LG    15,@lit_1983_506 ; mtx_lock
0000933A                                   14381 @@gen_label809 DS    0H
0000933A 05EF                              14382          BALR  14,15
0000933C                                   14383 @@gen_label810 DS    0H
0000933C 41F0 D1E8               000001E8  14384          LA    15,488(0,13)
00009340 E3F0 D2E8 0024          000002E8  14385          STG   15,744(0,13)
00009346 E3F0 6100 0004          00000100  14386          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000934C A719 1630               00001630  14387          LGHI  1,5680      ; 5680
00009350 E3F1 F000 0004          00000000  14388          LG    15,0(1,15)
                                                                                                                           Page  288 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009356 E3F0 D2F0 0024          000002F0  14389          STG   15,752(0,13)
0000935C E548 D2F8 0100          000002F8  14390          MVGHI 760(13),256
00009362 4110 D2E8               000002E8  14391          LA    1,744(0,13)
00009366 E3F0 C0B8 0004          00008E18  14392          LG    15,@lit_1983_489 ; rd_strlcpy
0000936C                                   14393 @@gen_label811 DS    0H
0000936C 05EF                              14394          BALR  14,15
0000936E                                   14395 @@gen_label812 DS    0H
0000936E E3F0 6100 0004          00000100  14396          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009374 41F3 F000               00000000  14397          LA    15,0(3,15)
00009378 E3F0 D2E8 0024          000002E8  14398          STG   15,744(0,13)
0000937E 4110 D2E8               000002E8  14399          LA    1,744(0,13)
00009382 E3F0 C0C0 0004          00008E20  14400          LG    15,@lit_1983_491 ; mtx_unlock
00009388                                   14401 @@gen_label813 DS    0H
00009388 05EF                              14402          BALR  14,15
0000938A                                   14403 @@gen_label814 DS    0H
0000938A E3F0 60B8 0015          000000B8  14404          LGH   15,184(0,6)
00009390 E3F0 D2E8 0024          000002E8  14405          STG   15,744(0,13)
00009396 4110 D2E8               000002E8  14406          LA    1,744(0,13)
0000939A E3F0 C0C8 0004          00008E28  14407          LG    15,@lit_1983_492 ; rd_kafka_ApiKey2str
000093A0                                   14408 @@gen_label815 DS    0H
000093A0 05EF                              14409          BALR  14,15
000093A2                                   14410 @@gen_label816 DS    0H
000093A2 B904 003F                         14411          LGR   3,15
000093A6 41F0 6078               00000078  14412          LA    15,120(0,6)
000093AA E3F0 D2E8 0024          000002E8  14413          STG   15,744(0,13)
000093B0 4110 D2E8               000002E8  14414          LA    1,744(0,13)
000093B4 E3F0 C0D0 0004          00008E30  14415          LG    15,@lit_1983_493 ; rd_slice_offset
000093BA                                   14416 @@gen_label817 DS    0H
000093BA 05EF                              14417          BALR  14,15
000093BC                                   14418 @@gen_label818 DS    0H
000093BC B904 005F                         14419          LGR   5,15
000093C0 E380 6098 0004          00000098  14420          LG    8,152(0,6)  ; offset of end in rd_slice_s
000093C6 41F0 6078               00000078  14421          LA    15,120(0,6)
000093CA E3F0 D2E8 0024          000002E8  14422          STG   15,744(0,13)
000093D0 4110 D2E8               000002E8  14423          LA    1,744(0,13)
000093D4 E3F0 C0D8 0004          00008E38  14424          LG    15,@lit_1983_494 ; rd_slice_abs_offset
000093DA                                   14425 @@gen_label819 DS    0H
000093DA 05EF                              14426          BALR  14,15
000093DC                                   14427 @@gen_label820 DS    0H
000093DC B90B 008F                         14428          SLGR  8,15
000093E0 E3F0 61E8 0002          000001E8  14429          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000093E6 4780 C694               000093F4  14430          BZ    @L1093
000093EA E3F0 61E8 0004          000001E8  14431          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000093F0 47F0 C69E               000093FE  14432          B     @L1094
000093F4                                   14433 @L1093   DS    0H
000093F4 E3F0 C0E0 0004          00008E40  14434          LG    15,@lit_1983_495
000093FA 41F0 F482               00000482  14435          LA    15,1154(0,15)
000093FE                                   14436 @L1094   DS    0H
000093FE E310 6100 0004          00000100  14437          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009404 E310 1FD0 0004          00000FD0  14438          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
                                                                                                                           Page  289 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000940A 4110 1210               00000210  14439          LA    1,528(0,1)
0000940E E310 D2E8 0024          000002E8  14440          STG   1,744(0,13)
00009414 E310 6100 0004          00000100  14441          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000941A E310 1FD0 0004          00000FD0  14442          LG    1,4048(0,1)
00009420 E310 D2F0 0024          000002F0  14443          STG   1,752(0,13)
00009426 4110 D1E8               000001E8  14444          LA    1,488(0,13)
0000942A E310 D2F8 0024          000002F8  14445          STG   1,760(0,13)
00009430 B914 0017                         14446          LGFR  1,7
00009434 E310 D300 0024          00000300  14447          STG   1,768(0,13)
0000943A D707 D308 D308 00000308 00000308  14448          XC    776(8,13),776(13)
00009440 E310 C0E0 0004          00008E40  14449          LG    1,@lit_1983_495
00009446 4170 14A6               000004A6  14450          LA    7,1190(0,1)
0000944A E370 D310 0024          00000310  14451          STG   7,784(0,13)
00009450 4110 14B2               000004B2  14452          LA    1,1202(0,1)
00009454 E310 D318 0024          00000318  14453          STG   1,792(0,13)
0000945A E330 D320 0024          00000320  14454          STG   3,800(0,13)
00009460 4810 60BA               000000BA  14455          LH    1,186(0,6)
00009464 B914 0011                         14456          LGFR  1,1
00009468 E310 D328 0024          00000328  14457          STG   1,808(0,13)
0000946E E350 D330 0024          00000330  14458          STG   5,816(0,13)
00009474 E310 6098 0004          00000098  14459          LG    1,152(0,6)  ; offset of end in rd_slice_s
0000947A E310 6090 000B          00000090  14460          SLG   1,144(0,6)
00009480 E310 D338 0024          00000338  14461          STG   1,824(0,13)
00009486 E310 C0F0 0004          00008E50  14462          LG    1,@lit_1983_497
0000948C 4110 121A               0000021A  14463          LA    1,538(0,1)
00009490 E310 D340 0024          00000340  14464          STG   1,832(0,13)
00009496 E548 D348 05E1          00000348  14465          MVGHI 840(13),1505
0000949C E340 D350 0024          00000350  14466          STG   4,848(0,13)
000094A2 E380 D358 0024          00000358  14467          STG   8,856(0,13)
000094A8 E3F0 D360 0024          00000360  14468          STG   15,864(0,13)
000094AE 41F0 D0E8               000000E8  14469          LA    15,232(0,13)
000094B2 E3F0 D368 0024          00000368  14470          STG   15,872(0,13)
000094B8 4110 D2E8               000002E8  14471          LA    1,744(0,13)
000094BC E3F0 C0E8 0004          00008E48  14472          LG    15,@lit_1983_498 ; rd_kafka_log0
000094C2                                   14473 @@gen_label822 DS    0H
000094C2 05EF                              14474          BALR  14,15
000094C4                                   14475 @@gen_label823 DS    0H
000094C4                                   14476 @L1084   DS    0H
000094C4 E54C 6188 FF65          00000188  14477          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000094CA 47F0 C808               00009568  14478          B     @_err_parse@1983@1
000094CE                                   14479 @L1080   DS    0H
000094CE                                   14480 @L1076   DS    0H
                                           14481 * ***
                                           14482 * ***                   rd_kafka_header_add(hdrs, Key, (ssize_t)KeyLen\
                                           14483 * ,
000094CE                                   14484 @L1072   DS    0H
                                           14485 * ***                                       Value, (ssize_t)ValueLen);
000094CE E320 D2E8 0024          000002E8  14486          STG   2,744(0,13)
000094D4 E3F0 D0C0 0004          000000C0  14487          LG    15,192(0,13) ; Key
000094DA E3F0 D2F0 0024          000002F0  14488          STG   15,752(0,13)
000094E0 E3F0 D0B0 0004          000000B0  14489          LG    15,176(0,13) ; KeyLen
000094E6 E3F0 D2F8 0024          000002F8  14490          STG   15,760(0,13)
                                                                                                                           Page  290 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000094EC E3F0 D0C8 0004          000000C8  14491          LG    15,200(0,13) ; Value
000094F2 E3F0 D300 0024          00000300  14492          STG   15,768(0,13)
000094F8 E3F0 D0B8 0004          000000B8  14493          LG    15,184(0,13) ; ValueLen
000094FE E3F0 D308 0024          00000308  14494          STG   15,776(0,13)
00009504 4110 D2E8               000002E8  14495          LA    1,744(0,13)
00009508 E3F0 C120 0004          00008E80  14496          LG    15,@lit_1983_539 ; rd_kafka_header_add
0000950E                                   14497 @@gen_label824 DS    0H
0000950E 05EF                              14498          BALR  14,15
00009510                                   14499 @@gen_label825 DS    0H
                                           14500 * ***           }
00009510 A73A 0001               00000001  14501          AHI   3,1
00009514                                   14502 @L1010   DS    0H
00009514 B914 00F3                         14503          LGFR  15,3
00009518 E3F0 D0E0 0020          000000E0  14504          CG    15,224(0,13)
0000951E 47B0 C7CC               0000952C  14505          BNL   *+14  Around region break
00009522 E3C0 C128 001B          00008E88  14506          SLGF  12,@lit_region_diff_1983_2_1
                                           14507          DROP  12
                        00008500           14508          USING @REGION_1983_1,12
00009528 47F0 C494               00008994  14509          B     @L1013
                                           14510          DROP  12
                        00008D60           14511          USING @REGION_1983_2,12
                                           14512 * ***
                                           14513 * ***           rkm->rkm_headers = hdrs;
0000952C E320 5068 0024          00000068  14514          STG   2,104(0,5)  ; offset of rkm_headers in rd_kafka_msg_s
                                           14515 * ***
                                           14516 * ***           do { if (rd_refcnt_sub0(&(rkbuf)->rkbuf_refcnt) > 0) b\
                                           14517 * reak; rd_kafka_buf_destroy_final(rkbuf); } while (0);
00009532                                   14518 @L1095   DS    0H
00009532 41F0 6108               00000108  14519          LA    15,264(0,6)
00009536 E3F0 D2E8 0024          000002E8  14520          STG   15,744(0,13)
0000953C 4110 D2E8               000002E8  14521          LA    1,744(0,13)
00009540 E3F0 C130 0004          00008E90  14522          LG    15,@lit_1983_540 ; rd_refcnt_sub0
00009546                                   14523 @@gen_label827 DS    0H
00009546 05EF                              14524          BALR  14,15
00009548                                   14525 @@gen_label828 DS    0H
00009548 12FF                              14526          LTR   15,15
0000954A 4720 C800               00009560  14527          BH    @L1096
0000954E                                   14528 @L1098   DS    0H
0000954E E360 D2E8 0024          000002E8  14529          STG   6,744(0,13)
00009554 4110 D2E8               000002E8  14530          LA    1,744(0,13)
00009558 E3F0 C138 0004          00008E98  14531          LG    15,@lit_1983_541 ; rd_kafka_buf_destroy_final
0000955E                                   14532 @@gen_label830 DS    0H
0000955E 05EF                              14533          BALR  14,15
00009560                                   14534 @@gen_label831 DS    0H
00009560                                   14535 @L1096   DS    0H
                                           14536 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
00009560 A7F9 0000               00000000  14537          LGHI  15,0        ; 0
00009564 47F0 C858               000095B8  14538          B     @ret_lab_1983
                                           14539 * ***
                                           14540 * ***    err_parse:
                                           14541 * ***           err = rkbuf->rkbuf_err;
00009568                                   14542 @_err_parse@1983@1 DS 0H
                                                                                                                           Page  291 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009568 5830 6188               00000188  14543          L     3,392(0,6)  ; offset of rkbuf_err in rd_kafka_buf_s
                                           14544 * ***           do { if (rd_refcnt_sub0(&(rkbuf)->rkbuf_refcnt) > 0) b\
                                           14545 * reak; rd_kafka_buf_destroy_final(rkbuf); } while (0);
0000956C                                   14546 @L1099   DS    0H
0000956C 41F0 6108               00000108  14547          LA    15,264(0,6)
00009570 E3F0 D2E8 0024          000002E8  14548          STG   15,744(0,13)
00009576 4110 D2E8               000002E8  14549          LA    1,744(0,13)
0000957A E3F0 C130 0004          00008E90  14550          LG    15,@lit_1983_540 ; rd_refcnt_sub0
00009580                                   14551 @@gen_label832 DS    0H
00009580 05EF                              14552          BALR  14,15
00009582                                   14553 @@gen_label833 DS    0H
00009582 12FF                              14554          LTR   15,15
00009584 4720 C83A               0000959A  14555          BH    @L1100
00009588                                   14556 @L1102   DS    0H
00009588 E360 D2E8 0024          000002E8  14557          STG   6,744(0,13)
0000958E 4110 D2E8               000002E8  14558          LA    1,744(0,13)
00009592 E3F0 C138 0004          00008E98  14559          LG    15,@lit_1983_541 ; rd_kafka_buf_destroy_final
00009598                                   14560 @@gen_label835 DS    0H
00009598 05EF                              14561          BALR  14,15
0000959A                                   14562 @@gen_label836 DS    0H
0000959A                                   14563 @L1100   DS    0H
                                           14564 * ***           if (hdrs)
0000959A B902 00F2                         14565          LTGR  15,2
0000959E 4780 C854               000095B4  14566          BZ    @L1103
                                           14567 * ***                   rd_kafka_headers_destroy(hdrs);
000095A2 E320 D2E8 0024          000002E8  14568          STG   2,744(0,13)
000095A8 4110 D2E8               000002E8  14569          LA    1,744(0,13)
000095AC E3F0 C140 0004          00008EA0  14570          LG    15,@lit_1983_545 ; rd_kafka_headers_destroy
000095B2                                   14571 @@gen_label838 DS    0H
000095B2 05EF                              14572          BALR  14,15
000095B4                                   14573 @@gen_label839 DS    0H
000095B4                                   14574 @L1103   DS    0H
                                           14575 * ***           return err;
000095B4 B914 00F3                         14576          LGFR  15,3
                                           14577 * ***   }
000095B8                                   14578 @ret_lab_1983 DS 0H
                                           14579 * * **** Start of Epilogue
                                           14580          DCCEPIL
000095B8                                   14581+         ds 0h                                                          01-DCCEP
                                           14582+* Epilog
000095B8 D707 D088 D088 00000088 00000088  14583+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000095BE E3D0 D080 0004          00000080  14584+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000095C4 E3C0 D090 0004          00000090  14585+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000095CA E3B0 C018 0004          00000018  14586+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000095D0 E3C0 B010 0021          00000010  14587+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000095D6 E3E0 D008 0004          00000008  14588+         lg  14,8(0,13)          load up return address                 01-DCCEP
000095DC EB1C D020 0004          00000020  14589+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000095E2 078E                              14590+         bcr 8,14                if same dsab, just return              01-DCCEP
000095E4 E3F0 D010 0024          00000010  14591+         stg 15,16(0,13)         save return code                       01-DCCEP
000095EA E300 D018 0024          00000018  14592+         stg 0,24(0,13)          save more return code                  01-DCCEP
000095F0 E3F0 D090 0004          00000090  14593+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000095F6 E3F0 F018 0004          00000018  14594+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  292 
  Active Usings: @REGION_1983_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000095FC 47F0 F040               00000040  14595+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14596+* End of Epilog
                                           14597 * * **** End of Epilogue
                                           14598          DROP  12
                                           14599 *
                                           14600 *   DSECT for automatic variables in "rd_kafka_msg_headers_parse"
                                           14601 *      (FUNCTION #1983)
                                           14602 *
00000000                00000000 000002E8  14603 @AUTO#rd_kafka_msg_headers_parse DSECT
00000000                                   14604          DS    XL168
000000A8                                   14605 rd_kafka_msg_headers_parse#__len0#30 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14606          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14607 rd_kafka_msg_headers_parse#_klen#29 DS 8XL1 ; _klen
000000B0                000000B0 000000A8  14608          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14609 rd_kafka_msg_headers_parse#_r#24 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14610          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14611 rd_kafka_msg_headers_parse#__len0#18 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14612          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14613 rd_kafka_msg_headers_parse#_klen#17 DS 8XL1 ; _klen
000000B0                000000B0 000000A8  14614          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14615 rd_kafka_msg_headers_parse#_r#12 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14616          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14617 rd_kafka_msg_headers_parse#_r#2 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14618          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14619 rd_kafka_msg_headers_parse#_v#2 DS 8XL1 ; _v
000000B0                000000B0 000000A8  14620          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14621 rd_kafka_msg_headers_parse#i#0 DS 1F ; i
000000AC                000000AC 000000A8  14622          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14623 rd_kafka_msg_headers_parse#err#0 DS 1F ; err
000000AC                000000AC 000000A8  14624          ORG   @AUTO#rd_kafka_msg_headers_parse+168
000000A8                                   14625 rd_kafka_msg_headers_parse#log_decode_errors#0 DS 1F ; log_decode_error*
                                                                s
000000AC                000000AC 000000B0  14626          ORG   @AUTO#rd_kafka_msg_headers_parse+176
000000B0                                   14627 rd_kafka_msg_headers_parse#$Key$Len#11 DS 8XL1 ; KeyLen
000000B8                000000B8 000000B8  14628          ORG   @AUTO#rd_kafka_msg_headers_parse+184
000000B8                                   14629 rd_kafka_msg_headers_parse#$Value$Len#11 DS 8XL1 ; ValueLen
000000C0                000000C0 000000D0  14630          ORG   @AUTO#rd_kafka_msg_headers_parse+208
000000D0                                   14631 rd_kafka_msg_headers_parse#_v#12 DS 8XL1 ; _v
000000D8                000000D8 000000D8  14632          ORG   @AUTO#rd_kafka_msg_headers_parse+216
000000D8                                   14633 rd_kafka_msg_headers_parse#_v#24 DS 8XL1 ; _v
000000E0                000000E0 000000E0  14634          ORG   @AUTO#rd_kafka_msg_headers_parse+224
000000E0                                   14635 rd_kafka_msg_headers_parse#$Header$Count#0 DS 8XL1 ; HeaderCount
000000E8                000000E8 000000E8  14636          ORG   @AUTO#rd_kafka_msg_headers_parse+232
000000E8                                   14637 rd_kafka_msg_headers_parse#__tmpstr#34 DS 256XL1 ; __tmpstr
000001E8                000001E8 000000E8  14638          ORG   @AUTO#rd_kafka_msg_headers_parse+232
000000E8                                   14639 rd_kafka_msg_headers_parse#__tmpstr#27 DS 256XL1 ; __tmpstr
000001E8                000001E8 000000E8  14640          ORG   @AUTO#rd_kafka_msg_headers_parse+232
000000E8                                   14641 rd_kafka_msg_headers_parse#__tmpstr#22 DS 256XL1 ; __tmpstr
000001E8                000001E8 000000E8  14642          ORG   @AUTO#rd_kafka_msg_headers_parse+232
000000E8                                   14643 rd_kafka_msg_headers_parse#__tmpstr#15 DS 256XL1 ; __tmpstr
000001E8                000001E8 000000E8  14644          ORG   @AUTO#rd_kafka_msg_headers_parse+232
000000E8                                   14645 rd_kafka_msg_headers_parse#__tmpstr#5 DS 256XL1 ; __tmpstr
                                                                                                                           Page  293 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001E8                000001E8 000001E8  14646          ORG   @AUTO#rd_kafka_msg_headers_parse+488
000001E8                                   14647 rd_kafka_msg_headers_parse#_logname#35 DS 256XL1 ; _logname
000002E8                000002E8 000001E8  14648          ORG   @AUTO#rd_kafka_msg_headers_parse+488
000001E8                                   14649 rd_kafka_msg_headers_parse#_logname#28 DS 256XL1 ; _logname
000002E8                000002E8 000001E8  14650          ORG   @AUTO#rd_kafka_msg_headers_parse+488
000001E8                                   14651 rd_kafka_msg_headers_parse#_logname#23 DS 256XL1 ; _logname
000002E8                000002E8 000001E8  14652          ORG   @AUTO#rd_kafka_msg_headers_parse+488
000001E8                                   14653 rd_kafka_msg_headers_parse#_logname#16 DS 256XL1 ; _logname
000002E8                000002E8 000001E8  14654          ORG   @AUTO#rd_kafka_msg_headers_parse+488
000001E8                                   14655 rd_kafka_msg_headers_parse#_logname#6 DS 256XL1 ; _logname
                                           14656 *
00009600                00000000 0000E868  14657 @CODE    CSECT
                                           14658 *
                                           14659 *
                                           14660 *
                                           14661 * ....... start of rd_kafka_message_headers
                                           14662 rd_kafka_message_headers ALIAS X'99846D92818692816D9485A2A28187856D8885*
                                                                81848599A2'
00009600                                   14663 @LNAME827 DS   0H
00009600 00000018                          14664          DC    X'00000018'
00009604 99846D9281869281                  14665          DC    C'rd_kafka_message_headers'
0000961C 00                                14666          DC    X'00'
                                           14667 rd_kafka_message_headers DCCPRLG CINDEX=827,BASER=12,FRAME=184,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME827
                                           14668          macro
                                           14669          dccextrn &m
                                           14670          gblc    &$dccext(1000)
                                           14671          gbla    &$dccexti
                                           14672          lcla    &i
                                           14673 &$dccext(&$dccexti+1) setc    '&m'
                                           14674 &i       seta    1
                                           14675 .loop    aif    (&i gt &$dccexti).around
                                           14676          aif    ('&$dccext(&i)' eq '&m').getout
                                           14677 &i       seta    &i+1
                                           14678          ago     .loop
                                           14679 .around  anop
                                           14680 &$dccexti seta &$dccexti+1
                                           14681          extrn  &m
                                           14682 .getout  anop
                                           14683          mend
00009620                                   14684+$eye0252    ds    0d                                                    02-DCCCA
00009620 C4C3C3                            14685+         dc cl3'DCC'                                                    02-DCCCA
00009623 01                                14686+         dc xl1'01' format one                                          02-DCCCA
00009624 00000000                          14687+         dc a(0)                                                        02-DCCCA
00009628 0000000000009692                  14688+         dc ad(@PER_827)                                                02-DCCCA
00009630 00000000000000B8                  14689+         dc ad(184)                                                     02-DCCCA
00009638 0000000000000000                  14690+         dc ad(0)                                                       02-DCCCA
00009640 0000000000001000                  14691+         dc ad(4096)                                                    02-DCCCA
00009648 20                                14692+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009649 03                                14693+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000964A 03                                14694+         dc al1(3)                                                      02-DCCCA
0000964B 08                                14695+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  294 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000964C 00                                14696+         dc bl.8'00000000'                                              02-DCCCA
0000964D 000000                            14697+         dc al3(0)                                                      02-DCCCA
00009650 0000000000009600                  14698+         dc ad(@LNAME827)                                               02-DCCCA
00009658                                   14699+         ds 0d                                                          02-DCCCA
00009658 0000000000009620                  14700+         dc ad($eye0252)                                                02-DCCCA
00009660 0000000000000000                  14701+         dc ad(0)                                                       02-DCCCA
00009668                                   14702+         ds    0d                                                       01-DCCPR
                                           14703+         entry rd_kafka_message_headers                                 01-DCCPR
00009668                                   14704+rd_kafka_message_headers ds 0d                                          01-DCCPR
00009668                                   14705+@REGION_827_1 ds 0h                                                     01-DCCPR
00009668 EBEC D008 0024          00000008  14706+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000966E E3E0 D088 0004          00000088  14707+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009674 E3C0 D090 0004          00000090  14708+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000967A B904 002E                         14709+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000967E E3B0 C018 0004          00000018  14710+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009684 A7EB 00B8               000000B8  14711+         aghi  14,184              increase by frame size               01-DCCPR
00009688 E3E0 C020 0021          00000020  14712+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000968E 4720 B020               00000020  14713+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009692                                   14714+@PER_827 ds    0h                                                       01-DCCPR
00009692 EBDE 2080 0024          00000080  14715+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009698 E3C0 2090 0024          00000090  14716+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000969E B904 00D2                         14717+         lgr   13,2                set real frame pointer               01-DCCPR
000096A2 B904 00CF                         14718+         lgr   12,15               set base reg                         01-DCCPR
                        00009668           14719+         using @REGION_827_1,12                                         01-DCCPR
000096A6 B904 0031                         14720          LGR   3,1         ; ptr to parm area
                                           14721 * ******* End of Prologue
                                           14722 * *
                                           14723 * ***           rd_kafka_msg_t *rkm;
                                           14724 * ***           rd_kafka_resp_err_t err;
                                           14725 * ***
                                           14726 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           14727 * sage);
000096AA E3F0 3000 0004          00000000  14728          LG    15,0(0,3)   ; rkmessage
000096B0 E3F0 D0B0 0024          000000B0  14729          STG   15,176(0,13)
000096B6 4110 D0B0               000000B0  14730          LA    1,176(0,13)
000096BA E3F0 C090 0004          000096F8  14731          LG    15,@lit_827_558 ; rd_kafka_message2msg
000096C0                                   14732 @@gen_label840 DS    0H
000096C0 05EF                              14733          BALR  14,15
000096C2                                   14734 @@gen_label841 DS    0H
000096C2 B904 002F                         14735          LGR   2,15
                                           14736 * ***
                                           14737 * ***           if (rkm->rkm_headers) {
000096C6 E3F0 2068 0002          00000068  14738          LTG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000096CC 4780 C0A0               00009708  14739          BZ    @L1104
                                           14740 * ***                   *hdrsp = rkm->rkm_headers;
000096D0 E3F0 3008 0004          00000008  14741          LG    15,8(0,3)   ; hdrsp
000096D6 E310 2068 0004          00000068  14742          LG    1,104(0,2)  ; offset of rkm_headers in rd_kafka_msg_s
000096DC E310 F000 0024          00000000  14743          STG   1,0(0,15)   ; hdrsp
                                           14744 * ***                   return RD_KAFKA_RESP_ERR_NO_ERROR;
000096E2 A7F9 0000               00000000  14745          LGHI  15,0        ; 0
000096E6 47F0 C10A               00009772  14746          B     @ret_lab_827
000096F0                                   14747          DS    0D
                                                                                                                           Page  295 
  Active Usings: @REGION_827_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000096F0 000000B8                          14748 @FRAMESIZE_827 DC F'184'
000096F4 00000000
000096F8 00000000000014B0                  14749 @lit_827_558 DC AD(rd_kafka_message2msg)
00009700 0000000000008500                  14750 @lit_827_563 DC AD(rd_kafka_msg_headers_parse)
                                           14751 * ***           }
00009708                                   14752 @L1104   DS    0H
                                           14753 * ***
                                           14754 * ***
                                           14755 * ***           if (rkm->rkm_flags & 0x40000)
00009708 9104 2059      00000059 00000004  14756          TM    89(2),4
0000970C 4780 C0B0               00009718  14757          BZ    @L1105
                                           14758 * ***                   return RD_KAFKA_RESP_ERR__NOENT;
00009710 A7F9 FF64               0000FF64  14759          LGHI  15,-156     ; -156
00009714 47F0 C10A               00009772  14760          B     @ret_lab_827
00009718                                   14761 @L1105   DS    0H
                                           14762 * ***
                                           14763 * ***
                                           14764 * ***
                                           14765 * ***
                                           14766 * ***
                                           14767 * ***           if (((!(((&rkm->rkm_u.consumer.binhdrs)->len) == -1 ? \
                                           14768 * 0:((&rkm->rkm_u.consumer.binhdrs)->len)))))
00009718 E55C 2078 FFFF          00000078  14769          CHSI  120(2),-1
0000971E 4770 C0C2               0000972A  14770          BNE   @L1106
00009722 A7F8 0000               00000000  14771          LHI   15,0        ; 0
00009726 47F0 C0C6               0000972E  14772          B     @L1107
0000972A                                   14773 @L1106   DS    0H
0000972A 58F0 2078               00000078  14774          L     15,120(0,2) ; offset of rkm_u in rd_kafka_msg_s
0000972E                                   14775 @L1107   DS    0H
0000972E 12FF                              14776          LTR   15,15
00009730 4770 C0D4               0000973C  14777          BNZ   @L1108
                                           14778 * ***                   return RD_KAFKA_RESP_ERR__NOENT;
00009734 A7F9 FF64               0000FF64  14779          LGHI  15,-156     ; -156
00009738 47F0 C10A               00009772  14780          B     @ret_lab_827
0000973C                                   14781 @L1108   DS    0H
                                           14782 * ***
                                           14783 * ***           err = rd_kafka_msg_headers_parse(rkm);
0000973C E320 D0B0 0024          000000B0  14784          STG   2,176(0,13)
00009742 4110 D0B0               000000B0  14785          LA    1,176(0,13)
00009746 E3F0 C098 0004          00009700  14786          LG    15,@lit_827_563 ; rd_kafka_msg_headers_parse
0000974C                                   14787 @@gen_label846 DS    0H
0000974C 05EF                              14788          BALR  14,15
0000974E                                   14789 @@gen_label847 DS    0H
                                           14790 * ***           if (((err)))
0000974E 12FF                              14791          LTR   15,15
00009750 4780 C0F4               0000975C  14792          BZ    @L1109
                                           14793 * ***                   return err;
00009754 B914 00FF                         14794          LGFR  15,15
00009758 47F0 C10A               00009772  14795          B     @ret_lab_827
0000975C                                   14796 @L1109   DS    0H
                                           14797 * ***
                                           14798 * ***           *hdrsp = rkm->rkm_headers;
                                                                                                                           Page  296 
  Active Usings: @REGION_827_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000975C E3F0 3008 0004          00000008  14799          LG    15,8(0,3)   ; hdrsp
00009762 E310 2068 0004          00000068  14800          LG    1,104(0,2)  ; offset of rkm_headers in rd_kafka_msg_s
00009768 E310 F000 0024          00000000  14801          STG   1,0(0,15)   ; hdrsp
                                           14802 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000976E A7F9 0000               00000000  14803          LGHI  15,0        ; 0
                                           14804 * ***   }
00009772                                   14805 @ret_lab_827 DS 0H
                                           14806 * * **** Start of Epilogue
                                           14807          DCCEPIL
00009772                                   14808+         ds 0h                                                          01-DCCEP
                                           14809+* Epilog
00009772 D707 D088 D088 00000088 00000088  14810+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009778 E3D0 D080 0004          00000080  14811+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000977E E3C0 D090 0004          00000090  14812+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009784 E3B0 C018 0004          00000018  14813+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000978A E3C0 B010 0021          00000010  14814+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009790 E3E0 D008 0004          00000008  14815+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009796 EB1C D020 0004          00000020  14816+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000979C 078E                              14817+         bcr 8,14                if same dsab, just return              01-DCCEP
0000979E E3F0 D010 0024          00000010  14818+         stg 15,16(0,13)         save return code                       01-DCCEP
000097A4 E300 D018 0024          00000018  14819+         stg 0,24(0,13)          save more return code                  01-DCCEP
000097AA E3F0 D090 0004          00000090  14820+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000097B0 E3F0 F018 0004          00000018  14821+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000097B6 47F0 F040               00000040  14822+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14823+* End of Epilog
                                           14824 * * **** End of Epilogue
                                           14825          DROP  12
                                           14826 *
                                           14827 *   DSECT for automatic variables in "rd_kafka_message_headers"
                                           14828 *      (FUNCTION #827)
                                           14829 *
00000000                00000000 000000AC  14830 @AUTO#rd_kafka_message_headers DSECT
00000000                                   14831          DS    XL168
000000A8                                   14832 rd_kafka_message_headers#err#0 DS 1F ; err
                                           14833 *
000097BA                00000000 0000E868  14834 @CODE    CSECT
                                           14835 *
                                           14836 *
                                           14837 *
                                           14838 * ....... start of rd_kafka_message_detach_headers
                                           14839 rd_kafka_message_detach_headers ALIAS X'99846D92818692816D9485A2A281878*
                                                                56D8485A38183886D888581848599A2'
000097BA                                   14840 @LNAME828 DS   0H
000097BA 0000001F                          14841          DC    X'0000001F'
000097BE 99846D9281869281                  14842          DC    C'rd_kafka_message_detach_headers'
000097DD 00                                14843          DC    X'00'
                                           14844 rd_kafka_message_detach_headers DCCPRLG CINDEX=828,BASER=12,FRAME=192,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME828
                                           14845          macro
                                           14846          dccextrn &m
                                           14847          gblc    &$dccext(1000)
                                           14848          gbla    &$dccexti
                                                                                                                           Page  297 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14849          lcla    &i
                                           14850 &$dccext(&$dccexti+1) setc    '&m'
                                           14851 &i       seta    1
                                           14852 .loop    aif    (&i gt &$dccexti).around
                                           14853          aif    ('&$dccext(&i)' eq '&m').getout
                                           14854 &i       seta    &i+1
                                           14855          ago     .loop
                                           14856 .around  anop
                                           14857 &$dccexti seta &$dccexti+1
                                           14858          extrn  &m
                                           14859 .getout  anop
                                           14860          mend
000097E0                                   14861+$eye0255    ds    0d                                                    02-DCCCA
000097E0 C4C3C3                            14862+         dc cl3'DCC'                                                    02-DCCCA
000097E3 01                                14863+         dc xl1'01' format one                                          02-DCCCA
000097E4 00000000                          14864+         dc a(0)                                                        02-DCCCA
000097E8 0000000000009852                  14865+         dc ad(@PER_828)                                                02-DCCCA
000097F0 00000000000000C0                  14866+         dc ad(192)                                                     02-DCCCA
000097F8 0000000000000000                  14867+         dc ad(0)                                                       02-DCCCA
00009800 0000000000001000                  14868+         dc ad(4096)                                                    02-DCCCA
00009808 20                                14869+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009809 03                                14870+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000980A 03                                14871+         dc al1(3)                                                      02-DCCCA
0000980B 08                                14872+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000980C 00                                14873+         dc bl.8'00000000'                                              02-DCCCA
0000980D 000000                            14874+         dc al3(0)                                                      02-DCCCA
00009810 00000000000097BA                  14875+         dc ad(@LNAME828)                                               02-DCCCA
00009818                                   14876+         ds 0d                                                          02-DCCCA
00009818 00000000000097E0                  14877+         dc ad($eye0255)                                                02-DCCCA
00009820 0000000000000000                  14878+         dc ad(0)                                                       02-DCCCA
00009828                                   14879+         ds    0d                                                       01-DCCPR
                                           14880+         entry rd_kafka_message_detach_headers                          01-DCCPR
00009828                                   14881+rd_kafka_message_detach_headers ds 0d                                   01-DCCPR
00009828                                   14882+@REGION_828_1 ds 0h                                                     01-DCCPR
00009828 EBEC D008 0024          00000008  14883+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000982E E3E0 D088 0004          00000088  14884+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009834 E3C0 D090 0004          00000090  14885+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000983A B904 002E                         14886+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000983E E3B0 C018 0004          00000018  14887+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009844 A7EB 00C0               000000C0  14888+         aghi  14,192              increase by frame size               01-DCCPR
00009848 E3E0 C020 0021          00000020  14889+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000984E 4720 B020               00000020  14890+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009852                                   14891+@PER_828 ds    0h                                                       01-DCCPR
00009852 EBDE 2080 0024          00000080  14892+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009858 E3C0 2090 0024          00000090  14893+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000985E B904 00D2                         14894+         lgr   13,2                set real frame pointer               01-DCCPR
00009862 B904 00CF                         14895+         lgr   12,15               set base reg                         01-DCCPR
                        00009828           14896+         using @REGION_828_1,12                                         01-DCCPR
00009866 B904 0021                         14897          LGR   2,1         ; ptr to parm area
                                           14898 * ******* End of Prologue
                                           14899 * *
                                           14900 * ***           rd_kafka_msg_t *rkm;
                                                                                                                           Page  298 
  Active Usings: @REGION_828_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14901 * ***           rd_kafka_resp_err_t err;
                                           14902 * ***
                                           14903 * ***           err = rd_kafka_message_headers(rkmessage, hdrsp);
0000986A E3F0 2000 0004          00000000  14904          LG    15,0(0,2)   ; rkmessage
00009870 E3F0 D0B0 0024          000000B0  14905          STG   15,176(0,13)
00009876 E3F0 2008 0004          00000008  14906          LG    15,8(0,2)   ; hdrsp
0000987C E3F0 D0B8 0024          000000B8  14907          STG   15,184(0,13)
00009882 4110 D0B0               000000B0  14908          LA    1,176(0,13)
00009886 E3F0 C080 0004          000098A8  14909          LG    15,@lit_828_566 ; rd_kafka_message_headers
0000988C                                   14910 @@gen_label849 DS    0H
0000988C 05EF                              14911          BALR  14,15
0000988E                                   14912 @@gen_label850 DS    0H
                                           14913 * ***           if (err)
0000988E 12FF                              14914          LTR   15,15
00009890 4780 C090               000098B8  14915          BZ    @L1110
                                           14916 * ***                   return err;
00009894 B914 00FF                         14917          LGFR  15,15
00009898 47F0 C0B6               000098DE  14918          B     @ret_lab_828
000098A0                                   14919          DS    0D
000098A0 000000C0                          14920 @FRAMESIZE_828 DC F'192'
000098A4 00000000
000098A8 0000000000009668                  14921 @lit_828_566 DC AD(rd_kafka_message_headers)
000098B0 00000000000014B0                  14922 @lit_828_567 DC AD(rd_kafka_message2msg)
000098B8                                   14923 @L1110   DS    0H
                                           14924 * ***
                                           14925 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           14926 * sage);
000098B8 E3F0 2000 0004          00000000  14927          LG    15,0(0,2)   ; rkmessage
000098BE E3F0 D0B0 0024          000000B0  14928          STG   15,176(0,13)
000098C4 4110 D0B0               000000B0  14929          LA    1,176(0,13)
000098C8 E3F0 C088 0004          000098B0  14930          LG    15,@lit_828_567 ; rd_kafka_message2msg
000098CE                                   14931 @@gen_label852 DS    0H
000098CE 05EF                              14932          BALR  14,15
000098D0                                   14933 @@gen_label853 DS    0H
                                           14934 * ***           rkm->rkm_headers = ((void *)0);
000098D0 A719 0000               00000000  14935          LGHI  1,0         ; 0
000098D4 E310 F068 0024          00000068  14936          STG   1,104(0,15) ; offset of rkm_headers in rd_kafka_msg_s
                                           14937 * ***
                                           14938 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
000098DA B904 00F1                         14939          LGR   15,1
                                           14940 * ***   }
000098DE                                   14941 @ret_lab_828 DS 0H
                                           14942 * * **** Start of Epilogue
                                           14943          DCCEPIL
000098DE                                   14944+         ds 0h                                                          01-DCCEP
                                           14945+* Epilog
000098DE D707 D088 D088 00000088 00000088  14946+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000098E4 E3D0 D080 0004          00000080  14947+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000098EA E3C0 D090 0004          00000090  14948+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000098F0 E3B0 C018 0004          00000018  14949+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000098F6 E3C0 B010 0021          00000010  14950+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000098FC E3E0 D008 0004          00000008  14951+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page  299 
  Active Usings: @REGION_828_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009902 EB1C D020 0004          00000020  14952+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009908 078E                              14953+         bcr 8,14                if same dsab, just return              01-DCCEP
0000990A E3F0 D010 0024          00000010  14954+         stg 15,16(0,13)         save return code                       01-DCCEP
00009910 E300 D018 0024          00000018  14955+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009916 E3F0 D090 0004          00000090  14956+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000991C E3F0 F018 0004          00000018  14957+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009922 47F0 F040               00000040  14958+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14959+* End of Epilog
                                           14960 * * **** End of Epilogue
                                           14961          DROP  12
                                           14962 *
                                           14963 *   DSECT for automatic variables in "rd_kafka_message_detach_headers"
                                           14964 *      (FUNCTION #828)
                                           14965 *
00000000                00000000 000000AC  14966 @AUTO#rd_kafka_message_detach_headers DSECT
00000000                                   14967          DS    XL168
000000A8                                   14968 rd_kafka_message_detach_headers#err#0 DS 1F ; err
                                           14969 *
00009926                00000000 0000E868  14970 @CODE    CSECT
                                           14971 *
                                           14972 *
                                           14973 *
                                           14974 * ....... start of rd_kafka_message_set_headers
                                           14975 rd_kafka_message_set_headers ALIAS X'99846D92818692816D9485A2A28187856D*
                                                                A285A36D888581848599A2'
00009926                                   14976 @LNAME829 DS   0H
00009926 0000001C                          14977          DC    X'0000001C'
0000992A 99846D9281869281                  14978          DC    C'rd_kafka_message_set_headers'
00009946 00                                14979          DC    X'00'
                                           14980 rd_kafka_message_set_headers DCCPRLG CINDEX=829,BASER=12,FRAME=208,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME829
                                           14981          macro
                                           14982          dccextrn &m
                                           14983          gblc    &$dccext(1000)
                                           14984          gbla    &$dccexti
                                           14985          lcla    &i
                                           14986 &$dccext(&$dccexti+1) setc    '&m'
                                           14987 &i       seta    1
                                           14988 .loop    aif    (&i gt &$dccexti).around
                                           14989          aif    ('&$dccext(&i)' eq '&m').getout
                                           14990 &i       seta    &i+1
                                           14991          ago     .loop
                                           14992 .around  anop
                                           14993 &$dccexti seta &$dccexti+1
                                           14994          extrn  &m
                                           14995 .getout  anop
                                           14996          mend
00009948                                   14997+$eye0258    ds    0d                                                    02-DCCCA
00009948 C4C3C3                            14998+         dc cl3'DCC'                                                    02-DCCCA
0000994B 01                                14999+         dc xl1'01' format one                                          02-DCCCA
0000994C 00000000                          15000+         dc a(0)                                                        02-DCCCA
00009950 00000000000099BA                  15001+         dc ad(@PER_829)                                                02-DCCCA
                                                                                                                           Page  300 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009958 00000000000000D0                  15002+         dc ad(208)                                                     02-DCCCA
00009960 0000000000000000                  15003+         dc ad(0)                                                       02-DCCCA
00009968 0000000000001000                  15004+         dc ad(4096)                                                    02-DCCCA
00009970 20                                15005+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009971 03                                15006+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009972 03                                15007+         dc al1(3)                                                      02-DCCCA
00009973 08                                15008+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009974 00                                15009+         dc bl.8'00000000'                                              02-DCCCA
00009975 000000                            15010+         dc al3(0)                                                      02-DCCCA
00009978 0000000000009926                  15011+         dc ad(@LNAME829)                                               02-DCCCA
00009980                                   15012+         ds 0d                                                          02-DCCCA
00009980 0000000000009948                  15013+         dc ad($eye0258)                                                02-DCCCA
00009988 0000000000000000                  15014+         dc ad(0)                                                       02-DCCCA
00009990                                   15015+         ds    0d                                                       01-DCCPR
                                           15016+         entry rd_kafka_message_set_headers                             01-DCCPR
00009990                                   15017+rd_kafka_message_set_headers ds 0d                                      01-DCCPR
00009990                                   15018+@REGION_829_1 ds 0h                                                     01-DCCPR
00009990 EBEC D008 0024          00000008  15019+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009996 E3E0 D088 0004          00000088  15020+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000999C E3C0 D090 0004          00000090  15021+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000099A2 B904 002E                         15022+         lgr   2,14                copy addr of our savearea            01-DCCPR
000099A6 E3B0 C018 0004          00000018  15023+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000099AC A7EB 00D0               000000D0  15024+         aghi  14,208              increase by frame size               01-DCCPR
000099B0 E3E0 C020 0021          00000020  15025+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000099B6 4720 B020               00000020  15026+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000099BA                                   15027+@PER_829 ds    0h                                                       01-DCCPR
000099BA EBDE 2080 0024          00000080  15028+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000099C0 E3C0 2090 0024          00000090  15029+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000099C6 B904 00D2                         15030+         lgr   13,2                set real frame pointer               01-DCCPR
000099CA B904 00CF                         15031+         lgr   12,15               set base reg                         01-DCCPR
                        00009990           15032+         using @REGION_829_1,12                                         01-DCCPR
000099CE B904 0031                         15033          LGR   3,1         ; ptr to parm area
                                           15034 * ******* End of Prologue
                                           15035 * *
                                           15036 * ***           rd_kafka_msg_t *rkm;
                                           15037 * ***
                                           15038 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           15039 * sage);
000099D2 E3F0 3000 0004          00000000  15040          LG    15,0(0,3)   ; rkmessage
000099D8 E3F0 D0B0 0024          000000B0  15041          STG   15,176(0,13)
000099DE 4110 D0B0               000000B0  15042          LA    1,176(0,13)
000099E2 E3F0 C130 0004          00009AC0  15043          LG    15,@lit_829_571 ; rd_kafka_message2msg
000099E8                                   15044 @@gen_label854 DS    0H
000099E8 05EF                              15045          BALR  14,15
000099EA                                   15046 @@gen_label855 DS    0H
000099EA B904 002F                         15047          LGR   2,15
                                           15048 * ***
                                           15049 * ***           if (rkm->rkm_headers) {
000099EE E3F0 2068 0002          00000068  15050          LTG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000099F4 4780 C0D0               00009A60  15051          BZ    @L1111
                                           15052 * ***                   ((rkm->rkm_headers != hdrs) ? (void)0 : __asse\
                                           15053 * rt(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1584, "\
                                                                                                                           Page  301 
  Active Usings: @REGION_829_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15054 * rkm->rkm_headers != hdrs"));
000099F8 E3F0 2068 0004          00000068  15055          LG    15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000099FE E310 3008 0004          00000008  15056          LG    1,8(0,3)    ; hdrs
00009A04 B920 00F1                         15057          CGR   15,1
00009A08 4770 C0B8               00009A48  15058          BNE   @L1113
00009A0C                                   15059 @L1112   DS    0H
00009A0C E3F0 C148 0004          00009AD8  15060          LG    15,@lit_829_572
00009A12 41F0 F236               00000236  15061          LA    15,566(0,15)
00009A16 E3F0 D0B0 0024          000000B0  15062          STG   15,176(0,13)
00009A1C E3F0 C140 0004          00009AD0  15063          LG    15,@lit_829_573
00009A22 4110 F2C2               000002C2  15064          LA    1,706(0,15)
00009A26 E310 D0B8 0024          000000B8  15065          STG   1,184(0,13)
00009A2C E548 D0C0 0630          000000C0  15066          MVGHI 192(13),1584
00009A32 41F0 F526               00000526  15067          LA    15,1318(0,15)
00009A36 E3F0 D0C8 0024          000000C8  15068          STG   15,200(0,13)
00009A3C 4110 D0B0               000000B0  15069          LA    1,176(0,13)
00009A40 E3F0 C138 0004          00009AC8  15070          LG    15,@lit_829_574 ; __assert
00009A46                                   15071 @@gen_label858 DS    0H
00009A46 05EF                              15072          BALR  14,15
00009A48                                   15073 @@gen_label859 DS    0H
00009A48                                   15074 @L1113   DS    0H
                                           15075 * ***                   rd_kafka_headers_destroy(rkm->rkm_headers);
00009A48 E3F0 2068 0004          00000068  15076          LG    15,104(0,2)
00009A4E E3F0 D0B0 0024          000000B0  15077          STG   15,176(0,13)
00009A54 4110 D0B0               000000B0  15078          LA    1,176(0,13)
00009A58 E3F0 C150 0004          00009AE0  15079          LG    15,@lit_829_575 ; rd_kafka_headers_destroy
00009A5E                                   15080 @@gen_label860 DS    0H
00009A5E 05EF                              15081          BALR  14,15
00009A60                                   15082 @@gen_label861 DS    0H
                                           15083 * ***           }
00009A60                                   15084 @L1111   DS    0H
                                           15085 * ***
                                           15086 * ***           rkm->rkm_headers = hdrs;
00009A60 E3F0 3008 0004          00000008  15087          LG    15,8(0,3)   ; hdrs
00009A66 E3F0 2068 0024          00000068  15088          STG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
                                           15089 * ***   }
00009A6C                                   15090 @ret_lab_829 DS 0H
                                           15091 * * **** Start of Epilogue
                                           15092          DCCEPIL
00009A6C                                   15093+         ds 0h                                                          01-DCCEP
                                           15094+* Epilog
00009A6C D707 D088 D088 00000088 00000088  15095+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009A72 E3D0 D080 0004          00000080  15096+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009A78 E3C0 D090 0004          00000090  15097+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009A7E E3B0 C018 0004          00000018  15098+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009A84 E3C0 B010 0021          00000010  15099+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009A8A E3E0 D008 0004          00000008  15100+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009A90 EB1C D020 0004          00000020  15101+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009A96 078E                              15102+         bcr 8,14                if same dsab, just return              01-DCCEP
00009A98 E3F0 D010 0024          00000010  15103+         stg 15,16(0,13)         save return code                       01-DCCEP
00009A9E E300 D018 0024          00000018  15104+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009AA4 E3F0 D090 0004          00000090  15105+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page  302 
  Active Usings: @REGION_829_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009AAA E3F0 F018 0004          00000018  15106+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009AB0 47F0 F040               00000040  15107+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15108+* End of Epilog
                                           15109 * * **** End of Epilogue
00009AB8                                   15110          DS    0D
00009AB8 000000D0                          15111 @FRAMESIZE_829 DC F'208'
00009ABC 00000000
00009AC0 00000000000014B0                  15112 @lit_829_571 DC AD(rd_kafka_message2msg)
00009AC8 0000000000000000                  15113 @lit_829_574 DC AD(__assert)
00009AD0 000000000000ECA4                  15114 @lit_829_573 DC AD(@strings@)
00009AD8 000000000000E868                  15115 @lit_829_572 DC AD(@DATA)
00009AE0 0000000000000000                  15116 @lit_829_575 DC AD(rd_kafka_headers_destroy)
                                           15117          DROP  12
                                           15118 *
                                           15119 *   DSECT for automatic variables in "rd_kafka_message_set_headers"
                                           15120 *      (FUNCTION #829)
                                           15121 *
00000000                00000000 000000A8  15122 @AUTO#rd_kafka_message_set_headers DSECT
00000000                                   15123          DS    XL168
                                           15124 *
00009AE8                00000000 0000E868  15125 @CODE    CSECT
                                           15126 *
                                           15127 *
                                           15128 *
                                           15129 * ....... start of rd_kafka_message_status
                                           15130 rd_kafka_message_status ALIAS X'99846D92818692816D9485A2A28187856DA2A38*
                                                                1A3A4A2'
00009AE8                                   15131 @LNAME831 DS   0H
00009AE8 00000017                          15132          DC    X'00000017'
00009AEC 99846D9281869281                  15133          DC    C'rd_kafka_message_status'
00009B03 00                                15134          DC    X'00'
                                           15135 rd_kafka_message_status DCCPRLG CINDEX=831,BASER=12,FRAME=184,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME831
                                           15136          macro
                                           15137          dccextrn &m
                                           15138          gblc    &$dccext(1000)
                                           15139          gbla    &$dccexti
                                           15140          lcla    &i
                                           15141 &$dccext(&$dccexti+1) setc    '&m'
                                           15142 &i       seta    1
                                           15143 .loop    aif    (&i gt &$dccexti).around
                                           15144          aif    ('&$dccext(&i)' eq '&m').getout
                                           15145 &i       seta    &i+1
                                           15146          ago     .loop
                                           15147 .around  anop
                                           15148 &$dccexti seta &$dccexti+1
                                           15149          extrn  &m
                                           15150 .getout  anop
                                           15151          mend
00009B08                                   15152+$eye0261    ds    0d                                                    02-DCCCA
00009B08 C4C3C3                            15153+         dc cl3'DCC'                                                    02-DCCCA
00009B0B 01                                15154+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  303 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009B0C 00000000                          15155+         dc a(0)                                                        02-DCCCA
00009B10 0000000000009B7A                  15156+         dc ad(@PER_831)                                                02-DCCCA
00009B18 00000000000000B8                  15157+         dc ad(184)                                                     02-DCCCA
00009B20 0000000000000000                  15158+         dc ad(0)                                                       02-DCCCA
00009B28 0000000000001000                  15159+         dc ad(4096)                                                    02-DCCCA
00009B30 20                                15160+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009B31 03                                15161+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009B32 03                                15162+         dc al1(3)                                                      02-DCCCA
00009B33 08                                15163+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009B34 00                                15164+         dc bl.8'00000000'                                              02-DCCCA
00009B35 000000                            15165+         dc al3(0)                                                      02-DCCCA
00009B38 0000000000009AE8                  15166+         dc ad(@LNAME831)                                               02-DCCCA
00009B40                                   15167+         ds 0d                                                          02-DCCCA
00009B40 0000000000009B08                  15168+         dc ad($eye0261)                                                02-DCCCA
00009B48 0000000000000000                  15169+         dc ad(0)                                                       02-DCCCA
00009B50                                   15170+         ds    0d                                                       01-DCCPR
                                           15171+         entry rd_kafka_message_status                                  01-DCCPR
00009B50                                   15172+rd_kafka_message_status ds 0d                                           01-DCCPR
00009B50                                   15173+@REGION_831_1 ds 0h                                                     01-DCCPR
00009B50 EBEC D008 0024          00000008  15174+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009B56 E3E0 D088 0004          00000088  15175+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009B5C E3C0 D090 0004          00000090  15176+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009B62 B904 002E                         15177+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009B66 E3B0 C018 0004          00000018  15178+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009B6C A7EB 00B8               000000B8  15179+         aghi  14,184              increase by frame size               01-DCCPR
00009B70 E3E0 C020 0021          00000020  15180+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009B76 4720 B020               00000020  15181+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009B7A                                   15182+@PER_831 ds    0h                                                       01-DCCPR
00009B7A EBDE 2080 0024          00000080  15183+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009B80 E3C0 2090 0024          00000090  15184+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009B86 B904 00D2                         15185+         lgr   13,2                set real frame pointer               01-DCCPR
00009B8A B904 00CF                         15186+         lgr   12,15               set base reg                         01-DCCPR
                        00009B50           15187+         using @REGION_831_1,12                                         01-DCCPR
                                           15188 * ******* End of Prologue
                                           15189 * *
                                           15190 * ***           rd_kafka_msg_t *rkm;
                                           15191 * ***
                                           15192 * ***           rkm = rd_kafka_message2msg((rd_kafka_message_t *)rkmes\
                                           15193 * sage);
00009B8E E3F0 1000 0004          00000000  15194          LG    15,0(0,1)   ; rkmessage
00009B94 E3F0 D0B0 0024          000000B0  15195          STG   15,176(0,13)
00009B9A 4110 D0B0               000000B0  15196          LA    1,176(0,13)
00009B9E E3F0 C0B0 0004          00009C00  15197          LG    15,@lit_831_577 ; rd_kafka_message2msg
00009BA4                                   15198 @@gen_label862 DS    0H
00009BA4 05EF                              15199          BALR  14,15
00009BA6                                   15200 @@gen_label863 DS    0H
                                           15201 * ***
                                           15202 * ***           return rkm->rkm_status;
00009BA6 E3F0 F070 0014          00000070  15203          LGF   15,112(0,15)
                                           15204 * ***   }
                                           15205 * * **** Start of Epilogue
                                           15206          DCCEPIL
                                                                                                                           Page  304 
  Active Usings: @REGION_831_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009BAC                                   15207+         ds 0h                                                          01-DCCEP
                                           15208+* Epilog
00009BAC D707 D088 D088 00000088 00000088  15209+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009BB2 E3D0 D080 0004          00000080  15210+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009BB8 E3C0 D090 0004          00000090  15211+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009BBE E3B0 C018 0004          00000018  15212+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009BC4 E3C0 B010 0021          00000010  15213+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009BCA E3E0 D008 0004          00000008  15214+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009BD0 EB1C D020 0004          00000020  15215+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009BD6 078E                              15216+         bcr 8,14                if same dsab, just return              01-DCCEP
00009BD8 E3F0 D010 0024          00000010  15217+         stg 15,16(0,13)         save return code                       01-DCCEP
00009BDE E300 D018 0024          00000018  15218+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009BE4 E3F0 D090 0004          00000090  15219+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009BEA E3F0 F018 0004          00000018  15220+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009BF0 47F0 F040               00000040  15221+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15222+* End of Epilog
                                           15223 * * **** End of Epilogue
00009BF8                                   15224          DS    0D
00009BF8 000000B8                          15225 @FRAMESIZE_831 DC F'184'
00009BFC 00000000
00009C00 00000000000014B0                  15226 @lit_831_577 DC AD(rd_kafka_message2msg)
                                           15227          DROP  12
                                           15228 *
                                           15229 *   DSECT for automatic variables in "rd_kafka_message_status"
                                           15230 *      (FUNCTION #831)
                                           15231 *
00000000                00000000 000000A8  15232 @AUTO#rd_kafka_message_status DSECT
00000000                                   15233          DS    XL168
                                           15234 *
00009C08                00000000 0000E868  15235 @CODE    CSECT
                                           15236 *
                                           15237 *
                                           15238 *
                                           15239 * ....... start of rd_kafka_msgq_dump
                                           15240 rd_kafka_msgq_dump ALIAS X'99846D92818692816D94A287986D84A49497'
00009C08                                   15241 @LNAME1369 DS  0H
00009C08 00000012                          15242          DC    X'00000012'
00009C0C 99846D9281869281                  15243          DC    C'rd_kafka_msgq_dump'
00009C1E 00                                15244          DC    X'00'
                                           15245 rd_kafka_msgq_dump DCCPRLG CINDEX=1369,BASER=12,FRAME=232,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1369
                                           15246          macro
                                           15247          dccextrn &m
                                           15248          gblc    &$dccext(1000)
                                           15249          gbla    &$dccexti
                                           15250          lcla    &i
                                           15251 &$dccext(&$dccexti+1) setc    '&m'
                                           15252 &i       seta    1
                                           15253 .loop    aif    (&i gt &$dccexti).around
                                           15254          aif    ('&$dccext(&i)' eq '&m').getout
                                           15255 &i       seta    &i+1
                                           15256          ago     .loop
                                                                                                                           Page  305 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15257 .around  anop
                                           15258 &$dccexti seta &$dccexti+1
                                           15259          extrn  &m
                                           15260 .getout  anop
                                           15261          mend
00009C20                                   15262+$eye0264    ds    0d                                                    02-DCCCA
00009C20 C4C3C3                            15263+         dc cl3'DCC'                                                    02-DCCCA
00009C23 01                                15264+         dc xl1'01' format one                                          02-DCCCA
00009C24 00000000                          15265+         dc a(0)                                                        02-DCCCA
00009C28 0000000000009C92                  15266+         dc ad(@PER_1369)                                               02-DCCCA
00009C30 00000000000000E8                  15267+         dc ad(232)                                                     02-DCCCA
00009C38 0000000000000000                  15268+         dc ad(0)                                                       02-DCCCA
00009C40 0000000000001000                  15269+         dc ad(4096)                                                    02-DCCCA
00009C48 20                                15270+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009C49 03                                15271+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009C4A 03                                15272+         dc al1(3)                                                      02-DCCCA
00009C4B 08                                15273+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009C4C 00                                15274+         dc bl.8'00000000'                                              02-DCCCA
00009C4D 000000                            15275+         dc al3(0)                                                      02-DCCCA
00009C50 0000000000009C08                  15276+         dc ad(@LNAME1369)                                              02-DCCCA
00009C58                                   15277+         ds 0d                                                          02-DCCCA
00009C58 0000000000009C20                  15278+         dc ad($eye0264)                                                02-DCCCA
00009C60 0000000000000000                  15279+         dc ad(0)                                                       02-DCCCA
00009C68                                   15280+         ds    0d                                                       01-DCCPR
                                           15281+         entry rd_kafka_msgq_dump                                       01-DCCPR
00009C68                                   15282+rd_kafka_msgq_dump ds 0d                                                01-DCCPR
00009C68                                   15283+@REGION_1369_1 ds 0h                                                    01-DCCPR
00009C68 EBEC D008 0024          00000008  15284+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009C6E E3E0 D088 0004          00000088  15285+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009C74 E3C0 D090 0004          00000090  15286+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009C7A B904 002E                         15287+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009C7E E3B0 C018 0004          00000018  15288+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009C84 A7EB 00E8               000000E8  15289+         aghi  14,232              increase by frame size               01-DCCPR
00009C88 E3E0 C020 0021          00000020  15290+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009C8E 4720 B020               00000020  15291+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009C92                                   15292+@PER_1369 ds   0h                                                       01-DCCPR
00009C92 EBDE 2080 0024          00000080  15293+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009C98 E3C0 2090 0024          00000090  15294+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009C9E B904 00D2                         15295+         lgr   13,2                set real frame pointer               01-DCCPR
00009CA2 B904 00CF                         15296+         lgr   12,15               set base reg                         01-DCCPR
                        00009C68           15297+         using @REGION_1369_1,12                                        01-DCCPR
00009CA6 B904 0051                         15298          LGR   5,1         ; ptr to parm area
                                           15299 * ******* End of Prologue
                                           15300 * *
00009CAA E340 5010 0004          00000010  15301          LG    4,16(0,5)   ; rkmq
                                           15302 * ***           rd_kafka_msg_t *rkm;
                                           15303 * ***           int cnt = 0;
00009CB0 A738 0000               00000000  15304          LHI   3,0         ; 0
                                           15305 * ***
                                           15306 * ***           fprintf(fp, "%s msgq_dump (%d messages, %" "zu" " byte\
                                           15307 * s):\n", what,
                                           15308 * ***                   rd_kafka_msgq_len(rkmq), rd_kafka_msgq_size(rk\
                                                                                                                           Page  306 
  Active Usings: @REGION_1369_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15309 * mq));
00009CB4 E340 D0B0 0024          000000B0  15310          STG   4,176(0,13)
00009CBA 4110 D0B0               000000B0  15311          LA    1,176(0,13)
00009CBE E3F0 C0C8 0004          00009D30  15312          LG    15,@lit_1369_580 ; rd_kafka_msgq_len
00009CC4                                   15313 @@gen_label864 DS    0H
00009CC4 05EF                              15314          BALR  14,15
00009CC6                                   15315 @@gen_label865 DS    0H
00009CC6 182F                              15316          LR    2,15
00009CC8 E340 D0B0 0024          000000B0  15317          STG   4,176(0,13)
00009CCE 4110 D0B0               000000B0  15318          LA    1,176(0,13)
00009CD2 E3F0 C0D0 0004          00009D38  15319          LG    15,@lit_1369_581 ; rd_kafka_msgq_size
00009CD8                                   15320 @@gen_label866 DS    0H
00009CD8 05EF                              15321          BALR  14,15
00009CDA                                   15322 @@gen_label867 DS    0H
00009CDA E310 5000 0004          00000000  15323          LG    1,0(0,5)    ; fp
00009CE0 E310 D0B0 0024          000000B0  15324          STG   1,176(0,13)
00009CE6 E310 C0E0 0004          00009D48  15325          LG    1,@lit_1369_582
00009CEC 4110 1540               00000540  15326          LA    1,1344(0,1)
00009CF0 E310 D0B8 0024          000000B8  15327          STG   1,184(0,13)
00009CF6 E310 5008 0004          00000008  15328          LG    1,8(0,5)    ; what
00009CFC E310 D0C0 0024          000000C0  15329          STG   1,192(0,13)
00009D02 B914 0012                         15330          LGFR  1,2
00009D06 E310 D0C8 0024          000000C8  15331          STG   1,200(0,13)
00009D0C E3F0 D0D0 0024          000000D0  15332          STG   15,208(0,13)
00009D12 4110 D0B0               000000B0  15333          LA    1,176(0,13)
00009D16 E3F0 C0D8 0004          00009D40  15334          LG    15,@lit_1369_583 ; fprintf
00009D1C                                   15335 @@gen_label868 DS    0H
00009D1C 05EF                              15336          BALR  14,15
00009D1E                                   15337 @@gen_label869 DS    0H
                                           15338 * ***           for ((rkm) = ((&rkmq->rkmq_msgs)->tqh_first); (rkm) !=\
                                           15339 *  (((void *)0)); (rkm) = ((rkm)->rkm_link .tqe_next)) {
00009D1E E320 4000 0004          00000000  15340          LG    2,0(0,4)    ; rkmq
00009D24 47F0 C1A6               00009E0E  15341          B     @L1115
00009D28                                   15342          DS    0D
00009D28 000000E8                          15343 @FRAMESIZE_1369 DC F'232'
00009D2C 00000000
00009D30 0000000000001528                  15344 @lit_1369_580 DC AD(rd_kafka_msgq_len)
00009D38 00000000000015A8                  15345 @lit_1369_581 DC AD(rd_kafka_msgq_size)
00009D40 0000000000000000                  15346 @lit_1369_583 DC AD(fprintf)
00009D48 000000000000ECA4                  15347 @lit_1369_582 DC AD(@strings@)
00009D50 0000000000000000                  15348 @lit_1369_587 DC AD(__assert)
00009D58 000000000000E868                  15349 @lit_1369_586 DC AD(@DATA)
00009D60                                   15350 @L1114   DS    0H
                                           15351 * ***                   fprintf(fp, " [%" "d" "]@%" "lld"
                                           15352 * ***                           rkm->rkm_rkmessage.partition, rkm->rkm\
                                           15353 * _rkmessage.offset,
                                           15354 * ***                           rkm->rkm_u.producer.msgid,
                                           15355 * ***                           (int)rkm->rkm_rkmessage.len, (const ch\
                                           15356 * ar *)rkm->rkm_rkmessage.payload);
00009D60 E3F0 5000 0004          00000000  15357          LG    15,0(0,5)   ; fp
00009D66 E3F0 D0B0 0024          000000B0  15358          STG   15,176(0,13)
                                           15359 * ***                           ": rkm msgid %" "llu" ": \"%.*s\"\n",
                                                                                                                           Page  307 
  Active Usings: @REGION_1369_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009D6C E360 C0E0 0004          00009D48  15360          LG    6,@lit_1369_582
00009D72 41F0 6568               00000568  15361          LA    15,1384(0,6)
00009D76 E3F0 D0B8 0024          000000B8  15362          STG   15,184(0,13)
00009D7C E3F0 2010 0014          00000010  15363          LGF   15,16(0,2)
00009D82 E3F0 D0C0 0024          000000C0  15364          STG   15,192(0,13)
00009D88 E3F0 2038 0004          00000038  15365          LG    15,56(0,2)
00009D8E E3F0 D0C8 0024          000000C8  15366          STG   15,200(0,13)
00009D94 E3F0 2090 0004          00000090  15367          LG    15,144(0,2)
00009D9A E3F0 D0D0 0024          000000D0  15368          STG   15,208(0,13)
00009DA0 E3F0 2024 0014          00000024  15369          LGF   15,36(0,2)
00009DA6 E3F0 D0D8 0024          000000D8  15370          STG   15,216(0,13)
00009DAC E3F0 2018 0004          00000018  15371          LG    15,24(0,2)
00009DB2 E3F0 D0E0 0024          000000E0  15372          STG   15,224(0,13)
00009DB8 4110 D0B0               000000B0  15373          LA    1,176(0,13)
00009DBC E3F0 C0D8 0004          00009D40  15374          LG    15,@lit_1369_583 ; fprintf
00009DC2                                   15375 @@gen_label870 DS    0H
00009DC2 05EF                              15376          BALR  14,15
00009DC4                                   15377 @@gen_label871 DS    0H
                                           15378 * ***                   ((cnt++ < rkmq->rkmq_msg_cnt) ? (void)0 : __as\
                                           15379 * sert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1615,\
                                           15380 *  "cnt++ < rkmq->rkmq_msg_cnt"));
00009DC4 18F3                              15381          LR    15,3
00009DC6 A73A 0001               00000001  15382          AHI   3,1
00009DCA 59F0 4010               00000010  15383          C     15,16(0,4)
00009DCE 4740 C1A0               00009E08  15384          BL    @L1119
00009DD2                                   15385 @L1118   DS    0H
00009DD2 E3F0 C0F0 0004          00009D58  15386          LG    15,@lit_1369_586
00009DD8 41F0 F254               00000254  15387          LA    15,596(0,15)
00009DDC E3F0 D0B0 0024          000000B0  15388          STG   15,176(0,13)
00009DE2 41F0 62C2               000002C2  15389          LA    15,706(0,6)
00009DE6 E3F0 D0B8 0024          000000B8  15390          STG   15,184(0,13)
00009DEC E548 D0C0 064F          000000C0  15391          MVGHI 192(13),1615
00009DF2 41F0 658C               0000058C  15392          LA    15,1420(0,6)
00009DF6 E3F0 D0C8 0024          000000C8  15393          STG   15,200(0,13)
00009DFC 4110 D0B0               000000B0  15394          LA    1,176(0,13)
00009E00 E3F0 C0E8 0004          00009D50  15395          LG    15,@lit_1369_587 ; __assert
00009E06                                   15396 @@gen_label873 DS    0H
00009E06 05EF                              15397          BALR  14,15
00009E08                                   15398 @@gen_label874 DS    0H
00009E08                                   15399 @L1119   DS    0H
                                           15400 * ***           }
00009E08 E320 2048 0004          00000048  15401          LG    2,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
00009E0E                                   15402 @L1115   DS    0H
00009E0E B902 00F2                         15403          LTGR  15,2
00009E12 4770 C0F8               00009D60  15404          BNE   @L1114
                                           15405 * ***   }
00009E16                                   15406 @ret_lab_1369 DS 0H
                                           15407 * * **** Start of Epilogue
                                           15408          DCCEPIL
00009E16                                   15409+         ds 0h                                                          01-DCCEP
                                           15410+* Epilog
00009E16 D707 D088 D088 00000088 00000088  15411+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  308 
  Active Usings: @REGION_1369_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009E1C E3D0 D080 0004          00000080  15412+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009E22 E3C0 D090 0004          00000090  15413+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009E28 E3B0 C018 0004          00000018  15414+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009E2E E3C0 B010 0021          00000010  15415+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009E34 E3E0 D008 0004          00000008  15416+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009E3A EB1C D020 0004          00000020  15417+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009E40 078E                              15418+         bcr 8,14                if same dsab, just return              01-DCCEP
00009E42 E3F0 D010 0024          00000010  15419+         stg 15,16(0,13)         save return code                       01-DCCEP
00009E48 E300 D018 0024          00000018  15420+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009E4E E3F0 D090 0004          00000090  15421+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009E54 E3F0 F018 0004          00000018  15422+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009E5A 47F0 F040               00000040  15423+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15424+* End of Epilog
                                           15425 * * **** End of Epilogue
                                           15426          DROP  12
                                           15427 *
                                           15428 *   DSECT for automatic variables in "rd_kafka_msgq_dump"
                                           15429 *      (FUNCTION #1369)
                                           15430 *
00000000                00000000 000000AC  15431 @AUTO#rd_kafka_msgq_dump DSECT
00000000                                   15432          DS    XL168
000000A8                                   15433 rd_kafka_msgq_dump#cnt#0 DS 1F ; cnt
                                           15434 *
00009E5E                00000000 0000E868  15435 @CODE    CSECT
                                           15436 *
                                           15437 *
                                           15438 *
                                           15439 * ....... start of rd_kafka_msgbatch_destroy
                                           15440 rd_kafka_msgbatch_destroy ALIAS X'99846D92818692816D94A2878281A383886D8*
                                                                485A2A39996A8'
00009E5E                                   15441 @LNAME1488 DS  0H
00009E5E 00000019                          15442          DC    X'00000019'
00009E62 99846D9281869281                  15443          DC    C'rd_kafka_msgbatch_destroy'
00009E7B 00                                15444          DC    X'00'
                                           15445 rd_kafka_msgbatch_destroy DCCPRLG CINDEX=1488,BASER=12,FRAME=208,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1488
                                           15446          macro
                                           15447          dccextrn &m
                                           15448          gblc    &$dccext(1000)
                                           15449          gbla    &$dccexti
                                           15450          lcla    &i
                                           15451 &$dccext(&$dccexti+1) setc    '&m'
                                           15452 &i       seta    1
                                           15453 .loop    aif    (&i gt &$dccexti).around
                                           15454          aif    ('&$dccext(&i)' eq '&m').getout
                                           15455 &i       seta    &i+1
                                           15456          ago     .loop
                                           15457 .around  anop
                                           15458 &$dccexti seta &$dccexti+1
                                           15459          extrn  &m
                                           15460 .getout  anop
                                           15461          mend
                                                                                                                           Page  309 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009E80                                   15462+$eye0267    ds    0d                                                    02-DCCCA
00009E80 C4C3C3                            15463+         dc cl3'DCC'                                                    02-DCCCA
00009E83 01                                15464+         dc xl1'01' format one                                          02-DCCCA
00009E84 00000000                          15465+         dc a(0)                                                        02-DCCCA
00009E88 0000000000009EF2                  15466+         dc ad(@PER_1488)                                               02-DCCCA
00009E90 00000000000000D0                  15467+         dc ad(208)                                                     02-DCCCA
00009E98 0000000000000000                  15468+         dc ad(0)                                                       02-DCCCA
00009EA0 0000000000001000                  15469+         dc ad(4096)                                                    02-DCCCA
00009EA8 20                                15470+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009EA9 03                                15471+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009EAA 03                                15472+         dc al1(3)                                                      02-DCCCA
00009EAB 08                                15473+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009EAC 00                                15474+         dc bl.8'00000000'                                              02-DCCCA
00009EAD 000000                            15475+         dc al3(0)                                                      02-DCCCA
00009EB0 0000000000009E5E                  15476+         dc ad(@LNAME1488)                                              02-DCCCA
00009EB8                                   15477+         ds 0d                                                          02-DCCCA
00009EB8 0000000000009E80                  15478+         dc ad($eye0267)                                                02-DCCCA
00009EC0 0000000000000000                  15479+         dc ad(0)                                                       02-DCCCA
00009EC8                                   15480+         ds    0d                                                       01-DCCPR
                                           15481+         entry rd_kafka_msgbatch_destroy                                01-DCCPR
00009EC8                                   15482+rd_kafka_msgbatch_destroy ds 0d                                         01-DCCPR
00009EC8                                   15483+@REGION_1488_1 ds 0h                                                    01-DCCPR
00009EC8 EBEC D008 0024          00000008  15484+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009ECE E3E0 D088 0004          00000088  15485+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009ED4 E3C0 D090 0004          00000090  15486+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009EDA B904 002E                         15487+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009EDE E3B0 C018 0004          00000018  15488+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009EE4 A7EB 00D0               000000D0  15489+         aghi  14,208              increase by frame size               01-DCCPR
00009EE8 E3E0 C020 0021          00000020  15490+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009EEE 4720 B020               00000020  15491+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009EF2                                   15492+@PER_1488 ds   0h                                                       01-DCCPR
00009EF2 EBDE 2080 0024          00000080  15493+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009EF8 E3C0 2090 0024          00000090  15494+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009EFE B904 00D2                         15495+         lgr   13,2                set real frame pointer               01-DCCPR
00009F02 B904 00CF                         15496+         lgr   12,15               set base reg                         01-DCCPR
                        00009EC8           15497+         using @REGION_1488_1,12                                        01-DCCPR
                                           15498 * ******* End of Prologue
                                           15499 * *
                                           15500 * ***           if (rkmb->rktp) {
00009F06 E320 1000 0004          00000000  15501          LG    2,0(0,1)    ; rkmb
00009F0C E3F0 2000 0002          00000000  15502          LTG   15,0(0,2)   ; rkmb
00009F12 4780 C08C               00009F54  15503          BZ    @L1120
                                           15504 * ***                   do { rd_kafka_toppar_t *_RKTP = (rkmb->rktp); \
                                           15505 * if (((rd_refcnt_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_de\
                                           15506 * stroy_final(_RKTP); } while (0);
00009F16                                   15507 @L1121   DS    0H
00009F16 E330 2000 0004          00000000  15508          LG    3,0(0,2)    ; rkmb
00009F1C 41F0 3090               00000090  15509          LA    15,144(0,3)
00009F20 E3F0 D0B0 0024          000000B0  15510          STG   15,176(0,13)
00009F26 4110 D0B0               000000B0  15511          LA    1,176(0,13)
00009F2A E3F0 C128 0004          00009FF0  15512          LG    15,@lit_1488_589 ; rd_refcnt_sub0
00009F30                                   15513 @@gen_label877 DS    0H
                                                                                                                           Page  310 
  Active Usings: @REGION_1488_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009F30 05EF                              15514          BALR  14,15
00009F32                                   15515 @@gen_label878 DS    0H
00009F32 12FF                              15516          LTR   15,15
00009F34 4770 C082               00009F4A  15517          BNE   @L1124
00009F38 E330 D0B0 0024          000000B0  15518          STG   3,176(0,13)
00009F3E 4110 D0B0               000000B0  15519          LA    1,176(0,13)
00009F42 E3F0 C130 0004          00009FF8  15520          LG    15,@lit_1488_590 ; rd_kafka_toppar_destroy_final
00009F48                                   15521 @@gen_label880 DS    0H
00009F48 05EF                              15522          BALR  14,15
00009F4A                                   15523 @@gen_label881 DS    0H
00009F4A                                   15524 @L1124   DS    0H
                                           15525 * ***                   rkmb->rktp = ((void *)0);
00009F4A A7F9 0000               00000000  15526          LGHI  15,0        ; 0
00009F4E E3F0 2000 0024          00000000  15527          STG   15,0(0,2)   ; rkmb
                                           15528 * ***           }
00009F54                                   15529 @L1120   DS    0H
                                           15530 * ***
                                           15531 * ***           (((((&(&rkmb->msgq)->rkmq_msgs)->tqh_first) == (((void\
                                           15532 *  *)0)))) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\s\
                                           15533 * rc\\rdkafka_msg.c", 1631, "(((&(&rkmb->msgq)->rkmq_msgs)->tqh_first)\
                                           15534 *  == (((void *)0)))"));
00009F54 E3F0 2008 0002          00000008  15535          LTG   15,8(0,2)   ; offset of msgq in rd_kafka_msgbatch_s
00009F5A 4780 C0D2               00009F9A  15536          BE    @ret_lab_1488
00009F5E                                   15537 @L1125   DS    0H
00009F5E E3F0 C148 0004          0000A010  15538          LG    15,@lit_1488_592
00009F64 41F0 F268               00000268  15539          LA    15,616(0,15)
00009F68 E3F0 D0B0 0024          000000B0  15540          STG   15,176(0,13)
00009F6E E3F0 C140 0004          0000A008  15541          LG    15,@lit_1488_593
00009F74 4110 F2C2               000002C2  15542          LA    1,706(0,15)
00009F78 E310 D0B8 0024          000000B8  15543          STG   1,184(0,13)
00009F7E E548 D0C0 065F          000000C0  15544          MVGHI 192(13),1631
00009F84 41F0 F5A8               000005A8  15545          LA    15,1448(0,15)
00009F88 E3F0 D0C8 0024          000000C8  15546          STG   15,200(0,13)
00009F8E 4110 D0B0               000000B0  15547          LA    1,176(0,13)
00009F92 E3F0 C138 0004          0000A000  15548          LG    15,@lit_1488_594 ; __assert
00009F98                                   15549 @@gen_label883 DS    0H
00009F98 05EF                              15550          BALR  14,15
00009F9A                                   15551 @@gen_label884 DS    0H
00009F9A                                   15552 @L1126   DS    0H
                                           15553 * ***   }
00009F9A                                   15554 @ret_lab_1488 DS 0H
                                           15555 * * **** Start of Epilogue
                                           15556          DCCEPIL
00009F9A                                   15557+         ds 0h                                                          01-DCCEP
                                           15558+* Epilog
00009F9A D707 D088 D088 00000088 00000088  15559+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009FA0 E3D0 D080 0004          00000080  15560+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009FA6 E3C0 D090 0004          00000090  15561+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009FAC E3B0 C018 0004          00000018  15562+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009FB2 E3C0 B010 0021          00000010  15563+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009FB8 E3E0 D008 0004          00000008  15564+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009FBE EB1C D020 0004          00000020  15565+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  311 
  Active Usings: @REGION_1488_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009FC4 078E                              15566+         bcr 8,14                if same dsab, just return              01-DCCEP
00009FC6 E3F0 D010 0024          00000010  15567+         stg 15,16(0,13)         save return code                       01-DCCEP
00009FCC E300 D018 0024          00000018  15568+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009FD2 E3F0 D090 0004          00000090  15569+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009FD8 E3F0 F018 0004          00000018  15570+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009FDE 47F0 F040               00000040  15571+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15572+* End of Epilog
                                           15573 * * **** End of Epilogue
00009FE8                                   15574          DS    0D
00009FE8 000000D0                          15575 @FRAMESIZE_1488 DC F'208'
00009FEC 00000000
00009FF0 0000000000000958                  15576 @lit_1488_589 DC AD(rd_refcnt_sub0)
00009FF8 0000000000000000                  15577 @lit_1488_590 DC AD(rd_kafka_toppar_destroy_final)
0000A000 0000000000000000                  15578 @lit_1488_594 DC AD(__assert)
0000A008 000000000000ECA4                  15579 @lit_1488_593 DC AD(@strings@)
0000A010 000000000000E868                  15580 @lit_1488_592 DC AD(@DATA)
                                           15581          DROP  12
                                           15582 *
                                           15583 *   DSECT for automatic variables in "rd_kafka_msgbatch_destroy"
                                           15584 *      (FUNCTION #1488)
                                           15585 *
00000000                00000000 000000A8  15586 @AUTO#rd_kafka_msgbatch_destroy DSECT
00000000                                   15587          DS    XL168
                                           15588 *
0000A018                00000000 0000E868  15589 @CODE    CSECT
                                           15590 *
                                           15591 *
                                           15592 *
                                           15593 * ....... start of rd_kafka_msgbatch_init
                                           15594 rd_kafka_msgbatch_init ALIAS X'99846D92818692816D94A2878281A383886D8995*
                                                                89A3'
0000A018                                   15595 @LNAME1489 DS  0H
0000A018 00000016                          15596          DC    X'00000016'
0000A01C 99846D9281869281                  15597          DC    C'rd_kafka_msgbatch_init'
0000A032 00                                15598          DC    X'00'
                                           15599 rd_kafka_msgbatch_init DCCPRLG CINDEX=1489,BASER=12,FRAME=192,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1489
                                           15600          macro
                                           15601          dccextrn &m
                                           15602          gblc    &$dccext(1000)
                                           15603          gbla    &$dccexti
                                           15604          lcla    &i
                                           15605 &$dccext(&$dccexti+1) setc    '&m'
                                           15606 &i       seta    1
                                           15607 .loop    aif    (&i gt &$dccexti).around
                                           15608          aif    ('&$dccext(&i)' eq '&m').getout
                                           15609 &i       seta    &i+1
                                           15610          ago     .loop
                                           15611 .around  anop
                                           15612 &$dccexti seta &$dccexti+1
                                           15613          extrn  &m
                                           15614 .getout  anop
                                                                                                                           Page  312 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15615          mend
0000A038                                   15616+$eye0270    ds    0d                                                    02-DCCCA
0000A038 C4C3C3                            15617+         dc cl3'DCC'                                                    02-DCCCA
0000A03B 01                                15618+         dc xl1'01' format one                                          02-DCCCA
0000A03C 00000000                          15619+         dc a(0)                                                        02-DCCCA
0000A040 000000000000A0AA                  15620+         dc ad(@PER_1489)                                               02-DCCCA
0000A048 00000000000000C0                  15621+         dc ad(192)                                                     02-DCCCA
0000A050 0000000000000000                  15622+         dc ad(0)                                                       02-DCCCA
0000A058 0000000000001000                  15623+         dc ad(4096)                                                    02-DCCCA
0000A060 20                                15624+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A061 03                                15625+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A062 03                                15626+         dc al1(3)                                                      02-DCCCA
0000A063 08                                15627+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A064 00                                15628+         dc bl.8'00000000'                                              02-DCCCA
0000A065 000000                            15629+         dc al3(0)                                                      02-DCCCA
0000A068 000000000000A018                  15630+         dc ad(@LNAME1489)                                              02-DCCCA
0000A070                                   15631+         ds 0d                                                          02-DCCCA
0000A070 000000000000A038                  15632+         dc ad($eye0270)                                                02-DCCCA
0000A078 0000000000000000                  15633+         dc ad(0)                                                       02-DCCCA
0000A080                                   15634+         ds    0d                                                       01-DCCPR
                                           15635+         entry rd_kafka_msgbatch_init                                   01-DCCPR
0000A080                                   15636+rd_kafka_msgbatch_init ds 0d                                            01-DCCPR
0000A080                                   15637+@REGION_1489_1 ds 0h                                                    01-DCCPR
0000A080 EBEC D008 0024          00000008  15638+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A086 E3E0 D088 0004          00000088  15639+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A08C E3C0 D090 0004          00000090  15640+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A092 B904 002E                         15641+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A096 E3B0 C018 0004          00000018  15642+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A09C A7EB 00C0               000000C0  15643+         aghi  14,192              increase by frame size               01-DCCPR
0000A0A0 E3E0 C020 0021          00000020  15644+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A0A6 4720 B020               00000020  15645+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A0AA                                   15646+@PER_1489 ds   0h                                                       01-DCCPR
0000A0AA EBDE 2080 0024          00000080  15647+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A0B0 E3C0 2090 0024          00000090  15648+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A0B6 B904 00D2                         15649+         lgr   13,2                set real frame pointer               01-DCCPR
0000A0BA B904 00CF                         15650+         lgr   12,15               set base reg                         01-DCCPR
                        0000A080           15651+         using @REGION_1489_1,12                                        01-DCCPR
0000A0BE B904 0031                         15652          LGR   3,1         ; ptr to parm area
                                           15653 * ******* End of Prologue
                                           15654 * *
                                           15655 * ***           __memset(rkmb,0,sizeof(*rkmb));
0000A0C2 E320 3000 0004          00000000  15656          LG    2,0(0,3)    ; rkmb
                                           15657 * setting 88 bytes to 0x00
0000A0C8 D757 2000 2000 00000000 00000000  15658          XC    0(88,2),0(2)
                                           15659 * ***
                                           15660 * ***           rkmb->rktp = rd_kafka_toppar_keep0(__FUNCTION__,1644,r\
                                           15661 * ktp);
0000A0CE E3F0 C108 0004          0000A188  15662          LG    15,@lit_1489_596
0000A0D4 41F0 F282               00000282  15663          LA    15,642(0,15)
0000A0D8 E3F0 D0A8 0024          000000A8  15664          STG   15,168(0,13)
0000A0DE E548 D0B0 066C          000000B0  15665          MVGHI 176(13),1644
0000A0E4 E3F0 3008 0004          00000008  15666          LG    15,8(0,3)   ; rktp
                                                                                                                           Page  313 
  Active Usings: @REGION_1489_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A0EA E3F0 D0B8 0024          000000B8  15667          STG   15,184(0,13)
0000A0F0 4110 D0A8               000000A8  15668          LA    1,168(0,13)
0000A0F4 E3F0 C100 0004          0000A180  15669          LG    15,@lit_1489_597 ; rd_kafka_toppar_keep0
0000A0FA                                   15670 @@gen_label885 DS    0H
0000A0FA 05EF                              15671          BALR  14,15
0000A0FC                                   15672 @@gen_label886 DS    0H
0000A0FC E3F0 2000 0024          00000000  15673          STG   15,0(0,2)
                                           15674 * ***
                                           15675 * ***           rd_kafka_msgq_init(&rkmb->msgq);
0000A102 41F0 2008               00000008  15676          LA    15,8(0,2)
0000A106 E3F0 D0A8 0024          000000A8  15677          STG   15,168(0,13)
0000A10C 4110 D0A8               000000A8  15678          LA    1,168(0,13)
0000A110 E3F0 C110 0004          0000A190  15679          LG    15,@lit_1489_598 ; rd_kafka_msgq_init
0000A116                                   15680 @@gen_label887 DS    0H
0000A116 05EF                              15681          BALR  14,15
0000A118                                   15682 @@gen_label888 DS    0H
                                           15683 * ***
                                           15684 * ***           rkmb->pid = pid;
0000A118 D20F 2028 3010 00000028 00000010  15685          MVC   40(16,2),16(3)
                                           15686 * ***           rkmb->first_seq = -1;
0000A11E E54C 2038 FFFF          00000038  15687          MVHI  56(2),-1    ; offset of first_seq in rd_kafka_msgbatch_s
                                           15688 * ***           rkmb->epoch_base_msgid = epoch_base_msgid;
0000A124 E3F0 3020 0004          00000020  15689          LG    15,32(0,3)  ; epoch_base_msgid
0000A12A E3F0 2048 0024          00000048  15690          STG   15,72(0,2)  ; offset of epoch_base_msgid in rd_kafka_msg*
                                                                batch_s
                                           15691 * ***   }
0000A130                                   15692 @ret_lab_1489 DS 0H
                                           15693 * * **** Start of Epilogue
                                           15694          DCCEPIL
0000A130                                   15695+         ds 0h                                                          01-DCCEP
                                           15696+* Epilog
0000A130 D707 D088 D088 00000088 00000088  15697+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A136 E3D0 D080 0004          00000080  15698+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A13C E3C0 D090 0004          00000090  15699+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A142 E3B0 C018 0004          00000018  15700+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A148 E3C0 B010 0021          00000010  15701+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A14E E3E0 D008 0004          00000008  15702+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A154 EB1C D020 0004          00000020  15703+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A15A 078E                              15704+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A15C E3F0 D010 0024          00000010  15705+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A162 E300 D018 0024          00000018  15706+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A168 E3F0 D090 0004          00000090  15707+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A16E E3F0 F018 0004          00000018  15708+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A174 47F0 F040               00000040  15709+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15710+* End of Epilog
                                           15711 * * **** End of Epilogue
0000A178                                   15712          DS    0D
0000A178 000000C0                          15713 @FRAMESIZE_1489 DC F'192'
0000A17C 00000000
0000A180 0000000000002768                  15714 @lit_1489_597 DC AD(rd_kafka_toppar_keep0)
0000A188 000000000000E868                  15715 @lit_1489_596 DC AD(@DATA)
0000A190 0000000000001628                  15716 @lit_1489_598 DC AD(rd_kafka_msgq_init)
                                                                                                                           Page  314 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15717          DROP  12
                                           15718 *
                                           15719 *   DSECT for automatic variables in "rd_kafka_msgbatch_init"
                                           15720 *      (FUNCTION #1489)
                                           15721 *
00000000                00000000 000000A8  15722 @AUTO#rd_kafka_msgbatch_init DSECT
00000000                                   15723          DS    XL168
                                           15724 *
0000A198                00000000 0000E868  15725 @CODE    CSECT
                                           15726 *
                                           15727 *
                                           15728 *
                                           15729 * ....... start of rd_kafka_msgbatch_set_first_msg
                                           15730 rd_kafka_msgbatch_set_first_msg ALIAS X'99846D92818692816D94A2878281A38*
                                                                3886DA285A36D868999A2A36D94A287'
0000A198                                   15731 @LNAME1490 DS  0H
0000A198 0000001F                          15732          DC    X'0000001F'
0000A19C 99846D9281869281                  15733          DC    C'rd_kafka_msgbatch_set_first_msg'
0000A1BB 00                                15734          DC    X'00'
                                           15735 rd_kafka_msgbatch_set_first_msg DCCPRLG CINDEX=1490,BASER=12,FRAME=200,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1490
                                           15736          macro
                                           15737          dccextrn &m
                                           15738          gblc    &$dccext(1000)
                                           15739          gbla    &$dccexti
                                           15740          lcla    &i
                                           15741 &$dccext(&$dccexti+1) setc    '&m'
                                           15742 &i       seta    1
                                           15743 .loop    aif    (&i gt &$dccexti).around
                                           15744          aif    ('&$dccext(&i)' eq '&m').getout
                                           15745 &i       seta    &i+1
                                           15746          ago     .loop
                                           15747 .around  anop
                                           15748 &$dccexti seta &$dccexti+1
                                           15749          extrn  &m
                                           15750 .getout  anop
                                           15751          mend
0000A1C0                                   15752+$eye0273    ds    0d                                                    02-DCCCA
0000A1C0 C4C3C3                            15753+         dc cl3'DCC'                                                    02-DCCCA
0000A1C3 01                                15754+         dc xl1'01' format one                                          02-DCCCA
0000A1C4 00000000                          15755+         dc a(0)                                                        02-DCCCA
0000A1C8 000000000000A232                  15756+         dc ad(@PER_1490)                                               02-DCCCA
0000A1D0 00000000000000C8                  15757+         dc ad(200)                                                     02-DCCCA
0000A1D8 0000000000000000                  15758+         dc ad(0)                                                       02-DCCCA
0000A1E0 0000000000001000                  15759+         dc ad(4096)                                                    02-DCCCA
0000A1E8 20                                15760+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A1E9 03                                15761+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A1EA 03                                15762+         dc al1(3)                                                      02-DCCCA
0000A1EB 08                                15763+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A1EC 00                                15764+         dc bl.8'00000000'                                              02-DCCCA
0000A1ED 000000                            15765+         dc al3(0)                                                      02-DCCCA
0000A1F0 000000000000A198                  15766+         dc ad(@LNAME1490)                                              02-DCCCA
                                                                                                                           Page  315 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A1F8                                   15767+         ds 0d                                                          02-DCCCA
0000A1F8 000000000000A1C0                  15768+         dc ad($eye0273)                                                02-DCCCA
0000A200 0000000000000000                  15769+         dc ad(0)                                                       02-DCCCA
0000A208                                   15770+         ds    0d                                                       01-DCCPR
                                           15771+         entry rd_kafka_msgbatch_set_first_msg                          01-DCCPR
0000A208                                   15772+rd_kafka_msgbatch_set_first_msg ds 0d                                   01-DCCPR
0000A208                                   15773+@REGION_1490_1 ds 0h                                                    01-DCCPR
0000A208 EBEC D008 0024          00000008  15774+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A20E E3E0 D088 0004          00000088  15775+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A214 E3C0 D090 0004          00000090  15776+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A21A B904 002E                         15777+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A21E E3B0 C018 0004          00000018  15778+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A224 A7EB 00C8               000000C8  15779+         aghi  14,200              increase by frame size               01-DCCPR
0000A228 E3E0 C020 0021          00000020  15780+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A22E 4720 B020               00000020  15781+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A232                                   15782+@PER_1490 ds   0h                                                       01-DCCPR
0000A232 EBDE 2080 0024          00000080  15783+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A238 E3C0 2090 0024          00000090  15784+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A23E B904 00D2                         15785+         lgr   13,2                set real frame pointer               01-DCCPR
0000A242 B904 00CF                         15786+         lgr   12,15               set base reg                         01-DCCPR
                        0000A208           15787+         using @REGION_1490_1,12                                        01-DCCPR
                                           15788 * ******* End of Prologue
                                           15789 * *
                                           15790 * ***           ((rkmb->first_msgid == 0) ? (void)0 : __assert(__func_\
                                           15791 * _, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1662, "rkmb->firs\
                                           15792 * t_msgid == 0"));
0000A246 EB23 1000 0004          00000000  15793          LMG   2,3,0(1)    ; rkmb
0000A24C E558 2040 0000          00000040  15794          CGHSI 64(2),0
0000A252 4780 C08A               0000A292  15795          BE    @L1128
0000A256                                   15796 @L1127   DS    0H
0000A256 E3F0 C130 0004          0000A338  15797          LG    15,@lit_1490_600
0000A25C 41F0 F29A               0000029A  15798          LA    15,666(0,15)
0000A260 E3F0 D0A8 0024          000000A8  15799          STG   15,168(0,13)
0000A266 E3F0 C128 0004          0000A330  15800          LG    15,@lit_1490_601
0000A26C 4110 F2C2               000002C2  15801          LA    1,706(0,15)
0000A270 E310 D0B0 0024          000000B0  15802          STG   1,176(0,13)
0000A276 E548 D0B8 067E          000000B8  15803          MVGHI 184(13),1662
0000A27C 41F0 F5E4               000005E4  15804          LA    15,1508(0,15)
0000A280 E3F0 D0C0 0024          000000C0  15805          STG   15,192(0,13)
0000A286 4110 D0A8               000000A8  15806          LA    1,168(0,13)
0000A28A E3F0 C120 0004          0000A328  15807          LG    15,@lit_1490_602 ; __assert
0000A290                                   15808 @@gen_label890 DS    0H
0000A290 05EF                              15809          BALR  14,15
0000A292                                   15810 @@gen_label891 DS    0H
0000A292                                   15811 @L1128   DS    0H
                                           15812 * ***
                                           15813 * ***           if (!((rkmb->pid).id != -1))
0000A292 E558 2028 FFFF          00000028  15814          CGHSI 40(2),-1
0000A298 4780 C0CE               0000A2D6  15815          BE    @ret_lab_1490
                                           15816 * ***                   return;
0000A29C                                   15817 @L1129   DS    0H
                                           15818 * ***
                                                                                                                           Page  316 
  Active Usings: @REGION_1490_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15819 * ***           rkmb->first_msgid = rkm->rkm_u.producer.msgid;
0000A29C E3F0 3090 0004          00000090  15820          LG    15,144(0,3) ; offset of msgid in 0000042
0000A2A2 E3F0 2040 0024          00000040  15821          STG   15,64(0,2)  ; offset of first_msgid in rd_kafka_msgbatch*
                                                                _s
                                           15822 * ***
                                           15823 * ***
                                           15824 * ***
                                           15825 * ***
                                           15826 * ***           rkmb->first_seq = rd_kafka_seq_wrap(rkm->rkm_u.produce\
                                           15827 * r.msgid -
                                           15828 * ***                                               rkmb->epoch_base_m\
                                           15829 * sgid);
0000A2A8 E3F0 3090 0004          00000090  15830          LG    15,144(0,3) ; offset of msgid in 0000042
0000A2AE E3F0 2048 000B          00000048  15831          SLG   15,72(0,2)
0000A2B4 E3F0 D0A8 0024          000000A8  15832          STG   15,168(0,13)
0000A2BA 4110 D0A8               000000A8  15833          LA    1,168(0,13)
0000A2BE E3F0 C138 0004          0000A340  15834          LG    15,@lit_1490_603 ; rd_kafka_seq_wrap
0000A2C4                                   15835 @@gen_label893 DS    0H
0000A2C4 05EF                              15836          BALR  14,15
0000A2C6                                   15837 @@gen_label894 DS    0H
0000A2C6 50F0 2038               00000038  15838          ST    15,56(0,2)
                                           15839 * ***
                                           15840 * ***
                                           15841 * ***   # 1683 "C:\asgkafka\librdkafka\src\rdkafka_msg.c"
                                           15842 * ***           rkmb->last_msgid = rkm->rkm_u.producer.last_msgid;
0000A2CA E3F0 3098 0004          00000098  15843          LG    15,152(0,3) ; offset of last_msgid in 0000042
0000A2D0 E3F0 2050 0024          00000050  15844          STG   15,80(0,2)  ; offset of last_msgid in rd_kafka_msgbatch_*
                                                                s
                                           15845 * ***   }
0000A2D6                                   15846 @ret_lab_1490 DS 0H
                                           15847 * * **** Start of Epilogue
                                           15848          DCCEPIL
0000A2D6                                   15849+         ds 0h                                                          01-DCCEP
                                           15850+* Epilog
0000A2D6 D707 D088 D088 00000088 00000088  15851+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A2DC E3D0 D080 0004          00000080  15852+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A2E2 E3C0 D090 0004          00000090  15853+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A2E8 E3B0 C018 0004          00000018  15854+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A2EE E3C0 B010 0021          00000010  15855+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A2F4 E3E0 D008 0004          00000008  15856+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A2FA EB1C D020 0004          00000020  15857+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A300 078E                              15858+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A302 E3F0 D010 0024          00000010  15859+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A308 E300 D018 0024          00000018  15860+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A30E E3F0 D090 0004          00000090  15861+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A314 E3F0 F018 0004          00000018  15862+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A31A 47F0 F040               00000040  15863+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15864+* End of Epilog
                                           15865 * * **** End of Epilogue
0000A320                                   15866          DS    0D
0000A320 000000C8                          15867 @FRAMESIZE_1490 DC F'200'
0000A324 00000000
                                                                                                                           Page  317 
  Active Usings: @REGION_1490_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A328 0000000000000000                  15868 @lit_1490_602 DC AD(__assert)
0000A330 000000000000ECA4                  15869 @lit_1490_601 DC AD(@strings@)
0000A338 000000000000E868                  15870 @lit_1490_600 DC AD(@DATA)
0000A340 0000000000001C38                  15871 @lit_1490_603 DC AD(rd_kafka_seq_wrap)
                                           15872          DROP  12
                                           15873 *
                                           15874 *   DSECT for automatic variables in "rd_kafka_msgbatch_set_first_msg"
                                           15875 *      (FUNCTION #1490)
                                           15876 *
00000000                00000000 000000A8  15877 @AUTO#rd_kafka_msgbatch_set_first_msg DSECT
00000000                                   15878          DS    XL168
                                           15879 *
0000A348                00000000 0000E868  15880 @CODE    CSECT
                                           15881 *
                                           15882 *
                                           15883 *
                                           15884 * ....... start of rd_kafka_msgbatch_ready_produce
                                           15885 rd_kafka_msgbatch_ready_produce ALIAS X'99846D92818692816D94A2878281A38*
                                                                3886D99858184A86D97999684A48385'
0000A348                                   15886 @LNAME1491 DS  0H
0000A348 0000001F                          15887          DC    X'0000001F'
0000A34C 99846D9281869281                  15888          DC    C'rd_kafka_msgbatch_ready_produce'
0000A36B 00                                15889          DC    X'00'
                                           15890 rd_kafka_msgbatch_ready_produce DCCPRLG CINDEX=1491,BASER=12,FRAME=192,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1491
                                           15891          macro
                                           15892          dccextrn &m
                                           15893          gblc    &$dccext(1000)
                                           15894          gbla    &$dccexti
                                           15895          lcla    &i
                                           15896 &$dccext(&$dccexti+1) setc    '&m'
                                           15897 &i       seta    1
                                           15898 .loop    aif    (&i gt &$dccexti).around
                                           15899          aif    ('&$dccext(&i)' eq '&m').getout
                                           15900 &i       seta    &i+1
                                           15901          ago     .loop
                                           15902 .around  anop
                                           15903 &$dccexti seta &$dccexti+1
                                           15904          extrn  &m
                                           15905 .getout  anop
                                           15906          mend
0000A370                                   15907+$eye0276    ds    0d                                                    02-DCCCA
0000A370 C4C3C3                            15908+         dc cl3'DCC'                                                    02-DCCCA
0000A373 01                                15909+         dc xl1'01' format one                                          02-DCCCA
0000A374 00000000                          15910+         dc a(0)                                                        02-DCCCA
0000A378 000000000000A3E2                  15911+         dc ad(@PER_1491)                                               02-DCCCA
0000A380 00000000000000C0                  15912+         dc ad(192)                                                     02-DCCCA
0000A388 0000000000000000                  15913+         dc ad(0)                                                       02-DCCCA
0000A390 0000000000001000                  15914+         dc ad(4096)                                                    02-DCCCA
0000A398 20                                15915+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A399 03                                15916+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A39A 03                                15917+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  318 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A39B 08                                15918+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A39C 00                                15919+         dc bl.8'00000000'                                              02-DCCCA
0000A39D 000000                            15920+         dc al3(0)                                                      02-DCCCA
0000A3A0 000000000000A348                  15921+         dc ad(@LNAME1491)                                              02-DCCCA
0000A3A8                                   15922+         ds 0d                                                          02-DCCCA
0000A3A8 000000000000A370                  15923+         dc ad($eye0276)                                                02-DCCCA
0000A3B0 0000000000000000                  15924+         dc ad(0)                                                       02-DCCCA
0000A3B8                                   15925+         ds    0d                                                       01-DCCPR
                                           15926+         entry rd_kafka_msgbatch_ready_produce                          01-DCCPR
0000A3B8                                   15927+rd_kafka_msgbatch_ready_produce ds 0d                                   01-DCCPR
0000A3B8                                   15928+@REGION_1491_1 ds 0h                                                    01-DCCPR
0000A3B8 EBEC D008 0024          00000008  15929+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A3BE E3E0 D088 0004          00000088  15930+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A3C4 E3C0 D090 0004          00000090  15931+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A3CA B904 002E                         15932+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A3CE E3B0 C018 0004          00000018  15933+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A3D4 A7EB 00C0               000000C0  15934+         aghi  14,192              increase by frame size               01-DCCPR
0000A3D8 E3E0 C020 0021          00000020  15935+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A3DE 4720 B020               00000020  15936+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A3E2                                   15937+@PER_1491 ds   0h                                                       01-DCCPR
0000A3E2 EBDE 2080 0024          00000080  15938+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A3E8 E3C0 2090 0024          00000090  15939+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A3EE B904 00D2                         15940+         lgr   13,2                set real frame pointer               01-DCCPR
0000A3F2 B904 00CF                         15941+         lgr   12,15               set base reg                         01-DCCPR
                        0000A3B8           15942+         using @REGION_1491_1,12                                        01-DCCPR
                                           15943 * ******* End of Prologue
                                           15944 * *
                                           15945 * ***           rd_kafka_toppar_t *rktp = rkmb->rktp;
0000A3F6 E320 1000 0004          00000000  15946          LG    2,0(0,1)    ; rkmb
0000A3FC E330 2000 0004          00000000  15947          LG    3,0(0,2)    ; rkmb
                                           15948 * ***           rd_kafka_t *rk = rktp->rktp_rkt->rkt_rk;
0000A402 E3F0 3060 0004          00000060  15949          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000A408 E340 F148 0004          00000148  15950          LG    4,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
                                           15951 * ***
                                           15952 * ***
                                           15953 * ***
                                           15954 * ***
                                           15955 * ***
                                           15956 * ***           if (rd_atomic32_add(&rktp->rktp_msgs_inflight,
                                           15957 * ***                               rd_kafka_msgq_len(&rkmb->msgq)) ==
0000A40E 41F0 2008               00000008  15958          LA    15,8(0,2)
0000A412 E3F0 D0B0 0024          000000B0  15959          STG   15,176(0,13)
0000A418 4110 D0B0               000000B0  15960          LA    1,176(0,13)
0000A41C E350 C120 0004          0000A4D8  15961          LG    5,@lit_1491_605 ; rd_kafka_msgq_len
0000A422 B904 00F5                         15962          LGR   15,5
0000A426                                   15963 @@gen_label895 DS    0H
0000A426 05EF                              15964          BALR  14,15
0000A428                                   15965 @@gen_label896 DS    0H
0000A428 4110 3148               00000148  15966          LA    1,328(0,3)
0000A42C E310 D0B0 0024          000000B0  15967          STG   1,176(0,13)
0000A432 B914 00FF                         15968          LGFR  15,15
0000A436 E3F0 D0B8 0024          000000B8  15969          STG   15,184(0,13)
                                                                                                                           Page  319 
  Active Usings: @REGION_1491_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A43C 4110 D0B0               000000B0  15970          LA    1,176(0,13)
0000A440 E3F0 C128 0004          0000A4E0  15971          LG    15,@lit_1491_606 ; rd_atomic32_add
0000A446                                   15972 @@gen_label897 DS    0H
0000A446 05EF                              15973          BALR  14,15
0000A448                                   15974 @@gen_label898 DS    0H
0000A448 186F                              15975          LR    6,15
                                           15976 * ***               rd_kafka_msgq_len(&rkmb->msgq) &&
0000A44A 41F0 2008               00000008  15977          LA    15,8(0,2)
0000A44E E3F0 D0B0 0024          000000B0  15978          STG   15,176(0,13)
0000A454 4110 D0B0               000000B0  15979          LA    1,176(0,13)
0000A458 B904 00F5                         15980          LGR   15,5
0000A45C                                   15981 @@gen_label899 DS    0H
0000A45C 05EF                              15982          BALR  14,15
0000A45E                                   15983 @@gen_label900 DS    0H
0000A45E 196F                              15984          CR    6,15
0000A460 4770 C0CE               0000A486  15985          BNE   @L1130
                                           15986 * ***               ((rk)->rk_conf.eos.idempotence))
0000A464 E3F0 47E0 0012          000007E0  15987          LT    15,2016(0,4) ; offset of eos in rd_kafka_conf_s
0000A46A 4780 C0CE               0000A486  15988          BZ    @L1130
                                           15989 * ***                   rd_kafka_idemp_inflight_toppar_add(rk, rktp);
0000A46E E340 D0B0 0024          000000B0  15990          STG   4,176(0,13)
0000A474 E330 D0B8 0024          000000B8  15991          STG   3,184(0,13)
0000A47A 4110 D0B0               000000B0  15992          LA    1,176(0,13)
0000A47E E3F0 C130 0004          0000A4E8  15993          LG    15,@lit_1491_608 ; rd_kafka_idemp_inflight_toppar_add
0000A484                                   15994 @@gen_label903 DS    0H
0000A484 05EF                              15995          BALR  14,15
0000A486                                   15996 @@gen_label904 DS    0H
0000A486                                   15997 @L1130   DS    0H
                                           15998 * ***   }
0000A486                                   15999 @ret_lab_1491 DS 0H
                                           16000 * * **** Start of Epilogue
                                           16001          DCCEPIL
0000A486                                   16002+         ds 0h                                                          01-DCCEP
                                           16003+* Epilog
0000A486 D707 D088 D088 00000088 00000088  16004+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A48C E3D0 D080 0004          00000080  16005+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A492 E3C0 D090 0004          00000090  16006+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A498 E3B0 C018 0004          00000018  16007+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A49E E3C0 B010 0021          00000010  16008+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A4A4 E3E0 D008 0004          00000008  16009+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A4AA EB1C D020 0004          00000020  16010+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A4B0 078E                              16011+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A4B2 E3F0 D010 0024          00000010  16012+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A4B8 E300 D018 0024          00000018  16013+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A4BE E3F0 D090 0004          00000090  16014+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A4C4 E3F0 F018 0004          00000018  16015+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A4CA 47F0 F040               00000040  16016+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16017+* End of Epilog
                                           16018 * * **** End of Epilogue
0000A4D0                                   16019          DS    0D
0000A4D0 000000C0                          16020 @FRAMESIZE_1491 DC F'192'
0000A4D4 00000000
                                                                                                                           Page  320 
  Active Usings: @REGION_1491_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A4D8 0000000000001528                  16021 @lit_1491_605 DC AD(rd_kafka_msgq_len)
0000A4E0 0000000000000060                  16022 @lit_1491_606 DC AD(rd_atomic32_add)
0000A4E8 0000000000000000                  16023 @lit_1491_608 DC AD(rd_kafka_idemp_inflight_toppar_add)
                                           16024          DROP  12
                                           16025 *
                                           16026 *   DSECT for automatic variables in "rd_kafka_msgbatch_ready_produce"
                                           16027 *      (FUNCTION #1491)
                                           16028 *
00000000                00000000 000000A8  16029 @AUTO#rd_kafka_msgbatch_ready_produce DSECT
00000000                                   16030          DS    XL168
                                           16031 *
0000A4F0                00000000 0000E868  16032 @CODE    CSECT
                                           16033 *
                                           16034 *
                                           16035 *
                                           16036 * ....... start of rd_kafka_msgq_verify_order0
                                           16037 rd_kafka_msgq_verify_order0 ALIAS X'99846D92818692816D94A287986DA585998*
                                                                986A86D9699848599F0'
0000A4F0                                   16038 @LNAME1342 DS  0H
0000A4F0 0000001B                          16039          DC    X'0000001B'
0000A4F4 99846D9281869281                  16040          DC    C'rd_kafka_msgq_verify_order0'
0000A50F 00                                16041          DC    X'00'
                                           16042 rd_kafka_msgq_verify_order0 DCCPRLG CINDEX=1342,BASER=12,FRAME=248,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1342
                                           16043          macro
                                           16044          dccextrn &m
                                           16045          gblc    &$dccext(1000)
                                           16046          gbla    &$dccexti
                                           16047          lcla    &i
                                           16048 &$dccext(&$dccexti+1) setc    '&m'
                                           16049 &i       seta    1
                                           16050 .loop    aif    (&i gt &$dccexti).around
                                           16051          aif    ('&$dccext(&i)' eq '&m').getout
                                           16052 &i       seta    &i+1
                                           16053          ago     .loop
                                           16054 .around  anop
                                           16055 &$dccexti seta &$dccexti+1
                                           16056          extrn  &m
                                           16057 .getout  anop
                                           16058          mend
0000A510                                   16059+$eye0279    ds    0d                                                    02-DCCCA
0000A510 C4C3C3                            16060+         dc cl3'DCC'                                                    02-DCCCA
0000A513 01                                16061+         dc xl1'01' format one                                          02-DCCCA
0000A514 00000000                          16062+         dc a(0)                                                        02-DCCCA
0000A518 000000000000A582                  16063+         dc ad(@PER_1342)                                               02-DCCCA
0000A520 00000000000000F8                  16064+         dc ad(248)                                                     02-DCCCA
0000A528 0000000000000000                  16065+         dc ad(0)                                                       02-DCCCA
0000A530 0000000000001000                  16066+         dc ad(4096)                                                    02-DCCCA
0000A538 20                                16067+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A539 03                                16068+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A53A 03                                16069+         dc al1(3)                                                      02-DCCCA
0000A53B 08                                16070+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  321 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A53C 00                                16071+         dc bl.8'00000000'                                              02-DCCCA
0000A53D 000000                            16072+         dc al3(0)                                                      02-DCCCA
0000A540 000000000000A4F0                  16073+         dc ad(@LNAME1342)                                              02-DCCCA
0000A548                                   16074+         ds 0d                                                          02-DCCCA
0000A548 000000000000A510                  16075+         dc ad($eye0279)                                                02-DCCCA
0000A550 0000000000000000                  16076+         dc ad(0)                                                       02-DCCCA
0000A558                                   16077+         ds    0d                                                       01-DCCPR
                                           16078+         entry rd_kafka_msgq_verify_order0                              01-DCCPR
0000A558                                   16079+rd_kafka_msgq_verify_order0 ds 0d                                       01-DCCPR
0000A558                                   16080+@REGION_1342_1 ds 0h                                                    01-DCCPR
0000A558 EBEC D008 0024          00000008  16081+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A55E E3E0 D088 0004          00000088  16082+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A564 E3C0 D090 0004          00000090  16083+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A56A B904 002E                         16084+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A56E E3B0 C018 0004          00000018  16085+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A574 A7EB 00F8               000000F8  16086+         aghi  14,248              increase by frame size               01-DCCPR
0000A578 E3E0 C020 0021          00000020  16087+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A57E 4720 B020               00000020  16088+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A582                                   16089+@PER_1342 ds   0h                                                       01-DCCPR
0000A582 EBDE 2080 0024          00000080  16090+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A588 E3C0 2090 0024          00000090  16091+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A58E B904 00D2                         16092+         lgr   13,2                set real frame pointer               01-DCCPR
0000A592 B904 00CF                         16093+         lgr   12,15               set base reg                         01-DCCPR
                        0000A558           16094+         using @REGION_1342_1,12                                        01-DCCPR
0000A596 B904 00B1                         16095          LGR   11,1        ; ptr to parm area
                                           16096 * ******* End of Prologue
                                           16097 * *
0000A59A E360 B000 0004          00000000  16098          LG    6,0(0,11)   ; function
0000A5A0 5870 B00C               0000000C  16099          L     7,12(0,11)  ; line
0000A5A4 E3F0 B010 0004          00000010  16100          LG    15,16(0,11) ; rktp
0000A5AA E380 B018 0004          00000018  16101          LG    8,24(0,11)  ; rkmq
                                           16102 * ***           const rd_kafka_msg_t *rkm;
                                           16103 * ***           uint64_t exp;
                                           16104 * ***           int errcnt = 0;
0000A5B0 A748 0000               00000000  16105          LHI   4,0         ; 0
                                           16106 * ***           int cnt = 0;
0000A5B4 1854                              16107          LR    5,4         ; cnt
                                           16108 * ***           const char *topic = rktp ? rktp->rktp_rkt->rkt_topic->\
                                           16109 * str : "n/a";
0000A5B6 B902 001F                         16110          LTGR  1,15
0000A5BA 4780 C0B8               0000A610  16111          BZ    @L1131
0000A5BE E310 F060 0004          00000060  16112          LG    1,96(0,15)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000A5C4 E310 1080 0004          00000080  16113          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
0000A5CA E390 1008 0004          00000008  16114          LG    9,8(0,1)    ; offset of str in rd_kafkap_str_s
0000A5D0 47F0 C0C2               0000A61A  16115          B     @L1132
0000A5D8                                   16116          DS    0D
0000A5D8 000000F8                          16117 @FRAMESIZE_1342 DC F'248'
0000A5DC 00000000
0000A5E0 000000000000ECA4                  16118 @lit_1342_612 DC AD(@strings@)
0000A5E8 0000000000001528                  16119 @lit_1342_614 DC AD(rd_kafka_msgq_len)
0000A5F0 0000000000001A18                  16120 @lit_1342_615 DC AD(rd_kafka_msgq_first)
0000A5F8 0000000000000000                  16121 @lit_1342_617 DC AD(printf)
                                                                                                                           Page  322 
  Active Usings: @REGION_1342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A600 0000000000000000                  16122 @lit_1342_624 DC AD(__assert)
0000A608 000000000000E868                  16123 @lit_1342_622 DC AD(@DATA)
0000A610                                   16124 @L1131   DS    0H
0000A610 E310 C088 0004          0000A5E0  16125          LG    1,@lit_1342_612
0000A616 4190 15FC               000005FC  16126          LA    9,1532(0,1)
0000A61A                                   16127 @L1132   DS    0H
                                           16128 * ***           int32_t partition = rktp ? rktp->rktp_partition : -1;
0000A61A B902 001F                         16129          LTGR  1,15
0000A61E 4780 C0D2               0000A62A  16130          BZ    @L1133
0000A622 58A0 F068               00000068  16131          L     10,104(0,15) ; offset of rktp_partition in rd_kafka_topp*
                                                                ar_s
0000A626 47F0 C0D6               0000A62E  16132          B     @L1134
0000A62A                                   16133 @L1133   DS    0H
0000A62A A7A8 FFFF               0000FFFF  16134          LHI   10,-1       ; -1
0000A62E                                   16135 @L1134   DS    0H
                                           16136 * ***
                                           16137 * ***           if (rd_kafka_msgq_len(rkmq) == 0)
0000A62E E380 D0B0 0024          000000B0  16138          STG   8,176(0,13)
0000A634 4110 D0B0               000000B0  16139          LA    1,176(0,13)
0000A638 E3F0 C090 0004          0000A5E8  16140          LG    15,@lit_1342_614 ; rd_kafka_msgq_len
0000A63E                                   16141 @@gen_label907 DS    0H
0000A63E 05EF                              16142          BALR  14,15
0000A640                                   16143 @@gen_label908 DS    0H
0000A640 12FF                              16144          LTR   15,15
0000A642 4780 C2DE               0000A836  16145          BE    @ret_lab_1342
                                           16146 * ***                   return;
0000A646                                   16147 @L1135   DS    0H
                                           16148 * ***
                                           16149 * ***           if (exp_first_msgid)
0000A646 E330 B020 0002          00000020  16150          LTG   3,32(0,11)  ; exp_first_msgid
0000A64C 4780 C0FC               0000A654  16151          BZ    @L1136
                                           16152 * ***                   exp = exp_first_msgid;
0000A650 47F0 C120               0000A678  16153          B     @L1137
                                           16154 * ***           else {
0000A654                                   16155 @L1136   DS    0H
                                           16156 * ***                   exp = rd_kafka_msgq_first(rkmq)->rkm_u.produce\
                                           16157 * r.msgid;
0000A654 E380 D0B0 0024          000000B0  16158          STG   8,176(0,13)
0000A65A 4110 D0B0               000000B0  16159          LA    1,176(0,13)
0000A65E E3F0 C098 0004          0000A5F0  16160          LG    15,@lit_1342_615 ; rd_kafka_msgq_first
0000A664                                   16161 @@gen_label911 DS    0H
0000A664 05EF                              16162          BALR  14,15
0000A666                                   16163 @@gen_label912 DS    0H
0000A666 E330 F090 0004          00000090  16164          LG    3,144(0,15) ; offset of msgid in 0000042
                                           16165 * ***                   if (exp == 0)
0000A66C B902 00F3                         16166          LTGR  15,3
0000A670 4770 C120               0000A678  16167          BNE   @L1137
                                           16168 * ***                           return;
0000A674 47F0 C2DE               0000A836  16169          B     @ret_lab_1342
                                           16170 * ***           }
0000A678                                   16171 @L1137   DS    0H
                                           16172 * ***
                                                                                                                           Page  323 
  Active Usings: @REGION_1342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16173 * ***           for ((rkm) = ((&rkmq->rkmq_msgs)->tqh_first); (rkm) !=\
                                           16174 *  (((void *)0)); (rkm) = ((rkm)->rkm_link .tqe_next)) {
0000A678 E320 8000 0004          00000000  16175          LG    2,0(0,8)    ; rkmq
0000A67E 47F0 C294               0000A7EC  16176          B     @L1140
0000A682                                   16177 @L1139   DS    0H
                                           16178 * ***   # 1745 "C:\asgkafka\librdkafka\src\rdkafka_msg.c"
                                           16179 * ***                   if (gapless &&
0000A682 9500 B02F      0000002F 00000000  16180          CLI   47(11),0
0000A686 4780 C1A2               0000A6FA  16181          BE    @L1143
                                           16182 * ***                       rkm->rkm_u.producer.msgid != exp) {
0000A68A E330 2090 0021          00000090  16183          CLG   3,144(0,2)
0000A690 4780 C1A2               0000A6FA  16184          BE    @L1143
                                           16185 * ***                           printf("%s:%d: %s [%" "d" "]: rkm #%d \
                                           16186 * (%p) "
                                           16187 * ***                                  function, line,
                                           16188 * ***                                  topic, partition,
                                           16189 * ***                                  cnt, rkm, rkm->rkm_u.producer.m\
                                           16190 * sgid,
                                           16191 * ***                                  exp);
                                           16192 * ***                                  "msgid %" "llu" ": "
                                           16193 * ***                                  "expected msgid %" "llu" "\n",
0000A694 E3F0 C088 0004          0000A5E0  16194          LG    15,@lit_1342_612
0000A69A 41F0 F600               00000600  16195          LA    15,1536(0,15)
0000A69E E3F0 D0B0 0024          000000B0  16196          STG   15,176(0,13)
0000A6A4 E360 D0B8 0024          000000B8  16197          STG   6,184(0,13)
0000A6AA B914 00F7                         16198          LGFR  15,7
0000A6AE E3F0 D0C0 0024          000000C0  16199          STG   15,192(0,13)
0000A6B4 E390 D0C8 0024          000000C8  16200          STG   9,200(0,13)
0000A6BA B914 00FA                         16201          LGFR  15,10
0000A6BE E3F0 D0D0 0024          000000D0  16202          STG   15,208(0,13)
0000A6C4 B914 00F5                         16203          LGFR  15,5
0000A6C8 E3F0 D0D8 0024          000000D8  16204          STG   15,216(0,13)
0000A6CE E320 D0E0 0024          000000E0  16205          STG   2,224(0,13)
0000A6D4 E3F0 2090 0004          00000090  16206          LG    15,144(0,2)
0000A6DA E3F0 D0E8 0024          000000E8  16207          STG   15,232(0,13)
0000A6E0 E330 D0F0 0024          000000F0  16208          STG   3,240(0,13)
0000A6E6 4110 D0B0               000000B0  16209          LA    1,176(0,13)
0000A6EA E3F0 C0A0 0004          0000A5F8  16210          LG    15,@lit_1342_617 ; printf
0000A6F0                                   16211 @@gen_label916 DS    0H
0000A6F0 05EF                              16212          BALR  14,15
0000A6F2                                   16213 @@gen_label917 DS    0H
                                           16214 * ***                           errcnt++;
0000A6F2 A74A 0001               00000001  16215          AHI   4,1
                                           16216 * ***                   } else if (!gapless && rkm->rkm_u.producer.msg\
                                           16217 * id < exp) {
0000A6F6 47F0 C222               0000A77A  16218          B     @L1144
0000A6FA                                   16219 @L1143   DS    0H
0000A6FA 9500 B02F      0000002F 00000000  16220          CLI   47(11),0
0000A6FE 4770 C21E               0000A776  16221          BNE   @L1145
0000A702 E3F0 2090 0004          00000090  16222          LG    15,144(0,2) ; offset of msgid in 0000042
0000A708 B921 00F3                         16223          CLGR  15,3
0000A70C 47B0 C21E               0000A776  16224          BNL   @L1145
                                                                                                                           Page  324 
  Active Usings: @REGION_1342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16225 * ***                           printf("%s:%d: %s [%" "d" "]: rkm #%d \
                                           16226 * (%p) "
                                           16227 * ***                                  function, line,
                                           16228 * ***                                  topic, partition,
                                           16229 * ***                                  cnt, rkm, rkm->rkm_u.producer.m\
                                           16230 * sgid,
                                           16231 * ***                                  exp);
                                           16232 * ***                                  "msgid %" "llu" ": "
                                           16233 * ***                                  "expected increased msgid >= %"\
                                           16234 *  "llu" "\n",
0000A710 E3F0 C088 0004          0000A5E0  16235          LG    15,@lit_1342_612
0000A716 41F0 F63E               0000063E  16236          LA    15,1598(0,15)
0000A71A E3F0 D0B0 0024          000000B0  16237          STG   15,176(0,13)
0000A720 E360 D0B8 0024          000000B8  16238          STG   6,184(0,13)
0000A726 B914 00F7                         16239          LGFR  15,7
0000A72A E3F0 D0C0 0024          000000C0  16240          STG   15,192(0,13)
0000A730 E390 D0C8 0024          000000C8  16241          STG   9,200(0,13)
0000A736 B914 00FA                         16242          LGFR  15,10
0000A73A E3F0 D0D0 0024          000000D0  16243          STG   15,208(0,13)
0000A740 B914 00F5                         16244          LGFR  15,5
0000A744 E3F0 D0D8 0024          000000D8  16245          STG   15,216(0,13)
0000A74A E320 D0E0 0024          000000E0  16246          STG   2,224(0,13)
0000A750 E3F0 2090 0004          00000090  16247          LG    15,144(0,2)
0000A756 E3F0 D0E8 0024          000000E8  16248          STG   15,232(0,13)
0000A75C E330 D0F0 0024          000000F0  16249          STG   3,240(0,13)
0000A762 4110 D0B0               000000B0  16250          LA    1,176(0,13)
0000A766 E3F0 C0A0 0004          0000A5F8  16251          LG    15,@lit_1342_617 ; printf
0000A76C                                   16252 @@gen_label920 DS    0H
0000A76C 05EF                              16253          BALR  14,15
0000A76E                                   16254 @@gen_label921 DS    0H
                                           16255 * ***                           errcnt++;
0000A76E A74A 0001               00000001  16256          AHI   4,1
                                           16257 * ***                   } else
0000A772 47F0 C222               0000A77A  16258          B     @L1144
0000A776                                   16259 @L1145   DS    0H
                                           16260 * ***                           exp++;
0000A776 A73B 0001               00000001  16261          AGHI  3,1
0000A77A                                   16262 @L1146   DS    0H
                                           16263 * ***
                                           16264 * ***                   if (cnt >= rkmq->rkmq_msg_cnt) {
0000A77A                                   16265 @L1144   DS    0H
0000A77A 5950 8010               00000010  16266          C     5,16(0,8)
0000A77E 4740 C28A               0000A7E2  16267          BL    @L1147
                                           16268 * ***                           printf("%s:%d: %s [%" "d" "]: rkm #%d \
                                           16269 * (%p) "
                                           16270 * ***                                  function, line,
                                           16271 * ***                                  topic, partition,
                                           16272 * ***                                  cnt, rkm, rkm->rkm_u.producer.m\
                                           16273 * sgid);
                                           16274 * ***                                  "msgid %" "llu" ": loop in queu\
                                           16275 * e?\n",
0000A782 E3F0 C088 0004          0000A5E0  16276          LG    15,@lit_1342_612
                                                                                                                           Page  325 
  Active Usings: @REGION_1342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A788 41F0 F68A               0000068A  16277          LA    15,1674(0,15)
0000A78C E3F0 D0B0 0024          000000B0  16278          STG   15,176(0,13)
0000A792 E360 D0B8 0024          000000B8  16279          STG   6,184(0,13)
0000A798 B914 00F7                         16280          LGFR  15,7
0000A79C E3F0 D0C0 0024          000000C0  16281          STG   15,192(0,13)
0000A7A2 E390 D0C8 0024          000000C8  16282          STG   9,200(0,13)
0000A7A8 B914 00FA                         16283          LGFR  15,10
0000A7AC E3F0 D0D0 0024          000000D0  16284          STG   15,208(0,13)
0000A7B2 B914 00F5                         16285          LGFR  15,5
0000A7B6 E3F0 D0D8 0024          000000D8  16286          STG   15,216(0,13)
0000A7BC E320 D0E0 0024          000000E0  16287          STG   2,224(0,13)
0000A7C2 E3F0 2090 0004          00000090  16288          LG    15,144(0,2)
0000A7C8 E3F0 D0E8 0024          000000E8  16289          STG   15,232(0,13)
0000A7CE 4110 D0B0               000000B0  16290          LA    1,176(0,13)
0000A7D2 E3F0 C0A0 0004          0000A5F8  16291          LG    15,@lit_1342_617 ; printf
0000A7D8                                   16292 @@gen_label923 DS    0H
0000A7D8 05EF                              16293          BALR  14,15
0000A7DA                                   16294 @@gen_label924 DS    0H
                                           16295 * ***                           errcnt++;
0000A7DA A74A 0001               00000001  16296          AHI   4,1
                                           16297 * ***                           break;
0000A7DE 47F0 C29C               0000A7F4  16298          B     @L1141
                                           16299 * ***                   }
0000A7E2                                   16300 @L1147   DS    0H
                                           16301 * ***
                                           16302 * ***                   cnt++;
0000A7E2 A75A 0001               00000001  16303          AHI   5,1
                                           16304 * ***
                                           16305 * ***           }
0000A7E6 E320 2048 0004          00000048  16306          LG    2,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
0000A7EC                                   16307 @L1140   DS    0H
0000A7EC B902 00F2                         16308          LTGR  15,2
0000A7F0 4770 C12A               0000A682  16309          BNE   @L1139
0000A7F4                                   16310 @L1141   DS    0H
                                           16311 * ***
                                           16312 * ***           ((!errcnt) ? (void)0 : __assert(__func__, "C:\\asgkafk\
                                           16313 * a\\librdkafka\\src\\rdkafka_msg.c", 1781, "!errcnt"));
0000A7F4 1244                              16314          LTR   4,4
0000A7F6 4780 C2DE               0000A836  16315          BZ    @L1149
0000A7FA                                   16316 @L1148   DS    0H
0000A7FA E3F0 C0B0 0004          0000A608  16317          LG    15,@lit_1342_622
0000A800 41F0 F2BA               000002BA  16318          LA    15,698(0,15)
0000A804 E3F0 D0B0 0024          000000B0  16319          STG   15,176(0,13)
0000A80A E3F0 C088 0004          0000A5E0  16320          LG    15,@lit_1342_612
0000A810 4110 F2C2               000002C2  16321          LA    1,706(0,15)
0000A814 E310 D0B8 0024          000000B8  16322          STG   1,184(0,13)
0000A81A E548 D0C0 06F5          000000C0  16323          MVGHI 192(13),1781
0000A820 41F0 F6C4               000006C4  16324          LA    15,1732(0,15)
0000A824 E3F0 D0C8 0024          000000C8  16325          STG   15,200(0,13)
0000A82A 4110 D0B0               000000B0  16326          LA    1,176(0,13)
0000A82E E3F0 C0A8 0004          0000A600  16327          LG    15,@lit_1342_624 ; __assert
0000A834                                   16328 @@gen_label927 DS    0H
                                                                                                                           Page  326 
  Active Usings: @REGION_1342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A834 05EF                              16329          BALR  14,15
0000A836                                   16330 @@gen_label928 DS    0H
0000A836                                   16331 @L1149   DS    0H
                                           16332 * ***   }
0000A836                                   16333 @ret_lab_1342 DS 0H
                                           16334 * * **** Start of Epilogue
                                           16335          DCCEPIL
0000A836                                   16336+         ds 0h                                                          01-DCCEP
                                           16337+* Epilog
0000A836 D707 D088 D088 00000088 00000088  16338+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A83C E3D0 D080 0004          00000080  16339+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A842 E3C0 D090 0004          00000090  16340+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A848 E3B0 C018 0004          00000018  16341+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A84E E3C0 B010 0021          00000010  16342+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A854 E3E0 D008 0004          00000008  16343+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A85A EB1C D020 0004          00000020  16344+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A860 078E                              16345+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A862 E3F0 D010 0024          00000010  16346+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A868 E300 D018 0024          00000018  16347+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A86E E3F0 D090 0004          00000090  16348+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A874 E3F0 F018 0004          00000018  16349+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A87A 47F0 F040               00000040  16350+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16351+* End of Epilog
                                           16352 * * **** End of Epilogue
                                           16353          DROP  12
                                           16354 *
                                           16355 *   DSECT for automatic variables in "rd_kafka_msgq_verify_order0"
                                           16356 *      (FUNCTION #1342)
                                           16357 *
00000000                00000000 000000B0  16358 @AUTO#rd_kafka_msgq_verify_order0 DSECT
00000000                                   16359          DS    XL168
000000A8                                   16360 rd_kafka_msgq_verify_order0#partition#0 DS 1F ; partition
000000AC                000000AC 000000A8  16361          ORG   @AUTO#rd_kafka_msgq_verify_order0+168
000000A8                                   16362 rd_kafka_msgq_verify_order0#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8  16363          ORG   @AUTO#rd_kafka_msgq_verify_order0+168
000000A8                                   16364 rd_kafka_msgq_verify_order0#errcnt#0 DS 1F ; errcnt
000000AC                000000AC 000000A8  16365          ORG   @AUTO#rd_kafka_msgq_verify_order0+168
000000A8                                   16366 rd_kafka_msgq_verify_order0#exp#0 DS 8XL1 ; exp
                                           16367 *
0000A87E                00000000 0000E868  16368 @CODE    CSECT
                                           16369 *
                                           16370 *
                                           16371 *
                                           16372 * ....... start of ut_rd_kafka_msg_new
                                           16373 ut_rd_kafka_msg_new ALIAS X'A4A36D99846D92818692816D94A2876D9585A6'
0000A87E                                   16374 @LNAME1370 DS  0H
0000A87E 00000013                          16375          DC    X'00000013'
0000A882 A4A36D99846D9281                  16376          DC    C'ut_rd_kafka_msg_new'
0000A895 00                                16377          DC    X'00'
                                           16378 ut_rd_kafka_msg_new DCCPRLG CINDEX=1370,BASER=12,FRAME=208,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1370
                                           16379          macro
                                                                                                                           Page  327 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16380          dccextrn &m
                                           16381          gblc    &$dccext(1000)
                                           16382          gbla    &$dccexti
                                           16383          lcla    &i
                                           16384 &$dccext(&$dccexti+1) setc    '&m'
                                           16385 &i       seta    1
                                           16386 .loop    aif    (&i gt &$dccexti).around
                                           16387          aif    ('&$dccext(&i)' eq '&m').getout
                                           16388 &i       seta    &i+1
                                           16389          ago     .loop
                                           16390 .around  anop
                                           16391 &$dccexti seta &$dccexti+1
                                           16392          extrn  &m
                                           16393 .getout  anop
                                           16394          mend
0000A898                                   16395+$eye0282    ds    0d                                                    02-DCCCA
0000A898 C4C3C3                            16396+         dc cl3'DCC'                                                    02-DCCCA
0000A89B 01                                16397+         dc xl1'01' format one                                          02-DCCCA
0000A89C 00000000                          16398+         dc a(0)                                                        02-DCCCA
0000A8A0 000000000000A90A                  16399+         dc ad(@PER_1370)                                               02-DCCCA
0000A8A8 00000000000000D0                  16400+         dc ad(208)                                                     02-DCCCA
0000A8B0 0000000000000000                  16401+         dc ad(0)                                                       02-DCCCA
0000A8B8 0000000000001000                  16402+         dc ad(4096)                                                    02-DCCCA
0000A8C0 20                                16403+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A8C1 03                                16404+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A8C2 03                                16405+         dc al1(3)                                                      02-DCCCA
0000A8C3 08                                16406+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A8C4 00                                16407+         dc bl.8'00000000'                                              02-DCCCA
0000A8C5 000000                            16408+         dc al3(0)                                                      02-DCCCA
0000A8C8 000000000000A87E                  16409+         dc ad(@LNAME1370)                                              02-DCCCA
0000A8D0                                   16410+         ds 0d                                                          02-DCCCA
0000A8D0 000000000000A898                  16411+         dc ad($eye0282)                                                02-DCCCA
0000A8D8 0000000000000000                  16412+         dc ad(0)                                                       02-DCCCA
0000A8E0                                   16413+         ds    0d                                                       01-DCCPR
                                           16414+         entry ut_rd_kafka_msg_new                                      01-DCCPR
0000A8E0                                   16415+ut_rd_kafka_msg_new ds 0d                                               01-DCCPR
0000A8E0                                   16416+@REGION_1370_1 ds 0h                                                    01-DCCPR
0000A8E0 EBEC D008 0024          00000008  16417+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A8E6 E3E0 D088 0004          00000088  16418+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A8EC E3C0 D090 0004          00000090  16419+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A8F2 B904 002E                         16420+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A8F6 E3B0 C018 0004          00000018  16421+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A8FC A7EB 00D0               000000D0  16422+         aghi  14,208              increase by frame size               01-DCCPR
0000A900 E3E0 C020 0021          00000020  16423+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A906 4720 B020               00000020  16424+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A90A                                   16425+@PER_1370 ds   0h                                                       01-DCCPR
0000A90A EBDE 2080 0024          00000080  16426+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A910 E3C0 2090 0024          00000090  16427+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A916 B904 00D2                         16428+         lgr   13,2                set real frame pointer               01-DCCPR
0000A91A B904 00CF                         16429+         lgr   12,15               set base reg                         01-DCCPR
                        0000A8E0           16430+         using @REGION_1370_1,12                                        01-DCCPR
                                           16431 * ******* End of Prologue
                                                                                                                           Page  328 
  Active Usings: @REGION_1370_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16432 * *
0000A91E E320 1000 0004          00000000  16433          LG    2,0(0,1)    ; msgsize
                                           16434 * ***           rd_kafka_msg_t *rkm;
                                           16435 * ***
                                           16436 * ***           rkm = rd_calloc(1, sizeof(*rkm));
0000A924 E548 D0B0 0001          000000B0  16437          MVGHI 176(13),1
0000A92A E548 D0B8 00A8          000000B8  16438          MVGHI 184(13),168
0000A930 4110 D0B0               000000B0  16439          LA    1,176(0,13)
0000A934 E3F0 C128 0004          0000AA08  16440          LG    15,@lit_1370_626 ; rd_calloc
0000A93A                                   16441 @@gen_label929 DS    0H
0000A93A 05EF                              16442          BALR  14,15
0000A93C                                   16443 @@gen_label930 DS    0H
0000A93C B904 003F                         16444          LGR   3,15
                                           16445 * ***           rkm->rkm_flags      = 0x10000;
0000A940 C019 0001 0000                    16446          IILF  1,X'00010000' ; 65536
0000A946 5010 3058               00000058  16447          ST    1,88(0,3)   ; offset of rkm_flags in rd_kafka_msg_s
                                           16448 * ***           rkm->rkm_rkmessage.offset     = -1001;
0000A94A E548 3038 FC17          00000038  16449          MVGHI 56(3),-1001 ; offset of offset in rd_kafka_message_s
                                           16450 * ***           rkm->rkm_tstype     = RD_KAFKA_TIMESTAMP_NOT_AVAILABLE\
                                           16451 * ;
0000A950 E54C 305C 0000          0000005C  16452          MVHI  92(3),0     ; offset of rkm_tstype in rd_kafka_msg_s
                                           16453 * ***
                                           16454 * ***           if (msgsize) {
0000A956 B902 00F2                         16455          LTGR  15,2
0000A95A 4780 C0D0               0000A9B0  16456          BZ    @L1150
                                           16457 * ***                   ((msgsize <= sizeof(*rkm)) ? (void)0 : __asser\
                                           16458 * t(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1802, "m\
                                           16459 * sgsize <= sizeof(*rkm)"));
0000A95E C22E 0000 00A8                    16460          CLGFI 2,X'000000A8'
0000A964 47D0 C0C4               0000A9A4  16461          BNH   @L1152
0000A968                                   16462 @L1151   DS    0H
0000A968 E3F0 C140 0004          0000AA20  16463          LG    15,@lit_1370_628
0000A96E 41F0 F2D6               000002D6  16464          LA    15,726(0,15)
0000A972 E3F0 D0B0 0024          000000B0  16465          STG   15,176(0,13)
0000A978 E3F0 C138 0004          0000AA18  16466          LG    15,@lit_1370_629
0000A97E 4110 F2C2               000002C2  16467          LA    1,706(0,15)
0000A982 E310 D0B8 0024          000000B8  16468          STG   1,184(0,13)
0000A988 E548 D0C0 070A          000000C0  16469          MVGHI 192(13),1802
0000A98E 41F0 F6CC               000006CC  16470          LA    15,1740(0,15)
0000A992 E3F0 D0C8 0024          000000C8  16471          STG   15,200(0,13)
0000A998 4110 D0B0               000000B0  16472          LA    1,176(0,13)
0000A99C E3F0 C130 0004          0000AA10  16473          LG    15,@lit_1370_630 ; __assert
0000A9A2                                   16474 @@gen_label933 DS    0H
0000A9A2 05EF                              16475          BALR  14,15
0000A9A4                                   16476 @@gen_label934 DS    0H
0000A9A4                                   16477 @L1152   DS    0H
                                           16478 * ***                   rkm->rkm_rkmessage.payload = rkm;
0000A9A4 E330 3018 0024          00000018  16479          STG   3,24(0,3)   ; offset of payload in rd_kafka_message_s
                                           16480 * ***                   rkm->rkm_rkmessage.len = msgsize;
0000A9AA E320 3020 0024          00000020  16481          STG   2,32(0,3)   ; offset of len in rd_kafka_message_s
                                           16482 * ***           }
0000A9B0                                   16483 @L1150   DS    0H
                                                                                                                           Page  329 
  Active Usings: @REGION_1370_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16484 * ***
                                           16485 * ***           return rkm;
0000A9B0 B904 00F3                         16486          LGR   15,3
                                           16487 * ***   }
                                           16488 * * **** Start of Epilogue
                                           16489          DCCEPIL
0000A9B4                                   16490+         ds 0h                                                          01-DCCEP
                                           16491+* Epilog
0000A9B4 D707 D088 D088 00000088 00000088  16492+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A9BA E3D0 D080 0004          00000080  16493+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A9C0 E3C0 D090 0004          00000090  16494+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A9C6 E3B0 C018 0004          00000018  16495+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A9CC E3C0 B010 0021          00000010  16496+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A9D2 E3E0 D008 0004          00000008  16497+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A9D8 EB1C D020 0004          00000020  16498+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A9DE 078E                              16499+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A9E0 E3F0 D010 0024          00000010  16500+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A9E6 E300 D018 0024          00000018  16501+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A9EC E3F0 D090 0004          00000090  16502+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A9F2 E3F0 F018 0004          00000018  16503+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A9F8 47F0 F040               00000040  16504+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16505+* End of Epilog
                                           16506 * * **** End of Epilogue
0000AA00                                   16507          DS    0D
0000AA00 000000D0                          16508 @FRAMESIZE_1370 DC F'208'
0000AA04 00000000
0000AA08 0000000000000570                  16509 @lit_1370_626 DC AD(rd_calloc)
0000AA10 0000000000000000                  16510 @lit_1370_630 DC AD(__assert)
0000AA18 000000000000ECA4                  16511 @lit_1370_629 DC AD(@strings@)
0000AA20 000000000000E868                  16512 @lit_1370_628 DC AD(@DATA)
                                           16513          DROP  12
                                           16514 *
                                           16515 *   DSECT for automatic variables in "ut_rd_kafka_msg_new"
                                           16516 *      (FUNCTION #1370)
                                           16517 *
00000000                00000000 000000A8  16518 @AUTO#ut_rd_kafka_msg_new DSECT
00000000                                   16519          DS    XL168
                                           16520 *
0000AA28                00000000 0000E868  16521 @CODE    CSECT
                                           16522 *
                                           16523 *
                                           16524 *
                                           16525 * ....... start of ut_rd_kafka_msgq_purge
                                           16526 ut_rd_kafka_msgq_purge ALIAS X'A4A36D99846D92818692816D94A287986D97A499*
                                                                8785'
0000AA28                                   16527 @LNAME1371 DS  0H
0000AA28 00000016                          16528          DC    X'00000016'
0000AA2C A4A36D99846D9281                  16529          DC    C'ut_rd_kafka_msgq_purge'
0000AA42 00                                16530          DC    X'00'
                                           16531 ut_rd_kafka_msgq_purge DCCPRLG CINDEX=1371,BASER=12,FRAME=192,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1371
                                           16532          macro
                                                                                                                           Page  330 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16533          dccextrn &m
                                           16534          gblc    &$dccext(1000)
                                           16535          gbla    &$dccexti
                                           16536          lcla    &i
                                           16537 &$dccext(&$dccexti+1) setc    '&m'
                                           16538 &i       seta    1
                                           16539 .loop    aif    (&i gt &$dccexti).around
                                           16540          aif    ('&$dccext(&i)' eq '&m').getout
                                           16541 &i       seta    &i+1
                                           16542          ago     .loop
                                           16543 .around  anop
                                           16544 &$dccexti seta &$dccexti+1
                                           16545          extrn  &m
                                           16546 .getout  anop
                                           16547          mend
0000AA48                                   16548+$eye0285    ds    0d                                                    02-DCCCA
0000AA48 C4C3C3                            16549+         dc cl3'DCC'                                                    02-DCCCA
0000AA4B 01                                16550+         dc xl1'01' format one                                          02-DCCCA
0000AA4C 00000000                          16551+         dc a(0)                                                        02-DCCCA
0000AA50 000000000000AABA                  16552+         dc ad(@PER_1371)                                               02-DCCCA
0000AA58 00000000000000C0                  16553+         dc ad(192)                                                     02-DCCCA
0000AA60 0000000000000000                  16554+         dc ad(0)                                                       02-DCCCA
0000AA68 0000000000001000                  16555+         dc ad(4096)                                                    02-DCCCA
0000AA70 20                                16556+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AA71 03                                16557+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AA72 03                                16558+         dc al1(3)                                                      02-DCCCA
0000AA73 08                                16559+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AA74 00                                16560+         dc bl.8'00000000'                                              02-DCCCA
0000AA75 000000                            16561+         dc al3(0)                                                      02-DCCCA
0000AA78 000000000000AA28                  16562+         dc ad(@LNAME1371)                                              02-DCCCA
0000AA80                                   16563+         ds 0d                                                          02-DCCCA
0000AA80 000000000000AA48                  16564+         dc ad($eye0285)                                                02-DCCCA
0000AA88 0000000000000000                  16565+         dc ad(0)                                                       02-DCCCA
0000AA90                                   16566+         ds    0d                                                       01-DCCPR
                                           16567+         entry ut_rd_kafka_msgq_purge                                   01-DCCPR
0000AA90                                   16568+ut_rd_kafka_msgq_purge ds 0d                                            01-DCCPR
0000AA90                                   16569+@REGION_1371_1 ds 0h                                                    01-DCCPR
0000AA90 EBEC D008 0024          00000008  16570+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000AA96 E3E0 D088 0004          00000088  16571+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000AA9C E3C0 D090 0004          00000090  16572+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AAA2 B904 002E                         16573+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AAA6 E3B0 C018 0004          00000018  16574+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AAAC A7EB 00C0               000000C0  16575+         aghi  14,192              increase by frame size               01-DCCPR
0000AAB0 E3E0 C020 0021          00000020  16576+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AAB6 4720 B020               00000020  16577+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AABA                                   16578+@PER_1371 ds   0h                                                       01-DCCPR
0000AABA EBDE 2080 0024          00000080  16579+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AAC0 E3C0 2090 0024          00000090  16580+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AAC6 B904 00D2                         16581+         lgr   13,2                set real frame pointer               01-DCCPR
0000AACA B904 00CF                         16582+         lgr   12,15               set base reg                         01-DCCPR
                        0000AA90           16583+         using @REGION_1371_1,12                                        01-DCCPR
0000AACE B904 0031                         16584          LGR   3,1         ; ptr to parm area
                                                                                                                           Page  331 
  Active Usings: @REGION_1371_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16585 * ******* End of Prologue
                                           16586 * *
                                           16587 * ***           rd_kafka_msg_t *rkm, *tmp;
                                           16588 * ***
                                           16589 * ***           for ((rkm) = ((&rkmq->rkmq_msgs)->tqh_first); (rkm) !=\
                                           16590 *  (((void *)0)) && ((tmp) = ((rkm)->rkm_link .tqe_next), 1); (rkm) = \
                                           16591 * (tmp))
0000AAD2 E3F0 3000 0004          00000000  16592          LG    15,0(0,3)   ; rkmq
0000AAD8 E3F0 F000 0004          00000000  16593          LG    15,0(0,15)  ; rkmq
0000AADE 47F0 C08C               0000AB1C  16594          B     @L1154
0000AAE8                                   16595          DS    0D
0000AAE8 000000C0                          16596 @FRAMESIZE_1371 DC F'192'
0000AAEC 00000000
0000AAF0 0000000000003AE0                  16597 @lit_1371_632 DC AD(rd_kafka_msg_destroy)
0000AAF8 0000000000001628                  16598 @lit_1371_633 DC AD(rd_kafka_msgq_init)
0000AB00                                   16599 @L1153   DS    0H
                                           16600 * ***                   rd_kafka_msg_destroy(((void *)0), rkm);
0000AB00 D707 D0B0 D0B0 000000B0 000000B0  16601          XC    176(8,13),176(13)
0000AB06 E3F0 D0B8 0024          000000B8  16602          STG   15,184(0,13)
0000AB0C 4110 D0B0               000000B0  16603          LA    1,176(0,13)
0000AB10 E3F0 C060 0004          0000AAF0  16604          LG    15,@lit_1371_632 ; rd_kafka_msg_destroy
0000AB16                                   16605 @@gen_label935 DS    0H
0000AB16 05EF                              16606          BALR  14,15
0000AB18                                   16607 @@gen_label936 DS    0H
0000AB18 B904 00F2                         16608          LGR   15,2        ; rkm
0000AB1C                                   16609 @L1154   DS    0H
0000AB1C B902 001F                         16610          LTGR  1,15
0000AB20 4780 C09E               0000AB2E  16611          BE    @L1155
0000AB24 E320 F048 0004          00000048  16612          LG    2,72(0,15)  ; offset of rkm_link in rd_kafka_msg_s
0000AB2A 47F0 C070               0000AB00  16613          B     @L1153
0000AB2E                                   16614 @L1155   DS    0H
                                           16615 * ***
                                           16616 * ***
                                           16617 * ***           rd_kafka_msgq_init(rkmq);
0000AB2E E3F0 3000 0004          00000000  16618          LG    15,0(0,3)   ; rkmq
0000AB34 E3F0 D0B0 0024          000000B0  16619          STG   15,176(0,13)
0000AB3A 4110 D0B0               000000B0  16620          LA    1,176(0,13)
0000AB3E E3F0 C068 0004          0000AAF8  16621          LG    15,@lit_1371_633 ; rd_kafka_msgq_init
0000AB44                                   16622 @@gen_label938 DS    0H
0000AB44 05EF                              16623          BALR  14,15
0000AB46                                   16624 @@gen_label939 DS    0H
                                           16625 * ***   }
0000AB46                                   16626 @ret_lab_1371 DS 0H
                                           16627 * * **** Start of Epilogue
                                           16628          DCCEPIL
0000AB46                                   16629+         ds 0h                                                          01-DCCEP
                                           16630+* Epilog
0000AB46 D707 D088 D088 00000088 00000088  16631+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000AB4C E3D0 D080 0004          00000080  16632+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000AB52 E3C0 D090 0004          00000090  16633+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000AB58 E3B0 C018 0004          00000018  16634+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000AB5E E3C0 B010 0021          00000010  16635+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  332 
  Active Usings: @REGION_1371_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AB64 E3E0 D008 0004          00000008  16636+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000AB6A EB1C D020 0004          00000020  16637+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000AB70 078E                              16638+         bcr 8,14                if same dsab, just return              01-DCCEP
0000AB72 E3F0 D010 0024          00000010  16639+         stg 15,16(0,13)         save return code                       01-DCCEP
0000AB78 E300 D018 0024          00000018  16640+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000AB7E E3F0 D090 0004          00000090  16641+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000AB84 E3F0 F018 0004          00000018  16642+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000AB8A 47F0 F040               00000040  16643+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16644+* End of Epilog
                                           16645 * * **** End of Epilogue
                                           16646          DROP  12
                                           16647 *
                                           16648 *   DSECT for automatic variables in "ut_rd_kafka_msgq_purge"
                                           16649 *      (FUNCTION #1371)
                                           16650 *
00000000                00000000 000000A8  16651 @AUTO#ut_rd_kafka_msgq_purge DSECT
00000000                                   16652          DS    XL168
                                           16653 *
0000AB8E                00000000 0000E868  16654 @CODE    CSECT
                                           16655 *
                                           16656 *
                                           16657 *
                                           16658 * ....... start of ut_verify_msgq_order
0000AB8E                                   16659 @LNAME1984 DS  0H
0000AB8E 00000014                          16660          DC    X'00000014'
0000AB92 A4A36DA585998986                  16661          DC    C'ut_verify_msgq_order'
0000ABA6 00                                16662          DC    X'00'
                                           16663 ut_verify_msgq_order DCCPRLG CINDEX=1984,BASER=12,FRAME=232,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1984
                                           16664          macro
                                           16665          dccextrn &m
                                           16666          gblc    &$dccext(1000)
                                           16667          gbla    &$dccexti
                                           16668          lcla    &i
                                           16669 &$dccext(&$dccexti+1) setc    '&m'
                                           16670 &i       seta    1
                                           16671 .loop    aif    (&i gt &$dccexti).around
                                           16672          aif    ('&$dccext(&i)' eq '&m').getout
                                           16673 &i       seta    &i+1
                                           16674          ago     .loop
                                           16675 .around  anop
                                           16676 &$dccexti seta &$dccexti+1
                                           16677          extrn  &m
                                           16678 .getout  anop
                                           16679          mend
0000ABA8                                   16680+$eye0288    ds    0d                                                    02-DCCCA
0000ABA8 C4C3C3                            16681+         dc cl3'DCC'                                                    02-DCCCA
0000ABAB 01                                16682+         dc xl1'01' format one                                          02-DCCCA
0000ABAC 00000000                          16683+         dc a(0)                                                        02-DCCCA
0000ABB0 000000000000AC1A                  16684+         dc ad(@PER_1984)                                               02-DCCCA
0000ABB8 00000000000000E8                  16685+         dc ad(232)                                                     02-DCCCA
0000ABC0 0000000000000000                  16686+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  333 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ABC8 0000000000001000                  16687+         dc ad(4096)                                                    02-DCCCA
0000ABD0 20                                16688+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000ABD1 03                                16689+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000ABD2 03                                16690+         dc al1(3)                                                      02-DCCCA
0000ABD3 08                                16691+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000ABD4 00                                16692+         dc bl.8'00000000'                                              02-DCCCA
0000ABD5 000000                            16693+         dc al3(0)                                                      02-DCCCA
0000ABD8 000000000000AB8E                  16694+         dc ad(@LNAME1984)                                              02-DCCCA
0000ABE0                                   16695+         ds 0d                                                          02-DCCCA
0000ABE0 000000000000ABA8                  16696+         dc ad($eye0288)                                                02-DCCCA
0000ABE8 0000000000000000                  16697+         dc ad(0)                                                       02-DCCCA
0000ABF0                                   16698+         ds    0d                                                       01-DCCPR
0000ABF0                                   16699+ut_verify_msgq_order ds 0d                                              01-DCCPR
0000ABF0                                   16700+@REGION_1984_1 ds 0h                                                    01-DCCPR
0000ABF0 EBEC D008 0024          00000008  16701+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000ABF6 E3E0 D088 0004          00000088  16702+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000ABFC E3C0 D090 0004          00000090  16703+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AC02 B904 002E                         16704+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AC06 E3B0 C018 0004          00000018  16705+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AC0C A7EB 00E8               000000E8  16706+         aghi  14,232              increase by frame size               01-DCCPR
0000AC10 E3E0 C020 0021          00000020  16707+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AC16 4720 B020               00000020  16708+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AC1A                                   16709+@PER_1984 ds   0h                                                       01-DCCPR
0000AC1A EBDE 2080 0024          00000080  16710+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AC20 E3C0 2090 0024          00000090  16711+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AC26 B904 00D2                         16712+         lgr   13,2                set real frame pointer               01-DCCPR
0000AC2A B904 00CF                         16713+         lgr   12,15               set base reg                         01-DCCPR
                        0000ABF0           16714+         using @REGION_1984_1,12                                        01-DCCPR
                                           16715          DCCPRV REG=7      ; Get PRV from DVT
0000AC2E E370 B008 0004          00000008  16716+         LG 7,8(0,11)                                                   01-DCCPR
0000AC34 B904 0081                         16717          LGR   8,1         ; ptr to parm area
                                           16718 * ******* End of Prologue
                                           16719 * *
                                           16720 * ***           const rd_kafka_msg_t *rkm;
                                           16721 * ***           uint64_t expected = first;
0000AC38 E340 8010 0004          00000010  16722          LG    4,16(0,8)   ; first
                                           16723 * ***           int incr = first < last ? +1 : -1;
0000AC3E E340 8018 0021          00000018  16724          CLG   4,24(0,8)
0000AC44 47B0 C090               0000AC80  16725          BNL   @L1158
0000AC48 A768 0001               00000001  16726          LHI   6,1         ; 1
0000AC4C 47F0 C094               0000AC84  16727          B     @L1159
0000AC50                                   16728          DS    0D
0000AC50 000000E8                          16729 @FRAMESIZE_1984 DC F'232'
0000AC54 00000000
0000AC58 0000000000000000                  16730 @lit_1984_642 DC AD(fprintf)
0000AC60 000000000000E868                  16731 @lit_1984_641 DC AD(@DATA)
0000AC68 000000000000ECA4                  16732 @lit_1984_640 DC AD(@strings@)
0000AC70 00000000                          16733 @lit_1984_639 DC Q(__stderrp)
0000AC74 00000000                          16734 @lit_1984_663 DC Q(rd_unittest_assert_on_failure)
0000AC78 0000000000000000                  16735 @lit_1984_664 DC AD(__assert)
0000AC80                                   16736 @L1158   DS    0H
0000AC80 A768 FFFF               0000FFFF  16737          LHI   6,-1        ; -1
                                                                                                                           Page  334 
  Active Usings: @REGION_1984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AC84                                   16738 @L1159   DS    0H
                                           16739 * ***           int fails = 0;
0000AC84 A728 0000               00000000  16740          LHI   2,0         ; 0
                                           16741 * ***           int cnt = 0;
0000AC88 1852                              16742          LR    5,2         ; cnt
                                           16743 * ***
                                           16744 * ***           for ((rkm) = ((&rkmq->rkmq_msgs)->tqh_first); (rkm) !=\
                                           16745 *  (((void *)0)); (rkm) = ((rkm)->rkm_link .tqe_next)) {
0000AC8A E3F0 8008 0004          00000008  16746          LG    15,8(0,8)   ; rkmq
0000AC90 E330 F000 0004          00000000  16747          LG    3,0(0,15)   ; rkmq
0000AC96 47F0 C27A               0000AE6A  16748          B     @L1161
0000AC9A                                   16749 @L1160   DS    0H
                                           16750 * ***                   if ((req_consecutive &&
0000AC9A 9500 8027      00000027 00000000  16751          CLI   39(8),0
0000AC9E 4780 C0BC               0000ACAC  16752          BE    @L1164
                                           16753 * ***                        rkm->rkm_u.producer.msgid != expected) ||
0000ACA2 E340 3090 0021          00000090  16754          CLG   4,144(0,3)
0000ACA8 4770 C0D2               0000ACC2  16755          BNE   @L1166
0000ACAC                                   16756 @L1164   DS    0H
                                           16757 * ***                       (!req_consecutive &&
0000ACAC 9500 8027      00000027 00000000  16758          CLI   39(8),0
0000ACB0 4770 C1B4               0000ADA4  16759          BNE   @L1165
                                           16760 * ***                        rkm->rkm_u.producer.msgid < expected)) {
0000ACB4 E3F0 3090 0004          00000090  16761          LG    15,144(0,3) ; offset of msgid in 0000042
0000ACBA B921 00F4                         16762          CLGR  15,4
0000ACBE 47B0 C1B4               0000ADA4  16763          BNL   @L1165
0000ACC2                                   16764 @L1166   DS    0H
                                           16765 * ***                           if (fails++ < 100)
0000ACC2 18F2                              16766          LR    15,2
0000ACC4 A72A 0001               00000001  16767          AHI   2,1
0000ACC8 A7FE 0064               00000064  16768          CHI   15,100
0000ACCC 47B0 C1B4               0000ADA4  16769          BNL   @L1165
                                           16770 * ***                                   do { fprintf(__stderrp, "RDUT:\
                                           16771 *  INFO: %s:%d: %s: ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c",\
                                           16772 *  1843, __FUNCTION__); fprintf(__stderrp, "%s: expected msgid %s %" "\
                                           16773 * llu" " not %" "llu" " at index #%d", what, req_consecutive ? "==" : \
                                           16774 * ">=", expected, rkm->rkm_u.producer.msgid, cnt); fprintf(__stderrp, \
                                           16775 * "\n"); } while (0);
0000ACD0                                   16776 @L1168   DS    0H
0000ACD0 E390 C080 0016          0000AC70  16777          LLGF  9,@lit_1984_639 ; __stderrp
0000ACD6 E3F9 7000 0004          00000000  16778          LG    15,0(9,7)   ; __stderrp
0000ACDC E3F0 D0B0 0024          000000B0  16779          STG   15,176(0,13)
0000ACE2 E3A0 C078 0004          0000AC68  16780          LG    10,@lit_1984_640
0000ACE8 41F0 A6E4               000006E4  16781          LA    15,1764(0,10)
0000ACEC E3F0 D0B8 0024          000000B8  16782          STG   15,184(0,13)
0000ACF2 41F0 A2C2               000002C2  16783          LA    15,706(0,10)
0000ACF6 E3F0 D0C0 0024          000000C0  16784          STG   15,192(0,13)
0000ACFC E548 D0C8 0733          000000C8  16785          MVGHI 200(13),1843
0000AD02 E3F0 C070 0004          0000AC60  16786          LG    15,@lit_1984_641
0000AD08 41F0 F2EA               000002EA  16787          LA    15,746(0,15)
0000AD0C E3F0 D0D0 0024          000000D0  16788          STG   15,208(0,13)
0000AD12 4110 D0B0               000000B0  16789          LA    1,176(0,13)
                                                                                                                           Page  335 
  Active Usings: @REGION_1984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AD16 E3B0 C068 0004          0000AC58  16790          LG    11,@lit_1984_642 ; fprintf
0000AD1C B904 00FB                         16791          LGR   15,11
0000AD20                                   16792 @@gen_label946 DS    0H
0000AD20 05EF                              16793          BALR  14,15
0000AD22                                   16794 @@gen_label947 DS    0H
0000AD22 9500 8027      00000027 00000000  16795          CLI   39(8),0
0000AD26 4780 C142               0000AD32  16796          BE    @L1171
0000AD2A 41F0 A6FC               000006FC  16797          LA    15,1788(0,10)
0000AD2E 47F0 C146               0000AD36  16798          B     @L1172
0000AD32                                   16799 @L1171   DS    0H
0000AD32 41F0 A700               00000700  16800          LA    15,1792(0,10)
0000AD36                                   16801 @L1172   DS    0H
0000AD36 E319 7000 0004          00000000  16802          LG    1,0(9,7)    ; __stderrp
0000AD3C E310 D0B0 0024          000000B0  16803          STG   1,176(0,13)
0000AD42 4110 A704               00000704  16804          LA    1,1796(0,10)
0000AD46 E310 D0B8 0024          000000B8  16805          STG   1,184(0,13)
0000AD4C E310 8000 0004          00000000  16806          LG    1,0(0,8)    ; what
0000AD52 E310 D0C0 0024          000000C0  16807          STG   1,192(0,13)
0000AD58 E3F0 D0C8 0024          000000C8  16808          STG   15,200(0,13)
0000AD5E E340 D0D0 0024          000000D0  16809          STG   4,208(0,13)
0000AD64 E3F0 3090 0004          00000090  16810          LG    15,144(0,3)
0000AD6A E3F0 D0D8 0024          000000D8  16811          STG   15,216(0,13)
0000AD70 B914 00F5                         16812          LGFR  15,5
0000AD74 E3F0 D0E0 0024          000000E0  16813          STG   15,224(0,13)
0000AD7A 4110 D0B0               000000B0  16814          LA    1,176(0,13)
0000AD7E B904 00FB                         16815          LGR   15,11
0000AD82                                   16816 @@gen_label949 DS    0H
0000AD82 05EF                              16817          BALR  14,15
0000AD84                                   16818 @@gen_label950 DS    0H
0000AD84 E3F9 7000 0004          00000000  16819          LG    15,0(9,7)   ; __stderrp
0000AD8A E3F0 D0B0 0024          000000B0  16820          STG   15,176(0,13)
0000AD90 41F0 A736               00000736  16821          LA    15,1846(0,10)
0000AD94 E3F0 D0B8 0024          000000B8  16822          STG   15,184(0,13)
0000AD9A 4110 D0B0               000000B0  16823          LA    1,176(0,13)
0000AD9E B904 00FB                         16824          LGR   15,11
0000ADA2                                   16825 @@gen_label951 DS    0H
0000ADA2 05EF                              16826          BALR  14,15
0000ADA4                                   16827 @@gen_label952 DS    0H
                                           16828 * ***   # 1850 "C:\asgkafka\librdkafka\src\rdkafka_msg.c"
                                           16829 * ***                   }
0000ADA4                                   16830 @L1167   DS    0H
0000ADA4                                   16831 @L1165   DS    0H
                                           16832 * ***
                                           16833 * ***                   cnt++;
0000ADA4 A75A 0001               00000001  16834          AHI   5,1
                                           16835 * ***                   expected += incr;
0000ADA8 B914 00F6                         16836          LGFR  15,6
0000ADAC B90A 004F                         16837          ALGR  4,15
                                           16838 * ***
                                           16839 * ***                   if (cnt > rkmq->rkmq_msg_cnt) {
0000ADB0 E3F0 8008 0004          00000008  16840          LG    15,8(0,8)   ; rkmq
0000ADB6 5950 F010               00000010  16841          C     5,16(0,15)
                                                                                                                           Page  336 
  Active Usings: @REGION_1984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ADBA 47D0 C274               0000AE64  16842          BNH   @L1173
                                           16843 * ***                           do { fprintf(__stderrp, "RDUT: INFO: %\
                                           16844 * s:%d: %s: ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1856, _\
                                           16845 * _FUNCTION__); fprintf(__stderrp, "%s: loop in queue?", what); fprint\
                                           16846 * f(__stderrp, "\n"); } while (0);
0000ADBE                                   16847 @L1174   DS    0H
0000ADBE E330 C080 0016          0000AC70  16848          LLGF  3,@lit_1984_639 ; __stderrp
0000ADC4 E3F3 7000 0004          00000000  16849          LG    15,0(3,7)   ; __stderrp
0000ADCA E3F0 D0B0 0024          000000B0  16850          STG   15,176(0,13)
0000ADD0 E340 C078 0004          0000AC68  16851          LG    4,@lit_1984_640
0000ADD6 41F0 46E4               000006E4  16852          LA    15,1764(0,4)
0000ADDA E3F0 D0B8 0024          000000B8  16853          STG   15,184(0,13)
0000ADE0 41F0 42C2               000002C2  16854          LA    15,706(0,4)
0000ADE4 E3F0 D0C0 0024          000000C0  16855          STG   15,192(0,13)
0000ADEA E548 D0C8 0740          000000C8  16856          MVGHI 200(13),1856
0000ADF0 E3F0 C070 0004          0000AC60  16857          LG    15,@lit_1984_641
0000ADF6 41F0 F2EA               000002EA  16858          LA    15,746(0,15)
0000ADFA E3F0 D0D0 0024          000000D0  16859          STG   15,208(0,13)
0000AE00 4110 D0B0               000000B0  16860          LA    1,176(0,13)
0000AE04 E350 C068 0004          0000AC58  16861          LG    5,@lit_1984_642 ; fprintf
0000AE0A B904 00F5                         16862          LGR   15,5
0000AE0E                                   16863 @@gen_label954 DS    0H
0000AE0E 05EF                              16864          BALR  14,15
0000AE10                                   16865 @@gen_label955 DS    0H
0000AE10 E3F3 7000 0004          00000000  16866          LG    15,0(3,7)   ; __stderrp
0000AE16 E3F0 D0B0 0024          000000B0  16867          STG   15,176(0,13)
0000AE1C 41F0 4738               00000738  16868          LA    15,1848(0,4)
0000AE20 E3F0 D0B8 0024          000000B8  16869          STG   15,184(0,13)
0000AE26 E3F0 8000 0004          00000000  16870          LG    15,0(0,8)   ; what
0000AE2C E3F0 D0C0 0024          000000C0  16871          STG   15,192(0,13)
0000AE32 4110 D0B0               000000B0  16872          LA    1,176(0,13)
0000AE36 B904 00F5                         16873          LGR   15,5
0000AE3A                                   16874 @@gen_label956 DS    0H
0000AE3A 05EF                              16875          BALR  14,15
0000AE3C                                   16876 @@gen_label957 DS    0H
0000AE3C E3F3 7000 0004          00000000  16877          LG    15,0(3,7)   ; __stderrp
0000AE42 E3F0 D0B0 0024          000000B0  16878          STG   15,176(0,13)
0000AE48 41F0 4736               00000736  16879          LA    15,1846(0,4)
0000AE4C E3F0 D0B8 0024          000000B8  16880          STG   15,184(0,13)
0000AE52 4110 D0B0               000000B0  16881          LA    1,176(0,13)
0000AE56 B904 00F5                         16882          LGR   15,5
0000AE5A                                   16883 @@gen_label958 DS    0H
0000AE5A 05EF                              16884          BALR  14,15
0000AE5C                                   16885 @@gen_label959 DS    0H
                                           16886 * ***                           fails++;
0000AE5C A72A 0001               00000001  16887          AHI   2,1
                                           16888 * ***                           break;
0000AE60 47F0 C282               0000AE72  16889          B     @L1177
                                           16890 * ***                   }
0000AE64                                   16891 @L1173   DS    0H
                                           16892 * ***           }
0000AE64 E330 3048 0004          00000048  16893          LG    3,72(0,3)   ; offset of rkm_link in rd_kafka_msg_s
                                                                                                                           Page  337 
  Active Usings: @REGION_1984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AE6A                                   16894 @L1161   DS    0H
0000AE6A B902 00F3                         16895          LTGR  15,3
0000AE6E 4770 C0AA               0000AC9A  16896          BNE   @L1160
0000AE72                                   16897 @L1162   DS    0H
                                           16898 * ***
                                           16899 * ***           do { if (!(!fails)) { fprintf(__stderrp, "\033[31mRDUT\
                                           16900 * : FAIL: %s:%d: %s: " "assert failed: " "!fails" ": ", "C:\\asgkafka\\
                                           16901 * \librdkafka\\src\\rdkafka_msg.c", 1862, __FUNCTION__); fprintf(__std\
                                           16902 * errp, "See %d previous failure(s)", fails); fprintf(__stderrp, "\033\
                                           16903 * [0m\n"); if (rd_unittest_assert_on_failure) ((!fails) ? (void)0 : __\
                                           16904 * assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 186\
                                           16905 * 2, "!fails")); return 1; } } while (0);
0000AE72                                   16906 @L1177   DS    0H
0000AE72 1222                              16907          LTR   2,2
0000AE74 4780 C374               0000AF64  16908          BZ    @L1180
0000AE78 E330 C080 0016          0000AC70  16909          LLGF  3,@lit_1984_639 ; __stderrp
0000AE7E E3F3 7000 0004          00000000  16910          LG    15,0(3,7)   ; __stderrp
0000AE84 E3F0 D0B0 0024          000000B0  16911          STG   15,176(0,13)
0000AE8A E340 C078 0004          0000AC68  16912          LG    4,@lit_1984_640
0000AE90 41F0 474C               0000074C  16913          LA    15,1868(0,4)
0000AE94 E3F0 D0B8 0024          000000B8  16914          STG   15,184(0,13)
0000AE9A 41F0 42C2               000002C2  16915          LA    15,706(0,4)
0000AE9E E3F0 D0C0 0024          000000C0  16916          STG   15,192(0,13)
0000AEA4 E548 D0C8 0746          000000C8  16917          MVGHI 200(13),1862
0000AEAA E350 C070 0004          0000AC60  16918          LG    5,@lit_1984_641
0000AEB0 41F0 52EA               000002EA  16919          LA    15,746(0,5)
0000AEB4 E3F0 D0D0 0024          000000D0  16920          STG   15,208(0,13)
0000AEBA 4110 D0B0               000000B0  16921          LA    1,176(0,13)
0000AEBE E360 C068 0004          0000AC58  16922          LG    6,@lit_1984_642 ; fprintf
0000AEC4 B904 00F6                         16923          LGR   15,6
0000AEC8                                   16924 @@gen_label962 DS    0H
0000AEC8 05EF                              16925          BALR  14,15
0000AECA                                   16926 @@gen_label963 DS    0H
0000AECA E3F3 7000 0004          00000000  16927          LG    15,0(3,7)   ; __stderrp
0000AED0 E3F0 D0B0 0024          000000B0  16928          STG   15,176(0,13)
0000AED6 41F0 4780               00000780  16929          LA    15,1920(0,4)
0000AEDA E3F0 D0B8 0024          000000B8  16930          STG   15,184(0,13)
0000AEE0 B914 00F2                         16931          LGFR  15,2
0000AEE4 E3F0 D0C0 0024          000000C0  16932          STG   15,192(0,13)
0000AEEA 4110 D0B0               000000B0  16933          LA    1,176(0,13)
0000AEEE B904 00F6                         16934          LGR   15,6
0000AEF2                                   16935 @@gen_label964 DS    0H
0000AEF2 05EF                              16936          BALR  14,15
0000AEF4                                   16937 @@gen_label965 DS    0H
0000AEF4 E3F3 7000 0004          00000000  16938          LG    15,0(3,7)   ; __stderrp
0000AEFA E3F0 D0B0 0024          000000B0  16939          STG   15,176(0,13)
0000AF00 41F0 479C               0000079C  16940          LA    15,1948(0,4)
0000AF04 E3F0 D0B8 0024          000000B8  16941          STG   15,184(0,13)
0000AF0A 4110 D0B0               000000B0  16942          LA    1,176(0,13)
0000AF0E B904 00F6                         16943          LGR   15,6
0000AF12                                   16944 @@gen_label966 DS    0H
0000AF12 05EF                              16945          BALR  14,15
                                                                                                                           Page  338 
  Active Usings: @REGION_1984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AF14                                   16946 @@gen_label967 DS    0H
0000AF14 E3F0 C084 0016          0000AC74  16947          LLGF  15,@lit_1984_663 ; rd_unittest_assert_on_failure
0000AF1A 41FF 7000               00000000  16948          LA    15,0(15,7)
0000AF1E 9500 F000      00000000 00000000  16949          CLI   0(15),0
0000AF22 4780 C36C               0000AF5C  16950          BE    @L1181
0000AF26 1222                              16951          LTR   2,2
0000AF28 4780 C36C               0000AF5C  16952          BZ    @L1181
0000AF2C                                   16953 @L1182   DS    0H
0000AF2C 41F0 52EA               000002EA  16954          LA    15,746(0,5)
0000AF30 E3F0 D0B0 0024          000000B0  16955          STG   15,176(0,13)
0000AF36 41F0 42C2               000002C2  16956          LA    15,706(0,4)
0000AF3A E3F0 D0B8 0024          000000B8  16957          STG   15,184(0,13)
0000AF40 E548 D0C0 0746          000000C0  16958          MVGHI 192(13),1862
0000AF46 41F0 47A2               000007A2  16959          LA    15,1954(0,4)
0000AF4A E3F0 D0C8 0024          000000C8  16960          STG   15,200(0,13)
0000AF50 4110 D0B0               000000B0  16961          LA    1,176(0,13)
0000AF54 E3F0 C088 0004          0000AC78  16962          LG    15,@lit_1984_664 ; __assert
0000AF5A                                   16963 @@gen_label970 DS    0H
0000AF5A 05EF                              16964          BALR  14,15
0000AF5C                                   16965 @@gen_label971 DS    0H
0000AF5C                                   16966 @L1183   DS    0H
0000AF5C                                   16967 @L1181   DS    0H
0000AF5C A7F9 0001               00000001  16968          LGHI  15,1        ; 1
0000AF60 47F0 C378               0000AF68  16969          B     @ret_lab_1984
0000AF64                                   16970 @L1180   DS    0H
                                           16971 * ***           return fails;
0000AF64 B914 00F2                         16972          LGFR  15,2
                                           16973 * ***   }
0000AF68                                   16974 @ret_lab_1984 DS 0H
                                           16975 * * **** Start of Epilogue
                                           16976          DCCEPIL
0000AF68                                   16977+         ds 0h                                                          01-DCCEP
                                           16978+* Epilog
0000AF68 D707 D088 D088 00000088 00000088  16979+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000AF6E E3D0 D080 0004          00000080  16980+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000AF74 E3C0 D090 0004          00000090  16981+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000AF7A E3B0 C018 0004          00000018  16982+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000AF80 E3C0 B010 0021          00000010  16983+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000AF86 E3E0 D008 0004          00000008  16984+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000AF8C EB1C D020 0004          00000020  16985+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000AF92 078E                              16986+         bcr 8,14                if same dsab, just return              01-DCCEP
0000AF94 E3F0 D010 0024          00000010  16987+         stg 15,16(0,13)         save return code                       01-DCCEP
0000AF9A E300 D018 0024          00000018  16988+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000AFA0 E3F0 D090 0004          00000090  16989+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000AFA6 E3F0 F018 0004          00000018  16990+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000AFAC 47F0 F040               00000040  16991+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16992+* End of Epilog
                                           16993 * * **** End of Epilogue
                                           16994          DROP  12
                                           16995 *
                                           16996 *   DSECT for automatic variables in "ut_verify_msgq_order"
                                           16997 *      (FUNCTION #1984)
                                                                                                                           Page  339 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16998 *
00000000                00000000 000000B0  16999 @AUTO#ut_verify_msgq_order DSECT
00000000                                   17000          DS    XL168
000000A8                                   17001 ut_verify_msgq_order#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8  17002          ORG   @AUTO#ut_verify_msgq_order+168
000000A8                                   17003 ut_verify_msgq_order#fails#0 DS 1F ; fails
000000AC                000000AC 000000A8  17004          ORG   @AUTO#ut_verify_msgq_order+168
000000A8                                   17005 ut_verify_msgq_order#incr#0 DS 1F ; incr
000000AC                000000AC 000000A8  17006          ORG   @AUTO#ut_verify_msgq_order+168
000000A8                                   17007 ut_verify_msgq_order#expected#0 DS 8XL1 ; expected
                                           17008 *
0000AFB0                00000000 0000E868  17009 @CODE    CSECT
                                           17010 *
                                           17011 *
                                           17012 *
                                           17013 * ....... start of unittest_msgq_order
0000AFB0                                   17014 @LNAME1985 DS  0H
0000AFB0 00000013                          17015          DC    X'00000013'
0000AFB4 A49589A3A385A2A3                  17016          DC    C'unittest_msgq_order'
0000AFC7 00                                17017          DC    X'00'
                                           17018 unittest_msgq_order DCCPRLG CINDEX=1985,BASER=12,FRAME=320,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1985
                                           17019          macro
                                           17020          dccextrn &m
                                           17021          gblc    &$dccext(1000)
                                           17022          gbla    &$dccexti
                                           17023          lcla    &i
                                           17024 &$dccext(&$dccexti+1) setc    '&m'
                                           17025 &i       seta    1
                                           17026 .loop    aif    (&i gt &$dccexti).around
                                           17027          aif    ('&$dccext(&i)' eq '&m').getout
                                           17028 &i       seta    &i+1
                                           17029          ago     .loop
                                           17030 .around  anop
                                           17031 &$dccexti seta &$dccexti+1
                                           17032          extrn  &m
                                           17033 .getout  anop
                                           17034          mend
0000AFC8                                   17035+$eye0292    ds    0d                                                    02-DCCCA
0000AFC8 C4C3C3                            17036+         dc cl3'DCC'                                                    02-DCCCA
0000AFCB 01                                17037+         dc xl1'01' format one                                          02-DCCCA
0000AFCC 00000000                          17038+         dc a(0)                                                        02-DCCCA
0000AFD0 000000000000B03A                  17039+         dc ad(@PER_1985)                                               02-DCCCA
0000AFD8 0000000000000140                  17040+         dc ad(320)                                                     02-DCCCA
0000AFE0 0000000000000000                  17041+         dc ad(0)                                                       02-DCCCA
0000AFE8 0000000000001000                  17042+         dc ad(4096)                                                    02-DCCCA
0000AFF0 20                                17043+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AFF1 03                                17044+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AFF2 03                                17045+         dc al1(3)                                                      02-DCCCA
0000AFF3 08                                17046+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AFF4 00                                17047+         dc bl.8'00000000'                                              02-DCCCA
0000AFF5 000000                            17048+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  340 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AFF8 000000000000AFB0                  17049+         dc ad(@LNAME1985)                                              02-DCCCA
0000B000                                   17050+         ds 0d                                                          02-DCCCA
0000B000 000000000000AFC8                  17051+         dc ad($eye0292)                                                02-DCCCA
0000B008 0000000000000000                  17052+         dc ad(0)                                                       02-DCCCA
0000B010                                   17053+         ds    0d                                                       01-DCCPR
0000B010                                   17054+unittest_msgq_order ds 0d                                               01-DCCPR
0000B010                                   17055+@REGION_1985_1 ds 0h                                                    01-DCCPR
0000B010 EBEC D008 0024          00000008  17056+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000B016 E3E0 D088 0004          00000088  17057+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000B01C E3C0 D090 0004          00000090  17058+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000B022 B904 002E                         17059+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000B026 E3B0 C018 0004          00000018  17060+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000B02C A7EB 0140               00000140  17061+         aghi  14,320              increase by frame size               01-DCCPR
0000B030 E3E0 C020 0021          00000020  17062+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000B036 4720 B020               00000020  17063+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000B03A                                   17064+@PER_1985 ds   0h                                                       01-DCCPR
0000B03A EBDE 2080 0024          00000080  17065+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000B040 E3C0 2090 0024          00000090  17066+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000B046 B904 00D2                         17067+         lgr   13,2                set real frame pointer               01-DCCPR
0000B04A B904 00CF                         17068+         lgr   12,15               set base reg                         01-DCCPR
                        0000B010           17069+         using @REGION_1985_1,12                                        01-DCCPR
                                           17070          DCCPRV REG=6      ; Get PRV from DVT
0000B04E E360 B008 0004          00000008  17071+         LG 6,8(0,11)                                                   01-DCCPR
0000B054 B904 0021                         17072          LGR   2,1         ; ptr to parm area
                                           17073 * ******* End of Prologue
                                           17074 * *
                                           17075 * ***           rd_kafka_msgq_t rkmq = { .rkmq_msgs = { (((void *)0)),\
                                           17076 *  &((rkmq).rkmq_msgs).tqh_first } };
0000B058 5830 200C               0000000C  17077          L     3,12(0,2)   ; fifo
0000B05C E340 2010 0004          00000010  17078          LG    4,16(0,2)   ; cmp
0000B062 41F0 D0A8               000000A8  17079          LA    15,168(0,13)
0000B066 E3F0 D0B0 0024          000000B0  17080          STG   15,176(0,13)
                                           17081 * setting 8 bytes to 0x00
0000B06C D707 D0A8 D0A8 000000A8 000000A8  17082          XC    168(8,13),168(13)
                                           17083 * setting 16 bytes to 0x00
0000B072 D70F D0B8 D0B8 000000B8 000000B8  17084          XC    184(16,13),184(13)
                                           17085 * ***           rd_kafka_msg_t *rkm;
                                           17086 * ***           rd_kafka_msgq_t sendq, sendq2;
                                           17087 * ***           const size_t msgsize = 100;
0000B078 A759 0064               00000064  17088          LGHI  5,100       ; 100
                                           17089 * ***           int i;
                                           17090 * ***
                                           17091 * ***           do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s: ", "C:\
                                           17092 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1877, __FUNCTION__); fp\
                                           17093 * rintf(__stderrp, "%s: testing in %s mode", what, fifo? "FIFO" : "LIF\
                                           17094 * O"); fprintf(__stderrp, "\n"); } while (0);
0000B07C                                   17095 @L1184   DS    0H
0000B07C E370 C0F0 0016          0000B100  17096          LLGF  7,@lit_1985_668 ; __stderrp
0000B082 E3F7 6000 0004          00000000  17097          LG    15,0(7,6)   ; __stderrp
0000B088 E3F0 D108 0024          00000108  17098          STG   15,264(0,13)
0000B08E E380 C0E8 0004          0000B0F8  17099          LG    8,@lit_1985_669
0000B094 41F0 86E4               000006E4  17100          LA    15,1764(0,8)
                                                                                                                           Page  341 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B098 E3F0 D110 0024          00000110  17101          STG   15,272(0,13)
0000B09E 41F0 82C2               000002C2  17102          LA    15,706(0,8)
0000B0A2 E3F0 D118 0024          00000118  17103          STG   15,280(0,13)
0000B0A8 E548 D120 0755          00000120  17104          MVGHI 288(13),1877
0000B0AE E3F0 C0E0 0004          0000B0F0  17105          LG    15,@lit_1985_670
0000B0B4 41F0 F300               00000300  17106          LA    15,768(0,15)
0000B0B8 E3F0 D128 0024          00000128  17107          STG   15,296(0,13)
0000B0BE 4110 D108               00000108  17108          LA    1,264(0,13)
0000B0C2 E390 C0D8 0004          0000B0E8  17109          LG    9,@lit_1985_671 ; fprintf
0000B0C8 B904 00F9                         17110          LGR   15,9
0000B0CC                                   17111 @@gen_label972 DS    0H
0000B0CC 05EF                              17112          BALR  14,15
0000B0CE                                   17113 @@gen_label973 DS    0H
0000B0CE 1233                              17114          LTR   3,3
0000B0D0 4780 C150               0000B160  17115          BZ    @L1187
0000B0D4 41F0 87AA               000007AA  17116          LA    15,1962(0,8)
0000B0D8 47F0 C154               0000B164  17117          B     @L1188
0000B0E0                                   17118          DS    0D
0000B0E0 00000140                          17119 @FRAMESIZE_1985 DC F'320'
0000B0E4 00000000
0000B0E8 0000000000000000                  17120 @lit_1985_671 DC AD(fprintf)
0000B0F0 000000000000E868                  17121 @lit_1985_670 DC AD(@DATA)
0000B0F8 000000000000ECA4                  17122 @lit_1985_669 DC AD(@strings@)
0000B100 00000000                          17123 @lit_1985_668 DC Q(__stderrp)
0000B104 00000000
0000B108 000000000000A8E0                  17124 @lit_1985_677 DC AD(ut_rd_kafka_msg_new)
0000B110 0000000000005D78                  17125 @lit_1985_678 DC AD(rd_kafka_msgq_enq_sorted0)
0000B118 000000000000ABF0                  17126 @lit_1985_680 DC AD(ut_verify_msgq_order)
0000B120 000008A8                          17127 @lit_region_diff_1985_1_2  DC A(@REGION_1985_2-@REGION_1985_1)
0000B124 00000000
0000B128 0000000000001628                  17128 @lit_1985_685 DC AD(rd_kafka_msgq_init)
0000B130 00000000000018E8                  17129 @lit_1985_686 DC AD(rd_kafka_msgq_pop)
0000B138 0000000000001B60                  17130 @lit_1985_687 DC AD(rd_kafka_msgq_enq)
0000B140 0000000000001528                  17131 @lit_1985_688 DC AD(rd_kafka_msgq_len)
0000B148 0000000000000000                  17132 @lit_1985_699 DC AD(rd_kafka_retry_msgq)
0000B150 00000000                          17133 @lit_1985_710 DC Q(rd_unittest_assert_on_failure)
0000B154 00000000
0000B158 0000000000000000                  17134 @lit_1985_712 DC AD(__assert)
0000B160                                   17135 @L1187   DS    0H
0000B160 41F0 87B0               000007B0  17136          LA    15,1968(0,8)
0000B164                                   17137 @L1188   DS    0H
0000B164 E317 6000 0004          00000000  17138          LG    1,0(7,6)    ; __stderrp
0000B16A E310 D108 0024          00000108  17139          STG   1,264(0,13)
0000B170 4110 87B6               000007B6  17140          LA    1,1974(0,8)
0000B174 E310 D110 0024          00000110  17141          STG   1,272(0,13)
0000B17A E310 2000 0004          00000000  17142          LG    1,0(0,2)    ; what
0000B180 E310 D118 0024          00000118  17143          STG   1,280(0,13)
0000B186 E3F0 D120 0024          00000120  17144          STG   15,288(0,13)
0000B18C 4110 D108               00000108  17145          LA    1,264(0,13)
0000B190 B904 00F9                         17146          LGR   15,9
0000B194                                   17147 @@gen_label975 DS    0H
0000B194 05EF                              17148          BALR  14,15
                                                                                                                           Page  342 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B196                                   17149 @@gen_label976 DS    0H
0000B196 E3F7 6000 0004          00000000  17150          LG    15,0(7,6)   ; __stderrp
0000B19C E3F0 D108 0024          00000108  17151          STG   15,264(0,13)
0000B1A2 41F0 8736               00000736  17152          LA    15,1846(0,8)
0000B1A6 E3F0 D110 0024          00000110  17153          STG   15,272(0,13)
0000B1AC 4110 D108               00000108  17154          LA    1,264(0,13)
0000B1B0 B904 00F9                         17155          LGR   15,9
0000B1B4                                   17156 @@gen_label977 DS    0H
0000B1B4 05EF                              17157          BALR  14,15
0000B1B6                                   17158 @@gen_label978 DS    0H
                                           17159 * ***
                                           17160 * ***           for (i = 1 ; i <= 6 ; i++) {
0000B1B6 A728 0001               00000001  17161          LHI   2,1         ; 1
0000B1BA 47F0 C1F0               0000B200  17162          B     @L1190
0000B1BE                                   17163 @L1189   DS    0H
                                           17164 * ***                   rkm = ut_rd_kafka_msg_new(msgsize);
0000B1BE E350 D108 0024          00000108  17165          STG   5,264(0,13)
0000B1C4 4110 D108               00000108  17166          LA    1,264(0,13)
0000B1C8 E3F0 C0F8 0004          0000B108  17167          LG    15,@lit_1985_677 ; ut_rd_kafka_msg_new
0000B1CE                                   17168 @@gen_label979 DS    0H
0000B1CE 05EF                              17169          BALR  14,15
0000B1D0                                   17170 @@gen_label980 DS    0H
                                           17171 * ***                   rkm->rkm_u.producer.msgid = i;
0000B1D0 B914 0012                         17172          LGFR  1,2
0000B1D4 E310 F090 0024          00000090  17173          STG   1,144(0,15) ; offset of msgid in 0000042
                                           17174 * ***                   rd_kafka_msgq_enq_sorted0(&rkmq, rkm, cmp);
0000B1DA 4110 D0A8               000000A8  17175          LA    1,168(0,13)
0000B1DE E310 D108 0024          00000108  17176          STG   1,264(0,13)
0000B1E4 E3F0 D110 0024          00000110  17177          STG   15,272(0,13)
0000B1EA E340 D118 0024          00000118  17178          STG   4,280(0,13)
0000B1F0 4110 D108               00000108  17179          LA    1,264(0,13)
0000B1F4 E3F0 C100 0004          0000B110  17180          LG    15,@lit_1985_678 ; rd_kafka_msgq_enq_sorted0
0000B1FA                                   17181 @@gen_label981 DS    0H
0000B1FA 05EF                              17182          BALR  14,15
0000B1FC                                   17183 @@gen_label982 DS    0H
                                           17184 * ***           }
0000B1FC A72A 0001               00000001  17185          AHI   2,1
0000B200                                   17186 @L1190   DS    0H
0000B200 A72E 0006               00000006  17187          CHI   2,6
0000B204 47D0 C1AE               0000B1BE  17188          BNH   @L1189
                                           17189 * ***
                                           17190 * ***           if (fifo) {
0000B208 1233                              17191          LTR   3,3
0000B20A 4780 C24A               0000B25A  17192          BZ    @L1193
                                           17193 * ***                   if (ut_verify_msgq_order("added", &rkmq, 1, 6,\
                                           17194 *  1))
0000B20E E3F0 C0E8 0004          0000B0F8  17195          LG    15,@lit_1985_669
0000B214 41F0 F7CE               000007CE  17196          LA    15,1998(0,15)
0000B218 E3F0 D108 0024          00000108  17197          STG   15,264(0,13)
0000B21E 41F0 D0A8               000000A8  17198          LA    15,168(0,13)
0000B222 E3F0 D110 0024          00000110  17199          STG   15,272(0,13)
0000B228 E548 D118 0001          00000118  17200          MVGHI 280(13),1
                                                                                                                           Page  343 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B22E E548 D120 0006          00000120  17201          MVGHI 288(13),6
0000B234 E548 D128 0001          00000128  17202          MVGHI 296(13),1
0000B23A 4110 D108               00000108  17203          LA    1,264(0,13)
0000B23E E3F0 C108 0004          0000B118  17204          LG    15,@lit_1985_680 ; ut_verify_msgq_order
0000B244                                   17205 @@gen_label985 DS    0H
0000B244 05EF                              17206          BALR  14,15
0000B246                                   17207 @@gen_label986 DS    0H
0000B246 12FF                              17208          LTR   15,15
0000B248 4780 C296               0000B2A6  17209          BZ    @L1195
                                           17210 * ***                           return 1;
0000B24C A7F9 0001               00000001  17211          LGHI  15,1        ; 1
0000B250 E3C0 C110 001A          0000B120  17212          ALGF  12,@lit_region_diff_1985_1_2
                                           17213          DROP  12
                        0000B8B8           17214          USING @REGION_1985_2,12
0000B256 47F0 C7A8               0000C060  17215          B     @ret_lab_1985
                                           17216          DROP  12
                        0000B010           17217          USING @REGION_1985_1,12
                                           17218 * ***           } else {
0000B25A                                   17219 @L1193   DS    0H
                                           17220 * ***                   if (ut_verify_msgq_order("added", &rkmq, 6, 1,\
                                           17221 *  1))
0000B25A E3F0 C0E8 0004          0000B0F8  17222          LG    15,@lit_1985_669
0000B260 41F0 F7CE               000007CE  17223          LA    15,1998(0,15)
0000B264 E3F0 D108 0024          00000108  17224          STG   15,264(0,13)
0000B26A 41F0 D0A8               000000A8  17225          LA    15,168(0,13)
0000B26E E3F0 D110 0024          00000110  17226          STG   15,272(0,13)
0000B274 E548 D118 0006          00000118  17227          MVGHI 280(13),6
0000B27A E548 D120 0001          00000120  17228          MVGHI 288(13),1
0000B280 E548 D128 0001          00000128  17229          MVGHI 296(13),1
0000B286 4110 D108               00000108  17230          LA    1,264(0,13)
0000B28A E3F0 C108 0004          0000B118  17231          LG    15,@lit_1985_680 ; ut_verify_msgq_order
0000B290                                   17232 @@gen_label988 DS    0H
0000B290 05EF                              17233          BALR  14,15
0000B292                                   17234 @@gen_label989 DS    0H
0000B292 12FF                              17235          LTR   15,15
0000B294 4780 C296               0000B2A6  17236          BZ    @L1195
                                           17237 * ***                           return 1;
0000B298 A7F9 0001               00000001  17238          LGHI  15,1        ; 1
0000B29C E3C0 C110 001A          0000B120  17239          ALGF  12,@lit_region_diff_1985_1_2
                                           17240          DROP  12
                        0000B8B8           17241          USING @REGION_1985_2,12
0000B2A2 47F0 C7A8               0000C060  17242          B     @ret_lab_1985
                                           17243          DROP  12
                        0000B010           17244          USING @REGION_1985_1,12
                                           17245 * ***           }
0000B2A6                                   17246 @L1195   DS    0H
                                           17247 * ***
                                           17248 * ***
                                           17249 * ***
                                           17250 * ***           rd_kafka_msgq_init(&sendq);
0000B2A6 41F0 D0C8               000000C8  17251          LA    15,200(0,13)
0000B2AA E3F0 D108 0024          00000108  17252          STG   15,264(0,13)
                                                                                                                           Page  344 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B2B0 4110 D108               00000108  17253          LA    1,264(0,13)
0000B2B4 E3F0 C118 0004          0000B128  17254          LG    15,@lit_1985_685 ; rd_kafka_msgq_init
0000B2BA                                   17255 @@gen_label991 DS    0H
0000B2BA 05EF                              17256          BALR  14,15
0000B2BC                                   17257 @@gen_label992 DS    0H
                                           17258 * ***           while (rd_kafka_msgq_len(&sendq) < 3)
0000B2BC 47F0 C2E2               0000B2F2  17259          B     @L1200
0000B2C0                                   17260 @L1199   DS    0H
                                           17261 * ***                   rd_kafka_msgq_enq(&sendq, rd_kafka_msgq_pop(&r\
                                           17262 * kmq));
0000B2C0 41F0 D0A8               000000A8  17263          LA    15,168(0,13)
0000B2C4 E3F0 D108 0024          00000108  17264          STG   15,264(0,13)
0000B2CA 4110 D108               00000108  17265          LA    1,264(0,13)
0000B2CE E3F0 C120 0004          0000B130  17266          LG    15,@lit_1985_686 ; rd_kafka_msgq_pop
0000B2D4                                   17267 @@gen_label993 DS    0H
0000B2D4 05EF                              17268          BALR  14,15
0000B2D6                                   17269 @@gen_label994 DS    0H
0000B2D6 4110 D0C8               000000C8  17270          LA    1,200(0,13)
0000B2DA E310 D108 0024          00000108  17271          STG   1,264(0,13)
0000B2E0 E3F0 D110 0024          00000110  17272          STG   15,272(0,13)
0000B2E6 4110 D108               00000108  17273          LA    1,264(0,13)
0000B2EA E3F0 C128 0004          0000B138  17274          LG    15,@lit_1985_687 ; rd_kafka_msgq_enq
0000B2F0                                   17275 @@gen_label995 DS    0H
0000B2F0 05EF                              17276          BALR  14,15
0000B2F2                                   17277 @@gen_label996 DS    0H
0000B2F2                                   17278 @L1200   DS    0H
0000B2F2 41F0 D0C8               000000C8  17279          LA    15,200(0,13)
0000B2F6 E3F0 D108 0024          00000108  17280          STG   15,264(0,13)
0000B2FC 4110 D108               00000108  17281          LA    1,264(0,13)
0000B300 E3F0 C130 0004          0000B140  17282          LG    15,@lit_1985_688 ; rd_kafka_msgq_len
0000B306                                   17283 @@gen_label997 DS    0H
0000B306 05EF                              17284          BALR  14,15
0000B308                                   17285 @@gen_label998 DS    0H
0000B308 A7FE 0003               00000003  17286          CHI   15,3
0000B30C 4740 C2B0               0000B2C0  17287          BL    @L1199
                                           17288 * ***
                                           17289 * ***           if (fifo) {
0000B310 1233                              17290          LTR   3,3
0000B312 4780 C39A               0000B3AA  17291          BZ    @L1201
                                           17292 * ***                   if (ut_verify_msgq_order("send removed", &rkmq\
                                           17293 * , 4, 6, 1))
0000B316 E370 C0E8 0004          0000B0F8  17294          LG    7,@lit_1985_669
0000B31C 41F0 77D4               000007D4  17295          LA    15,2004(0,7)
0000B320 E3F0 D108 0024          00000108  17296          STG   15,264(0,13)
0000B326 41F0 D0A8               000000A8  17297          LA    15,168(0,13)
0000B32A E3F0 D110 0024          00000110  17298          STG   15,272(0,13)
0000B330 E548 D118 0004          00000118  17299          MVGHI 280(13),4
0000B336 E548 D120 0006          00000120  17300          MVGHI 288(13),6
0000B33C E548 D128 0001          00000128  17301          MVGHI 296(13),1
0000B342 4110 D108               00000108  17302          LA    1,264(0,13)
0000B346 E380 C108 0004          0000B118  17303          LG    8,@lit_1985_680 ; ut_verify_msgq_order
0000B34C B904 00F8                         17304          LGR   15,8
                                                                                                                           Page  345 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B350                                   17305 @@gen_label1001 DS    0H
0000B350 05EF                              17306          BALR  14,15
0000B352                                   17307 @@gen_label1002 DS    0H
0000B352 12FF                              17308          LTR   15,15
0000B354 4780 C356               0000B366  17309          BZ    @L1202
                                           17310 * ***                           return 1;
0000B358 A7F9 0001               00000001  17311          LGHI  15,1        ; 1
0000B35C E3C0 C110 001A          0000B120  17312          ALGF  12,@lit_region_diff_1985_1_2
                                           17313          DROP  12
                        0000B8B8           17314          USING @REGION_1985_2,12
0000B362 47F0 C7A8               0000C060  17315          B     @ret_lab_1985
                                           17316          DROP  12
                        0000B010           17317          USING @REGION_1985_1,12
0000B366                                   17318 @L1202   DS    0H
                                           17319 * ***
                                           17320 * ***                   if (ut_verify_msgq_order("sendq", &sendq, 1, 3\
                                           17321 * , 1))
0000B366 41F0 77E2               000007E2  17322          LA    15,2018(0,7)
0000B36A E3F0 D108 0024          00000108  17323          STG   15,264(0,13)
0000B370 41F0 D0C8               000000C8  17324          LA    15,200(0,13)
0000B374 E3F0 D110 0024          00000110  17325          STG   15,272(0,13)
0000B37A E548 D118 0001          00000118  17326          MVGHI 280(13),1
0000B380 E548 D120 0003          00000120  17327          MVGHI 288(13),3
0000B386 E548 D128 0001          00000128  17328          MVGHI 296(13),1
0000B38C 4110 D108               00000108  17329          LA    1,264(0,13)
0000B390 B904 00F8                         17330          LGR   15,8
0000B394                                   17331 @@gen_label1004 DS    0H
0000B394 05EF                              17332          BALR  14,15
0000B396                                   17333 @@gen_label1005 DS    0H
0000B396 12FF                              17334          LTR   15,15
0000B398 4780 C42E               0000B43E  17335          BZ    @L1204
                                           17336 * ***                           return 1;
0000B39C A7F9 0001               00000001  17337          LGHI  15,1        ; 1
0000B3A0 E3C0 C110 001A          0000B120  17338          ALGF  12,@lit_region_diff_1985_1_2
                                           17339          DROP  12
                        0000B8B8           17340          USING @REGION_1985_2,12
0000B3A6 47F0 C7A8               0000C060  17341          B     @ret_lab_1985
                                           17342          DROP  12
                        0000B010           17343          USING @REGION_1985_1,12
                                           17344 * ***           } else {
0000B3AA                                   17345 @L1201   DS    0H
                                           17346 * ***                   if (ut_verify_msgq_order("send removed", &rkmq\
                                           17347 * , 3, 1, 1))
0000B3AA E370 C0E8 0004          0000B0F8  17348          LG    7,@lit_1985_669
0000B3B0 41F0 77D4               000007D4  17349          LA    15,2004(0,7)
0000B3B4 E3F0 D108 0024          00000108  17350          STG   15,264(0,13)
0000B3BA 41F0 D0A8               000000A8  17351          LA    15,168(0,13)
0000B3BE E3F0 D110 0024          00000110  17352          STG   15,272(0,13)
0000B3C4 E548 D118 0003          00000118  17353          MVGHI 280(13),3
0000B3CA E548 D120 0001          00000120  17354          MVGHI 288(13),1
0000B3D0 E548 D128 0001          00000128  17355          MVGHI 296(13),1
0000B3D6 4110 D108               00000108  17356          LA    1,264(0,13)
                                                                                                                           Page  346 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B3DA E380 C108 0004          0000B118  17357          LG    8,@lit_1985_680 ; ut_verify_msgq_order
0000B3E0 B904 00F8                         17358          LGR   15,8
0000B3E4                                   17359 @@gen_label1007 DS    0H
0000B3E4 05EF                              17360          BALR  14,15
0000B3E6                                   17361 @@gen_label1008 DS    0H
0000B3E6 12FF                              17362          LTR   15,15
0000B3E8 4780 C3EA               0000B3FA  17363          BZ    @L1205
                                           17364 * ***                           return 1;
0000B3EC A7F9 0001               00000001  17365          LGHI  15,1        ; 1
0000B3F0 E3C0 C110 001A          0000B120  17366          ALGF  12,@lit_region_diff_1985_1_2
                                           17367          DROP  12
                        0000B8B8           17368          USING @REGION_1985_2,12
0000B3F6 47F0 C7A8               0000C060  17369          B     @ret_lab_1985
                                           17370          DROP  12
                        0000B010           17371          USING @REGION_1985_1,12
0000B3FA                                   17372 @L1205   DS    0H
                                           17373 * ***
                                           17374 * ***                   if (ut_verify_msgq_order("sendq", &sendq, 6, 4\
                                           17375 * , 1))
0000B3FA 41F0 77E2               000007E2  17376          LA    15,2018(0,7)
0000B3FE E3F0 D108 0024          00000108  17377          STG   15,264(0,13)
0000B404 41F0 D0C8               000000C8  17378          LA    15,200(0,13)
0000B408 E3F0 D110 0024          00000110  17379          STG   15,272(0,13)
0000B40E E548 D118 0006          00000118  17380          MVGHI 280(13),6
0000B414 E548 D120 0004          00000120  17381          MVGHI 288(13),4
0000B41A E548 D128 0001          00000128  17382          MVGHI 296(13),1
0000B420 4110 D108               00000108  17383          LA    1,264(0,13)
0000B424 B904 00F8                         17384          LGR   15,8
0000B428                                   17385 @@gen_label1010 DS    0H
0000B428 05EF                              17386          BALR  14,15
0000B42A                                   17387 @@gen_label1011 DS    0H
0000B42A 12FF                              17388          LTR   15,15
0000B42C 4780 C42E               0000B43E  17389          BZ    @L1204
                                           17390 * ***                           return 1;
0000B430 A7F9 0001               00000001  17391          LGHI  15,1        ; 1
0000B434 E3C0 C110 001A          0000B120  17392          ALGF  12,@lit_region_diff_1985_1_2
                                           17393          DROP  12
                        0000B8B8           17394          USING @REGION_1985_2,12
0000B43A 47F0 C7A8               0000C060  17395          B     @ret_lab_1985
                                           17396          DROP  12
                        0000B010           17397          USING @REGION_1985_1,12
                                           17398 * ***           }
0000B43E                                   17399 @L1204   DS    0H
                                           17400 * ***
                                           17401 * ***
                                           17402 * ***
                                           17403 * ***           rd_kafka_retry_msgq(&rkmq, &sendq, 1, 1, 0,
                                           17404 * ***                               RD_KAFKA_MSG_STATUS_NOT_PERSISTED,\
                                           17405 *  cmp);
0000B43E 41F0 D0A8               000000A8  17406          LA    15,168(0,13)
0000B442 E3F0 D108 0024          00000108  17407          STG   15,264(0,13)
0000B448 41F0 D0C8               000000C8  17408          LA    15,200(0,13)
                                                                                                                           Page  347 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B44C E3F0 D110 0024          00000110  17409          STG   15,272(0,13)
0000B452 E548 D118 0001          00000118  17410          MVGHI 280(13),1
0000B458 E548 D120 0001          00000120  17411          MVGHI 288(13),1
0000B45E D70F D128 D128 00000128 00000128  17412          XC    296(16,13),296(13)
0000B464 E340 D138 0024          00000138  17413          STG   4,312(0,13)
0000B46A 4110 D108               00000108  17414          LA    1,264(0,13)
0000B46E E3F0 C138 0004          0000B148  17415          LG    15,@lit_1985_699 ; rd_kafka_retry_msgq
0000B474                                   17416 @@gen_label1013 DS    0H
0000B474 05EF                              17417          BALR  14,15
0000B476                                   17418 @@gen_label1014 DS    0H
                                           17419 * ***
                                           17420 * ***           do { if (!(rd_kafka_msgq_len(&sendq) == 0)) { fprintf(\
                                           17421 * __stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "rd_k\
                                           17422 * afka_msgq_len(&sendq) == 0" ": ", "C:\\asgkafka\\librdkafka\\src\\rd\
                                           17423 * kafka_msg.c", 1918, __FUNCTION__); fprintf(__stderrp, "sendq FIFO sh\
                                           17424 * ould be empty, not contain %d messages", rd_kafka_msgq_len(&sendq));\
                                           17425 *  fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure)\
                                           17426 *  ((rd_kafka_msgq_len(&sendq) == 0) ? (void)0 : __assert(__func__, "C\
                                           17427 * :\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 1918, "rd_kafka_msgq_l\
                                           17428 * en(&sendq) == 0")); return 1; } } while (0);
0000B476                                   17429 @L1207   DS    0H
0000B476 41F0 D0C8               000000C8  17430          LA    15,200(0,13)
0000B47A E3F0 D108 0024          00000108  17431          STG   15,264(0,13)
0000B480 4110 D108               00000108  17432          LA    1,264(0,13)
0000B484 E370 C130 0004          0000B140  17433          LG    7,@lit_1985_688 ; rd_kafka_msgq_len
0000B48A B904 00F7                         17434          LGR   15,7
0000B48E                                   17435 @@gen_label1015 DS    0H
0000B48E 05EF                              17436          BALR  14,15
0000B490                                   17437 @@gen_label1016 DS    0H
0000B490 12FF                              17438          LTR   15,15
0000B492 4780 C5A0               0000B5B0  17439          BE    @L1210
0000B496 E320 C0F0 0016          0000B100  17440          LLGF  2,@lit_1985_668 ; __stderrp
0000B49C E3F2 6000 0004          00000000  17441          LG    15,0(2,6)   ; __stderrp
0000B4A2 E3F0 D108 0024          00000108  17442          STG   15,264(0,13)
0000B4A8 E330 C0E8 0004          0000B0F8  17443          LG    3,@lit_1985_669
0000B4AE 41F0 37E8               000007E8  17444          LA    15,2024(0,3)
0000B4B2 E3F0 D110 0024          00000110  17445          STG   15,272(0,13)
0000B4B8 41F0 32C2               000002C2  17446          LA    15,706(0,3)
0000B4BC E3F0 D118 0024          00000118  17447          STG   15,280(0,13)
0000B4C2 E548 D120 077E          00000120  17448          MVGHI 288(13),1918
0000B4C8 E340 C0E0 0004          0000B0F0  17449          LG    4,@lit_1985_670
0000B4CE 41F0 4300               00000300  17450          LA    15,768(0,4)
0000B4D2 E3F0 D128 0024          00000128  17451          STG   15,296(0,13)
0000B4D8 4110 D108               00000108  17452          LA    1,264(0,13)
0000B4DC E350 C0D8 0004          0000B0E8  17453          LG    5,@lit_1985_671 ; fprintf
0000B4E2 B904 00F5                         17454          LGR   15,5
0000B4E6                                   17455 @@gen_label1018 DS    0H
0000B4E6 05EF                              17456          BALR  14,15
0000B4E8                                   17457 @@gen_label1019 DS    0H
0000B4E8 41F0 D0C8               000000C8  17458          LA    15,200(0,13)
0000B4EC E3F0 D108 0024          00000108  17459          STG   15,264(0,13)
0000B4F2 4110 D108               00000108  17460          LA    1,264(0,13)
                                                                                                                           Page  348 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B4F6 B904 00F7                         17461          LGR   15,7
0000B4FA                                   17462 @@gen_label1020 DS    0H
0000B4FA 05EF                              17463          BALR  14,15
0000B4FC                                   17464 @@gen_label1021 DS    0H
0000B4FC E312 6000 0004          00000000  17465          LG    1,0(2,6)    ; __stderrp
0000B502 E310 D108 0024          00000108  17466          STG   1,264(0,13)
0000B508 4110 3834               00000834  17467          LA    1,2100(0,3)
0000B50C E310 D110 0024          00000110  17468          STG   1,272(0,13)
0000B512 B914 00FF                         17469          LGFR  15,15
0000B516 E3F0 D118 0024          00000118  17470          STG   15,280(0,13)
0000B51C 4110 D108               00000108  17471          LA    1,264(0,13)
0000B520 B904 00F5                         17472          LGR   15,5
0000B524                                   17473 @@gen_label1022 DS    0H
0000B524 05EF                              17474          BALR  14,15
0000B526                                   17475 @@gen_label1023 DS    0H
0000B526 E3F2 6000 0004          00000000  17476          LG    15,0(2,6)   ; __stderrp
0000B52C E3F0 D108 0024          00000108  17477          STG   15,264(0,13)
0000B532 41F0 379C               0000079C  17478          LA    15,1948(0,3)
0000B536 E3F0 D110 0024          00000110  17479          STG   15,272(0,13)
0000B53C 4110 D108               00000108  17480          LA    1,264(0,13)
0000B540 B904 00F5                         17481          LGR   15,5
0000B544                                   17482 @@gen_label1024 DS    0H
0000B544 05EF                              17483          BALR  14,15
0000B546                                   17484 @@gen_label1025 DS    0H
0000B546 E3F0 C140 0016          0000B150  17485          LLGF  15,@lit_1985_710 ; rd_unittest_assert_on_failure
0000B54C 41FF 6000               00000000  17486          LA    15,0(15,6)
0000B550 9500 F000      00000000 00000000  17487          CLI   0(15),0
0000B554 4780 C592               0000B5A2  17488          BE    @L1211
0000B558 41F0 D0C8               000000C8  17489          LA    15,200(0,13)
0000B55C E3F0 D108 0024          00000108  17490          STG   15,264(0,13)
0000B562 4110 D108               00000108  17491          LA    1,264(0,13)
0000B566 B904 00F7                         17492          LGR   15,7
0000B56A                                   17493 @@gen_label1027 DS    0H
0000B56A 05EF                              17494          BALR  14,15
0000B56C                                   17495 @@gen_label1028 DS    0H
0000B56C 12FF                              17496          LTR   15,15
0000B56E 4780 C592               0000B5A2  17497          BE    @L1211
0000B572                                   17498 @L1212   DS    0H
0000B572 41F0 4300               00000300  17499          LA    15,768(0,4)
0000B576 E3F0 D108 0024          00000108  17500          STG   15,264(0,13)
0000B57C 41F0 32C2               000002C2  17501          LA    15,706(0,3)
0000B580 E3F0 D110 0024          00000110  17502          STG   15,272(0,13)
0000B586 E548 D118 077E          00000118  17503          MVGHI 280(13),1918
0000B58C 41F0 3868               00000868  17504          LA    15,2152(0,3)
0000B590 E3F0 D120 0024          00000120  17505          STG   15,288(0,13)
0000B596 4110 D108               00000108  17506          LA    1,264(0,13)
0000B59A E3F0 C148 0004          0000B158  17507          LG    15,@lit_1985_712 ; __assert
0000B5A0                                   17508 @@gen_label1030 DS    0H
0000B5A0 05EF                              17509          BALR  14,15
0000B5A2                                   17510 @@gen_label1031 DS    0H
0000B5A2                                   17511 @L1213   DS    0H
0000B5A2                                   17512 @L1211   DS    0H
                                                                                                                           Page  349 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B5A2 A7F9 0001               00000001  17513          LGHI  15,1        ; 1
0000B5A6 E3C0 C110 001A          0000B120  17514          ALGF  12,@lit_region_diff_1985_1_2
                                           17515          DROP  12
                        0000B8B8           17516          USING @REGION_1985_2,12
0000B5AC 47F0 C7A8               0000C060  17517          B     @ret_lab_1985
                                           17518          DROP  12
                        0000B010           17519          USING @REGION_1985_1,12
0000B5B0                                   17520 @L1210   DS    0H
                                           17521 * ***
                                           17522 * ***
                                           17523 * ***
                                           17524 * ***           if (fifo) {
0000B5B0 1233                              17525          LTR   3,3
0000B5B2 4780 C5F2               0000B602  17526          BZ    @L1214
                                           17527 * ***                   if (ut_verify_msgq_order("readded", &rkmq, 1, \
                                           17528 * 6, 1))
0000B5B6 E3F0 C0E8 0004          0000B0F8  17529          LG    15,@lit_1985_669
0000B5BC 41F0 F888               00000888  17530          LA    15,2184(0,15)
0000B5C0 E3F0 D108 0024          00000108  17531          STG   15,264(0,13)
0000B5C6 41F0 D0A8               000000A8  17532          LA    15,168(0,13)
0000B5CA E3F0 D110 0024          00000110  17533          STG   15,272(0,13)
0000B5D0 E548 D118 0001          00000118  17534          MVGHI 280(13),1
0000B5D6 E548 D120 0006          00000120  17535          MVGHI 288(13),6
0000B5DC E548 D128 0001          00000128  17536          MVGHI 296(13),1
0000B5E2 4110 D108               00000108  17537          LA    1,264(0,13)
0000B5E6 E3F0 C108 0004          0000B118  17538          LG    15,@lit_1985_680 ; ut_verify_msgq_order
0000B5EC                                   17539 @@gen_label1033 DS    0H
0000B5EC 05EF                              17540          BALR  14,15
0000B5EE                                   17541 @@gen_label1034 DS    0H
0000B5EE 12FF                              17542          LTR   15,15
0000B5F0 4780 C63E               0000B64E  17543          BZ    @L1216
                                           17544 * ***                           return 1;
0000B5F4 A7F9 0001               00000001  17545          LGHI  15,1        ; 1
0000B5F8 E3C0 C110 001A          0000B120  17546          ALGF  12,@lit_region_diff_1985_1_2
                                           17547          DROP  12
                        0000B8B8           17548          USING @REGION_1985_2,12
0000B5FE 47F0 C7A8               0000C060  17549          B     @ret_lab_1985
                                           17550          DROP  12
                        0000B010           17551          USING @REGION_1985_1,12
                                           17552 * ***           } else {
0000B602                                   17553 @L1214   DS    0H
                                           17554 * ***                   if (ut_verify_msgq_order("readded", &rkmq, 6, \
                                           17555 * 1, 1))
0000B602 E3F0 C0E8 0004          0000B0F8  17556          LG    15,@lit_1985_669
0000B608 41F0 F888               00000888  17557          LA    15,2184(0,15)
0000B60C E3F0 D108 0024          00000108  17558          STG   15,264(0,13)
0000B612 41F0 D0A8               000000A8  17559          LA    15,168(0,13)
0000B616 E3F0 D110 0024          00000110  17560          STG   15,272(0,13)
0000B61C E548 D118 0006          00000118  17561          MVGHI 280(13),6
0000B622 E548 D120 0001          00000120  17562          MVGHI 288(13),1
0000B628 E548 D128 0001          00000128  17563          MVGHI 296(13),1
0000B62E 4110 D108               00000108  17564          LA    1,264(0,13)
                                                                                                                           Page  350 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B632 E3F0 C108 0004          0000B118  17565          LG    15,@lit_1985_680 ; ut_verify_msgq_order
0000B638                                   17566 @@gen_label1036 DS    0H
0000B638 05EF                              17567          BALR  14,15
0000B63A                                   17568 @@gen_label1037 DS    0H
0000B63A 12FF                              17569          LTR   15,15
0000B63C 4780 C63E               0000B64E  17570          BZ    @L1216
                                           17571 * ***                           return 1;
0000B640 A7F9 0001               00000001  17572          LGHI  15,1        ; 1
0000B644 E3C0 C110 001A          0000B120  17573          ALGF  12,@lit_region_diff_1985_1_2
                                           17574          DROP  12
                        0000B8B8           17575          USING @REGION_1985_2,12
0000B64A 47F0 C7A8               0000C060  17576          B     @ret_lab_1985
                                           17577          DROP  12
                        0000B010           17578          USING @REGION_1985_1,12
                                           17579 * ***           }
0000B64E                                   17580 @L1216   DS    0H
                                           17581 * ***
                                           17582 * ***
                                           17583 * ***
                                           17584 * ***
                                           17585 * ***           rd_kafka_msgq_init(&sendq);
0000B64E 41F0 D0C8               000000C8  17586          LA    15,200(0,13)
0000B652 E3F0 D108 0024          00000108  17587          STG   15,264(0,13)
0000B658 4110 D108               00000108  17588          LA    1,264(0,13)
0000B65C E3F0 C118 0004          0000B128  17589          LG    15,@lit_1985_685 ; rd_kafka_msgq_init
0000B662                                   17590 @@gen_label1039 DS    0H
0000B662 05EF                              17591          BALR  14,15
0000B664                                   17592 @@gen_label1040 DS    0H
                                           17593 * ***           while (rd_kafka_msgq_len(&sendq) < 4)
0000B664 47F0 C68A               0000B69A  17594          B     @L1221
0000B668                                   17595 @L1220   DS    0H
                                           17596 * ***                   rd_kafka_msgq_enq(&sendq, rd_kafka_msgq_pop(&r\
                                           17597 * kmq));
0000B668 41F0 D0A8               000000A8  17598          LA    15,168(0,13)
0000B66C E3F0 D108 0024          00000108  17599          STG   15,264(0,13)
0000B672 4110 D108               00000108  17600          LA    1,264(0,13)
0000B676 E3F0 C120 0004          0000B130  17601          LG    15,@lit_1985_686 ; rd_kafka_msgq_pop
0000B67C                                   17602 @@gen_label1041 DS    0H
0000B67C 05EF                              17603          BALR  14,15
0000B67E                                   17604 @@gen_label1042 DS    0H
0000B67E 4110 D0C8               000000C8  17605          LA    1,200(0,13)
0000B682 E310 D108 0024          00000108  17606          STG   1,264(0,13)
0000B688 E3F0 D110 0024          00000110  17607          STG   15,272(0,13)
0000B68E 4110 D108               00000108  17608          LA    1,264(0,13)
0000B692 E3F0 C128 0004          0000B138  17609          LG    15,@lit_1985_687 ; rd_kafka_msgq_enq
0000B698                                   17610 @@gen_label1043 DS    0H
0000B698 05EF                              17611          BALR  14,15
0000B69A                                   17612 @@gen_label1044 DS    0H
0000B69A                                   17613 @L1221   DS    0H
0000B69A 41F0 D0C8               000000C8  17614          LA    15,200(0,13)
0000B69E E3F0 D108 0024          00000108  17615          STG   15,264(0,13)
0000B6A4 4110 D108               00000108  17616          LA    1,264(0,13)
                                                                                                                           Page  351 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B6A8 E3F0 C130 0004          0000B140  17617          LG    15,@lit_1985_688 ; rd_kafka_msgq_len
0000B6AE                                   17618 @@gen_label1045 DS    0H
0000B6AE 05EF                              17619          BALR  14,15
0000B6B0                                   17620 @@gen_label1046 DS    0H
0000B6B0 A7FE 0004               00000004  17621          CHI   15,4
0000B6B4 4740 C658               0000B668  17622          BL    @L1220
                                           17623 * ***
                                           17624 * ***           if (fifo) {
0000B6B8 1233                              17625          LTR   3,3
0000B6BA 4780 C742               0000B752  17626          BZ    @L1222
                                           17627 * ***                   if (ut_verify_msgq_order("send removed #2", &r\
                                           17628 * kmq, 5, 6,
                                           17629 * ***                                            1))
0000B6BE E370 C0E8 0004          0000B0F8  17630          LG    7,@lit_1985_669
0000B6C4 41F0 7890               00000890  17631          LA    15,2192(0,7)
0000B6C8 E3F0 D108 0024          00000108  17632          STG   15,264(0,13)
0000B6CE 41F0 D0A8               000000A8  17633          LA    15,168(0,13)
0000B6D2 E3F0 D110 0024          00000110  17634          STG   15,272(0,13)
0000B6D8 E548 D118 0005          00000118  17635          MVGHI 280(13),5
0000B6DE E548 D120 0006          00000120  17636          MVGHI 288(13),6
0000B6E4 E548 D128 0001          00000128  17637          MVGHI 296(13),1
0000B6EA 4110 D108               00000108  17638          LA    1,264(0,13)
0000B6EE E380 C108 0004          0000B118  17639          LG    8,@lit_1985_680 ; ut_verify_msgq_order
0000B6F4 B904 00F8                         17640          LGR   15,8
0000B6F8                                   17641 @@gen_label1049 DS    0H
0000B6F8 05EF                              17642          BALR  14,15
0000B6FA                                   17643 @@gen_label1050 DS    0H
0000B6FA 12FF                              17644          LTR   15,15
0000B6FC 4780 C6FE               0000B70E  17645          BZ    @L1223
                                           17646 * ***                           return 1;
0000B700 A7F9 0001               00000001  17647          LGHI  15,1        ; 1
0000B704 E3C0 C110 001A          0000B120  17648          ALGF  12,@lit_region_diff_1985_1_2
                                           17649          DROP  12
                        0000B8B8           17650          USING @REGION_1985_2,12
0000B70A 47F0 C7A8               0000C060  17651          B     @ret_lab_1985
                                           17652          DROP  12
                        0000B010           17653          USING @REGION_1985_1,12
0000B70E                                   17654 @L1223   DS    0H
                                           17655 * ***
                                           17656 * ***                   if (ut_verify_msgq_order("sendq #2", &sendq, 1\
                                           17657 * , 4, 1))
0000B70E 41F0 78A0               000008A0  17658          LA    15,2208(0,7)
0000B712 E3F0 D108 0024          00000108  17659          STG   15,264(0,13)
0000B718 41F0 D0C8               000000C8  17660          LA    15,200(0,13)
0000B71C E3F0 D110 0024          00000110  17661          STG   15,272(0,13)
0000B722 E548 D118 0001          00000118  17662          MVGHI 280(13),1
0000B728 E548 D120 0004          00000120  17663          MVGHI 288(13),4
0000B72E E548 D128 0001          00000128  17664          MVGHI 296(13),1
0000B734 4110 D108               00000108  17665          LA    1,264(0,13)
0000B738 B904 00F8                         17666          LGR   15,8
0000B73C                                   17667 @@gen_label1052 DS    0H
0000B73C 05EF                              17668          BALR  14,15
                                                                                                                           Page  352 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B73E                                   17669 @@gen_label1053 DS    0H
0000B73E 12FF                              17670          LTR   15,15
0000B740 4780 C7D6               0000B7E6  17671          BZ    @L1225
                                           17672 * ***                           return 1;
0000B744 A7F9 0001               00000001  17673          LGHI  15,1        ; 1
0000B748 E3C0 C110 001A          0000B120  17674          ALGF  12,@lit_region_diff_1985_1_2
                                           17675          DROP  12
                        0000B8B8           17676          USING @REGION_1985_2,12
0000B74E 47F0 C7A8               0000C060  17677          B     @ret_lab_1985
                                           17678          DROP  12
                        0000B010           17679          USING @REGION_1985_1,12
                                           17680 * ***           } else {
0000B752                                   17681 @L1222   DS    0H
                                           17682 * ***                   if (ut_verify_msgq_order("send removed #2", &r\
                                           17683 * kmq, 2, 1,
                                           17684 * ***                                            1))
0000B752 E370 C0E8 0004          0000B0F8  17685          LG    7,@lit_1985_669
0000B758 41F0 7890               00000890  17686          LA    15,2192(0,7)
0000B75C E3F0 D108 0024          00000108  17687          STG   15,264(0,13)
0000B762 41F0 D0A8               000000A8  17688          LA    15,168(0,13)
0000B766 E3F0 D110 0024          00000110  17689          STG   15,272(0,13)
0000B76C E548 D118 0002          00000118  17690          MVGHI 280(13),2
0000B772 E548 D120 0001          00000120  17691          MVGHI 288(13),1
0000B778 E548 D128 0001          00000128  17692          MVGHI 296(13),1
0000B77E 4110 D108               00000108  17693          LA    1,264(0,13)
0000B782 E380 C108 0004          0000B118  17694          LG    8,@lit_1985_680 ; ut_verify_msgq_order
0000B788 B904 00F8                         17695          LGR   15,8
0000B78C                                   17696 @@gen_label1055 DS    0H
0000B78C 05EF                              17697          BALR  14,15
0000B78E                                   17698 @@gen_label1056 DS    0H
0000B78E 12FF                              17699          LTR   15,15
0000B790 4780 C792               0000B7A2  17700          BZ    @L1226
                                           17701 * ***                           return 1;
0000B794 A7F9 0001               00000001  17702          LGHI  15,1        ; 1
0000B798 E3C0 C110 001A          0000B120  17703          ALGF  12,@lit_region_diff_1985_1_2
                                           17704          DROP  12
                        0000B8B8           17705          USING @REGION_1985_2,12
0000B79E 47F0 C7A8               0000C060  17706          B     @ret_lab_1985
                                           17707          DROP  12
                        0000B010           17708          USING @REGION_1985_1,12
0000B7A2                                   17709 @L1226   DS    0H
                                           17710 * ***
                                           17711 * ***                   if (ut_verify_msgq_order("sendq #2", &sendq, 6\
                                           17712 * , 3, 1))
0000B7A2 41F0 78A0               000008A0  17713          LA    15,2208(0,7)
0000B7A6 E3F0 D108 0024          00000108  17714          STG   15,264(0,13)
0000B7AC 41F0 D0C8               000000C8  17715          LA    15,200(0,13)
0000B7B0 E3F0 D110 0024          00000110  17716          STG   15,272(0,13)
0000B7B6 E548 D118 0006          00000118  17717          MVGHI 280(13),6
0000B7BC E548 D120 0003          00000120  17718          MVGHI 288(13),3
0000B7C2 E548 D128 0001          00000128  17719          MVGHI 296(13),1
0000B7C8 4110 D108               00000108  17720          LA    1,264(0,13)
                                                                                                                           Page  353 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B7CC B904 00F8                         17721          LGR   15,8
0000B7D0                                   17722 @@gen_label1058 DS    0H
0000B7D0 05EF                              17723          BALR  14,15
0000B7D2                                   17724 @@gen_label1059 DS    0H
0000B7D2 12FF                              17725          LTR   15,15
0000B7D4 4780 C7D6               0000B7E6  17726          BZ    @L1225
                                           17727 * ***                           return 1;
0000B7D8 A7F9 0001               00000001  17728          LGHI  15,1        ; 1
0000B7DC E3C0 C110 001A          0000B120  17729          ALGF  12,@lit_region_diff_1985_1_2
                                           17730          DROP  12
                        0000B8B8           17731          USING @REGION_1985_2,12
0000B7E2 47F0 C7A8               0000C060  17732          B     @ret_lab_1985
                                           17733          DROP  12
                        0000B010           17734          USING @REGION_1985_1,12
                                           17735 * ***           }
0000B7E6                                   17736 @L1225   DS    0H
                                           17737 * ***
                                           17738 * ***
                                           17739 * ***
                                           17740 * ***           rd_kafka_retry_msgq(&rkmq, &sendq, 1, 1, 0,
                                           17741 * ***                               RD_KAFKA_MSG_STATUS_NOT_PERSISTED,\
                                           17742 *  cmp);
0000B7E6 41F0 D0A8               000000A8  17743          LA    15,168(0,13)
0000B7EA E3F0 D108 0024          00000108  17744          STG   15,264(0,13)
0000B7F0 41F0 D0C8               000000C8  17745          LA    15,200(0,13)
0000B7F4 E3F0 D110 0024          00000110  17746          STG   15,272(0,13)
0000B7FA E548 D118 0001          00000118  17747          MVGHI 280(13),1
0000B800 E548 D120 0001          00000120  17748          MVGHI 288(13),1
0000B806 D70F D128 D128 00000128 00000128  17749          XC    296(16,13),296(13)
0000B80C E340 D138 0024          00000138  17750          STG   4,312(0,13)
0000B812 4110 D108               00000108  17751          LA    1,264(0,13)
0000B816 E370 C138 0004          0000B148  17752          LG    7,@lit_1985_699 ; rd_kafka_retry_msgq
0000B81C B904 00F7                         17753          LGR   15,7
0000B820                                   17754 @@gen_label1061 DS    0H
0000B820 05EF                              17755          BALR  14,15
0000B822                                   17756 @@gen_label1062 DS    0H
                                           17757 * ***
                                           17758 * ***           if (fifo) {
0000B822 1233                              17759          LTR   3,3
0000B824 4770 C822               0000B832  17760          BNZ   *+14  Around region break
0000B828 E3C0 C110 001A          0000B120  17761          ALGF  12,@lit_region_diff_1985_1_2
                                           17762          DROP  12
                        0000B8B8           17763          USING @REGION_1985_2,12
0000B82E 47F0 C088               0000B940  17764          B     @L1228
                                           17765          DROP  12
                        0000B010           17766          USING @REGION_1985_1,12
                                           17767 * ***                   if (ut_verify_msgq_order("readded #2", &rkmq, \
                                           17768 * 4, 6, 1))
0000B832 E380 C0E8 0004          0000B0F8  17769          LG    8,@lit_1985_669
0000B838 41F0 88AA               000008AA  17770          LA    15,2218(0,8)
0000B83C E3F0 D108 0024          00000108  17771          STG   15,264(0,13)
0000B842 41F0 D0A8               000000A8  17772          LA    15,168(0,13)
                                                                                                                           Page  354 
  Active Usings: @REGION_1985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B846 E3F0 D110 0024          00000110  17773          STG   15,272(0,13)
0000B84C E548 D118 0004          00000118  17774          MVGHI 280(13),4
0000B852 E548 D120 0006          00000120  17775          MVGHI 288(13),6
0000B858 E548 D128 0001          00000128  17776          MVGHI 296(13),1
0000B85E 4110 D108               00000108  17777          LA    1,264(0,13)
0000B862 E390 C108 0004          0000B118  17778          LG    9,@lit_1985_680 ; ut_verify_msgq_order
0000B868 B904 00F9                         17779          LGR   15,9
0000B86C                                   17780 @@gen_label1064 DS    0H
0000B86C 05EF                              17781          BALR  14,15
0000B86E                                   17782 @@gen_label1065 DS    0H
0000B86E 12FF                              17783          LTR   15,15
0000B870 4780 C872               0000B882  17784          BZ    @L1229
                                           17785 * ***                           return 1;
0000B874 A7F9 0001               00000001  17786          LGHI  15,1        ; 1
0000B878 E3C0 C110 001A          0000B120  17787          ALGF  12,@lit_region_diff_1985_1_2
                                           17788          DROP  12
                        0000B8B8           17789          USING @REGION_1985_2,12
0000B87E 47F0 C7A8               0000C060  17790          B     @ret_lab_1985
                                           17791          DROP  12
                        0000B010           17792          USING @REGION_1985_1,12
0000B882                                   17793 @L1229   DS    0H
                                           17794 * ***
                                           17795 * ***                   if (ut_verify_msgq_order("no more retries", &s\
                                           17796 * endq, 1, 3,
                                           17797 * ***                                            1))
0000B882 41F0 88B6               000008B6  17798          LA    15,2230(0,8)
0000B886 E3F0 D108 0024          00000108  17799          STG   15,264(0,13)
0000B88C 41F0 D0C8               000000C8  17800          LA    15,200(0,13)
0000B890 E3F0 D110 0024          00000110  17801          STG   15,272(0,13)
0000B896 E548 D118 0001          00000118  17802          MVGHI 280(13),1
0000B89C E548 D120 0003          00000120  17803          MVGHI 288(13),3
0000B8A2 E548 D128 0001          00000128  17804          MVGHI 296(13),1
0000B8A8 4110 D108               00000108  17805          LA    1,264(0,13)
0000B8AC B904 00F9                         17806          LGR   15,9
0000B8B0                                   17807 @@gen_label1067 DS    0H
0000B8B0 05EF                              17808          BALR  14,15
0000B8B2                                   17809 @@gen_label1068 DS    0H
0000B8B2 E3C0 C110 001A          0000B120  17810          ALGF  12,@lit_region_diff_1985_1_2
0000B8B8                                   17811 @REGION_1985_2 DS 0H
                                           17812          DROP  12
                        0000B8B8           17813          USING @REGION_1985_2,12
0000B8B8 12FF                              17814          LTR   15,15
0000B8BA 4780 C110               0000B9C8  17815          BZ    @L1231
                                           17816 * ***                           return 1;
0000B8BE A7F9 0001               00000001  17817          LGHI  15,1        ; 1
0000B8C2 47F0 C7A8               0000C060  17818          B     @ret_lab_1985
0000B8C8                                   17819          DS    0D
0000B8C8 000000000000ABF0                  17820 @lit_1985_741 DC AD(ut_verify_msgq_order)
0000B8D0 000000000000ECA4                  17821 @lit_1985_740 DC AD(@strings@)
0000B8D8 0000000000001628                  17822 @lit_1985_746 DC AD(rd_kafka_msgq_init)
0000B8E0 00000000000018E8                  17823 @lit_1985_748 DC AD(rd_kafka_msgq_pop)
0000B8E8 0000000000001B60                  17824 @lit_1985_749 DC AD(rd_kafka_msgq_enq)
                                                                                                                           Page  355 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B8F0 0000000000001528                  17825 @lit_1985_750 DC AD(rd_kafka_msgq_len)
0000B8F8 000000000000A8E0                  17826 @lit_1985_754 DC AD(ut_rd_kafka_msg_new)
0000B900 0000000000005D78                  17827 @lit_1985_755 DC AD(rd_kafka_msgq_enq_sorted0)
0000B908 0000000000000000                  17828 @lit_1985_756 DC AD(rd_kafka_retry_msgq)
0000B910 0000000000000000                  17829 @lit_1985_762 DC AD(fprintf)
0000B918 000000000000E868                  17830 @lit_1985_761 DC AD(@DATA)
0000B920 00000000                          17831 @lit_1985_759 DC Q(__stderrp)
0000B924 00000000                          17832 @lit_1985_768 DC Q(rd_unittest_assert_on_failure)
0000B928 0000000000000000                  17833 @lit_1985_770 DC AD(__assert)
0000B930 00000000000015A8                  17834 @lit_1985_792 DC AD(rd_kafka_msgq_size)
0000B938 000000000000AA90                  17835 @lit_1985_809 DC AD(ut_rd_kafka_msgq_purge)
                                           17836 * ***
                                           17837 * ***           } else {
0000B940                                   17838 @L1228   DS    0H
                                           17839 * ***                   if (ut_verify_msgq_order("readded #2", &rkmq, \
                                           17840 * 3, 1, 1))
0000B940 E380 C018 0004          0000B8D0  17841          LG    8,@lit_1985_740
0000B946 41F0 88AA               000008AA  17842          LA    15,2218(0,8)
0000B94A E3F0 D108 0024          00000108  17843          STG   15,264(0,13)
0000B950 41F0 D0A8               000000A8  17844          LA    15,168(0,13)
0000B954 E3F0 D110 0024          00000110  17845          STG   15,272(0,13)
0000B95A E548 D118 0003          00000118  17846          MVGHI 280(13),3
0000B960 E548 D120 0001          00000120  17847          MVGHI 288(13),1
0000B966 E548 D128 0001          00000128  17848          MVGHI 296(13),1
0000B96C 4110 D108               00000108  17849          LA    1,264(0,13)
0000B970 E390 C010 0004          0000B8C8  17850          LG    9,@lit_1985_741 ; ut_verify_msgq_order
0000B976 B904 00F9                         17851          LGR   15,9
0000B97A                                   17852 @@gen_label1070 DS    0H
0000B97A 05EF                              17853          BALR  14,15
0000B97C                                   17854 @@gen_label1071 DS    0H
0000B97C 12FF                              17855          LTR   15,15
0000B97E 4780 C0D2               0000B98A  17856          BZ    @L1232
                                           17857 * ***                           return 1;
0000B982 A7F9 0001               00000001  17858          LGHI  15,1        ; 1
0000B986 47F0 C7A8               0000C060  17859          B     @ret_lab_1985
0000B98A                                   17860 @L1232   DS    0H
                                           17861 * ***
                                           17862 * ***                   if (ut_verify_msgq_order("no more retries", &s\
                                           17863 * endq, 6, 4,
                                           17864 * ***                                            1))
0000B98A 41F0 88B6               000008B6  17865          LA    15,2230(0,8)
0000B98E E3F0 D108 0024          00000108  17866          STG   15,264(0,13)
0000B994 41F0 D0C8               000000C8  17867          LA    15,200(0,13)
0000B998 E3F0 D110 0024          00000110  17868          STG   15,272(0,13)
0000B99E E548 D118 0006          00000118  17869          MVGHI 280(13),6
0000B9A4 E548 D120 0004          00000120  17870          MVGHI 288(13),4
0000B9AA E548 D128 0001          00000128  17871          MVGHI 296(13),1
0000B9B0 4110 D108               00000108  17872          LA    1,264(0,13)
0000B9B4 B904 00F9                         17873          LGR   15,9
0000B9B8                                   17874 @@gen_label1073 DS    0H
0000B9B8 05EF                              17875          BALR  14,15
0000B9BA                                   17876 @@gen_label1074 DS    0H
                                                                                                                           Page  356 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B9BA 12FF                              17877          LTR   15,15
0000B9BC 4780 C110               0000B9C8  17878          BZ    @L1231
                                           17879 * ***                           return 1;
0000B9C0 A7F9 0001               00000001  17880          LGHI  15,1        ; 1
0000B9C4 47F0 C7A8               0000C060  17881          B     @ret_lab_1985
                                           17882 * ***           }
0000B9C8                                   17883 @L1231   DS    0H
                                           17884 * ***
                                           17885 * ***
                                           17886 * ***           rd_kafka_retry_msgq(&rkmq, &sendq, 0, 1000, 0,
                                           17887 * ***                               RD_KAFKA_MSG_STATUS_NOT_PERSISTED,\
                                           17888 *  cmp);
0000B9C8 41F0 D0A8               000000A8  17889          LA    15,168(0,13)
0000B9CC E3F0 D108 0024          00000108  17890          STG   15,264(0,13)
0000B9D2 41F0 D0C8               000000C8  17891          LA    15,200(0,13)
0000B9D6 E3F0 D110 0024          00000110  17892          STG   15,272(0,13)
0000B9DC D707 D118 D118 00000118 00000118  17893          XC    280(8,13),280(13)
0000B9E2 E548 D120 03E8          00000120  17894          MVGHI 288(13),1000
0000B9E8 D70F D128 D128 00000128 00000128  17895          XC    296(16,13),296(13)
0000B9EE E340 D138 0024          00000138  17896          STG   4,312(0,13)
0000B9F4 4110 D108               00000108  17897          LA    1,264(0,13)
0000B9F8 B904 00F7                         17898          LGR   15,7
0000B9FC                                   17899 @@gen_label1076 DS    0H
0000B9FC 05EF                              17900          BALR  14,15
0000B9FE                                   17901 @@gen_label1077 DS    0H
                                           17902 * ***
                                           17903 * ***
                                           17904 * ***
                                           17905 * ***
                                           17906 * ***
                                           17907 * ***
                                           17908 * ***
                                           17909 * ***           rd_kafka_msgq_init(&sendq);
0000B9FE 41F0 D0C8               000000C8  17910          LA    15,200(0,13)
0000BA02 E3F0 D108 0024          00000108  17911          STG   15,264(0,13)
0000BA08 4110 D108               00000108  17912          LA    1,264(0,13)
0000BA0C E370 C020 0004          0000B8D8  17913          LG    7,@lit_1985_746 ; rd_kafka_msgq_init
0000BA12 B904 00F7                         17914          LGR   15,7
0000BA16                                   17915 @@gen_label1078 DS    0H
0000BA16 05EF                              17916          BALR  14,15
0000BA18                                   17917 @@gen_label1079 DS    0H
                                           17918 * ***           rd_kafka_msgq_init(&sendq2);
0000BA18 41F0 D0E8               000000E8  17919          LA    15,232(0,13)
0000BA1C E3F0 D108 0024          00000108  17920          STG   15,264(0,13)
0000BA22 4110 D108               00000108  17921          LA    1,264(0,13)
0000BA26 B904 00F7                         17922          LGR   15,7
0000BA2A                                   17923 @@gen_label1080 DS    0H
0000BA2A 05EF                              17924          BALR  14,15
0000BA2C                                   17925 @@gen_label1081 DS    0H
                                           17926 * ***
                                           17927 * ***           while (rd_kafka_msgq_len(&sendq) < 3)
0000BA2C 47F0 C1AA               0000BA62  17928          B     @L1237
                                                                                                                           Page  357 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BA30                                   17929 @L1236   DS    0H
                                           17930 * ***                   rd_kafka_msgq_enq(&sendq, rd_kafka_msgq_pop(&r\
                                           17931 * kmq));
0000BA30 41F0 D0A8               000000A8  17932          LA    15,168(0,13)
0000BA34 E3F0 D108 0024          00000108  17933          STG   15,264(0,13)
0000BA3A 4110 D108               00000108  17934          LA    1,264(0,13)
0000BA3E E3F0 C028 0004          0000B8E0  17935          LG    15,@lit_1985_748 ; rd_kafka_msgq_pop
0000BA44                                   17936 @@gen_label1082 DS    0H
0000BA44 05EF                              17937          BALR  14,15
0000BA46                                   17938 @@gen_label1083 DS    0H
0000BA46 4110 D0C8               000000C8  17939          LA    1,200(0,13)
0000BA4A E310 D108 0024          00000108  17940          STG   1,264(0,13)
0000BA50 E3F0 D110 0024          00000110  17941          STG   15,272(0,13)
0000BA56 4110 D108               00000108  17942          LA    1,264(0,13)
0000BA5A E3F0 C030 0004          0000B8E8  17943          LG    15,@lit_1985_749 ; rd_kafka_msgq_enq
0000BA60                                   17944 @@gen_label1084 DS    0H
0000BA60 05EF                              17945          BALR  14,15
0000BA62                                   17946 @@gen_label1085 DS    0H
0000BA62                                   17947 @L1237   DS    0H
0000BA62 41F0 D0C8               000000C8  17948          LA    15,200(0,13)
0000BA66 E3F0 D108 0024          00000108  17949          STG   15,264(0,13)
0000BA6C 4110 D108               00000108  17950          LA    1,264(0,13)
0000BA70 E3F0 C038 0004          0000B8F0  17951          LG    15,@lit_1985_750 ; rd_kafka_msgq_len
0000BA76                                   17952 @@gen_label1086 DS    0H
0000BA76 05EF                              17953          BALR  14,15
0000BA78                                   17954 @@gen_label1087 DS    0H
0000BA78 A7FE 0003               00000003  17955          CHI   15,3
0000BA7C 4740 C178               0000BA30  17956          BL    @L1236
                                           17957 * ***
                                           17958 * ***           while (rd_kafka_msgq_len(&sendq2) < 3)
0000BA80 47F0 C1FE               0000BAB6  17959          B     @L1241
0000BA84                                   17960 @L1240   DS    0H
                                           17961 * ***                   rd_kafka_msgq_enq(&sendq2, rd_kafka_msgq_pop(&\
                                           17962 * rkmq));
0000BA84 41F0 D0A8               000000A8  17963          LA    15,168(0,13)
0000BA88 E3F0 D108 0024          00000108  17964          STG   15,264(0,13)
0000BA8E 4110 D108               00000108  17965          LA    1,264(0,13)
0000BA92 E3F0 C028 0004          0000B8E0  17966          LG    15,@lit_1985_748 ; rd_kafka_msgq_pop
0000BA98                                   17967 @@gen_label1089 DS    0H
0000BA98 05EF                              17968          BALR  14,15
0000BA9A                                   17969 @@gen_label1090 DS    0H
0000BA9A 4110 D0E8               000000E8  17970          LA    1,232(0,13)
0000BA9E E310 D108 0024          00000108  17971          STG   1,264(0,13)
0000BAA4 E3F0 D110 0024          00000110  17972          STG   15,272(0,13)
0000BAAA 4110 D108               00000108  17973          LA    1,264(0,13)
0000BAAE E3F0 C030 0004          0000B8E8  17974          LG    15,@lit_1985_749 ; rd_kafka_msgq_enq
0000BAB4                                   17975 @@gen_label1091 DS    0H
0000BAB4 05EF                              17976          BALR  14,15
0000BAB6                                   17977 @@gen_label1092 DS    0H
0000BAB6                                   17978 @L1241   DS    0H
0000BAB6 41F0 D0E8               000000E8  17979          LA    15,232(0,13)
0000BABA E3F0 D108 0024          00000108  17980          STG   15,264(0,13)
                                                                                                                           Page  358 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BAC0 4110 D108               00000108  17981          LA    1,264(0,13)
0000BAC4 E3F0 C038 0004          0000B8F0  17982          LG    15,@lit_1985_750 ; rd_kafka_msgq_len
0000BACA                                   17983 @@gen_label1093 DS    0H
0000BACA 05EF                              17984          BALR  14,15
0000BACC                                   17985 @@gen_label1094 DS    0H
0000BACC A7FE 0003               00000003  17986          CHI   15,3
0000BAD0 4740 C1CC               0000BA84  17987          BL    @L1240
                                           17988 * ***
                                           17989 * ***           rkm = ut_rd_kafka_msg_new(msgsize);
0000BAD4 E350 D108 0024          00000108  17990          STG   5,264(0,13)
0000BADA 4110 D108               00000108  17991          LA    1,264(0,13)
0000BADE E3F0 C040 0004          0000B8F8  17992          LG    15,@lit_1985_754 ; ut_rd_kafka_msg_new
0000BAE4                                   17993 @@gen_label1096 DS    0H
0000BAE4 05EF                              17994          BALR  14,15
0000BAE6                                   17995 @@gen_label1097 DS    0H
                                           17996 * ***           rkm->rkm_u.producer.msgid = i;
0000BAE6 B914 0012                         17997          LGFR  1,2
0000BAEA E310 F090 0024          00000090  17998          STG   1,144(0,15) ; offset of msgid in 0000042
                                           17999 * ***           rd_kafka_msgq_enq_sorted0(&rkmq, rkm, cmp);
0000BAF0 4110 D0A8               000000A8  18000          LA    1,168(0,13)
0000BAF4 E310 D108 0024          00000108  18001          STG   1,264(0,13)
0000BAFA E3F0 D110 0024          00000110  18002          STG   15,272(0,13)
0000BB00 E340 D118 0024          00000118  18003          STG   4,280(0,13)
0000BB06 4110 D108               00000108  18004          LA    1,264(0,13)
0000BB0A E3F0 C048 0004          0000B900  18005          LG    15,@lit_1985_755 ; rd_kafka_msgq_enq_sorted0
0000BB10                                   18006 @@gen_label1098 DS    0H
0000BB10 05EF                              18007          BALR  14,15
0000BB12                                   18008 @@gen_label1099 DS    0H
                                           18009 * ***
                                           18010 * ***           rd_kafka_retry_msgq(&rkmq, &sendq, 0, 1000, 0,
                                           18011 * ***                               RD_KAFKA_MSG_STATUS_NOT_PERSISTED,\
                                           18012 *  cmp);
0000BB12 41F0 D0A8               000000A8  18013          LA    15,168(0,13)
0000BB16 E3F0 D108 0024          00000108  18014          STG   15,264(0,13)
0000BB1C 41F0 D0C8               000000C8  18015          LA    15,200(0,13)
0000BB20 E3F0 D110 0024          00000110  18016          STG   15,272(0,13)
0000BB26 D707 D118 D118 00000118 00000118  18017          XC    280(8,13),280(13)
0000BB2C E548 D120 03E8          00000120  18018          MVGHI 288(13),1000
0000BB32 D70F D128 D128 00000128 00000128  18019          XC    296(16,13),296(13)
0000BB38 E340 D138 0024          00000138  18020          STG   4,312(0,13)
0000BB3E 4110 D108               00000108  18021          LA    1,264(0,13)
0000BB42 E320 C050 0004          0000B908  18022          LG    2,@lit_1985_756 ; rd_kafka_retry_msgq
0000BB48 B904 00F2                         18023          LGR   15,2
0000BB4C                                   18024 @@gen_label1100 DS    0H
0000BB4C 05EF                              18025          BALR  14,15
0000BB4E                                   18026 @@gen_label1101 DS    0H
                                           18027 * ***           rd_kafka_retry_msgq(&rkmq, &sendq2, 0, 1000, 0,
                                           18028 * ***                               RD_KAFKA_MSG_STATUS_NOT_PERSISTED,\
                                           18029 *  cmp);
0000BB4E 41F0 D0A8               000000A8  18030          LA    15,168(0,13)
0000BB52 E3F0 D108 0024          00000108  18031          STG   15,264(0,13)
0000BB58 41F0 D0E8               000000E8  18032          LA    15,232(0,13)
                                                                                                                           Page  359 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BB5C E3F0 D110 0024          00000110  18033          STG   15,272(0,13)
0000BB62 D707 D118 D118 00000118 00000118  18034          XC    280(8,13),280(13)
0000BB68 E548 D120 03E8          00000120  18035          MVGHI 288(13),1000
0000BB6E D70F D128 D128 00000128 00000128  18036          XC    296(16,13),296(13)
0000BB74 E340 D138 0024          00000138  18037          STG   4,312(0,13)
0000BB7A 4110 D108               00000108  18038          LA    1,264(0,13)
0000BB7E B904 00F2                         18039          LGR   15,2
0000BB82                                   18040 @@gen_label1102 DS    0H
0000BB82 05EF                              18041          BALR  14,15
0000BB84                                   18042 @@gen_label1103 DS    0H
                                           18043 * ***
                                           18044 * ***           do { if (!(rd_kafka_msgq_len(&sendq) == 0)) { fprintf(\
                                           18045 * __stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "rd_k\
                                           18046 * afka_msgq_len(&sendq) == 0" ": ", "C:\\asgkafka\\librdkafka\\src\\rd\
                                           18047 * kafka_msg.c", 2003, __FUNCTION__); fprintf(__stderrp, "sendq FIFO sh\
                                           18048 * ould be empty, not contain %d messages", rd_kafka_msgq_len(&sendq));\
                                           18049 *  fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure)\
                                           18050 *  ((rd_kafka_msgq_len(&sendq) == 0) ? (void)0 : __assert(__func__, "C\
                                           18051 * :\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2003, "rd_kafka_msgq_l\
                                           18052 * en(&sendq) == 0")); return 1; } } while (0);
0000BB84                                   18053 @L1242   DS    0H
0000BB84 41F0 D0C8               000000C8  18054          LA    15,200(0,13)
0000BB88 E3F0 D108 0024          00000108  18055          STG   15,264(0,13)
0000BB8E 4110 D108               00000108  18056          LA    1,264(0,13)
0000BB92 E320 C038 0004          0000B8F0  18057          LG    2,@lit_1985_750 ; rd_kafka_msgq_len
0000BB98 B904 00F2                         18058          LGR   15,2
0000BB9C                                   18059 @@gen_label1104 DS    0H
0000BB9C 05EF                              18060          BALR  14,15
0000BB9E                                   18061 @@gen_label1105 DS    0H
0000BB9E 12FF                              18062          LTR   15,15
0000BBA0 4780 C400               0000BCB8  18063          BE    @L1245
0000BBA4 E330 C068 0016          0000B920  18064          LLGF  3,@lit_1985_759 ; __stderrp
0000BBAA E3F3 6000 0004          00000000  18065          LG    15,0(3,6)   ; __stderrp
0000BBB0 E3F0 D108 0024          00000108  18066          STG   15,264(0,13)
0000BBB6 E340 C018 0004          0000B8D0  18067          LG    4,@lit_1985_740
0000BBBC 41F0 47E8               000007E8  18068          LA    15,2024(0,4)
0000BBC0 E3F0 D110 0024          00000110  18069          STG   15,272(0,13)
0000BBC6 41F0 42C2               000002C2  18070          LA    15,706(0,4)
0000BBCA E3F0 D118 0024          00000118  18071          STG   15,280(0,13)
0000BBD0 E548 D120 07D3          00000120  18072          MVGHI 288(13),2003
0000BBD6 E350 C060 0004          0000B918  18073          LG    5,@lit_1985_761
0000BBDC 41F0 5300               00000300  18074          LA    15,768(0,5)
0000BBE0 E3F0 D128 0024          00000128  18075          STG   15,296(0,13)
0000BBE6 4110 D108               00000108  18076          LA    1,264(0,13)
0000BBEA E370 C058 0004          0000B910  18077          LG    7,@lit_1985_762 ; fprintf
0000BBF0 B904 00F7                         18078          LGR   15,7
0000BBF4                                   18079 @@gen_label1107 DS    0H
0000BBF4 05EF                              18080          BALR  14,15
0000BBF6                                   18081 @@gen_label1108 DS    0H
0000BBF6 41F0 D0C8               000000C8  18082          LA    15,200(0,13)
0000BBFA E3F0 D108 0024          00000108  18083          STG   15,264(0,13)
0000BC00 4110 D108               00000108  18084          LA    1,264(0,13)
                                                                                                                           Page  360 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BC04 B904 00F2                         18085          LGR   15,2
0000BC08                                   18086 @@gen_label1109 DS    0H
0000BC08 05EF                              18087          BALR  14,15
0000BC0A                                   18088 @@gen_label1110 DS    0H
0000BC0A E313 6000 0004          00000000  18089          LG    1,0(3,6)    ; __stderrp
0000BC10 E310 D108 0024          00000108  18090          STG   1,264(0,13)
0000BC16 4110 4834               00000834  18091          LA    1,2100(0,4)
0000BC1A E310 D110 0024          00000110  18092          STG   1,272(0,13)
0000BC20 B914 00FF                         18093          LGFR  15,15
0000BC24 E3F0 D118 0024          00000118  18094          STG   15,280(0,13)
0000BC2A 4110 D108               00000108  18095          LA    1,264(0,13)
0000BC2E B904 00F7                         18096          LGR   15,7
0000BC32                                   18097 @@gen_label1111 DS    0H
0000BC32 05EF                              18098          BALR  14,15
0000BC34                                   18099 @@gen_label1112 DS    0H
0000BC34 E3F3 6000 0004          00000000  18100          LG    15,0(3,6)   ; __stderrp
0000BC3A E3F0 D108 0024          00000108  18101          STG   15,264(0,13)
0000BC40 41F0 479C               0000079C  18102          LA    15,1948(0,4)
0000BC44 E3F0 D110 0024          00000110  18103          STG   15,272(0,13)
0000BC4A 4110 D108               00000108  18104          LA    1,264(0,13)
0000BC4E B904 00F7                         18105          LGR   15,7
0000BC52                                   18106 @@gen_label1113 DS    0H
0000BC52 05EF                              18107          BALR  14,15
0000BC54                                   18108 @@gen_label1114 DS    0H
0000BC54 E3F0 C06C 0016          0000B924  18109          LLGF  15,@lit_1985_768 ; rd_unittest_assert_on_failure
0000BC5A 41FF 6000               00000000  18110          LA    15,0(15,6)
0000BC5E 9500 F000      00000000 00000000  18111          CLI   0(15),0
0000BC62 4780 C3F8               0000BCB0  18112          BE    @L1246
0000BC66 41F0 D0C8               000000C8  18113          LA    15,200(0,13)
0000BC6A E3F0 D108 0024          00000108  18114          STG   15,264(0,13)
0000BC70 4110 D108               00000108  18115          LA    1,264(0,13)
0000BC74 B904 00F2                         18116          LGR   15,2
0000BC78                                   18117 @@gen_label1116 DS    0H
0000BC78 05EF                              18118          BALR  14,15
0000BC7A                                   18119 @@gen_label1117 DS    0H
0000BC7A 12FF                              18120          LTR   15,15
0000BC7C 4780 C3F8               0000BCB0  18121          BE    @L1246
0000BC80                                   18122 @L1247   DS    0H
0000BC80 41F0 5300               00000300  18123          LA    15,768(0,5)
0000BC84 E3F0 D108 0024          00000108  18124          STG   15,264(0,13)
0000BC8A 41F0 42C2               000002C2  18125          LA    15,706(0,4)
0000BC8E E3F0 D110 0024          00000110  18126          STG   15,272(0,13)
0000BC94 E548 D118 07D3          00000118  18127          MVGHI 280(13),2003
0000BC9A 41F0 4868               00000868  18128          LA    15,2152(0,4)
0000BC9E E3F0 D120 0024          00000120  18129          STG   15,288(0,13)
0000BCA4 4110 D108               00000108  18130          LA    1,264(0,13)
0000BCA8 E3F0 C070 0004          0000B928  18131          LG    15,@lit_1985_770 ; __assert
0000BCAE                                   18132 @@gen_label1119 DS    0H
0000BCAE 05EF                              18133          BALR  14,15
0000BCB0                                   18134 @@gen_label1120 DS    0H
0000BCB0                                   18135 @L1248   DS    0H
0000BCB0                                   18136 @L1246   DS    0H
                                                                                                                           Page  361 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BCB0 A7F9 0001               00000001  18137          LGHI  15,1        ; 1
0000BCB4 47F0 C7A8               0000C060  18138          B     @ret_lab_1985
0000BCB8                                   18139 @L1245   DS    0H
                                           18140 * ***
                                           18141 * ***
                                           18142 * ***           do { if (!(rd_kafka_msgq_len(&sendq2) == 0)) { fprintf\
                                           18143 * (__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "rd_\
                                           18144 * kafka_msgq_len(&sendq2) == 0" ": ", "C:\\asgkafka\\librdkafka\\src\\\
                                           18145 * rdkafka_msg.c", 2006, __FUNCTION__); fprintf(__stderrp, "sendq2 FIFO\
                                           18146 *  should be empty, not contain %d messages", rd_kafka_msgq_len(&sendq\
                                           18147 * 2)); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_fail\
                                           18148 * ure) ((rd_kafka_msgq_len(&sendq2) == 0) ? (void)0 : __assert(__func_\
                                           18149 * _, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2006, "rd_kafka_m\
                                           18150 * sgq_len(&sendq2) == 0")); return 1; } } while (0);
0000BCB8                                   18151 @L1249   DS    0H
0000BCB8 41F0 D0E8               000000E8  18152          LA    15,232(0,13)
0000BCBC E3F0 D108 0024          00000108  18153          STG   15,264(0,13)
0000BCC2 4110 D108               00000108  18154          LA    1,264(0,13)
0000BCC6 E320 C038 0004          0000B8F0  18155          LG    2,@lit_1985_750 ; rd_kafka_msgq_len
0000BCCC B904 00F2                         18156          LGR   15,2
0000BCD0                                   18157 @@gen_label1121 DS    0H
0000BCD0 05EF                              18158          BALR  14,15
0000BCD2                                   18159 @@gen_label1122 DS    0H
0000BCD2 12FF                              18160          LTR   15,15
0000BCD4 4780 C534               0000BDEC  18161          BE    @L1252
0000BCD8 E330 C068 0016          0000B920  18162          LLGF  3,@lit_1985_759 ; __stderrp
0000BCDE E3F3 6000 0004          00000000  18163          LG    15,0(3,6)   ; __stderrp
0000BCE4 E3F0 D108 0024          00000108  18164          STG   15,264(0,13)
0000BCEA E340 C018 0004          0000B8D0  18165          LG    4,@lit_1985_740
0000BCF0 41F0 48C6               000008C6  18166          LA    15,2246(0,4)
0000BCF4 E3F0 D110 0024          00000110  18167          STG   15,272(0,13)
0000BCFA 41F0 42C2               000002C2  18168          LA    15,706(0,4)
0000BCFE E3F0 D118 0024          00000118  18169          STG   15,280(0,13)
0000BD04 E548 D120 07D6          00000120  18170          MVGHI 288(13),2006
0000BD0A E350 C060 0004          0000B918  18171          LG    5,@lit_1985_761
0000BD10 41F0 5300               00000300  18172          LA    15,768(0,5)
0000BD14 E3F0 D128 0024          00000128  18173          STG   15,296(0,13)
0000BD1A 4110 D108               00000108  18174          LA    1,264(0,13)
0000BD1E E370 C058 0004          0000B910  18175          LG    7,@lit_1985_762 ; fprintf
0000BD24 B904 00F7                         18176          LGR   15,7
0000BD28                                   18177 @@gen_label1124 DS    0H
0000BD28 05EF                              18178          BALR  14,15
0000BD2A                                   18179 @@gen_label1125 DS    0H
0000BD2A 41F0 D0E8               000000E8  18180          LA    15,232(0,13)
0000BD2E E3F0 D108 0024          00000108  18181          STG   15,264(0,13)
0000BD34 4110 D108               00000108  18182          LA    1,264(0,13)
0000BD38 B904 00F2                         18183          LGR   15,2
0000BD3C                                   18184 @@gen_label1126 DS    0H
0000BD3C 05EF                              18185          BALR  14,15
0000BD3E                                   18186 @@gen_label1127 DS    0H
0000BD3E E313 6000 0004          00000000  18187          LG    1,0(3,6)    ; __stderrp
0000BD44 E310 D108 0024          00000108  18188          STG   1,264(0,13)
                                                                                                                           Page  362 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BD4A 4110 4914               00000914  18189          LA    1,2324(0,4)
0000BD4E E310 D110 0024          00000110  18190          STG   1,272(0,13)
0000BD54 B914 00FF                         18191          LGFR  15,15
0000BD58 E3F0 D118 0024          00000118  18192          STG   15,280(0,13)
0000BD5E 4110 D108               00000108  18193          LA    1,264(0,13)
0000BD62 B904 00F7                         18194          LGR   15,7
0000BD66                                   18195 @@gen_label1128 DS    0H
0000BD66 05EF                              18196          BALR  14,15
0000BD68                                   18197 @@gen_label1129 DS    0H
0000BD68 E3F3 6000 0004          00000000  18198          LG    15,0(3,6)   ; __stderrp
0000BD6E E3F0 D108 0024          00000108  18199          STG   15,264(0,13)
0000BD74 41F0 479C               0000079C  18200          LA    15,1948(0,4)
0000BD78 E3F0 D110 0024          00000110  18201          STG   15,272(0,13)
0000BD7E 4110 D108               00000108  18202          LA    1,264(0,13)
0000BD82 B904 00F7                         18203          LGR   15,7
0000BD86                                   18204 @@gen_label1130 DS    0H
0000BD86 05EF                              18205          BALR  14,15
0000BD88                                   18206 @@gen_label1131 DS    0H
0000BD88 E3F0 C06C 0016          0000B924  18207          LLGF  15,@lit_1985_768 ; rd_unittest_assert_on_failure
0000BD8E 41FF 6000               00000000  18208          LA    15,0(15,6)
0000BD92 9500 F000      00000000 00000000  18209          CLI   0(15),0
0000BD96 4780 C52C               0000BDE4  18210          BE    @L1253
0000BD9A 41F0 D0E8               000000E8  18211          LA    15,232(0,13)
0000BD9E E3F0 D108 0024          00000108  18212          STG   15,264(0,13)
0000BDA4 4110 D108               00000108  18213          LA    1,264(0,13)
0000BDA8 B904 00F2                         18214          LGR   15,2
0000BDAC                                   18215 @@gen_label1133 DS    0H
0000BDAC 05EF                              18216          BALR  14,15
0000BDAE                                   18217 @@gen_label1134 DS    0H
0000BDAE 12FF                              18218          LTR   15,15
0000BDB0 4780 C52C               0000BDE4  18219          BE    @L1253
0000BDB4                                   18220 @L1254   DS    0H
0000BDB4 41F0 5300               00000300  18221          LA    15,768(0,5)
0000BDB8 E3F0 D108 0024          00000108  18222          STG   15,264(0,13)
0000BDBE 41F0 42C2               000002C2  18223          LA    15,706(0,4)
0000BDC2 E3F0 D110 0024          00000110  18224          STG   15,272(0,13)
0000BDC8 E548 D118 07D6          00000118  18225          MVGHI 280(13),2006
0000BDCE 41F0 494A               0000094A  18226          LA    15,2378(0,4)
0000BDD2 E3F0 D120 0024          00000120  18227          STG   15,288(0,13)
0000BDD8 4110 D108               00000108  18228          LA    1,264(0,13)
0000BDDC E3F0 C070 0004          0000B928  18229          LG    15,@lit_1985_770 ; __assert
0000BDE2                                   18230 @@gen_label1136 DS    0H
0000BDE2 05EF                              18231          BALR  14,15
0000BDE4                                   18232 @@gen_label1137 DS    0H
0000BDE4                                   18233 @L1255   DS    0H
0000BDE4                                   18234 @L1253   DS    0H
0000BDE4 A7F9 0001               00000001  18235          LGHI  15,1        ; 1
0000BDE8 47F0 C7A8               0000C060  18236          B     @ret_lab_1985
0000BDEC                                   18237 @L1252   DS    0H
                                           18238 * ***
                                           18239 * ***
                                           18240 * ***
                                                                                                                           Page  363 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18241 * ***           if (fifo) {
0000BDEC 1233                              18242          LTR   3,3
0000BDEE 4780 C580               0000BE38  18243          BZ    @L1256
                                           18244 * ***                   if (ut_verify_msgq_order("inject", &rkmq, 1, 7\
                                           18245 * , 1))
0000BDF2 E3F0 C018 0004          0000B8D0  18246          LG    15,@lit_1985_740
0000BDF8 41F0 F96A               0000096A  18247          LA    15,2410(0,15)
0000BDFC E3F0 D108 0024          00000108  18248          STG   15,264(0,13)
0000BE02 41F0 D0A8               000000A8  18249          LA    15,168(0,13)
0000BE06 E3F0 D110 0024          00000110  18250          STG   15,272(0,13)
0000BE0C E548 D118 0001          00000118  18251          MVGHI 280(13),1
0000BE12 E548 D120 0007          00000120  18252          MVGHI 288(13),7
0000BE18 E548 D128 0001          00000128  18253          MVGHI 296(13),1
0000BE1E 4110 D108               00000108  18254          LA    1,264(0,13)
0000BE22 E3F0 C010 0004          0000B8C8  18255          LG    15,@lit_1985_741 ; ut_verify_msgq_order
0000BE28                                   18256 @@gen_label1139 DS    0H
0000BE28 05EF                              18257          BALR  14,15
0000BE2A                                   18258 @@gen_label1140 DS    0H
0000BE2A 12FF                              18259          LTR   15,15
0000BE2C 4780 C5C6               0000BE7E  18260          BZ    @L1260
                                           18261 * ***                           return 1;
0000BE30 A7F9 0001               00000001  18262          LGHI  15,1        ; 1
0000BE34 47F0 C7A8               0000C060  18263          B     @ret_lab_1985
                                           18264 * ***           } else {
0000BE38                                   18265 @L1256   DS    0H
                                           18266 * ***                   if (ut_verify_msgq_order("readded #2", &rkmq, \
                                           18267 * 7, 1, 1))
0000BE38 E3F0 C018 0004          0000B8D0  18268          LG    15,@lit_1985_740
0000BE3E 41F0 F8AA               000008AA  18269          LA    15,2218(0,15)
0000BE42 E3F0 D108 0024          00000108  18270          STG   15,264(0,13)
0000BE48 41F0 D0A8               000000A8  18271          LA    15,168(0,13)
0000BE4C E3F0 D110 0024          00000110  18272          STG   15,272(0,13)
0000BE52 E548 D118 0007          00000118  18273          MVGHI 280(13),7
0000BE58 E548 D120 0001          00000120  18274          MVGHI 288(13),1
0000BE5E E548 D128 0001          00000128  18275          MVGHI 296(13),1
0000BE64 4110 D108               00000108  18276          LA    1,264(0,13)
0000BE68 E3F0 C010 0004          0000B8C8  18277          LG    15,@lit_1985_741 ; ut_verify_msgq_order
0000BE6E                                   18278 @@gen_label1142 DS    0H
0000BE6E 05EF                              18279          BALR  14,15
0000BE70                                   18280 @@gen_label1143 DS    0H
0000BE70 12FF                              18281          LTR   15,15
0000BE72 4780 C5C6               0000BE7E  18282          BZ    @L1260
                                           18283 * ***                           return 1;
0000BE76 A7F9 0001               00000001  18284          LGHI  15,1        ; 1
0000BE7A 47F0 C7A8               0000C060  18285          B     @ret_lab_1985
                                           18286 * ***           }
                                           18287 * ***
                                           18288 * ***           do { if (!(rd_kafka_msgq_size(&rkmq) == rd_kafka_msgq_\
                                           18289 * len(&rkmq) * msgsize)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:\
                                           18290 * %d: %s: " "assert failed: " "rd_kafka_msgq_size(&rkmq) == rd_kafka_m\
                                           18291 * sgq_len(&rkmq) * msgsize" ": ", "C:\\asgkafka\\librdkafka\\src\\rdka\
                                           18292 * fka_msg.c", 2018, __FUNCTION__); fprintf(__stderrp, "expected msgq s\
                                                                                                                           Page  364 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18293 * ize %" "zu" ", not %" "zu", (size_t)rd_kafka_msgq_len(&rkmq) * msgsi\
                                           18294 * ze, rd_kafka_msgq_size(&rkmq)); fprintf(__stderrp, "\033[0m\n"); if \
                                           18295 * (rd_unittest_assert_on_failure) ((rd_kafka_msgq_size(&rkmq) == rd_ka\
                                           18296 * fka_msgq_len(&rkmq) * msgsize) ? (void)0 : __assert(__func__, "C:\\a\
                                           18297 * sgkafka\\librdkafka\\src\\rdkafka_msg.c", 2018, "rd_kafka_msgq_size(\
                                           18298 * &rkmq) == rd_kafka_msgq_len(&rkmq) * msgsize")); return 1; } } while\
                                           18299 *  (0);
0000BE7E                                   18300 @L1260   DS    0H
0000BE7E 41F0 D0A8               000000A8  18301          LA    15,168(0,13)
0000BE82 E3F0 D108 0024          00000108  18302          STG   15,264(0,13)
0000BE88 4110 D108               00000108  18303          LA    1,264(0,13)
0000BE8C E320 C078 0004          0000B930  18304          LG    2,@lit_1985_792 ; rd_kafka_msgq_size
0000BE92 B904 00F2                         18305          LGR   15,2
0000BE96                                   18306 @@gen_label1145 DS    0H
0000BE96 05EF                              18307          BALR  14,15
0000BE98                                   18308 @@gen_label1146 DS    0H
0000BE98 B904 003F                         18309          LGR   3,15
0000BE9C 41F0 D0A8               000000A8  18310          LA    15,168(0,13)
0000BEA0 E3F0 D108 0024          00000108  18311          STG   15,264(0,13)
0000BEA6 4110 D108               00000108  18312          LA    1,264(0,13)
0000BEAA E340 C038 0004          0000B8F0  18313          LG    4,@lit_1985_750 ; rd_kafka_msgq_len
0000BEB0 B904 00F4                         18314          LGR   15,4
0000BEB4                                   18315 @@gen_label1147 DS    0H
0000BEB4 05EF                              18316          BALR  14,15
0000BEB6                                   18317 @@gen_label1148 DS    0H
0000BEB6 B914 00FF                         18318          LGFR  15,15
0000BEBA B90C 00F5                         18319          MSGR  15,5
0000BEBE B921 003F                         18320          CLGR  3,15
0000BEC2 4780 C762               0000C01A  18321          BE    @L1263
0000BEC6 E330 C068 0016          0000B920  18322          LLGF  3,@lit_1985_759 ; __stderrp
0000BECC E3F3 6000 0004          00000000  18323          LG    15,0(3,6)   ; __stderrp
0000BED2 E3F0 D108 0024          00000108  18324          STG   15,264(0,13)
0000BED8 E370 C018 0004          0000B8D0  18325          LG    7,@lit_1985_740
0000BEDE 41F0 7972               00000972  18326          LA    15,2418(0,7)
0000BEE2 E3F0 D110 0024          00000110  18327          STG   15,272(0,13)
0000BEE8 41F0 72C2               000002C2  18328          LA    15,706(0,7)
0000BEEC E3F0 D118 0024          00000118  18329          STG   15,280(0,13)
0000BEF2 E548 D120 07E2          00000120  18330          MVGHI 288(13),2018
0000BEF8 E380 C060 0004          0000B918  18331          LG    8,@lit_1985_761
0000BEFE 41F0 8300               00000300  18332          LA    15,768(0,8)
0000BF02 E3F0 D128 0024          00000128  18333          STG   15,296(0,13)
0000BF08 4110 D108               00000108  18334          LA    1,264(0,13)
0000BF0C E390 C058 0004          0000B910  18335          LG    9,@lit_1985_762 ; fprintf
0000BF12 B904 00F9                         18336          LGR   15,9
0000BF16                                   18337 @@gen_label1150 DS    0H
0000BF16 05EF                              18338          BALR  14,15
0000BF18                                   18339 @@gen_label1151 DS    0H
0000BF18 41F0 D0A8               000000A8  18340          LA    15,168(0,13)
0000BF1C E3F0 D108 0024          00000108  18341          STG   15,264(0,13)
0000BF22 4110 D108               00000108  18342          LA    1,264(0,13)
0000BF26 B904 00F4                         18343          LGR   15,4
0000BF2A                                   18344 @@gen_label1152 DS    0H
                                                                                                                           Page  365 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BF2A 05EF                              18345          BALR  14,15
0000BF2C                                   18346 @@gen_label1153 DS    0H
0000BF2C B914 00AF                         18347          LGFR  10,15
0000BF30 B90C 00A5                         18348          MSGR  10,5
0000BF34 41F0 D0A8               000000A8  18349          LA    15,168(0,13)
0000BF38 E3F0 D108 0024          00000108  18350          STG   15,264(0,13)
0000BF3E 4110 D108               00000108  18351          LA    1,264(0,13)
0000BF42 B904 00F2                         18352          LGR   15,2
0000BF46                                   18353 @@gen_label1154 DS    0H
0000BF46 05EF                              18354          BALR  14,15
0000BF48                                   18355 @@gen_label1155 DS    0H
0000BF48 E313 6000 0004          00000000  18356          LG    1,0(3,6)    ; __stderrp
0000BF4E E310 D108 0024          00000108  18357          STG   1,264(0,13)
0000BF54 4110 79E0               000009E0  18358          LA    1,2528(0,7)
0000BF58 E310 D110 0024          00000110  18359          STG   1,272(0,13)
0000BF5E E3A0 D118 0024          00000118  18360          STG   10,280(0,13)
0000BF64 E3F0 D120 0024          00000120  18361          STG   15,288(0,13)
0000BF6A 4110 D108               00000108  18362          LA    1,264(0,13)
0000BF6E B904 00F9                         18363          LGR   15,9
0000BF72                                   18364 @@gen_label1156 DS    0H
0000BF72 05EF                              18365          BALR  14,15
0000BF74                                   18366 @@gen_label1157 DS    0H
0000BF74 E3F3 6000 0004          00000000  18367          LG    15,0(3,6)   ; __stderrp
0000BF7A E3F0 D108 0024          00000108  18368          STG   15,264(0,13)
0000BF80 41F0 779C               0000079C  18369          LA    15,1948(0,7)
0000BF84 E3F0 D110 0024          00000110  18370          STG   15,272(0,13)
0000BF8A 4110 D108               00000108  18371          LA    1,264(0,13)
0000BF8E B904 00F9                         18372          LGR   15,9
0000BF92                                   18373 @@gen_label1158 DS    0H
0000BF92 05EF                              18374          BALR  14,15
0000BF94                                   18375 @@gen_label1159 DS    0H
0000BF94 E3F0 C06C 0016          0000B924  18376          LLGF  15,@lit_1985_768 ; rd_unittest_assert_on_failure
0000BF9A 41FF 6000               00000000  18377          LA    15,0(15,6)
0000BF9E 9500 F000      00000000 00000000  18378          CLI   0(15),0
0000BFA2 4780 C75A               0000C012  18379          BE    @L1264
0000BFA6 41F0 D0A8               000000A8  18380          LA    15,168(0,13)
0000BFAA E3F0 D108 0024          00000108  18381          STG   15,264(0,13)
0000BFB0 4110 D108               00000108  18382          LA    1,264(0,13)
0000BFB4 B904 00F2                         18383          LGR   15,2
0000BFB8                                   18384 @@gen_label1161 DS    0H
0000BFB8 05EF                              18385          BALR  14,15
0000BFBA                                   18386 @@gen_label1162 DS    0H
0000BFBA B904 002F                         18387          LGR   2,15
0000BFBE 41F0 D0A8               000000A8  18388          LA    15,168(0,13)
0000BFC2 E3F0 D108 0024          00000108  18389          STG   15,264(0,13)
0000BFC8 4110 D108               00000108  18390          LA    1,264(0,13)
0000BFCC B904 00F4                         18391          LGR   15,4
0000BFD0                                   18392 @@gen_label1163 DS    0H
0000BFD0 05EF                              18393          BALR  14,15
0000BFD2                                   18394 @@gen_label1164 DS    0H
0000BFD2 B914 00FF                         18395          LGFR  15,15
0000BFD6 B90C 00F5                         18396          MSGR  15,5
                                                                                                                           Page  366 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BFDA B921 002F                         18397          CLGR  2,15
0000BFDE 4780 C75A               0000C012  18398          BE    @L1264
0000BFE2                                   18399 @L1265   DS    0H
0000BFE2 41F0 8300               00000300  18400          LA    15,768(0,8)
0000BFE6 E3F0 D108 0024          00000108  18401          STG   15,264(0,13)
0000BFEC 41F0 72C2               000002C2  18402          LA    15,706(0,7)
0000BFF0 E3F0 D110 0024          00000110  18403          STG   15,272(0,13)
0000BFF6 E548 D118 07E2          00000118  18404          MVGHI 280(13),2018
0000BFFC 41F0 7A00               00000A00  18405          LA    15,2560(0,7)
0000C000 E3F0 D120 0024          00000120  18406          STG   15,288(0,13)
0000C006 4110 D108               00000108  18407          LA    1,264(0,13)
0000C00A E3F0 C070 0004          0000B928  18408          LG    15,@lit_1985_770 ; __assert
0000C010                                   18409 @@gen_label1166 DS    0H
0000C010 05EF                              18410          BALR  14,15
0000C012                                   18411 @@gen_label1167 DS    0H
0000C012                                   18412 @L1266   DS    0H
0000C012                                   18413 @L1264   DS    0H
0000C012 A7F9 0001               00000001  18414          LGHI  15,1        ; 1
0000C016 47F0 C7A8               0000C060  18415          B     @ret_lab_1985
0000C01A                                   18416 @L1263   DS    0H
                                           18417 * ***
                                           18418 * ***
                                           18419 * ***
                                           18420 * ***
                                           18421 * ***
                                           18422 * ***
                                           18423 * ***           ut_rd_kafka_msgq_purge(&sendq);
0000C01A 41F0 D0C8               000000C8  18424          LA    15,200(0,13)
0000C01E E3F0 D108 0024          00000108  18425          STG   15,264(0,13)
0000C024 4110 D108               00000108  18426          LA    1,264(0,13)
0000C028 E320 C080 0004          0000B938  18427          LG    2,@lit_1985_809 ; ut_rd_kafka_msgq_purge
0000C02E B904 00F2                         18428          LGR   15,2
0000C032                                   18429 @@gen_label1168 DS    0H
0000C032 05EF                              18430          BALR  14,15
0000C034                                   18431 @@gen_label1169 DS    0H
                                           18432 * ***           ut_rd_kafka_msgq_purge(&sendq2);
0000C034 41F0 D0E8               000000E8  18433          LA    15,232(0,13)
0000C038 E3F0 D108 0024          00000108  18434          STG   15,264(0,13)
0000C03E 4110 D108               00000108  18435          LA    1,264(0,13)
0000C042 B904 00F2                         18436          LGR   15,2
0000C046                                   18437 @@gen_label1170 DS    0H
0000C046 05EF                              18438          BALR  14,15
0000C048                                   18439 @@gen_label1171 DS    0H
                                           18440 * ***           ut_rd_kafka_msgq_purge(&rkmq);
0000C048 41F0 D0A8               000000A8  18441          LA    15,168(0,13)
0000C04C E3F0 D108 0024          00000108  18442          STG   15,264(0,13)
0000C052 4110 D108               00000108  18443          LA    1,264(0,13)
0000C056 B904 00F2                         18444          LGR   15,2
0000C05A                                   18445 @@gen_label1172 DS    0H
0000C05A 05EF                              18446          BALR  14,15
0000C05C                                   18447 @@gen_label1173 DS    0H
                                           18448 * ***
                                                                                                                           Page  367 
  Active Usings: @REGION_1985_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18449 * ***           return 0;
0000C05C A7F9 0000               00000000  18450          LGHI  15,0        ; 0
                                           18451 * ***
                                           18452 * ***   }
0000C060                                   18453 @ret_lab_1985 DS 0H
                                           18454 * * **** Start of Epilogue
                                           18455          DCCEPIL
0000C060                                   18456+         ds 0h                                                          01-DCCEP
                                           18457+* Epilog
0000C060 D707 D088 D088 00000088 00000088  18458+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000C066 E3D0 D080 0004          00000080  18459+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000C06C E3C0 D090 0004          00000090  18460+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000C072 E3B0 C018 0004          00000018  18461+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000C078 E3C0 B010 0021          00000010  18462+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000C07E E3E0 D008 0004          00000008  18463+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000C084 EB1C D020 0004          00000020  18464+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000C08A 078E                              18465+         bcr 8,14                if same dsab, just return              01-DCCEP
0000C08C E3F0 D010 0024          00000010  18466+         stg 15,16(0,13)         save return code                       01-DCCEP
0000C092 E300 D018 0024          00000018  18467+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000C098 E3F0 D090 0004          00000090  18468+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000C09E E3F0 F018 0004          00000018  18469+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000C0A4 47F0 F040               00000040  18470+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           18471+* End of Epilog
                                           18472 * * **** End of Epilogue
                                           18473          DROP  12
                                           18474 *
                                           18475 *   DSECT for automatic variables in "unittest_msgq_order"
                                           18476 *      (FUNCTION #1985)
                                           18477 *
00000000                00000000 00000108  18478 @AUTO#unittest_msgq_order DSECT
00000000                                   18479          DS    XL168
000000A8                                   18480 unittest_msgq_order#i#0 DS 1F ; i
000000AC                000000AC 000000A8  18481          ORG   @AUTO#unittest_msgq_order+168
000000A8                                   18482 unittest_msgq_order#msgsize#0 DS 8XL1 ; msgsize
000000B0                000000B0 000000A8  18483          ORG   @AUTO#unittest_msgq_order+168
000000A8                                   18484 unittest_msgq_order#rkmq#0 DS 32XL1 ; rkmq
000000C8                000000C8 000000C8  18485          ORG   @AUTO#unittest_msgq_order+200
000000C8                                   18486 unittest_msgq_order#sendq#0 DS 32XL1 ; sendq
000000E8                000000E8 000000E8  18487          ORG   @AUTO#unittest_msgq_order+232
000000E8                                   18488 unittest_msgq_order#sendq2#0 DS 32XL1 ; sendq2
                                           18489 *
0000C0A8                00000000 0000E868  18490 @CODE    CSECT
                                           18491 *
                                           18492 *
                                           18493 *
                                           18494 * ....... start of unittest_msg_seq_wrap
0000C0A8                                   18495 @LNAME1986 DS  0H
0000C0A8 00000015                          18496          DC    X'00000015'
0000C0AC A49589A3A385A2A3                  18497          DC    C'unittest_msg_seq_wrap'
0000C0C1 00                                18498          DC    X'00'
                                           18499 unittest_msg_seq_wrap DCCPRLG CINDEX=1986,BASER=12,FRAME=216,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1986
                                                                                                                           Page  368 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18500          macro
                                           18501          dccextrn &m
                                           18502          gblc    &$dccext(1000)
                                           18503          gbla    &$dccexti
                                           18504          lcla    &i
                                           18505 &$dccext(&$dccexti+1) setc    '&m'
                                           18506 &i       seta    1
                                           18507 .loop    aif    (&i gt &$dccexti).around
                                           18508          aif    ('&$dccext(&i)' eq '&m').getout
                                           18509 &i       seta    &i+1
                                           18510          ago     .loop
                                           18511 .around  anop
                                           18512 &$dccexti seta &$dccexti+1
                                           18513          extrn  &m
                                           18514 .getout  anop
                                           18515          mend
0000C0C8                                   18516+$eye0296    ds    0d                                                    02-DCCCA
0000C0C8 C4C3C3                            18517+         dc cl3'DCC'                                                    02-DCCCA
0000C0CB 01                                18518+         dc xl1'01' format one                                          02-DCCCA
0000C0CC 00000000                          18519+         dc a(0)                                                        02-DCCCA
0000C0D0 000000000000C13A                  18520+         dc ad(@PER_1986)                                               02-DCCCA
0000C0D8 00000000000000D8                  18521+         dc ad(216)                                                     02-DCCCA
0000C0E0 0000000000000000                  18522+         dc ad(0)                                                       02-DCCCA
0000C0E8 0000000000001000                  18523+         dc ad(4096)                                                    02-DCCCA
0000C0F0 20                                18524+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000C0F1 03                                18525+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000C0F2 03                                18526+         dc al1(3)                                                      02-DCCCA
0000C0F3 08                                18527+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000C0F4 00                                18528+         dc bl.8'00000000'                                              02-DCCCA
0000C0F5 000000                            18529+         dc al3(0)                                                      02-DCCCA
0000C0F8 000000000000C0A8                  18530+         dc ad(@LNAME1986)                                              02-DCCCA
0000C100                                   18531+         ds 0d                                                          02-DCCCA
0000C100 000000000000C0C8                  18532+         dc ad($eye0296)                                                02-DCCCA
0000C108 0000000000000000                  18533+         dc ad(0)                                                       02-DCCCA
0000C110                                   18534+         ds    0d                                                       01-DCCPR
0000C110                                   18535+unittest_msg_seq_wrap ds 0d                                             01-DCCPR
0000C110                                   18536+@REGION_1986_1 ds 0h                                                    01-DCCPR
0000C110 EBEC D008 0024          00000008  18537+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000C116 E3E0 D088 0004          00000088  18538+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000C11C E3C0 D090 0004          00000090  18539+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000C122 B904 002E                         18540+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000C126 E3B0 C018 0004          00000018  18541+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000C12C A7EB 00D8               000000D8  18542+         aghi  14,216              increase by frame size               01-DCCPR
0000C130 E3E0 C020 0021          00000020  18543+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000C136 4720 B020               00000020  18544+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000C13A                                   18545+@PER_1986 ds   0h                                                       01-DCCPR
0000C13A EBDE 2080 0024          00000080  18546+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000C140 E3C0 2090 0024          00000090  18547+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000C146 B904 00D2                         18548+         lgr   13,2                set real frame pointer               01-DCCPR
0000C14A B904 00CF                         18549+         lgr   12,15               set base reg                         01-DCCPR
                        0000C110           18550+         using @REGION_1986_1,12                                        01-DCCPR
                                           18551          DCCPRV REG=4      ; Get PRV from DVT
                                                                                                                           Page  369 
  Active Usings: @REGION_1986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C14E E340 B008 0004          00000008  18552+         LG 4,8(0,11)                                                   01-DCCPR
                                           18553 * ******* End of Prologue
                                           18554 * *
                                           18555 * ***           static const struct exp {
                                           18556 * ***                   int64_t in;
                                           18557 * ***                   int32_t out;
                                           18558 * ***           } exp[] = {
                                           18559 * ***                   { 0,  0 },
                                           18560 * ***                   { 1, 1 },
                                           18561 * ***                   { (int64_t)0x7fffffff+2, 1 },
                                           18562 * ***                   { (int64_t)0x7fffffff+1, 0 },
                                           18563 * ***                   { 0x7fffffff, 0x7fffffff },
                                           18564 * ***                   { 0x7fffffff-1, 0x7fffffff-1 },
                                           18565 * ***                   { 0x7fffffff-2, 0x7fffffff-2 },
                                           18566 * ***                   { ((int64_t)1<<33)-2, 0x7fffffff-1 },
                                           18567 * ***                   { ((int64_t)1<<33)-1, 0x7fffffff },
                                           18568 * ***                   { ((int64_t)1<<34), 0 },
                                           18569 * ***                   { ((int64_t)1<<35)+3, 3 },
                                           18570 * ***                   { 1710+1229, 2939 },
                                           18571 * ***                   { -1, -1 },
                                           18572 * ***           };
                                           18573 * ***           int i;
                                           18574 * ***
                                           18575 * ***           for (i = 0 ; exp[i].in != -1 ; i++) {
0000C154 A728 0000               00000000  18576          LHI   2,0         ; 0
0000C158 47F0 C1EC               0000C2FC  18577          B     @L1268
0000C160                                   18578          DS    0D
0000C160 000000D8                          18579 @FRAMESIZE_1986 DC F'216'
0000C164 00000000
0000C168 0000000000001C38                  18580 @lit_1986_832 DC AD(rd_kafka_seq_wrap)
0000C170 000000000000E868                  18581 @lit_1986_831 DC AD(@DATA)
0000C178 0000000000000000                  18582 @lit_1986_836 DC AD(fprintf)
0000C180 000000000000ECA4                  18583 @lit_1986_835 DC AD(@strings@)
0000C188 00000000                          18584 @lit_1986_834 DC Q(__stderrp)
0000C18C 00000000                          18585 @lit_1986_841 DC Q(rd_unittest_assert_on_failure)
0000C190 0000000000000000                  18586 @lit_1986_842 DC AD(__assert)
0000C198                                   18587 @L1267   DS    0H
                                           18588 * ***                   int32_t wseq = rd_kafka_seq_wrap(exp[i].in);
0000C198 B914 00F2                         18589          LGFR  15,2
0000C19C E310 C060 0004          0000C170  18590          LG    1,@lit_1986_831
0000C1A2 EBFF 0004 000D          00000004  18591          SLLG  15,15,4(0)  ; *0x10
0000C1A8 E3FF 1318 0004          00000318  18592          LG    15,792(15,1)
0000C1AE E3F0 D0B0 0024          000000B0  18593          STG   15,176(0,13)
0000C1B4 4110 D0B0               000000B0  18594          LA    1,176(0,13)
0000C1B8 E3F0 C058 0004          0000C168  18595          LG    15,@lit_1986_832 ; rd_kafka_seq_wrap
0000C1BE                                   18596 @@gen_label1174 DS    0H
0000C1BE 05EF                              18597          BALR  14,15
0000C1C0                                   18598 @@gen_label1175 DS    0H
0000C1C0 183F                              18599          LR    3,15
                                           18600 * ***                   do { if (!(wseq == exp[i].out)) { fprintf(__st\
                                           18601 * derrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "wseq == \
                                           18602 * exp[i].out" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 20\
                                                                                                                           Page  370 
  Active Usings: @REGION_1986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18603 * 59, __FUNCTION__); fprintf(__stderrp, "Expected seq_wrap(%" "lld" ")\
                                           18604 *  -> %" "d" ", not %" "d", exp[i].in, exp[i].out, wseq); fprintf(__st\
                                           18605 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((wseq == ex\
                                           18606 * p[i].out) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\\
                                           18607 * src\\rdkafka_msg.c", 2059, "wseq == exp[i].out")); return 1; } } whi\
                                           18608 * le (0);
0000C1C2                                   18609 @L1271   DS    0H
0000C1C2 B914 00F2                         18610          LGFR  15,2
0000C1C6 E350 C060 0004          0000C170  18611          LG    5,@lit_1986_831
0000C1CC EBFF 0004 000D          00000004  18612          SLLG  15,15,4(0)  ; *0x10
0000C1D2 593F 5320               00000320  18613          C     3,800(15,5)
0000C1D6 4780 C1E8               0000C2F8  18614          BE    @L1274
0000C1DA E360 C078 0016          0000C188  18615          LLGF  6,@lit_1986_834 ; __stderrp
0000C1E0 E3F6 4000 0004          00000000  18616          LG    15,0(6,4)   ; __stderrp
0000C1E6 E3F0 D0B0 0024          000000B0  18617          STG   15,176(0,13)
0000C1EC E370 C070 0004          0000C180  18618          LG    7,@lit_1986_835
0000C1F2 41F0 7A40               00000A40  18619          LA    15,2624(0,7)
0000C1F6 E3F0 D0B8 0024          000000B8  18620          STG   15,184(0,13)
0000C1FC 41F0 72C2               000002C2  18621          LA    15,706(0,7)
0000C200 E3F0 D0C0 0024          000000C0  18622          STG   15,192(0,13)
0000C206 E548 D0C8 080B          000000C8  18623          MVGHI 200(13),2059
0000C20C 41F0 53E8               000003E8  18624          LA    15,1000(0,5)
0000C210 E3F0 D0D0 0024          000000D0  18625          STG   15,208(0,13)
0000C216 4110 D0B0               000000B0  18626          LA    1,176(0,13)
0000C21A E380 C068 0004          0000C178  18627          LG    8,@lit_1986_836 ; fprintf
0000C220 B904 00F8                         18628          LGR   15,8
0000C224                                   18629 @@gen_label1177 DS    0H
0000C224 05EF                              18630          BALR  14,15
0000C226                                   18631 @@gen_label1178 DS    0H
0000C226 E3F6 4000 0004          00000000  18632          LG    15,0(6,4)   ; __stderrp
0000C22C E3F0 D0B0 0024          000000B0  18633          STG   15,176(0,13)
0000C232 41F0 7A80               00000A80  18634          LA    15,2688(0,7)
0000C236 E3F0 D0B8 0024          000000B8  18635          STG   15,184(0,13)
0000C23C B914 00F2                         18636          LGFR  15,2
0000C240 EBFF 0004 000D          00000004  18637          SLLG  15,15,4(0)  ; *0x10
0000C246 E3FF 5318 0004          00000318  18638          LG    15,792(15,5)
0000C24C E3F0 D0C0 0024          000000C0  18639          STG   15,192(0,13)
0000C252 B914 00F2                         18640          LGFR  15,2
0000C256 EBFF 0004 000D          00000004  18641          SLLG  15,15,4(0)  ; *0x10
0000C25C E3FF 5320 0014          00000320  18642          LGF   15,800(15,5)
0000C262 E3F0 D0C8 0024          000000C8  18643          STG   15,200(0,13)
0000C268 B914 00F3                         18644          LGFR  15,3
0000C26C E3F0 D0D0 0024          000000D0  18645          STG   15,208(0,13)
0000C272 4110 D0B0               000000B0  18646          LA    1,176(0,13)
0000C276 B904 00F8                         18647          LGR   15,8
0000C27A                                   18648 @@gen_label1179 DS    0H
0000C27A 05EF                              18649          BALR  14,15
0000C27C                                   18650 @@gen_label1180 DS    0H
0000C27C E3F6 4000 0004          00000000  18651          LG    15,0(6,4)   ; __stderrp
0000C282 E3F0 D0B0 0024          000000B0  18652          STG   15,176(0,13)
0000C288 41F0 779C               0000079C  18653          LA    15,1948(0,7)
0000C28C E3F0 D0B8 0024          000000B8  18654          STG   15,184(0,13)
                                                                                                                           Page  371 
  Active Usings: @REGION_1986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C292 4110 D0B0               000000B0  18655          LA    1,176(0,13)
0000C296 B904 00F8                         18656          LGR   15,8
0000C29A                                   18657 @@gen_label1181 DS    0H
0000C29A 05EF                              18658          BALR  14,15
0000C29C                                   18659 @@gen_label1182 DS    0H
0000C29C E3F0 C07C 0016          0000C18C  18660          LLGF  15,@lit_1986_841 ; rd_unittest_assert_on_failure
0000C2A2 41FF 4000               00000000  18661          LA    15,0(15,4)
0000C2A6 9500 F000      00000000 00000000  18662          CLI   0(15),0
0000C2AA 4780 C1E0               0000C2F0  18663          BE    @L1275
0000C2AE B914 00F2                         18664          LGFR  15,2
0000C2B2 EBFF 0004 000D          00000004  18665          SLLG  15,15,4(0)  ; *0x10
0000C2B8 593F 5320               00000320  18666          C     3,800(15,5)
0000C2BC 4780 C1E0               0000C2F0  18667          BE    @L1275
0000C2C0                                   18668 @L1276   DS    0H
0000C2C0 41F0 53E8               000003E8  18669          LA    15,1000(0,5)
0000C2C4 E3F0 D0B0 0024          000000B0  18670          STG   15,176(0,13)
0000C2CA 41F0 72C2               000002C2  18671          LA    15,706(0,7)
0000C2CE E3F0 D0B8 0024          000000B8  18672          STG   15,184(0,13)
0000C2D4 E548 D0C0 080B          000000C0  18673          MVGHI 192(13),2059
0000C2DA 41F0 7AA6               00000AA6  18674          LA    15,2726(0,7)
0000C2DE E3F0 D0C8 0024          000000C8  18675          STG   15,200(0,13)
0000C2E4 4110 D0B0               000000B0  18676          LA    1,176(0,13)
0000C2E8 E3F0 C080 0004          0000C190  18677          LG    15,@lit_1986_842 ; __assert
0000C2EE                                   18678 @@gen_label1185 DS    0H
0000C2EE 05EF                              18679          BALR  14,15
0000C2F0                                   18680 @@gen_label1186 DS    0H
0000C2F0                                   18681 @L1277   DS    0H
0000C2F0                                   18682 @L1275   DS    0H
0000C2F0 A7F9 0001               00000001  18683          LGHI  15,1        ; 1
0000C2F4 47F0 C256               0000C366  18684          B     @ret_lab_1986
0000C2F8                                   18685 @L1274   DS    0H
                                           18686 * ***
                                           18687 * ***
                                           18688 * ***
                                           18689 * ***           }
0000C2F8 A72A 0001               00000001  18690          AHI   2,1
0000C2FC                                   18691 @L1268   DS    0H
0000C2FC B914 00F2                         18692          LGFR  15,2
0000C300 E310 C060 0004          0000C170  18693          LG    1,@lit_1986_831
0000C306 EBFF 0004 000D          00000004  18694          SLLG  15,15,4(0)  ; *0x10
0000C30C 41FF 1318               00000318  18695          LA    15,792(15,1)
0000C310 E558 F000 FFFF          00000000  18696          CGHSI 0(15),-1
0000C316 4770 C088               0000C198  18697          BNE   @L1267
                                           18698 * ***
                                           18699 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           18700 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2065, __\
                                           18701 * FUNCTION__); return 0; } while (0);
0000C31A                                   18702 @L1278   DS    0H
0000C31A E3F0 C078 0016          0000C188  18703          LLGF  15,@lit_1986_834 ; __stderrp
0000C320 E3FF 4000 0004          00000000  18704          LG    15,0(15,4)  ; __stderrp
0000C326 E3F0 D0B0 0024          000000B0  18705          STG   15,176(0,13)
0000C32C E3F0 C070 0004          0000C180  18706          LG    15,@lit_1986_835
                                                                                                                           Page  372 
  Active Usings: @REGION_1986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C332 4120 FABA               00000ABA  18707          LA    2,2746(0,15)
0000C336 E320 D0B8 0024          000000B8  18708          STG   2,184(0,13)
0000C33C 41F0 F2C2               000002C2  18709          LA    15,706(0,15)
0000C340 E3F0 D0C0 0024          000000C0  18710          STG   15,192(0,13)
0000C346 E548 D0C8 0811          000000C8  18711          MVGHI 200(13),2065
0000C34C 41F0 13E8               000003E8  18712          LA    15,1000(0,1)
0000C350 E3F0 D0D0 0024          000000D0  18713          STG   15,208(0,13)
0000C356 4110 D0B0               000000B0  18714          LA    1,176(0,13)
0000C35A E3F0 C068 0004          0000C178  18715          LG    15,@lit_1986_836 ; fprintf
0000C360                                   18716 @@gen_label1188 DS    0H
0000C360 05EF                              18717          BALR  14,15
0000C362                                   18718 @@gen_label1189 DS    0H
0000C362 A7F9 0000               00000000  18719          LGHI  15,0        ; 0
                                           18720 * ***   }
0000C366                                   18721 @ret_lab_1986 DS 0H
                                           18722 * * **** Start of Epilogue
                                           18723          DCCEPIL
0000C366                                   18724+         ds 0h                                                          01-DCCEP
                                           18725+* Epilog
0000C366 D707 D088 D088 00000088 00000088  18726+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000C36C E3D0 D080 0004          00000080  18727+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000C372 E3C0 D090 0004          00000090  18728+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000C378 E3B0 C018 0004          00000018  18729+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000C37E E3C0 B010 0021          00000010  18730+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000C384 E3E0 D008 0004          00000008  18731+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000C38A EB1C D020 0004          00000020  18732+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000C390 078E                              18733+         bcr 8,14                if same dsab, just return              01-DCCEP
0000C392 E3F0 D010 0024          00000010  18734+         stg 15,16(0,13)         save return code                       01-DCCEP
0000C398 E300 D018 0024          00000018  18735+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000C39E E3F0 D090 0004          00000090  18736+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000C3A4 E3F0 F018 0004          00000018  18737+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000C3AA 47F0 F040               00000040  18738+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           18739+* End of Epilog
                                           18740 * * **** End of Epilogue
                                           18741          DROP  12
                                           18742 *
                                           18743 *   DSECT for automatic variables in "unittest_msg_seq_wrap"
                                           18744 *      (FUNCTION #1986)
                                           18745 *
00000000                00000000 000000AC  18746 @AUTO#unittest_msg_seq_wrap DSECT
00000000                                   18747          DS    XL168
000000A8                                   18748 unittest_msg_seq_wrap#wseq#1 DS 1F ; wseq
000000AC                000000AC 000000A8  18749          ORG   @AUTO#unittest_msg_seq_wrap+168
000000A8                                   18750 unittest_msg_seq_wrap#i#0 DS 1F ; i
                                           18751 *
0000C3AE                00000000 0000E868  18752 @CODE    CSECT
                                           18753 *
                                           18754 *
                                           18755 *
                                           18756 * ....... start of ut_msgq_populate
0000C3AE                                   18757 @LNAME1987 DS  0H
0000C3AE 00000010                          18758          DC    X'00000010'
                                                                                                                           Page  373 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C3B2 A4A36D94A287986D                  18759          DC    C'ut_msgq_populate'
0000C3C2 00                                18760          DC    X'00'
                                           18761 ut_msgq_populate DCCPRLG CINDEX=1987,BASER=12,FRAME=192,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1987
                                           18762          macro
                                           18763          dccextrn &m
                                           18764          gblc    &$dccext(1000)
                                           18765          gbla    &$dccexti
                                           18766          lcla    &i
                                           18767 &$dccext(&$dccexti+1) setc    '&m'
                                           18768 &i       seta    1
                                           18769 .loop    aif    (&i gt &$dccexti).around
                                           18770          aif    ('&$dccext(&i)' eq '&m').getout
                                           18771 &i       seta    &i+1
                                           18772          ago     .loop
                                           18773 .around  anop
                                           18774 &$dccexti seta &$dccexti+1
                                           18775          extrn  &m
                                           18776 .getout  anop
                                           18777          mend
0000C3C8                                   18778+$eye0300    ds    0d                                                    02-DCCCA
0000C3C8 C4C3C3                            18779+         dc cl3'DCC'                                                    02-DCCCA
0000C3CB 01                                18780+         dc xl1'01' format one                                          02-DCCCA
0000C3CC 00000000                          18781+         dc a(0)                                                        02-DCCCA
0000C3D0 000000000000C43A                  18782+         dc ad(@PER_1987)                                               02-DCCCA
0000C3D8 00000000000000C0                  18783+         dc ad(192)                                                     02-DCCCA
0000C3E0 0000000000000000                  18784+         dc ad(0)                                                       02-DCCCA
0000C3E8 0000000000001000                  18785+         dc ad(4096)                                                    02-DCCCA
0000C3F0 20                                18786+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000C3F1 03                                18787+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000C3F2 03                                18788+         dc al1(3)                                                      02-DCCCA
0000C3F3 08                                18789+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000C3F4 00                                18790+         dc bl.8'00000000'                                              02-DCCCA
0000C3F5 000000                            18791+         dc al3(0)                                                      02-DCCCA
0000C3F8 000000000000C3AE                  18792+         dc ad(@LNAME1987)                                              02-DCCCA
0000C400                                   18793+         ds 0d                                                          02-DCCCA
0000C400 000000000000C3C8                  18794+         dc ad($eye0300)                                                02-DCCCA
0000C408 0000000000000000                  18795+         dc ad(0)                                                       02-DCCCA
0000C410                                   18796+         ds    0d                                                       01-DCCPR
0000C410                                   18797+ut_msgq_populate ds 0d                                                  01-DCCPR
0000C410                                   18798+@REGION_1987_1 ds 0h                                                    01-DCCPR
0000C410 EBEC D008 0024          00000008  18799+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000C416 E3E0 D088 0004          00000088  18800+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000C41C E3C0 D090 0004          00000090  18801+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000C422 B904 002E                         18802+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000C426 E3B0 C018 0004          00000018  18803+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000C42C A7EB 00C0               000000C0  18804+         aghi  14,192              increase by frame size               01-DCCPR
0000C430 E3E0 C020 0021          00000020  18805+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000C436 4720 B020               00000020  18806+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000C43A                                   18807+@PER_1987 ds   0h                                                       01-DCCPR
0000C43A EBDE 2080 0024          00000080  18808+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000C440 E3C0 2090 0024          00000090  18809+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  374 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C446 B904 00D2                         18810+         lgr   13,2                set real frame pointer               01-DCCPR
0000C44A B904 00CF                         18811+         lgr   12,15               set base reg                         01-DCCPR
                        0000C410           18812+         using @REGION_1987_1,12                                        01-DCCPR
0000C44E B904 0031                         18813          LGR   3,1         ; ptr to parm area
                                           18814 * ******* End of Prologue
                                           18815 * *
                                           18816 * ***           uint64_t i;
                                           18817 * ***
                                           18818 * ***           for (i = lo ; i <= hi ; i++) {
0000C452 E320 3008 0004          00000008  18819          LG    2,8(0,3)    ; lo
0000C458 47F0 C0A8               0000C4B8  18820          B     @L1282
0000C460                                   18821          DS    0D
0000C460 000000C0                          18822 @FRAMESIZE_1987 DC F'192'
0000C464 00000000
0000C468 000000000000A8E0                  18823 @lit_1987_850 DC AD(ut_rd_kafka_msg_new)
0000C470 0000000000001B60                  18824 @lit_1987_851 DC AD(rd_kafka_msgq_enq)
0000C478                                   18825 @L1281   DS    0H
                                           18826 * ***                   rd_kafka_msg_t *rkm = ut_rd_kafka_msg_new(msgs\
                                           18827 * ize);
0000C478 E3F0 3018 0004          00000018  18828          LG    15,24(0,3)  ; msgsize
0000C47E E3F0 D0B0 0024          000000B0  18829          STG   15,176(0,13)
0000C484 4110 D0B0               000000B0  18830          LA    1,176(0,13)
0000C488 E3F0 C058 0004          0000C468  18831          LG    15,@lit_1987_850 ; ut_rd_kafka_msg_new
0000C48E                                   18832 @@gen_label1190 DS    0H
0000C48E 05EF                              18833          BALR  14,15
0000C490                                   18834 @@gen_label1191 DS    0H
                                           18835 * ***                   rkm->rkm_u.producer.msgid = i;
0000C490 E320 F090 0024          00000090  18836          STG   2,144(0,15) ; offset of msgid in 0000042
                                           18837 * ***                   rd_kafka_msgq_enq(rkmq, rkm);
0000C496 E310 3000 0004          00000000  18838          LG    1,0(0,3)    ; rkmq
0000C49C E310 D0B0 0024          000000B0  18839          STG   1,176(0,13)
0000C4A2 E3F0 D0B8 0024          000000B8  18840          STG   15,184(0,13)
0000C4A8 4110 D0B0               000000B0  18841          LA    1,176(0,13)
0000C4AC E3F0 C060 0004          0000C470  18842          LG    15,@lit_1987_851 ; rd_kafka_msgq_enq
0000C4B2                                   18843 @@gen_label1192 DS    0H
0000C4B2 05EF                              18844          BALR  14,15
0000C4B4                                   18845 @@gen_label1193 DS    0H
                                           18846 * ***           }
0000C4B4 A72B 0001               00000001  18847          AGHI  2,1
0000C4B8                                   18848 @L1282   DS    0H
0000C4B8 E320 3010 0021          00000010  18849          CLG   2,16(0,3)
0000C4BE 47D0 C068               0000C478  18850          BNH   @L1281
                                           18851 * ***   }
0000C4C2                                   18852 @ret_lab_1987 DS 0H
                                           18853 * * **** Start of Epilogue
                                           18854          DCCEPIL
0000C4C2                                   18855+         ds 0h                                                          01-DCCEP
                                           18856+* Epilog
0000C4C2 D707 D088 D088 00000088 00000088  18857+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000C4C8 E3D0 D080 0004          00000080  18858+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000C4CE E3C0 D090 0004          00000090  18859+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000C4D4 E3B0 C018 0004          00000018  18860+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  375 
  Active Usings: @REGION_1987_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C4DA E3C0 B010 0021          00000010  18861+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000C4E0 E3E0 D008 0004          00000008  18862+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000C4E6 EB1C D020 0004          00000020  18863+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000C4EC 078E                              18864+         bcr 8,14                if same dsab, just return              01-DCCEP
0000C4EE E3F0 D010 0024          00000010  18865+         stg 15,16(0,13)         save return code                       01-DCCEP
0000C4F4 E300 D018 0024          00000018  18866+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000C4FA E3F0 D090 0004          00000090  18867+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000C500 E3F0 F018 0004          00000018  18868+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000C506 47F0 F040               00000040  18869+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           18870+* End of Epilog
                                           18871 * * **** End of Epilogue
                                           18872          DROP  12
                                           18873 *
                                           18874 *   DSECT for automatic variables in "ut_msgq_populate"
                                           18875 *      (FUNCTION #1987)
                                           18876 *
00000000                00000000 000000B0  18877 @AUTO#ut_msgq_populate DSECT
00000000                                   18878          DS    XL168
000000A8                                   18879 ut_msgq_populate#i#0 DS 8XL1 ; i
                                           18880 *
0000C50A                00000000 0000E868  18881 @CODE    CSECT
                                           18882 *
                                           18883 *
                                           18884 *
                                           18885 * ....... start of unittest_msgq_insert_all_sort
0000C50A                                   18886 @LNAME1988 DS  0H
0000C50A 0000001D                          18887          DC    X'0000001D'
0000C50E A49589A3A385A2A3                  18888          DC    C'unittest_msgq_insert_all_sort'
0000C52B 00                                18889          DC    X'00'
                                           18890 unittest_msgq_insert_all_sort DCCPRLG CINDEX=1988,BASER=12,FRAME=304,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1988
                                           18891          macro
                                           18892          dccextrn &m
                                           18893          gblc    &$dccext(1000)
                                           18894          gbla    &$dccexti
                                           18895          lcla    &i
                                           18896 &$dccext(&$dccexti+1) setc    '&m'
                                           18897 &i       seta    1
                                           18898 .loop    aif    (&i gt &$dccexti).around
                                           18899          aif    ('&$dccext(&i)' eq '&m').getout
                                           18900 &i       seta    &i+1
                                           18901          ago     .loop
                                           18902 .around  anop
                                           18903 &$dccexti seta &$dccexti+1
                                           18904          extrn  &m
                                           18905 .getout  anop
                                           18906          mend
0000C530                                   18907+$eye0303    ds    0d                                                    02-DCCCA
0000C530 C4C3C3                            18908+         dc cl3'DCC'                                                    02-DCCCA
0000C533 01                                18909+         dc xl1'01' format one                                          02-DCCCA
0000C534 00000000                          18910+         dc a(0)                                                        02-DCCCA
0000C538 000000000000C5A2                  18911+         dc ad(@PER_1988)                                               02-DCCCA
                                                                                                                           Page  376 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C540 0000000000000130                  18912+         dc ad(304)                                                     02-DCCCA
0000C548 0000000000000000                  18913+         dc ad(0)                                                       02-DCCCA
0000C550 0000000000001000                  18914+         dc ad(4096)                                                    02-DCCCA
0000C558 20                                18915+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000C559 03                                18916+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000C55A 03                                18917+         dc al1(3)                                                      02-DCCCA
0000C55B 08                                18918+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000C55C 00                                18919+         dc bl.8'00000000'                                              02-DCCCA
0000C55D 000000                            18920+         dc al3(0)                                                      02-DCCCA
0000C560 000000000000C50A                  18921+         dc ad(@LNAME1988)                                              02-DCCCA
0000C568                                   18922+         ds 0d                                                          02-DCCCA
0000C568 000000000000C530                  18923+         dc ad($eye0303)                                                02-DCCCA
0000C570 0000000000000000                  18924+         dc ad(0)                                                       02-DCCCA
0000C578                                   18925+         ds    0d                                                       01-DCCPR
0000C578                                   18926+unittest_msgq_insert_all_sort ds 0d                                     01-DCCPR
0000C578                                   18927+@REGION_1988_1 ds 0h                                                    01-DCCPR
0000C578 EBEC D008 0024          00000008  18928+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000C57E E3E0 D088 0004          00000088  18929+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000C584 E3C0 D090 0004          00000090  18930+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000C58A B904 002E                         18931+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000C58E E3B0 C018 0004          00000018  18932+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000C594 A7EB 0130               00000130  18933+         aghi  14,304              increase by frame size               01-DCCPR
0000C598 E3E0 C020 0021          00000020  18934+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000C59E 4720 B020               00000020  18935+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000C5A2                                   18936+@PER_1988 ds   0h                                                       01-DCCPR
0000C5A2 EBDE 2080 0024          00000080  18937+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000C5A8 E3C0 2090 0024          00000090  18938+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000C5AE B904 00D2                         18939+         lgr   13,2                set real frame pointer               01-DCCPR
0000C5B2 B904 00CF                         18940+         lgr   12,15               set base reg                         01-DCCPR
                        0000C578           18941+         using @REGION_1988_1,12                                        01-DCCPR
                                           18942          DCCPRV REG=10     ; Get PRV from DVT
0000C5B6 E3A0 B008 0004          00000008  18943+         LG 10,8(0,11)                                                  01-DCCPR
0000C5BC B904 00B1                         18944          LGR   11,1        ; ptr to parm area
                                           18945 * ******* End of Prologue
                                           18946 * *
0000C5C0 68F0 B008               00000008  18947          LD    15,8(0,11)  ; max_us_per_msg
0000C5C4 60F0 D128               00000128  18948          STD   15,296(0,13) ; spill
0000C5C8 EB78 B018 0004          00000018  18949          LMG   7,8,24(11)  ; src_ranges
                                           18950 * ***           rd_kafka_msgq_t destq, srcq;
                                           18951 * ***           int i;
                                           18952 * ***           uint64_t lo = 0xffffffffffffffffULL, hi = 0;
0000C5CE A759 FFFF               0000FFFF  18953          LGHI  5,-1        ; -1
0000C5D2 A769 0000               00000000  18954          LGHI  6,0         ; 0
                                           18955 * ***           uint64_t cnt = 0;
0000C5D6 B904 0036                         18956          LGR   3,6         ; cnt
                                           18957 * ***           const size_t msgsize = 100;
0000C5DA A799 0064               00000064  18958          LGHI  9,100       ; 100
                                           18959 * ***           size_t totsize = 0;
0000C5DE B904 0046                         18960          LGR   4,6         ; totsize
                                           18961 * ***           rd_ts_t ts;
                                           18962 * ***           double us_per_msg;
                                           18963 * ***
                                                                                                                           Page  377 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18964 * ***           do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s: ", "C:\
                                           18965 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2108, __FUNCTION__); fp\
                                           18966 * rintf(__stderrp, "Testing msgq insert (all) efficiency: %s", what); \
                                           18967 * fprintf(__stderrp, "\n"); } while (0);
0000C5E2                                   18968 @L1285   DS    0H
0000C5E2 E320 C170 0016          0000C6E8  18969          LLGF  2,@lit_1988_858 ; __stderrp
0000C5E8 E3F2 A000 0004          00000000  18970          LG    15,0(2,10)  ; __stderrp
0000C5EE E3F0 D0F8 0024          000000F8  18971          STG   15,248(0,13)
0000C5F4 E3F0 C160 0004          0000C6D8  18972          LG    15,@lit_1988_972
0000C5FA 41F0 F6E4               000006E4  18973          LA    15,1764(0,15)
0000C5FE E3F0 D100 0024          00000100  18974          STG   15,256(0,13)
0000C604 E3F0 C160 0004          0000C6D8  18975          LG    15,@lit_1988_972
0000C60A 41F0 F2C2               000002C2  18976          LA    15,706(0,15)
0000C60E E3F0 D108 0024          00000108  18977          STG   15,264(0,13)
0000C614 E548 D110 083C          00000110  18978          MVGHI 272(13),2108
0000C61A E3F0 C168 0004          0000C6E0  18979          LG    15,@lit_1988_860
0000C620 41F0 F3FE               000003FE  18980          LA    15,1022(0,15)
0000C624 E3F0 D118 0024          00000118  18981          STG   15,280(0,13)
0000C62A 4110 D0F8               000000F8  18982          LA    1,248(0,13)
0000C62E E3F0 C158 0004          0000C6D0  18983          LG    15,@lit_1988_973 ; fprintf
0000C634                                   18984 @@gen_label1195 DS    0H
0000C634 05EF                              18985          BALR  14,15
0000C636                                   18986 @@gen_label1196 DS    0H
0000C636 E3F2 A000 0004          00000000  18987          LG    15,0(2,10)  ; __stderrp
0000C63C E3F0 D0F8 0024          000000F8  18988          STG   15,248(0,13)
0000C642 E3F0 C160 0004          0000C6D8  18989          LG    15,@lit_1988_972
0000C648 41F0 FADA               00000ADA  18990          LA    15,2778(0,15)
0000C64C E3F0 D100 0024          00000100  18991          STG   15,256(0,13)
0000C652 E3F0 B000 0004          00000000  18992          LG    15,0(0,11)  ; what
0000C658 E3F0 D108 0024          00000108  18993          STG   15,264(0,13)
0000C65E 4110 D0F8               000000F8  18994          LA    1,248(0,13)
0000C662 E3F0 C158 0004          0000C6D0  18995          LG    15,@lit_1988_973 ; fprintf
0000C668                                   18996 @@gen_label1197 DS    0H
0000C668 05EF                              18997          BALR  14,15
0000C66A                                   18998 @@gen_label1198 DS    0H
0000C66A E3F2 A000 0004          00000000  18999          LG    15,0(2,10)  ; __stderrp
0000C670 E3F0 D0F8 0024          000000F8  19000          STG   15,248(0,13)
0000C676 E3F0 C160 0004          0000C6D8  19001          LG    15,@lit_1988_972
0000C67C 41F0 F736               00000736  19002          LA    15,1846(0,15)
0000C680 E3F0 D100 0024          00000100  19003          STG   15,256(0,13)
0000C686 4110 D0F8               000000F8  19004          LA    1,248(0,13)
0000C68A E3F0 C158 0004          0000C6D0  19005          LG    15,@lit_1988_973 ; fprintf
0000C690                                   19006 @@gen_label1199 DS    0H
0000C690 05EF                              19007          BALR  14,15
0000C692                                   19008 @@gen_label1200 DS    0H
                                           19009 * ***
                                           19010 * ***           rd_kafka_msgq_init(&destq);
0000C692 41F0 D0B8               000000B8  19011          LA    15,184(0,13)
0000C696 E3F0 D0F8 0024          000000F8  19012          STG   15,248(0,13)
0000C69C 4110 D0F8               000000F8  19013          LA    1,248(0,13)
0000C6A0 E320 C178 0004          0000C6F0  19014          LG    2,@lit_1988_866 ; rd_kafka_msgq_init
0000C6A6 B904 00F2                         19015          LGR   15,2
                                                                                                                           Page  378 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C6AA                                   19016 @@gen_label1201 DS    0H
0000C6AA 05EF                              19017          BALR  14,15
0000C6AC                                   19018 @@gen_label1202 DS    0H
                                           19019 * ***           rd_kafka_msgq_init(&srcq);
0000C6AC 41F0 D0D8               000000D8  19020          LA    15,216(0,13)
0000C6B0 E3F0 D0F8 0024          000000F8  19021          STG   15,248(0,13)
0000C6B6 4110 D0F8               000000F8  19022          LA    1,248(0,13)
0000C6BA B904 00F2                         19023          LGR   15,2
0000C6BE                                   19024 @@gen_label1203 DS    0H
0000C6BE 05EF                              19025          BALR  14,15
0000C6C0                                   19026 @@gen_label1204 DS    0H
                                           19027 * ***
                                           19028 * ***           for (i = 0 ; src_ranges[i].hi > 0 ; i++) {
0000C6C0 A728 0000               00000000  19029          LHI   2,0         ; 0
0000C6C4 47F0 C2B0               0000C828  19030          B     @L1289
0000C6C8                                   19031          DS    0D
0000C6C8 00000130                          19032 @FRAMESIZE_1988 DC F'304'
0000C6CC 00000000
0000C6D0 0000000000000000                  19033 @lit_1988_973 DC AD(fprintf)
0000C6D8 000000000000ECA4                  19034 @lit_1988_972 DC AD(@strings@)
0000C6E0 000000000000E868                  19035 @lit_1988_860 DC AD(@DATA)
0000C6E8 00000000                          19036 @lit_1988_858 DC Q(__stderrp)
0000C6EC 00000000
0000C6F0 0000000000001628                  19037 @lit_1988_866 DC AD(rd_kafka_msgq_init)
0000C6F8 000000000000C410                  19038 @lit_1988_869 DC AD(ut_msgq_populate)
0000C700 0000000000001528                  19039 @lit_1988_978 DC AD(rd_kafka_msgq_len)
0000C708 0000000000000AD0                  19040 @lit_1988_882 DC AD(rd_clock)
0000C710 0000000000000000                  19041 @lit_1988_884 DC AD(rd_kafka_msgq_insert_msgq)
0000C718 0000000000001AA0                  19042 @lit_1988_883 DC AD(rd_kafka_msg_cmp_msgid)
0000C720                                   19043          DS 0D
0000C720 0000000000000000                  19044 @lit_1988_887 DC XL8'0000000000000000'
0000C728                                   19045          DS 0D
0000C728 5110000000000000                  19046 @lit_1988_886 DC XL8'5110000000000000'
0000C730 00000000                          19047 @lit_1988_906 DC Q(rd_unittest_assert_on_failure)
0000C734 00000000
0000C738 0000000000000000                  19048 @lit_1988_908 DC AD(__assert)
0000C740 0000091E                          19049 @lit_region_diff_1988_1_2  DC A(@REGION_1988_2-@REGION_1988_1)
0000C744 00000000
0000C748 000000000000ABF0                  19050 @lit_1988_925 DC AD(ut_verify_msgq_order)
0000C750 00000000000015A8                  19051 @lit_1988_927 DC AD(rd_kafka_msgq_size)
0000C758                                   19052 @L1288   DS    0H
                                           19053 * ***                   uint64_t this_cnt;
                                           19054 * ***
                                           19055 * ***                   ut_msgq_populate(&srcq, src_ranges[i].lo, src_\
                                           19056 * ranges[i].hi,
                                           19057 * ***                                    msgsize);
0000C758 41F0 D0D8               000000D8  19058          LA    15,216(0,13)
0000C75C E3F0 D0F8 0024          000000F8  19059          STG   15,248(0,13)
0000C762 B914 00F2                         19060          LGFR  15,2
0000C766 EBFF 0004 000D          00000004  19061          SLLG  15,15,4(0)  ; *0x10
0000C76C E3FF 7000 0004          00000000  19062          LG    15,0(15,7)
0000C772 E3F0 D100 0024          00000100  19063          STG   15,256(0,13)
                                                                                                                           Page  379 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C778 B914 00F2                         19064          LGFR  15,2
0000C77C EBFF 0004 000D          00000004  19065          SLLG  15,15,4(0)  ; *0x10
0000C782 E3FF 7008 0004          00000008  19066          LG    15,8(15,7)
0000C788 E3F0 D108 0024          00000108  19067          STG   15,264(0,13)
0000C78E E390 D110 0024          00000110  19068          STG   9,272(0,13)
0000C794 4110 D0F8               000000F8  19069          LA    1,248(0,13)
0000C798 E3F0 C180 0004          0000C6F8  19070          LG    15,@lit_1988_869 ; ut_msgq_populate
0000C79E                                   19071 @@gen_label1205 DS    0H
0000C79E 05EF                              19072          BALR  14,15
0000C7A0                                   19073 @@gen_label1206 DS    0H
                                           19074 * ***                   if (src_ranges[i].lo < lo)
0000C7A0 B914 00F2                         19075          LGFR  15,2
0000C7A4 EBFF 0004 000D          00000004  19076          SLLG  15,15,4(0)  ; *0x10
0000C7AA E3FF 7000 0004          00000000  19077          LG    15,0(15,7)
0000C7B0 B921 00F5                         19078          CLGR  15,5
0000C7B4 47B0 C250               0000C7C8  19079          BNL   @L1292
                                           19080 * ***                           lo = src_ranges[i].lo;
0000C7B8 B914 00F2                         19081          LGFR  15,2
0000C7BC EBFF 0004 000D          00000004  19082          SLLG  15,15,4(0)  ; *0x10
0000C7C2 E35F 7000 0004          00000000  19083          LG    5,0(15,7)
0000C7C8                                   19084 @L1292   DS    0H
                                           19085 * ***                   if (src_ranges[i].hi > hi)
0000C7C8 B914 00F2                         19086          LGFR  15,2
0000C7CC EBFF 0004 000D          00000004  19087          SLLG  15,15,4(0)  ; *0x10
0000C7D2 E3FF 7008 0004          00000008  19088          LG    15,8(15,7)  ; offset of hi in ut_msg_range
0000C7D8 B921 00F6                         19089          CLGR  15,6
0000C7DC 47D0 C278               0000C7F0  19090          BNH   @L1293
                                           19091 * ***                           hi = src_ranges[i].hi;
0000C7E0 B914 00F2                         19092          LGFR  15,2
0000C7E4 EBFF 0004 000D          00000004  19093          SLLG  15,15,4(0)  ; *0x10
0000C7EA E36F 7008 0004          00000008  19094          LG    6,8(15,7)   ; offset of hi in ut_msg_range
0000C7F0                                   19095 @L1293   DS    0H
                                           19096 * ***                   this_cnt = (src_ranges[i].hi - src_ranges[i].l\
                                           19097 * o) + 1;
0000C7F0 B914 00F2                         19098          LGFR  15,2
0000C7F4 EBFF 0004 000D          00000004  19099          SLLG  15,15,4(0)  ; *0x10
0000C7FA E3FF 7008 0004          00000008  19100          LG    15,8(15,7)  ; offset of hi in ut_msg_range
0000C800 B914 0012                         19101          LGFR  1,2
0000C804 EB11 0004 000D          00000004  19102          SLLG  1,1,4(0)    ; *0x10
0000C80A E3F1 7000 000B          00000000  19103          SLG   15,0(1,7)
0000C810 A7FB 0001               00000001  19104          AGHI  15,1
                                           19105 * ***                   cnt += this_cnt;
0000C814 B90A 003F                         19106          ALGR  3,15
                                           19107 * ***                   totsize += msgsize * (size_t)this_cnt;
0000C818 B904 0019                         19108          LGR   1,9
0000C81C B90C 001F                         19109          MSGR  1,15
0000C820 B90A 0041                         19110          ALGR  4,1
                                           19111 * ***           }
0000C824 A72A 0001               00000001  19112          AHI   2,1
0000C828                                   19113 @L1289   DS    0H
0000C828 B914 00F2                         19114          LGFR  15,2
0000C82C EBFF 0004 000D          00000004  19115          SLLG  15,15,4(0)  ; *0x10
                                                                                                                           Page  380 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C832 41FF 7008               00000008  19116          LA    15,8(15,7)
0000C836 E559 F000 0000          00000000  19117          CLGHSI 0(15),0
0000C83C 4720 C1E0               0000C758  19118          BH    @L1288
                                           19119 * ***
                                           19120 * ***           for (i = 0 ; dest_ranges[i].hi > 0 ; i++) {
0000C840 A728 0000               00000000  19121          LHI   2,0         ; 0
0000C844 47F0 C3A0               0000C918  19122          B     @L1295
0000C848                                   19123 @L1294   DS    0H
                                           19124 * ***                   uint64_t this_cnt;
                                           19125 * ***
                                           19126 * ***                   ut_msgq_populate(&destq, dest_ranges[i].lo, de\
                                           19127 * st_ranges[i].hi,
                                           19128 * ***                                    msgsize);
0000C848 41F0 D0B8               000000B8  19129          LA    15,184(0,13)
0000C84C E3F0 D0F8 0024          000000F8  19130          STG   15,248(0,13)
0000C852 B914 00F2                         19131          LGFR  15,2
0000C856 EBFF 0004 000D          00000004  19132          SLLG  15,15,4(0)  ; *0x10
0000C85C E3FF 8000 0004          00000000  19133          LG    15,0(15,8)
0000C862 E3F0 D100 0024          00000100  19134          STG   15,256(0,13)
0000C868 B914 00F2                         19135          LGFR  15,2
0000C86C EBFF 0004 000D          00000004  19136          SLLG  15,15,4(0)  ; *0x10
0000C872 E3FF 8008 0004          00000008  19137          LG    15,8(15,8)
0000C878 E3F0 D108 0024          00000108  19138          STG   15,264(0,13)
0000C87E E390 D110 0024          00000110  19139          STG   9,272(0,13)
0000C884 4110 D0F8               000000F8  19140          LA    1,248(0,13)
0000C888 E3F0 C180 0004          0000C6F8  19141          LG    15,@lit_1988_869 ; ut_msgq_populate
0000C88E                                   19142 @@gen_label1210 DS    0H
0000C88E 05EF                              19143          BALR  14,15
0000C890                                   19144 @@gen_label1211 DS    0H
                                           19145 * ***                   if (dest_ranges[i].lo < lo)
0000C890 B914 00F2                         19146          LGFR  15,2
0000C894 EBFF 0004 000D          00000004  19147          SLLG  15,15,4(0)  ; *0x10
0000C89A E3FF 8000 0004          00000000  19148          LG    15,0(15,8)
0000C8A0 B921 00F5                         19149          CLGR  15,5
0000C8A4 47B0 C340               0000C8B8  19150          BNL   @L1298
                                           19151 * ***                           lo = dest_ranges[i].lo;
0000C8A8 B914 00F2                         19152          LGFR  15,2
0000C8AC EBFF 0004 000D          00000004  19153          SLLG  15,15,4(0)  ; *0x10
0000C8B2 E35F 8000 0004          00000000  19154          LG    5,0(15,8)
0000C8B8                                   19155 @L1298   DS    0H
                                           19156 * ***                   if (dest_ranges[i].hi > hi)
0000C8B8 B914 00F2                         19157          LGFR  15,2
0000C8BC EBFF 0004 000D          00000004  19158          SLLG  15,15,4(0)  ; *0x10
0000C8C2 E3FF 8008 0004          00000008  19159          LG    15,8(15,8)  ; offset of hi in ut_msg_range
0000C8C8 B921 00F6                         19160          CLGR  15,6
0000C8CC 47D0 C368               0000C8E0  19161          BNH   @L1299
                                           19162 * ***                           hi = dest_ranges[i].hi;
0000C8D0 B914 00F2                         19163          LGFR  15,2
0000C8D4 EBFF 0004 000D          00000004  19164          SLLG  15,15,4(0)  ; *0x10
0000C8DA E36F 8008 0004          00000008  19165          LG    6,8(15,8)   ; offset of hi in ut_msg_range
0000C8E0                                   19166 @L1299   DS    0H
                                           19167 * ***                   this_cnt = (dest_ranges[i].hi - dest_ranges[i]\
                                                                                                                           Page  381 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           19168 * .lo) + 1;
0000C8E0 B914 00F2                         19169          LGFR  15,2
0000C8E4 EBFF 0004 000D          00000004  19170          SLLG  15,15,4(0)  ; *0x10
0000C8EA E3FF 8008 0004          00000008  19171          LG    15,8(15,8)  ; offset of hi in ut_msg_range
0000C8F0 B914 0012                         19172          LGFR  1,2
0000C8F4 EB11 0004 000D          00000004  19173          SLLG  1,1,4(0)    ; *0x10
0000C8FA E3F1 8000 000B          00000000  19174          SLG   15,0(1,8)
0000C900 A7FB 0001               00000001  19175          AGHI  15,1
                                           19176 * ***                   cnt += this_cnt;
0000C904 B90A 003F                         19177          ALGR  3,15
                                           19178 * ***                   totsize += msgsize * (size_t)this_cnt;
0000C908 B904 0019                         19179          LGR   1,9
0000C90C B90C 001F                         19180          MSGR  1,15
0000C910 B90A 0041                         19181          ALGR  4,1
                                           19182 * ***           }
0000C914 A72A 0001               00000001  19183          AHI   2,1
0000C918                                   19184 @L1295   DS    0H
0000C918 B914 00F2                         19185          LGFR  15,2
0000C91C EBFF 0004 000D          00000004  19186          SLLG  15,15,4(0)  ; *0x10
0000C922 41FF 8008               00000008  19187          LA    15,8(15,8)
0000C926 E559 F000 0000          00000000  19188          CLGHSI 0(15),0
0000C92C 4720 C2D0               0000C848  19189          BH    @L1294
                                           19190 * ***
                                           19191 * ***           do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s: ", "C:\
                                           19192 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2141, __FUNCTION__); fp\
                                           19193 * rintf(__stderrp, "Begin insert of %d messages into destq with %d mes\
                                           19194 * sages", rd_kafka_msgq_len(&srcq), rd_kafka_msgq_len(&destq)); fprint\
                                           19195 * f(__stderrp, "\n"); } while (0);
0000C930                                   19196 @L1300   DS    0H
0000C930 E370 C170 0016          0000C6E8  19197          LLGF  7,@lit_1988_858 ; __stderrp
0000C936 E3F7 A000 0004          00000000  19198          LG    15,0(7,10)  ; __stderrp
0000C93C E3F0 D0F8 0024          000000F8  19199          STG   15,248(0,13)
0000C942 E380 C160 0004          0000C6D8  19200          LG    8,@lit_1988_972
0000C948 41F0 86E4               000006E4  19201          LA    15,1764(0,8)
0000C94C E3F0 D100 0024          00000100  19202          STG   15,256(0,13)
0000C952 41F0 82C2               000002C2  19203          LA    15,706(0,8)
0000C956 E3F0 D108 0024          00000108  19204          STG   15,264(0,13)
0000C95C E548 D110 085D          00000110  19205          MVGHI 272(13),2141
0000C962 E3F0 C168 0004          0000C6E0  19206          LG    15,@lit_1988_860
0000C968 41F0 F3FE               000003FE  19207          LA    15,1022(0,15)
0000C96C E3F0 D118 0024          00000118  19208          STG   15,280(0,13)
0000C972 4110 D0F8               000000F8  19209          LA    1,248(0,13)
0000C976 E390 C158 0004          0000C6D0  19210          LG    9,@lit_1988_973 ; fprintf
0000C97C B904 00F9                         19211          LGR   15,9
0000C980                                   19212 @@gen_label1215 DS    0H
0000C980 05EF                              19213          BALR  14,15
0000C982                                   19214 @@gen_label1216 DS    0H
0000C982 41F0 D0D8               000000D8  19215          LA    15,216(0,13)
0000C986 E3F0 D0F8 0024          000000F8  19216          STG   15,248(0,13)
0000C98C 4110 D0F8               000000F8  19217          LA    1,248(0,13)
0000C990 E3F0 C188 0004          0000C700  19218          LG    15,@lit_1988_978 ; rd_kafka_msgq_len
0000C996                                   19219 @@gen_label1217 DS    0H
                                                                                                                           Page  382 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C996 05EF                              19220          BALR  14,15
0000C998                                   19221 @@gen_label1218 DS    0H
0000C998 182F                              19222          LR    2,15
0000C99A 41F0 D0B8               000000B8  19223          LA    15,184(0,13)
0000C99E E3F0 D0F8 0024          000000F8  19224          STG   15,248(0,13)
0000C9A4 4110 D0F8               000000F8  19225          LA    1,248(0,13)
0000C9A8 E3F0 C188 0004          0000C700  19226          LG    15,@lit_1988_978 ; rd_kafka_msgq_len
0000C9AE                                   19227 @@gen_label1219 DS    0H
0000C9AE 05EF                              19228          BALR  14,15
0000C9B0                                   19229 @@gen_label1220 DS    0H
0000C9B0 E317 A000 0004          00000000  19230          LG    1,0(7,10)   ; __stderrp
0000C9B6 E310 D0F8 0024          000000F8  19231          STG   1,248(0,13)
0000C9BC 4110 8B04               00000B04  19232          LA    1,2820(0,8)
0000C9C0 E310 D100 0024          00000100  19233          STG   1,256(0,13)
0000C9C6 B914 0012                         19234          LGFR  1,2
0000C9CA E310 D108 0024          00000108  19235          STG   1,264(0,13)
0000C9D0 B914 00FF                         19236          LGFR  15,15
0000C9D4 E3F0 D110 0024          00000110  19237          STG   15,272(0,13)
0000C9DA 4110 D0F8               000000F8  19238          LA    1,248(0,13)
0000C9DE B904 00F9                         19239          LGR   15,9
0000C9E2                                   19240 @@gen_label1221 DS    0H
0000C9E2 05EF                              19241          BALR  14,15
0000C9E4                                   19242 @@gen_label1222 DS    0H
0000C9E4 E3F7 A000 0004          00000000  19243          LG    15,0(7,10)  ; __stderrp
0000C9EA E3F0 D0F8 0024          000000F8  19244          STG   15,248(0,13)
0000C9F0 41F0 8736               00000736  19245          LA    15,1846(0,8)
0000C9F4 E3F0 D100 0024          00000100  19246          STG   15,256(0,13)
0000C9FA 4110 D0F8               000000F8  19247          LA    1,248(0,13)
0000C9FE B904 00F9                         19248          LGR   15,9
0000CA02                                   19249 @@gen_label1223 DS    0H
0000CA02 05EF                              19250          BALR  14,15
0000CA04                                   19251 @@gen_label1224 DS    0H
                                           19252 * ***
                                           19253 * ***
                                           19254 * ***           ts = rd_clock();
0000CA04 E370 C190 0004          0000C708  19255          LG    7,@lit_1988_882 ; rd_clock
0000CA0A B904 00F7                         19256          LGR   15,7
0000CA0E                                   19257 @@gen_label1225 DS    0H
0000CA0E 05EF                              19258          BALR  14,15
0000CA10                                   19259 @@gen_label1226 DS    0H
0000CA10 B904 002F                         19260          LGR   2,15        ; ts
                                           19261 * ***           rd_kafka_msgq_insert_msgq(&destq, &srcq, rd_kafka_msg_\
                                           19262 * cmp_msgid);
0000CA14 41F0 D0B8               000000B8  19263          LA    15,184(0,13)
0000CA18 E3F0 D0F8 0024          000000F8  19264          STG   15,248(0,13)
0000CA1E 41F0 D0D8               000000D8  19265          LA    15,216(0,13)
0000CA22 E3F0 D100 0024          00000100  19266          STG   15,256(0,13)
0000CA28 E3F0 C1A0 0004          0000C718  19267          LG    15,@lit_1988_883 ; rd_kafka_msg_cmp_msgid
0000CA2E E3F0 D108 0024          00000108  19268          STG   15,264(0,13)
0000CA34 4110 D0F8               000000F8  19269          LA    1,248(0,13)
0000CA38 E3F0 C198 0004          0000C710  19270          LG    15,@lit_1988_884 ; rd_kafka_msgq_insert_msgq
0000CA3E                                   19271 @@gen_label1227 DS    0H
                                                                                                                           Page  383 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CA3E 05EF                              19272          BALR  14,15
0000CA40                                   19273 @@gen_label1228 DS    0H
                                           19274 * ***           ts = rd_clock() - ts;
0000CA40 B904 00F7                         19275          LGR   15,7
0000CA44                                   19276 @@gen_label1229 DS    0H
0000CA44 05EF                              19277          BALR  14,15
0000CA46                                   19278 @@gen_label1230 DS    0H
0000CA46 B909 00F2                         19279          SGR   15,2
0000CA4A B904 002F                         19280          LGR   2,15        ; ts
                                           19281 * ***           us_per_msg = (double)ts / (double)cnt;
0000CA4E B3C5 00BF                         19282          CDGR  11,15
0000CA52 B3C6 00D3                         19283          CXGR  13,3
0000CA56 B902 00F3                         19284          LTGR  15,3
0000CA5A 47B0 C4F0               0000CA68  19285          BNL   @@gen_label1231
0000CA5E 68C0 C1B0               0000C728  19286          LD    12,@lit_1988_886
0000CA62 68E0 C1A8               0000C720  19287          LD    14,@lit_1988_887
0000CA66 36DC                              19288          AXR   13,12
0000CA68                                   19289 @@gen_label1231 DS 0H
0000CA68 2DBD                              19290          DDR   11,13
0000CA6A 60B0 D120               00000120  19291          STD   11,288(0,13) ; spill
                                           19292 * ***
                                           19293 * ***           do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s: ", "C:\
                                           19294 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2149, __FUNCTION__); fp\
                                           19295 * rintf(__stderrp, "Done: took %" "lld" "us, %.4fus/msg", ts, us_per_m\
                                           19296 * sg); fprintf(__stderrp, "\n"); } while (0);
0000CA6E                                   19297 @L1303   DS    0H
0000CA6E E370 C170 0016          0000C6E8  19298          LLGF  7,@lit_1988_858 ; __stderrp
0000CA74 E3F7 A000 0004          00000000  19299          LG    15,0(7,10)  ; __stderrp
0000CA7A E3F0 D0F8 0024          000000F8  19300          STG   15,248(0,13)
0000CA80 E380 C160 0004          0000C6D8  19301          LG    8,@lit_1988_972
0000CA86 41F0 86E4               000006E4  19302          LA    15,1764(0,8)
0000CA8A E3F0 D100 0024          00000100  19303          STG   15,256(0,13)
0000CA90 41F0 82C2               000002C2  19304          LA    15,706(0,8)
0000CA94 E3F0 D108 0024          00000108  19305          STG   15,264(0,13)
0000CA9A E548 D110 0865          00000110  19306          MVGHI 272(13),2149
0000CAA0 E3F0 C168 0004          0000C6E0  19307          LG    15,@lit_1988_860
0000CAA6 41F0 F3FE               000003FE  19308          LA    15,1022(0,15)
0000CAAA E3F0 D118 0024          00000118  19309          STG   15,280(0,13)
0000CAB0 4110 D0F8               000000F8  19310          LA    1,248(0,13)
0000CAB4 E390 C158 0004          0000C6D0  19311          LG    9,@lit_1988_973 ; fprintf
0000CABA B904 00F9                         19312          LGR   15,9
0000CABE                                   19313 @@gen_label1232 DS    0H
0000CABE 05EF                              19314          BALR  14,15
0000CAC0                                   19315 @@gen_label1233 DS    0H
0000CAC0 E3F7 A000 0004          00000000  19316          LG    15,0(7,10)  ; __stderrp
0000CAC6 E3F0 D0F8 0024          000000F8  19317          STG   15,248(0,13)
0000CACC 41F0 8B3C               00000B3C  19318          LA    15,2876(0,8)
0000CAD0 E3F0 D100 0024          00000100  19319          STG   15,256(0,13)
0000CAD6 E320 D108 0024          00000108  19320          STG   2,264(0,13)
0000CADC 68B0 D120               00000120  19321          LD    11,288(0,13) ; spill
0000CAE0 60B0 D110               00000110  19322          STD   11,272(0,13)
0000CAE4 4110 D0F8               000000F8  19323          LA    1,248(0,13)
                                                                                                                           Page  384 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CAE8 B904 00F9                         19324          LGR   15,9
0000CAEC                                   19325 @@gen_label1234 DS    0H
0000CAEC 05EF                              19326          BALR  14,15
0000CAEE                                   19327 @@gen_label1235 DS    0H
0000CAEE E3F7 A000 0004          00000000  19328          LG    15,0(7,10)  ; __stderrp
0000CAF4 E3F0 D0F8 0024          000000F8  19329          STG   15,248(0,13)
0000CAFA 41F0 8736               00000736  19330          LA    15,1846(0,8)
0000CAFE E3F0 D100 0024          00000100  19331          STG   15,256(0,13)
0000CB04 4110 D0F8               000000F8  19332          LA    1,248(0,13)
0000CB08 B904 00F9                         19333          LGR   15,9
0000CB0C                                   19334 @@gen_label1236 DS    0H
0000CB0C 05EF                              19335          BALR  14,15
0000CB0E                                   19336 @@gen_label1237 DS    0H
                                           19337 * ***
                                           19338 * ***
                                           19339 * ***           do { if (!(rd_kafka_msgq_len(&srcq) == 0)) { fprintf(_\
                                           19340 * _stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "rd_ka\
                                           19341 * fka_msgq_len(&srcq) == 0" ": ", "C:\\asgkafka\\librdkafka\\src\\rdka\
                                           19342 * fka_msg.c", 2152, __FUNCTION__); fprintf(__stderrp, "srcq should be \
                                           19343 * empty, but contains %d messages", rd_kafka_msgq_len(&srcq)); fprintf\
                                           19344 * (__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((rd_ka\
                                           19345 * fka_msgq_len(&srcq) == 0) ? (void)0 : __assert(__func__, "C:\\asgkaf\
                                           19346 * ka\\librdkafka\\src\\rdkafka_msg.c", 2152, "rd_kafka_msgq_len(&srcq)\
                                           19347 *  == 0")); return 1; } } while (0);
0000CB0E                                   19348 @L1306   DS    0H
0000CB0E 41F0 D0D8               000000D8  19349          LA    15,216(0,13)
0000CB12 E3F0 D0F8 0024          000000F8  19350          STG   15,248(0,13)
0000CB18 4110 D0F8               000000F8  19351          LA    1,248(0,13)
0000CB1C E320 C188 0004          0000C700  19352          LG    2,@lit_1988_978 ; rd_kafka_msgq_len
0000CB22 B904 00F2                         19353          LGR   15,2
0000CB26                                   19354 @@gen_label1238 DS    0H
0000CB26 05EF                              19355          BALR  14,15
0000CB28                                   19356 @@gen_label1239 DS    0H
0000CB28 12FF                              19357          LTR   15,15
0000CB2A 4780 C6D0               0000CC48  19358          BE    @L1309
0000CB2E E330 C170 0016          0000C6E8  19359          LLGF  3,@lit_1988_858 ; __stderrp
0000CB34 E3F3 A000 0004          00000000  19360          LG    15,0(3,10)  ; __stderrp
0000CB3A E3F0 D0F8 0024          000000F8  19361          STG   15,248(0,13)
0000CB40 E340 C160 0004          0000C6D8  19362          LG    4,@lit_1988_972
0000CB46 41F0 4B5A               00000B5A  19363          LA    15,2906(0,4)
0000CB4A E3F0 D100 0024          00000100  19364          STG   15,256(0,13)
0000CB50 41F0 42C2               000002C2  19365          LA    15,706(0,4)
0000CB54 E3F0 D108 0024          00000108  19366          STG   15,264(0,13)
0000CB5A E548 D110 0868          00000110  19367          MVGHI 272(13),2152
0000CB60 E350 C168 0004          0000C6E0  19368          LG    5,@lit_1988_860
0000CB66 41F0 53FE               000003FE  19369          LA    15,1022(0,5)
0000CB6A E3F0 D118 0024          00000118  19370          STG   15,280(0,13)
0000CB70 4110 D0F8               000000F8  19371          LA    1,248(0,13)
0000CB74 E360 C158 0004          0000C6D0  19372          LG    6,@lit_1988_973 ; fprintf
0000CB7A B904 00F6                         19373          LGR   15,6
0000CB7E                                   19374 @@gen_label1241 DS    0H
0000CB7E 05EF                              19375          BALR  14,15
                                                                                                                           Page  385 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CB80                                   19376 @@gen_label1242 DS    0H
0000CB80 41F0 D0D8               000000D8  19377          LA    15,216(0,13)
0000CB84 E3F0 D0F8 0024          000000F8  19378          STG   15,248(0,13)
0000CB8A 4110 D0F8               000000F8  19379          LA    1,248(0,13)
0000CB8E B904 00F2                         19380          LGR   15,2
0000CB92                                   19381 @@gen_label1243 DS    0H
0000CB92 05EF                              19382          BALR  14,15
0000CB94                                   19383 @@gen_label1244 DS    0H
0000CB94 E313 A000 0004          00000000  19384          LG    1,0(3,10)   ; __stderrp
0000CB9A E310 D0F8 0024          000000F8  19385          STG   1,248(0,13)
0000CBA0 4110 4BA6               00000BA6  19386          LA    1,2982(0,4)
0000CBA4 E310 D100 0024          00000100  19387          STG   1,256(0,13)
0000CBAA B914 00FF                         19388          LGFR  15,15
0000CBAE E3F0 D108 0024          00000108  19389          STG   15,264(0,13)
0000CBB4 4110 D0F8               000000F8  19390          LA    1,248(0,13)
0000CBB8 B904 00F6                         19391          LGR   15,6
0000CBBC                                   19392 @@gen_label1245 DS    0H
0000CBBC 05EF                              19393          BALR  14,15
0000CBBE                                   19394 @@gen_label1246 DS    0H
0000CBBE E3F3 A000 0004          00000000  19395          LG    15,0(3,10)  ; __stderrp
0000CBC4 E3F0 D0F8 0024          000000F8  19396          STG   15,248(0,13)
0000CBCA 41F0 479C               0000079C  19397          LA    15,1948(0,4)
0000CBCE E3F0 D100 0024          00000100  19398          STG   15,256(0,13)
0000CBD4 4110 D0F8               000000F8  19399          LA    1,248(0,13)
0000CBD8 B904 00F6                         19400          LGR   15,6
0000CBDC                                   19401 @@gen_label1247 DS    0H
0000CBDC 05EF                              19402          BALR  14,15
0000CBDE                                   19403 @@gen_label1248 DS    0H
0000CBDE E3F0 C1B8 0016          0000C730  19404          LLGF  15,@lit_1988_906 ; rd_unittest_assert_on_failure
0000CBE4 41FF A000               00000000  19405          LA    15,0(15,10)
0000CBE8 9500 F000      00000000 00000000  19406          CLI   0(15),0
0000CBEC 4780 C6C2               0000CC3A  19407          BE    @L1310
0000CBF0 41F0 D0D8               000000D8  19408          LA    15,216(0,13)
0000CBF4 E3F0 D0F8 0024          000000F8  19409          STG   15,248(0,13)
0000CBFA 4110 D0F8               000000F8  19410          LA    1,248(0,13)
0000CBFE B904 00F2                         19411          LGR   15,2
0000CC02                                   19412 @@gen_label1250 DS    0H
0000CC02 05EF                              19413          BALR  14,15
0000CC04                                   19414 @@gen_label1251 DS    0H
0000CC04 12FF                              19415          LTR   15,15
0000CC06 4780 C6C2               0000CC3A  19416          BE    @L1310
0000CC0A                                   19417 @L1311   DS    0H
0000CC0A 41F0 53FE               000003FE  19418          LA    15,1022(0,5)
0000CC0E E3F0 D0F8 0024          000000F8  19419          STG   15,248(0,13)
0000CC14 41F0 42C2               000002C2  19420          LA    15,706(0,4)
0000CC18 E3F0 D100 0024          00000100  19421          STG   15,256(0,13)
0000CC1E E548 D108 0868          00000108  19422          MVGHI 264(13),2152
0000CC24 41F0 4BD6               00000BD6  19423          LA    15,3030(0,4)
0000CC28 E3F0 D110 0024          00000110  19424          STG   15,272(0,13)
0000CC2E 4110 D0F8               000000F8  19425          LA    1,248(0,13)
0000CC32 E3F0 C1C0 0004          0000C738  19426          LG    15,@lit_1988_908 ; __assert
0000CC38                                   19427 @@gen_label1253 DS    0H
                                                                                                                           Page  386 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CC38 05EF                              19428          BALR  14,15
0000CC3A                                   19429 @@gen_label1254 DS    0H
0000CC3A                                   19430 @L1312   DS    0H
0000CC3A                                   19431 @L1310   DS    0H
0000CC3A A7F9 0001               00000001  19432          LGHI  15,1        ; 1
0000CC3E E3C0 C1C8 001A          0000C740  19433          ALGF  12,@lit_region_diff_1988_1_2
                                           19434          DROP  12
                        0000CE96           19435          USING @REGION_1988_2,12
0000CC44 47F0 C33A               0000D1D0  19436          B     @ret_lab_1988
                                           19437          DROP  12
                        0000C578           19438          USING @REGION_1988_1,12
0000CC48                                   19439 @L1309   DS    0H
                                           19440 * ***
                                           19441 * ***
                                           19442 * ***           do { if (!(rd_kafka_msgq_len(&destq) == (int)cnt)) { f\
                                           19443 * printf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: \
                                           19444 * " "rd_kafka_msgq_len(&destq) == (int)cnt" ": ", "C:\\asgkafka\\librd\
                                           19445 * kafka\\src\\rdkafka_msg.c", 2155, __FUNCTION__); fprintf(__stderrp, \
                                           19446 * "destq should contain %d messages, not %d", (int)cnt, rd_kafka_msgq_\
                                           19447 * len(&destq)); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_asser\
                                           19448 * t_on_failure) ((rd_kafka_msgq_len(&destq) == (int)cnt) ? (void)0 : _\
                                           19449 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 21\
                                           19450 * 55, "rd_kafka_msgq_len(&destq) == (int)cnt")); return 1; } } while (\
                                           19451 * 0);
0000CC48                                   19452 @L1313   DS    0H
0000CC48 41F0 D0B8               000000B8  19453          LA    15,184(0,13)
0000CC4C E3F0 D0F8 0024          000000F8  19454          STG   15,248(0,13)
0000CC52 4110 D0F8               000000F8  19455          LA    1,248(0,13)
0000CC56 E320 C188 0004          0000C700  19456          LG    2,@lit_1988_978 ; rd_kafka_msgq_len
0000CC5C B904 00F2                         19457          LGR   15,2
0000CC60                                   19458 @@gen_label1255 DS    0H
0000CC60 05EF                              19459          BALR  14,15
0000CC62                                   19460 @@gen_label1256 DS    0H
0000CC62 19F3                              19461          CR    15,3
0000CC64 4780 C814               0000CD8C  19462          BE    @L1316
0000CC68 E340 C170 0016          0000C6E8  19463          LLGF  4,@lit_1988_858 ; __stderrp
0000CC6E E3F4 A000 0004          00000000  19464          LG    15,0(4,10)  ; __stderrp
0000CC74 E3F0 D0F8 0024          000000F8  19465          STG   15,248(0,13)
0000CC7A E350 C160 0004          0000C6D8  19466          LG    5,@lit_1988_972
0000CC80 41F0 5BF4               00000BF4  19467          LA    15,3060(0,5)
0000CC84 E3F0 D100 0024          00000100  19468          STG   15,256(0,13)
0000CC8A 41F0 52C2               000002C2  19469          LA    15,706(0,5)
0000CC8E E3F0 D108 0024          00000108  19470          STG   15,264(0,13)
0000CC94 E548 D110 086B          00000110  19471          MVGHI 272(13),2155
0000CC9A E360 C168 0004          0000C6E0  19472          LG    6,@lit_1988_860
0000CCA0 41F0 63FE               000003FE  19473          LA    15,1022(0,6)
0000CCA4 E3F0 D118 0024          00000118  19474          STG   15,280(0,13)
0000CCAA 4110 D0F8               000000F8  19475          LA    1,248(0,13)
0000CCAE E370 C158 0004          0000C6D0  19476          LG    7,@lit_1988_973 ; fprintf
0000CCB4 B904 00F7                         19477          LGR   15,7
0000CCB8                                   19478 @@gen_label1258 DS    0H
0000CCB8 05EF                              19479          BALR  14,15
                                                                                                                           Page  387 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CCBA                                   19480 @@gen_label1259 DS    0H
0000CCBA 41F0 D0B8               000000B8  19481          LA    15,184(0,13)
0000CCBE E3F0 D0F8 0024          000000F8  19482          STG   15,248(0,13)
0000CCC4 4110 D0F8               000000F8  19483          LA    1,248(0,13)
0000CCC8 B904 00F2                         19484          LGR   15,2
0000CCCC                                   19485 @@gen_label1260 DS    0H
0000CCCC 05EF                              19486          BALR  14,15
0000CCCE                                   19487 @@gen_label1261 DS    0H
0000CCCE E314 A000 0004          00000000  19488          LG    1,0(4,10)   ; __stderrp
0000CCD4 E310 D0F8 0024          000000F8  19489          STG   1,248(0,13)
0000CCDA 4110 5C48               00000C48  19490          LA    1,3144(0,5)
0000CCDE E310 D100 0024          00000100  19491          STG   1,256(0,13)
0000CCE4 B914 0013                         19492          LGFR  1,3
0000CCE8 E310 D108 0024          00000108  19493          STG   1,264(0,13)
0000CCEE B914 00FF                         19494          LGFR  15,15
0000CCF2 E3F0 D110 0024          00000110  19495          STG   15,272(0,13)
0000CCF8 4110 D0F8               000000F8  19496          LA    1,248(0,13)
0000CCFC B904 00F7                         19497          LGR   15,7
0000CD00                                   19498 @@gen_label1262 DS    0H
0000CD00 05EF                              19499          BALR  14,15
0000CD02                                   19500 @@gen_label1263 DS    0H
0000CD02 E3F4 A000 0004          00000000  19501          LG    15,0(4,10)  ; __stderrp
0000CD08 E3F0 D0F8 0024          000000F8  19502          STG   15,248(0,13)
0000CD0E 41F0 579C               0000079C  19503          LA    15,1948(0,5)
0000CD12 E3F0 D100 0024          00000100  19504          STG   15,256(0,13)
0000CD18 4110 D0F8               000000F8  19505          LA    1,248(0,13)
0000CD1C B904 00F7                         19506          LGR   15,7
0000CD20                                   19507 @@gen_label1264 DS    0H
0000CD20 05EF                              19508          BALR  14,15
0000CD22                                   19509 @@gen_label1265 DS    0H
0000CD22 E3F0 C1B8 0016          0000C730  19510          LLGF  15,@lit_1988_906 ; rd_unittest_assert_on_failure
0000CD28 41FF A000               00000000  19511          LA    15,0(15,10)
0000CD2C 9500 F000      00000000 00000000  19512          CLI   0(15),0
0000CD30 4780 C806               0000CD7E  19513          BE    @L1317
0000CD34 41F0 D0B8               000000B8  19514          LA    15,184(0,13)
0000CD38 E3F0 D0F8 0024          000000F8  19515          STG   15,248(0,13)
0000CD3E 4110 D0F8               000000F8  19516          LA    1,248(0,13)
0000CD42 B904 00F2                         19517          LGR   15,2
0000CD46                                   19518 @@gen_label1267 DS    0H
0000CD46 05EF                              19519          BALR  14,15
0000CD48                                   19520 @@gen_label1268 DS    0H
0000CD48 19F3                              19521          CR    15,3
0000CD4A 4780 C806               0000CD7E  19522          BE    @L1317
0000CD4E                                   19523 @L1318   DS    0H
0000CD4E 41F0 63FE               000003FE  19524          LA    15,1022(0,6)
0000CD52 E3F0 D0F8 0024          000000F8  19525          STG   15,248(0,13)
0000CD58 41F0 52C2               000002C2  19526          LA    15,706(0,5)
0000CD5C E3F0 D100 0024          00000100  19527          STG   15,256(0,13)
0000CD62 E548 D108 086B          00000108  19528          MVGHI 264(13),2155
0000CD68 41F0 5C72               00000C72  19529          LA    15,3186(0,5)
0000CD6C E3F0 D110 0024          00000110  19530          STG   15,272(0,13)
0000CD72 4110 D0F8               000000F8  19531          LA    1,248(0,13)
                                                                                                                           Page  388 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CD76 E3F0 C1C0 0004          0000C738  19532          LG    15,@lit_1988_908 ; __assert
0000CD7C                                   19533 @@gen_label1270 DS    0H
0000CD7C 05EF                              19534          BALR  14,15
0000CD7E                                   19535 @@gen_label1271 DS    0H
0000CD7E                                   19536 @L1319   DS    0H
0000CD7E                                   19537 @L1317   DS    0H
0000CD7E A7F9 0001               00000001  19538          LGHI  15,1        ; 1
0000CD82 E3C0 C1C8 001A          0000C740  19539          ALGF  12,@lit_region_diff_1988_1_2
                                           19540          DROP  12
                        0000CE96           19541          USING @REGION_1988_2,12
0000CD88 47F0 C33A               0000D1D0  19542          B     @ret_lab_1988
                                           19543          DROP  12
                        0000C578           19544          USING @REGION_1988_1,12
0000CD8C                                   19545 @L1316   DS    0H
                                           19546 * ***
                                           19547 * ***
                                           19548 * ***
                                           19549 * ***           if (ut_verify_msgq_order("after", &destq, lo, hi, 0))
0000CD8C E3F0 C160 0004          0000C6D8  19550          LG    15,@lit_1988_972
0000CD92 41F0 FC98               00000C98  19551          LA    15,3224(0,15)
0000CD96 E3F0 D0F8 0024          000000F8  19552          STG   15,248(0,13)
0000CD9C 41F0 D0B8               000000B8  19553          LA    15,184(0,13)
0000CDA0 E3F0 D100 0024          00000100  19554          STG   15,256(0,13)
0000CDA6 EB56 D108 0024          00000108  19555          STMG  5,6,264(13)
0000CDAC D707 D118 D118 00000118 00000118  19556          XC    280(8,13),280(13)
0000CDB2 4110 D0F8               000000F8  19557          LA    1,248(0,13)
0000CDB6 E3F0 C1D0 0004          0000C748  19558          LG    15,@lit_1988_925 ; ut_verify_msgq_order
0000CDBC                                   19559 @@gen_label1272 DS    0H
0000CDBC 05EF                              19560          BALR  14,15
0000CDBE                                   19561 @@gen_label1273 DS    0H
0000CDBE 12FF                              19562          LTR   15,15
0000CDC0 4780 C85A               0000CDD2  19563          BZ    @L1321
                                           19564 * ***                   return 1;
0000CDC4 A7F9 0001               00000001  19565          LGHI  15,1        ; 1
0000CDC8 E3C0 C1C8 001A          0000C740  19566          ALGF  12,@lit_region_diff_1988_1_2
                                           19567          DROP  12
                        0000CE96           19568          USING @REGION_1988_2,12
0000CDCE 47F0 C33A               0000D1D0  19569          B     @ret_lab_1988
                                           19570          DROP  12
                        0000C578           19571          USING @REGION_1988_1,12
                                           19572 * ***
                                           19573 * ***           do { if (!(rd_kafka_msgq_size(&destq) == totsize)) { f\
                                           19574 * printf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: \
                                           19575 * " "rd_kafka_msgq_size(&destq) == totsize" ": ", "C:\\asgkafka\\librd\
                                           19576 * kafka\\src\\rdkafka_msg.c", 2162, __FUNCTION__); fprintf(__stderrp, \
                                           19577 * "expected destq size to be %" "zu" " bytes, not %" "zu", totsize, rd\
                                           19578 * _kafka_msgq_size(&destq)); fprintf(__stderrp, "\033[0m\n"); if (rd_u\
                                           19579 * nittest_assert_on_failure) ((rd_kafka_msgq_size(&destq) == totsize) \
                                           19580 * ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkaf\
                                           19581 * ka_msg.c", 2162, "rd_kafka_msgq_size(&destq) == totsize")); return 1\
                                           19582 * ; } } while (0);
0000CDD2                                   19583 @L1321   DS    0H
                                                                                                                           Page  389 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CDD2 41F0 D0B8               000000B8  19584          LA    15,184(0,13)
0000CDD6 E3F0 D0F8 0024          000000F8  19585          STG   15,248(0,13)
0000CDDC 4110 D0F8               000000F8  19586          LA    1,248(0,13)
0000CDE0 E320 C1D8 0004          0000C750  19587          LG    2,@lit_1988_927 ; rd_kafka_msgq_size
0000CDE6 B904 00F2                         19588          LGR   15,2
0000CDEA                                   19589 @@gen_label1275 DS    0H
0000CDEA 05EF                              19590          BALR  14,15
0000CDEC                                   19591 @@gen_label1276 DS    0H
0000CDEC B921 00F4                         19592          CLGR  15,4
0000CDF0 4770 C886               0000CDFE  19593          BNE   *+14  Around region break
0000CDF4 E3C0 C1C8 001A          0000C740  19594          ALGF  12,@lit_region_diff_1988_1_2
                                           19595          DROP  12
                        0000CE96           19596          USING @REGION_1988_2,12
0000CDFA 47F0 C0CE               0000CF64  19597          B     @L1324
                                           19598          DROP  12
                        0000C578           19599          USING @REGION_1988_1,12
0000CDFE E330 C170 0016          0000C6E8  19600          LLGF  3,@lit_1988_858 ; __stderrp
0000CE04 E3F3 A000 0004          00000000  19601          LG    15,0(3,10)  ; __stderrp
0000CE0A E3F0 D0F8 0024          000000F8  19602          STG   15,248(0,13)
0000CE10 E350 C160 0004          0000C6D8  19603          LG    5,@lit_1988_972
0000CE16 41F0 5C9E               00000C9E  19604          LA    15,3230(0,5)
0000CE1A E3F0 D100 0024          00000100  19605          STG   15,256(0,13)
0000CE20 41F0 52C2               000002C2  19606          LA    15,706(0,5)
0000CE24 E3F0 D108 0024          00000108  19607          STG   15,264(0,13)
0000CE2A E548 D110 0872          00000110  19608          MVGHI 272(13),2162
0000CE30 E360 C168 0004          0000C6E0  19609          LG    6,@lit_1988_860
0000CE36 41F0 63FE               000003FE  19610          LA    15,1022(0,6)
0000CE3A E3F0 D118 0024          00000118  19611          STG   15,280(0,13)
0000CE40 4110 D0F8               000000F8  19612          LA    1,248(0,13)
0000CE44 E370 C158 0004          0000C6D0  19613          LG    7,@lit_1988_973 ; fprintf
0000CE4A B904 00F7                         19614          LGR   15,7
0000CE4E                                   19615 @@gen_label1278 DS    0H
0000CE4E 05EF                              19616          BALR  14,15
0000CE50                                   19617 @@gen_label1279 DS    0H
0000CE50 41F0 D0B8               000000B8  19618          LA    15,184(0,13)
0000CE54 E3F0 D0F8 0024          000000F8  19619          STG   15,248(0,13)
0000CE5A 4110 D0F8               000000F8  19620          LA    1,248(0,13)
0000CE5E B904 00F2                         19621          LGR   15,2
0000CE62                                   19622 @@gen_label1280 DS    0H
0000CE62 05EF                              19623          BALR  14,15
0000CE64                                   19624 @@gen_label1281 DS    0H
0000CE64 E313 A000 0004          00000000  19625          LG    1,0(3,10)   ; __stderrp
0000CE6A E310 D0F8 0024          000000F8  19626          STG   1,248(0,13)
0000CE70 4110 5CF2               00000CF2  19627          LA    1,3314(0,5)
0000CE74 E310 D100 0024          00000100  19628          STG   1,256(0,13)
0000CE7A E340 D108 0024          00000108  19629          STG   4,264(0,13)
0000CE80 E3F0 D110 0024          00000110  19630          STG   15,272(0,13)
0000CE86 4110 D0F8               000000F8  19631          LA    1,248(0,13)
0000CE8A B904 00F7                         19632          LGR   15,7
0000CE8E                                   19633 @@gen_label1282 DS    0H
0000CE8E 05EF                              19634          BALR  14,15
0000CE90                                   19635 @@gen_label1283 DS    0H
                                                                                                                           Page  390 
  Active Usings: @REGION_1988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CE90 E3C0 C1C8 001A          0000C740  19636          ALGF  12,@lit_region_diff_1988_1_2
0000CE96                                   19637 @REGION_1988_2 DS 0H
                                           19638          DROP  12
                        0000CE96           19639          USING @REGION_1988_2,12
0000CE96 E3F3 A000 0004          00000000  19640          LG    15,0(3,10)  ; __stderrp
0000CE9C E3F0 D0F8 0024          000000F8  19641          STG   15,248(0,13)
0000CEA2 41F0 579C               0000079C  19642          LA    15,1948(0,5)
0000CEA6 E3F0 D100 0024          00000100  19643          STG   15,256(0,13)
0000CEAC 4110 D0F8               000000F8  19644          LA    1,248(0,13)
0000CEB0 B904 00F7                         19645          LGR   15,7
0000CEB4                                   19646 @@gen_label1284 DS    0H
0000CEB4 05EF                              19647          BALR  14,15
0000CEB6                                   19648 @@gen_label1285 DS    0H
0000CEB6 E3F0 C08A 0016          0000CF20  19649          LLGF  15,@lit_1988_937 ; rd_unittest_assert_on_failure
0000CEBC 41FF A000               00000000  19650          LA    15,0(15,10)
0000CEC0 9500 F000      00000000 00000000  19651          CLI   0(15),0
0000CEC4 4780 C07E               0000CF14  19652          BE    @L1325
0000CEC8 41F0 D0B8               000000B8  19653          LA    15,184(0,13)
0000CECC E3F0 D0F8 0024          000000F8  19654          STG   15,248(0,13)
0000CED2 4110 D0F8               000000F8  19655          LA    1,248(0,13)
0000CED6 B904 00F2                         19656          LGR   15,2
0000CEDA                                   19657 @@gen_label1287 DS    0H
0000CEDA 05EF                              19658          BALR  14,15
0000CEDC                                   19659 @@gen_label1288 DS    0H
0000CEDC B921 00F4                         19660          CLGR  15,4
0000CEE0 4780 C07E               0000CF14  19661          BE    @L1325
0000CEE4                                   19662 @L1326   DS    0H
0000CEE4 41F0 63FE               000003FE  19663          LA    15,1022(0,6)
0000CEE8 E3F0 D0F8 0024          000000F8  19664          STG   15,248(0,13)
0000CEEE 41F0 52C2               000002C2  19665          LA    15,706(0,5)
0000CEF2 E3F0 D100 0024          00000100  19666          STG   15,256(0,13)
0000CEF8 E548 D108 0872          00000108  19667          MVGHI 264(13),2162
0000CEFE 41F0 5D20               00000D20  19668          LA    15,3360(0,5)
0000CF02 E3F0 D110 0024          00000110  19669          STG   15,272(0,13)
0000CF08 4110 D0F8               000000F8  19670          LA    1,248(0,13)
0000CF0C E3F0 C092 0004          0000CF28  19671          LG    15,@lit_1988_939 ; __assert
0000CF12                                   19672 @@gen_label1290 DS    0H
0000CF12 05EF                              19673          BALR  14,15
0000CF14                                   19674 @@gen_label1291 DS    0H
0000CF14                                   19675 @L1327   DS    0H
0000CF14                                   19676 @L1325   DS    0H
0000CF14 A7F9 0001               00000001  19677          LGHI  15,1        ; 1
0000CF18 47F0 C33A               0000D1D0  19678          B     @ret_lab_1988
0000CF20                                   19679          DS    0D
0000CF20 00000000                          19680 @lit_1988_937 DC Q(rd_unittest_assert_on_failure)
0000CF24 00000000
0000CF28 0000000000000000                  19681 @lit_1988_939 DC AD(__assert)
0000CF30 000000000000AA90                  19682 @lit_1988_941 DC AD(ut_rd_kafka_msgq_purge)
0000CF38 00000000                          19683 @lit_1988_943 DC Q(rd_unittest_slow)
0000CF40                                   19684          DS 0D
0000CF40 3D68DB8BAC710CB3                  19685 @lit_1988_944 DC XL8'3D68DB8BAC710CB3'
0000CF48 0000000000000000                  19686 @lit_1988_948 DC AD(fprintf)
                                                                                                                           Page  391 
  Active Usings: @REGION_1988_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CF50 000000000000E868                  19687 @lit_1988_947 DC AD(@DATA)
0000CF58 000000000000ECA4                  19688 @lit_1988_946 DC AD(@strings@)
0000CF60 00000000                          19689 @lit_1988_945 DC Q(__stderrp)
0000CF64                                   19690 @L1324   DS    0H
                                           19691 * ***
                                           19692 * ***
                                           19693 * ***
                                           19694 * ***           ut_rd_kafka_msgq_purge(&srcq);
0000CF64 41F0 D0D8               000000D8  19695          LA    15,216(0,13)
0000CF68 E3F0 D0F8 0024          000000F8  19696          STG   15,248(0,13)
0000CF6E 4110 D0F8               000000F8  19697          LA    1,248(0,13)
0000CF72 E320 C09A 0004          0000CF30  19698          LG    2,@lit_1988_941 ; ut_rd_kafka_msgq_purge
0000CF78 B904 00F2                         19699          LGR   15,2
0000CF7C                                   19700 @@gen_label1292 DS    0H
0000CF7C 05EF                              19701          BALR  14,15
0000CF7E                                   19702 @@gen_label1293 DS    0H
                                           19703 * ***           ut_rd_kafka_msgq_purge(&destq);
0000CF7E 41F0 D0B8               000000B8  19704          LA    15,184(0,13)
0000CF82 E3F0 D0F8 0024          000000F8  19705          STG   15,248(0,13)
0000CF88 4110 D0F8               000000F8  19706          LA    1,248(0,13)
0000CF8C B904 00F2                         19707          LGR   15,2
0000CF90                                   19708 @@gen_label1294 DS    0H
0000CF90 05EF                              19709          BALR  14,15
0000CF92                                   19710 @@gen_label1295 DS    0H
                                           19711 * ***
                                           19712 * ***           if (!rd_unittest_slow)
0000CF92 E3F0 C0A2 0016          0000CF38  19713          LLGF  15,@lit_1988_943 ; rd_unittest_slow
0000CF98 41FF A000               00000000  19714          LA    15,0(15,10)
0000CF9C 9500 F000      00000000 00000000  19715          CLI   0(15),0
0000CFA0 4770 C21E               0000D0B4  19716          BNE   @L1328
                                           19717 * ***                   do { if (!(!(us_per_msg > max_us_per_msg + 0.0\
                                           19718 * 001))) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "asser\
                                           19719 * t failed: " "!(us_per_msg > max_us_per_msg + 0.0001)" ": ", "C:\\asg\
                                           19720 * kafka\\librdkafka\\src\\rdkafka_msg.c", 2170, __FUNCTION__); fprintf\
                                           19721 * (__stderrp, "maximum us/msg exceeded: %.4f > %.4f us/msg", us_per_ms\
                                           19722 * g, max_us_per_msg); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest\
                                           19723 * _assert_on_failure) ((!(us_per_msg > max_us_per_msg + 0.0001)) ? (vo\
                                           19724 * id)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_ms\
                                           19725 * g.c", 2170, "!(us_per_msg > max_us_per_msg + 0.0001)")); return 1; }\
                                           19726 *  } while (0);
0000CFA4                                   19727 @L1329   DS    0H
0000CFA4 68F0 D128               00000128  19728          LD    15,296(0,13) ; spill
0000CFA8 6AF0 C0AA               0000CF40  19729          AD    15,@lit_1988_944
0000CFAC 68B0 D120               00000120  19730          LD    11,288(0,13) ; spill
0000CFB0 29BF                              19731          CDR   11,15
0000CFB2 47D0 C2D2               0000D168  19732          BNH   @L1336
0000CFB6 E320 C0CA 0016          0000CF60  19733          LLGF  2,@lit_1988_945 ; __stderrp
0000CFBC E3F2 A000 0004          00000000  19734          LG    15,0(2,10)  ; __stderrp
0000CFC2 E3F0 D0F8 0024          000000F8  19735          STG   15,248(0,13)
0000CFC8 E330 C0C2 0004          0000CF58  19736          LG    3,@lit_1988_946
0000CFCE 41F0 3D46               00000D46  19737          LA    15,3398(0,3)
0000CFD2 E3F0 D100 0024          00000100  19738          STG   15,256(0,13)
                                                                                                                           Page  392 
  Active Usings: @REGION_1988_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CFD8 41F0 32C2               000002C2  19739          LA    15,706(0,3)
0000CFDC E3F0 D108 0024          00000108  19740          STG   15,264(0,13)
0000CFE2 E548 D110 087A          00000110  19741          MVGHI 272(13),2170
0000CFE8 E340 C0BA 0004          0000CF50  19742          LG    4,@lit_1988_947
0000CFEE 41F0 43FE               000003FE  19743          LA    15,1022(0,4)
0000CFF2 E3F0 D118 0024          00000118  19744          STG   15,280(0,13)
0000CFF8 4110 D0F8               000000F8  19745          LA    1,248(0,13)
0000CFFC E350 C0B2 0004          0000CF48  19746          LG    5,@lit_1988_948 ; fprintf
0000D002 B904 00F5                         19747          LGR   15,5
0000D006                                   19748 @@gen_label1298 DS    0H
0000D006 05EF                              19749          BALR  14,15
0000D008                                   19750 @@gen_label1299 DS    0H
0000D008 E3F2 A000 0004          00000000  19751          LG    15,0(2,10)  ; __stderrp
0000D00E E3F0 D0F8 0024          000000F8  19752          STG   15,248(0,13)
0000D014 41F0 3D9C               00000D9C  19753          LA    15,3484(0,3)
0000D018 E3F0 D100 0024          00000100  19754          STG   15,256(0,13)
0000D01E 68B0 D120               00000120  19755          LD    11,288(0,13) ; spill
0000D022 60B0 D108               00000108  19756          STD   11,264(0,13)
0000D026 68F0 D128               00000128  19757          LD    15,296(0,13) ; spill
0000D02A 60F0 D110               00000110  19758          STD   15,272(0,13)
0000D02E 4110 D0F8               000000F8  19759          LA    1,248(0,13)
0000D032 B904 00F5                         19760          LGR   15,5
0000D036                                   19761 @@gen_label1300 DS    0H
0000D036 05EF                              19762          BALR  14,15
0000D038                                   19763 @@gen_label1301 DS    0H
0000D038 E3F2 A000 0004          00000000  19764          LG    15,0(2,10)  ; __stderrp
0000D03E E3F0 D0F8 0024          000000F8  19765          STG   15,248(0,13)
0000D044 41F0 379C               0000079C  19766          LA    15,1948(0,3)
0000D048 E3F0 D100 0024          00000100  19767          STG   15,256(0,13)
0000D04E 4110 D0F8               000000F8  19768          LA    1,248(0,13)
0000D052 B904 00F5                         19769          LGR   15,5
0000D056                                   19770 @@gen_label1302 DS    0H
0000D056 05EF                              19771          BALR  14,15
0000D058                                   19772 @@gen_label1303 DS    0H
0000D058 E3F0 C08A 0016          0000CF20  19773          LLGF  15,@lit_1988_937 ; rd_unittest_assert_on_failure
0000D05E 41FF A000               00000000  19774          LA    15,0(15,10)
0000D062 9500 F000      00000000 00000000  19775          CLI   0(15),0
0000D066 4780 C216               0000D0AC  19776          BE    @L1333
0000D06A 68F0 D128               00000128  19777          LD    15,296(0,13) ; spill
0000D06E 6AF0 C0AA               0000CF40  19778          AD    15,@lit_1988_944
0000D072 68B0 D120               00000120  19779          LD    11,288(0,13) ; spill
0000D076 29BF                              19780          CDR   11,15
0000D078 47D0 C216               0000D0AC  19781          BNH   @L1333
0000D07C                                   19782 @L1334   DS    0H
0000D07C 41F0 43FE               000003FE  19783          LA    15,1022(0,4)
0000D080 E3F0 D0F8 0024          000000F8  19784          STG   15,248(0,13)
0000D086 41F0 32C2               000002C2  19785          LA    15,706(0,3)
0000D08A E3F0 D100 0024          00000100  19786          STG   15,256(0,13)
0000D090 E548 D108 087A          00000108  19787          MVGHI 264(13),2170
0000D096 41F0 3DC8               00000DC8  19788          LA    15,3528(0,3)
0000D09A E3F0 D110 0024          00000110  19789          STG   15,272(0,13)
0000D0A0 4110 D0F8               000000F8  19790          LA    1,248(0,13)
                                                                                                                           Page  393 
  Active Usings: @REGION_1988_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D0A4 E3F0 C092 0004          0000CF28  19791          LG    15,@lit_1988_939 ; __assert
0000D0AA                                   19792 @@gen_label1306 DS    0H
0000D0AA 05EF                              19793          BALR  14,15
0000D0AC                                   19794 @@gen_label1307 DS    0H
0000D0AC                                   19795 @L1335   DS    0H
0000D0AC                                   19796 @L1333   DS    0H
0000D0AC A7F9 0001               00000001  19797          LGHI  15,1        ; 1
0000D0B0 47F0 C33A               0000D1D0  19798          B     @ret_lab_1988
0000D0B4                                   19799 @L1332   DS    0H
                                           19800 * ***
                                           19801 * ***
                                           19802 * ***           else if (us_per_msg > max_us_per_msg + 0.0001)
0000D0B4                                   19803 @L1328   DS    0H
0000D0B4 68F0 D128               00000128  19804          LD    15,296(0,13) ; spill
0000D0B8 6AF0 C0AA               0000CF40  19805          AD    15,@lit_1988_944
0000D0BC 68B0 D120               00000120  19806          LD    11,288(0,13) ; spill
0000D0C0 29BF                              19807          CDR   11,15
0000D0C2 47D0 C2D2               0000D168  19808          BNH   @L1336
                                           19809 * ***                   do { fprintf(__stderrp, "\033[33mRDUT: WARN: %\
                                           19810 * s:%d: %s: ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2174, _\
                                           19811 * _FUNCTION__); fprintf(__stderrp, "maximum us/msg exceeded: %.4f > %.\
                                           19812 * 4f us/msg", us_per_msg, max_us_per_msg); fprintf(__stderrp, "\033[0m\
                                           19813 * \n"); } while (0);
0000D0C6                                   19814 @L1338   DS    0H
0000D0C6 E320 C0CA 0016          0000CF60  19815          LLGF  2,@lit_1988_945 ; __stderrp
0000D0CC E3F2 A000 0004          00000000  19816          LG    15,0(2,10)  ; __stderrp
0000D0D2 E3F0 D0F8 0024          000000F8  19817          STG   15,248(0,13)
0000D0D8 E330 C0C2 0004          0000CF58  19818          LG    3,@lit_1988_946
0000D0DE 41F0 3DF0               00000DF0  19819          LA    15,3568(0,3)
0000D0E2 E3F0 D100 0024          00000100  19820          STG   15,256(0,13)
0000D0E8 41F0 32C2               000002C2  19821          LA    15,706(0,3)
0000D0EC E3F0 D108 0024          00000108  19822          STG   15,264(0,13)
0000D0F2 E548 D110 087E          00000110  19823          MVGHI 272(13),2174
0000D0F8 E3F0 C0BA 0004          0000CF50  19824          LG    15,@lit_1988_947
0000D0FE 41F0 F3FE               000003FE  19825          LA    15,1022(0,15)
0000D102 E3F0 D118 0024          00000118  19826          STG   15,280(0,13)
0000D108 4110 D0F8               000000F8  19827          LA    1,248(0,13)
0000D10C E340 C0B2 0004          0000CF48  19828          LG    4,@lit_1988_948 ; fprintf
0000D112 B904 00F4                         19829          LGR   15,4
0000D116                                   19830 @@gen_label1309 DS    0H
0000D116 05EF                              19831          BALR  14,15
0000D118                                   19832 @@gen_label1310 DS    0H
0000D118 E3F2 A000 0004          00000000  19833          LG    15,0(2,10)  ; __stderrp
0000D11E E3F0 D0F8 0024          000000F8  19834          STG   15,248(0,13)
0000D124 41F0 3D9C               00000D9C  19835          LA    15,3484(0,3)
0000D128 E3F0 D100 0024          00000100  19836          STG   15,256(0,13)
0000D12E 68B0 D120               00000120  19837          LD    11,288(0,13) ; spill
0000D132 60B0 D108               00000108  19838          STD   11,264(0,13)
0000D136 68F0 D128               00000128  19839          LD    15,296(0,13) ; spill
0000D13A 60F0 D110               00000110  19840          STD   15,272(0,13)
0000D13E 4110 D0F8               000000F8  19841          LA    1,248(0,13)
0000D142 B904 00F4                         19842          LGR   15,4
                                                                                                                           Page  394 
  Active Usings: @REGION_1988_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D146                                   19843 @@gen_label1311 DS    0H
0000D146 05EF                              19844          BALR  14,15
0000D148                                   19845 @@gen_label1312 DS    0H
0000D148 E3F2 A000 0004          00000000  19846          LG    15,0(2,10)  ; __stderrp
0000D14E E3F0 D0F8 0024          000000F8  19847          STG   15,248(0,13)
0000D154 41F0 379C               0000079C  19848          LA    15,1948(0,3)
0000D158 E3F0 D100 0024          00000100  19849          STG   15,256(0,13)
0000D15E 4110 D0F8               000000F8  19850          LA    1,248(0,13)
0000D162 B904 00F4                         19851          LGR   15,4
0000D166                                   19852 @@gen_label1313 DS    0H
0000D166 05EF                              19853          BALR  14,15
0000D168                                   19854 @@gen_label1314 DS    0H
                                           19855 * ***
                                           19856 * ***
                                           19857 * ***           if (ret_us_per_msg)
0000D168                                   19858 @L1337   DS    0H
0000D168                                   19859 @L1336   DS    0H
0000D168 E3F0 B010 0004          00000010  19860          LG    15,16(0,11) ; ret_us_per_msg
0000D16E B902 001F                         19861          LTGR  1,15
0000D172 4780 C2E8               0000D17E  19862          BZ    @L1342
                                           19863 * ***                   *ret_us_per_msg = us_per_msg;
0000D176 68B0 D120               00000120  19864          LD    11,288(0,13) ; spill
0000D17A 60B0 F000               00000000  19865          STD   11,0(0,15)  ; ret_us_per_msg
0000D17E                                   19866 @L1341   DS    0H
                                           19867 * ***
                                           19868 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           19869 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2180, __\
                                           19870 * FUNCTION__); return 0; } while (0);
0000D17E                                   19871 @L1342   DS    0H
0000D17E E3F0 C0CA 0016          0000CF60  19872          LLGF  15,@lit_1988_945 ; __stderrp
0000D184 E3FF A000 0004          00000000  19873          LG    15,0(15,10) ; __stderrp
0000D18A E3F0 D0F8 0024          000000F8  19874          STG   15,248(0,13)
0000D190 E3F0 C0C2 0004          0000CF58  19875          LG    15,@lit_1988_946
0000D196 4110 FABA               00000ABA  19876          LA    1,2746(0,15)
0000D19A E310 D100 0024          00000100  19877          STG   1,256(0,13)
0000D1A0 41F0 F2C2               000002C2  19878          LA    15,706(0,15)
0000D1A4 E3F0 D108 0024          00000108  19879          STG   15,264(0,13)
0000D1AA E548 D110 0884          00000110  19880          MVGHI 272(13),2180
0000D1B0 E3F0 C0BA 0004          0000CF50  19881          LG    15,@lit_1988_947
0000D1B6 41F0 F3FE               000003FE  19882          LA    15,1022(0,15)
0000D1BA E3F0 D118 0024          00000118  19883          STG   15,280(0,13)
0000D1C0 4110 D0F8               000000F8  19884          LA    1,248(0,13)
0000D1C4 E3F0 C0B2 0004          0000CF48  19885          LG    15,@lit_1988_948 ; fprintf
0000D1CA                                   19886 @@gen_label1316 DS    0H
0000D1CA 05EF                              19887          BALR  14,15
0000D1CC                                   19888 @@gen_label1317 DS    0H
0000D1CC A7F9 0000               00000000  19889          LGHI  15,0        ; 0
                                           19890 * ***   }
0000D1D0                                   19891 @ret_lab_1988 DS 0H
                                           19892 * * **** Start of Epilogue
                                           19893          DCCEPIL
0000D1D0                                   19894+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  395 
  Active Usings: @REGION_1988_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           19895+* Epilog
0000D1D0 D707 D088 D088 00000088 00000088  19896+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000D1D6 E3D0 D080 0004          00000080  19897+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000D1DC E3C0 D090 0004          00000090  19898+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000D1E2 E3B0 C018 0004          00000018  19899+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000D1E8 E3C0 B010 0021          00000010  19900+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000D1EE E3E0 D008 0004          00000008  19901+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000D1F4 EB1C D020 0004          00000020  19902+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000D1FA 078E                              19903+         bcr 8,14                if same dsab, just return              01-DCCEP
0000D1FC E3F0 D010 0024          00000010  19904+         stg 15,16(0,13)         save return code                       01-DCCEP
0000D202 E300 D018 0024          00000018  19905+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000D208 E3F0 D090 0004          00000090  19906+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000D20E E3F0 F018 0004          00000018  19907+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000D214 47F0 F040               00000040  19908+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           19909+* End of Epilog
                                           19910 * * **** End of Epilogue
                                           19911          DROP  12
                                           19912 *
                                           19913 *   DSECT for automatic variables in "unittest_msgq_insert_all_sort"
                                           19914 *      (FUNCTION #1988)
                                           19915 *
00000000                00000000 000000F8  19916 @AUTO#unittest_msgq_insert_all_sort DSECT
00000000                                   19917          DS    XL184
000000B8                                   19918 unittest_msgq_insert_all_sort#this_cnt#3 DS 8XL1 ; this_cnt
000000C0                000000C0 000000B8  19919          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19920 unittest_msgq_insert_all_sort#this_cnt#2 DS 8XL1 ; this_cnt
000000C0                000000C0 000000B8  19921          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19922 unittest_msgq_insert_all_sort#us_per_msg#0 DS 1D ; us_per_msg
000000C0                000000C0 000000B8  19923          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19924 unittest_msgq_insert_all_sort#ts#0 DS 8XL1 ; ts
000000C0                000000C0 000000B8  19925          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19926 unittest_msgq_insert_all_sort#totsize#0 DS 8XL1 ; totsize
000000C0                000000C0 000000B8  19927          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19928 unittest_msgq_insert_all_sort#msgsize#0 DS 8XL1 ; msgsize
000000C0                000000C0 000000B8  19929          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19930 unittest_msgq_insert_all_sort#cnt#0 DS 8XL1 ; cnt
000000C0                000000C0 000000B8  19931          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19932 unittest_msgq_insert_all_sort#hi#0 DS 8XL1 ; hi
000000C0                000000C0 000000B8  19933          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19934 unittest_msgq_insert_all_sort#lo#0 DS 8XL1 ; lo
000000C0                000000C0 000000B8  19935          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19936 unittest_msgq_insert_all_sort#i#0 DS 1F ; i
000000BC                000000BC 000000B8  19937          ORG   @AUTO#unittest_msgq_insert_all_sort+184
000000B8                                   19938 unittest_msgq_insert_all_sort#destq#0 DS 32XL1 ; destq
000000D8                000000D8 000000D8  19939          ORG   @AUTO#unittest_msgq_insert_all_sort+216
000000D8                                   19940 unittest_msgq_insert_all_sort#srcq#0 DS 32XL1 ; srcq
                                           19941 *
0000D218                00000000 0000E868  19942 @CODE    CSECT
                                           19943 *
                                           19944 *
                                           19945 *
                                           19946 * ....... start of unittest_msgq_insert_each_sort
                                                                                                                           Page  396 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D218                                   19947 @LNAME1989 DS  0H
0000D218 0000001E                          19948          DC    X'0000001E'
0000D21C A49589A3A385A2A3                  19949          DC    C'unittest_msgq_insert_each_sort'
0000D23A 00                                19950          DC    X'00'
                                           19951 unittest_msgq_insert_each_sort DCCPRLG CINDEX=1989,BASER=12,FRAME=312,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1989
                                           19952          macro
                                           19953          dccextrn &m
                                           19954          gblc    &$dccext(1000)
                                           19955          gbla    &$dccexti
                                           19956          lcla    &i
                                           19957 &$dccext(&$dccexti+1) setc    '&m'
                                           19958 &i       seta    1
                                           19959 .loop    aif    (&i gt &$dccexti).around
                                           19960          aif    ('&$dccext(&i)' eq '&m').getout
                                           19961 &i       seta    &i+1
                                           19962          ago     .loop
                                           19963 .around  anop
                                           19964 &$dccexti seta &$dccexti+1
                                           19965          extrn  &m
                                           19966 .getout  anop
                                           19967          mend
0000D240                                   19968+$eye0307    ds    0d                                                    02-DCCCA
0000D240 C4C3C3                            19969+         dc cl3'DCC'                                                    02-DCCCA
0000D243 01                                19970+         dc xl1'01' format one                                          02-DCCCA
0000D244 00000000                          19971+         dc a(0)                                                        02-DCCCA
0000D248 000000000000D2B2                  19972+         dc ad(@PER_1989)                                               02-DCCCA
0000D250 0000000000000138                  19973+         dc ad(312)                                                     02-DCCCA
0000D258 0000000000000000                  19974+         dc ad(0)                                                       02-DCCCA
0000D260 0000000000001000                  19975+         dc ad(4096)                                                    02-DCCCA
0000D268 20                                19976+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000D269 03                                19977+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000D26A 03                                19978+         dc al1(3)                                                      02-DCCCA
0000D26B 08                                19979+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000D26C 00                                19980+         dc bl.8'00000000'                                              02-DCCCA
0000D26D 000000                            19981+         dc al3(0)                                                      02-DCCCA
0000D270 000000000000D218                  19982+         dc ad(@LNAME1989)                                              02-DCCCA
0000D278                                   19983+         ds 0d                                                          02-DCCCA
0000D278 000000000000D240                  19984+         dc ad($eye0307)                                                02-DCCCA
0000D280 0000000000000000                  19985+         dc ad(0)                                                       02-DCCCA
0000D288                                   19986+         ds    0d                                                       01-DCCPR
0000D288                                   19987+unittest_msgq_insert_each_sort ds 0d                                    01-DCCPR
0000D288                                   19988+@REGION_1989_1 ds 0h                                                    01-DCCPR
0000D288 EBEC D008 0024          00000008  19989+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000D28E E3E0 D088 0004          00000088  19990+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000D294 E3C0 D090 0004          00000090  19991+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000D29A B904 002E                         19992+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000D29E E3B0 C018 0004          00000018  19993+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000D2A4 A7EB 0138               00000138  19994+         aghi  14,312              increase by frame size               01-DCCPR
0000D2A8 E3E0 C020 0021          00000020  19995+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000D2AE 4720 B020               00000020  19996+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000D2B2                                   19997+@PER_1989 ds   0h                                                       01-DCCPR
                                                                                                                           Page  397 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D2B2 EBDE 2080 0024          00000080  19998+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000D2B8 E3C0 2090 0024          00000090  19999+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000D2BE B904 00D2                         20000+         lgr   13,2                set real frame pointer               01-DCCPR
0000D2C2 B904 00CF                         20001+         lgr   12,15               set base reg                         01-DCCPR
                        0000D288           20002+         using @REGION_1989_1,12                                        01-DCCPR
                                           20003          DCCPRV REG=2      ; Get PRV from DVT
0000D2C6 E320 B008 0004          00000008  20004+         LG 2,8(0,11)                                                   01-DCCPR
0000D2CC B904 00B1                         20005          LGR   11,1
                                           20006 * ******* End of Prologue
                                           20007 * *
0000D2D0 68F0 B008               00000008  20008          LD    15,8(0,11)  ; max_us_per_msg
0000D2D4 60F0 D128               00000128  20009          STD   15,296(0,13) ; spill
0000D2D8 EB45 B018 0004          00000018  20010          LMG   4,5,24(11)  ; src_ranges
                                           20011 * ***           rd_kafka_msgq_t destq;
                                           20012 * ***           int i;
                                           20013 * ***           uint64_t lo = 0xffffffffffffffffULL, hi = 0;
0000D2DE A789 FFFF               0000FFFF  20014          LGHI  8,-1        ; -1
0000D2E2 A799 0000               00000000  20015          LGHI  9,0         ; 0
                                           20016 * ***           uint64_t cnt = 0;
0000D2E6 B904 0069                         20017          LGR   6,9         ; cnt
                                           20018 * ***           uint64_t scnt = 0;
0000D2EA B904 00A9                         20019          LGR   10,9        ; scnt
                                           20020 * ***           const size_t msgsize = 100;
                                           20021 * ***           size_t totsize = 0;
0000D2EE B904 0079                         20022          LGR   7,9         ; totsize
                                           20023 * ***           double us_per_msg;
                                           20024 * ***           rd_ts_t accum_ts = 0;
0000D2F2 E390 D130 0024          00000130  20025          STG   9,304(0,13) ; spill
                                           20026 * ***
                                           20027 * ***           do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s: ", "C:\
                                           20028 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2204, __FUNCTION__); fp\
                                           20029 * rintf(__stderrp, "Testing msgq insert (each) efficiency: %s", what);\
                                           20030 *  fprintf(__stderrp, "\n"); } while (0);
0000D2F8                                   20031 @L1345   DS    0H
0000D2F8 E330 C160 0016          0000D3E8  20032          LLGF  3,@lit_1989_993 ; __stderrp
0000D2FE E3F3 2000 0004          00000000  20033          LG    15,0(3,2)   ; __stderrp
0000D304 E3F0 D0F8 0024          000000F8  20034          STG   15,248(0,13)
0000D30A E3F0 C148 0004          0000D3D0  20035          LG    15,@lit_1989_1134
0000D310 41F0 F6E4               000006E4  20036          LA    15,1764(0,15)
0000D314 E3F0 D100 0024          00000100  20037          STG   15,256(0,13)
0000D31A E3F0 C148 0004          0000D3D0  20038          LG    15,@lit_1989_1134
0000D320 41F0 F2C2               000002C2  20039          LA    15,706(0,15)
0000D324 E3F0 D108 0024          00000108  20040          STG   15,264(0,13)
0000D32A E548 D110 089C          00000110  20041          MVGHI 272(13),2204
0000D330 E3F0 C158 0004          0000D3E0  20042          LG    15,@lit_1989_995
0000D336 41F0 F41C               0000041C  20043          LA    15,1052(0,15)
0000D33A E3F0 D118 0024          00000118  20044          STG   15,280(0,13)
0000D340 4110 D0F8               000000F8  20045          LA    1,248(0,13)
0000D344 E3F0 C150 0004          0000D3D8  20046          LG    15,@lit_1989_1117 ; fprintf
0000D34A                                   20047 @@gen_label1318 DS    0H
0000D34A 05EF                              20048          BALR  14,15
0000D34C                                   20049 @@gen_label1319 DS    0H
                                                                                                                           Page  398 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D34C E3F3 2000 0004          00000000  20050          LG    15,0(3,2)   ; __stderrp
0000D352 E3F0 D0F8 0024          000000F8  20051          STG   15,248(0,13)
0000D358 E3F0 C148 0004          0000D3D0  20052          LG    15,@lit_1989_1134
0000D35E 41F0 FE0E               00000E0E  20053          LA    15,3598(0,15)
0000D362 E3F0 D100 0024          00000100  20054          STG   15,256(0,13)
0000D368 E3F0 B000 0004          00000000  20055          LG    15,0(0,11)  ; what
0000D36E E3F0 D108 0024          00000108  20056          STG   15,264(0,13)
0000D374 4110 D0F8               000000F8  20057          LA    1,248(0,13)
0000D378 E3F0 C150 0004          0000D3D8  20058          LG    15,@lit_1989_1117 ; fprintf
0000D37E                                   20059 @@gen_label1320 DS    0H
0000D37E 05EF                              20060          BALR  14,15
0000D380                                   20061 @@gen_label1321 DS    0H
0000D380 E3F3 2000 0004          00000000  20062          LG    15,0(3,2)   ; __stderrp
0000D386 E3F0 D0F8 0024          000000F8  20063          STG   15,248(0,13)
0000D38C E3F0 C148 0004          0000D3D0  20064          LG    15,@lit_1989_1134
0000D392 41F0 F736               00000736  20065          LA    15,1846(0,15)
0000D396 E3F0 D100 0024          00000100  20066          STG   15,256(0,13)
0000D39C 4110 D0F8               000000F8  20067          LA    1,248(0,13)
0000D3A0 E3F0 C150 0004          0000D3D8  20068          LG    15,@lit_1989_1117 ; fprintf
0000D3A6                                   20069 @@gen_label1322 DS    0H
0000D3A6 05EF                              20070          BALR  14,15
0000D3A8                                   20071 @@gen_label1323 DS    0H
                                           20072 * ***
                                           20073 * ***           rd_kafka_msgq_init(&destq);
0000D3A8 41F0 D0B8               000000B8  20074          LA    15,184(0,13)
0000D3AC E3F0 D0F8 0024          000000F8  20075          STG   15,248(0,13)
0000D3B2 4110 D0F8               000000F8  20076          LA    1,248(0,13)
0000D3B6 E3F0 C168 0004          0000D3F0  20077          LG    15,@lit_1989_1001 ; rd_kafka_msgq_init
0000D3BC                                   20078 @@gen_label1324 DS    0H
0000D3BC 05EF                              20079          BALR  14,15
0000D3BE                                   20080 @@gen_label1325 DS    0H
                                           20081 * ***
                                           20082 * ***           for (i = 0 ; dest_ranges[i].hi > 0 ; i++) {
0000D3BE A738 0000               00000000  20083          LHI   3,0         ; 0
0000D3C2 47F0 C2A4               0000D52C  20084          B     @L1349
0000D3C8                                   20085          DS    0D
0000D3C8 00000138                          20086 @FRAMESIZE_1989 DC F'312'
0000D3CC 00000000
0000D3D0 000000000000ECA4                  20087 @lit_1989_1134 DC AD(@strings@)
0000D3D8 0000000000000000                  20088 @lit_1989_1117 DC AD(fprintf)
0000D3E0 000000000000E868                  20089 @lit_1989_995 DC AD(@DATA)
0000D3E8 00000000                          20090 @lit_1989_993 DC Q(__stderrp)
0000D3EC 00000000
0000D3F0 0000000000001628                  20091 @lit_1989_1001 DC AD(rd_kafka_msgq_init)
0000D3F8 000000000000C410                  20092 @lit_1989_1003 DC AD(ut_msgq_populate)
0000D400 000008D6                          20093 @lit_region_diff_1989_1_2  DC A(@REGION_1989_2-@REGION_1989_1)
0000D404 00000000
0000D408 0000000000001528                  20094 @lit_1989_1141 DC AD(rd_kafka_msgq_len)
0000D410 0000000000000AD0                  20095 @lit_1989_1137 DC AD(rd_clock)
0000D418 0000000000000000                  20096 @lit_1989_1019 DC AD(rd_kafka_msgq_insert_msgq)
0000D420 0000000000001AA0                  20097 @lit_1989_1018 DC AD(rd_kafka_msg_cmp_msgid)
0000D428                                   20098          DS 0D
                                                                                                                           Page  399 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D428 0000000000000000                  20099 @lit_1989_1027 DC XL8'0000000000000000'
0000D430                                   20100          DS 0D
0000D430 5110000000000000                  20101 @lit_1989_1026 DC XL8'5110000000000000'
0000D438 00000000                          20102 @lit_1989_1042 DC Q(rd_unittest_assert_on_failure)
0000D43C 00000000
0000D440 0000000000000000                  20103 @lit_1989_1044 DC AD(__assert)
0000D448 000000000000ABF0                  20104 @lit_1989_1061 DC AD(ut_verify_msgq_order)
0000D450 00000000000015A8                  20105 @lit_1989_1151 DC AD(rd_kafka_msgq_size)
0000D458                                   20106 @L1348   DS    0H
                                           20107 * ***                   uint64_t this_cnt;
                                           20108 * ***
                                           20109 * ***                   ut_msgq_populate(&destq, dest_ranges[i].lo, de\
                                           20110 * st_ranges[i].hi,
                                           20111 * ***                                    msgsize);
0000D458 41F0 D0B8               000000B8  20112          LA    15,184(0,13)
0000D45C E3F0 D0F8 0024          000000F8  20113          STG   15,248(0,13)
0000D462 B914 00F3                         20114          LGFR  15,3
0000D466 EBFF 0004 000D          00000004  20115          SLLG  15,15,4(0)  ; *0x10
0000D46C E3FF 5000 0004          00000000  20116          LG    15,0(15,5)
0000D472 E3F0 D100 0024          00000100  20117          STG   15,256(0,13)
0000D478 B914 00F3                         20118          LGFR  15,3
0000D47C EBFF 0004 000D          00000004  20119          SLLG  15,15,4(0)  ; *0x10
0000D482 E3FF 5008 0004          00000008  20120          LG    15,8(15,5)
0000D488 E3F0 D108 0024          00000108  20121          STG   15,264(0,13)
0000D48E A7F9 0064               00000064  20122          LGHI  15,100      ; 100
0000D492 E3F0 D110 0024          00000110  20123          STG   15,272(0,13)
0000D498 4110 D0F8               000000F8  20124          LA    1,248(0,13)
0000D49C E3F0 C170 0004          0000D3F8  20125          LG    15,@lit_1989_1003 ; ut_msgq_populate
0000D4A2                                   20126 @@gen_label1326 DS    0H
0000D4A2 05EF                              20127          BALR  14,15
0000D4A4                                   20128 @@gen_label1327 DS    0H
                                           20129 * ***                   if (dest_ranges[i].lo < lo)
0000D4A4 B914 00F3                         20130          LGFR  15,3
0000D4A8 EBFF 0004 000D          00000004  20131          SLLG  15,15,4(0)  ; *0x10
0000D4AE E3FF 5000 0004          00000000  20132          LG    15,0(15,5)
0000D4B4 B921 00F8                         20133          CLGR  15,8
0000D4B8 47B0 C244               0000D4CC  20134          BNL   @L1352
                                           20135 * ***                           lo = dest_ranges[i].lo;
0000D4BC B914 00F3                         20136          LGFR  15,3
0000D4C0 EBFF 0004 000D          00000004  20137          SLLG  15,15,4(0)  ; *0x10
0000D4C6 E38F 5000 0004          00000000  20138          LG    8,0(15,5)
0000D4CC                                   20139 @L1352   DS    0H
                                           20140 * ***                   if (dest_ranges[i].hi > hi)
0000D4CC B914 00F3                         20141          LGFR  15,3
0000D4D0 EBFF 0004 000D          00000004  20142          SLLG  15,15,4(0)  ; *0x10
0000D4D6 E3FF 5008 0004          00000008  20143          LG    15,8(15,5)  ; offset of hi in ut_msg_range
0000D4DC B921 00F9                         20144          CLGR  15,9
0000D4E0 47D0 C26C               0000D4F4  20145          BNH   @L1353
                                           20146 * ***                           hi = dest_ranges[i].hi;
0000D4E4 B914 00F3                         20147          LGFR  15,3
0000D4E8 EBFF 0004 000D          00000004  20148          SLLG  15,15,4(0)  ; *0x10
0000D4EE E39F 5008 0004          00000008  20149          LG    9,8(15,5)   ; offset of hi in ut_msg_range
                                                                                                                           Page  400 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D4F4                                   20150 @L1353   DS    0H
                                           20151 * ***                   this_cnt = (dest_ranges[i].hi - dest_ranges[i]\
                                           20152 * .lo) + 1;
0000D4F4 B914 00F3                         20153          LGFR  15,3
0000D4F8 EBFF 0004 000D          00000004  20154          SLLG  15,15,4(0)  ; *0x10
0000D4FE E3FF 5008 0004          00000008  20155          LG    15,8(15,5)  ; offset of hi in ut_msg_range
0000D504 B914 0013                         20156          LGFR  1,3
0000D508 EB11 0004 000D          00000004  20157          SLLG  1,1,4(0)    ; *0x10
0000D50E E3F1 5000 000B          00000000  20158          SLG   15,0(1,5)
0000D514 A7FB 0001               00000001  20159          AGHI  15,1
                                           20160 * ***                   cnt += this_cnt;
0000D518 B90A 006F                         20161          ALGR  6,15
                                           20162 * ***                   totsize += msgsize * (size_t)this_cnt;
0000D51C A719 0064               00000064  20163          LGHI  1,100       ; 100
0000D520 B90C 001F                         20164          MSGR  1,15
0000D524 B90A 0071                         20165          ALGR  7,1
                                           20166 * ***           }
0000D528 A73A 0001               00000001  20167          AHI   3,1
0000D52C                                   20168 @L1349   DS    0H
0000D52C B914 00F3                         20169          LGFR  15,3
0000D530 EBFF 0004 000D          00000004  20170          SLLG  15,15,4(0)  ; *0x10
0000D536 41FF 5008               00000008  20171          LA    15,8(15,5)
0000D53A E559 F000 0000          00000000  20172          CLGHSI 0(15),0
0000D540 4720 C1D0               0000D458  20173          BH    @L1348
                                           20174 * ***
                                           20175 * ***
                                           20176 * ***           for (i = 0 ; src_ranges[i].hi > 0 ; i++) {
0000D544 A738 0000               00000000  20177          LHI   3,0         ; 0
0000D548 E3C0 C178 001A          0000D400  20178          ALGF  12,@lit_region_diff_1989_1_2
                                           20179          DROP  12
                        0000DB5E           20180          USING @REGION_1989_2,12
0000D54E 47F0 C1A4               0000DD02  20181          B     @L1355
                                           20182          DROP  12
                        0000D288           20183          USING @REGION_1989_1,12
0000D552                                   20184 @L1354   DS    0H
                                           20185 * ***                   rd_kafka_msgq_t srcq;
                                           20186 * ***                   uint64_t this_cnt;
                                           20187 * ***                   rd_ts_t ts;
                                           20188 * ***
                                           20189 * ***                   rd_kafka_msgq_init(&srcq);
0000D552 41F0 D0D8               000000D8  20190          LA    15,216(0,13)
0000D556 E3F0 D0F8 0024          000000F8  20191          STG   15,248(0,13)
0000D55C 4110 D0F8               000000F8  20192          LA    1,248(0,13)
0000D560 E3F0 C168 0004          0000D3F0  20193          LG    15,@lit_1989_1001 ; rd_kafka_msgq_init
0000D566                                   20194 @@gen_label1331 DS    0H
0000D566 05EF                              20195          BALR  14,15
0000D568                                   20196 @@gen_label1332 DS    0H
                                           20197 * ***
                                           20198 * ***                   ut_msgq_populate(&srcq, src_ranges[i].lo, src_\
                                           20199 * ranges[i].hi,
                                           20200 * ***                                    msgsize);
0000D568 41F0 D0D8               000000D8  20201          LA    15,216(0,13)
                                                                                                                           Page  401 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D56C E3F0 D0F8 0024          000000F8  20202          STG   15,248(0,13)
0000D572 B914 00F3                         20203          LGFR  15,3
0000D576 EBFF 0004 000D          00000004  20204          SLLG  15,15,4(0)  ; *0x10
0000D57C E3FF 4000 0004          00000000  20205          LG    15,0(15,4)
0000D582 E3F0 D100 0024          00000100  20206          STG   15,256(0,13)
0000D588 B914 00F3                         20207          LGFR  15,3
0000D58C EBFF 0004 000D          00000004  20208          SLLG  15,15,4(0)  ; *0x10
0000D592 E3FF 4008 0004          00000008  20209          LG    15,8(15,4)
0000D598 E3F0 D108 0024          00000108  20210          STG   15,264(0,13)
0000D59E A7F9 0064               00000064  20211          LGHI  15,100      ; 100
0000D5A2 E3F0 D110 0024          00000110  20212          STG   15,272(0,13)
0000D5A8 4110 D0F8               000000F8  20213          LA    1,248(0,13)
0000D5AC E3F0 C170 0004          0000D3F8  20214          LG    15,@lit_1989_1003 ; ut_msgq_populate
0000D5B2                                   20215 @@gen_label1333 DS    0H
0000D5B2 05EF                              20216          BALR  14,15
0000D5B4                                   20217 @@gen_label1334 DS    0H
                                           20218 * ***                   if (src_ranges[i].lo < lo)
0000D5B4 B914 00F3                         20219          LGFR  15,3
0000D5B8 EBFF 0004 000D          00000004  20220          SLLG  15,15,4(0)  ; *0x10
0000D5BE E3FF 4000 0004          00000000  20221          LG    15,0(15,4)
0000D5C4 B921 00F8                         20222          CLGR  15,8
0000D5C8 47B0 C354               0000D5DC  20223          BNL   @L1358
                                           20224 * ***                           lo = src_ranges[i].lo;
0000D5CC B914 00F3                         20225          LGFR  15,3
0000D5D0 EBFF 0004 000D          00000004  20226          SLLG  15,15,4(0)  ; *0x10
0000D5D6 E38F 4000 0004          00000000  20227          LG    8,0(15,4)
0000D5DC                                   20228 @L1358   DS    0H
                                           20229 * ***                   if (src_ranges[i].hi > hi)
0000D5DC B914 00F3                         20230          LGFR  15,3
0000D5E0 EBFF 0004 000D          00000004  20231          SLLG  15,15,4(0)  ; *0x10
0000D5E6 E3FF 4008 0004          00000008  20232          LG    15,8(15,4)  ; offset of hi in ut_msg_range
0000D5EC B921 00F9                         20233          CLGR  15,9
0000D5F0 47D0 C37C               0000D604  20234          BNH   @L1359
                                           20235 * ***                           hi = src_ranges[i].hi;
0000D5F4 B914 00F3                         20236          LGFR  15,3
0000D5F8 EBFF 0004 000D          00000004  20237          SLLG  15,15,4(0)  ; *0x10
0000D5FE E39F 4008 0004          00000008  20238          LG    9,8(15,4)   ; offset of hi in ut_msg_range
0000D604                                   20239 @L1359   DS    0H
                                           20240 * ***                   this_cnt = (src_ranges[i].hi - src_ranges[i].l\
                                           20241 * o) + 1;
0000D604 B914 00F3                         20242          LGFR  15,3
0000D608 EBFF 0004 000D          00000004  20243          SLLG  15,15,4(0)  ; *0x10
0000D60E E3FF 4008 0004          00000008  20244          LG    15,8(15,4)  ; offset of hi in ut_msg_range
0000D614 B914 0013                         20245          LGFR  1,3
0000D618 EB11 0004 000D          00000004  20246          SLLG  1,1,4(0)    ; *0x10
0000D61E E3F1 4000 000B          00000000  20247          SLG   15,0(1,4)
0000D624 A7FB 0001               00000001  20248          AGHI  15,1
0000D628 E3F0 D120 0024          00000120  20249          STG   15,288(0,13) ; spill
                                           20250 * ***                   cnt += this_cnt;
0000D62E B90A 006F                         20251          ALGR  6,15
                                           20252 * ***                   scnt += this_cnt;
0000D632 B90A 00AF                         20253          ALGR  10,15
                                                                                                                           Page  402 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           20254 * ***                   totsize += msgsize * (size_t)this_cnt;
0000D636 A719 0064               00000064  20255          LGHI  1,100       ; 100
0000D63A B90C 001F                         20256          MSGR  1,15
0000D63E B90A 0071                         20257          ALGR  7,1
                                           20258 * ***
                                           20259 * ***                   do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s\
                                           20260 * : ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2241, __FUNCTIO\
                                           20261 * N__); fprintf(__stderrp, "Begin insert of %d messages into destq wit\
                                           20262 * h " "%d messages", rd_kafka_msgq_len(&srcq), rd_kafka_msgq_len(&dest\
                                           20263 * q)); fprintf(__stderrp, "\n"); } while (0);
0000D642                                   20264 @L1360   DS    0H
0000D642 E3F0 C160 0016          0000D3E8  20265          LLGF  15,@lit_1989_993 ; __stderrp
0000D648 E3FF 2000 0004          00000000  20266          LG    15,0(15,2)  ; __stderrp
0000D64E E3F0 D0F8 0024          000000F8  20267          STG   15,248(0,13)
0000D654 E3F0 C148 0004          0000D3D0  20268          LG    15,@lit_1989_1134
0000D65A 41F0 F6E4               000006E4  20269          LA    15,1764(0,15)
0000D65E E3F0 D100 0024          00000100  20270          STG   15,256(0,13)
0000D664 E3F0 C148 0004          0000D3D0  20271          LG    15,@lit_1989_1134
0000D66A 41F0 F2C2               000002C2  20272          LA    15,706(0,15)
0000D66E E3F0 D108 0024          00000108  20273          STG   15,264(0,13)
0000D674 E548 D110 08C1          00000110  20274          MVGHI 272(13),2241
0000D67A E3F0 C158 0004          0000D3E0  20275          LG    15,@lit_1989_995
0000D680 41F0 F41C               0000041C  20276          LA    15,1052(0,15)
0000D684 E3F0 D118 0024          00000118  20277          STG   15,280(0,13)
0000D68A 4110 D0F8               000000F8  20278          LA    1,248(0,13)
0000D68E E3F0 C150 0004          0000D3D8  20279          LG    15,@lit_1989_1117 ; fprintf
0000D694                                   20280 @@gen_label1337 DS    0H
0000D694 05EF                              20281          BALR  14,15
0000D696                                   20282 @@gen_label1338 DS    0H
0000D696 41F0 D0D8               000000D8  20283          LA    15,216(0,13)
0000D69A E3F0 D0F8 0024          000000F8  20284          STG   15,248(0,13)
0000D6A0 4110 D0F8               000000F8  20285          LA    1,248(0,13)
0000D6A4 E3F0 C180 0004          0000D408  20286          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000D6AA                                   20287 @@gen_label1339 DS    0H
0000D6AA 05EF                              20288          BALR  14,15
0000D6AC                                   20289 @@gen_label1340 DS    0H
0000D6AC 185F                              20290          LR    5,15
0000D6AE 41F0 D0B8               000000B8  20291          LA    15,184(0,13)
0000D6B2 E3F0 D0F8 0024          000000F8  20292          STG   15,248(0,13)
0000D6B8 4110 D0F8               000000F8  20293          LA    1,248(0,13)
0000D6BC E3F0 C180 0004          0000D408  20294          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000D6C2                                   20295 @@gen_label1341 DS    0H
0000D6C2 05EF                              20296          BALR  14,15
0000D6C4                                   20297 @@gen_label1342 DS    0H
0000D6C4 181F                              20298          LR    1,15
0000D6C6 E3F0 C160 0016          0000D3E8  20299          LLGF  15,@lit_1989_993 ; __stderrp
0000D6CC E3FF 2000 0004          00000000  20300          LG    15,0(15,2)  ; __stderrp
0000D6D2 E3F0 D0F8 0024          000000F8  20301          STG   15,248(0,13)
0000D6D8 E3F0 C148 0004          0000D3D0  20302          LG    15,@lit_1989_1134
0000D6DE 41F0 FB04               00000B04  20303          LA    15,2820(0,15)
0000D6E2 E3F0 D100 0024          00000100  20304          STG   15,256(0,13)
0000D6E8 B914 00F5                         20305          LGFR  15,5
                                                                                                                           Page  403 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D6EC E3F0 D108 0024          00000108  20306          STG   15,264(0,13)
0000D6F2 B914 00F1                         20307          LGFR  15,1
0000D6F6 E3F0 D110 0024          00000110  20308          STG   15,272(0,13)
0000D6FC 4110 D0F8               000000F8  20309          LA    1,248(0,13)
0000D700 E3F0 C150 0004          0000D3D8  20310          LG    15,@lit_1989_1117 ; fprintf
0000D706                                   20311 @@gen_label1343 DS    0H
0000D706 05EF                              20312          BALR  14,15
0000D708                                   20313 @@gen_label1344 DS    0H
0000D708 E3F0 C160 0016          0000D3E8  20314          LLGF  15,@lit_1989_993 ; __stderrp
0000D70E E3FF 2000 0004          00000000  20315          LG    15,0(15,2)  ; __stderrp
0000D714 E3F0 D0F8 0024          000000F8  20316          STG   15,248(0,13)
0000D71A E3F0 C148 0004          0000D3D0  20317          LG    15,@lit_1989_1134
0000D720 41F0 F736               00000736  20318          LA    15,1846(0,15)
0000D724 E3F0 D100 0024          00000100  20319          STG   15,256(0,13)
0000D72A 4110 D0F8               000000F8  20320          LA    1,248(0,13)
0000D72E E3F0 C150 0004          0000D3D8  20321          LG    15,@lit_1989_1117 ; fprintf
0000D734                                   20322 @@gen_label1345 DS    0H
0000D734 05EF                              20323          BALR  14,15
0000D736                                   20324 @@gen_label1346 DS    0H
                                           20325 * ***
                                           20326 * ***
                                           20327 * ***
                                           20328 * ***                   ts = rd_clock();
0000D736 E3F0 C188 0004          0000D410  20329          LG    15,@lit_1989_1137 ; rd_clock
0000D73C                                   20330 @@gen_label1347 DS    0H
0000D73C 05EF                              20331          BALR  14,15
0000D73E                                   20332 @@gen_label1348 DS    0H
0000D73E B904 005F                         20333          LGR   5,15
                                           20334 * ***                   rd_kafka_msgq_insert_msgq(&destq, &srcq,
                                           20335 * ***                                             rd_kafka_msg_cmp_msg\
                                           20336 * id);
0000D742 41F0 D0B8               000000B8  20337          LA    15,184(0,13)
0000D746 E3F0 D0F8 0024          000000F8  20338          STG   15,248(0,13)
0000D74C 41F0 D0D8               000000D8  20339          LA    15,216(0,13)
0000D750 E3F0 D100 0024          00000100  20340          STG   15,256(0,13)
0000D756 E3F0 C198 0004          0000D420  20341          LG    15,@lit_1989_1018 ; rd_kafka_msg_cmp_msgid
0000D75C E3F0 D108 0024          00000108  20342          STG   15,264(0,13)
0000D762 4110 D0F8               000000F8  20343          LA    1,248(0,13)
0000D766 E3F0 C190 0004          0000D418  20344          LG    15,@lit_1989_1019 ; rd_kafka_msgq_insert_msgq
0000D76C                                   20345 @@gen_label1349 DS    0H
0000D76C 05EF                              20346          BALR  14,15
0000D76E                                   20347 @@gen_label1350 DS    0H
                                           20348 * ***                   ts = rd_clock() - ts;
0000D76E E3F0 C188 0004          0000D410  20349          LG    15,@lit_1989_1137 ; rd_clock
0000D774                                   20350 @@gen_label1351 DS    0H
0000D774 05EF                              20351          BALR  14,15
0000D776                                   20352 @@gen_label1352 DS    0H
0000D776 B909 00F5                         20353          SGR   15,5
0000D77A B904 005F                         20354          LGR   5,15
                                           20355 * ***                   accum_ts += ts;
0000D77E E310 D130 0004          00000130  20356          LG    1,304(0,13) ; spill
0000D784 B908 001F                         20357          AGR   1,15
                                                                                                                           Page  404 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D788 E310 D130 0024          00000130  20358          STG   1,304(0,13) ; spill
                                           20359 * ***
                                           20360 * ***                   do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s\
                                           20361 * : ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2251, __FUNCTIO\
                                           20362 * N__); fprintf(__stderrp, "Done: took %" "lld" "us, %.4fus/msg", ts, \
                                           20363 * (double)ts / (double)this_cnt); fprintf(__stderrp, "\n"); } while (0\
                                           20364 * );
0000D78E                                   20365 @L1363   DS    0H
0000D78E E3F0 C160 0016          0000D3E8  20366          LLGF  15,@lit_1989_993 ; __stderrp
0000D794 E3FF 2000 0004          00000000  20367          LG    15,0(15,2)  ; __stderrp
0000D79A E3F0 D0F8 0024          000000F8  20368          STG   15,248(0,13)
0000D7A0 E3F0 C148 0004          0000D3D0  20369          LG    15,@lit_1989_1134
0000D7A6 41F0 F6E4               000006E4  20370          LA    15,1764(0,15)
0000D7AA E3F0 D100 0024          00000100  20371          STG   15,256(0,13)
0000D7B0 E3F0 C148 0004          0000D3D0  20372          LG    15,@lit_1989_1134
0000D7B6 41F0 F2C2               000002C2  20373          LA    15,706(0,15)
0000D7BA E3F0 D108 0024          00000108  20374          STG   15,264(0,13)
0000D7C0 E548 D110 08CB          00000110  20375          MVGHI 272(13),2251
0000D7C6 E3F0 C158 0004          0000D3E0  20376          LG    15,@lit_1989_995
0000D7CC 41F0 F41C               0000041C  20377          LA    15,1052(0,15)
0000D7D0 E3F0 D118 0024          00000118  20378          STG   15,280(0,13)
0000D7D6 4110 D0F8               000000F8  20379          LA    1,248(0,13)
0000D7DA E3F0 C150 0004          0000D3D8  20380          LG    15,@lit_1989_1117 ; fprintf
0000D7E0                                   20381 @@gen_label1353 DS    0H
0000D7E0 05EF                              20382          BALR  14,15
0000D7E2                                   20383 @@gen_label1354 DS    0H
0000D7E2 E3F0 C160 0016          0000D3E8  20384          LLGF  15,@lit_1989_993 ; __stderrp
0000D7E8 E3FF 2000 0004          00000000  20385          LG    15,0(15,2)  ; __stderrp
0000D7EE E3F0 D0F8 0024          000000F8  20386          STG   15,248(0,13)
0000D7F4 E3F0 C148 0004          0000D3D0  20387          LG    15,@lit_1989_1134
0000D7FA 41F0 FB3C               00000B3C  20388          LA    15,2876(0,15)
0000D7FE E3F0 D100 0024          00000100  20389          STG   15,256(0,13)
0000D804 E350 D108 0024          00000108  20390          STG   5,264(0,13)
0000D80A B3C5 00B5                         20391          CDGR  11,5
0000D80E E3F0 D120 0004          00000120  20392          LG    15,288(0,13) ; spill
0000D814 B3C6 00DF                         20393          CXGR  13,15
0000D818 E3F0 D120 0002          00000120  20394          LTG   15,288(0,13) ; spill
0000D81E 47B0 C5A4               0000D82C  20395          BNL   @@gen_label1355
0000D822 68C0 C1A8               0000D430  20396          LD    12,@lit_1989_1026
0000D826 68E0 C1A0               0000D428  20397          LD    14,@lit_1989_1027
0000D82A 36DC                              20398          AXR   13,12
0000D82C                                   20399 @@gen_label1355 DS 0H
0000D82C 2DBD                              20400          DDR   11,13
0000D82E 60B0 D110               00000110  20401          STD   11,272(0,13)
0000D832 4110 D0F8               000000F8  20402          LA    1,248(0,13)
0000D836 E3F0 C150 0004          0000D3D8  20403          LG    15,@lit_1989_1117 ; fprintf
0000D83C                                   20404 @@gen_label1356 DS    0H
0000D83C 05EF                              20405          BALR  14,15
0000D83E                                   20406 @@gen_label1357 DS    0H
0000D83E E3F0 C160 0016          0000D3E8  20407          LLGF  15,@lit_1989_993 ; __stderrp
0000D844 E3FF 2000 0004          00000000  20408          LG    15,0(15,2)  ; __stderrp
0000D84A E3F0 D0F8 0024          000000F8  20409          STG   15,248(0,13)
                                                                                                                           Page  405 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D850 E3F0 C148 0004          0000D3D0  20410          LG    15,@lit_1989_1134
0000D856 41F0 F736               00000736  20411          LA    15,1846(0,15)
0000D85A E3F0 D100 0024          00000100  20412          STG   15,256(0,13)
0000D860 4110 D0F8               000000F8  20413          LA    1,248(0,13)
0000D864 E3F0 C150 0004          0000D3D8  20414          LG    15,@lit_1989_1117 ; fprintf
0000D86A                                   20415 @@gen_label1358 DS    0H
0000D86A 05EF                              20416          BALR  14,15
0000D86C                                   20417 @@gen_label1359 DS    0H
                                           20418 * ***
                                           20419 * ***
                                           20420 * ***                   do { if (!(rd_kafka_msgq_len(&srcq) == 0)) { f\
                                           20421 * printf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: \
                                           20422 * " "rd_kafka_msgq_len(&srcq) == 0" ": ", "C:\\asgkafka\\librdkafka\\s\
                                           20423 * rc\\rdkafka_msg.c", 2254, __FUNCTION__); fprintf(__stderrp, "srcq sh\
                                           20424 * ould be empty, but contains %d messages", rd_kafka_msgq_len(&srcq));\
                                           20425 *  fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure)\
                                           20426 *  ((rd_kafka_msgq_len(&srcq) == 0) ? (void)0 : __assert(__func__, "C:\
                                           20427 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2254, "rd_kafka_msgq_le\
                                           20428 * n(&srcq) == 0")); return 1; } } while (0);
0000D86C                                   20429 @L1366   DS    0H
0000D86C 41F0 D0D8               000000D8  20430          LA    15,216(0,13)
0000D870 E3F0 D0F8 0024          000000F8  20431          STG   15,248(0,13)
0000D876 4110 D0F8               000000F8  20432          LA    1,248(0,13)
0000D87A E3F0 C180 0004          0000D408  20433          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000D880                                   20434 @@gen_label1360 DS    0H
0000D880 05EF                              20435          BALR  14,15
0000D882                                   20436 @@gen_label1361 DS    0H
0000D882 12FF                              20437          LTR   15,15
0000D884 4780 C71E               0000D9A6  20438          BE    @L1369
0000D888 E330 C160 0016          0000D3E8  20439          LLGF  3,@lit_1989_993 ; __stderrp
0000D88E E3F3 2000 0004          00000000  20440          LG    15,0(3,2)   ; __stderrp
0000D894 E3F0 D0F8 0024          000000F8  20441          STG   15,248(0,13)
0000D89A E340 C148 0004          0000D3D0  20442          LG    4,@lit_1989_1134
0000D8A0 41F0 4B5A               00000B5A  20443          LA    15,2906(0,4)
0000D8A4 E3F0 D100 0024          00000100  20444          STG   15,256(0,13)
0000D8AA 41F0 42C2               000002C2  20445          LA    15,706(0,4)
0000D8AE E3F0 D108 0024          00000108  20446          STG   15,264(0,13)
0000D8B4 E548 D110 08CE          00000110  20447          MVGHI 272(13),2254
0000D8BA E350 C158 0004          0000D3E0  20448          LG    5,@lit_1989_995
0000D8C0 41F0 541C               0000041C  20449          LA    15,1052(0,5)
0000D8C4 E3F0 D118 0024          00000118  20450          STG   15,280(0,13)
0000D8CA 4110 D0F8               000000F8  20451          LA    1,248(0,13)
0000D8CE E360 C150 0004          0000D3D8  20452          LG    6,@lit_1989_1117 ; fprintf
0000D8D4 B904 00F6                         20453          LGR   15,6
0000D8D8                                   20454 @@gen_label1363 DS    0H
0000D8D8 05EF                              20455          BALR  14,15
0000D8DA                                   20456 @@gen_label1364 DS    0H
0000D8DA 41F0 D0D8               000000D8  20457          LA    15,216(0,13)
0000D8DE E3F0 D0F8 0024          000000F8  20458          STG   15,248(0,13)
0000D8E4 4110 D0F8               000000F8  20459          LA    1,248(0,13)
0000D8E8 E3F0 C180 0004          0000D408  20460          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000D8EE                                   20461 @@gen_label1365 DS    0H
                                                                                                                           Page  406 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D8EE 05EF                              20462          BALR  14,15
0000D8F0                                   20463 @@gen_label1366 DS    0H
0000D8F0 E313 2000 0004          00000000  20464          LG    1,0(3,2)    ; __stderrp
0000D8F6 E310 D0F8 0024          000000F8  20465          STG   1,248(0,13)
0000D8FC 4110 4BA6               00000BA6  20466          LA    1,2982(0,4)
0000D900 E310 D100 0024          00000100  20467          STG   1,256(0,13)
0000D906 B914 00FF                         20468          LGFR  15,15
0000D90A E3F0 D108 0024          00000108  20469          STG   15,264(0,13)
0000D910 4110 D0F8               000000F8  20470          LA    1,248(0,13)
0000D914 B904 00F6                         20471          LGR   15,6
0000D918                                   20472 @@gen_label1367 DS    0H
0000D918 05EF                              20473          BALR  14,15
0000D91A                                   20474 @@gen_label1368 DS    0H
0000D91A E3F3 2000 0004          00000000  20475          LG    15,0(3,2)   ; __stderrp
0000D920 E3F0 D0F8 0024          000000F8  20476          STG   15,248(0,13)
0000D926 41F0 479C               0000079C  20477          LA    15,1948(0,4)
0000D92A E3F0 D100 0024          00000100  20478          STG   15,256(0,13)
0000D930 4110 D0F8               000000F8  20479          LA    1,248(0,13)
0000D934 B904 00F6                         20480          LGR   15,6
0000D938                                   20481 @@gen_label1369 DS    0H
0000D938 05EF                              20482          BALR  14,15
0000D93A                                   20483 @@gen_label1370 DS    0H
0000D93A E3F0 C1B0 0016          0000D438  20484          LLGF  15,@lit_1989_1042 ; rd_unittest_assert_on_failure
0000D940 41FF 2000               00000000  20485          LA    15,0(15,2)
0000D944 9500 F000      00000000 00000000  20486          CLI   0(15),0
0000D948 4780 C710               0000D998  20487          BE    @L1370
0000D94C 41F0 D0D8               000000D8  20488          LA    15,216(0,13)
0000D950 E3F0 D0F8 0024          000000F8  20489          STG   15,248(0,13)
0000D956 4110 D0F8               000000F8  20490          LA    1,248(0,13)
0000D95A E3F0 C180 0004          0000D408  20491          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000D960                                   20492 @@gen_label1372 DS    0H
0000D960 05EF                              20493          BALR  14,15
0000D962                                   20494 @@gen_label1373 DS    0H
0000D962 12FF                              20495          LTR   15,15
0000D964 4780 C710               0000D998  20496          BE    @L1370
0000D968                                   20497 @L1371   DS    0H
0000D968 41F0 541C               0000041C  20498          LA    15,1052(0,5)
0000D96C E3F0 D0F8 0024          000000F8  20499          STG   15,248(0,13)
0000D972 41F0 42C2               000002C2  20500          LA    15,706(0,4)
0000D976 E3F0 D100 0024          00000100  20501          STG   15,256(0,13)
0000D97C E548 D108 08CE          00000108  20502          MVGHI 264(13),2254
0000D982 41F0 4BD6               00000BD6  20503          LA    15,3030(0,4)
0000D986 E3F0 D110 0024          00000110  20504          STG   15,272(0,13)
0000D98C 4110 D0F8               000000F8  20505          LA    1,248(0,13)
0000D990 E3F0 C1B8 0004          0000D440  20506          LG    15,@lit_1989_1044 ; __assert
0000D996                                   20507 @@gen_label1375 DS    0H
0000D996 05EF                              20508          BALR  14,15
0000D998                                   20509 @@gen_label1376 DS    0H
0000D998                                   20510 @L1372   DS    0H
0000D998                                   20511 @L1370   DS    0H
0000D998 A7F9 0001               00000001  20512          LGHI  15,1        ; 1
0000D99C E3C0 C178 001A          0000D400  20513          ALGF  12,@lit_region_diff_1989_1_2
                                                                                                                           Page  407 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           20514          DROP  12
                        0000DB5E           20515          USING @REGION_1989_2,12
0000D9A2 47F0 C4EC               0000E04A  20516          B     @ret_lab_1989
                                           20517          DROP  12
                        0000D288           20518          USING @REGION_1989_1,12
0000D9A6                                   20519 @L1369   DS    0H
                                           20520 * ***
                                           20521 * ***
                                           20522 * ***                   do { if (!(rd_kafka_msgq_len(&destq) == (int)c\
                                           20523 * nt)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert \
                                           20524 * failed: " "rd_kafka_msgq_len(&destq) == (int)cnt" ": ", "C:\\asgkafk\
                                           20525 * a\\librdkafka\\src\\rdkafka_msg.c", 2257, __FUNCTION__); fprintf(__s\
                                           20526 * tderrp, "destq should contain %d messages, not %d", (int)cnt, rd_kaf\
                                           20527 * ka_msgq_len(&destq)); fprintf(__stderrp, "\033[0m\n"); if (rd_unitte\
                                           20528 * st_assert_on_failure) ((rd_kafka_msgq_len(&destq) == (int)cnt) ? (vo\
                                           20529 * id)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_ms\
                                           20530 * g.c", 2257, "rd_kafka_msgq_len(&destq) == (int)cnt")); return 1; } }\
                                           20531 *  while (0);
0000D9A6                                   20532 @L1373   DS    0H
0000D9A6 41F0 D0B8               000000B8  20533          LA    15,184(0,13)
0000D9AA E3F0 D0F8 0024          000000F8  20534          STG   15,248(0,13)
0000D9B0 4110 D0F8               000000F8  20535          LA    1,248(0,13)
0000D9B4 E3F0 C180 0004          0000D408  20536          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000D9BA                                   20537 @@gen_label1377 DS    0H
0000D9BA 05EF                              20538          BALR  14,15
0000D9BC                                   20539 @@gen_label1378 DS    0H
0000D9BC 19F6                              20540          CR    15,6
0000D9BE 4780 C862               0000DAEA  20541          BE    @L1376
0000D9C2 E330 C160 0016          0000D3E8  20542          LLGF  3,@lit_1989_993 ; __stderrp
0000D9C8 E3F3 2000 0004          00000000  20543          LG    15,0(3,2)   ; __stderrp
0000D9CE E3F0 D0F8 0024          000000F8  20544          STG   15,248(0,13)
0000D9D4 E340 C148 0004          0000D3D0  20545          LG    4,@lit_1989_1134
0000D9DA 41F0 4BF4               00000BF4  20546          LA    15,3060(0,4)
0000D9DE E3F0 D100 0024          00000100  20547          STG   15,256(0,13)
0000D9E4 41F0 42C2               000002C2  20548          LA    15,706(0,4)
0000D9E8 E3F0 D108 0024          00000108  20549          STG   15,264(0,13)
0000D9EE E548 D110 08D1          00000110  20550          MVGHI 272(13),2257
0000D9F4 E350 C158 0004          0000D3E0  20551          LG    5,@lit_1989_995
0000D9FA 41F0 541C               0000041C  20552          LA    15,1052(0,5)
0000D9FE E3F0 D118 0024          00000118  20553          STG   15,280(0,13)
0000DA04 4110 D0F8               000000F8  20554          LA    1,248(0,13)
0000DA08 E370 C150 0004          0000D3D8  20555          LG    7,@lit_1989_1117 ; fprintf
0000DA0E B904 00F7                         20556          LGR   15,7
0000DA12                                   20557 @@gen_label1380 DS    0H
0000DA12 05EF                              20558          BALR  14,15
0000DA14                                   20559 @@gen_label1381 DS    0H
0000DA14 41F0 D0B8               000000B8  20560          LA    15,184(0,13)
0000DA18 E3F0 D0F8 0024          000000F8  20561          STG   15,248(0,13)
0000DA1E 4110 D0F8               000000F8  20562          LA    1,248(0,13)
0000DA22 E3F0 C180 0004          0000D408  20563          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000DA28                                   20564 @@gen_label1382 DS    0H
0000DA28 05EF                              20565          BALR  14,15
                                                                                                                           Page  408 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DA2A                                   20566 @@gen_label1383 DS    0H
0000DA2A E313 2000 0004          00000000  20567          LG    1,0(3,2)    ; __stderrp
0000DA30 E310 D0F8 0024          000000F8  20568          STG   1,248(0,13)
0000DA36 4110 4C48               00000C48  20569          LA    1,3144(0,4)
0000DA3A E310 D100 0024          00000100  20570          STG   1,256(0,13)
0000DA40 B914 0016                         20571          LGFR  1,6
0000DA44 E310 D108 0024          00000108  20572          STG   1,264(0,13)
0000DA4A B914 00FF                         20573          LGFR  15,15
0000DA4E E3F0 D110 0024          00000110  20574          STG   15,272(0,13)
0000DA54 4110 D0F8               000000F8  20575          LA    1,248(0,13)
0000DA58 B904 00F7                         20576          LGR   15,7
0000DA5C                                   20577 @@gen_label1384 DS    0H
0000DA5C 05EF                              20578          BALR  14,15
0000DA5E                                   20579 @@gen_label1385 DS    0H
0000DA5E E3F3 2000 0004          00000000  20580          LG    15,0(3,2)   ; __stderrp
0000DA64 E3F0 D0F8 0024          000000F8  20581          STG   15,248(0,13)
0000DA6A 41F0 479C               0000079C  20582          LA    15,1948(0,4)
0000DA6E E3F0 D100 0024          00000100  20583          STG   15,256(0,13)
0000DA74 4110 D0F8               000000F8  20584          LA    1,248(0,13)
0000DA78 B904 00F7                         20585          LGR   15,7
0000DA7C                                   20586 @@gen_label1386 DS    0H
0000DA7C 05EF                              20587          BALR  14,15
0000DA7E                                   20588 @@gen_label1387 DS    0H
0000DA7E E3F0 C1B0 0016          0000D438  20589          LLGF  15,@lit_1989_1042 ; rd_unittest_assert_on_failure
0000DA84 41FF 2000               00000000  20590          LA    15,0(15,2)
0000DA88 9500 F000      00000000 00000000  20591          CLI   0(15),0
0000DA8C 4780 C854               0000DADC  20592          BE    @L1377
0000DA90 41F0 D0B8               000000B8  20593          LA    15,184(0,13)
0000DA94 E3F0 D0F8 0024          000000F8  20594          STG   15,248(0,13)
0000DA9A 4110 D0F8               000000F8  20595          LA    1,248(0,13)
0000DA9E E3F0 C180 0004          0000D408  20596          LG    15,@lit_1989_1141 ; rd_kafka_msgq_len
0000DAA4                                   20597 @@gen_label1389 DS    0H
0000DAA4 05EF                              20598          BALR  14,15
0000DAA6                                   20599 @@gen_label1390 DS    0H
0000DAA6 19F6                              20600          CR    15,6
0000DAA8 4780 C854               0000DADC  20601          BE    @L1377
0000DAAC                                   20602 @L1378   DS    0H
0000DAAC 41F0 541C               0000041C  20603          LA    15,1052(0,5)
0000DAB0 E3F0 D0F8 0024          000000F8  20604          STG   15,248(0,13)
0000DAB6 41F0 42C2               000002C2  20605          LA    15,706(0,4)
0000DABA E3F0 D100 0024          00000100  20606          STG   15,256(0,13)
0000DAC0 E548 D108 08D1          00000108  20607          MVGHI 264(13),2257
0000DAC6 41F0 4C72               00000C72  20608          LA    15,3186(0,4)
0000DACA E3F0 D110 0024          00000110  20609          STG   15,272(0,13)
0000DAD0 4110 D0F8               000000F8  20610          LA    1,248(0,13)
0000DAD4 E3F0 C1B8 0004          0000D440  20611          LG    15,@lit_1989_1044 ; __assert
0000DADA                                   20612 @@gen_label1392 DS    0H
0000DADA 05EF                              20613          BALR  14,15
0000DADC                                   20614 @@gen_label1393 DS    0H
0000DADC                                   20615 @L1379   DS    0H
0000DADC                                   20616 @L1377   DS    0H
0000DADC A7F9 0001               00000001  20617          LGHI  15,1        ; 1
                                                                                                                           Page  409 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DAE0 E3C0 C178 001A          0000D400  20618          ALGF  12,@lit_region_diff_1989_1_2
                                           20619          DROP  12
                        0000DB5E           20620          USING @REGION_1989_2,12
0000DAE6 47F0 C4EC               0000E04A  20621          B     @ret_lab_1989
                                           20622          DROP  12
                        0000D288           20623          USING @REGION_1989_1,12
0000DAEA                                   20624 @L1376   DS    0H
                                           20625 * ***
                                           20626 * ***
                                           20627 * ***
                                           20628 * ***                   if (ut_verify_msgq_order("after", &destq, lo, \
                                           20629 * hi, 0))
0000DAEA E3F0 C148 0004          0000D3D0  20630          LG    15,@lit_1989_1134
0000DAF0 41F0 FC98               00000C98  20631          LA    15,3224(0,15)
0000DAF4 E3F0 D0F8 0024          000000F8  20632          STG   15,248(0,13)
0000DAFA 41F0 D0B8               000000B8  20633          LA    15,184(0,13)
0000DAFE E3F0 D100 0024          00000100  20634          STG   15,256(0,13)
0000DB04 EB89 D108 0024          00000108  20635          STMG  8,9,264(13)
0000DB0A D707 D118 D118 00000118 00000118  20636          XC    280(8,13),280(13)
0000DB10 4110 D0F8               000000F8  20637          LA    1,248(0,13)
0000DB14 E3F0 C1C0 0004          0000D448  20638          LG    15,@lit_1989_1061 ; ut_verify_msgq_order
0000DB1A                                   20639 @@gen_label1394 DS    0H
0000DB1A 05EF                              20640          BALR  14,15
0000DB1C                                   20641 @@gen_label1395 DS    0H
0000DB1C 12FF                              20642          LTR   15,15
0000DB1E 4780 C8A8               0000DB30  20643          BZ    @L1381
                                           20644 * ***                           return 1;
0000DB22 A7F9 0001               00000001  20645          LGHI  15,1        ; 1
0000DB26 E3C0 C178 001A          0000D400  20646          ALGF  12,@lit_region_diff_1989_1_2
                                           20647          DROP  12
                        0000DB5E           20648          USING @REGION_1989_2,12
0000DB2C 47F0 C4EC               0000E04A  20649          B     @ret_lab_1989
                                           20650          DROP  12
                        0000D288           20651          USING @REGION_1989_1,12
                                           20652 * ***
                                           20653 * ***                   do { if (!(rd_kafka_msgq_size(&destq) == totsi\
                                           20654 * ze)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert \
                                           20655 * failed: " "rd_kafka_msgq_size(&destq) == totsize" ": ", "C:\\asgkafk\
                                           20656 * a\\librdkafka\\src\\rdkafka_msg.c", 2264, __FUNCTION__); fprintf(__s\
                                           20657 * tderrp, "expected destq size to be %" "zu" " bytes, not %" "zu", tot\
                                           20658 * size, rd_kafka_msgq_size(&destq)); fprintf(__stderrp, "\033[0m\n"); \
                                           20659 * if (rd_unittest_assert_on_failure) ((rd_kafka_msgq_size(&destq) == t\
                                           20660 * otsize) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\sr\
                                           20661 * c\\rdkafka_msg.c", 2264, "rd_kafka_msgq_size(&destq) == totsize")); \
                                           20662 * return 1; } } while (0);
0000DB30                                   20663 @L1381   DS    0H
0000DB30 41F0 D0B8               000000B8  20664          LA    15,184(0,13)
0000DB34 E3F0 D0F8 0024          000000F8  20665          STG   15,248(0,13)
0000DB3A 4110 D0F8               000000F8  20666          LA    1,248(0,13)
0000DB3E E3F0 C1C8 0004          0000D450  20667          LG    15,@lit_1989_1151 ; rd_kafka_msgq_size
0000DB44                                   20668 @@gen_label1397 DS    0H
0000DB44 05EF                              20669          BALR  14,15
                                                                                                                           Page  410 
  Active Usings: @REGION_1989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DB46                                   20670 @@gen_label1398 DS    0H
0000DB46 B921 00F7                         20671          CLGR  15,7
0000DB4A 4770 C8D0               0000DB58  20672          BNE   *+14  Around region break
0000DB4E E3C0 C178 001A          0000D400  20673          ALGF  12,@lit_region_diff_1989_1_2
                                           20674          DROP  12
                        0000DB5E           20675          USING @REGION_1989_2,12
0000DB54 47F0 C18A               0000DCE8  20676          B     @L1384
                                           20677          DROP  12
                        0000D288           20678          USING @REGION_1989_1,12
0000DB58 E3C0 C178 001A          0000D400  20679          ALGF  12,@lit_region_diff_1989_1_2
0000DB5E                                   20680 @REGION_1989_2 DS 0H
                                           20681          DROP  12
                        0000DB5E           20682          USING @REGION_1989_2,12
0000DB5E E330 C13A 0016          0000DC98  20683          LLGF  3,@lit_1989_1064 ; __stderrp
0000DB64 E3F3 2000 0004          00000000  20684          LG    15,0(3,2)   ; __stderrp
0000DB6A E3F0 D0F8 0024          000000F8  20685          STG   15,248(0,13)
0000DB70 E340 C132 0004          0000DC90  20686          LG    4,@lit_1989_1065
0000DB76 41F0 4C9E               00000C9E  20687          LA    15,3230(0,4)
0000DB7A E3F0 D100 0024          00000100  20688          STG   15,256(0,13)
0000DB80 41F0 42C2               000002C2  20689          LA    15,706(0,4)
0000DB84 E3F0 D108 0024          00000108  20690          STG   15,264(0,13)
0000DB8A E548 D110 08D8          00000110  20691          MVGHI 272(13),2264
0000DB90 E350 C12A 0004          0000DC88  20692          LG    5,@lit_1989_1066
0000DB96 41F0 541C               0000041C  20693          LA    15,1052(0,5)
0000DB9A E3F0 D118 0024          00000118  20694          STG   15,280(0,13)
0000DBA0 4110 D0F8               000000F8  20695          LA    1,248(0,13)
0000DBA4 E360 C122 0004          0000DC80  20696          LG    6,@lit_1989_1067 ; fprintf
0000DBAA B904 00F6                         20697          LGR   15,6
0000DBAE                                   20698 @@gen_label1400 DS    0H
0000DBAE 05EF                              20699          BALR  14,15
0000DBB0                                   20700 @@gen_label1401 DS    0H
0000DBB0 41F0 D0B8               000000B8  20701          LA    15,184(0,13)
0000DBB4 E3F0 D0F8 0024          000000F8  20702          STG   15,248(0,13)
0000DBBA 4110 D0F8               000000F8  20703          LA    1,248(0,13)
0000DBBE E3F0 C142 0004          0000DCA0  20704          LG    15,@lit_1989_1152 ; rd_kafka_msgq_size
0000DBC4                                   20705 @@gen_label1402 DS    0H
0000DBC4 05EF                              20706          BALR  14,15
0000DBC6                                   20707 @@gen_label1403 DS    0H
0000DBC6 E313 2000 0004          00000000  20708          LG    1,0(3,2)    ; __stderrp
0000DBCC E310 D0F8 0024          000000F8  20709          STG   1,248(0,13)
0000DBD2 4110 4CF2               00000CF2  20710          LA    1,3314(0,4)
0000DBD6 E310 D100 0024          00000100  20711          STG   1,256(0,13)
0000DBDC E370 D108 0024          00000108  20712          STG   7,264(0,13)
0000DBE2 E3F0 D110 0024          00000110  20713          STG   15,272(0,13)
0000DBE8 4110 D0F8               000000F8  20714          LA    1,248(0,13)
0000DBEC B904 00F6                         20715          LGR   15,6
0000DBF0                                   20716 @@gen_label1404 DS    0H
0000DBF0 05EF                              20717          BALR  14,15
0000DBF2                                   20718 @@gen_label1405 DS    0H
0000DBF2 E3F3 2000 0004          00000000  20719          LG    15,0(3,2)   ; __stderrp
0000DBF8 E3F0 D0F8 0024          000000F8  20720          STG   15,248(0,13)
0000DBFE 41F0 479C               0000079C  20721          LA    15,1948(0,4)
                                                                                                                           Page  411 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DC02 E3F0 D100 0024          00000100  20722          STG   15,256(0,13)
0000DC08 4110 D0F8               000000F8  20723          LA    1,248(0,13)
0000DC0C B904 00F6                         20724          LGR   15,6
0000DC10                                   20725 @@gen_label1406 DS    0H
0000DC10 05EF                              20726          BALR  14,15
0000DC12                                   20727 @@gen_label1407 DS    0H
0000DC12 E3F0 C14A 0016          0000DCA8  20728          LLGF  15,@lit_1989_1073 ; rd_unittest_assert_on_failure
0000DC18 41FF 2000               00000000  20729          LA    15,0(15,2)
0000DC1C 9500 F000      00000000 00000000  20730          CLI   0(15),0
0000DC20 4780 C114               0000DC72  20731          BE    @L1385
0000DC24 41F0 D0B8               000000B8  20732          LA    15,184(0,13)
0000DC28 E3F0 D0F8 0024          000000F8  20733          STG   15,248(0,13)
0000DC2E 4110 D0F8               000000F8  20734          LA    1,248(0,13)
0000DC32 E3F0 C142 0004          0000DCA0  20735          LG    15,@lit_1989_1152 ; rd_kafka_msgq_size
0000DC38                                   20736 @@gen_label1409 DS    0H
0000DC38 05EF                              20737          BALR  14,15
0000DC3A                                   20738 @@gen_label1410 DS    0H
0000DC3A B921 00F7                         20739          CLGR  15,7
0000DC3E 4780 C114               0000DC72  20740          BE    @L1385
0000DC42                                   20741 @L1386   DS    0H
0000DC42 41F0 541C               0000041C  20742          LA    15,1052(0,5)
0000DC46 E3F0 D0F8 0024          000000F8  20743          STG   15,248(0,13)
0000DC4C 41F0 42C2               000002C2  20744          LA    15,706(0,4)
0000DC50 E3F0 D100 0024          00000100  20745          STG   15,256(0,13)
0000DC56 E548 D108 08D8          00000108  20746          MVGHI 264(13),2264
0000DC5C 41F0 4D20               00000D20  20747          LA    15,3360(0,4)
0000DC60 E3F0 D110 0024          00000110  20748          STG   15,272(0,13)
0000DC66 4110 D0F8               000000F8  20749          LA    1,248(0,13)
0000DC6A E3F0 C152 0004          0000DCB0  20750          LG    15,@lit_1989_1075 ; __assert
0000DC70                                   20751 @@gen_label1412 DS    0H
0000DC70 05EF                              20752          BALR  14,15
0000DC72                                   20753 @@gen_label1413 DS    0H
0000DC72                                   20754 @L1387   DS    0H
0000DC72                                   20755 @L1385   DS    0H
0000DC72 A7F9 0001               00000001  20756          LGHI  15,1        ; 1
0000DC76 47F0 C4EC               0000E04A  20757          B     @ret_lab_1989
0000DC80                                   20758          DS    0D
0000DC80 0000000000000000                  20759 @lit_1989_1067 DC AD(fprintf)
0000DC88 000000000000E868                  20760 @lit_1989_1066 DC AD(@DATA)
0000DC90 000000000000ECA4                  20761 @lit_1989_1065 DC AD(@strings@)
0000DC98 00000000                          20762 @lit_1989_1064 DC Q(__stderrp)
0000DC9C 00000000
0000DCA0 00000000000015A8                  20763 @lit_1989_1152 DC AD(rd_kafka_msgq_size)
0000DCA8 00000000                          20764 @lit_1989_1073 DC Q(rd_unittest_assert_on_failure)
0000DCAC 00000000
0000DCB0 0000000000000000                  20765 @lit_1989_1075 DC AD(__assert)
0000DCB8 000000000000AA90                  20766 @lit_1989_1077 DC AD(ut_rd_kafka_msgq_purge)
0000DCC0 000008D6                          20767 @lit_region_diff_1989_2_1  DC A(@REGION_1989_2-@REGION_1989_1)
0000DCC8                                   20768          DS 0D
0000DCC8 0000000000000000                  20769 @lit_1989_1080 DC XL8'0000000000000000'
0000DCD0                                   20770          DS 0D
0000DCD0 5110000000000000                  20771 @lit_1989_1079 DC XL8'5110000000000000'
                                                                                                                           Page  412 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DCD8 00000000                          20772 @lit_1989_1089 DC Q(rd_unittest_slow)
0000DCE0                                   20773          DS 0D
0000DCE0 3D68DB8BAC710CB3                  20774 @lit_1989_1090 DC XL8'3D68DB8BAC710CB3'
0000DCE8                                   20775 @L1384   DS    0H
                                           20776 * ***
                                           20777 * ***
                                           20778 * ***
                                           20779 * ***
                                           20780 * ***                   ut_rd_kafka_msgq_purge(&srcq);
0000DCE8 41F0 D0D8               000000D8  20781          LA    15,216(0,13)
0000DCEC E3F0 D0F8 0024          000000F8  20782          STG   15,248(0,13)
0000DCF2 4110 D0F8               000000F8  20783          LA    1,248(0,13)
0000DCF6 E3F0 C15A 0004          0000DCB8  20784          LG    15,@lit_1989_1077 ; ut_rd_kafka_msgq_purge
0000DCFC                                   20785 @@gen_label1414 DS    0H
0000DCFC 05EF                              20786          BALR  14,15
0000DCFE                                   20787 @@gen_label1415 DS    0H
                                           20788 * ***           }
0000DCFE A73A 0001               00000001  20789          AHI   3,1
0000DD02                                   20790 @L1355   DS    0H
0000DD02 B914 00F3                         20791          LGFR  15,3
0000DD06 EBFF 0004 000D          00000004  20792          SLLG  15,15,4(0)  ; *0x10
0000DD0C 41FF 4008               00000008  20793          LA    15,8(15,4)
0000DD10 E559 F000 0000          00000000  20794          CLGHSI 0(15),0
0000DD16 47D0 C1C6               0000DD24  20795          BNH   *+14  Around region break
0000DD1A E3C0 C162 001B          0000DCC0  20796          SLGF  12,@lit_region_diff_1989_2_1
                                           20797          DROP  12
                        0000D288           20798          USING @REGION_1989_1,12
0000DD20 47F0 C2CA               0000D552  20799          B     @L1354
                                           20800          DROP  12
                        0000DB5E           20801          USING @REGION_1989_2,12
                                           20802 * ***
                                           20803 * ***           ut_rd_kafka_msgq_purge(&destq);
0000DD24 41F0 D0B8               000000B8  20804          LA    15,184(0,13)
0000DD28 E3F0 D0F8 0024          000000F8  20805          STG   15,248(0,13)
0000DD2E 4110 D0F8               000000F8  20806          LA    1,248(0,13)
0000DD32 E3F0 C15A 0004          0000DCB8  20807          LG    15,@lit_1989_1077 ; ut_rd_kafka_msgq_purge
0000DD38                                   20808 @@gen_label1417 DS    0H
0000DD38 05EF                              20809          BALR  14,15
0000DD3A                                   20810 @@gen_label1418 DS    0H
                                           20811 * ***
                                           20812 * ***           us_per_msg = (double)accum_ts / (double)scnt;
0000DD3A E390 D130 0004          00000130  20813          LG    9,304(0,13) ; spill
0000DD40 B3C5 00F9                         20814          CDGR  15,9
0000DD44 B3C6 009A                         20815          CXGR  9,10
0000DD48 B902 00FA                         20816          LTGR  15,10
0000DD4C 47B0 C1FC               0000DD5A  20817          BNL   @@gen_label1419
0000DD50 68C0 C172               0000DCD0  20818          LD    12,@lit_1989_1079
0000DD54 68E0 C16A               0000DCC8  20819          LD    14,@lit_1989_1080
0000DD58 369C                              20820          AXR   9,12
0000DD5A                                   20821 @@gen_label1419 DS 0H
0000DD5A 2DF9                              20822          DDR   15,9
0000DD5C 60F0 D120               00000120  20823          STD   15,288(0,13) ; spill
                                                                                                                           Page  413 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           20824 * ***
                                           20825 * ***           do { fprintf(__stderrp, "RDUT: INFO: %s:%d: %s: ", "C:\
                                           20826 * \\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2276, __FUNCTION__); fp\
                                           20827 * rintf(__stderrp, "Total: %.4fus/msg over %" "lld" " messages in %" "\
                                           20828 * lld" "us", us_per_msg, scnt, accum_ts); fprintf(__stderrp, "\n"); } \
                                           20829 * while (0);
0000DD60                                   20830 @L1388   DS    0H
0000DD60 E330 C13A 0016          0000DC98  20831          LLGF  3,@lit_1989_1064 ; __stderrp
0000DD66 E3F3 2000 0004          00000000  20832          LG    15,0(3,2)   ; __stderrp
0000DD6C E3F0 D0F8 0024          000000F8  20833          STG   15,248(0,13)
0000DD72 E340 C132 0004          0000DC90  20834          LG    4,@lit_1989_1065
0000DD78 41F0 46E4               000006E4  20835          LA    15,1764(0,4)
0000DD7C E3F0 D100 0024          00000100  20836          STG   15,256(0,13)
0000DD82 41F0 42C2               000002C2  20837          LA    15,706(0,4)
0000DD86 E3F0 D108 0024          00000108  20838          STG   15,264(0,13)
0000DD8C E548 D110 08E4          00000110  20839          MVGHI 272(13),2276
0000DD92 E3F0 C12A 0004          0000DC88  20840          LG    15,@lit_1989_1066
0000DD98 41F0 F41C               0000041C  20841          LA    15,1052(0,15)
0000DD9C E3F0 D118 0024          00000118  20842          STG   15,280(0,13)
0000DDA2 4110 D0F8               000000F8  20843          LA    1,248(0,13)
0000DDA6 E350 C122 0004          0000DC80  20844          LG    5,@lit_1989_1067 ; fprintf
0000DDAC B904 00F5                         20845          LGR   15,5
0000DDB0                                   20846 @@gen_label1420 DS    0H
0000DDB0 05EF                              20847          BALR  14,15
0000DDB2                                   20848 @@gen_label1421 DS    0H
0000DDB2 E3F3 2000 0004          00000000  20849          LG    15,0(3,2)   ; __stderrp
0000DDB8 E3F0 D0F8 0024          000000F8  20850          STG   15,248(0,13)
0000DDBE 41F0 4E38               00000E38  20851          LA    15,3640(0,4)
0000DDC2 E3F0 D100 0024          00000100  20852          STG   15,256(0,13)
0000DDC8 68F0 D120               00000120  20853          LD    15,288(0,13) ; spill
0000DDCC 60F0 D108               00000108  20854          STD   15,264(0,13)
0000DDD0 E3A0 D110 0024          00000110  20855          STG   10,272(0,13)
0000DDD6 E390 D130 0004          00000130  20856          LG    9,304(0,13) ; spill
0000DDDC E390 D118 0024          00000118  20857          STG   9,280(0,13)
0000DDE2 4110 D0F8               000000F8  20858          LA    1,248(0,13)
0000DDE6 B904 00F5                         20859          LGR   15,5
0000DDEA                                   20860 @@gen_label1422 DS    0H
0000DDEA 05EF                              20861          BALR  14,15
0000DDEC                                   20862 @@gen_label1423 DS    0H
0000DDEC E3F3 2000 0004          00000000  20863          LG    15,0(3,2)   ; __stderrp
0000DDF2 E3F0 D0F8 0024          000000F8  20864          STG   15,248(0,13)
0000DDF8 41F0 4736               00000736  20865          LA    15,1846(0,4)
0000DDFC E3F0 D100 0024          00000100  20866          STG   15,256(0,13)
0000DE02 4110 D0F8               000000F8  20867          LA    1,248(0,13)
0000DE06 B904 00F5                         20868          LGR   15,5
0000DE0A                                   20869 @@gen_label1424 DS    0H
0000DE0A 05EF                              20870          BALR  14,15
0000DE0C                                   20871 @@gen_label1425 DS    0H
                                           20872 * ***
                                           20873 * ***
                                           20874 * ***           if (!rd_unittest_slow)
0000DE0C E3F0 C17A 0016          0000DCD8  20875          LLGF  15,@lit_1989_1089 ; rd_unittest_slow
                                                                                                                           Page  414 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DE12 41FF 2000               00000000  20876          LA    15,0(15,2)
0000DE16 9500 F000      00000000 00000000  20877          CLI   0(15),0
0000DE1A 4770 C3D0               0000DF2E  20878          BNE   @L1391
                                           20879 * ***                   do { if (!(!(us_per_msg > max_us_per_msg + 0.0\
                                           20880 * 001))) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "asser\
                                           20881 * t failed: " "!(us_per_msg > max_us_per_msg + 0.0001)" ": ", "C:\\asg\
                                           20882 * kafka\\librdkafka\\src\\rdkafka_msg.c", 2280, __FUNCTION__); fprintf\
                                           20883 * (__stderrp, "maximum us/msg exceeded: %.4f > %.4f us/msg", us_per_ms\
                                           20884 * g, max_us_per_msg); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest\
                                           20885 * _assert_on_failure) ((!(us_per_msg > max_us_per_msg + 0.0001)) ? (vo\
                                           20886 * id)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_ms\
                                           20887 * g.c", 2280, "!(us_per_msg > max_us_per_msg + 0.0001)")); return 1; }\
                                           20888 *  } while (0);
0000DE1E                                   20889 @L1392   DS    0H
0000DE1E 68F0 D128               00000128  20890          LD    15,296(0,13) ; spill
0000DE22 6AF0 C182               0000DCE0  20891          AD    15,@lit_1989_1090
0000DE26 68D0 D120               00000120  20892          LD    13,288(0,13) ; spill
0000DE2A 29DF                              20893          CDR   13,15
0000DE2C 47D0 C484               0000DFE2  20894          BNH   @L1399
0000DE30 E330 C13A 0016          0000DC98  20895          LLGF  3,@lit_1989_1064 ; __stderrp
0000DE36 E3F3 2000 0004          00000000  20896          LG    15,0(3,2)   ; __stderrp
0000DE3C E3F0 D0F8 0024          000000F8  20897          STG   15,248(0,13)
0000DE42 E340 C132 0004          0000DC90  20898          LG    4,@lit_1989_1065
0000DE48 41F0 4D46               00000D46  20899          LA    15,3398(0,4)
0000DE4C E3F0 D100 0024          00000100  20900          STG   15,256(0,13)
0000DE52 41F0 42C2               000002C2  20901          LA    15,706(0,4)
0000DE56 E3F0 D108 0024          00000108  20902          STG   15,264(0,13)
0000DE5C E548 D110 08E8          00000110  20903          MVGHI 272(13),2280
0000DE62 E350 C12A 0004          0000DC88  20904          LG    5,@lit_1989_1066
0000DE68 41F0 541C               0000041C  20905          LA    15,1052(0,5)
0000DE6C E3F0 D118 0024          00000118  20906          STG   15,280(0,13)
0000DE72 4110 D0F8               000000F8  20907          LA    1,248(0,13)
0000DE76 E360 C122 0004          0000DC80  20908          LG    6,@lit_1989_1067 ; fprintf
0000DE7C B904 00F6                         20909          LGR   15,6
0000DE80                                   20910 @@gen_label1428 DS    0H
0000DE80 05EF                              20911          BALR  14,15
0000DE82                                   20912 @@gen_label1429 DS    0H
0000DE82 E3F3 2000 0004          00000000  20913          LG    15,0(3,2)   ; __stderrp
0000DE88 E3F0 D0F8 0024          000000F8  20914          STG   15,248(0,13)
0000DE8E 41F0 4D9C               00000D9C  20915          LA    15,3484(0,4)
0000DE92 E3F0 D100 0024          00000100  20916          STG   15,256(0,13)
0000DE98 68F0 D120               00000120  20917          LD    15,288(0,13) ; spill
0000DE9C 60F0 D108               00000108  20918          STD   15,264(0,13)
0000DEA0 68F0 D128               00000128  20919          LD    15,296(0,13) ; spill
0000DEA4 60F0 D110               00000110  20920          STD   15,272(0,13)
0000DEA8 4110 D0F8               000000F8  20921          LA    1,248(0,13)
0000DEAC B904 00F6                         20922          LGR   15,6
0000DEB0                                   20923 @@gen_label1430 DS    0H
0000DEB0 05EF                              20924          BALR  14,15
0000DEB2                                   20925 @@gen_label1431 DS    0H
0000DEB2 E3F3 2000 0004          00000000  20926          LG    15,0(3,2)   ; __stderrp
0000DEB8 E3F0 D0F8 0024          000000F8  20927          STG   15,248(0,13)
                                                                                                                           Page  415 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DEBE 41F0 479C               0000079C  20928          LA    15,1948(0,4)
0000DEC2 E3F0 D100 0024          00000100  20929          STG   15,256(0,13)
0000DEC8 4110 D0F8               000000F8  20930          LA    1,248(0,13)
0000DECC B904 00F6                         20931          LGR   15,6
0000DED0                                   20932 @@gen_label1432 DS    0H
0000DED0 05EF                              20933          BALR  14,15
0000DED2                                   20934 @@gen_label1433 DS    0H
0000DED2 E3F0 C14A 0016          0000DCA8  20935          LLGF  15,@lit_1989_1073 ; rd_unittest_assert_on_failure
0000DED8 41FF 2000               00000000  20936          LA    15,0(15,2)
0000DEDC 9500 F000      00000000 00000000  20937          CLI   0(15),0
0000DEE0 4780 C3C8               0000DF26  20938          BE    @L1396
0000DEE4 68F0 D128               00000128  20939          LD    15,296(0,13) ; spill
0000DEE8 6AF0 C182               0000DCE0  20940          AD    15,@lit_1989_1090
0000DEEC 68D0 D120               00000120  20941          LD    13,288(0,13) ; spill
0000DEF0 29DF                              20942          CDR   13,15
0000DEF2 47D0 C3C8               0000DF26  20943          BNH   @L1396
0000DEF6                                   20944 @L1397   DS    0H
0000DEF6 41F0 541C               0000041C  20945          LA    15,1052(0,5)
0000DEFA E3F0 D0F8 0024          000000F8  20946          STG   15,248(0,13)
0000DF00 41F0 42C2               000002C2  20947          LA    15,706(0,4)
0000DF04 E3F0 D100 0024          00000100  20948          STG   15,256(0,13)
0000DF0A E548 D108 08E8          00000108  20949          MVGHI 264(13),2280
0000DF10 41F0 4DC8               00000DC8  20950          LA    15,3528(0,4)
0000DF14 E3F0 D110 0024          00000110  20951          STG   15,272(0,13)
0000DF1A 4110 D0F8               000000F8  20952          LA    1,248(0,13)
0000DF1E E3F0 C152 0004          0000DCB0  20953          LG    15,@lit_1989_1075 ; __assert
0000DF24                                   20954 @@gen_label1436 DS    0H
0000DF24 05EF                              20955          BALR  14,15
0000DF26                                   20956 @@gen_label1437 DS    0H
0000DF26                                   20957 @L1398   DS    0H
0000DF26                                   20958 @L1396   DS    0H
0000DF26 A7F9 0001               00000001  20959          LGHI  15,1        ; 1
0000DF2A 47F0 C4EC               0000E04A  20960          B     @ret_lab_1989
0000DF2E                                   20961 @L1395   DS    0H
                                           20962 * ***
                                           20963 * ***
                                           20964 * ***           else if (us_per_msg > max_us_per_msg + 0.0001)
0000DF2E                                   20965 @L1391   DS    0H
0000DF2E 68F0 D128               00000128  20966          LD    15,296(0,13) ; spill
0000DF32 6AF0 C182               0000DCE0  20967          AD    15,@lit_1989_1090
0000DF36 68D0 D120               00000120  20968          LD    13,288(0,13) ; spill
0000DF3A 29DF                              20969          CDR   13,15
0000DF3C 47D0 C484               0000DFE2  20970          BNH   @L1399
                                           20971 * ***                   do { fprintf(__stderrp, "\033[33mRDUT: WARN: %\
                                           20972 * s:%d: %s: ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2284, _\
                                           20973 * _FUNCTION__); fprintf(__stderrp, "maximum us/msg exceeded: %.4f > %.\
                                           20974 * 4f us/msg", us_per_msg, max_us_per_msg); fprintf(__stderrp, "\033[0m\
                                           20975 * \n"); } while (0);
0000DF40                                   20976 @L1401   DS    0H
0000DF40 E330 C13A 0016          0000DC98  20977          LLGF  3,@lit_1989_1064 ; __stderrp
0000DF46 E3F3 2000 0004          00000000  20978          LG    15,0(3,2)   ; __stderrp
0000DF4C E3F0 D0F8 0024          000000F8  20979          STG   15,248(0,13)
                                                                                                                           Page  416 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DF52 E340 C132 0004          0000DC90  20980          LG    4,@lit_1989_1065
0000DF58 41F0 4DF0               00000DF0  20981          LA    15,3568(0,4)
0000DF5C E3F0 D100 0024          00000100  20982          STG   15,256(0,13)
0000DF62 41F0 42C2               000002C2  20983          LA    15,706(0,4)
0000DF66 E3F0 D108 0024          00000108  20984          STG   15,264(0,13)
0000DF6C E548 D110 08EC          00000110  20985          MVGHI 272(13),2284
0000DF72 E3F0 C12A 0004          0000DC88  20986          LG    15,@lit_1989_1066
0000DF78 41F0 F41C               0000041C  20987          LA    15,1052(0,15)
0000DF7C E3F0 D118 0024          00000118  20988          STG   15,280(0,13)
0000DF82 4110 D0F8               000000F8  20989          LA    1,248(0,13)
0000DF86 E350 C122 0004          0000DC80  20990          LG    5,@lit_1989_1067 ; fprintf
0000DF8C B904 00F5                         20991          LGR   15,5
0000DF90                                   20992 @@gen_label1439 DS    0H
0000DF90 05EF                              20993          BALR  14,15
0000DF92                                   20994 @@gen_label1440 DS    0H
0000DF92 E3F3 2000 0004          00000000  20995          LG    15,0(3,2)   ; __stderrp
0000DF98 E3F0 D0F8 0024          000000F8  20996          STG   15,248(0,13)
0000DF9E 41F0 4D9C               00000D9C  20997          LA    15,3484(0,4)
0000DFA2 E3F0 D100 0024          00000100  20998          STG   15,256(0,13)
0000DFA8 68F0 D120               00000120  20999          LD    15,288(0,13) ; spill
0000DFAC 60F0 D108               00000108  21000          STD   15,264(0,13)
0000DFB0 68F0 D128               00000128  21001          LD    15,296(0,13) ; spill
0000DFB4 60F0 D110               00000110  21002          STD   15,272(0,13)
0000DFB8 4110 D0F8               000000F8  21003          LA    1,248(0,13)
0000DFBC B904 00F5                         21004          LGR   15,5
0000DFC0                                   21005 @@gen_label1441 DS    0H
0000DFC0 05EF                              21006          BALR  14,15
0000DFC2                                   21007 @@gen_label1442 DS    0H
0000DFC2 E3F3 2000 0004          00000000  21008          LG    15,0(3,2)   ; __stderrp
0000DFC8 E3F0 D0F8 0024          000000F8  21009          STG   15,248(0,13)
0000DFCE 41F0 479C               0000079C  21010          LA    15,1948(0,4)
0000DFD2 E3F0 D100 0024          00000100  21011          STG   15,256(0,13)
0000DFD8 4110 D0F8               000000F8  21012          LA    1,248(0,13)
0000DFDC B904 00F5                         21013          LGR   15,5
0000DFE0                                   21014 @@gen_label1443 DS    0H
0000DFE0 05EF                              21015          BALR  14,15
0000DFE2                                   21016 @@gen_label1444 DS    0H
                                           21017 * ***
                                           21018 * ***
                                           21019 * ***
                                           21020 * ***           if (ret_us_per_msg)
0000DFE2                                   21021 @L1400   DS    0H
0000DFE2                                   21022 @L1399   DS    0H
0000DFE2 E3F0 B010 0004          00000010  21023          LG    15,16(0,11) ; ret_us_per_msg
0000DFE8 B902 001F                         21024          LTGR  1,15
0000DFEC 4780 C49A               0000DFF8  21025          BZ    @L1405
                                           21026 * ***                   *ret_us_per_msg = us_per_msg;
0000DFF0 68F0 D120               00000120  21027          LD    15,288(0,13) ; spill
0000DFF4 60F0 F000               00000000  21028          STD   15,0(0,15)  ; ret_us_per_msg
0000DFF8                                   21029 @L1404   DS    0H
                                           21030 * ***
                                           21031 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                                                                                                           Page  417 
  Active Usings: @REGION_1989_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           21032 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.c", 2291, __\
                                           21033 * FUNCTION__); return 0; } while (0);
0000DFF8                                   21034 @L1405   DS    0H
0000DFF8 E3F0 C13A 0016          0000DC98  21035          LLGF  15,@lit_1989_1064 ; __stderrp
0000DFFE E3FF 2000 0004          00000000  21036          LG    15,0(15,2)  ; __stderrp
0000E004 E3F0 D0F8 0024          000000F8  21037          STG   15,248(0,13)
0000E00A E3F0 C132 0004          0000DC90  21038          LG    15,@lit_1989_1065
0000E010 4110 FABA               00000ABA  21039          LA    1,2746(0,15)
0000E014 E310 D100 0024          00000100  21040          STG   1,256(0,13)
0000E01A 41F0 F2C2               000002C2  21041          LA    15,706(0,15)
0000E01E E3F0 D108 0024          00000108  21042          STG   15,264(0,13)
0000E024 E548 D110 08F3          00000110  21043          MVGHI 272(13),2291
0000E02A E3F0 C12A 0004          0000DC88  21044          LG    15,@lit_1989_1066
0000E030 41F0 F41C               0000041C  21045          LA    15,1052(0,15)
0000E034 E3F0 D118 0024          00000118  21046          STG   15,280(0,13)
0000E03A 4110 D0F8               000000F8  21047          LA    1,248(0,13)
0000E03E E3F0 C122 0004          0000DC80  21048          LG    15,@lit_1989_1067 ; fprintf
0000E044                                   21049 @@gen_label1446 DS    0H
0000E044 05EF                              21050          BALR  14,15
0000E046                                   21051 @@gen_label1447 DS    0H
0000E046 A7F9 0000               00000000  21052          LGHI  15,0        ; 0
                                           21053 * ***   }
0000E04A                                   21054 @ret_lab_1989 DS 0H
                                           21055 * * **** Start of Epilogue
                                           21056          DCCEPIL
0000E04A                                   21057+         ds 0h                                                          01-DCCEP
                                           21058+* Epilog
0000E04A D707 D088 D088 00000088 00000088  21059+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000E050 E3D0 D080 0004          00000080  21060+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000E056 E3C0 D090 0004          00000090  21061+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000E05C E3B0 C018 0004          00000018  21062+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000E062 E3C0 B010 0021          00000010  21063+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000E068 E3E0 D008 0004          00000008  21064+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000E06E EB1C D020 0004          00000020  21065+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000E074 078E                              21066+         bcr 8,14                if same dsab, just return              01-DCCEP
0000E076 E3F0 D010 0024          00000010  21067+         stg 15,16(0,13)         save return code                       01-DCCEP
0000E07C E300 D018 0024          00000018  21068+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000E082 E3F0 D090 0004          00000090  21069+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000E088 E3F0 F018 0004          00000018  21070+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000E08E 47F0 F040               00000040  21071+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21072+* End of Epilog
                                           21073 * * **** End of Epilogue
                                           21074          DROP  12
                                           21075 *
                                           21076 *   DSECT for automatic variables in "unittest_msgq_insert_each_sort"
                                           21077 *      (FUNCTION #1989)
                                           21078 *
00000000                00000000 000000F8  21079 @AUTO#unittest_msgq_insert_each_sort DSECT
00000000                                   21080          DS    XL184
000000B8                                   21081 unittest_msgq_insert_each_sort#ts#3 DS 8XL1 ; ts
000000C0                000000C0 000000B8  21082          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21083 unittest_msgq_insert_each_sort#this_cnt#3 DS 8XL1 ; this_cnt
                                                                                                                           Page  418 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000C0                000000C0 000000B8  21084          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21085 unittest_msgq_insert_each_sort#this_cnt#2 DS 8XL1 ; this_cnt
000000C0                000000C0 000000B8  21086          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21087 unittest_msgq_insert_each_sort#accum_ts#0 DS 8XL1 ; accum_ts
000000C0                000000C0 000000B8  21088          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21089 unittest_msgq_insert_each_sort#us_per_msg#0 DS 1D ; us_per_msg
000000C0                000000C0 000000B8  21090          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21091 unittest_msgq_insert_each_sort#totsize#0 DS 8XL1 ; totsize
000000C0                000000C0 000000B8  21092          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21093 unittest_msgq_insert_each_sort#msgsize#0 DS 8XL1 ; msgsize
000000C0                000000C0 000000B8  21094          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21095 unittest_msgq_insert_each_sort#scnt#0 DS 8XL1 ; scnt
000000C0                000000C0 000000B8  21096          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21097 unittest_msgq_insert_each_sort#cnt#0 DS 8XL1 ; cnt
000000C0                000000C0 000000B8  21098          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21099 unittest_msgq_insert_each_sort#hi#0 DS 8XL1 ; hi
000000C0                000000C0 000000B8  21100          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21101 unittest_msgq_insert_each_sort#lo#0 DS 8XL1 ; lo
000000C0                000000C0 000000B8  21102          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21103 unittest_msgq_insert_each_sort#i#0 DS 1F ; i
000000BC                000000BC 000000B8  21104          ORG   @AUTO#unittest_msgq_insert_each_sort+184
000000B8                                   21105 unittest_msgq_insert_each_sort#destq#0 DS 32XL1 ; destq
000000D8                000000D8 000000D8  21106          ORG   @AUTO#unittest_msgq_insert_each_sort+216
000000D8                                   21107 unittest_msgq_insert_each_sort#srcq#3 DS 32XL1 ; srcq
                                           21108 *
0000E092                00000000 0000E868  21109 @CODE    CSECT
                                           21110 *
                                           21111 *
                                           21112 *
                                           21113 * ....... start of unittest_msgq_insert_sort
0000E092                                   21114 @LNAME1990 DS  0H
0000E092 00000019                          21115          DC    X'00000019'
0000E096 A49589A3A385A2A3                  21116          DC    C'unittest_msgq_insert_sort'
0000E0AF 00                                21117          DC    X'00'
                                           21118 unittest_msgq_insert_sort DCCPRLG CINDEX=1990,BASER=12,FRAME=224,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1990
                                           21119          macro
                                           21120          dccextrn &m
                                           21121          gblc    &$dccext(1000)
                                           21122          gbla    &$dccexti
                                           21123          lcla    &i
                                           21124 &$dccext(&$dccexti+1) setc    '&m'
                                           21125 &i       seta    1
                                           21126 .loop    aif    (&i gt &$dccexti).around
                                           21127          aif    ('&$dccext(&i)' eq '&m').getout
                                           21128 &i       seta    &i+1
                                           21129          ago     .loop
                                           21130 .around  anop
                                           21131 &$dccexti seta &$dccexti+1
                                           21132          extrn  &m
                                           21133 .getout  anop
                                           21134          mend
                                                                                                                           Page  419 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E0B0                                   21135+$eye0311    ds    0d                                                    02-DCCCA
0000E0B0 C4C3C3                            21136+         dc cl3'DCC'                                                    02-DCCCA
0000E0B3 01                                21137+         dc xl1'01' format one                                          02-DCCCA
0000E0B4 00000000                          21138+         dc a(0)                                                        02-DCCCA
0000E0B8 000000000000E122                  21139+         dc ad(@PER_1990)                                               02-DCCCA
0000E0C0 00000000000000E0                  21140+         dc ad(224)                                                     02-DCCCA
0000E0C8 0000000000000000                  21141+         dc ad(0)                                                       02-DCCCA
0000E0D0 0000000000001000                  21142+         dc ad(4096)                                                    02-DCCCA
0000E0D8 20                                21143+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000E0D9 03                                21144+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000E0DA 03                                21145+         dc al1(3)                                                      02-DCCCA
0000E0DB 08                                21146+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000E0DC 00                                21147+         dc bl.8'00000000'                                              02-DCCCA
0000E0DD 000000                            21148+         dc al3(0)                                                      02-DCCCA
0000E0E0 000000000000E092                  21149+         dc ad(@LNAME1990)                                              02-DCCCA
0000E0E8                                   21150+         ds 0d                                                          02-DCCCA
0000E0E8 000000000000E0B0                  21151+         dc ad($eye0311)                                                02-DCCCA
0000E0F0 0000000000000000                  21152+         dc ad(0)                                                       02-DCCCA
0000E0F8                                   21153+         ds    0d                                                       01-DCCPR
0000E0F8                                   21154+unittest_msgq_insert_sort ds 0d                                         01-DCCPR
0000E0F8                                   21155+@REGION_1990_1 ds 0h                                                    01-DCCPR
0000E0F8 EBEC D008 0024          00000008  21156+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000E0FE E3E0 D088 0004          00000088  21157+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000E104 E3C0 D090 0004          00000090  21158+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000E10A B904 002E                         21159+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000E10E E3B0 C018 0004          00000018  21160+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000E114 A7EB 00E0               000000E0  21161+         aghi  14,224              increase by frame size               01-DCCPR
0000E118 E3E0 C020 0021          00000020  21162+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000E11E 4720 B020               00000020  21163+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000E122                                   21164+@PER_1990 ds   0h                                                       01-DCCPR
0000E122 EBDE 2080 0024          00000080  21165+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000E128 E3C0 2090 0024          00000090  21166+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000E12E B904 00D2                         21167+         lgr   13,2                set real frame pointer               01-DCCPR
0000E132 B904 00CF                         21168+         lgr   12,15               set base reg                         01-DCCPR
                        0000E0F8           21169+         using @REGION_1990_1,12                                        01-DCCPR
0000E136 B904 0021                         21170          LGR   2,1         ; ptr to parm area
                                           21171 * ******* End of Prologue
                                           21172 * *
                                           21173 * ***           double ret_all = 0.0, ret_each = 0.0;
0000E13A B375 00F0                         21174          LZDR  15
0000E13E 60F0 D0A8               000000A8  21175          STD   15,168(0,13) ; ret_all
0000E142 B375 00F0                         21176          LZDR  15
0000E146 60F0 D0B0               000000B0  21177          STD   15,176(0,13) ; ret_each
                                           21178 * ***           int r;
                                           21179 * ***
                                           21180 * ***           r = unittest_msgq_insert_all_sort(what, max_us_per_msg\
                                           21181 * , &ret_all,
                                           21182 * ***                                             src_ranges, dest_ran\
                                           21183 * ges);
0000E14A E3F0 2000 0004          00000000  21184          LG    15,0(0,2)   ; what
0000E150 E3F0 D0B8 0024          000000B8  21185          STG   15,184(0,13)
0000E156 D207 D0C0 2008 000000C0 00000008  21186          MVC   192(8,13),8(2)
                                                                                                                           Page  420 
  Active Usings: @REGION_1990_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E15C 41F0 D0A8               000000A8  21187          LA    15,168(0,13)
0000E160 E3F0 D0C8 0024          000000C8  21188          STG   15,200(0,13)
0000E166 E3F0 2018 0004          00000018  21189          LG    15,24(0,2)  ; src_ranges
0000E16C E3F0 D0D0 0024          000000D0  21190          STG   15,208(0,13)
0000E172 E3F0 2020 0004          00000020  21191          LG    15,32(0,2)  ; dest_ranges
0000E178 E3F0 D0D8 0024          000000D8  21192          STG   15,216(0,13)
0000E17E 4110 D0B8               000000B8  21193          LA    1,184(0,13)
0000E182 E3F0 C0A8 0004          0000E1A0  21194          LG    15,@lit_1990_1162 ; unittest_msgq_insert_all_sort
0000E188                                   21195 @@gen_label1448 DS    0H
0000E188 05EF                              21196          BALR  14,15
0000E18A                                   21197 @@gen_label1449 DS    0H
                                           21198 * ***           if (r)
0000E18A 12FF                              21199          LTR   15,15
0000E18C 4780 C0B8               0000E1B0  21200          BZ    @L1408
                                           21201 * ***                   return r;
0000E190 B914 00FF                         21202          LGFR  15,15
0000E194 47F0 C130               0000E228  21203          B     @ret_lab_1990
0000E198                                   21204          DS    0D
0000E198 000000E0                          21205 @FRAMESIZE_1990 DC F'224'
0000E19C 00000000
0000E1A0 000000000000C578                  21206 @lit_1990_1162 DC AD(unittest_msgq_insert_all_sort)
0000E1A8 000000000000D288                  21207 @lit_1990_1163 DC AD(unittest_msgq_insert_each_sort)
0000E1B0                                   21208 @L1408   DS    0H
                                           21209 * ***
                                           21210 * ***           r = unittest_msgq_insert_each_sort(what, max_us_per_ms\
                                           21211 * g, &ret_each,
                                           21212 * ***                                              src_ranges, dest_ra\
                                           21213 * nges);
0000E1B0 E3F0 2000 0004          00000000  21214          LG    15,0(0,2)   ; what
0000E1B6 E3F0 D0B8 0024          000000B8  21215          STG   15,184(0,13)
0000E1BC D207 D0C0 2008 000000C0 00000008  21216          MVC   192(8,13),8(2)
0000E1C2 41F0 D0B0               000000B0  21217          LA    15,176(0,13)
0000E1C6 E3F0 D0C8 0024          000000C8  21218          STG   15,200(0,13)
0000E1CC E3F0 2018 0004          00000018  21219          LG    15,24(0,2)  ; src_ranges
0000E1D2 E3F0 D0D0 0024          000000D0  21220          STG   15,208(0,13)
0000E1D8 E3F0 2020 0004          00000020  21221          LG    15,32(0,2)  ; dest_ranges
0000E1DE E3F0 D0D8 0024          000000D8  21222          STG   15,216(0,13)
0000E1E4 4110 D0B8               000000B8  21223          LA    1,184(0,13)
0000E1E8 E3F0 C0B0 0004          0000E1A8  21224          LG    15,@lit_1990_1163 ; unittest_msgq_insert_each_sort
0000E1EE                                   21225 @@gen_label1451 DS    0H
0000E1EE 05EF                              21226          BALR  14,15
0000E1F0                                   21227 @@gen_label1452 DS    0H
                                           21228 * ***           if (r)
0000E1F0 12FF                              21229          LTR   15,15
0000E1F2 4780 C106               0000E1FE  21230          BZ    @L1409
                                           21231 * ***                   return r;
0000E1F6 B914 00FF                         21232          LGFR  15,15
0000E1FA 47F0 C130               0000E228  21233          B     @ret_lab_1990
0000E1FE                                   21234 @L1409   DS    0H
                                           21235 * ***
                                           21236 * ***           if (ret_us_per_msg)
0000E1FE E3F0 2010 0004          00000010  21237          LG    15,16(0,2)  ; ret_us_per_msg
                                                                                                                           Page  421 
  Active Usings: @REGION_1990_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E204 B902 001F                         21238          LTGR  1,15
0000E208 4780 C12C               0000E224  21239          BZ    @L1410
                                           21240 * ***                   *ret_us_per_msg = ((ret_all) > (ret_each) ? (r\
                                           21241 * et_all) : (ret_each));
0000E20C 68F0 D0A8               000000A8  21242          LD    15,168(0,13) ; ret_all
0000E210 69F0 D0B0               000000B0  21243          CD    15,176(0,13)
0000E214 47D0 C124               0000E21C  21244          BNH   @L1411
0000E218 47F0 C128               0000E220  21245          B     @L1412
0000E21C                                   21246 @L1411   DS    0H
0000E21C 68F0 D0B0               000000B0  21247          LD    15,176(0,13) ; ret_each
0000E220                                   21248 @L1412   DS    0H
0000E220 60F0 F000               00000000  21249          STD   15,0(0,15)
0000E224                                   21250 @L1410   DS    0H
                                           21251 * ***
                                           21252 * ***           return 0;
0000E224 A7F9 0000               00000000  21253          LGHI  15,0        ; 0
                                           21254 * ***   }
0000E228                                   21255 @ret_lab_1990 DS 0H
                                           21256 * * **** Start of Epilogue
                                           21257          DCCEPIL
0000E228                                   21258+         ds 0h                                                          01-DCCEP
                                           21259+* Epilog
0000E228 D707 D088 D088 00000088 00000088  21260+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000E22E E3D0 D080 0004          00000080  21261+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000E234 E3C0 D090 0004          00000090  21262+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000E23A E3B0 C018 0004          00000018  21263+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000E240 E3C0 B010 0021          00000010  21264+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000E246 E3E0 D008 0004          00000008  21265+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000E24C EB1C D020 0004          00000020  21266+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000E252 078E                              21267+         bcr 8,14                if same dsab, just return              01-DCCEP
0000E254 E3F0 D010 0024          00000010  21268+         stg 15,16(0,13)         save return code                       01-DCCEP
0000E25A E300 D018 0024          00000018  21269+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000E260 E3F0 D090 0004          00000090  21270+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000E266 E3F0 F018 0004          00000018  21271+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000E26C 47F0 F040               00000040  21272+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21273+* End of Epilog
                                           21274 * * **** End of Epilogue
                                           21275          DROP  12
                                           21276 *
                                           21277 *   DSECT for automatic variables in "unittest_msgq_insert_sort"
                                           21278 *      (FUNCTION #1990)
                                           21279 *
00000000                00000000 000000B8  21280 @AUTO#unittest_msgq_insert_sort DSECT
00000000                                   21281          DS    XL168
000000A8                                   21282 unittest_msgq_insert_sort#r#0 DS 1F ; r
000000AC                000000AC 000000A8  21283          ORG   @AUTO#unittest_msgq_insert_sort+168
000000A8                                   21284 unittest_msgq_insert_sort#ret_all#0 DS 1D ; ret_all
000000B0                000000B0 000000B0  21285          ORG   @AUTO#unittest_msgq_insert_sort+176
000000B0                                   21286 unittest_msgq_insert_sort#ret_each#0 DS 1D ; ret_each
                                           21287 *
0000E270                00000000 0000E868  21288 @CODE    CSECT
                                           21289 *
                                                                                                                           Page  422 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           21290 *
                                           21291 *
                                           21292 * ....... start of unittest_msg
                                           21293 unittest_msg ALIAS X'A49589A3A385A2A36D94A287'
0000E270                                   21294 @LNAME1372 DS  0H
0000E270 0000000C                          21295          DC    X'0000000C'
0000E274 A49589A3A385A2A3                  21296          DC    C'unittest_msg'
0000E280 00                                21297          DC    X'00'
                                           21298 unittest_msg DCCPRLG CINDEX=1372,BASER=12,FRAME=1000,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1372
                                           21299          macro
                                           21300          dccextrn &m
                                           21301          gblc    &$dccext(1000)
                                           21302          gbla    &$dccexti
                                           21303          lcla    &i
                                           21304 &$dccext(&$dccexti+1) setc    '&m'
                                           21305 &i       seta    1
                                           21306 .loop    aif    (&i gt &$dccexti).around
                                           21307          aif    ('&$dccext(&i)' eq '&m').getout
                                           21308 &i       seta    &i+1
                                           21309          ago     .loop
                                           21310 .around  anop
                                           21311 &$dccexti seta &$dccexti+1
                                           21312          extrn  &m
                                           21313 .getout  anop
                                           21314          mend
0000E288                                   21315+$eye0314    ds    0d                                                    02-DCCCA
0000E288 C4C3C3                            21316+         dc cl3'DCC'                                                    02-DCCCA
0000E28B 01                                21317+         dc xl1'01' format one                                          02-DCCCA
0000E28C 00000000                          21318+         dc a(0)                                                        02-DCCCA
0000E290 000000000000E2FA                  21319+         dc ad(@PER_1372)                                               02-DCCCA
0000E298 00000000000003E8                  21320+         dc ad(1000)                                                    02-DCCCA
0000E2A0 0000000000000000                  21321+         dc ad(0)                                                       02-DCCCA
0000E2A8 0000000000001000                  21322+         dc ad(4096)                                                    02-DCCCA
0000E2B0 20                                21323+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000E2B1 03                                21324+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000E2B2 03                                21325+         dc al1(3)                                                      02-DCCCA
0000E2B3 08                                21326+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000E2B4 00                                21327+         dc bl.8'00000000'                                              02-DCCCA
0000E2B5 000000                            21328+         dc al3(0)                                                      02-DCCCA
0000E2B8 000000000000E270                  21329+         dc ad(@LNAME1372)                                              02-DCCCA
0000E2C0                                   21330+         ds 0d                                                          02-DCCCA
0000E2C0 000000000000E288                  21331+         dc ad($eye0314)                                                02-DCCCA
0000E2C8 0000000000000000                  21332+         dc ad(0)                                                       02-DCCCA
0000E2D0                                   21333+         ds    0d                                                       01-DCCPR
                                           21334+         entry unittest_msg                                             01-DCCPR
0000E2D0                                   21335+unittest_msg ds 0d                                                      01-DCCPR
0000E2D0                                   21336+@REGION_1372_1 ds 0h                                                    01-DCCPR
0000E2D0 EBEC D008 0024          00000008  21337+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000E2D6 E3E0 D088 0004          00000088  21338+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000E2DC E3C0 D090 0004          00000090  21339+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000E2E2 B904 002E                         21340+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page  423 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E2E6 E3B0 C018 0004          00000018  21341+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000E2EC A7EB 03E8               000003E8  21342+         aghi  14,1000             increase by frame size               01-DCCPR
0000E2F0 E3E0 C020 0021          00000020  21343+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000E2F6 4720 B020               00000020  21344+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000E2FA                                   21345+@PER_1372 ds   0h                                                       01-DCCPR
0000E2FA EBDE 2080 0024          00000080  21346+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000E300 E3C0 2090 0024          00000090  21347+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000E306 B904 00D2                         21348+         lgr   13,2                set real frame pointer               01-DCCPR
0000E30A B904 00CF                         21349+         lgr   12,15               set base reg                         01-DCCPR
                        0000E2D0           21350+         using @REGION_1372_1,12                                        01-DCCPR
                                           21351 * ******* End of Prologue
                                           21352 * *
                                           21353 * ***           int fails = 0;
0000E30E A728 0000               00000000  21354          LHI   2,0         ; 0
                                           21355 * ***           double insert_baseline = 0.0;
0000E312 B375 00F0                         21356          LZDR  15
0000E316 60F0 D3B8               000003B8  21357          STD   15,952(0,13) ; insert_baseline
                                           21358 * ***
                                           21359 * ***           fails += unittest_msgq_order("FIFO", 1, rd_kafka_msg_c\
                                           21360 * mp_msgid);
0000E31A E330 C560 0004          0000E830  21361          LG    3,@lit_1372_1167
0000E320 41F0 37AA               000007AA  21362          LA    15,1962(0,3)
0000E324 E3F0 D3C0 0024          000003C0  21363          STG   15,960(0,13)
0000E32A E548 D3C8 0001          000003C8  21364          MVGHI 968(13),1
0000E330 E3F0 C558 0004          0000E828  21365          LG    15,@lit_1372_1168 ; rd_kafka_msg_cmp_msgid
0000E336 E3F0 D3D0 0024          000003D0  21366          STG   15,976(0,13)
0000E33C 4110 D3C0               000003C0  21367          LA    1,960(0,13)
0000E340 E3F0 C550 0004          0000E820  21368          LG    15,@lit_1372_1169 ; unittest_msgq_order
0000E346                                   21369 @@gen_label1456 DS    0H
0000E346 05EF                              21370          BALR  14,15
0000E348                                   21371 @@gen_label1457 DS    0H
0000E348 1A2F                              21372          AR    2,15
                                           21373 * ***           fails += unittest_msg_seq_wrap();
0000E34A E3F0 C568 0004          0000E838  21374          LG    15,@lit_1372_1170 ; unittest_msg_seq_wrap
0000E350                                   21375 @@gen_label1458 DS    0H
0000E350 05EF                              21376          BALR  14,15
0000E352                                   21377 @@gen_label1459 DS    0H
0000E352 1A2F                              21378          AR    2,15
                                           21379 * ***
                                           21380 * ***           fails += unittest_msgq_insert_sort(
                                           21381 * ***                   "get baseline insert time", 100000.0, &insert_\
                                           21382 * baseline,
                                           21383 * ***                   (const struct ut_msg_range[]){
                                           21384 * ***                   (const struct ut_msg_range[]) {
                                           21385 * ***                           { 1, 1 },
0000E354 E548 D388 0001          00000388  21386          MVGHI 904(13),1
0000E35A E548 D390 0001          00000390  21387          MVGHI 912(13),1
                                           21388 * ***                           { 3, 3 },
0000E360 E548 D398 0003          00000398  21389          MVGHI 920(13),3
0000E366 E548 D3A0 0003          000003A0  21390          MVGHI 928(13),3
                                           21391 * ***                           { 0, 0 }},
                                           21392 * setting 16 bytes to 0x00
                                                                                                                           Page  424 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E36C D70F D3A8 D3A8 000003A8 000003A8  21393          XC    936(16,13),936(13)
                                           21394 * ***                           { 2, 2 },
0000E372 E548 D358 0002          00000358  21395          MVGHI 856(13),2
0000E378 E548 D360 0002          00000360  21396          MVGHI 864(13),2
                                           21397 * ***                           { 4, 4 },
0000E37E E548 D368 0004          00000368  21398          MVGHI 872(13),4
0000E384 E548 D370 0004          00000370  21399          MVGHI 880(13),4
                                           21400 * ***                           { 0, 0 }});
                                           21401 * setting 16 bytes to 0x00
0000E38A D70F D378 D378 00000378 00000378  21402          XC    888(16,13),888(13)
0000E390 41F0 3E68               00000E68  21403          LA    15,3688(0,3)
0000E394 E3F0 D3C0 0024          000003C0  21404          STG   15,960(0,13)
0000E39A 68F0 C578               0000E848  21405          LD    15,@lit_1372_1171
0000E39E 60F0 D3C8               000003C8  21406          STD   15,968(0,13)
0000E3A2 41F0 D3B8               000003B8  21407          LA    15,952(0,13)
0000E3A6 E3F0 D3D0 0024          000003D0  21408          STG   15,976(0,13)
0000E3AC 41F0 D388               00000388  21409          LA    15,904(0,13)
0000E3B0 E3F0 D3D8 0024          000003D8  21410          STG   15,984(0,13)
0000E3B6 41F0 D358               00000358  21411          LA    15,856(0,13)
0000E3BA E3F0 D3E0 0024          000003E0  21412          STG   15,992(0,13)
0000E3C0 4110 D3C0               000003C0  21413          LA    1,960(0,13)
0000E3C4 E340 C570 0004          0000E840  21414          LG    4,@lit_1372_1172 ; unittest_msgq_insert_sort
0000E3CA B904 00F4                         21415          LGR   15,4
0000E3CE                                   21416 @@gen_label1460 DS    0H
0000E3CE 05EF                              21417          BALR  14,15
0000E3D0                                   21418 @@gen_label1461 DS    0H
0000E3D0 1A2F                              21419          AR    2,15
                                           21420 * ***
                                           21421 * ***
                                           21422 * ***           if (insert_baseline < 0.1)
0000E3D2 68F0 D3B8               000003B8  21423          LD    15,952(0,13) ; insert_baseline
0000E3D6 69F0 C580               0000E850  21424          CD    15,@lit_1372_1173
0000E3DA 47B0 C116               0000E3E6  21425          BNL   @L1413
                                           21426 * ***                   insert_baseline = 0.2;
0000E3DE 68F0 C588               0000E858  21427          LD    15,@lit_1372_1174
0000E3E2 60F0 D3B8               000003B8  21428          STD   15,952(0,13) ; insert_baseline
0000E3E6                                   21429 @L1413   DS    0H
                                           21430 * ***           insert_baseline *= 3;
0000E3E6 68F0 D3B8               000003B8  21431          LD    15,952(0,13) ; insert_baseline
0000E3EA 6CF0 C590               0000E860  21432          MD    15,@lit_1372_1175
0000E3EE 60F0 D3B8               000003B8  21433          STD   15,952(0,13) ; insert_baseline
                                           21434 * ***
                                           21435 * ***           fails += unittest_msgq_insert_sort(
                                           21436 * ***                   "single-message ranges", insert_baseline, ((vo\
                                           21437 * id *)0),
                                           21438 * ***                   (const struct ut_msg_range[]){
                                           21439 * ***                   (const struct ut_msg_range[]) {
                                           21440 * ***                           { 2, 2 },
0000E3F2 E548 D308 0002          00000308  21441          MVGHI 776(13),2
0000E3F8 E548 D310 0002          00000310  21442          MVGHI 784(13),2
                                           21443 * ***                           { 4, 4 },
0000E3FE E548 D318 0004          00000318  21444          MVGHI 792(13),4
                                                                                                                           Page  425 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E404 E548 D320 0004          00000320  21445          MVGHI 800(13),4
                                           21446 * ***                           { 9, 9 },
0000E40A E548 D328 0009          00000328  21447          MVGHI 808(13),9
0000E410 E548 D330 0009          00000330  21448          MVGHI 816(13),9
                                           21449 * ***                           { 33692864, 33692864 },
0000E416 C05F 0202 1CC0                    21450          LLILF 5,X'02021CC0' ; 33692864
0000E41C E350 D338 0024          00000338  21451          STG   5,824(0,13)
0000E422 E350 D340 0024          00000340  21452          STG   5,832(0,13)
                                           21453 * ***                           { 0, 0 }},
                                           21454 * setting 16 bytes to 0x00
0000E428 D70F D348 D348 00000348 00000348  21455          XC    840(16,13),840(13)
                                           21456 * ***                           { 1,  1 },
0000E42E E548 D2A8 0001          000002A8  21457          MVGHI 680(13),1
0000E434 E548 D2B0 0001          000002B0  21458          MVGHI 688(13),1
                                           21459 * ***                           { 3, 3 },
0000E43A E548 D2B8 0003          000002B8  21460          MVGHI 696(13),3
0000E440 E548 D2C0 0003          000002C0  21461          MVGHI 704(13),3
                                           21462 * ***                           { 5, 5 },
0000E446 E548 D2C8 0005          000002C8  21463          MVGHI 712(13),5
0000E44C E548 D2D0 0005          000002D0  21464          MVGHI 720(13),5
                                           21465 * ***                           { 10, 10 },
0000E452 E548 D2D8 000A          000002D8  21466          MVGHI 728(13),10
0000E458 E548 D2E0 000A          000002E0  21467          MVGHI 736(13),10
                                           21468 * ***                           { 33692865, 33692865 },
0000E45E C0FF 0202 1CC1                    21469          LLILF 15,X'02021CC1' ; 33692865
0000E464 E3F0 D2E8 0024          000002E8  21470          STG   15,744(0,13)
0000E46A E3F0 D2F0 0024          000002F0  21471          STG   15,752(0,13)
                                           21472 * ***                           { 0, 0 }});
                                           21473 * setting 16 bytes to 0x00
0000E470 D70F D2F8 D2F8 000002F8 000002F8  21474          XC    760(16,13),760(13)
0000E476 41F0 3E82               00000E82  21475          LA    15,3714(0,3)
0000E47A E3F0 D3C0 0024          000003C0  21476          STG   15,960(0,13)
0000E480 D207 D3C8 D3B8 000003C8 000003B8  21477          MVC   968(8,13),952(13)
0000E486 D707 D3D0 D3D0 000003D0 000003D0  21478          XC    976(8,13),976(13)
0000E48C 41F0 D308               00000308  21479          LA    15,776(0,13)
0000E490 E3F0 D3D8 0024          000003D8  21480          STG   15,984(0,13)
0000E496 41F0 D2A8               000002A8  21481          LA    15,680(0,13)
0000E49A E3F0 D3E0 0024          000003E0  21482          STG   15,992(0,13)
0000E4A0 4110 D3C0               000003C0  21483          LA    1,960(0,13)
0000E4A4 B904 00F4                         21484          LGR   15,4
0000E4A8                                   21485 @@gen_label1463 DS    0H
0000E4A8 05EF                              21486          BALR  14,15
0000E4AA                                   21487 @@gen_label1464 DS    0H
0000E4AA 1A2F                              21488          AR    2,15
                                           21489 * ***           fails += unittest_msgq_insert_sort(
                                           21490 * ***                   "many messages", insert_baseline, ((void *)0),
                                           21491 * ***                   (const struct ut_msg_range[]){
                                           21492 * ***                   (const struct ut_msg_range[]) {
                                           21493 * ***                           { 100000, 200000 },
0000E4AC C0FF 0001 86A0                    21494          LLILF 15,X'000186A0' ; 100000
0000E4B2 E3F0 D238 0024          00000238  21495          STG   15,568(0,13)
0000E4B8 C0FF 0003 0D40                    21496          LLILF 15,X'00030D40' ; 200000
                                                                                                                           Page  426 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E4BE E3F0 D240 0024          00000240  21497          STG   15,576(0,13)
                                           21498 * ***                           { 400000, 450000 },
0000E4C4 C0FF 0006 1A80                    21499          LLILF 15,X'00061A80' ; 400000
0000E4CA E3F0 D248 0024          00000248  21500          STG   15,584(0,13)
0000E4D0 C0FF 0006 DDD0                    21501          LLILF 15,X'0006DDD0' ; 450000
0000E4D6 E3F0 D250 0024          00000250  21502          STG   15,592(0,13)
                                           21503 * ***                           { 900000, 920000 },
0000E4DC C0FF 000D BBA0                    21504          LLILF 15,X'000DBBA0' ; 900000
0000E4E2 E3F0 D258 0024          00000258  21505          STG   15,600(0,13)
0000E4E8 C0FF 000E 09C0                    21506          LLILF 15,X'000E09C0' ; 920000
0000E4EE E3F0 D260 0024          00000260  21507          STG   15,608(0,13)
                                           21508 * ***                           { 33692864, 33751992 },
0000E4F4 E350 D268 0024          00000268  21509          STG   5,616(0,13)
0000E4FA C0FF 0203 03B8                    21510          LLILF 15,X'020303B8' ; 33751992
0000E500 E3F0 D270 0024          00000270  21511          STG   15,624(0,13)
                                           21512 * ***                           { 33906868, 33993690 },
0000E506 C0FF 0205 60B4                    21513          LLILF 15,X'020560B4' ; 33906868
0000E50C E3F0 D278 0024          00000278  21514          STG   15,632(0,13)
0000E512 C0FF 0206 B3DA                    21515          LLILF 15,X'0206B3DA' ; 33993690
0000E518 E3F0 D280 0024          00000280  21516          STG   15,640(0,13)
                                           21517 * ***                           { 40000000, 44000000 },
0000E51E C0FF 0262 5A00                    21518          LLILF 15,X'02625A00' ; 40000000
0000E524 E3F0 D288 0024          00000288  21519          STG   15,648(0,13)
0000E52A C0FF 029F 6300                    21520          LLILF 15,X'029F6300' ; 44000000
0000E530 E3F0 D290 0024          00000290  21521          STG   15,656(0,13)
                                           21522 * ***                           { 0, 0 }},
                                           21523 * setting 16 bytes to 0x00
0000E536 D70F D298 D298 00000298 00000298  21524          XC    664(16,13),664(13)
                                           21525 * ***                           { 1,  199 },
0000E53C E548 D1C8 0001          000001C8  21526          MVGHI 456(13),1
0000E542 E548 D1D0 00C7          000001D0  21527          MVGHI 464(13),199
                                           21528 * ***                           { 350000, 360000 },
0000E548 C0FF 0005 5730                    21529          LLILF 15,X'00055730' ; 350000
0000E54E E3F0 D1D8 0024          000001D8  21530          STG   15,472(0,13)
0000E554 C0FF 0005 7E40                    21531          LLILF 15,X'00057E40' ; 360000
0000E55A E3F0 D1E0 0024          000001E0  21532          STG   15,480(0,13)
                                           21533 * ***                           { 500000, 500010 },
0000E560 C0FF 0007 A120                    21534          LLILF 15,X'0007A120' ; 500000
0000E566 E3F0 D1E8 0024          000001E8  21535          STG   15,488(0,13)
0000E56C C0FF 0007 A12A                    21536          LLILF 15,X'0007A12A' ; 500010
0000E572 E3F0 D1F0 0024          000001F0  21537          STG   15,496(0,13)
                                           21538 * ***                           { 1000000, 1000200 },
0000E578 C0FF 000F 4240                    21539          LLILF 15,X'000F4240' ; 1000000
0000E57E E3F0 D1F8 0024          000001F8  21540          STG   15,504(0,13)
0000E584 C0FF 000F 4308                    21541          LLILF 15,X'000F4308' ; 1000200
0000E58A E3F0 D200 0024          00000200  21542          STG   15,512(0,13)
                                           21543 * ***                           { 33751993, 33906867 },
0000E590 C03F 0203 03B9                    21544          LLILF 3,X'020303B9' ; 33751993
0000E596 E330 D208 0024          00000208  21545          STG   3,520(0,13)
0000E59C C04F 0205 60B3                    21546          LLILF 4,X'020560B3' ; 33906867
0000E5A2 E340 D210 0024          00000210  21547          STG   4,528(0,13)
                                           21548 * ***                           { 50000001, 50000001 },
                                                                                                                           Page  427 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E5A8 C0FF 02FA F081                    21549          LLILF 15,X'02FAF081' ; 50000001
0000E5AE E3F0 D218 0024          00000218  21550          STG   15,536(0,13)
0000E5B4 E3F0 D220 0024          00000220  21551          STG   15,544(0,13)
                                           21552 * ***                           { 0, 0 }});
                                           21553 * setting 16 bytes to 0x00
0000E5BA D70F D228 D228 00000228 00000228  21554          XC    552(16,13),552(13)
0000E5C0 E350 C560 0004          0000E830  21555          LG    5,@lit_1372_1167
0000E5C6 41F0 5E98               00000E98  21556          LA    15,3736(0,5)
0000E5CA E3F0 D3C0 0024          000003C0  21557          STG   15,960(0,13)
0000E5D0 D207 D3C8 D3B8 000003C8 000003B8  21558          MVC   968(8,13),952(13)
0000E5D6 D707 D3D0 D3D0 000003D0 000003D0  21559          XC    976(8,13),976(13)
0000E5DC 41F0 D238               00000238  21560          LA    15,568(0,13)
0000E5E0 E3F0 D3D8 0024          000003D8  21561          STG   15,984(0,13)
0000E5E6 41F0 D1C8               000001C8  21562          LA    15,456(0,13)
0000E5EA E3F0 D3E0 0024          000003E0  21563          STG   15,992(0,13)
0000E5F0 4110 D3C0               000003C0  21564          LA    1,960(0,13)
0000E5F4 E360 C570 0004          0000E840  21565          LG    6,@lit_1372_1172 ; unittest_msgq_insert_sort
0000E5FA B904 00F6                         21566          LGR   15,6
0000E5FE                                   21567 @@gen_label1465 DS    0H
0000E5FE 05EF                              21568          BALR  14,15
0000E600                                   21569 @@gen_label1466 DS    0H
0000E600 1A2F                              21570          AR    2,15
                                           21571 * ***           fails += unittest_msgq_insert_sort(
                                           21572 * ***                   "issue #2508", insert_baseline, ((void *)0),
                                           21573 * ***                   (const struct ut_msg_range[]){
                                           21574 * ***                   (const struct ut_msg_range[]) {
                                           21575 * ***                           { 33692864, 33751992 },
0000E602 C0FF 0202 1CC0                    21576          LLILF 15,X'02021CC0' ; 33692864
0000E608 E3F0 D198 0024          00000198  21577          STG   15,408(0,13)
0000E60E C0FF 0203 03B8                    21578          LLILF 15,X'020303B8' ; 33751992
0000E614 E3F0 D1A0 0024          000001A0  21579          STG   15,416(0,13)
                                           21580 * ***                           { 33906868, 33993690 },
0000E61A C0FF 0205 60B4                    21581          LLILF 15,X'020560B4' ; 33906868
0000E620 E3F0 D1A8 0024          000001A8  21582          STG   15,424(0,13)
0000E626 C0FF 0206 B3DA                    21583          LLILF 15,X'0206B3DA' ; 33993690
0000E62C E3F0 D1B0 0024          000001B0  21584          STG   15,432(0,13)
                                           21585 * ***                           { 0, 0 }},
                                           21586 * setting 16 bytes to 0x00
0000E632 D70F D1B8 D1B8 000001B8 000001B8  21587          XC    440(16,13),440(13)
                                           21588 * ***                           { 33751993, 33906867 },
0000E638 EB34 D178 0024          00000178  21589          STMG  3,4,376(13)
                                           21590 * ***                           { 0, 0 }});
                                           21591 * setting 16 bytes to 0x00
0000E63E D70F D188 D188 00000188 00000188  21592          XC    392(16,13),392(13)
0000E644 41F0 5EA6               00000EA6  21593          LA    15,3750(0,5)
0000E648 E3F0 D3C0 0024          000003C0  21594          STG   15,960(0,13)
0000E64E D207 D3C8 D3B8 000003C8 000003B8  21595          MVC   968(8,13),952(13)
0000E654 D707 D3D0 D3D0 000003D0 000003D0  21596          XC    976(8,13),976(13)
0000E65A 41F0 D198               00000198  21597          LA    15,408(0,13)
0000E65E E3F0 D3D8 0024          000003D8  21598          STG   15,984(0,13)
0000E664 41F0 D178               00000178  21599          LA    15,376(0,13)
0000E668 E3F0 D3E0 0024          000003E0  21600          STG   15,992(0,13)
                                                                                                                           Page  428 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E66E 4110 D3C0               000003C0  21601          LA    1,960(0,13)
0000E672 B904 00F6                         21602          LGR   15,6
0000E676                                   21603 @@gen_label1467 DS    0H
0000E676 05EF                              21604          BALR  14,15
0000E678                                   21605 @@gen_label1468 DS    0H
0000E678 1A2F                              21606          AR    2,15
                                           21607 * ***
                                           21608 * ***
                                           21609 * ***
                                           21610 * ***
                                           21611 * ***
                                           21612 * ***           fails += unittest_msgq_insert_sort(
                                           21613 * ***                   "issue #2450 (v1.2.1 regression)", insert_base\
                                           21614 * line, ((void *)0),
                                           21615 * ***                   (const struct ut_msg_range[]){
                                           21616 * ***                   (const struct ut_msg_range[]) {
                                           21617 * ***                           { 200000, 200001 },
0000E67A C0FF 0003 0D40                    21618          LLILF 15,X'00030D40' ; 200000
0000E680 E3F0 D0C8 0024          000000C8  21619          STG   15,200(0,13)
0000E686 C0FF 0003 0D41                    21620          LLILF 15,X'00030D41' ; 200001
0000E68C E3F0 D0D0 0024          000000D0  21621          STG   15,208(0,13)
                                           21622 * ***                           { 200002, 200006 },
0000E692 C0FF 0003 0D42                    21623          LLILF 15,X'00030D42' ; 200002
0000E698 E3F0 D0D8 0024          000000D8  21624          STG   15,216(0,13)
0000E69E C0FF 0003 0D46                    21625          LLILF 15,X'00030D46' ; 200006
0000E6A4 E3F0 D0E0 0024          000000E0  21626          STG   15,224(0,13)
                                           21627 * ***                           { 200009, 200012 },
0000E6AA C0FF 0003 0D49                    21628          LLILF 15,X'00030D49' ; 200009
0000E6B0 E3F0 D0E8 0024          000000E8  21629          STG   15,232(0,13)
0000E6B6 C0FF 0003 0D4C                    21630          LLILF 15,X'00030D4C' ; 200012
0000E6BC E3F0 D0F0 0024          000000F0  21631          STG   15,240(0,13)
                                           21632 * ***                           { 200015, 200016 },
0000E6C2 C0FF 0003 0D4F                    21633          LLILF 15,X'00030D4F' ; 200015
0000E6C8 E3F0 D0F8 0024          000000F8  21634          STG   15,248(0,13)
0000E6CE C0FF 0003 0D50                    21635          LLILF 15,X'00030D50' ; 200016
0000E6D4 E3F0 D100 0024          00000100  21636          STG   15,256(0,13)
                                           21637 * ***                           { 200020, 200022 },
0000E6DA C0FF 0003 0D54                    21638          LLILF 15,X'00030D54' ; 200020
0000E6E0 E3F0 D108 0024          00000108  21639          STG   15,264(0,13)
0000E6E6 C0FF 0003 0D56                    21640          LLILF 15,X'00030D56' ; 200022
0000E6EC E3F0 D110 0024          00000110  21641          STG   15,272(0,13)
                                           21642 * ***                           { 200030, 200090 },
0000E6F2 C0FF 0003 0D5E                    21643          LLILF 15,X'00030D5E' ; 200030
0000E6F8 E3F0 D118 0024          00000118  21644          STG   15,280(0,13)
0000E6FE C0FF 0003 0D9A                    21645          LLILF 15,X'00030D9A' ; 200090
0000E704 E3F0 D120 0024          00000120  21646          STG   15,288(0,13)
                                           21647 * ***                           { 200091, 200092 },
0000E70A C0FF 0003 0D9B                    21648          LLILF 15,X'00030D9B' ; 200091
0000E710 E3F0 D128 0024          00000128  21649          STG   15,296(0,13)
0000E716 C0FF 0003 0D9C                    21650          LLILF 15,X'00030D9C' ; 200092
0000E71C E3F0 D130 0024          00000130  21651          STG   15,304(0,13)
                                           21652 * ***                           { 200093, 200094 },
                                                                                                                           Page  429 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E722 C0FF 0003 0D9D                    21653          LLILF 15,X'00030D9D' ; 200093
0000E728 E3F0 D138 0024          00000138  21654          STG   15,312(0,13)
0000E72E C0FF 0003 0D9E                    21655          LLILF 15,X'00030D9E' ; 200094
0000E734 E3F0 D140 0024          00000140  21656          STG   15,320(0,13)
                                           21657 * ***                           { 200095, 200096 },
0000E73A C0FF 0003 0D9F                    21658          LLILF 15,X'00030D9F' ; 200095
0000E740 E3F0 D148 0024          00000148  21659          STG   15,328(0,13)
0000E746 C0FF 0003 0DA0                    21660          LLILF 15,X'00030DA0' ; 200096
0000E74C E3F0 D150 0024          00000150  21661          STG   15,336(0,13)
                                           21662 * ***                           { 200097, 200099 },
0000E752 C0FF 0003 0DA1                    21663          LLILF 15,X'00030DA1' ; 200097
0000E758 E3F0 D158 0024          00000158  21664          STG   15,344(0,13)
0000E75E C0FF 0003 0DA3                    21665          LLILF 15,X'00030DA3' ; 200099
0000E764 E3F0 D160 0024          00000160  21666          STG   15,352(0,13)
                                           21667 * ***                           { 0, 0 }},
                                           21668 * setting 16 bytes to 0x00
0000E76A D70F D168 D168 00000168 00000168  21669          XC    360(16,13),360(13)
                                           21670 * ***                           { 1, 199999 },
0000E770 E548 D0A8 0001          000000A8  21671          MVGHI 168(13),1
0000E776 C0FF 0003 0D3F                    21672          LLILF 15,X'00030D3F' ; 199999
0000E77C E3F0 D0B0 0024          000000B0  21673          STG   15,176(0,13)
                                           21674 * ***                           { 0, 0 }});
                                           21675 * setting 16 bytes to 0x00
0000E782 D70F D0B8 D0B8 000000B8 000000B8  21676          XC    184(16,13),184(13)
0000E788 E3F0 C560 0004          0000E830  21677          LG    15,@lit_1372_1167
0000E78E 41F0 FEB2               00000EB2  21678          LA    15,3762(0,15)
0000E792 E3F0 D3C0 0024          000003C0  21679          STG   15,960(0,13)
0000E798 D207 D3C8 D3B8 000003C8 000003B8  21680          MVC   968(8,13),952(13)
0000E79E D707 D3D0 D3D0 000003D0 000003D0  21681          XC    976(8,13),976(13)
0000E7A4 41F0 D0C8               000000C8  21682          LA    15,200(0,13)
0000E7A8 E3F0 D3D8 0024          000003D8  21683          STG   15,984(0,13)
0000E7AE 41F0 D0A8               000000A8  21684          LA    15,168(0,13)
0000E7B2 E3F0 D3E0 0024          000003E0  21685          STG   15,992(0,13)
0000E7B8 4110 D3C0               000003C0  21686          LA    1,960(0,13)
0000E7BC E3F0 C570 0004          0000E840  21687          LG    15,@lit_1372_1172 ; unittest_msgq_insert_sort
0000E7C2                                   21688 @@gen_label1469 DS    0H
0000E7C2 05EF                              21689          BALR  14,15
0000E7C4                                   21690 @@gen_label1470 DS    0H
0000E7C4 1A2F                              21691          AR    2,15
                                           21692 * ***
                                           21693 * ***           return fails;
0000E7C6 B914 00F2                         21694          LGFR  15,2
                                           21695 * ***   }
                                           21696 * * **** Start of Epilogue
                                           21697          DCCEPIL
0000E7CA                                   21698+         ds 0h                                                          01-DCCEP
                                           21699+* Epilog
0000E7CA D707 D088 D088 00000088 00000088  21700+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000E7D0 E3D0 D080 0004          00000080  21701+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000E7D6 E3C0 D090 0004          00000090  21702+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000E7DC E3B0 C018 0004          00000018  21703+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000E7E2 E3C0 B010 0021          00000010  21704+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  430 
  Active Usings: @REGION_1372_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E7E8 E3E0 D008 0004          00000008  21705+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000E7EE EB1C D020 0004          00000020  21706+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000E7F4 078E                              21707+         bcr 8,14                if same dsab, just return              01-DCCEP
0000E7F6 E3F0 D010 0024          00000010  21708+         stg 15,16(0,13)         save return code                       01-DCCEP
0000E7FC E300 D018 0024          00000018  21709+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000E802 E3F0 D090 0004          00000090  21710+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000E808 E3F0 F018 0004          00000018  21711+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000E80E 47F0 F040               00000040  21712+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21713+* End of Epilog
                                           21714 * * **** End of Epilogue
0000E818                                   21715          DS    0D
0000E818 000003E8                          21716 @FRAMESIZE_1372 DC F'1000'
0000E81C 00000000
0000E820 000000000000B010                  21717 @lit_1372_1169 DC AD(unittest_msgq_order)
0000E828 0000000000001AA0                  21718 @lit_1372_1168 DC AD(rd_kafka_msg_cmp_msgid)
0000E830 000000000000ECA4                  21719 @lit_1372_1167 DC AD(@strings@)
0000E838 000000000000C110                  21720 @lit_1372_1170 DC AD(unittest_msg_seq_wrap)
0000E840 000000000000E0F8                  21721 @lit_1372_1172 DC AD(unittest_msgq_insert_sort)
0000E848                                   21722          DS 0D
0000E848 45186A0000000000                  21723 @lit_1372_1171 DC XL8'45186A0000000000'
0000E850                                   21724          DS 0D
0000E850 401999999999999A                  21725 @lit_1372_1173 DC XL8'401999999999999A'
0000E858                                   21726          DS 0D
0000E858 4033333333333333                  21727 @lit_1372_1174 DC XL8'4033333333333333'
0000E860                                   21728          DS 0D
0000E860 4130000000000000                  21729 @lit_1372_1175 DC XL8'4130000000000000'
                                           21730          DROP  12
                                           21731 *
                                           21732 *   DSECT for automatic variables in "unittest_msg"
                                           21733 *      (FUNCTION #1372)
                                           21734 *
00000000                00000000 000003C0  21735 @AUTO#unittest_msg DSECT
00000000                                   21736          DS    XL168
000000A8                                   21737 unittest_msg#__cl9#0 DS 32XL1 ; __cl9
000000C8                000000C8 000000A8  21738          ORG   @AUTO#unittest_msg+168
000000A8                                   21739 unittest_msg#fails#0 DS 1F ; fails
000000AC                000000AC 000000C8  21740          ORG   @AUTO#unittest_msg+200
000000C8                                   21741 unittest_msg#__cl8#0 DS 176XL1 ; __cl8
00000178                00000178 00000178  21742          ORG   @AUTO#unittest_msg+376
00000178                                   21743 unittest_msg#__cl7#0 DS 32XL1 ; __cl7
00000198                00000198 00000198  21744          ORG   @AUTO#unittest_msg+408
00000198                                   21745 unittest_msg#__cl6#0 DS 48XL1 ; __cl6
000001C8                000001C8 000001C8  21746          ORG   @AUTO#unittest_msg+456
000001C8                                   21747 unittest_msg#__cl5#0 DS 112XL1 ; __cl5
00000238                00000238 00000238  21748          ORG   @AUTO#unittest_msg+568
00000238                                   21749 unittest_msg#__cl4#0 DS 112XL1 ; __cl4
000002A8                000002A8 000002A8  21750          ORG   @AUTO#unittest_msg+680
000002A8                                   21751 unittest_msg#__cl3#0 DS 96XL1 ; __cl3
00000308                00000308 00000308  21752          ORG   @AUTO#unittest_msg+776
00000308                                   21753 unittest_msg#__cl2#0 DS 80XL1 ; __cl2
00000358                00000358 00000358  21754          ORG   @AUTO#unittest_msg+856
00000358                                   21755 unittest_msg#__cl1#0 DS 48XL1 ; __cl1
                                                                                                                           Page  431 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000388                00000388 00000388  21756          ORG   @AUTO#unittest_msg+904
00000388                                   21757 unittest_msg#__cl0#0 DS 48XL1 ; __cl0
000003B8                000003B8 000003B8  21758          ORG   @AUTO#unittest_msg+952
000003B8                                   21759 unittest_msg#insert_baseline#0 DS 1D ; insert_baseline
                                           21760 *
0000E868                00000000 0000E868  21761 @CODE    CSECT
                                           21762 @@STATIC ALIAS X'7C998492818692816D94A28750'
                                           21763 @@STATIC DXD   219D
                                           21764 *
                                           21765 *  Non-Re-Entrant Data Section
                                           21766 *
0000E868                0000E868 00001848  21767 @DATA    CSECT
                                           21768 @DATA    RMODE ANY
                                           21769 @DATA    AMODE ANY
0000E868 99846D8381939396                  21770 @@T349   DC    X'99846D838193939683'               rd.calloc
0000E871 00                                21771          DC    1X'00'
0000E872 99846D9481939396                  21772 @@T34D   DC    X'99846D948193939683'               rd.malloc
0000E87B 00                                21773          DC    1X'00'
0000E87C 99846D9985819393                  21774 @@T352   DC    X'99846D99858193939683'             rd.realloc
0000E886 0000                              21775          DC    2X'00'
0000E888 99846DA2A39984A4                  21776 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
0000E891 00                                21777          DC    1X'00'
0000E892 99846DA2A3999584                  21778 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
0000E89C 0000                              21779          DC    2X'00'
0000E89E 99846D9985868395                  21780 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0000E8AC 00000000                          21781          DC    4X'00'
0000E8B0 00000000                          21782 @@T65A   DC    4X'00'
0000E8B4 0000001A00000000                  21783          DC    X'0000001A000000000000002200000000' ................
0000E8C4 00000024                          21784          DC    X'00000024'                         ....
0000E8C8 99846D9281869281                  21785 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
0000E8D8 98                                21786          DC    X'98'                               q
0000E8D9 00                                21787          DC    1X'00'
0000E8DA 99846D9281869281                  21788 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
0000E8EA 96A8F0                            21789          DC    X'96A8F0'                           oy0
0000E8ED 00                                21790          DC    1X'00'
0000E8EE 99846D9281869281                  21791 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000E8FE 856D8485A2A39996                  21792          DC    X'856D8485A2A39996A8F0'             e.destroy0
0000E908 0000                              21793          DC    2X'00'
0000E90A 99846D9281869281                  21794 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000E91A 856D8485936DA296                  21795          DC    X'856D8485936DA296A4998385'         e.del.source
0000E926 0000                              21796          DC    2X'00'
0000E928 99846D9281869281                  21797 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000E938 856D8485936DA296                  21798          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
0000E948 A49995                            21799          DC    X'A49995'                           urn
0000E94B 00                                21800          DC    1X'00'
0000E94C 99846D9281869281                  21801 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000E95C 856DA39989878785                  21802          DC    X'856DA3998987878599'               e.trigger
0000E965 00                                21803          DC    1X'00'
0000E966 99846D9281869281                  21804 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000E976 856D8485A2A39996                  21805          DC    X'856D8485A2A39996A8'               e.destroy
0000E97F 00                                21806          DC    1X'00'
0000E980 99846D9281869281                  21807 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
                                                                                                                           Page  432 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E990 856D8489A2818293                  21808          DC    X'856D8489A281829385'               e.disable
0000E999 00                                21809          DC    1X'00'
0000E99A 99846DA394978182                  21810 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
0000E9AA F0                                21811          DC    X'F0'                               0
0000E9AB 00                                21812          DC    1X'00'
0000E9AC 99846D9281869281                  21813 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
0000E9BC 81A385                            21814          DC    X'81A385'                           ate
0000E9BF 00                                21815          DC    1X'00'
0000E9C0 99846D9281869281                  21816 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
0000E9D0 819389A9856D8199                  21817          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
0000E9DE 0000                              21818          DC    2X'00'
0000E9E0 99846D9281869281                  21819 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
0000E9F0 6D899589A3                        21820          DC    X'6D899589A3'                       .init
0000E9F5 00                                21821          DC    1X'00'
0000E9F6 99846D9281869281                  21822 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
0000EA06 87A26DA2A482                      21823          DC    X'87A26DA2A482'                     gs.sub
0000EA0C 0000                              21824          DC    2X'00'
0000EA0E 99846D9281869281                  21825 @@TA85   DC    X'99846D92818692816DA3A7956D818484' rd.kafka.txn.add
0000EA1E 6D978199A389A389                  21826          DC    X'6D978199A389A3899695'             .partition
0000EA28 0000                              21827          DC    2X'00'
0000EA2A 99846D9281869281                  21828 @@TADE   DC    X'99846D92818692816D97999684A48385' rd.kafka.produce
0000EA3A A581                              21829          DC    X'A581'                             va
0000EA3C 0000                              21830          DC    2X'00'
0000EA3E 99846D9281869281                  21831 @@TB29   DC    X'99846D92818692816D94A287986DA297' rd.kafka.msgq.sp
0000EA4E 9389A3                            21832          DC    X'9389A3'                           lit
0000EA51 00                                21833          DC    1X'00'
0000EA52 99846D9281869281                  21834 @@TB6D   DC    X'99846D92818692816D94A2876D978199' rd.kafka.msg.par
0000EA62 A389A38996958599                  21835          DC    X'A389A38996958599'                 titioner
0000EA6A 0000                              21836          DC    2X'00'
0000EA6C 99846D9281869281                  21837 @@TB7D   DC    X'99846D92818692816D9485A2A2818785' rd.kafka.message
0000EA7C 6D8785A3                          21838          DC    X'6D8785A3'                         .get
0000EA80 0000                              21839          DC    2X'00'
0000EA82 99846D9281869281                  21840 @@TB91   DC    X'99846D92818692816D94A2876D888581' rd.kafka.msg.hea
0000EA92 848599A26D978199                  21841          DC    X'848599A26D978199A285'             ders.parse
0000EA9C 0000                              21842          DC    2X'00'
0000EA9E 99846D9281869281                  21843 @@TBB9   DC    X'99846D92818692816D9485A2A2818785' rd.kafka.message
0000EAAE 6DA285A36D888581                  21844          DC    X'6DA285A36D888581848599A2'         .set.headers
0000EABA 0000                              21845          DC    2X'00'
0000EABC 99846D9281869281                  21846 @@TBC1   DC    X'99846D92818692816D94A287986D84A4' rd.kafka.msgq.du
0000EACC 9497                              21847          DC    X'9497'                             mp
0000EACE 0000                              21848          DC    2X'00'
0000EAD0 99846D9281869281                  21849 @@TBC4   DC    X'99846D92818692816D94A2878281A383' rd.kafka.msgbatc
0000EAE0 886D8485A2A39996                  21850          DC    X'886D8485A2A39996A8'               h.destroy
0000EAE9 00                                21851          DC    1X'00'
0000EAEA 99846D9281869281                  21852 @@TBC9   DC    X'99846D92818692816D94A2878281A383' rd.kafka.msgbatc
0000EAFA 886D899589A3                      21853          DC    X'886D899589A3'                     h.init
0000EB00 0000                              21854          DC    2X'00'
0000EB02 99846D9281869281                  21855 @@TBCC   DC    X'99846D92818692816D94A2878281A383' rd.kafka.msgbatc
0000EB12 886DA285A36D8689                  21856          DC    X'886DA285A36D868999A2A36D94A287'   h.set.first.msg
0000EB21 00                                21857          DC    1X'00'
0000EB22 99846D9281869281                  21858 @@TBDE   DC    X'99846D92818692816D94A287986DA585' rd.kafka.msgq.ve
0000EB32 998986A86D969984                  21859          DC    X'998986A86D9699848599F0'           rify.order0
                                                                                                                           Page  433 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EB3D 00                                21860          DC    1X'00'
0000EB3E A4A36D99846D9281                  21861 @@TBE1   DC    X'A4A36D99846D92818692816D94A2876D' ut.rd.kafka.msg.
0000EB4E 9585A6                            21862          DC    X'9585A6'                           new
0000EB51 00                                21863          DC    1X'00'
0000EB52 A4A36DA585998986                  21864 @@TBF1   DC    X'A4A36DA585998986A86D94A287986D96' ut.verify.msgq.o
0000EB62 99848599                          21865          DC    X'99848599'                         rder
0000EB66 0000                              21866          DC    2X'00'
0000EB68 A49589A3A385A2A3                  21867 @@TBFD   DC    X'A49589A3A385A2A36D94A287986D9699' unittest.msgq.or
0000EB78 848599                            21868          DC    X'848599'                           der
0000EB7B 0000000000                        21869          DC    5X'00'
0000EB80 0000000000000000                  21870 @@TC00   DC    20X'00'
0000EB94 0000000100000001                  21871          DC    X'0000000100000001'                 ........
0000EB9C 0000000000000000                  21872          DC    8X'00'
0000EBA4 8000000100000001                  21873          DC    X'8000000100000001'                 ........
0000EBAC 0000000000000000                  21874          DC    8X'00'
0000EBB4 80000000                          21875          DC    X'80000000'                         ....
0000EBB8 0000000000000000                  21876          DC    12X'00'
0000EBC4 7FFFFFFF7FFFFFFF                  21877          DC    X'7FFFFFFF7FFFFFFF'                 ........
0000EBCC 0000000000000000                  21878          DC    8X'00'
0000EBD4 7FFFFFFE7FFFFFFE                  21879          DC    X'7FFFFFFE7FFFFFFE'                 ........
0000EBDC 0000000000000000                  21880          DC    8X'00'
0000EBE4 7FFFFFFD7FFFFFFD                  21881          DC    X'7FFFFFFD7FFFFFFD0000000000000001' ................
0000EBF4 FFFFFFFE7FFFFFFE                  21882          DC    X'FFFFFFFE7FFFFFFE0000000000000001' ................
0000EC04 FFFFFFFF7FFFFFFF                  21883          DC    X'FFFFFFFF7FFFFFFF0000000000000004' ................
0000EC14 0000000000000000                  21884          DC    12X'00'
0000EC20 0000000800000003                  21885          DC    X'000000080000000300000003'         ............
0000EC2C 0000000000000000                  21886          DC    8X'00'
0000EC34 00000B7B00000B7B                  21887          DC    X'00000B7B00000B7B00000000FFFFFFFF' ................
0000EC44 FFFFFFFFFFFFFFFF                  21888          DC    X'FFFFFFFFFFFFFFFF'                 ........
0000EC4C 00000000                          21889          DC    4X'00'
0000EC50 A49589A3A385A2A3                  21890 @@TC03   DC    X'A49589A3A385A2A36D94A2876DA28598' unittest.msg.seq
0000EC60 6DA6998197                        21891          DC    X'6DA6998197'                       .wrap
0000EC65 00                                21892          DC    1X'00'
0000EC66 A49589A3A385A2A3                  21893 @@TC1B   DC    X'A49589A3A385A2A36D94A287986D8995' unittest.msgq.in
0000EC76 A28599A36D819393                  21894          DC    X'A28599A36D8193936DA29699A3'       sert.all.sort
0000EC83 00                                21895          DC    1X'00'
0000EC84 A49589A3A385A2A3                  21896 @@TC2E   DC    X'A49589A3A385A2A36D94A287986D8995' unittest.msgq.in
0000EC94 A28599A36D858183                  21897          DC    X'A28599A36D858183886DA29699A3'     sert.each.sort
0000ECA2 00                                21898          DC    1X'00'
0000ECA4                                   21899 @strings@ DS   0H
0000ECA4 C37AE081A2879281                  21900          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000ECB4 849281869281E0A2                  21901          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000ECC4 97009985868395A3                  21902          DC    X'97009985868395A340A2A48260A98599' p.refcnt.sub.zer
0000ECD4 96005A5C7F998586                  21903          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
0000ECE4 A98599967F00E495                  21904          DC    X'A98599967F00E495929596A695606C88' zero..Unknown..h
0000ECF4 846F0000C37AE081                  21905          DC    X'846F0000C37AE081A2879281869281E0' d...C..asgkafka.
0000ED04 9389829984928186                  21906          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
0000ED14 8492818692816D94                  21907          DC    X'8492818692816D94A2874B88000081A2' dkafka.msg.h..as
0000ED24 A28599A37A409992                  21908          DC    X'A28599A37A4099929498606E99929498' sert..rkmq..rkmq
0000ED34 6D94A2876D8395A3                  21909          DC    X'6D94A2876D8395A3406E40F0000081A2' .msg.cnt...0..as
0000ED44 A28599A37A409992                  21910          DC    X'A28599A37A4099929498606E99929498' sert..rkmq..rkmq
0000ED54 6D94A2876D82A8A3                  21911          DC    X'6D94A2876D82A8A385A2406E7E404D89' .msg.bytes.....i
                                                                                                                           Page  434 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ED64 95A3F6F46DA35D4D                  21912          DC    X'95A3F6F46DA35D4D999294606E999294' nt64.t..rkm..rkm
0000ED74 6D9385954E999294                  21913          DC    X'6D9385954E999294606E9992946D9285' .len.rkm..rkm.ke
0000ED84 A86D9385955D0000                  21914          DC    X'A86D9385955D0000D3D9D2E30000C37A' y.len...LRKT..C.
0000ED94 E081A28792818692                  21915          DC    X'E081A2879281869281E0938982998492' .asgkafka.librdk
0000EDA4 81869281E0A29983                  21916          DC    X'81869281E0A29983E099849281869281' afka.src.rdkafka
0000EDB4 6D8995A34B880000                  21917          DC    X'6D8995A34B88000081A2A28599A37A40' .int.h..assert..
0000EDC4 9992606E99926D83                  21918          DC    X'9992606E99926D83A499996D94A287A2' rk..rk.curr.msgs
0000EDD4 4B8395A3406E7E40                  21919          DC    X'4B8395A3406E7E408395A34050504099' .cnt....cnt....r
0000EDE4 92606E99926D83A4                  21920          DC    X'92606E99926D83A499996D94A287A24B' k..rk.curr.msgs.
0000EDF4 A289A985406E7E40                  21921          DC    X'A289A985406E7E40A289A98500000000' size....size....
0000EE04 9596A3400000C1C4                  21922          DC    X'9596A3400000C1C4C4D7C1D9E3E20000' not...ADDPARTS..
0000EE14 D48199928584406C                  21923          DC    X'D48199928584406C4B5CA240AD6C84BD' Marked....s...d.
0000EE24 4081A240978199A3                  21924          DC    X'4081A240978199A340968640A3998195' .as.part.of.tran
0000EE34 A28183A38996957A                  21925          DC    X'A28183A38996957A406CA2A283888584' saction...ssched
0000EE44 A493899587409985                  21926          DC    X'A4938995874099858789A2A39981A389' uling.registrati
0000EE54 96950000D7999684                  21927          DC    X'96950000D7999684A483899587409596' on..Producing.no
0000EE64 A34081939396A685                  21928          DC    X'A34081939396A6858440A28995838540' t.allowed.since.
0000EE74 8140979985A58996                  21929          DC    X'8140979985A58996A4A2408681A38193' a.previous.fatal
0000EE84 40859999969940A6                  21930          DC    X'40859999969940A681A240998189A285' .error.was.raise
0000EE94 847A406CA200D799                  21931          DC    X'847A406CA200D7999684A48389958740' d...s.Producing.
0000EEA4 9596A34081939396                  21932          DC    X'9596A34081939396A6858440899540A3' not.allowed.in.t
0000EEB4 998195A28183A389                  21933          DC    X'998195A28183A3899695819340A2A381' ransactional.sta
0000EEC4 A385406CA200E5E3                  21934          DC    X'A385406CA200E5E3E8D7C56DC8C5C1C4' te..s.VTYPE.HEAD
0000EED4 C5D94081958440E5                  21935          DC    X'C5D94081958440E5E3E8D7C56DC8C5C1' ER.and.VTYPE.HEA
0000EEE4 C4C5D9E240819985                  21936          DC    X'C4C5D9E2408199854094A4A3A4819393' DERS.are.mutuall
0000EEF4 A84085A78393A4A2                  21937          DC    X'A84085A78393A4A289A58500C6818993' y.exclusive.Fail
0000EF04 858440A396408184                  21938          DC    X'858440A3964081848440888581848599' ed.to.add.header
0000EF14 7A406CA20000E5E3                  21939          DC    X'7A406CA20000E5E3E8D7C56DC8C5C1C4' ...s..VTYPE.HEAD
0000EF24 C5D9E24081958440                  21940          DC    X'C5D9E24081958440E5E3E8D7C56DC8C5' ERS.and.VTYPE.HE
0000EF34 C1C4C5D940819985                  21941          DC    X'C1C4C5D9408199854094A4A3A4819393' ADER.are.mutuall
0000EF44 A84085A78393A4A2                  21942          DC    X'A84085A78393A4A289A58500E495A2A4' y.exclusive.Unsu
0000EF54 97979699A3858440                  21943          DC    X'97979699A3858440E5E3E8D7C5406C84' pported.VTYPE..d
0000EF64 0000C37AE081A287                  21944          DC    X'0000C37AE081A2879281869281E09389' ..C..asgkafka.li
0000EF74 8299849281869281                  21945          DC    X'8299849281869281E0A29983E0998492' brdkafka.src.rdk
0000EF84 818692816D94A287                  21946          DC    X'818692816D94A2874B8300005A859999' afka.msg.c...err
0000EF94 96990000E3969789                  21947          DC    X'96990000E39697898340958194854096' or..Topic.name.o
0000EFA4 99409682918583A3                  21948          DC    X'99409682918583A340998598A4899985' r.object.require
0000EFB4 8400C68189938584                  21949          DC    X'8400C6818993858440A3964097999684' d.Failed.to.prod
0000EFC4 A48385409485A2A2                  21950          DC    X'A48385409485A2A28187857A406CA200' uce.message...s.
0000EFD4 C6818993858440A3                  21951          DC    X'C6818993858440A39640859598A485A4' Failed.to.enqueu
0000EFE4 85409485A2A28187                  21952          DC    X'85409485A2A28187857A406CA2008599' e.message...s.er
0000EFF4 999699405A7E404D                  21953          DC    X'999699405A7E404D4DA5968984405C5D' ror......void...
0000F004 F05D0000868999A2                  21954          DC    X'F05D0000868999A2A36D99898788A340' 0...first.right.
0000F014 5A7E404D4D509385                  21955          DC    X'5A7E404D4D50938586A398606E999294' ......leftq..rkm
0000F024 986D94A287A25D60                  21956          DC    X'986D94A287A25D606EA398886D868999' q.msgs...tqh.fir
0000F034 A2A35D00D7C1D9E3                  21957          DC    X'A2A35D00D7C1D9E3C9E3C9D6D5C5D900' st..PARTITIONER.
0000F044 6CA240AD6C84BD40                  21958          DC    X'6CA240AD6C84BD4089A240A388854095' .s...d..is.the.n
0000F054 85A640A2A3898392                  21959          DC    X'85A640A2A3898392A840978199A389A3' ew.sticky.partit
0000F064 89969500D5D6E3D9                  21960          DC    X'89969500D5D6E3D9C5C1C3C8C5C40000' ion.NOTREACHED..
0000F074 81A2A28599A37A40                  21961          DC    X'81A2A28599A37A405A5C7FD5D6E3D9C5' assert.....NOTRE
0000F084 C1C3C8C5C47F0000                  21962          DC    X'C1C3C8C5C47F0000A495888195849385' ACHED...unhandle
0000F094 84409697A3A89785                  21963          DC    X'84409697A3A89785000081A2A28599A3' d.optype..assert
                                                                                                                           Page  435 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F0A4 7A405A5C7FA49588                  21964          DC    X'7A405A5C7FA495888195849385844096' .....unhandled.o
0000F0B4 97A3A897857F0000                  21965          DC    X'97A3A897857F0000615C40D5D6E3D9C5' ptype......NOTRE
0000F0C4 C1C3C8C5C4405C61                  21966          DC    X'C1C3C8C5C4405C6140A589969381A385' ACHED....violate
0000F0D4 84005A5C7F615C40                  21967          DC    X'84005A5C7F615C40D5D6E3D9C5C1C3C8' d.......NOTREACH
0000F0E4 C5C4405C6140A589                  21968          DC    X'C5C4405C6140A589969381A385847F00' ED....violated..
0000F0F4 81A2A28599A37A40                  21969          DC    X'81A2A28599A37A40999282A486606E99' assert..rkbuf..r
0000F104 9282A4866D999282                  21970          DC    X'9282A4866D99928200007A40A5819989' kbuf.rkb....vari
0000F114 95A340978199A289                  21971          DC    X'95A340978199A2899587408681899385' nt.parsing.faile
0000F124 8400899583969999                  21972          DC    X'84008995839699998583A34082999692' d.incorrect.brok
0000F134 85994BA58599A289                  21973          DC    X'85994BA58599A28996954B8681939382' er.version.fallb
0000F144 8183926F0000D7D9                  21974          DC    X'8183926F0000D7D9D6E3D6E4C6D3D6E6' ack...PROTOUFLOW
0000F154 0000D79996A39683                  21975          DC    X'0000D79996A396839693409985818440' ..Protocol.read.
0000F164 82A48686859940A4                  21976          DC    X'82A48686859940A495848599869396A6' buffer.underflow
0000F174 40869699406CA240                  21977          DC    X'40869699406CA240A56C88844081A340' .for..s.v.hd.at.
0000F184 6CA9A4616CA9A440                  21978          DC    X'6CA9A4616CA9A4404D6CA27A6C895D7A' .zu..zu...s..i..
0000F194 4085A7978583A385                  21979          DC    X'4085A7978583A38584406CA9A44082A8' .expected..zu.by
0000F1A4 A385A2406E406CA9                  21980          DC    X'A385A2406E406CA9A440998594818995' tes....zu.remain
0000F1B4 8995874082A8A385                  21981          DC    X'8995874082A8A385A2404D6CA25D6CA2' ing.bytes...s..s
0000F1C4 00007A4000009992                  21982          DC    X'00007A400000999294606E9992946D88' ......rkm..rkm.h
0000F1D4 8581848599A2405A                  21983          DC    X'8581848599A2405A7E40888499A20000' eaders....hdrs..
0000F1E4 6CA24094A287986D                  21984          DC    X'6CA24094A287986D84A49497404D6C84' .s.msgq.dump...d
0000F1F4 409485A2A2818785                  21985          DC    X'409485A2A2818785A26B406CA9A44082' .messages...zu.b
0000F204 A8A385A25D7A1500                  21986          DC    X'A8A385A25D7A150040AD6C84BD7C6C93' ytes.......d...l
0000F214 93847A4099929440                  21987          DC    X'93847A409992944094A2878984406C93' ld..rkm.msgid..l
0000F224 93A47A407F6C4B5C                  21988          DC    X'93A47A407F6C4B5CA27F15008395A34E' lu......s...cnt.
0000F234 4E404C4099929498                  21989          DC    X'4E404C4099929498606E999294986D94' ....rkmq..rkmq.m
0000F244 A2876D8395A30000                  21990          DC    X'A2876D8395A300004D4D4D504D509992' sg.cnt........rk
0000F254 9482606E94A28798                  21991          DC    X'9482606E94A287985D606E999294986D' mb..msgq...rkmq.
0000F264 94A287A25D606EA3                  21992          DC    X'94A287A25D606EA398886D868999A2A3' msgs...tqh.first
0000F274 5D407E7E404D4D4D                  21993          DC    X'5D407E7E404D4D4DA5968984405C5DF0' ........void...0
0000F284 5D5D5D0099929482                  21994          DC    X'5D5D5D0099929482606E868999A2A36D' ....rkmb..first.
0000F294 94A2878984407E7E                  21995          DC    X'94A2878984407E7E40F0000095618100' msgid....0..n.a.
0000F2A4 6CA27A6C847A406C                  21996          DC    X'6CA27A6C847A406CA240AD6C84BD7A40' .s..d...s...d...
0000F2B4 999294407B6C8440                  21997          DC    X'999294407B6C84404D6C975D4094A287' rkm...d...p..msg
0000F2C4 8984406C9393A47A                  21998          DC    X'8984406C9393A47A4085A7978583A385' id..llu..expecte
0000F2D4 844094A287898440                  21999          DC    X'844094A2878984406C9393A415006CA2' d.msgid..llu...s
0000F2E4 7A6C847A406CA240                  22000          DC    X'7A6C847A406CA240AD6C84BD7A409992' ..d...s...d...rk
0000F2F4 94407B6C84404D6C                  22001          DC    X'94407B6C84404D6C975D4094A2878984' m...d...p..msgid
0000F304 406C9393A47A4085                  22002          DC    X'406C9393A47A4085A7978583A3858440' ..llu..expected.
0000F314 899583998581A285                  22003          DC    X'899583998581A285844094A287898440' increased.msgid.
0000F324 6E7E406C9393A415                  22004          DC    X'6E7E406C9393A41500006CA27A6C847A' ....llu....s..d.
0000F334 406CA240AD6C84BD                  22005          DC    X'406CA240AD6C84BD7A40999294407B6C' ..s...d...rkm...
0000F344 84404D6C975D4094                  22006          DC    X'84404D6C975D4094A2878984406C9393' d...p..msgid..ll
0000F354 A47A409396969740                  22007          DC    X'A47A40939696974089954098A485A485' u..loop.in.queue
0000F364 6F1500005A859999                  22008          DC    X'6F1500005A8599998395A30094A287A2' .....errcnt.msgs
0000F374 89A985404C7E40A2                  22009          DC    X'89A985404C7E40A289A98596864D5C99' ize....sizeof..r
0000F384 92945D00D9C4E4E3                  22010          DC    X'92945D00D9C4E4E37A40C9D5C6D67A40' km..RDUT..INFO..
0000F394 6CA27A6C847A406C                  22011          DC    X'6CA27A6C847A406CA27A40007E7E0000' .s..d...s.......
0000F3A4 6E7E00006CA27A40                  22012          DC    X'6E7E00006CA27A4085A7978583A38584' .....s..expected
0000F3B4 4094A2878984406C                  22013          DC    X'4094A2878984406CA2406C9393A44095' .msgid..s..llu.n
0000F3C4 96A3406C9393A440                  22014          DC    X'96A3406C9393A44081A34089958485A7' ot..llu.at.index
0000F3D4 407B6C8400001500                  22015          DC    X'407B6C84000015006CA27A4093969697' ...d.....s..loop
                                                                                                                           Page  436 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F3E4 4089954098A485A4                  22016          DC    X'4089954098A485A4856F00001BADF3F1' .in.queue.....31
0000F3F4 94D9C4E4E37A40C6                  22017          DC    X'94D9C4E4E37A40C6C1C9D37A406CA27A' mRDUT..FAIL...s.
0000F404 6C847A406CA27A40                  22018          DC    X'6C847A406CA27A4081A2A28599A34086' .d...s..assert.f
0000F414 81899385847A405A                  22019          DC    X'81899385847A405A86818993A27A4000' ailed...fails...
0000F424 E28585406C844097                  22020          DC    X'E28585406C8440979985A58996A4A240' See..d.previous.
0000F434 86818993A499854D                  22021          DC    X'86818993A499854DA25D00001BADF094' failure.s.....0m
0000F444 15005A86818993A2                  22022          DC    X'15005A86818993A20000C6C9C6D60000' ...fails..FIFO..
0000F454 D3C9C6D600006CA2                  22023          DC    X'D3C9C6D600006CA27A40A385A2A38995' LIFO...s..testin
0000F464 87408995406CA240                  22024          DC    X'87408995406CA2409496848500008184' g.in..s.mode..ad
0000F474 84858400A2859584                  22025          DC    X'84858400A28595844099859496A58584' ded.send.removed
0000F484 0000A28595849800                  22026          DC    X'0000A285958498001BADF3F194D9C4E4' ..sendq...31mRDU
0000F494 E37A40C6C1C9D37A                  22027          DC    X'E37A40C6C1C9D37A406CA27A6C847A40' T..FAIL...s..d..
0000F4A4 6CA27A4081A2A285                  22028          DC    X'6CA27A4081A2A28599A3408681899385' .s..assert.faile
0000F4B4 847A4099846D9281                  22029          DC    X'847A4099846D92818692816D94A28798' d..rd.kafka.msgq
0000F4C4 6D9385954D50A285                  22030          DC    X'6D9385954D50A2859584985D407E7E40' .len..sendq.....
0000F4D4 F07A4000A2859584                  22031          DC    X'F07A4000A28595849840C6C9C6D640A2' 0...sendq.FIFO.s
0000F4E4 8896A49384408285                  22032          DC    X'8896A4938440828540859497A3A86B40' hould.be.empty..
0000F4F4 9596A340839695A3                  22033          DC    X'9596A340839695A3818995406C844094' not.contain..d.m
0000F504 85A2A2818785A200                  22034          DC    X'85A2A2818785A20099846D9281869281' essages.rd.kafka
0000F514 6D94A287986D9385                  22035          DC    X'6D94A287986D9385954D50A285958498' .msgq.len..sendq
0000F524 5D407E7E40F00000                  22036          DC    X'5D407E7E40F000009985818484858400' .....0..readded.
0000F534 A285958440998594                  22037          DC    X'A28595844099859496A58584407BF200' send.removed..2.
0000F544 A285958498407BF2                  22038          DC    X'A285958498407BF20000998581848485' sendq..2..readde
0000F554 84407BF200009596                  22039          DC    X'84407BF2000095964094969985409985' d..2..no.more.re
0000F564 A3998985A2001BAD                  22040          DC    X'A3998985A2001BADF3F194D9C4E4E37A' tries...31mRDUT.
0000F574 40C6C1C9D37A406C                  22041          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000F584 7A4081A2A28599A3                  22042          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000F594 4099846D92818692                  22043          DC    X'4099846D92818692816D94A287986D93' .rd.kafka.msgq.l
0000F5A4 85954D50A2859584                  22044          DC    X'85954D50A285958498F25D407E7E40F0' en..sendq2.....0
0000F5B4 7A400000A2859584                  22045          DC    X'7A400000A285958498F240C6C9C6D640' ....sendq2.FIFO.
0000F5C4 A28896A493844082                  22046          DC    X'A28896A4938440828540859497A3A86B' should.be.empty.
0000F5D4 409596A340839695                  22047          DC    X'409596A340839695A3818995406C8440' .not.contain..d.
0000F5E4 9485A2A2818785A2                  22048          DC    X'9485A2A2818785A2000099846D928186' messages..rd.kaf
0000F5F4 92816D94A287986D                  22049          DC    X'92816D94A287986D9385954D50A28595' ka.msgq.len..sen
0000F604 8498F25D407E7E40                  22050          DC    X'8498F25D407E7E40F0008995918583A3' dq2.....0.inject
0000F614 00001BADF3F194D9                  22051          DC    X'00001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
0000F624 D37A406CA27A6C84                  22052          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000F634 A28599A340868189                  22053          DC    X'A28599A3408681899385847A4099846D' sert.failed..rd.
0000F644 92818692816D94A2                  22054          DC    X'92818692816D94A287986DA289A9854D' kafka.msgq.size.
0000F654 50999294985D407E                  22055          DC    X'50999294985D407E7E4099846D928186' .rkmq.....rd.kaf
0000F664 92816D94A287986D                  22056          DC    X'92816D94A287986D9385954D50999294' ka.msgq.len..rkm
0000F674 985D405C4094A287                  22057          DC    X'985D405C4094A287A289A9857A400000' q....msgsize....
0000F684 85A7978583A38584                  22058          DC    X'85A7978583A385844094A2879840A289' expected.msgq.si
0000F694 A985406CA9A46B40                  22059          DC    X'A985406CA9A46B409596A3406CA9A400' ze..zu..not..zu.
0000F6A4 99846D9281869281                  22060          DC    X'99846D92818692816D94A287986DA289' rd.kafka.msgq.si
0000F6B4 A9854D5099929498                  22061          DC    X'A9854D50999294985D407E7E4099846D' ze..rkmq.....rd.
0000F6C4 92818692816D94A2                  22062          DC    X'92818692816D94A287986D9385954D50' kafka.msgq.len..
0000F6D4 999294985D405C40                  22063          DC    X'999294985D405C4094A287A289A98500' rkmq....msgsize.
0000F6E4 1BADF3F194D9C4E4                  22064          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
0000F6F4 406CA27A6C847A40                  22065          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
0000F704 99A3408681899385                  22066          DC    X'99A3408681899385847A40A6A2859840' rt.failed..wseq.
0000F714 7E7E4085A797AD89                  22067          DC    X'7E7E4085A797AD89BD4B96A4A37A4000' ...exp.i..out...
                                                                                                                           Page  437 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F724 C5A7978583A38584                  22068          DC    X'C5A7978583A3858440A285986DA69981' Expected.seq.wra
0000F734 974D6C9393845D40                  22069          DC    X'974D6C9393845D40606E406C846B4095' p..lld......d..n
0000F744 96A3406C8400A6A2                  22070          DC    X'96A3406C8400A6A28598407E7E4085A7' ot..d.wseq....ex
0000F754 97AD89BD4B96A4A3                  22071          DC    X'97AD89BD4B96A4A300001BADF3F294D9' p.i..out....32mR
0000F764 C4E4E37A40D7C1E2                  22072          DC    X'C4E4E37A40D7C1E2E27A406CA27A6C84' DUT..PASS...s..d
0000F774 7A406CA21BADF094                  22073          DC    X'7A406CA21BADF0941500E385A2A38995' ...s..0m..Testin
0000F784 874094A287984089                  22074          DC    X'874094A28798408995A28599A3404D81' g.msgq.insert..a
0000F794 93935D4085868689                  22075          DC    X'93935D40858686898389859583A87A40' ll..efficiency..
0000F7A4 6CA20000C2858789                  22076          DC    X'6CA20000C285878995408995A28599A3' .s..Begin.insert
0000F7B4 409686406C844094                  22077          DC    X'409686406C84409485A2A2818785A240' .of..d.messages.
0000F7C4 8995A396408485A2                  22078          DC    X'8995A396408485A2A39840A689A38840' into.destq.with.
0000F7D4 6C84409485A2A281                  22079          DC    X'6C84409485A2A2818785A200C4969585' .d.messages.Done
0000F7E4 7A40A3969692406C                  22080          DC    X'7A40A3969692406C939384A4A26B406C' ..took..lldus...
0000F7F4 4BF486A4A26194A2                  22081          DC    X'4BF486A4A26194A287001BADF3F194D9' .4fus.msg...31mR
0000F804 C4E4E37A40C6C1C9                  22082          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000F814 7A406CA27A4081A2                  22083          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000F824 9385847A4099846D                  22084          DC    X'9385847A4099846D92818692816D94A2' led..rd.kafka.ms
0000F834 87986D9385954D50                  22085          DC    X'87986D9385954D50A29983985D407E7E' gq.len..srcq....
0000F844 40F07A400000A299                  22086          DC    X'40F07A400000A299839840A28896A493' .0....srcq.shoul
0000F854 8440828540859497                  22087          DC    X'8440828540859497A3A86B4082A4A340' d.be.empty..but.
0000F864 839695A3818995A2                  22088          DC    X'839695A3818995A2406C84409485A2A2' contains..d.mess
0000F874 818785A200009984                  22089          DC    X'818785A2000099846D92818692816D94' ages..rd.kafka.m
0000F884 A287986D9385954D                  22090          DC    X'A287986D9385954D50A29983985D407E' sgq.len..srcq...
0000F894 7E40F0001BADF3F1                  22091          DC    X'7E40F0001BADF3F194D9C4E4E37A40C6' ..0...31mRDUT..F
0000F8A4 C1C9D37A406CA27A                  22092          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
0000F8B4 81A2A28599A34086                  22093          DC    X'81A2A28599A3408681899385847A4099' assert.failed..r
0000F8C4 846D92818692816D                  22094          DC    X'846D92818692816D94A287986D938595' d.kafka.msgq.len
0000F8D4 4D508485A2A3985D                  22095          DC    X'4D508485A2A3985D407E7E404D8995A3' ..destq......int
0000F8E4 5D8395A37A400000                  22096          DC    X'5D8395A37A4000008485A2A39840A288' .cnt....destq.sh
0000F8F4 96A4938440839695                  22097          DC    X'96A4938440839695A3818995406C8440' ould.contain..d.
0000F904 9485A2A2818785A2                  22098          DC    X'9485A2A2818785A26B409596A3406C84' messages..not..d
0000F914 000099846D928186                  22099          DC    X'000099846D92818692816D94A287986D' ..rd.kafka.msgq.
0000F924 9385954D508485A2                  22100          DC    X'9385954D508485A2A3985D407E7E404D' len..destq......
0000F934 8995A35D8395A300                  22101          DC    X'8995A35D8395A3008186A38599001BAD' int.cnt.after...
0000F944 F3F194D9C4E4E37A                  22102          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000F954 A27A6C847A406CA2                  22103          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000F964 408681899385847A                  22104          DC    X'408681899385847A4099846D92818692' .failed..rd.kafk
0000F974 816D94A287986DA2                  22105          DC    X'816D94A287986DA289A9854D508485A2' a.msgq.size..des
0000F984 A3985D407E7E40A3                  22106          DC    X'A3985D407E7E40A396A3A289A9857A40' tq.....totsize..
0000F994 000085A7978583A3                  22107          DC    X'000085A7978583A38584408485A2A398' ..expected.destq
0000F9A4 40A289A98540A396                  22108          DC    X'40A289A98540A396408285406CA9A440' .size.to.be..zu.
0000F9B4 82A8A385A26B4095                  22109          DC    X'82A8A385A26B409596A3406CA9A40000' bytes..not..zu..
0000F9C4 99846D9281869281                  22110          DC    X'99846D92818692816D94A287986DA289' rd.kafka.msgq.si
0000F9D4 A9854D508485A2A3                  22111          DC    X'A9854D508485A2A3985D407E7E40A396' ze..destq.....to
0000F9E4 A3A289A985001BAD                  22112          DC    X'A3A289A985001BADF3F194D9C4E4E37A' tsize...31mRDUT.
0000F9F4 40C6C1C9D37A406C                  22113          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000FA04 7A4081A2A28599A3                  22114          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000FA14 405A4DA4A26D9785                  22115          DC    X'405A4DA4A26D9785996D94A287406E40' ...us.per.msg...
0000FA24 9481A76DA4A26D97                  22116          DC    X'9481A76DA4A26D9785996D94A287404E' max.us.per.msg..
0000FA34 40F04BF0F0F0F15D                  22117          DC    X'40F04BF0F0F0F15D7A4000009481A789' .0.0001.....maxi
0000FA44 94A49440A4A26194                  22118          DC    X'94A49440A4A26194A2874085A7838585' mum.us.msg.excee
0000FA54 8485847A406C4BF4                  22119          DC    X'8485847A406C4BF486406E406C4BF486' ded....4f.....4f
                                                                                                                           Page  438 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FA64 40A4A26194A28700                  22120          DC    X'40A4A26194A287005A4DA4A26D978599' .us.msg...us.per
0000FA74 6D94A287406E4094                  22121          DC    X'6D94A287406E409481A76DA4A26D9785' .msg...max.us.pe
0000FA84 996D94A287404E40                  22122          DC    X'996D94A287404E40F04BF0F0F0F15D00' r.msg...0.0001..
0000FA94 1BADF3F394D9C4E4                  22123          DC    X'1BADF3F394D9C4E4E37A40E6C1D9D57A' ..33mRDUT..WARN.
0000FAA4 406CA27A6C847A40                  22124          DC    X'406CA27A6C847A406CA27A400000E385' ..s..d...s....Te
0000FAB4 A2A38995874094A2                  22125          DC    X'A2A38995874094A28798408995A28599' sting.msgq.inser
0000FAC4 A3404D858183885D                  22126          DC    X'A3404D858183885D4085868689838985' t..each..efficie
0000FAD4 9583A87A406CA200                  22127          DC    X'9583A87A406CA200E396A381937A406C' ncy...s.Total...
0000FAE4 4BF486A4A26194A2                  22128          DC    X'4BF486A4A26194A2874096A58599406C' .4fus.msg.over..
0000FAF4 939384409485A2A2                  22129          DC    X'939384409485A2A2818785A240899540' lld.messages.in.
0000FB04 6C939384A4A20000                  22130          DC    X'6C939384A4A200008785A3408281A285' .lldus..get.base
0000FB14 93899585408995A2                  22131          DC    X'93899585408995A28599A340A3899485' line.insert.time
0000FB24 0000A28995879385                  22132          DC    X'0000A28995879385609485A2A2818785' ..single.message
0000FB34 409981958785A200                  22133          DC    X'409981958785A200948195A8409485A2' .ranges.many.mes
0000FB44 A2818785A20089A2                  22134          DC    X'A2818785A20089A2A2A485407BF2F5F0' sages.issue..250
0000FB54 F80089A2A2A48540                  22135          DC    X'F80089A2A2A485407BF2F4F5F0404DA5' 8.issue..2450..v
0000FB64 F14BF24BF1409985                  22136          DC    X'F14BF24BF1409985879985A2A2899695' 1.2.1.regression
0000FB74 5D00D7999684A483                  22137          DC    X'5D00D7999684A4838500C685A3838800' ..Produce.Fetch.
0000FB84 D68686A285A30000                  22138          DC    X'D68686A285A30000D485A3818481A381' Offset..Metadata
0000FB94 0000D38581848599                  22139          DC    X'0000D38581848599C19584C9A2990000' ..LeaderAndIsr..
0000FBA4 E2A39697D9859793                  22140          DC    X'E2A39697D985979389838100E4978481' StopReplica.Upda
0000FBB4 A385D485A3818481                  22141          DC    X'A385D485A3818481A3810000C39695A3' teMetadata..Cont
0000FBC4 999693938584E288                  22142          DC    X'999693938584E288A4A38496A6950000' rolledShutdown..
0000FBD4 D68686A285A3C396                  22143          DC    X'D68686A285A3C396949489A30000D686' OffsetCommit..Of
0000FBE4 86A285A3C685A383                  22144          DC    X'86A285A3C685A3838800C6899584C396' fsetFetch.FindCo
0000FBF4 969984899581A396                  22145          DC    X'969984899581A3969900D1968995C799' ordinator.JoinGr
0000FC04 96A49700C8858199                  22146          DC    X'96A49700C8858199A3828581A300D385' oup.Heartbeat.Le
0000FC14 81A585C79996A497                  22147          DC    X'81A585C79996A4970000E2A89583C799' aveGroup..SyncGr
0000FC24 96A49700C485A283                  22148          DC    X'96A49700C485A28399898285C79996A4' oup.DescribeGrou
0000FC34 97A20000D389A2A3                  22149          DC    X'97A20000D389A2A3C79996A497A20000' ps..ListGroups..
0000FC44 E281A293C8819584                  22150          DC    X'E281A293C8819584A28881928500C197' SaslHandshake.Ap
0000FC54 89E58599A2899695                  22151          DC    X'89E58599A28996950000C3998581A385' iVersion..Create
0000FC64 E396978983A20000                  22152          DC    X'E396978983A20000C4859385A385E396' Topics..DeleteTo
0000FC74 978983A20000C485                  22153          DC    X'978983A20000C4859385A385D9858396' pics..DeleteReco
0000FC84 9984A200C99589A3                  22154          DC    X'9984A200C99589A3D7999684A4838599' rds.InitProducer
0000FC94 C9840000D68686A2                  22155          DC    X'C9840000D68686A285A3C69699D38581' Id..OffsetForLea
0000FCA4 848599C597968388                  22156          DC    X'848599C5979683880000C18484D78199' derEpoch..AddPar
0000FCB4 A389A3899695A2E3                  22157          DC    X'A389A3899695A2E396E3A7950000C184' titionsToTxn..Ad
0000FCC4 84D68686A285A3A2                  22158          DC    X'84D68686A285A3A2E396E3A79500C595' dOffsetsToTxn.En
0000FCD4 84E3A7950000E699                  22159          DC    X'84E3A7950000E69989A385E3A795D481' dTxn..WriteTxnMa
0000FCE4 99928599A200E3A7                  22160          DC    X'99928599A200E3A795D68686A285A3C3' rkers.TxnOffsetC
0000FCF4 96949489A300C485                  22161          DC    X'96949489A300C485A28399898285C183' ommit.DescribeAc
0000FD04 93A20000C3998581                  22162          DC    X'93A20000C3998581A385C18393A20000' ls..CreateAcls..
0000FD14 C4859385A385C183                  22163          DC    X'C4859385A385C18393A20000C485A283' DeleteAcls..Desc
0000FD24 99898285C3969586                  22164          DC    X'99898285C39695868987A200C193A385' ribeConfigs.Alte
0000FD34 99C39695868987A2                  22165          DC    X'99C39695868987A20000C193A38599D9' rConfigs..AlterR
0000FD44 859793898381D396                  22166          DC    X'859793898381D39687C48999A200C485' eplicaLogDirs.De
0000FD54 A28399898285D396                  22167          DC    X'A28399898285D39687C48999A200E281' scribeLogDirs.Sa
0000FD64 A293C1A4A3888595                  22168          DC    X'A293C1A4A3888595A3898381A3850000' slAuthenticate..
0000FD74 C3998581A385D781                  22169          DC    X'C3998581A385D78199A389A3899695A2' CreatePartitions
0000FD84 0000C3998581A385                  22170          DC    X'0000C3998581A385C48593858781A389' ..CreateDelegati
0000FD94 9695E39692859500                  22171          DC    X'9695E39692859500D9859585A6C48593' onToken.RenewDel
                                                                                                                           Page  439 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FDA4 858781A3899695E3                  22172          DC    X'858781A3899695E3969285950000C5A7' egationToken..Ex
0000FDB4 97899985C4859385                  22173          DC    X'97899985C48593858781A3899695E396' pireDelegationTo
0000FDC4 92859500C485A283                  22174          DC    X'92859500C485A28399898285C4859385' ken.DescribeDele
0000FDD4 8781A3899695E396                  22175          DC    X'8781A3899695E39692859500C4859385' gationToken.Dele
0000FDE4 A385C79996A497A2                  22176          DC    X'A385C79996A497A20000C5938583A3D3' teGroups..ElectL
0000FDF4 8581848599A2D985                  22177          DC    X'8581848599A2D98598A485A2A300C995' eadersRequest.In
0000FE04 839985948595A381                  22178          DC    X'839985948595A38193C193A38599C396' crementalAlterCo
0000FE14 95868987A2D98598                  22179          DC    X'95868987A2D98598A485A2A30000C193' nfigsRequest..Al
0000FE24 A38599D78199A389                  22180          DC    X'A38599D78199A389A3899695D98581A2' terPartitionReas
0000FE34 A2898795948595A3                  22181          DC    X'A2898795948595A3A2D98598A485A2A3' signmentsRequest
0000FE44 0000D389A2A3D781                  22182          DC    X'0000D389A2A3D78199A389A3899695D9' ..ListPartitionR
0000FE54 8581A2A289879594                  22183          DC    X'8581A2A2898795948595A3A2D98598A4' eassignmentsRequ
0000FE64 85A2A300D68686A2                  22184          DC    X'85A2A300D68686A285A3C4859385A385' est.OffsetDelete
0000FE74 D98598A485A2A300                  22185          DC    X'D98598A485A2A300C485A28399898285' Request.Describe
0000FE84 C393898595A3D8A4                  22186          DC    X'C393898595A3D8A496A381A2D98598A4' ClientQuotasRequ
0000FE94 85A2A300C193A385                  22187          DC    X'85A2A300C193A38599C393898595A3D8' est.AlterClientQ
0000FEA4 A496A381A2D98598                  22188          DC    X'A496A381A2D98598A485A2A30000C485' uotasRequest..De
0000FEB4 A28399898285E4A2                  22189          DC    X'A28399898285E4A28599E283998194C3' scribeUserScramC
0000FEC4 9985848595A38981                  22190          DC    X'9985848595A3898193A2D98598A485A2' redentialsReques
0000FED4 A300C193A38599E4                  22191          DC    X'A300C193A38599E4A28599E283998194' t.AlterUserScram
0000FEE4 C39985848595A389                  22192          DC    X'C39985848595A3898193A2D98598A485' CredentialsReque
0000FEF4 A2A30000E596A385                  22193          DC    X'A2A30000E596A385D98598A485A2A300' st..VoteRequest.
0000FF04 C285878995D8A496                  22194          DC    X'C285878995D8A49699A494C597968388' BeginQuorumEpoch
0000FF14 D98598A485A2A300                  22195          DC    X'D98598A485A2A300C59584D8A49699A4' Request.EndQuoru
0000FF24 94C597968388D985                  22196          DC    X'94C597968388D98598A485A2A300C485' mEpochRequest.De
0000FF34 A28399898285D8A4                  22197          DC    X'A28399898285D8A49699A494D98598A4' scribeQuorumRequ
0000FF44 85A2A300C193A385                  22198          DC    X'85A2A300C193A38599C9A299D98598A4' est.AlterIsrRequ
0000FF54 85A2A300E4978481                  22199          DC    X'85A2A300E4978481A385C68581A3A499' est.UpdateFeatur
0000FF64 85A2D98598A485A2                  22200          DC    X'85A2D98598A485A2A300C595A5859396' esRequest.Envelo
0000FF74 9785D98598A485A2                  22201          DC    X'9785D98598A485A2A300959695850000' peRequest.none..
0000FF84 87A989970000A295                  22202          DC    X'87A989970000A295819797A8000093A9' gzip..snappy..lz
0000FF94 F400A9A2A3840000                  22203          DC    X'F400A9A2A3840000899588859989A300' 4.zstd..inherit.
0000FFA4 839695868987A499                  22204          DC    X'839695868987A4998584000093858199' configured..lear
0000FFB4 958584008995A385                  22205          DC    X'958584008995A3859995819300009396' ned.internal..lo
0000FFC4 878983819300C995                  22206          DC    X'878983819300C99589A30000E3859994' gical.Init..Term
0000FFD4 899581A38500C681                  22207          DC    X'899581A38500C681A38193C599999699' inate.FatalError
0000FFE4 0000D98598A485A2                  22208          DC    X'0000D98598A485A2A3D7C9C40000E681' ..RequestPID..Wa
0000FFF4 89A3E3998195A297                  22209          DC    X'89A3E3998195A2979699A300E68189A3' itTransport.Wait
00010004 D7C9C400C1A2A289                  22210          DC    X'D7C9C400C1A2A289879585840000C499' PID.Assigned..Dr
00010014 818995D985A285A3                  22211          DC    X'818995D985A285A30000C499818995C2' ainReset..DrainB
00010024 A4949700D9858184                  22212          DC    X'A4949700D9858184A8D596A3C1839285' ump.ReadyNotAcke
00010034 8400D9858184A800                  22213          DC    X'8400D9858184A800C995E3998195A281' d.Ready.InTransa
00010044 83A389969500C285                  22214          DC    X'83A389969500C285878995C396949489' ction.BeginCommi
00010054 A300C396949489A3                  22215          DC    X'A300C396949489A3A3899587E3998195' t.CommittingTran
00010064 A28183A389969500                  22216          DC    X'A28183A389969500C396949489A3D596' saction.CommitNo
00010074 A3C1839285840000                  22217          DC    X'A3C1839285840000C1829699A3899587' tAcked..Aborting
00010084 E3998195A28183A3                  22218          DC    X'E3998195A28183A389969500C1829699' Transaction.Abor
00010094 A38584D596A3C183                  22219          DC    X'A38584D596A3C18392858400C1829699' tedNotAcked.Abor
000100A4 A381829385C59999                  22220          DC    X'A381829385C5999996990000'         tableError..
                                           22221 @Erd_kafka_last_error_code ALIAS X'99846D92818692816D9381A2A36D85999996*
                                                                996D83968485'
                                           22222          EXTRN @Erd_kafka_last_error_code
                                                                                                                           Page  440 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22223 @E__stderrp ALIAS C'@@STDERP'
                                           22224          EXTRN @E__stderrp
                                           22225 @Ecrc_table ALIAS X'8399836DA381829385'
                                           22226          EXTRN @Ecrc_table
                                           22227 @Erd_unittest_slow ALIAS X'99846DA49589A3A385A2A36DA29396A6'
                                           22228          EXTRN @Erd_unittest_slow
                                           22229 @Erd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A28*
                                                                599A36D96956D86818993A49985'
                                           22230          EXTRN @Erd_unittest_assert_on_failure
                                           22231 *
                                           22232 *
                                           22233 *   Re-entrant Data Initialization Section
                                           22234 *
                                           22235 @@INIT@  ALIAS C'rdkafka_msg:'
000100B0                000100B0 00001040  22236 @@INIT@  CSECT
                                           22237 @@INIT@  AMODE ANY
                                           22238 @@INIT@  RMODE ANY
000100B0 05                                22239          DC    XL1'5'
000100B1 000000                            22240          DC    AL3(0)
000100B4 00000120                          22241          DC    AL4(288)
000100B8 00000000                          22242          DC    4X'00'
000100BC 00000000                          22243          DC    Q(@@STATIC)
000100C0 00000000                          22244          DC    X'00000000'
000100C4 00000001                          22245          DC    X'00000001'
000100C8 00000000                          22246          DC    X'00000000'
000100CC 000000FF                          22247          DC    X'000000FF'
000100D0 0102039C09867F97                  22248          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
000100E0 1112139D85088718                  22249          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
000100F0 818283840A171B88                  22250          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00010100 9116939495960498                  22251          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00010110 A0E2E4E0E1E3E5E7                  22252          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00010120 E9EAEBE8EDEEEFEC                  22253          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00010130 2FC2C4C0C1C3C5C7                  22254          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00010140 C9CACBC8CDCECFCC                  22255          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00010150 6162636465666768                  22256          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00010160 6A6B6C6D6E6F7071                  22257          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00010170 7E73747576777879                  22258          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00010180 A3A5B7A9A7B6BCBD                  22259          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00010190 4142434445464748                  22260          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000101A0 4A4B4C4D4E4F5051                  22261          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000101B0 F753545556575859                  22262          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
000101C0 3132333435363738                  22263          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           22264 *
000101D0 05                                22265          DC    XL1'5'
000101D1 000000                            22266          DC    AL3(0)
000101D4 000001E0                          22267          DC    AL4(480)
000101D8 00000000                          22268          DC    4X'00'
000101DC 00000000                          22269          DC    Q(@@STATIC)
000101E0 00000000                          22270          DC    X'00000000'
000101E4 00000101                          22271          DC    X'00000101'
000101E8 00000000                          22272          DC    X'00000000'
000101EC 000000A0                          22273          DC    X'000000A0'
                                                                                                                           Page  441 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000101F0 010203372D2E2F16                  22274          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00010200 1112133C3D322618                  22275          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00010210 5A7F7B5B6C507D4D                  22276          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00010220 F1F2F3F4F5F6F7F8                  22277          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00010230 C1C2C3C4C5C6C7C8                  22278          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00010240 D8D9E2E3E4E5E6E7                  22279          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00010250 8182838485868788                  22280          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00010260 9899A2A3A4A5A6A7                  22281          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00010270 2122232425061728                  22282          DC    X'2122232425061728292A2B2C090A1B30' ................
00010280 311A333435360838                  22283          DC    X'311A333435360838393A3B04143EFF80' ................
                                           22284 *
00010290 05                                22285          DC    XL1'5'
00010291 000000                            22286          DC    AL3(0)
00010294 00000208                          22287          DC    AL4(520)
00010298 00000000                          22288          DC    4X'00'
0001029C 00000000                          22289          DC    Q(@@STATIC)
000102A0 00000000                          22290          DC    X'00000000'
000102A4 000001C0                          22291          DC    X'000001C0'
000102A8 00000000                          22292          DC    X'00000000'
000102AC 00000001                          22293          DC    X'00000001'
000102B0 8A40404040404040                  22294          DC    X'8A40404040404040'                 ........
                                           22295 *
000102B8 05                                22296          DC    XL1'5'
000102B9 000000                            22297          DC    AL3(0)
000102BC 00000230                          22298          DC    AL4(560)
000102C0 00000000                          22299          DC    4X'00'
000102C4 00000000                          22300          DC    Q(@@STATIC)
000102C8 00000000                          22301          DC    X'00000000'
000102CC 000001E0                          22302          DC    X'000001E0'
000102D0 00000000                          22303          DC    X'00000000'
000102D4 00000001                          22304          DC    X'00000001'
000102D8 8B40404040404040                  22305          DC    X'8B40404040404040'                 ........
                                           22306 *
000102E0 0D                                22307          DC    XL1'D'
000102E1 000000                            22308          DC    AL3(0)
000102E4 00000258                          22309          DC    AL4(600)
000102E8 00000000                          22310          DC    4X'00'
000102EC 00000000                          22311          DC    Q(@@STATIC)
000102F0 00000000                          22312          DC    X'00000000'
000102F4 00000220                          22313          DC    X'00000220'
000102F8 000000000000E868                  22314          DC    ADL8(@DATA)
00010300 00000000                          22315          DC    X'00000000'
00010304 0000130E                          22316          DC    X'0000130E'
                                           22317 *
00010308 0D                                22318          DC    XL1'D'
00010309 000000                            22319          DC    AL3(0)
0001030C 00000280                          22320          DC    AL4(640)
00010310 00000000                          22321          DC    4X'00'
00010314 00000000                          22322          DC    Q(@@STATIC)
00010318 00000000                          22323          DC    X'00000000'
0001031C 00000228                          22324          DC    X'00000228'
00010320 000000000000E868                  22325          DC    ADL8(@DATA)
                                                                                                                           Page  442 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010328 00000000                          22326          DC    X'00000000'
0001032C 00001316                          22327          DC    X'00001316'
                                           22328 *
00010330 0D                                22329          DC    XL1'D'
00010331 000000                            22330          DC    AL3(0)
00010334 000002A8                          22331          DC    AL4(680)
00010338 00000000                          22332          DC    4X'00'
0001033C 00000000                          22333          DC    Q(@@STATIC)
00010340 00000000                          22334          DC    X'00000000'
00010344 00000230                          22335          DC    X'00000230'
00010348 000000000000E868                  22336          DC    ADL8(@DATA)
00010350 00000000                          22337          DC    X'00000000'
00010354 0000131C                          22338          DC    X'0000131C'
                                           22339 *
00010358 0D                                22340          DC    XL1'D'
00010359 000000                            22341          DC    AL3(0)
0001035C 000002D0                          22342          DC    AL4(720)
00010360 00000000                          22343          DC    4X'00'
00010364 00000000                          22344          DC    Q(@@STATIC)
00010368 00000000                          22345          DC    X'00000000'
0001036C 00000238                          22346          DC    X'00000238'
00010370 000000000000E868                  22347          DC    ADL8(@DATA)
00010378 00000000                          22348          DC    X'00000000'
0001037C 00001324                          22349          DC    X'00001324'
                                           22350 *
00010380 0D                                22351          DC    XL1'D'
00010381 000000                            22352          DC    AL3(0)
00010384 000002F8                          22353          DC    AL4(760)
00010388 00000000                          22354          DC    4X'00'
0001038C 00000000                          22355          DC    Q(@@STATIC)
00010390 00000000                          22356          DC    X'00000000'
00010394 00000240                          22357          DC    X'00000240'
00010398 000000000000E868                  22358          DC    ADL8(@DATA)
000103A0 00000000                          22359          DC    X'00000000'
000103A4 0000132E                          22360          DC    X'0000132E'
                                           22361 *
000103A8 0D                                22362          DC    XL1'D'
000103A9 000000                            22363          DC    AL3(0)
000103AC 00000320                          22364          DC    AL4(800)
000103B0 00000000                          22365          DC    4X'00'
000103B4 00000000                          22366          DC    Q(@@STATIC)
000103B8 00000000                          22367          DC    X'00000000'
000103BC 00000248                          22368          DC    X'00000248'
000103C0 000000000000E868                  22369          DC    ADL8(@DATA)
000103C8 00000000                          22370          DC    X'00000000'
000103CC 0000133C                          22371          DC    X'0000133C'
                                           22372 *
000103D0 0D                                22373          DC    XL1'D'
000103D1 000000                            22374          DC    AL3(0)
000103D4 00000348                          22375          DC    AL4(840)
000103D8 00000000                          22376          DC    4X'00'
000103DC 00000000                          22377          DC    Q(@@STATIC)
                                                                                                                           Page  443 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000103E0 00000000                          22378          DC    X'00000000'
000103E4 00000250                          22379          DC    X'00000250'
000103E8 000000000000E868                  22380          DC    ADL8(@DATA)
000103F0 00000000                          22381          DC    X'00000000'
000103F4 00001348                          22382          DC    X'00001348'
                                           22383 *
000103F8 0D                                22384          DC    XL1'D'
000103F9 000000                            22385          DC    AL3(0)
000103FC 00000370                          22386          DC    AL4(880)
00010400 00000000                          22387          DC    4X'00'
00010404 00000000                          22388          DC    Q(@@STATIC)
00010408 00000000                          22389          DC    X'00000000'
0001040C 00000258                          22390          DC    X'00000258'
00010410 000000000000E868                  22391          DC    ADL8(@DATA)
00010418 00000000                          22392          DC    X'00000000'
0001041C 00001358                          22393          DC    X'00001358'
                                           22394 *
00010420 0D                                22395          DC    XL1'D'
00010421 000000                            22396          DC    AL3(0)
00010424 00000398                          22397          DC    AL4(920)
00010428 00000000                          22398          DC    4X'00'
0001042C 00000000                          22399          DC    Q(@@STATIC)
00010430 00000000                          22400          DC    X'00000000'
00010434 00000260                          22401          DC    X'00000260'
00010438 000000000000E868                  22402          DC    ADL8(@DATA)
00010440 00000000                          22403          DC    X'00000000'
00010444 0000136C                          22404          DC    X'0000136C'
                                           22405 *
00010448 0D                                22406          DC    XL1'D'
00010449 000000                            22407          DC    AL3(0)
0001044C 000003C0                          22408          DC    AL4(960)
00010450 00000000                          22409          DC    4X'00'
00010454 00000000                          22410          DC    Q(@@STATIC)
00010458 00000000                          22411          DC    X'00000000'
0001045C 00000268                          22412          DC    X'00000268'
00010460 000000000000E868                  22413          DC    ADL8(@DATA)
00010468 00000000                          22414          DC    X'00000000'
0001046C 0000137A                          22415          DC    X'0000137A'
                                           22416 *
00010470 0D                                22417          DC    XL1'D'
00010471 000000                            22418          DC    AL3(0)
00010474 000003E8                          22419          DC    AL4(1000)
00010478 00000000                          22420          DC    4X'00'
0001047C 00000000                          22421          DC    Q(@@STATIC)
00010480 00000000                          22422          DC    X'00000000'
00010484 00000270                          22423          DC    X'00000270'
00010488 000000000000E868                  22424          DC    ADL8(@DATA)
00010490 00000000                          22425          DC    X'00000000'
00010494 00001386                          22426          DC    X'00001386'
                                           22427 *
00010498 0D                                22428          DC    XL1'D'
00010499 000000                            22429          DC    AL3(0)
                                                                                                                           Page  444 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001049C 00000410                          22430          DC    AL4(1040)
000104A0 00000000                          22431          DC    4X'00'
000104A4 00000000                          22432          DC    Q(@@STATIC)
000104A8 00000000                          22433          DC    X'00000000'
000104AC 00000278                          22434          DC    X'00000278'
000104B0 000000000000E868                  22435          DC    ADL8(@DATA)
000104B8 00000000                          22436          DC    X'00000000'
000104BC 00001396                          22437          DC    X'00001396'
                                           22438 *
000104C0 0D                                22439          DC    XL1'D'
000104C1 000000                            22440          DC    AL3(0)
000104C4 00000438                          22441          DC    AL4(1080)
000104C8 00000000                          22442          DC    4X'00'
000104CC 00000000                          22443          DC    Q(@@STATIC)
000104D0 00000000                          22444          DC    X'00000000'
000104D4 00000280                          22445          DC    X'00000280'
000104D8 000000000000E868                  22446          DC    ADL8(@DATA)
000104E0 00000000                          22447          DC    X'00000000'
000104E4 000013A0                          22448          DC    X'000013A0'
                                           22449 *
000104E8 0D                                22450          DC    XL1'D'
000104E9 000000                            22451          DC    AL3(0)
000104EC 00000460                          22452          DC    AL4(1120)
000104F0 00000000                          22453          DC    4X'00'
000104F4 00000000                          22454          DC    Q(@@STATIC)
000104F8 00000000                          22455          DC    X'00000000'
000104FC 00000288                          22456          DC    X'00000288'
00010500 000000000000E868                  22457          DC    ADL8(@DATA)
00010508 00000000                          22458          DC    X'00000000'
0001050C 000013AA                          22459          DC    X'000013AA'
                                           22460 *
00010510 0D                                22461          DC    XL1'D'
00010511 000000                            22462          DC    AL3(0)
00010514 00000488                          22463          DC    AL4(1160)
00010518 00000000                          22464          DC    4X'00'
0001051C 00000000                          22465          DC    Q(@@STATIC)
00010520 00000000                          22466          DC    X'00000000'
00010524 00000290                          22467          DC    X'00000290'
00010528 000000000000E868                  22468          DC    ADL8(@DATA)
00010530 00000000                          22469          DC    X'00000000'
00010534 000013B6                          22470          DC    X'000013B6'
                                           22471 *
00010538 0D                                22472          DC    XL1'D'
00010539 000000                            22473          DC    AL3(0)
0001053C 000004B0                          22474          DC    AL4(1200)
00010540 00000000                          22475          DC    4X'00'
00010544 00000000                          22476          DC    Q(@@STATIC)
00010548 00000000                          22477          DC    X'00000000'
0001054C 00000298                          22478          DC    X'00000298'
00010550 000000000000E868                  22479          DC    ADL8(@DATA)
00010558 00000000                          22480          DC    X'00000000'
0001055C 000013C0                          22481          DC    X'000013C0'
                                                                                                                           Page  445 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22482 *
00010560 0D                                22483          DC    XL1'D'
00010561 000000                            22484          DC    AL3(0)
00010564 000004D8                          22485          DC    AL4(1240)
00010568 00000000                          22486          DC    4X'00'
0001056C 00000000                          22487          DC    Q(@@STATIC)
00010570 00000000                          22488          DC    X'00000000'
00010574 000002A0                          22489          DC    X'000002A0'
00010578 000000000000E868                  22490          DC    ADL8(@DATA)
00010580 00000000                          22491          DC    X'00000000'
00010584 000013D0                          22492          DC    X'000013D0'
                                           22493 *
00010588 0D                                22494          DC    XL1'D'
00010589 000000                            22495          DC    AL3(0)
0001058C 00000500                          22496          DC    AL4(1280)
00010590 00000000                          22497          DC    4X'00'
00010594 00000000                          22498          DC    Q(@@STATIC)
00010598 00000000                          22499          DC    X'00000000'
0001059C 000002A8                          22500          DC    X'000002A8'
000105A0 000000000000E868                  22501          DC    ADL8(@DATA)
000105A8 00000000                          22502          DC    X'00000000'
000105AC 000013DC                          22503          DC    X'000013DC'
                                           22504 *
000105B0 0D                                22505          DC    XL1'D'
000105B1 000000                            22506          DC    AL3(0)
000105B4 00000528                          22507          DC    AL4(1320)
000105B8 00000000                          22508          DC    4X'00'
000105BC 00000000                          22509          DC    Q(@@STATIC)
000105C0 00000000                          22510          DC    X'00000000'
000105C4 000002B0                          22511          DC    X'000002B0'
000105C8 000000000000E868                  22512          DC    ADL8(@DATA)
000105D0 00000000                          22513          DC    X'00000000'
000105D4 000013EA                          22514          DC    X'000013EA'
                                           22515 *
000105D8 0D                                22516          DC    XL1'D'
000105D9 000000                            22517          DC    AL3(0)
000105DC 00000550                          22518          DC    AL4(1360)
000105E0 00000000                          22519          DC    4X'00'
000105E4 00000000                          22520          DC    Q(@@STATIC)
000105E8 00000000                          22521          DC    X'00000000'
000105EC 000002B8                          22522          DC    X'000002B8'
000105F0 000000000000E868                  22523          DC    ADL8(@DATA)
000105F8 00000000                          22524          DC    X'00000000'
000105FC 000013F6                          22525          DC    X'000013F6'
                                           22526 *
00010600 0D                                22527          DC    XL1'D'
00010601 000000                            22528          DC    AL3(0)
00010604 00000578                          22529          DC    AL4(1400)
00010608 00000000                          22530          DC    4X'00'
0001060C 00000000                          22531          DC    Q(@@STATIC)
00010610 00000000                          22532          DC    X'00000000'
00010614 000002C0                          22533          DC    X'000002C0'
                                                                                                                           Page  446 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010618 000000000000E868                  22534          DC    ADL8(@DATA)
00010620 00000000                          22535          DC    X'00000000'
00010624 00001404                          22536          DC    X'00001404'
                                           22537 *
00010628 0D                                22538          DC    XL1'D'
00010629 000000                            22539          DC    AL3(0)
0001062C 000005A0                          22540          DC    AL4(1440)
00010630 00000000                          22541          DC    4X'00'
00010634 00000000                          22542          DC    Q(@@STATIC)
00010638 00000000                          22543          DC    X'00000000'
0001063C 000002C8                          22544          DC    X'000002C8'
00010640 000000000000E868                  22545          DC    ADL8(@DATA)
00010648 00000000                          22546          DC    X'00000000'
0001064C 00001412                          22547          DC    X'00001412'
                                           22548 *
00010650 0D                                22549          DC    XL1'D'
00010651 000000                            22550          DC    AL3(0)
00010654 000005C8                          22551          DC    AL4(1480)
00010658 00000000                          22552          DC    4X'00'
0001065C 00000000                          22553          DC    Q(@@STATIC)
00010660 00000000                          22554          DC    X'00000000'
00010664 000002D0                          22555          DC    X'000002D0'
00010668 000000000000E868                  22556          DC    ADL8(@DATA)
00010670 00000000                          22557          DC    X'00000000'
00010674 00001420                          22558          DC    X'00001420'
                                           22559 *
00010678 0D                                22560          DC    XL1'D'
00010679 000000                            22561          DC    AL3(0)
0001067C 000005F0                          22562          DC    AL4(1520)
00010680 00000000                          22563          DC    4X'00'
00010684 00000000                          22564          DC    Q(@@STATIC)
00010688 00000000                          22565          DC    X'00000000'
0001068C 000002D8                          22566          DC    X'000002D8'
00010690 000000000000E868                  22567          DC    ADL8(@DATA)
00010698 00000000                          22568          DC    X'00000000'
0001069C 00001430                          22569          DC    X'00001430'
                                           22570 *
000106A0 0D                                22571          DC    XL1'D'
000106A1 000000                            22572          DC    AL3(0)
000106A4 00000618                          22573          DC    AL4(1560)
000106A8 00000000                          22574          DC    4X'00'
000106AC 00000000                          22575          DC    Q(@@STATIC)
000106B0 00000000                          22576          DC    X'00000000'
000106B4 000002E0                          22577          DC    X'000002E0'
000106B8 000000000000E868                  22578          DC    ADL8(@DATA)
000106C0 00000000                          22579          DC    X'00000000'
000106C4 00001446                          22580          DC    X'00001446'
                                           22581 *
000106C8 0D                                22582          DC    XL1'D'
000106C9 000000                            22583          DC    AL3(0)
000106CC 00000640                          22584          DC    AL4(1600)
000106D0 00000000                          22585          DC    4X'00'
                                                                                                                           Page  447 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000106D4 00000000                          22586          DC    Q(@@STATIC)
000106D8 00000000                          22587          DC    X'00000000'
000106DC 000002E8                          22588          DC    X'000002E8'
000106E0 000000000000E868                  22589          DC    ADL8(@DATA)
000106E8 00000000                          22590          DC    X'00000000'
000106EC 0000145A                          22591          DC    X'0000145A'
                                           22592 *
000106F0 0D                                22593          DC    XL1'D'
000106F1 000000                            22594          DC    AL3(0)
000106F4 00000668                          22595          DC    AL4(1640)
000106F8 00000000                          22596          DC    4X'00'
000106FC 00000000                          22597          DC    Q(@@STATIC)
00010700 00000000                          22598          DC    X'00000000'
00010704 000002F0                          22599          DC    X'000002F0'
00010708 000000000000E868                  22600          DC    ADL8(@DATA)
00010710 00000000                          22601          DC    X'00000000'
00010714 0000146A                          22602          DC    X'0000146A'
                                           22603 *
00010718 0D                                22604          DC    XL1'D'
00010719 000000                            22605          DC    AL3(0)
0001071C 00000690                          22606          DC    AL4(1680)
00010720 00000000                          22607          DC    4X'00'
00010724 00000000                          22608          DC    Q(@@STATIC)
00010728 00000000                          22609          DC    X'00000000'
0001072C 000002F8                          22610          DC    X'000002F8'
00010730 000000000000E868                  22611          DC    ADL8(@DATA)
00010738 00000000                          22612          DC    X'00000000'
0001073C 00001472                          22613          DC    X'00001472'
                                           22614 *
00010740 0D                                22615          DC    XL1'D'
00010741 000000                            22616          DC    AL3(0)
00010744 000006B8                          22617          DC    AL4(1720)
00010748 00000000                          22618          DC    4X'00'
0001074C 00000000                          22619          DC    Q(@@STATIC)
00010750 00000000                          22620          DC    X'00000000'
00010754 00000300                          22621          DC    X'00000300'
00010758 000000000000E868                  22622          DC    ADL8(@DATA)
00010760 00000000                          22623          DC    X'00000000'
00010764 00001482                          22624          DC    X'00001482'
                                           22625 *
00010768 0D                                22626          DC    XL1'D'
00010769 000000                            22627          DC    AL3(0)
0001076C 000006E0                          22628          DC    AL4(1760)
00010770 00000000                          22629          DC    4X'00'
00010774 00000000                          22630          DC    Q(@@STATIC)
00010778 00000000                          22631          DC    X'00000000'
0001077C 00000308                          22632          DC    X'00000308'
00010780 000000000000E868                  22633          DC    ADL8(@DATA)
00010788 00000000                          22634          DC    X'00000000'
0001078C 00001492                          22635          DC    X'00001492'
                                           22636 *
00010790 0D                                22637          DC    XL1'D'
                                                                                                                           Page  448 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010791 000000                            22638          DC    AL3(0)
00010794 00000708                          22639          DC    AL4(1800)
00010798 00000000                          22640          DC    4X'00'
0001079C 00000000                          22641          DC    Q(@@STATIC)
000107A0 00000000                          22642          DC    X'00000000'
000107A4 00000310                          22643          DC    X'00000310'
000107A8 000000000000E868                  22644          DC    ADL8(@DATA)
000107B0 00000000                          22645          DC    X'00000000'
000107B4 000014A0                          22646          DC    X'000014A0'
                                           22647 *
000107B8 0D                                22648          DC    XL1'D'
000107B9 000000                            22649          DC    AL3(0)
000107BC 00000730                          22650          DC    AL4(1840)
000107C0 00000000                          22651          DC    4X'00'
000107C4 00000000                          22652          DC    Q(@@STATIC)
000107C8 00000000                          22653          DC    X'00000000'
000107CC 00000318                          22654          DC    X'00000318'
000107D0 000000000000E868                  22655          DC    ADL8(@DATA)
000107D8 00000000                          22656          DC    X'00000000'
000107DC 000014AC                          22657          DC    X'000014AC'
                                           22658 *
000107E0 0D                                22659          DC    XL1'D'
000107E1 000000                            22660          DC    AL3(0)
000107E4 00000758                          22661          DC    AL4(1880)
000107E8 00000000                          22662          DC    4X'00'
000107EC 00000000                          22663          DC    Q(@@STATIC)
000107F0 00000000                          22664          DC    X'00000000'
000107F4 00000320                          22665          DC    X'00000320'
000107F8 000000000000E868                  22666          DC    ADL8(@DATA)
00010800 00000000                          22667          DC    X'00000000'
00010804 000014B8                          22668          DC    X'000014B8'
                                           22669 *
00010808 0D                                22670          DC    XL1'D'
00010809 000000                            22671          DC    AL3(0)
0001080C 00000780                          22672          DC    AL4(1920)
00010810 00000000                          22673          DC    4X'00'
00010814 00000000                          22674          DC    Q(@@STATIC)
00010818 00000000                          22675          DC    X'00000000'
0001081C 00000328                          22676          DC    X'00000328'
00010820 000000000000E868                  22677          DC    ADL8(@DATA)
00010828 00000000                          22678          DC    X'00000000'
0001082C 000014C8                          22679          DC    X'000014C8'
                                           22680 *
00010830 0D                                22681          DC    XL1'D'
00010831 000000                            22682          DC    AL3(0)
00010834 000007A8                          22683          DC    AL4(1960)
00010838 00000000                          22684          DC    4X'00'
0001083C 00000000                          22685          DC    Q(@@STATIC)
00010840 00000000                          22686          DC    X'00000000'
00010844 00000330                          22687          DC    X'00000330'
00010848 000000000000E868                  22688          DC    ADL8(@DATA)
00010850 00000000                          22689          DC    X'00000000'
                                                                                                                           Page  449 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010854 000014D6                          22690          DC    X'000014D6'
                                           22691 *
00010858 0D                                22692          DC    XL1'D'
00010859 000000                            22693          DC    AL3(0)
0001085C 000007D0                          22694          DC    AL4(2000)
00010860 00000000                          22695          DC    4X'00'
00010864 00000000                          22696          DC    Q(@@STATIC)
00010868 00000000                          22697          DC    X'00000000'
0001086C 00000338                          22698          DC    X'00000338'
00010870 000000000000E868                  22699          DC    ADL8(@DATA)
00010878 00000000                          22700          DC    X'00000000'
0001087C 000014EA                          22701          DC    X'000014EA'
                                           22702 *
00010880 0D                                22703          DC    XL1'D'
00010881 000000                            22704          DC    AL3(0)
00010884 000007F8                          22705          DC    AL4(2040)
00010888 00000000                          22706          DC    4X'00'
0001088C 00000000                          22707          DC    Q(@@STATIC)
00010890 00000000                          22708          DC    X'00000000'
00010894 00000340                          22709          DC    X'00000340'
00010898 000000000000E868                  22710          DC    ADL8(@DATA)
000108A0 00000000                          22711          DC    X'00000000'
000108A4 000014FA                          22712          DC    X'000014FA'
                                           22713 *
000108A8 0D                                22714          DC    XL1'D'
000108A9 000000                            22715          DC    AL3(0)
000108AC 00000820                          22716          DC    AL4(2080)
000108B0 00000000                          22717          DC    4X'00'
000108B4 00000000                          22718          DC    Q(@@STATIC)
000108B8 00000000                          22719          DC    X'00000000'
000108BC 00000348                          22720          DC    X'00000348'
000108C0 000000000000E868                  22721          DC    ADL8(@DATA)
000108C8 00000000                          22722          DC    X'00000000'
000108CC 0000150C                          22723          DC    X'0000150C'
                                           22724 *
000108D0 0D                                22725          DC    XL1'D'
000108D1 000000                            22726          DC    AL3(0)
000108D4 00000848                          22727          DC    AL4(2120)
000108D8 00000000                          22728          DC    4X'00'
000108DC 00000000                          22729          DC    Q(@@STATIC)
000108E0 00000000                          22730          DC    X'00000000'
000108E4 00000350                          22731          DC    X'00000350'
000108E8 000000000000E868                  22732          DC    ADL8(@DATA)
000108F0 00000000                          22733          DC    X'00000000'
000108F4 0000151E                          22734          DC    X'0000151E'
                                           22735 *
000108F8 0D                                22736          DC    XL1'D'
000108F9 000000                            22737          DC    AL3(0)
000108FC 00000870                          22738          DC    AL4(2160)
00010900 00000000                          22739          DC    4X'00'
00010904 00000000                          22740          DC    Q(@@STATIC)
00010908 00000000                          22741          DC    X'00000000'
                                                                                                                           Page  450 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001090C 00000358                          22742          DC    X'00000358'
00010910 000000000000E868                  22743          DC    ADL8(@DATA)
00010918 00000000                          22744          DC    X'00000000'
0001091C 00001534                          22745          DC    X'00001534'
                                           22746 *
00010920 0D                                22747          DC    XL1'D'
00010921 000000                            22748          DC    AL3(0)
00010924 00000898                          22749          DC    AL4(2200)
00010928 00000000                          22750          DC    4X'00'
0001092C 00000000                          22751          DC    Q(@@STATIC)
00010930 00000000                          22752          DC    X'00000000'
00010934 00000360                          22753          DC    X'00000360'
00010938 000000000000E868                  22754          DC    ADL8(@DATA)
00010940 00000000                          22755          DC    X'00000000'
00010944 0000154A                          22756          DC    X'0000154A'
                                           22757 *
00010948 0D                                22758          DC    XL1'D'
00010949 000000                            22759          DC    AL3(0)
0001094C 000008C0                          22760          DC    AL4(2240)
00010950 00000000                          22761          DC    4X'00'
00010954 00000000                          22762          DC    Q(@@STATIC)
00010958 00000000                          22763          DC    X'00000000'
0001095C 00000368                          22764          DC    X'00000368'
00010960 000000000000E868                  22765          DC    ADL8(@DATA)
00010968 00000000                          22766          DC    X'00000000'
0001096C 00001560                          22767          DC    X'00001560'
                                           22768 *
00010970 0D                                22769          DC    XL1'D'
00010971 000000                            22770          DC    AL3(0)
00010974 000008E8                          22771          DC    AL4(2280)
00010978 00000000                          22772          DC    4X'00'
0001097C 00000000                          22773          DC    Q(@@STATIC)
00010980 00000000                          22774          DC    X'00000000'
00010984 00000370                          22775          DC    X'00000370'
00010988 000000000000E868                  22776          DC    ADL8(@DATA)
00010990 00000000                          22777          DC    X'00000000'
00010994 00001578                          22778          DC    X'00001578'
                                           22779 *
00010998 0D                                22780          DC    XL1'D'
00010999 000000                            22781          DC    AL3(0)
0001099C 00000910                          22782          DC    AL4(2320)
000109A0 00000000                          22783          DC    4X'00'
000109A4 00000000                          22784          DC    Q(@@STATIC)
000109A8 00000000                          22785          DC    X'00000000'
000109AC 00000378                          22786          DC    X'00000378'
000109B0 000000000000E868                  22787          DC    ADL8(@DATA)
000109B8 00000000                          22788          DC    X'00000000'
000109BC 00001586                          22789          DC    X'00001586'
                                           22790 *
000109C0 0D                                22791          DC    XL1'D'
000109C1 000000                            22792          DC    AL3(0)
000109C4 00000938                          22793          DC    AL4(2360)
                                                                                                                           Page  451 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000109C8 00000000                          22794          DC    4X'00'
000109CC 00000000                          22795          DC    Q(@@STATIC)
000109D0 00000000                          22796          DC    X'00000000'
000109D4 00000380                          22797          DC    X'00000380'
000109D8 000000000000E868                  22798          DC    ADL8(@DATA)
000109E0 00000000                          22799          DC    X'00000000'
000109E4 0000159A                          22800          DC    X'0000159A'
                                           22801 *
000109E8 0D                                22802          DC    XL1'D'
000109E9 000000                            22803          DC    AL3(0)
000109EC 00000960                          22804          DC    AL4(2400)
000109F0 00000000                          22805          DC    4X'00'
000109F4 00000000                          22806          DC    Q(@@STATIC)
000109F8 00000000                          22807          DC    X'00000000'
000109FC 00000388                          22808          DC    X'00000388'
00010A00 000000000000E868                  22809          DC    ADL8(@DATA)
00010A08 00000000                          22810          DC    X'00000000'
00010A0C 000015BA                          22811          DC    X'000015BA'
                                           22812 *
00010A10 0D                                22813          DC    XL1'D'
00010A11 000000                            22814          DC    AL3(0)
00010A14 00000988                          22815          DC    AL4(2440)
00010A18 00000000                          22816          DC    4X'00'
00010A1C 00000000                          22817          DC    Q(@@STATIC)
00010A20 00000000                          22818          DC    X'00000000'
00010A24 00000390                          22819          DC    X'00000390'
00010A28 000000000000E868                  22820          DC    ADL8(@DATA)
00010A30 00000000                          22821          DC    X'00000000'
00010A34 000015DE                          22822          DC    X'000015DE'
                                           22823 *
00010A38 0D                                22824          DC    XL1'D'
00010A39 000000                            22825          DC    AL3(0)
00010A3C 000009B0                          22826          DC    AL4(2480)
00010A40 00000000                          22827          DC    4X'00'
00010A44 00000000                          22828          DC    Q(@@STATIC)
00010A48 00000000                          22829          DC    X'00000000'
00010A4C 00000398                          22830          DC    X'00000398'
00010A50 000000000000E868                  22831          DC    ADL8(@DATA)
00010A58 00000000                          22832          DC    X'00000000'
00010A5C 00001600                          22833          DC    X'00001600'
                                           22834 *
00010A60 0D                                22835          DC    XL1'D'
00010A61 000000                            22836          DC    AL3(0)
00010A64 000009D8                          22837          DC    AL4(2520)
00010A68 00000000                          22838          DC    4X'00'
00010A6C 00000000                          22839          DC    Q(@@STATIC)
00010A70 00000000                          22840          DC    X'00000000'
00010A74 000003A0                          22841          DC    X'000003A0'
00010A78 000000000000E868                  22842          DC    ADL8(@DATA)
00010A80 00000000                          22843          DC    X'00000000'
00010A84 00001614                          22844          DC    X'00001614'
                                           22845 *
                                                                                                                           Page  452 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010A88 0D                                22846          DC    XL1'D'
00010A89 000000                            22847          DC    AL3(0)
00010A8C 00000A00                          22848          DC    AL4(2560)
00010A90 00000000                          22849          DC    4X'00'
00010A94 00000000                          22850          DC    Q(@@STATIC)
00010A98 00000000                          22851          DC    X'00000000'
00010A9C 000003A8                          22852          DC    X'000003A8'
00010AA0 000000000000E868                  22853          DC    ADL8(@DATA)
00010AA8 00000000                          22854          DC    X'00000000'
00010AAC 00001630                          22855          DC    X'00001630'
                                           22856 *
00010AB0 0D                                22857          DC    XL1'D'
00010AB1 000000                            22858          DC    AL3(0)
00010AB4 00000A28                          22859          DC    AL4(2600)
00010AB8 00000000                          22860          DC    4X'00'
00010ABC 00000000                          22861          DC    Q(@@STATIC)
00010AC0 00000000                          22862          DC    X'00000000'
00010AC4 000003B0                          22863          DC    X'000003B0'
00010AC8 000000000000E868                  22864          DC    ADL8(@DATA)
00010AD0 00000000                          22865          DC    X'00000000'
00010AD4 0000164A                          22866          DC    X'0000164A'
                                           22867 *
00010AD8 0D                                22868          DC    XL1'D'
00010AD9 000000                            22869          DC    AL3(0)
00010ADC 00000A50                          22870          DC    AL4(2640)
00010AE0 00000000                          22871          DC    4X'00'
00010AE4 00000000                          22872          DC    Q(@@STATIC)
00010AE8 00000000                          22873          DC    X'00000000'
00010AEC 000003B8                          22874          DC    X'000003B8'
00010AF0 000000000000E868                  22875          DC    ADL8(@DATA)
00010AF8 00000000                          22876          DC    X'00000000'
00010AFC 0000166E                          22877          DC    X'0000166E'
                                           22878 *
00010B00 0D                                22879          DC    XL1'D'
00010B01 000000                            22880          DC    AL3(0)
00010B04 00000A78                          22881          DC    AL4(2680)
00010B08 00000000                          22882          DC    4X'00'
00010B0C 00000000                          22883          DC    Q(@@STATIC)
00010B10 00000000                          22884          DC    X'00000000'
00010B14 000003C0                          22885          DC    X'000003C0'
00010B18 000000000000E868                  22886          DC    ADL8(@DATA)
00010B20 00000000                          22887          DC    X'00000000'
00010B24 00001690                          22888          DC    X'00001690'
                                           22889 *
00010B28 0D                                22890          DC    XL1'D'
00010B29 000000                            22891          DC    AL3(0)
00010B2C 00000AA0                          22892          DC    AL4(2720)
00010B30 00000000                          22893          DC    4X'00'
00010B34 00000000                          22894          DC    Q(@@STATIC)
00010B38 00000000                          22895          DC    X'00000000'
00010B3C 000003C8                          22896          DC    X'000003C8'
00010B40 000000000000E868                  22897          DC    ADL8(@DATA)
                                                                                                                           Page  453 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010B48 00000000                          22898          DC    X'00000000'
00010B4C 0000169C                          22899          DC    X'0000169C'
                                           22900 *
00010B50 0D                                22901          DC    XL1'D'
00010B51 000000                            22902          DC    AL3(0)
00010B54 00000AC8                          22903          DC    AL4(2760)
00010B58 00000000                          22904          DC    4X'00'
00010B5C 00000000                          22905          DC    Q(@@STATIC)
00010B60 00000000                          22906          DC    X'00000000'
00010B64 000003D0                          22907          DC    X'000003D0'
00010B68 000000000000E868                  22908          DC    ADL8(@DATA)
00010B70 00000000                          22909          DC    X'00000000'
00010B74 000016B4                          22910          DC    X'000016B4'
                                           22911 *
00010B78 0D                                22912          DC    XL1'D'
00010B79 000000                            22913          DC    AL3(0)
00010B7C 00000AF0                          22914          DC    AL4(2800)
00010B80 00000000                          22915          DC    4X'00'
00010B84 00000000                          22916          DC    Q(@@STATIC)
00010B88 00000000                          22917          DC    X'00000000'
00010B8C 000003D8                          22918          DC    X'000003D8'
00010B90 000000000000E868                  22919          DC    ADL8(@DATA)
00010B98 00000000                          22920          DC    X'00000000'
00010B9C 000016CA                          22921          DC    X'000016CA'
                                           22922 *
00010BA0 0D                                22923          DC    XL1'D'
00010BA1 000000                            22924          DC    AL3(0)
00010BA4 00000B18                          22925          DC    AL4(2840)
00010BA8 00000000                          22926          DC    4X'00'
00010BAC 00000000                          22927          DC    Q(@@STATIC)
00010BB0 00000000                          22928          DC    X'00000000'
00010BB4 000003E0                          22929          DC    X'000003E0'
00010BB8 000000000000E868                  22930          DC    ADL8(@DATA)
00010BC0 00000000                          22931          DC    X'00000000'
00010BC4 000016E0                          22932          DC    X'000016E0'
                                           22933 *
00010BC8 0D                                22934          DC    XL1'D'
00010BC9 000000                            22935          DC    AL3(0)
00010BCC 00000B40                          22936          DC    AL4(2880)
00010BD0 00000000                          22937          DC    4X'00'
00010BD4 00000000                          22938          DC    Q(@@STATIC)
00010BD8 00000000                          22939          DC    X'00000000'
00010BDC 000003E8                          22940          DC    X'000003E8'
00010BE0 000000000000E868                  22941          DC    ADL8(@DATA)
00010BE8 00000000                          22942          DC    X'00000000'
00010BEC 000016F0                          22943          DC    X'000016F0'
                                           22944 *
00010BF0 0D                                22945          DC    XL1'D'
00010BF1 000000                            22946          DC    AL3(0)
00010BF4 00000B68                          22947          DC    AL4(2920)
00010BF8 00000000                          22948          DC    4X'00'
00010BFC 00000000                          22949          DC    Q(@@STATIC)
                                                                                                                           Page  454 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010C00 00000000                          22950          DC    X'00000000'
00010C04 000003F0                          22951          DC    X'000003F0'
00010C08 000000000000E868                  22952          DC    ADL8(@DATA)
00010C10 00000000                          22953          DC    X'00000000'
00010C14 00001706                          22954          DC    X'00001706'
                                           22955 *
00010C18 0D                                22956          DC    XL1'D'
00010C19 000000                            22957          DC    AL3(0)
00010C1C 00000B90                          22958          DC    AL4(2960)
00010C20 00000000                          22959          DC    4X'00'
00010C24 00000000                          22960          DC    Q(@@STATIC)
00010C28 00000000                          22961          DC    X'00000000'
00010C2C 000004C0                          22962          DC    X'000004C0'
00010C30 000000000000E868                  22963          DC    ADL8(@DATA)
00010C38 00000000                          22964          DC    X'00000000'
00010C3C 00001716                          22965          DC    X'00001716'
                                           22966 *
00010C40 0D                                22967          DC    XL1'D'
00010C41 000000                            22968          DC    AL3(0)
00010C44 00000BB8                          22969          DC    AL4(3000)
00010C48 00000000                          22970          DC    4X'00'
00010C4C 00000000                          22971          DC    Q(@@STATIC)
00010C50 00000000                          22972          DC    X'00000000'
00010C54 000004C8                          22973          DC    X'000004C8'
00010C58 000000000000E868                  22974          DC    ADL8(@DATA)
00010C60 00000000                          22975          DC    X'00000000'
00010C64 0000171C                          22976          DC    X'0000171C'
                                           22977 *
00010C68 0D                                22978          DC    XL1'D'
00010C69 000000                            22979          DC    AL3(0)
00010C6C 00000BE0                          22980          DC    AL4(3040)
00010C70 00000000                          22981          DC    4X'00'
00010C74 00000000                          22982          DC    Q(@@STATIC)
00010C78 00000000                          22983          DC    X'00000000'
00010C7C 000004D0                          22984          DC    X'000004D0'
00010C80 000000000000E868                  22985          DC    ADL8(@DATA)
00010C88 00000000                          22986          DC    X'00000000'
00010C8C 00001722                          22987          DC    X'00001722'
                                           22988 *
00010C90 0D                                22989          DC    XL1'D'
00010C91 000000                            22990          DC    AL3(0)
00010C94 00000C08                          22991          DC    AL4(3080)
00010C98 00000000                          22992          DC    4X'00'
00010C9C 00000000                          22993          DC    Q(@@STATIC)
00010CA0 00000000                          22994          DC    X'00000000'
00010CA4 000004D8                          22995          DC    X'000004D8'
00010CA8 000000000000E868                  22996          DC    ADL8(@DATA)
00010CB0 00000000                          22997          DC    X'00000000'
00010CB4 0000172A                          22998          DC    X'0000172A'
                                           22999 *
00010CB8 0D                                23000          DC    XL1'D'
00010CB9 000000                            23001          DC    AL3(0)
                                                                                                                           Page  455 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010CBC 00000C30                          23002          DC    AL4(3120)
00010CC0 00000000                          23003          DC    4X'00'
00010CC4 00000000                          23004          DC    Q(@@STATIC)
00010CC8 00000000                          23005          DC    X'00000000'
00010CCC 000004E0                          23006          DC    X'000004E0'
00010CD0 000000000000E868                  23007          DC    ADL8(@DATA)
00010CD8 00000000                          23008          DC    X'00000000'
00010CDC 0000172E                          23009          DC    X'0000172E'
                                           23010 *
00010CE0 0D                                23011          DC    XL1'D'
00010CE1 000000                            23012          DC    AL3(0)
00010CE4 00000C58                          23013          DC    AL4(3160)
00010CE8 00000000                          23014          DC    4X'00'
00010CEC 00000000                          23015          DC    Q(@@STATIC)
00010CF0 00000000                          23016          DC    X'00000000'
00010CF4 000004E8                          23017          DC    X'000004E8'
00010CF8 000000000000E868                  23018          DC    ADL8(@DATA)
00010D00 00000000                          23019          DC    X'00000000'
00010D04 00001734                          23020          DC    X'00001734'
                                           23021 *
00010D08 0D                                23022          DC    XL1'D'
00010D09 000000                            23023          DC    AL3(0)
00010D0C 00000C80                          23024          DC    AL4(3200)
00010D10 00000000                          23025          DC    4X'00'
00010D14 00000000                          23026          DC    Q(@@STATIC)
00010D18 00000000                          23027          DC    X'00000000'
00010D1C 00000510                          23028          DC    X'00000510'
00010D20 000000000000E868                  23029          DC    ADL8(@DATA)
00010D28 00000000                          23030          DC    X'00000000'
00010D2C 0000173C                          23031          DC    X'0000173C'
                                           23032 *
00010D30 0D                                23033          DC    XL1'D'
00010D31 000000                            23034          DC    AL3(0)
00010D34 00000CA8                          23035          DC    AL4(3240)
00010D38 00000000                          23036          DC    4X'00'
00010D3C 00000000                          23037          DC    Q(@@STATIC)
00010D40 00000000                          23038          DC    X'00000000'
00010D44 00000518                          23039          DC    X'00000518'
00010D48 000000000000E868                  23040          DC    ADL8(@DATA)
00010D50 00000000                          23041          DC    X'00000000'
00010D54 00001748                          23042          DC    X'00001748'
                                           23043 *
00010D58 0D                                23044          DC    XL1'D'
00010D59 000000                            23045          DC    AL3(0)
00010D5C 00000CD0                          23046          DC    AL4(3280)
00010D60 00000000                          23047          DC    4X'00'
00010D64 00000000                          23048          DC    Q(@@STATIC)
00010D68 00000000                          23049          DC    X'00000000'
00010D6C 00000520                          23050          DC    X'00000520'
00010D70 000000000000E868                  23051          DC    ADL8(@DATA)
00010D78 00000000                          23052          DC    X'00000000'
00010D7C 00001750                          23053          DC    X'00001750'
                                                                                                                           Page  456 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23054 *
00010D80 0D                                23055          DC    XL1'D'
00010D81 000000                            23056          DC    AL3(0)
00010D84 00000CF8                          23057          DC    AL4(3320)
00010D88 00000000                          23058          DC    4X'00'
00010D8C 00000000                          23059          DC    Q(@@STATIC)
00010D90 00000000                          23060          DC    X'00000000'
00010D94 00000528                          23061          DC    X'00000528'
00010D98 000000000000E868                  23062          DC    ADL8(@DATA)
00010DA0 00000000                          23063          DC    X'00000000'
00010DA4 0000175A                          23064          DC    X'0000175A'
                                           23065 *
00010DA8 0D                                23066          DC    XL1'D'
00010DA9 000000                            23067          DC    AL3(0)
00010DAC 00000D20                          23068          DC    AL4(3360)
00010DB0 00000000                          23069          DC    4X'00'
00010DB4 00000000                          23070          DC    Q(@@STATIC)
00010DB8 00000000                          23071          DC    X'00000000'
00010DBC 00000630                          23072          DC    X'00000630'
00010DC0 000000000000E868                  23073          DC    ADL8(@DATA)
00010DC8 00000000                          23074          DC    X'00000000'
00010DCC 00001762                          23075          DC    X'00001762'
                                           23076 *
00010DD0 0D                                23077          DC    XL1'D'
00010DD1 000000                            23078          DC    AL3(0)
00010DD4 00000D48                          23079          DC    AL4(3400)
00010DD8 00000000                          23080          DC    4X'00'
00010DDC 00000000                          23081          DC    Q(@@STATIC)
00010DE0 00000000                          23082          DC    X'00000000'
00010DE4 00000638                          23083          DC    X'00000638'
00010DE8 000000000000E868                  23084          DC    ADL8(@DATA)
00010DF0 00000000                          23085          DC    X'00000000'
00010DF4 00001768                          23086          DC    X'00001768'
                                           23087 *
00010DF8 0D                                23088          DC    XL1'D'
00010DF9 000000                            23089          DC    AL3(0)
00010DFC 00000D70                          23090          DC    AL4(3440)
00010E00 00000000                          23091          DC    4X'00'
00010E04 00000000                          23092          DC    Q(@@STATIC)
00010E08 00000000                          23093          DC    X'00000000'
00010E0C 00000640                          23094          DC    X'00000640'
00010E10 000000000000E868                  23095          DC    ADL8(@DATA)
00010E18 00000000                          23096          DC    X'00000000'
00010E1C 00001772                          23097          DC    X'00001772'
                                           23098 *
00010E20 0D                                23099          DC    XL1'D'
00010E21 000000                            23100          DC    AL3(0)
00010E24 00000D98                          23101          DC    AL4(3480)
00010E28 00000000                          23102          DC    4X'00'
00010E2C 00000000                          23103          DC    Q(@@STATIC)
00010E30 00000000                          23104          DC    X'00000000'
00010E34 00000648                          23105          DC    X'00000648'
                                                                                                                           Page  457 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010E38 000000000000E868                  23106          DC    ADL8(@DATA)
00010E40 00000000                          23107          DC    X'00000000'
00010E44 0000177E                          23108          DC    X'0000177E'
                                           23109 *
00010E48 0D                                23110          DC    XL1'D'
00010E49 000000                            23111          DC    AL3(0)
00010E4C 00000DC0                          23112          DC    AL4(3520)
00010E50 00000000                          23113          DC    4X'00'
00010E54 00000000                          23114          DC    Q(@@STATIC)
00010E58 00000000                          23115          DC    X'00000000'
00010E5C 00000650                          23116          DC    X'00000650'
00010E60 000000000000E868                  23117          DC    ADL8(@DATA)
00010E68 00000000                          23118          DC    X'00000000'
00010E6C 0000178A                          23119          DC    X'0000178A'
                                           23120 *
00010E70 0D                                23121          DC    XL1'D'
00010E71 000000                            23122          DC    AL3(0)
00010E74 00000DE8                          23123          DC    AL4(3560)
00010E78 00000000                          23124          DC    4X'00'
00010E7C 00000000                          23125          DC    Q(@@STATIC)
00010E80 00000000                          23126          DC    X'00000000'
00010E84 00000658                          23127          DC    X'00000658'
00010E88 000000000000E868                  23128          DC    ADL8(@DATA)
00010E90 00000000                          23129          DC    X'00000000'
00010E94 00001798                          23130          DC    X'00001798'
                                           23131 *
00010E98 0D                                23132          DC    XL1'D'
00010E99 000000                            23133          DC    AL3(0)
00010E9C 00000E10                          23134          DC    AL4(3600)
00010EA0 00000000                          23135          DC    4X'00'
00010EA4 00000000                          23136          DC    Q(@@STATIC)
00010EA8 00000000                          23137          DC    X'00000000'
00010EAC 00000660                          23138          DC    X'00000660'
00010EB0 000000000000E868                  23139          DC    ADL8(@DATA)
00010EB8 00000000                          23140          DC    X'00000000'
00010EBC 000017A0                          23141          DC    X'000017A0'
                                           23142 *
00010EC0 0D                                23143          DC    XL1'D'
00010EC1 000000                            23144          DC    AL3(0)
00010EC4 00000E38                          23145          DC    AL4(3640)
00010EC8 00000000                          23146          DC    4X'00'
00010ECC 00000000                          23147          DC    Q(@@STATIC)
00010ED0 00000000                          23148          DC    X'00000000'
00010ED4 00000668                          23149          DC    X'00000668'
00010ED8 000000000000E868                  23150          DC    ADL8(@DATA)
00010EE0 00000000                          23151          DC    X'00000000'
00010EE4 000017AA                          23152          DC    X'000017AA'
                                           23153 *
00010EE8 0D                                23154          DC    XL1'D'
00010EE9 000000                            23155          DC    AL3(0)
00010EEC 00000E60                          23156          DC    AL4(3680)
00010EF0 00000000                          23157          DC    4X'00'
                                                                                                                           Page  458 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010EF4 00000000                          23158          DC    Q(@@STATIC)
00010EF8 00000000                          23159          DC    X'00000000'
00010EFC 00000670                          23160          DC    X'00000670'
00010F00 000000000000E868                  23161          DC    ADL8(@DATA)
00010F08 00000000                          23162          DC    X'00000000'
00010F0C 000017B6                          23163          DC    X'000017B6'
                                           23164 *
00010F10 0D                                23165          DC    XL1'D'
00010F11 000000                            23166          DC    AL3(0)
00010F14 00000E88                          23167          DC    AL4(3720)
00010F18 00000000                          23168          DC    4X'00'
00010F1C 00000000                          23169          DC    Q(@@STATIC)
00010F20 00000000                          23170          DC    X'00000000'
00010F24 00000678                          23171          DC    X'00000678'
00010F28 000000000000E868                  23172          DC    ADL8(@DATA)
00010F30 00000000                          23173          DC    X'00000000'
00010F34 00001762                          23174          DC    X'00001762'
                                           23175 *
00010F38 0D                                23176          DC    XL1'D'
00010F39 000000                            23177          DC    AL3(0)
00010F3C 00000EB0                          23178          DC    AL4(3760)
00010F40 00000000                          23179          DC    4X'00'
00010F44 00000000                          23180          DC    Q(@@STATIC)
00010F48 00000000                          23181          DC    X'00000000'
00010F4C 00000680                          23182          DC    X'00000680'
00010F50 000000000000E868                  23183          DC    ADL8(@DATA)
00010F58 00000000                          23184          DC    X'00000000'
00010F5C 00001798                          23185          DC    X'00001798'
                                           23186 *
00010F60 0D                                23187          DC    XL1'D'
00010F61 000000                            23188          DC    AL3(0)
00010F64 00000ED8                          23189          DC    AL4(3800)
00010F68 00000000                          23190          DC    4X'00'
00010F6C 00000000                          23191          DC    Q(@@STATIC)
00010F70 00000000                          23192          DC    X'00000000'
00010F74 00000688                          23193          DC    X'00000688'
00010F78 000000000000E868                  23194          DC    ADL8(@DATA)
00010F80 00000000                          23195          DC    X'00000000'
00010F84 000017C0                          23196          DC    X'000017C0'
                                           23197 *
00010F88 0D                                23198          DC    XL1'D'
00010F89 000000                            23199          DC    AL3(0)
00010F8C 00000F00                          23200          DC    AL4(3840)
00010F90 00000000                          23201          DC    4X'00'
00010F94 00000000                          23202          DC    Q(@@STATIC)
00010F98 00000000                          23203          DC    X'00000000'
00010F9C 00000690                          23204          DC    X'00000690'
00010FA0 000000000000E868                  23205          DC    ADL8(@DATA)
00010FA8 00000000                          23206          DC    X'00000000'
00010FAC 000017CE                          23207          DC    X'000017CE'
                                           23208 *
00010FB0 0D                                23209          DC    XL1'D'
                                                                                                                           Page  459 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010FB1 000000                            23210          DC    AL3(0)
00010FB4 00000F28                          23211          DC    AL4(3880)
00010FB8 00000000                          23212          DC    4X'00'
00010FBC 00000000                          23213          DC    Q(@@STATIC)
00010FC0 00000000                          23214          DC    X'00000000'
00010FC4 00000698                          23215          DC    X'00000698'
00010FC8 000000000000E868                  23216          DC    ADL8(@DATA)
00010FD0 00000000                          23217          DC    X'00000000'
00010FD4 000017D4                          23218          DC    X'000017D4'
                                           23219 *
00010FD8 0D                                23220          DC    XL1'D'
00010FD9 000000                            23221          DC    AL3(0)
00010FDC 00000F50                          23222          DC    AL4(3920)
00010FE0 00000000                          23223          DC    4X'00'
00010FE4 00000000                          23224          DC    Q(@@STATIC)
00010FE8 00000000                          23225          DC    X'00000000'
00010FEC 000006A0                          23226          DC    X'000006A0'
00010FF0 000000000000E868                  23227          DC    ADL8(@DATA)
00010FF8 00000000                          23228          DC    X'00000000'
00010FFC 000017E2                          23229          DC    X'000017E2'
                                           23230 *
00011000 0D                                23231          DC    XL1'D'
00011001 000000                            23232          DC    AL3(0)
00011004 00000F78                          23233          DC    AL4(3960)
00011008 00000000                          23234          DC    4X'00'
0001100C 00000000                          23235          DC    Q(@@STATIC)
00011010 00000000                          23236          DC    X'00000000'
00011014 000006A8                          23237          DC    X'000006A8'
00011018 000000000000E868                  23238          DC    ADL8(@DATA)
00011020 00000000                          23239          DC    X'00000000'
00011024 000017EE                          23240          DC    X'000017EE'
                                           23241 *
00011028 0D                                23242          DC    XL1'D'
00011029 000000                            23243          DC    AL3(0)
0001102C 00000FA0                          23244          DC    AL4(4000)
00011030 00000000                          23245          DC    4X'00'
00011034 00000000                          23246          DC    Q(@@STATIC)
00011038 00000000                          23247          DC    X'00000000'
0001103C 000006B0                          23248          DC    X'000006B0'
00011040 000000000000E868                  23249          DC    ADL8(@DATA)
00011048 00000000                          23250          DC    X'00000000'
0001104C 00001804                          23251          DC    X'00001804'
                                           23252 *
00011050 0D                                23253          DC    XL1'D'
00011051 000000                            23254          DC    AL3(0)
00011054 00000FC8                          23255          DC    AL4(4040)
00011058 00000000                          23256          DC    4X'00'
0001105C 00000000                          23257          DC    Q(@@STATIC)
00011060 00000000                          23258          DC    X'00000000'
00011064 000006B8                          23259          DC    X'000006B8'
00011068 000000000000E868                  23260          DC    ADL8(@DATA)
00011070 00000000                          23261          DC    X'00000000'
                                                                                                                           Page  460 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011074 00001814                          23262          DC    X'00001814'
                                           23263 *
00011078 0D                                23264          DC    XL1'D'
00011079 000000                            23265          DC    AL3(0)
0001107C 00000FF0                          23266          DC    AL4(4080)
00011080 00000000                          23267          DC    4X'00'
00011084 00000000                          23268          DC    Q(@@STATIC)
00011088 00000000                          23269          DC    X'00000000'
0001108C 000006C0                          23270          DC    X'000006C0'
00011090 000000000000E868                  23271          DC    ADL8(@DATA)
00011098 00000000                          23272          DC    X'00000000'
0001109C 00001828                          23273          DC    X'00001828'
                                           23274 *
000110A0 0D                                23275          DC    XL1'D'
000110A1 000000                            23276          DC    AL3(0)
000110A4 00001018                          23277          DC    AL4(4120)
000110A8 00000000                          23278          DC    4X'00'
000110AC 00000000                          23279          DC    Q(@@STATIC)
000110B0 00000000                          23280          DC    X'00000000'
000110B4 000006C8                          23281          DC    X'000006C8'
000110B8 000000000000E868                  23282          DC    ADL8(@DATA)
000110C0 00000000                          23283          DC    X'00000000'
000110C4 00001838                          23284          DC    X'00001838'
                                           23285 *
000110C8 0D                                23286          DC    XL1'D'
000110C9 000000                            23287          DC    AL3(0)
000110CC 00000000                          23288          DC    AL4(0)
000110D0 00000000                          23289          DC    4X'00'
000110D4 00000000                          23290          DC    Q(@@STATIC)
000110D8 00000000                          23291          DC    X'00000000'
000110DC 000006D0                          23292          DC    X'000006D0'
000110E0 000000000000E868                  23293          DC    ADL8(@DATA)
000110E8 00000000                          23294          DC    X'00000000'
000110EC 00001772                          23295          DC    X'00001772'
                                           23296 *
                                           23297          END
                                                 Relocation Dictionary                                                     Page  461 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000009 00000138   A 4      +
 00000002 0000000C 00000140   A 4      +
 00000002 00000002 00000168   A 4      +
 00000002 00000002 00000190   A 4      +
 00000002 00000002 00000198   A 4      +
 00000002 00000009 00000280   A 4      +
 00000002 0000000C 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002D8   A 4      +
 00000002 00000002 000002E0   A 4      +
 00000002 00000009 000003B8   A 4      +
 00000002 0000000C 000003C0   A 4      +
 00000002 00000002 000003E8   A 4      +
 00000002 00000002 00000410   A 4      +
 00000002 00000002 00000418   A 4      +
 00000002 00000009 00000508   A 4      +
 00000002 0000000C 00000510   A 4      +
 00000002 00000002 00000530   A 4      +
 00000002 00000002 00000558   A 4      +
 00000002 00000002 00000560   A 4      +
 00000002 00000033 00000668   A 4      +
 00000002 0000001E 00000670   A 4      +
 00000002 0000003A 00000678   A 4      +
 00000002 0000003A 00000680   A 4      +
 00000002 00000002 000006A0   A 4      +
 00000002 00000002 000006C8   A 4      +
 00000002 00000002 000006D0   A 4      +
 00000002 00000005 000007D0   A 4      +
 00000002 0000001E 000007D8   A 4      +
 00000002 0000003A 000007E0   A 4      +
 00000002 0000003A 000007E8   A 4      +
 00000002 00000002 00000808   A 4      +
 00000002 00000002 00000830   A 4      +
 00000002 00000002 00000838   A 4      +
 00000002 00000035 000008F0   A 4      +
 00000002 00000002 00000918   A 4      +
 00000002 00000002 00000940   A 4      +
 00000002 00000002 00000948   A 4      +
 00000002 00000002 00000A58   A 4      +
 00000002 0000003A 00000A60   A 4      +
 00000002 0000001E 00000A68   A 4      +
 00000002 0000003A 00000A70   A 4      +
 00000002 00000002 00000A90   A 4      +
 00000002 00000002 00000AB8   A 4      +
 00000002 00000002 00000AC0   A 4      +
 00000002 00000023 00000B90   A 4      +
 00000002 00000002 00000BB0   A 4      +
 00000002 00000002 00000BD8   A 4      +
 00000002 00000002 00000BE0   A 4      +
 00000002 00000023 00000CB0   A 4      +
                                                 Relocation Dictionary                                                     Page  462 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000CD8   A 4      +
 00000002 00000002 00000D00   A 4      +
 00000002 00000002 00000D08   A 4      +
 00000002 00000002 00000DC0   A 4      +
 00000002 00000002 00000E78   A 4      +
 00000002 00000002 00000E80   A 4      +
 00000002 00000002 00000F18   A 4      +
 00000002 00000002 00000F20   A 4      +
 00000002 00000002 00000FC0   A 4      +
 00000002 00000002 00000FC8   A 4      +
 00000002 00000002 00001058   A 4      +
 00000002 00000002 00001080   A 4      +
 00000002 00000002 00001088   A 4      +
 00000002 00000015 00001180   A 4      +
 00000002 00000002 000011B0   A 4      +
 00000002 00000002 000011D8   A 4      +
 00000002 00000002 000011E0   A 4      +
 00000002 00000039 000012BC   Q 4      +
 00000002 00000019 000012C0   A 4      +
 00000002 0000003A 000012C8   A 4      +
 00000002 00000002 00001380   A 4      +
 00000002 00000002 00001388   A 4      +
 00000002 00000002 00001408   A 4      +
 00000002 00000002 00001410   A 4      +
 00000002 00000002 00001498   A 4      +
 00000002 00000002 000014A0   A 4      +
 00000002 00000002 00001510   A 4      +
 00000002 00000002 00001518   A 4      +
 00000002 00000002 00001590   A 4      +
 00000002 00000002 00001598   A 4      +
 00000002 00000002 00001610   A 4      +
 00000002 00000002 00001618   A 4      +
 00000002 00000002 00001680   A 4      +
 00000002 00000002 000016A8   A 4      +
 00000002 00000002 000016B0   A 4      +
 00000002 0000002E 00001808   A 4      +
 00000002 0000003A 00001810   A 4      +
 00000002 0000003A 00001818   A 4      +
 00000002 00000002 000018A8   A 4      +
 00000002 00000002 000018D0   A 4      +
 00000002 00000002 000018D8   A 4      +
 00000002 00000002 000019B0   A 4      +
 00000002 00000002 00001A00   A 4      +
 00000002 00000002 00001A08   A 4      +
 00000002 00000002 00001A88   A 4      +
 00000002 00000002 00001A90   A 4      +
 00000002 00000002 00001B48   A 4      +
 00000002 00000002 00001B50   A 4      +
 00000002 00000002 00001C20   A 4      +
 00000002 00000002 00001C28   A 4      +
 00000002 00000002 00001CA8   A 4      +
 00000002 00000002 00001CB0   A 4      +
 00000002 00000002 00001DB8   A 4      +
                                                 Relocation Dictionary                                                     Page  463 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00001DC0   A 4      +
 00000002 00000002 00001E08   A 4      +
 00000002 00000002 00001E30   A 4      +
 00000002 00000002 00001E38   A 4      +
 00000002 0000000D 00001EA4   Q 4      +
 00000002 00000002 00001F88   A 4      +
 00000002 00000002 00001F90   A 4      +
 00000002 00000002 00001FD8   A 4      +
 00000002 00000002 00002000   A 4      +
 00000002 00000002 00002008   A 4      +
 00000002 00000002 00002100   A 4      +
 00000002 00000002 00002108   A 4      +
 00000002 00000002 00002110   A 4      +
 00000002 00000002 00002160   A 4      +
 00000002 00000002 00002168   A 4      +
 00000002 0000003A 000021D0   A 4      +
 00000002 00000002 00002200   A 4      +
 00000002 00000002 00002228   A 4      +
 00000002 00000002 00002230   A 4      +
 00000002 00000002 000022B8   A 4      +
 00000002 00000002 00002330   A 4      +
 00000002 00000002 00002358   A 4      +
 00000002 00000002 00002360   A 4      +
 00000002 00000002 00002420   A 4      +
 00000002 00000002 00002448   A 4      +
 00000002 00000002 00002470   A 4      +
 00000002 00000002 00002478   A 4      +
 00000002 00000002 00002508   A 4      +
 00000002 00000002 00002510   A 4      +
 00000002 00000002 00002518   A 4      +
 00000002 00000002 000025B0   A 4      +
 00000002 00000002 000025D8   A 4      +
 00000002 00000002 000025E0   A 4      +
 00000002 00000002 00002670   A 4      +
 00000002 00000027 00002678   A 4      +
 00000002 00000002 00002680   A 4      +
 00000002 0000002A 00002688   A 4      +
 00000002 00000002 00002728   A 4      +
 00000002 00000002 00002750   A 4      +
 00000002 00000002 00002758   A 4      +
 00000002 00000002 00002820   A 4      +
 00000002 00000002 00002878   A 4      +
 00000002 00000002 00002880   A 4      +
 00000002 00000002 00002928   A 4      +
 00000002 00000002 00002950   A 4      +
 00000002 00000002 00002958   A 4      +
 00000002 00000039 00002A14   Q 4      +
 00000002 00000002 00002A40   A 4      +
 00000002 00000002 00002A68   A 4      +
 00000002 00000002 00002A70   A 4      +
 00000002 00000022 00002AE8   A 4      +
 00000002 00000024 00002AF0   A 4      +
 00000002 00000030 00002AF8   A 4      +
                                                 Relocation Dictionary                                                     Page  464 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000026 00002B00   A 4      +
 00000002 0000002F 00002B08   A 4      +
 00000002 00000002 00002C78   A 4      +
 00000002 00000002 00002CA0   A 4      +
 00000002 00000002 00002CA8   A 4      +
 00000002 00000022 00002E78   A 4      +
 00000002 0000002E 00002E80   A 4      +
 00000002 0000003A 00002E88   A 4      +
 00000002 0000003A 00002E90   A 4      +
 00000002 00000025 00002E98   A 4      +
 00000002 00000024 00002EA0   A 4      +
 00000002 00000002 00002ED0   A 4      +
 00000002 00000002 00002EF8   A 4      +
 00000002 00000002 00002F00   A 4      +
 00000002 0000001C 00002FD0   A 4      +
 00000002 00000038 00002FD8   Q 4      +
 00000002 00000002 00003008   A 4      +
 00000002 00000002 00003030   A 4      +
 00000002 00000002 00003038   A 4      +
 00000002 00000002 000030E0   A 4      +
 00000002 00000002 00003160   A 4      +
 00000002 00000002 00003188   A 4      +
 00000002 00000002 00003190   A 4      +
 00000002 00000002 00003220   A 4      +
 00000002 00000002 000032B0   A 4      +
 00000002 00000002 000032D8   A 4      +
 00000002 00000002 000032E0   A 4      +
 00000002 00000022 00003380   A 4      +
 00000002 00000024 00003388   A 4      +
 00000002 00000002 00003390   A 4      +
 00000002 00000002 00003398   A 4      +
 00000002 0000003A 000033A0   A 4      +
 00000002 0000003A 000033A8   A 4      +
 00000002 00000036 000033B0   A 4      +
 00000002 00000028 000033B8   A 4      +
 00000002 00000002 000036C0   A 4      +
 00000002 00000002 000036E8   A 4      +
 00000002 00000002 000036F0   A 4      +
 00000002 0000000F 00003760   A 4      +
 00000002 00000002 00003800   A 4      +
 00000002 00000002 00003828   A 4      +
 00000002 00000002 00003830   A 4      +
 00000002 00000002 00003930   A 4      +
 00000002 00000002 00003938   A 4      +
 00000002 0000002F 00003940   A 4      +
 00000002 00000031 00003948   A 4      +
 00000002 0000003A 00003950   A 4      +
 00000002 00000030 00003958   A 4      +
 00000002 00000002 00003960   A 4      +
 00000002 00000002 00003968   A 4      +
 00000002 0000001B 00003970   A 4      +
 00000002 00000002 00003AA0   A 4      +
 00000002 00000002 00003AC8   A 4      +
                                                 Relocation Dictionary                                                     Page  465 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00003AD0   A 4      +
 00000002 00000002 00003B48   A 4      +
 00000002 0000001F 00003B50   A 4      +
 00000002 00000002 00003B58   A 4      +
 00000002 00000002 00003B60   A 4      +
 00000002 00000002 00003C88   A 4      +
 00000002 00000002 00003CB0   A 4      +
 00000002 00000002 00003CB8   A 4      +
 00000002 00000002 00003E18   A 4      +
 00000002 00000002 00003E20   A 4      +
 00000002 00000002 00003F10   A 4      +
 00000002 00000002 00003F38   A 4      +
 00000002 00000002 00003F40   A 4      +
 00000002 00000002 00004060   A 4      +
 00000002 00000002 00004068   A 4      +
 00000002 00000002 00004070   A 4      +
 00000002 00000002 00004078   A 4      +
 00000002 00000002 00004080   A 4      +
 00000002 00000012 00004098   A 4      +
 00000002 00000002 000042A8   A 4      +
 00000002 00000002 000042D0   A 4      +
 00000002 00000002 000042D8   A 4      +
 00000002 00000002 00004368   A 4      +
 00000002 00000002 00004370   A 4      +
 00000002 00000002 00004378   A 4      +
 00000002 00000002 00004380   A 4      +
 00000002 00000002 00004388   A 4      +
 00000002 00000014 00004390   A 4      +
 00000002 00000002 00004398   A 4      +
 00000002 00000002 000045D0   A 4      +
 00000002 00000002 000045F8   A 4      +
 00000002 00000002 00004600   A 4      +
 00000002 00000002 000046C0   A 4      +
 00000002 0000002D 000046C8   A 4      +
 00000002 0000002B 000046D0   A 4      +
 00000002 00000002 000046D8   A 4      +
 00000002 0000001B 000046E0   A 4      +
 00000002 0000003A 000046E8   A 4      +
 00000002 0000001D 000046F0   A 4      +
 00000002 00000021 000046F8   A 4      +
 00000002 0000000F 00004700   A 4      +
 00000002 0000001E 00004708   A 4      +
 00000002 0000003A 00004710   A 4      +
 00000002 00000002 00004718   A 4      +
 00000002 00000002 00004720   A 4      +
 00000002 00000002 00004728   A 4      +
 00000002 00000014 00004730   A 4      +
 00000002 00000002 00004738   A 4      +
 00000002 00000002 00004740   A 4      +
 00000002 0000001F 00004748   A 4      +
 00000002 00000002 00004D98   A 4      +
 00000002 00000002 00004DC0   A 4      +
 00000002 00000002 00004DC8   A 4      +
                                                 Relocation Dictionary                                                     Page  466 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00004E78   A 4      +
 00000002 0000002D 00004E80   A 4      +
 00000002 0000002B 00004E88   A 4      +
 00000002 00000002 00004E90   A 4      +
 00000002 0000001D 00004E98   A 4      +
 00000002 00000021 00004EA0   A 4      +
 00000002 00000002 00004EA8   A 4      +
 00000002 00000002 00004EB0   A 4      +
 00000002 00000002 00004EB8   A 4      +
 00000002 0000001F 00004EC0   A 4      +
 00000002 00000002 00004EC8   A 4      +
 00000002 00000014 00004ED0   A 4      +
 00000002 00000002 00004ED8   A 4      +
 00000002 00000002 00005370   A 4      +
 00000002 00000002 00005398   A 4      +
 00000002 00000002 000053A0   A 4      +
 00000002 00000002 000054B0   A 4      +
 00000002 00000002 000054E0   A 4      +
 00000002 00000002 00005508   A 4      +
 00000002 00000002 00005510   A 4      +
 00000002 00000002 000055D0   A 4      +
 00000002 00000002 000055D8   A 4      +
 00000002 0000002B 000055E8   A 4      +
 00000002 00000002 000055F0   A 4      +
 00000002 0000002F 000055F8   A 4      +
 00000002 00000018 00005600   A 4      +
 00000002 00000002 00005608   A 4      +
 00000002 00000002 00005610   A 4      +
 00000002 00000002 00005618   A 4      +
 00000002 0000000B 00005620   A 4      +
 00000002 00000010 00005628   A 4      +
 00000002 00000002 00005630   A 4      +
 00000002 00000014 00005638   A 4      +
 00000002 00000002 00005640   A 4      +
 00000002 00000030 00005648   A 4      +
 00000002 00000002 00005B68   A 4      +
 00000002 00000002 00005B90   A 4      +
 00000002 00000002 00005B98   A 4      +
 00000002 00000002 00005C28   A 4      +
 00000002 00000002 00005C30   A 4      +
 00000002 00000002 00005D38   A 4      +
 00000002 00000002 00005D60   A 4      +
 00000002 00000002 00005D68   A 4      +
 00000002 00000002 00005F68   A 4      +
 00000002 00000002 00005F90   A 4      +
 00000002 00000002 00005F98   A 4      +
 00000002 00000002 00006070   A 4      +
 00000002 00000002 000060A0   A 4      +
 00000002 00000002 000060C8   A 4      +
 00000002 00000002 000060D0   A 4      +
 00000002 00000002 00006150   A 4      +
 00000002 00000002 00006250   A 4      +
 00000002 00000002 00006278   A 4      +
                                                 Relocation Dictionary                                                     Page  467 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00006280   A 4      +
 00000002 0000001E 000063F8   A 4      +
 00000002 0000003A 00006400   A 4      +
 00000002 0000003A 00006408   A 4      +
 00000002 00000002 00006410   A 4      +
 00000002 00000002 00006468   A 4      +
 00000002 00000002 00006470   A 4      +
 00000002 00000002 00006538   A 4      +
 00000002 00000002 00006560   A 4      +
 00000002 00000002 00006568   A 4      +
 00000002 00000002 000065C8   A 4      +
 00000002 00000002 000065D0   A 4      +
 00000002 00000002 000065D8   A 4      +
 00000002 00000002 000066D8   A 4      +
 00000002 00000002 00006700   A 4      +
 00000002 00000002 00006708   A 4      +
 00000002 00000003 000067E0   A 4      +
 00000002 0000000A 000067E8   A 4      +
 00000002 00000002 00006870   A 4      +
 00000002 00000002 00006898   A 4      +
 00000002 00000002 000068A0   A 4      +
 00000002 00000002 00006978   A 4      +
 00000002 00000002 000069B8   A 4      +
 00000002 00000002 000069E0   A 4      +
 00000002 00000002 000069E8   A 4      +
 00000002 00000002 00006AA8   A 4      +
 00000002 00000002 00006AB0   A 4      +
 00000002 00000002 00006B80   A 4      +
 00000002 00000002 00006BA8   A 4      +
 00000002 00000002 00006BB0   A 4      +
 00000002 00000037 00006C90   A 4      +
 00000002 00000002 00006CD0   A 4      +
 00000002 00000002 00006CF8   A 4      +
 00000002 00000002 00006D00   A 4      +
 00000002 00000002 00006DC0   A 4      +
 00000002 00000037 00006DC8   A 4      +
 00000002 00000002 00006E78   A 4      +
 00000002 00000002 00006EA0   A 4      +
 00000002 00000002 00006EA8   A 4      +
 00000002 00000034 00006F80   A 4      +
 00000002 00000002 00006FC0   A 4      +
 00000002 00000002 00006FE8   A 4      +
 00000002 00000002 00006FF0   A 4      +
 00000002 00000002 000070B0   A 4      +
 00000002 00000034 000070B8   A 4      +
 00000002 00000002 00007168   A 4      +
 00000002 00000002 00007190   A 4      +
 00000002 00000002 00007198   A 4      +
 00000002 0000000A 00007398   A 4      +
 00000002 00000002 000073A0   A 4      +
 00000002 00000002 000073A8   A 4      +
 00000002 00000002 000073B0   A 4      +
 00000002 00000036 000073B8   A 4      +
                                                 Relocation Dictionary                                                     Page  468 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000003A 000073C0   A 4      +
 00000002 00000002 000073F0   A 4      +
 00000002 00000002 00007418   A 4      +
 00000002 00000002 00007420   A 4      +
 00000002 0000002F 000074A0   A 4      +
 00000002 00000030 000074A8   A 4      +
 00000002 00000002 000074B0   A 4      +
 00000002 00000002 000074B8   A 4      +
 00000002 0000003A 000074C0   A 4      +
 00000002 0000002E 000074C8   A 4      +
 00000002 0000003A 000074D0   A 4      +
 00000002 00000017 000074D8   A 4      +
 00000002 00000002 000074E0   A 4      +
 00000002 00000010 000074E8   A 4      +
 00000002 00000002 000074F0   A 4      +
 00000002 00000002 000074F8   A 4      +
 00000002 0000000B 00007500   A 4      +
 00000002 00000002 000078D0   A 4      +
 00000002 00000002 000078F8   A 4      +
 00000002 00000002 00007900   A 4      +
 00000002 00000008 00007980   A 4      +
 00000002 00000002 00007988   A 4      +
 00000002 00000002 00007990   A 4      +
 00000002 00000002 00007A30   A 4      +
 00000002 00000002 00007A58   A 4      +
 00000002 00000002 00007A60   A 4      +
 00000002 00000002 00007B28   A 4      +
 00000002 00000002 00007B58   A 4      +
 00000002 00000002 00007B80   A 4      +
 00000002 00000002 00007B88   A 4      +
 00000002 00000002 00007C00   A 4      +
 00000002 00000016 00007C08   A 4      +
 00000002 00000002 00007D40   A 4      +
 00000002 00000002 00007D68   A 4      +
 00000002 00000002 00007D70   A 4      +
 00000002 00000002 00007E38   A 4      +
 00000002 00000002 00007E68   A 4      +
 00000002 00000002 00007E90   A 4      +
 00000002 00000002 00007E98   A 4      +
 00000002 00000002 00007F08   A 4      +
 00000002 0000003A 00007F10   A 4      +
 00000002 0000002E 00007F18   A 4      +
 00000002 0000003A 00007F20   A 4      +
 00000002 0000001E 00007F28   A 4      +
 00000002 00000002 00007F40   A 4      +
 00000002 00000002 00008100   A 4      +
 00000002 00000002 00008128   A 4      +
 00000002 00000002 00008130   A 4      +
 00000002 00000002 000081B8   A 4      +
 00000002 00000002 00008258   A 4      +
 00000002 00000002 00008280   A 4      +
 00000002 00000002 00008288   A 4      +
 00000002 00000002 00008310   A 4      +
                                                 Relocation Dictionary                                                     Page  469 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00008318   A 4      +
 00000002 00000002 000083A0   A 4      +
 00000002 00000002 000083C8   A 4      +
 00000002 00000002 000083D0   A 4      +
 00000002 00000002 00008490   A 4      +
 00000002 00000002 000084C0   A 4      +
 00000002 00000002 000084E8   A 4      +
 00000002 00000002 000084F0   A 4      +
 00000002 0000002C 00008568   A 4      +
 00000002 00000002 00008570   A 4      +
 00000002 0000002E 00008578   A 4      +
 00000002 0000003A 00008580   A 4      +
 00000002 0000003A 00008588   A 4      +
 00000002 00000019 00008590   A 4      +
 00000002 00000022 00008598   A 4      +
 00000002 00000002 000085A0   A 4      +
 00000002 00000024 000085A8   A 4      +
 00000002 00000002 000085B0   A 4      +
 00000002 00000002 000085B8   A 4      +
 00000002 00000002 000085C0   A 4      +
 00000002 00000036 000085C8   A 4      +
 00000002 00000002 000085D0   A 4      +
 00000002 00000029 000085D8   A 4      +
 00000002 0000001D 000085E0   A 4      +
 00000002 0000001A 000085E8   A 4      +
 00000002 00000002 00008E18   A 4      +
 00000002 00000024 00008E20   A 4      +
 00000002 00000002 00008E28   A 4      +
 00000002 00000002 00008E30   A 4      +
 00000002 00000002 00008E38   A 4      +
 00000002 0000003A 00008E40   A 4      +
 00000002 00000036 00008E48   A 4      +
 00000002 0000003A 00008E50   A 4      +
 00000002 00000002 00008E58   A 4      +
 00000002 0000002E 00008E60   A 4      +
 00000002 00000019 00008E68   A 4      +
 00000002 00000022 00008E70   A 4      +
 00000002 0000001A 00008E78   A 4      +
 00000002 00000021 00008E80   A 4      +
 00000002 00000002 00008E90   A 4      +
 00000002 00000029 00008E98   A 4      +
 00000002 0000001F 00008EA0   A 4      +
 00000002 00000002 00009628   A 4      +
 00000002 00000002 00009650   A 4      +
 00000002 00000002 00009658   A 4      +
 00000002 00000002 000096F8   A 4      +
 00000002 00000002 00009700   A 4      +
 00000002 00000002 000097E8   A 4      +
 00000002 00000002 00009810   A 4      +
 00000002 00000002 00009818   A 4      +
 00000002 00000002 000098A8   A 4      +
 00000002 00000002 000098B0   A 4      +
 00000002 00000002 00009950   A 4      +
                                                 Relocation Dictionary                                                     Page  470 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00009978   A 4      +
 00000002 00000002 00009980   A 4      +
 00000002 00000002 00009AC0   A 4      +
 00000002 0000001E 00009AC8   A 4      +
 00000002 0000003A 00009AD0   A 4      +
 00000002 0000003A 00009AD8   A 4      +
 00000002 0000001F 00009AE0   A 4      +
 00000002 00000002 00009B10   A 4      +
 00000002 00000002 00009B38   A 4      +
 00000002 00000002 00009B40   A 4      +
 00000002 00000002 00009C00   A 4      +
 00000002 00000002 00009C28   A 4      +
 00000002 00000002 00009C50   A 4      +
 00000002 00000002 00009C58   A 4      +
 00000002 00000002 00009D30   A 4      +
 00000002 00000002 00009D38   A 4      +
 00000002 00000006 00009D40   A 4      +
 00000002 0000003A 00009D48   A 4      +
 00000002 0000001E 00009D50   A 4      +
 00000002 0000003A 00009D58   A 4      +
 00000002 00000002 00009E88   A 4      +
 00000002 00000002 00009EB0   A 4      +
 00000002 00000002 00009EB8   A 4      +
 00000002 00000002 00009FF0   A 4      +
 00000002 0000000B 00009FF8   A 4      +
 00000002 0000001E 0000A000   A 4      +
 00000002 0000003A 0000A008   A 4      +
 00000002 0000003A 0000A010   A 4      +
 00000002 00000002 0000A040   A 4      +
 00000002 00000002 0000A068   A 4      +
 00000002 00000002 0000A070   A 4      +
 00000002 00000002 0000A180   A 4      +
 00000002 0000003A 0000A188   A 4      +
 00000002 00000002 0000A190   A 4      +
 00000002 00000002 0000A1C8   A 4      +
 00000002 00000002 0000A1F0   A 4      +
 00000002 00000002 0000A1F8   A 4      +
 00000002 0000001E 0000A328   A 4      +
 00000002 0000003A 0000A330   A 4      +
 00000002 0000003A 0000A338   A 4      +
 00000002 00000002 0000A340   A 4      +
 00000002 00000002 0000A378   A 4      +
 00000002 00000002 0000A3A0   A 4      +
 00000002 00000002 0000A3A8   A 4      +
 00000002 00000002 0000A4D8   A 4      +
 00000002 00000002 0000A4E0   A 4      +
 00000002 00000020 0000A4E8   A 4      +
 00000002 00000002 0000A518   A 4      +
 00000002 00000002 0000A540   A 4      +
 00000002 00000002 0000A548   A 4      +
 00000002 0000003A 0000A5E0   A 4      +
 00000002 00000002 0000A5E8   A 4      +
 00000002 00000002 0000A5F0   A 4      +
                                                 Relocation Dictionary                                                     Page  471 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000000E 0000A5F8   A 4      +
 00000002 0000001E 0000A600   A 4      +
 00000002 0000003A 0000A608   A 4      +
 00000002 00000002 0000A8A0   A 4      +
 00000002 00000002 0000A8C8   A 4      +
 00000002 00000002 0000A8D0   A 4      +
 00000002 00000002 0000AA08   A 4      +
 00000002 0000001E 0000AA10   A 4      +
 00000002 0000003A 0000AA18   A 4      +
 00000002 0000003A 0000AA20   A 4      +
 00000002 00000002 0000AA50   A 4      +
 00000002 00000002 0000AA78   A 4      +
 00000002 00000002 0000AA80   A 4      +
 00000002 00000002 0000AAF0   A 4      +
 00000002 00000002 0000AAF8   A 4      +
 00000002 00000002 0000ABB0   A 4      +
 00000002 00000002 0000ABD8   A 4      +
 00000002 00000002 0000ABE0   A 4      +
 00000002 00000006 0000AC58   A 4      +
 00000002 0000003A 0000AC60   A 4      +
 00000002 0000003A 0000AC68   A 4      +
 00000002 00000032 0000AC70   Q 4      +
 00000002 00000004 0000AC74   Q 4      +
 00000002 0000001E 0000AC78   A 4      +
 00000002 00000002 0000AFD0   A 4      +
 00000002 00000002 0000AFF8   A 4      +
 00000002 00000002 0000B000   A 4      +
 00000002 00000006 0000B0E8   A 4      +
 00000002 0000003A 0000B0F0   A 4      +
 00000002 0000003A 0000B0F8   A 4      +
 00000002 00000032 0000B100   Q 4      +
 00000002 00000002 0000B108   A 4      +
 00000002 00000002 0000B110   A 4      +
 00000002 00000002 0000B118   A 4      +
 00000002 00000002 0000B128   A 4      +
 00000002 00000002 0000B130   A 4      +
 00000002 00000002 0000B138   A 4      +
 00000002 00000002 0000B140   A 4      +
 00000002 00000011 0000B148   A 4      +
 00000002 00000004 0000B150   Q 4      +
 00000002 0000001E 0000B158   A 4      +
 00000002 00000002 0000B8C8   A 4      +
 00000002 0000003A 0000B8D0   A 4      +
 00000002 00000002 0000B8D8   A 4      +
 00000002 00000002 0000B8E0   A 4      +
 00000002 00000002 0000B8E8   A 4      +
 00000002 00000002 0000B8F0   A 4      +
 00000002 00000002 0000B8F8   A 4      +
 00000002 00000002 0000B900   A 4      +
 00000002 00000011 0000B908   A 4      +
 00000002 00000006 0000B910   A 4      +
 00000002 0000003A 0000B918   A 4      +
 00000002 00000032 0000B920   Q 4      +
                                                 Relocation Dictionary                                                     Page  472 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000004 0000B924   Q 4      +
 00000002 0000001E 0000B928   A 4      +
 00000002 00000002 0000B930   A 4      +
 00000002 00000002 0000B938   A 4      +
 00000002 00000002 0000C0D0   A 4      +
 00000002 00000002 0000C0F8   A 4      +
 00000002 00000002 0000C100   A 4      +
 00000002 00000002 0000C168   A 4      +
 00000002 0000003A 0000C170   A 4      +
 00000002 00000006 0000C178   A 4      +
 00000002 0000003A 0000C180   A 4      +
 00000002 00000032 0000C188   Q 4      +
 00000002 00000004 0000C18C   Q 4      +
 00000002 0000001E 0000C190   A 4      +
 00000002 00000002 0000C3D0   A 4      +
 00000002 00000002 0000C3F8   A 4      +
 00000002 00000002 0000C400   A 4      +
 00000002 00000002 0000C468   A 4      +
 00000002 00000002 0000C470   A 4      +
 00000002 00000002 0000C538   A 4      +
 00000002 00000002 0000C560   A 4      +
 00000002 00000002 0000C568   A 4      +
 00000002 00000006 0000C6D0   A 4      +
 00000002 0000003A 0000C6D8   A 4      +
 00000002 0000003A 0000C6E0   A 4      +
 00000002 00000032 0000C6E8   Q 4      +
 00000002 00000002 0000C6F0   A 4      +
 00000002 00000002 0000C6F8   A 4      +
 00000002 00000002 0000C700   A 4      +
 00000002 00000002 0000C708   A 4      +
 00000002 00000013 0000C710   A 4      +
 00000002 00000002 0000C718   A 4      +
 00000002 00000004 0000C730   Q 4      +
 00000002 0000001E 0000C738   A 4      +
 00000002 00000002 0000C748   A 4      +
 00000002 00000002 0000C750   A 4      +
 00000002 00000004 0000CF20   Q 4      +
 00000002 0000001E 0000CF28   A 4      +
 00000002 00000002 0000CF30   A 4      +
 00000002 00000007 0000CF38   Q 4      +
 00000002 00000006 0000CF48   A 4      +
 00000002 0000003A 0000CF50   A 4      +
 00000002 0000003A 0000CF58   A 4      +
 00000002 00000032 0000CF60   Q 4      +
 00000002 00000002 0000D248   A 4      +
 00000002 00000002 0000D270   A 4      +
 00000002 00000002 0000D278   A 4      +
 00000002 0000003A 0000D3D0   A 4      +
 00000002 00000006 0000D3D8   A 4      +
 00000002 0000003A 0000D3E0   A 4      +
 00000002 00000032 0000D3E8   Q 4      +
 00000002 00000002 0000D3F0   A 4      +
 00000002 00000002 0000D3F8   A 4      +
                                                 Relocation Dictionary                                                     Page  473 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 0000D408   A 4      +
 00000002 00000002 0000D410   A 4      +
 00000002 00000013 0000D418   A 4      +
 00000002 00000002 0000D420   A 4      +
 00000002 00000004 0000D438   Q 4      +
 00000002 0000001E 0000D440   A 4      +
 00000002 00000002 0000D448   A 4      +
 00000002 00000002 0000D450   A 4      +
 00000002 00000006 0000DC80   A 4      +
 00000002 0000003A 0000DC88   A 4      +
 00000002 0000003A 0000DC90   A 4      +
 00000002 00000032 0000DC98   Q 4      +
 00000002 00000002 0000DCA0   A 4      +
 00000002 00000004 0000DCA8   Q 4      +
 00000002 0000001E 0000DCB0   A 4      +
 00000002 00000002 0000DCB8   A 4      +
 00000002 00000007 0000DCD8   Q 4      +
 00000002 00000002 0000E0B8   A 4      +
 00000002 00000002 0000E0E0   A 4      +
 00000002 00000002 0000E0E8   A 4      +
 00000002 00000002 0000E1A0   A 4      +
 00000002 00000002 0000E1A8   A 4      +
 00000002 00000002 0000E290   A 4      +
 00000002 00000002 0000E2B8   A 4      +
 00000002 00000002 0000E2C0   A 4      +
 00000002 00000002 0000E820   A 4      +
 00000002 00000002 0000E828   A 4      +
 00000002 0000003A 0000E830   A 4      +
 00000002 00000002 0000E838   A 4      +
 00000002 00000002 0000E840   A 4      +
 00000040 00000039 000100BC   Q 4      +
 00000040 00000039 000101DC   Q 4      +
 00000040 00000039 0001029C   Q 4      +
 00000040 00000039 000102C4   Q 4      +
 00000040 00000039 000102EC   Q 4      +
 00000040 0000003A 000102F8   A 4      +
 00000040 00000039 00010314   Q 4      +
 00000040 0000003A 00010320   A 4      +
 00000040 00000039 0001033C   Q 4      +
 00000040 0000003A 00010348   A 4      +
 00000040 00000039 00010364   Q 4      +
 00000040 0000003A 00010370   A 4      +
 00000040 00000039 0001038C   Q 4      +
 00000040 0000003A 00010398   A 4      +
 00000040 00000039 000103B4   Q 4      +
 00000040 0000003A 000103C0   A 4      +
 00000040 00000039 000103DC   Q 4      +
 00000040 0000003A 000103E8   A 4      +
 00000040 00000039 00010404   Q 4      +
 00000040 0000003A 00010410   A 4      +
 00000040 00000039 0001042C   Q 4      +
 00000040 0000003A 00010438   A 4      +
 00000040 00000039 00010454   Q 4      +
                                                 Relocation Dictionary                                                     Page  474 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 0000003A 00010460   A 4      +
 00000040 00000039 0001047C   Q 4      +
 00000040 0000003A 00010488   A 4      +
 00000040 00000039 000104A4   Q 4      +
 00000040 0000003A 000104B0   A 4      +
 00000040 00000039 000104CC   Q 4      +
 00000040 0000003A 000104D8   A 4      +
 00000040 00000039 000104F4   Q 4      +
 00000040 0000003A 00010500   A 4      +
 00000040 00000039 0001051C   Q 4      +
 00000040 0000003A 00010528   A 4      +
 00000040 00000039 00010544   Q 4      +
 00000040 0000003A 00010550   A 4      +
 00000040 00000039 0001056C   Q 4      +
 00000040 0000003A 00010578   A 4      +
 00000040 00000039 00010594   Q 4      +
 00000040 0000003A 000105A0   A 4      +
 00000040 00000039 000105BC   Q 4      +
 00000040 0000003A 000105C8   A 4      +
 00000040 00000039 000105E4   Q 4      +
 00000040 0000003A 000105F0   A 4      +
 00000040 00000039 0001060C   Q 4      +
 00000040 0000003A 00010618   A 4      +
 00000040 00000039 00010634   Q 4      +
 00000040 0000003A 00010640   A 4      +
 00000040 00000039 0001065C   Q 4      +
 00000040 0000003A 00010668   A 4      +
 00000040 00000039 00010684   Q 4      +
 00000040 0000003A 00010690   A 4      +
 00000040 00000039 000106AC   Q 4      +
 00000040 0000003A 000106B8   A 4      +
 00000040 00000039 000106D4   Q 4      +
 00000040 0000003A 000106E0   A 4      +
 00000040 00000039 000106FC   Q 4      +
 00000040 0000003A 00010708   A 4      +
 00000040 00000039 00010724   Q 4      +
 00000040 0000003A 00010730   A 4      +
 00000040 00000039 0001074C   Q 4      +
 00000040 0000003A 00010758   A 4      +
 00000040 00000039 00010774   Q 4      +
 00000040 0000003A 00010780   A 4      +
 00000040 00000039 0001079C   Q 4      +
 00000040 0000003A 000107A8   A 4      +
 00000040 00000039 000107C4   Q 4      +
 00000040 0000003A 000107D0   A 4      +
 00000040 00000039 000107EC   Q 4      +
 00000040 0000003A 000107F8   A 4      +
 00000040 00000039 00010814   Q 4      +
 00000040 0000003A 00010820   A 4      +
 00000040 00000039 0001083C   Q 4      +
 00000040 0000003A 00010848   A 4      +
 00000040 00000039 00010864   Q 4      +
 00000040 0000003A 00010870   A 4      +
                                                 Relocation Dictionary                                                     Page  475 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 00000039 0001088C   Q 4      +
 00000040 0000003A 00010898   A 4      +
 00000040 00000039 000108B4   Q 4      +
 00000040 0000003A 000108C0   A 4      +
 00000040 00000039 000108DC   Q 4      +
 00000040 0000003A 000108E8   A 4      +
 00000040 00000039 00010904   Q 4      +
 00000040 0000003A 00010910   A 4      +
 00000040 00000039 0001092C   Q 4      +
 00000040 0000003A 00010938   A 4      +
 00000040 00000039 00010954   Q 4      +
 00000040 0000003A 00010960   A 4      +
 00000040 00000039 0001097C   Q 4      +
 00000040 0000003A 00010988   A 4      +
 00000040 00000039 000109A4   Q 4      +
 00000040 0000003A 000109B0   A 4      +
 00000040 00000039 000109CC   Q 4      +
 00000040 0000003A 000109D8   A 4      +
 00000040 00000039 000109F4   Q 4      +
 00000040 0000003A 00010A00   A 4      +
 00000040 00000039 00010A1C   Q 4      +
 00000040 0000003A 00010A28   A 4      +
 00000040 00000039 00010A44   Q 4      +
 00000040 0000003A 00010A50   A 4      +
 00000040 00000039 00010A6C   Q 4      +
 00000040 0000003A 00010A78   A 4      +
 00000040 00000039 00010A94   Q 4      +
 00000040 0000003A 00010AA0   A 4      +
 00000040 00000039 00010ABC   Q 4      +
 00000040 0000003A 00010AC8   A 4      +
 00000040 00000039 00010AE4   Q 4      +
 00000040 0000003A 00010AF0   A 4      +
 00000040 00000039 00010B0C   Q 4      +
 00000040 0000003A 00010B18   A 4      +
 00000040 00000039 00010B34   Q 4      +
 00000040 0000003A 00010B40   A 4      +
 00000040 00000039 00010B5C   Q 4      +
 00000040 0000003A 00010B68   A 4      +
 00000040 00000039 00010B84   Q 4      +
 00000040 0000003A 00010B90   A 4      +
 00000040 00000039 00010BAC   Q 4      +
 00000040 0000003A 00010BB8   A 4      +
 00000040 00000039 00010BD4   Q 4      +
 00000040 0000003A 00010BE0   A 4      +
 00000040 00000039 00010BFC   Q 4      +
 00000040 0000003A 00010C08   A 4      +
 00000040 00000039 00010C24   Q 4      +
 00000040 0000003A 00010C30   A 4      +
 00000040 00000039 00010C4C   Q 4      +
 00000040 0000003A 00010C58   A 4      +
 00000040 00000039 00010C74   Q 4      +
 00000040 0000003A 00010C80   A 4      +
 00000040 00000039 00010C9C   Q 4      +
                                                 Relocation Dictionary                                                     Page  476 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 0000003A 00010CA8   A 4      +
 00000040 00000039 00010CC4   Q 4      +
 00000040 0000003A 00010CD0   A 4      +
 00000040 00000039 00010CEC   Q 4      +
 00000040 0000003A 00010CF8   A 4      +
 00000040 00000039 00010D14   Q 4      +
 00000040 0000003A 00010D20   A 4      +
 00000040 00000039 00010D3C   Q 4      +
 00000040 0000003A 00010D48   A 4      +
 00000040 00000039 00010D64   Q 4      +
 00000040 0000003A 00010D70   A 4      +
 00000040 00000039 00010D8C   Q 4      +
 00000040 0000003A 00010D98   A 4      +
 00000040 00000039 00010DB4   Q 4      +
 00000040 0000003A 00010DC0   A 4      +
 00000040 00000039 00010DDC   Q 4      +
 00000040 0000003A 00010DE8   A 4      +
 00000040 00000039 00010E04   Q 4      +
 00000040 0000003A 00010E10   A 4      +
 00000040 00000039 00010E2C   Q 4      +
 00000040 0000003A 00010E38   A 4      +
 00000040 00000039 00010E54   Q 4      +
 00000040 0000003A 00010E60   A 4      +
 00000040 00000039 00010E7C   Q 4      +
 00000040 0000003A 00010E88   A 4      +
 00000040 00000039 00010EA4   Q 4      +
 00000040 0000003A 00010EB0   A 4      +
 00000040 00000039 00010ECC   Q 4      +
 00000040 0000003A 00010ED8   A 4      +
 00000040 00000039 00010EF4   Q 4      +
 00000040 0000003A 00010F00   A 4      +
 00000040 00000039 00010F1C   Q 4      +
 00000040 0000003A 00010F28   A 4      +
 00000040 00000039 00010F44   Q 4      +
 00000040 0000003A 00010F50   A 4      +
 00000040 00000039 00010F6C   Q 4      +
 00000040 0000003A 00010F78   A 4      +
 00000040 00000039 00010F94   Q 4      +
 00000040 0000003A 00010FA0   A 4      +
 00000040 00000039 00010FBC   Q 4      +
 00000040 0000003A 00010FC8   A 4      +
 00000040 00000039 00010FE4   Q 4      +
 00000040 0000003A 00010FF0   A 4      +
 00000040 00000039 0001100C   Q 4      +
 00000040 0000003A 00011018   A 4      +
 00000040 00000039 00011034   Q 4      +
 00000040 0000003A 00011040   A 4      +
 00000040 00000039 0001105C   Q 4      +
 00000040 0000003A 00011068   A 4      +
 00000040 00000039 00011084   Q 4      +
 00000040 0000003A 00011090   A 4      +
 00000040 00000039 000110AC   Q 4      +
 00000040 0000003A 000110B8   A 4      +
                                                 Relocation Dictionary                                                     Page  477 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 00000039 000110D4   Q 4      +
 00000040 0000003A 000110E0   A 4      +
                                                 DSECT Cross Reference                                                     Page  478 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFF  00248
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFD  00497
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFE  00375
@AUTO#rd_atomic64_add
         000000B0  FFFFFFFC  00624
@AUTO#rd_calloc
         000000A8  FFFFFFFB  00753
@AUTO#rd_clock
         000000B8  FFFFFFF7  01232
@AUTO#rd_crc32
         000000A8  FFFFFFDF  03713
@AUTO#rd_crc32_finalize
         000000A8  FFFFFFE0  03590
@AUTO#rd_crc32_init
         000000A8  FFFFFFE2  03379
@AUTO#rd_crc32_update
         000000AC  FFFFFFE1  03513
@AUTO#rd_free
         000000A8  FFFFFFF9  00983
@AUTO#rd_interval_expedite
         000000A8  FFFFFFF4  01577
@AUTO#rd_interval0
         000000B0  FFFFFFF5  01490
@AUTO#rd_kafka_$Api$Key2str
         000000A8  FFFFFFF0  02096
@AUTO#rd_kafka_check_produce
         000000AC  FFFFFFCF  06124
@AUTO#rd_kafka_curr_msgs_add
         000000A8  FFFFFFD6  04818
@AUTO#rd_kafka_curr_msgs_sub
         000000AC  FFFFFFD5  05036
@AUTO#rd_kafka_fatal_error_code
         000000A8  FFFFFFD3  05282
@AUTO#rd_kafka_headers_serialized_size
         000000A8  FFFFFFEF  02167
@AUTO#rd_kafka_lwtopic_keep
         000000A8  FFFFFFDC  04023
@AUTO#rd_kafka_message_broker_id
         000000A8  FFFFFFAF  13229
@AUTO#rd_kafka_message_destroy
         000000A8  FFFFFFB6  12212
@AUTO#rd_kafka_message_detach_headers
         000000AC  FFFFFFAC  14966
@AUTO#rd_kafka_message_errstr
         000000A8  FFFFFFD0  05881
@AUTO#rd_kafka_message_get
         000000A8  FFFFFFB2  12858
@AUTO#rd_kafka_message_get_from_rkm
         000000A8  FFFFFFB3  12626
@AUTO#rd_kafka_message_headers
                                                 DSECT Cross Reference                                                     Page  479 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000AC  FFFFFFAD  14830
@AUTO#rd_kafka_message_latency
         000000A8  FFFFFFB0  13119
@AUTO#rd_kafka_message_new
         000000A8  FFFFFFB5  12322
@AUTO#rd_kafka_message_set_headers
         000000A8  FFFFFFAB  15122
@AUTO#rd_kafka_message_setup
         000000A8  FFFFFFB4  12519
@AUTO#rd_kafka_message_status
         000000A8  FFFFFFAA  15232
@AUTO#rd_kafka_message_timestamp
         000000A8  FFFFFFB1  12994
@AUTO#rd_kafka_message2msg
         000000A8  FFFFFFED  02315
@AUTO#rd_kafka_msg_cmp_msgid
         000000A8  FFFFFFE6  03006
@AUTO#rd_kafka_msg_destroy
         000000A8  FFFFFFCE  06308
@AUTO#rd_kafka_msg_headers_parse
         000002E8  FFFFFFAE  14603
@AUTO#rd_kafka_msg_max_wire_size
         000000A8  FFFFFFEE  02245
@AUTO#rd_kafka_msg_new
         000000B0  FFFFFFCB  07179
@AUTO#rd_kafka_msg_new0
         000000B0  FFFFFFCC  06887
@AUTO#rd_kafka_msg_new00
         000000B0  FFFFFFCD  06554
@AUTO#rd_kafka_msg_partitioner
         000000AC  FFFFFFB7  12074
@AUTO#rd_kafka_msg_partitioner_consistent
         000000A8  FFFFFFBE  10678
@AUTO#rd_kafka_msg_partitioner_consistent_random
         000000A8  FFFFFFBD  10832
@AUTO#rd_kafka_msg_partitioner_fnv1a
         000000A8  FFFFFFBA  11208
@AUTO#rd_kafka_msg_partitioner_fnv1a_random
         000000A8  FFFFFFB9  11356
@AUTO#rd_kafka_msg_partitioner_murmur2
         000000A8  FFFFFFBC  10946
@AUTO#rd_kafka_msg_partitioner_murmur2_random
         000000A8  FFFFFFBB  11096
@AUTO#rd_kafka_msg_partitioner_random
         000000AC  FFFFFFBF  10563
@AUTO#rd_kafka_msg_sticky_partition
         000000A8  FFFFFFB8  11570
@AUTO#rd_kafka_msgbatch_destroy
         000000A8  FFFFFFA8  15586
@AUTO#rd_kafka_msgbatch_init
         000000A8  FFFFFFA7  15722
@AUTO#rd_kafka_msgbatch_ready_produce
         000000A8  FFFFFFA5  16029
                                                 DSECT Cross Reference                                                     Page  480 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_kafka_msgbatch_set_first_msg
         000000A8  FFFFFFA6  15877
@AUTO#rd_kafka_msgq_age_scan
         000000AC  FFFFFFC6  09483
@AUTO#rd_kafka_msgq_deq
         000000A8  FFFFFFE9  02724
@AUTO#rd_kafka_msgq_dump
         000000AC  FFFFFFA9  15431
@AUTO#rd_kafka_msgq_enq
         000000A8  FFFFFFE5  03101
@AUTO#rd_kafka_msgq_enq_sorted
         000000A8  FFFFFFC4  09794
@AUTO#rd_kafka_msgq_enq_sorted0
         000000A8  FFFFFFC5  09680
@AUTO#rd_kafka_msgq_find_pos
         000000B0  FFFFFFC3  09964
@AUTO#rd_kafka_msgq_first
         000000A8  FFFFFFE7  02909
@AUTO#rd_kafka_msgq_init
         000000A8  FFFFFFEA  02538
@AUTO#rd_kafka_msgq_len
         000000A8  FFFFFFEC  02386
@AUTO#rd_kafka_msgq_move_acked
         000000A8  FFFFFFC0  10422
@AUTO#rd_kafka_msgq_pop
         000000A8  FFFFFFE8  02838
@AUTO#rd_kafka_msgq_set_metadata
         000000A8  FFFFFFC1  10272
@AUTO#rd_kafka_msgq_size
         000000A8  FFFFFFEB  02457
@AUTO#rd_kafka_msgq_split
         000000A8  FFFFFFC2  10146
@AUTO#rd_kafka_msgq_verify_order0
         000000B0  FFFFFFA4  16358
@AUTO#rd_kafka_produce
         000000A8  FFFFFFC8  08684
@AUTO#rd_kafka_produce_batch
         000000D4  FFFFFFC7  09290
@AUTO#rd_kafka_producev
         00000154  FFFFFFC9  08556
@AUTO#rd_kafka_produceva
         00000154  FFFFFFCA  07911
@AUTO#rd_kafka_rkt_get_lw
         000000A8  FFFFFFDD  03918
@AUTO#rd_kafka_rkt_is_lw
         000000A8  FFFFFFDE  03805
@AUTO#rd_kafka_seq_wrap
         000000A8  FFFFFFE4  03178
@AUTO#rd_kafka_set_last_error
         000000A8  FFFFFFD4  05154
@AUTO#rd_kafka_topic_destroy0
         000000A8  FFFFFFDA  04291
@AUTO#rd_kafka_topic_keep
                                                 DSECT Cross Reference                                                     Page  481 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFDB  04153
@AUTO#rd_kafka_toppar_keep0
         000000A8  FFFFFFD9  04397
@AUTO#rd_kafka_toppar_topic_cmp
         000000A8  FFFFFFD8  04491
@AUTO#rd_kafka_txn_add_partition
         000000A9  FFFFFFD1  05758
@AUTO#rd_kafka_txn_may_enq_msg
         000000A8  FFFFFFD2  05399
@AUTO#rd_kafka_txn_state2str
         000000A8  FFFFFFD7  04606
@AUTO#rd_malloc
         000000A8  FFFFFFFA  00880
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF8  01119
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFF3  01663
@AUTO#rd_slice_offset
         000000A8  FFFFFFF2  01753
@AUTO#rd_slice_read_varint
         000000B0  FFFFFFF1  01879
@AUTO#rd_strlcpy
         000000B0  FFFFFFE3  03302
@AUTO#rd_uclock
         000000B8  FFFFFFF6  01343
@AUTO#unittest_msg
         000003C0  FFFFFF9A  21735
@AUTO#unittest_msg_seq_wrap
         000000AC  FFFFFF9F  18746
@AUTO#unittest_msgq_insert_all_sort
         000000F8  FFFFFF9D  19916
@AUTO#unittest_msgq_insert_each_sort
         000000F8  FFFFFF9C  21079
@AUTO#unittest_msgq_insert_sort
         000000B8  FFFFFF9B  21280
@AUTO#unittest_msgq_order
         00000108  FFFFFFA0  18478
@AUTO#ut_msgq_populate
         000000B0  FFFFFF9E  18877
@AUTO#ut_rd_kafka_msg_new
         000000A8  FFFFFFA3  16518
@AUTO#ut_rd_kafka_msgq_purge
         000000A8  FFFFFFA2  16651
@AUTO#ut_verify_msgq_order
         000000B0  FFFFFFA1  16999
                                          Macro and Copy Code Source Summary                                               Page  482 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  483 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   185  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000E0    210 @REGION_733_1,12
   243  00000148  00000002 DROP                                           12              12
   312  000001E6  00000002 USING  ORDINARY    000001A8 00001000 00000002  12 000E0    337 @REGION_734_1,12
   370  00000290  00000002 DROP                                           12              12
   439  0000032E  00000002 USING  ORDINARY    000002F0 00001000 00000002  12 000D0    459 @REGION_735_1,12
   492  000003C8  00000002 DROP                                           12              12
   561  00000466  00000002 USING  ORDINARY    00000428 00001000 00000002  12 000E8    586 @REGION_738_1,12
   619  00000518  00000002 DROP                                           12              12
   688  000005AE  00000002 USING  ORDINARY    00000570 00001000 00000002  12 00110    715 @REGION_751_1,12
   748  00000688  00000002 DROP                                           12              12
   816  0000071E  00000002 USING  ORDINARY    000006E0 00001000 00000002  12 00108    842 @REGION_752_1,12
   875  000007F0  00000002 DROP                                           12              12
   943  00000886  00000002 USING  ORDINARY    00000848 00001000 00000002  12 000A8    950 @REGION_754_1,12
   978  000008F8  00000002 DROP                                           12              12
  1046  00000996  00000002 USING  ORDINARY    00000958 00001000 00000002  12 00118   1080 @REGION_758_1,12
  1114  00000A78  00000002 DROP                                           12              12
  1183  00000B0E  00000002 USING  ORDINARY    00000AD0 00001000 00000002  12 000C0   1193 @REGION_1088_1,12
  1227  00000B98  00000002 DROP                                           12              12
  1296  00000C2E  00000002 USING  ORDINARY    00000BF0 00001000 00000002  12 000C0   1305 @REGION_1089_1,12
  1338  00000CB8  00000002 DROP                                           12              12
  1407  00000D56  00000002 USING  ORDINARY    00000D18 00001000 00000002  12 000C8   1455 @REGION_1204_1,12
  1485  00000E2C  00000002 DROP                                           12              12
  1543  00000E9A  00000002 USING  ORDINARY    00000E90 00001000 00000002  12 00030   1552 @REGION_1208_1,12
  1572  00000ECE  00000002 DROP                                           12              12
  1629  00000F3A  00000002 USING  ORDINARY    00000F30 00001000 00000002  12 0003A   1638 @REGION_1286_1,12
  1658  00000F78  00000002 DROP                                           12              12
  1715  00000FE2  00000002 USING  ORDINARY    00000FD8 00001000 00000002  12 0004A   1726 @REGION_1287_1,12
  1748  00001030  00000002 DROP                                           12              12
  1816  000010D6  00000002 USING  ORDINARY    00001098 00001000 00000002  12 000F0   1842 @REGION_1296_1,12
  1874  00001190  00000002 DROP                                           12              12
  1945  0000122E  00000002 USING  ORDINARY    000011F0 00001000 00000002  12 000F2   2057 @REGION_1314_1,12
  2091  0000132A  00000002 DROP                                           12              12
  2601  000016FE  00000002 USING  ORDINARY    000016C0 00001000 00000002  12 0016C   2683 @REGION_1347_1,12
  2719  0000188A  00000002 DROP                                           12              12
  2787  00001926  00000002 USING  ORDINARY    000018E8 00001000 00000002  12 000C8   2802 @REGION_1348_1,12
  2833  000019B8  00000002 DROP                                           12              12
  2961  00001AAA  00000002 USING  ORDINARY    00001AA0 00001000 00000002  12 0004A   2984 @REGION_1352_1,12
  3001  00001AFC  00000002 DROP                                           12              12
  3153  00001C42  00000002 USING  ORDINARY    00001C38 00001000 00000002  12 00028   3158 @REGION_1368_1,12
  3173  00001C68  00000002 DROP                                           12              12
  3230  00001CCA  00000002 USING  ORDINARY    00001CC0 00001000 00000002  12 000A6   3276 @REGION_1384_1,12
  3297  00001D74  00000002 DROP                                           12              12
  3442  00001E86  00000002 USING  ORDINARY    00001E48 00001000 00000002  12 00090   3484 @REGION_1485_1,12
  3508  00001F40  00000002 DROP                                           12              12
  3653  00002056  00000002 USING  ORDINARY    00002018 00001000 00000002  12 000F8   3678 @REGION_1487_1,12
  3708  00002118  00000002 DROP                                           12              12
  3765  00002182  00000002 USING  ORDINARY    00002178 00001000 00000002  12 00060   3785 @REGION_1670_1,12
  3800  000021E0  00000002 DROP                                           12              12
  3868  0000227E  00000002 USING  ORDINARY    00002240 00001000 00000002  12 00084   3885 @REGION_1671_1,12
  3913  0000230C  00000002 DROP                                           12              12
  3981  000023AE  00000002 USING  ORDINARY    00002370 00001000 00000002  12 000B0   3990 @REGION_1674_1,12
                                                      Using Map                                                            Page  484 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  4018  00002428  00000002 DROP                                           12              12
  4086  000024C6  00000002 USING  ORDINARY    00002488 00001000 00000002  12 000B4   4121 @REGION_1675_1,12
  4148  00002588  00000002 DROP                                           12              12
  4216  0000262E  00000002 USING  ORDINARY    000025F0 00001000 00000002  12 000CE   4259 @REGION_1678_1,12
  4286  00002706  00000002 DROP                                           12              12
  4354  000027A6  00000002 USING  ORDINARY    00002768 00001000 00000002  12 000B8   4363 @REGION_1780_1,12
  4392  00002828  00000002 DROP                                           12              12
  4449  0000289A  00000002 USING  ORDINARY    00002890 00001000 00000002  12 0005E   4468 @REGION_1873_1,12
  4486  00002900  00000002 DROP                                           12              12
  4554  000029A6  00000002 USING  ORDINARY    00002968 00001000 00000002  12 000AC   4574 @REGION_1893_1,12
  4601  00002A18  00000002 DROP                                           12              12
  4669  00002ABE  00000002 USING  ORDINARY    00002A80 00001000 00000002  12 0018C   4785 @REGION_1894_1,12
  4813  00002C54  00000002 DROP                                           12              12
  4881  00002CF6  00000002 USING  ORDINARY    00002CB8 00001000 00000002  12 001E8   4998 @REGION_1895_1,12
  5031  00002EA8  00000002 DROP                                           12              12
  5100  00002F4E  00000002 USING  ORDINARY    00002F10 00001000 00000002  12 000C8   5120 @REGION_1904_1,12
  5149  00002FDC  00000002 DROP                                           12              12
  5217  00003086  00000002 USING  ORDINARY    00003048 00001000 00000002  12 000A4   5248 @REGION_1906_1,12
  5277  00003134  00000002 DROP                                           12              12
  5345  000031DE  00000002 USING  ORDINARY    000031A0 00001000 00000002  12 00094   5373 @REGION_1950_1,12
  5394  00003282  00000002 DROP                                           12              12
  5462  0000332E  00000002 USING  ORDINARY    000032F0 00001000 00000002  12 00364   5727 @REGION_1954_1,12
  5753  0000369C  00000002 DROP                                           12              12
  5824  0000373E  00000002 USING  ORDINARY    00003700 00001000 00000002  12 00094   5851 @REGION_823_1,12
  5876  000037DC  00000002 DROP                                           12              12
  5944  0000387E  00000002 USING  ORDINARY    00003840 00001000 00000002  12 001F4   6089 @REGION_1978_1,12
  6119  00003A7C  00000002 DROP                                           12              12
  6190  00003B1E  00000002 USING  ORDINARY    00003AE0 00001000 00000002  12 00140   6277 @REGION_1339_1,12
  6303  00003C68  00000002 DROP                                           12              12
  6371  00003D06  00000002 USING  ORDINARY    00003CC8 00001000 00000002  12 001D8   6517 @REGION_1979_1,12
  6549  00003EEC  00000002 DROP                                           12              12
  6618  00003F8E  00000002 USING  ORDINARY    00003F50 00001000 00000002  12 002F2   6854 @REGION_1980_1,12
  6882  0000428A  00000002 DROP                                           12              12
  6953  00004326  00000002 USING  ORDINARY    000042E8 00001000 00000002  12 00280   7144 @REGION_1340_1,12
  7174  000045B0  00000002 DROP                                           12              12
  7246  0000464E  00000002 USING  ORDINARY    00004610 00001000 00000002  12 00718   7883 @REGION_951_1,12
  7885  00004D2E  00000002 DROP                                           12              12
  7886  00004D2E  00000002 USING  ORDINARY    00004D2E 00001000 00000002  12 00000        @REGION_951_2,12
  7906  00004D76  00000002 DROP                                           12              12
  7981  00004E16  00000002 USING  ORDINARY    00004DD8 00001000 00000002  12 0052C   8523 @REGION_950_1,12
  8551  0000534C  00000002 DROP                                           12              12
  8628  000053EE  00000002 USING  ORDINARY    000053B0 00001000 00000002  12 00100   8651 @REGION_949_1,12
  8679  000054B8  00000002 DROP                                           12              12
  8749  0000555E  00000002 USING  ORDINARY    00005520 00001000 00000002  12 005D6   9256 @REGION_952_1,12
  9285  00005B42  00000002 DROP                                           12              12
  9370  00005BE6  00000002 USING  ORDINARY    00005BA8 00001000 00000002  12 00116   9451 @REGION_1359_1,12
  9478  00005D10  00000002 DROP                                           12              12
  9549  00005DB6  00000002 USING  ORDINARY    00005D78 00001000 00000002  12 00150   9639 @REGION_1354_1,12
  9675  00005F3C  00000002 DROP                                           12              12
  9745  00005FE6  00000002 USING  ORDINARY    00005FA8 00001000 00000002  12 000C8   9761 @REGION_1355_1,12
  9789  00006078  00000002 DROP                                           12              12
  9859  0000611E  00000002 USING  ORDINARY    000060E0 00001000 00000002  12 00104   9934 @REGION_1361_1,12
  9959  0000622C  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  485 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 10032  000062CE  00000002 USING  ORDINARY    00006290 00001000 00000002  12 00180  10071 @REGION_1360_1,12
 10141  00006418  00000002 DROP                                           12              12
 10200  0000648A  00000002 USING  ORDINARY    00006480 00001000 00000002  12 0007A  10254 @REGION_1362_1,12
 10267  00006510  00000002 DROP                                           12              12
 10337  000065B6  00000002 USING  ORDINARY    00006578 00001000 00000002  12 000EA  10390 @REGION_1363_1,12
 10417  000066AA  00000002 DROP                                           12              12
 10487  00006756  00000002 USING  ORDINARY    00006718 00001000 00000002  12 000DC  10528 @REGION_875_1,12
 10558  0000683C  00000002 DROP                                           12              12
 10630  000068EE  00000002 USING  ORDINARY    000068B0 00001000 00000002  12 000C8  10640 @REGION_876_1,12
 10672  00006980  00000002 DROP                                           12              12
 10744  00006A36  00000002 USING  ORDINARY    000069F8 00001000 00000002  12 00112  10800 @REGION_877_1,12
 10826  00006B52  00000002 DROP                                           12              12
 10897  00006BFE  00000002 USING  ORDINARY    00006BC0 00001000 00000002  12 000D0  10908 @REGION_878_1,12
 10941  00006C98  00000002 DROP                                           12              12
 11012  00006D4E  00000002 USING  ORDINARY    00006D10 00001000 00000002  12 000F4  11059 @REGION_879_1,12
 11090  00006E4C  00000002 DROP                                           12              12
 11161  00006EF6  00000002 USING  ORDINARY    00006EB8 00001000 00000002  12 000C8  11171 @REGION_880_1,12
 11203  00006F88  00000002 DROP                                           12              12
 11274  0000703E  00000002 USING  ORDINARY    00007000 00001000 00000002  12 000F0  11320 @REGION_881_1,12
 11350  00007138  00000002 DROP                                           12              12
 11421  000071E6  00000002 USING  ORDINARY    000071A8 00001000 00000002  12 00218  11525 @REGION_1981_1,12
 11565  000073C8  00000002 DROP                                           12              12
 11635  0000746E  00000002 USING  ORDINARY    00007430 00001000 00000002  12 00432  12041 @REGION_1364_1,12
 12069  000078AA  00000002 DROP                                           12              12
 12142  0000794E  00000002 USING  ORDINARY    00007910 00001000 00000002  12 000B2  12180 @REGION_822_1,12
 12207  00007A0A  00000002 DROP                                           12              12
 12277  00007AAE  00000002 USING  ORDINARY    00007A70 00001000 00000002  12 000B8  12284 @REGION_1367_1,12
 12317  00007B30  00000002 DROP                                           12              12
 12385  00007BD6  00000002 USING  ORDINARY    00007B98 00001000 00000002  12 0012C  12489 @REGION_1982_1,12
 12514  00007D10  00000002 DROP                                           12              12
 12584  00007DBE  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 000B8  12594 @REGION_1366_1,12
 12621  00007E40  00000002 DROP                                           12              12
 12691  00007EE6  00000002 USING  ORDINARY    00007EA8 00001000 00000002  12 001E4  12828 @REGION_1365_1,12
 12853  000080D4  00000002 DROP                                           12              12
 12923  0000817E  00000002 USING  ORDINARY    00008140 00001000 00000002  12 000A8  12960 @REGION_824_1,12
 12989  00008230  00000002 DROP                                           12              12
 13059  000082D6  00000002 USING  ORDINARY    00008298 00001000 00000002  12 00096  13088 @REGION_825_1,12
 13114  00008376  00000002 DROP                                           12              12
 13184  0000841E  00000002 USING  ORDINARY    000083E0 00001000 00000002  12 000B0  13194 @REGION_826_1,12
 13224  00008498  00000002 DROP                                           12              12
 13292  0000853E  00000002 USING  ORDINARY    00008500 00001000 00000002  12 00108  13341 @REGION_1983_1,12
 13342  00008604  00000002 DROP                                           12              12
 13343  00008604  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00858  13344 @REGION_1983_2,12
 13345  00008608  00000002 DROP                                           12              12
 13346  00008608  00000002 USING  ORDINARY    00008500 00001000 00000002  12 003CC  13556 @REGION_1983_1,12
 13557  000088C8  00000002 DROP                                           12              12
 13558  000088C8  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00808  13559 @REGION_1983_2,12
 13560  000088CC  00000002 DROP                                           12              12
 13561  000088CC  00000002 USING  ORDINARY    00008500 00001000 00000002  12 0041E  13591 @REGION_1983_1,12
 13592  0000891A  00000002 DROP                                           12              12
 13593  0000891A  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00858  13594 @REGION_1983_2,12
 13595  0000891E  00000002 DROP                                           12              12
 13596  0000891E  00000002 USING  ORDINARY    00008500 00001000 00000002  12 0046A  13624 @REGION_1983_1,12
                                                      Using Map                                                            Page  486 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 13625  00008966  00000002 DROP                                           12              12
 13626  00008966  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00858  13627 @REGION_1983_2,12
 13628  0000896A  00000002 DROP                                           12              12
 13629  0000896A  00000002 USING  ORDINARY    00008500 00001000 00000002  12 000E0  13645 @REGION_1983_1,12
 13646  00008990  00000002 DROP                                           12              12
 13647  00008990  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 007B4  13648 @REGION_1983_2,12
 13649  00008994  00000002 DROP                                           12              12
 13650  00008994  00000002 USING  ORDINARY    00008500 00001000 00000002  12 00716  13836 @REGION_1983_1,12
 13837  00008C12  00000002 DROP                                           12              12
 13838  00008C12  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00808  13839 @REGION_1983_2,12
 13840  00008C16  00000002 DROP                                           12              12
 13841  00008C16  00000002 USING  ORDINARY    00008500 00001000 00000002  12 0075C  13882 @REGION_1983_1,12
 13883  00008C58  00000002 DROP                                           12              12
 13884  00008C58  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00222  13885 @REGION_1983_2,12
 13886  00008C5C  00000002 DROP                                           12              12
 13887  00008C5C  00000002 USING  ORDINARY    00008500 00001000 00000002  12 0078E  13900 @REGION_1983_1,12
 13901  00008C8A  00000002 DROP                                           12              12
 13902  00008C8A  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00222  13903 @REGION_1983_2,12
 13904  00008C8E  00000002 DROP                                           12              12
 13905  00008C8E  00000002 USING  ORDINARY    00008500 00001000 00000002  12 0079E  13909 @REGION_1983_1,12
 13910  00008C9A  00000002 DROP                                           12              12
 13911  00008C9A  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00218  13912 @REGION_1983_2,12
 13913  00008C9E  00000002 DROP                                           12              12
 13914  00008C9E  00000002 USING  ORDINARY    00008500 00001000 00000002  12 0083A  13966 @REGION_1983_1,12
 13968  00008D60  00000002 DROP                                           12              12
 13969  00008D60  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00808  14506 @REGION_1983_2,12
 14507  00009528  00000002 DROP                                           12              12
 14508  00009528  00000002 USING  ORDINARY    00008500 00001000 00000002  12 00494  14509 @REGION_1983_1,12
 14510  0000952C  00000002 DROP                                           12              12
 14511  0000952C  00000002 USING  ORDINARY    00008D60 00001000 00000002  12 00858  14570 @REGION_1983_2,12
 14598  00009600  00000002 DROP                                           12              12
 14719  000096A6  00000002 USING  ORDINARY    00009668 00001000 00000002  12 0010A  14795 @REGION_827_1,12
 14825  000097BA  00000002 DROP                                           12              12
 14896  00009866  00000002 USING  ORDINARY    00009828 00001000 00000002  12 000B6  14930 @REGION_828_1,12
 14961  00009926  00000002 DROP                                           12              12
 15032  000099CE  00000002 USING  ORDINARY    00009990 00001000 00000002  12 00150  15079 @REGION_829_1,12
 15117  00009AE8  00000002 DROP                                           12              12
 15187  00009B8E  00000002 USING  ORDINARY    00009B50 00001000 00000002  12 000B0  15197 @REGION_831_1,12
 15227  00009C08  00000002 DROP                                           12              12
 15297  00009CA6  00000002 USING  ORDINARY    00009C68 00001000 00000002  12 001A6  15404 @REGION_1369_1,12
 15426  00009E5E  00000002 DROP                                           12              12
 15497  00009F06  00000002 USING  ORDINARY    00009EC8 00001000 00000002  12 00148  15548 @REGION_1488_1,12
 15581  0000A018  00000002 DROP                                           12              12
 15651  0000A0BE  00000002 USING  ORDINARY    0000A080 00001000 00000002  12 00110  15679 @REGION_1489_1,12
 15717  0000A198  00000002 DROP                                           12              12
 15787  0000A246  00000002 USING  ORDINARY    0000A208 00001000 00000002  12 00138  15834 @REGION_1490_1,12
 15872  0000A348  00000002 DROP                                           12              12
 15942  0000A3F6  00000002 USING  ORDINARY    0000A3B8 00001000 00000002  12 00130  15993 @REGION_1491_1,12
 16024  0000A4F0  00000002 DROP                                           12              12
 16094  0000A596  00000002 USING  ORDINARY    0000A558 00001000 00000002  12 002DE  16327 @REGION_1342_1,12
 16353  0000A87E  00000002 DROP                                           12              12
 16430  0000A91E  00000002 USING  ORDINARY    0000A8E0 00001000 00000002  12 00140  16473 @REGION_1370_1,12
 16513  0000AA28  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  487 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 16583  0000AACE  00000002 USING  ORDINARY    0000AA90 00001000 00000002  12 0009E  16621 @REGION_1371_1,12
 16646  0000AB8E  00000002 DROP                                           12              12
 16714  0000AC2E  00000002 USING  ORDINARY    0000ABF0 00001000 00000002  12 00378  16969 @REGION_1984_1,12
 16994  0000AFB0  00000002 DROP                                           12              12
 17069  0000B04E  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00296  17212 @REGION_1985_1,12
 17213  0000B256  00000002 DROP                                           12              12
 17214  0000B256  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17215 @REGION_1985_2,12
 17216  0000B25A  00000002 DROP                                           12              12
 17217  0000B25A  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00296  17239 @REGION_1985_1,12
 17240  0000B2A2  00000002 DROP                                           12              12
 17241  0000B2A2  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17242 @REGION_1985_2,12
 17243  0000B2A6  00000002 DROP                                           12              12
 17244  0000B2A6  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 0039A  17312 @REGION_1985_1,12
 17313  0000B362  00000002 DROP                                           12              12
 17314  0000B362  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17315 @REGION_1985_2,12
 17316  0000B366  00000002 DROP                                           12              12
 17317  0000B366  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 0042E  17338 @REGION_1985_1,12
 17339  0000B3A6  00000002 DROP                                           12              12
 17340  0000B3A6  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17341 @REGION_1985_2,12
 17342  0000B3AA  00000002 DROP                                           12              12
 17343  0000B3AA  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 003EA  17366 @REGION_1985_1,12
 17367  0000B3F6  00000002 DROP                                           12              12
 17368  0000B3F6  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17369 @REGION_1985_2,12
 17370  0000B3FA  00000002 DROP                                           12              12
 17371  0000B3FA  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 0042E  17392 @REGION_1985_1,12
 17393  0000B43A  00000002 DROP                                           12              12
 17394  0000B43A  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17395 @REGION_1985_2,12
 17396  0000B43E  00000002 DROP                                           12              12
 17397  0000B43E  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 005A0  17514 @REGION_1985_1,12
 17515  0000B5AC  00000002 DROP                                           12              12
 17516  0000B5AC  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17517 @REGION_1985_2,12
 17518  0000B5B0  00000002 DROP                                           12              12
 17519  0000B5B0  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 0063E  17546 @REGION_1985_1,12
 17547  0000B5FE  00000002 DROP                                           12              12
 17548  0000B5FE  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17549 @REGION_1985_2,12
 17550  0000B602  00000002 DROP                                           12              12
 17551  0000B602  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 0063E  17573 @REGION_1985_1,12
 17574  0000B64A  00000002 DROP                                           12              12
 17575  0000B64A  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17576 @REGION_1985_2,12
 17577  0000B64E  00000002 DROP                                           12              12
 17578  0000B64E  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00742  17648 @REGION_1985_1,12
 17649  0000B70A  00000002 DROP                                           12              12
 17650  0000B70A  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17651 @REGION_1985_2,12
 17652  0000B70E  00000002 DROP                                           12              12
 17653  0000B70E  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 007D6  17674 @REGION_1985_1,12
 17675  0000B74E  00000002 DROP                                           12              12
 17676  0000B74E  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17677 @REGION_1985_2,12
 17678  0000B752  00000002 DROP                                           12              12
 17679  0000B752  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00792  17703 @REGION_1985_1,12
 17704  0000B79E  00000002 DROP                                           12              12
 17705  0000B79E  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17706 @REGION_1985_2,12
 17707  0000B7A2  00000002 DROP                                           12              12
 17708  0000B7A2  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 007D6  17729 @REGION_1985_1,12
                                                      Using Map                                                            Page  488 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 17730  0000B7E2  00000002 DROP                                           12              12
 17731  0000B7E2  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17732 @REGION_1985_2,12
 17733  0000B7E6  00000002 DROP                                           12              12
 17734  0000B7E6  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00822  17761 @REGION_1985_1,12
 17762  0000B82E  00000002 DROP                                           12              12
 17763  0000B82E  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 00088  17764 @REGION_1985_2,12
 17765  0000B832  00000002 DROP                                           12              12
 17766  0000B832  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00872  17787 @REGION_1985_1,12
 17788  0000B87E  00000002 DROP                                           12              12
 17789  0000B87E  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  17790 @REGION_1985_2,12
 17791  0000B882  00000002 DROP                                           12              12
 17792  0000B882  00000002 USING  ORDINARY    0000B010 00001000 00000002  12 00110  17810 @REGION_1985_1,12
 17812  0000B8B8  00000002 DROP                                           12              12
 17813  0000B8B8  00000002 USING  ORDINARY    0000B8B8 00001000 00000002  12 007A8  18427 @REGION_1985_2,12
 18473  0000C0A8  00000002 DROP                                           12              12
 18550  0000C14E  00000002 USING  ORDINARY    0000C110 00001000 00000002  12 00256  18715 @REGION_1986_1,12
 18741  0000C3AE  00000002 DROP                                           12              12
 18812  0000C44E  00000002 USING  ORDINARY    0000C410 00001000 00000002  12 000A8  18850 @REGION_1987_1,12
 18872  0000C50A  00000002 DROP                                           12              12
 18941  0000C5B6  00000002 USING  ORDINARY    0000C578 00001000 00000002  12 006D0  19433 @REGION_1988_1,12
 19434  0000CC44  00000002 DROP                                           12              12
 19435  0000CC44  00000002 USING  ORDINARY    0000CE96 00001000 00000002  12 0033A  19436 @REGION_1988_2,12
 19437  0000CC48  00000002 DROP                                           12              12
 19438  0000CC48  00000002 USING  ORDINARY    0000C578 00001000 00000002  12 00814  19539 @REGION_1988_1,12
 19540  0000CD88  00000002 DROP                                           12              12
 19541  0000CD88  00000002 USING  ORDINARY    0000CE96 00001000 00000002  12 0033A  19542 @REGION_1988_2,12
 19543  0000CD8C  00000002 DROP                                           12              12
 19544  0000CD8C  00000002 USING  ORDINARY    0000C578 00001000 00000002  12 0085A  19566 @REGION_1988_1,12
 19567  0000CDCE  00000002 DROP                                           12              12
 19568  0000CDCE  00000002 USING  ORDINARY    0000CE96 00001000 00000002  12 0033A  19569 @REGION_1988_2,12
 19570  0000CDD2  00000002 DROP                                           12              12
 19571  0000CDD2  00000002 USING  ORDINARY    0000C578 00001000 00000002  12 00886  19594 @REGION_1988_1,12
 19595  0000CDFA  00000002 DROP                                           12              12
 19596  0000CDFA  00000002 USING  ORDINARY    0000CE96 00001000 00000002  12 000CE  19597 @REGION_1988_2,12
 19598  0000CDFE  00000002 DROP                                           12              12
 19599  0000CDFE  00000002 USING  ORDINARY    0000C578 00001000 00000002  12 001C8  19636 @REGION_1988_1,12
 19638  0000CE96  00000002 DROP                                           12              12
 19639  0000CE96  00000002 USING  ORDINARY    0000CE96 00001000 00000002  12 0033A  19885 @REGION_1988_2,12
 19911  0000D218  00000002 DROP                                           12              12
 20002  0000D2C6  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 002A4  20178 @REGION_1989_1,12
 20179  0000D54E  00000002 DROP                                           12              12
 20180  0000D54E  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 001A4  20181 @REGION_1989_2,12
 20182  0000D552  00000002 DROP                                           12              12
 20183  0000D552  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 0071E  20513 @REGION_1989_1,12
 20514  0000D9A2  00000002 DROP                                           12              12
 20515  0000D9A2  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 004EC  20516 @REGION_1989_2,12
 20517  0000D9A6  00000002 DROP                                           12              12
 20518  0000D9A6  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 00862  20618 @REGION_1989_1,12
 20619  0000DAE6  00000002 DROP                                           12              12
 20620  0000DAE6  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 004EC  20621 @REGION_1989_2,12
 20622  0000DAEA  00000002 DROP                                           12              12
 20623  0000DAEA  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 008A8  20646 @REGION_1989_1,12
 20647  0000DB2C  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  489 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 20648  0000DB2C  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 004EC  20649 @REGION_1989_2,12
 20650  0000DB30  00000002 DROP                                           12              12
 20651  0000DB30  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 008D0  20673 @REGION_1989_1,12
 20674  0000DB54  00000002 DROP                                           12              12
 20675  0000DB54  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 0018A  20676 @REGION_1989_2,12
 20677  0000DB58  00000002 DROP                                           12              12
 20678  0000DB58  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 00178  20679 @REGION_1989_1,12
 20681  0000DB5E  00000002 DROP                                           12              12
 20682  0000DB5E  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 004EC  20796 @REGION_1989_2,12
 20797  0000DD20  00000002 DROP                                           12              12
 20798  0000DD20  00000002 USING  ORDINARY    0000D288 00001000 00000002  12 002CA  20799 @REGION_1989_1,12
 20800  0000DD24  00000002 DROP                                           12              12
 20801  0000DD24  00000002 USING  ORDINARY    0000DB5E 00001000 00000002  12 004EC  21048 @REGION_1989_2,12
 21074  0000E092  00000002 DROP                                           12              12
 21169  0000E136  00000002 USING  ORDINARY    0000E0F8 00001000 00000002  12 00130  21245 @REGION_1990_1,12
 21275  0000E270  00000002 DROP                                           12              12
 21350  0000E30E  00000002 USING  ORDINARY    0000E2D0 00001000 00000002  12 00590  21687 @REGION_1372_1,12
 21730  0000E868  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  490 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_MSG ..\asg\asm\rdkafka_msg.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.46 Stop Time: 15.35.46 Processor Time: 00.00.00.1490
Return Code 000
