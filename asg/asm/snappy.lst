                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/snappy.obj ../asg/asm/snappy.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\snappy.obj)  CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

Libraries in Search Order:
                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@SNAPPY   SD 00000002 00000000 00005B58            07  @CODE
##ERROR   ER 00000003                                  __ERROR
@@ASSERT  ER 00000004                                  __ASSERT
snprintf  ER 00000005                                  SNPRINTF
free      ER 00000006                                  FREE
malloc    ER 00000007                                  MALLOC
memmove   ER 00000008                                  MEMMOVE
strerror  ER 00000009                                  STRERROR
@snappy&  XD 0000000A 00000007 000006D8                @@STATIC
@snappy   SD 0000000B 00005B58 00000F36            07  @DATA
@snappy:  SD 0000000C 00006A90 00001040            07  @@INIT@
rd_kafka_snappy_max_compressed_length
          LD          00002148          00000002   00  RD_KAFKA_SNAPPY_MAX_COMPRESSED_LENGTH
rd_kafka_snappy_uncompressed_length
          LD          000028D8          00000002   00  RD_KAFKA_SNAPPY_UNCOMPRESSED_LENGTH
rd_kafka_snappy_compress_iov
          LD          00004CE8          00000002   00  RD_KAFKA_SNAPPY_COMPRESS_IOV
rd_kafka_snappy_compress
          LD          00004E68          00000002   00  RD_KAFKA_SNAPPY_COMPRESS
rd_kafka_snappy_uncompress_iov
          LD          00004FE0          00000002   00  RD_KAFKA_SNAPPY_UNCOMPRESS_IOV
rd_kafka_snappy_uncompress
          LD          00005150          00000002   00  RD_KAFKA_SNAPPY_UNCOMPRESS
rd_kafka_snappy_java_uncompress
          LD          000052A0          00000002   00  RD_KAFKA_SNAPPY_JAVA_UNCOMPRESS
rd_kafka_snappy_init_env_sg
          LD          00005740          00000002   00  RD_KAFKA_SNAPPY_INIT_ENV_SG
rd_kafka_snappy_init_env
          LD          00005900          00000002   00  RD_KAFKA_SNAPPY_INIT_ENV
rd_kafka_snappy_free_env
          LD          00005A58          00000002   00  RD_KAFKA_SNAPPY_FREE_ENV
                                                                                                                           Page    4 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:49 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@SNAPPY'
00000000                00000000 00005B58     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@snappy'
                                              18 __error  ALIAS C'##ERROR'
                                              19          EXTRN __error
                                              20 __assert ALIAS C'@@ASSERT'
                                              21          EXTRN __assert
                                              22 snprintf ALIAS C'snprintf'
                                              23          EXTRN snprintf
                                              24 free     ALIAS C'free'
                                              25          EXTRN free
                                              26 malloc   ALIAS C'malloc'
                                              27          EXTRN malloc
                                              28 memmove  ALIAS C'memmove'
                                              29          EXTRN memmove
                                              30 strerror ALIAS C'strerror'
                                              31          EXTRN strerror
                                              32 *
                                              33 *
                                              34 *
                                              35 * ....... start of rd_malloc
00000000                                      36 @LNAME1087 DS  0H
00000000 00000009                             37          DC    X'00000009'
00000004 99846D9481939396                     38          DC    C'rd_malloc'
0000000D 00                                   39          DC    X'00'
                                              40 rd_malloc DCCPRLG CINDEX=1087,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1087
                                              41          macro
                                              42          dccextrn &m
                                              43          gblc    &$dccext(1000)
                                              44          gbla    &$dccexti
                                              45          lcla    &i
                                              46 &$dccext(&$dccexti+1) setc    '&m'
                                              47 &i       seta    1
                                              48 .loop    aif    (&i gt &$dccexti).around
                                              49          aif    ('&$dccext(&i)' eq '&m').getout
                                              50 &i       seta    &i+1
                                              51          ago     .loop
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              52 .around  anop
                                              53 &$dccexti seta &$dccexti+1
                                              54          extrn  &m
                                              55 .getout  anop
                                              56          mend
00000010                                      57+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               58+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   59+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                             60+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     61+         dc ad(@PER_1087)                                               02-DCCCA
00000020 00000000000000D0                     62+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     63+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     64+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   65+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   66+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   67+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   68+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   69+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               70+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     71+         dc ad(@LNAME1087)                                              02-DCCCA
00000048                                      72+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     73+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     74+         dc ad(0)                                                       02-DCCCA
00000058                                      75+         ds    0d                                                       01-DCCPR
00000058                                      76+rd_malloc ds   0d                                                       01-DCCPR
00000058                                      77+@REGION_1087_1 ds 0h                                                    01-DCCPR
00000058 EBEC D008 0024          00000008     78+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     79+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     80+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            81+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     82+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     83+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     84+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     85+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      86+@PER_1087 ds   0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     87+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     88+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            89+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                            90+         lgr   12,15               set base reg                         01-DCCPR
                        00000058              91+         using @REGION_1087_1,12                                        01-DCCPR
                                              92 * ******* End of Prologue
                                              93 * *
                                              94 * ***      void *p = malloc(sz);
00000096 E3F0 1000 0004          00000000     95          LG    15,0(0,1)   ; sz
0000009C E3F0 D0B0 0024          000000B0     96          STG   15,176(0,13)
000000A2 4110 D0B0               000000B0     97          LA    1,176(0,13)
000000A6 E3F0 C0F0 0004          00000148     98          LG    15,@lit_1087_0 ; malloc
000000AC                                      99 @@gen_label0 DS    0H
000000AC 05EF                                100          BALR  14,15
000000AE                                     101 @@gen_label1 DS    0H
000000AE B904 002F                           102          LGR   2,15
                                             103 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                                                                                                           Page    6 
  Active Usings: @REGION_1087_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             104 * ka\\src\\rd.h", 128, "p"));
000000B2 B902 00F2                           105          LTGR  15,2
000000B6 4770 C09A               000000F2    106          BNZ   @L34
000000BA                                     107 @L33     DS    0H
000000BA E3F0 C108 0004          00000160    108          LG    15,@lit_1087_1
000000C0 41F0 F00A               0000000A    109          LA    15,10(0,15)
000000C4 E3F0 D0B0 0024          000000B0    110          STG   15,176(0,13)
000000CA E3F0 C100 0004          00000158    111          LG    15,@lit_1087_2
000000D0 E3F0 D0B8 0024          000000B8    112          STG   15,184(0,13)
000000D6 E548 D0C0 0080          000000C0    113          MVGHI 192(13),128
000000DC 41F0 F020               00000020    114          LA    15,32(0,15)
000000E0 E3F0 D0C8 0024          000000C8    115          STG   15,200(0,13)
000000E6 4110 D0B0               000000B0    116          LA    1,176(0,13)
000000EA E3F0 C0F8 0004          00000150    117          LG    15,@lit_1087_3 ; __assert
000000F0                                     118 @@gen_label3 DS    0H
000000F0 05EF                                119          BALR  14,15
000000F2                                     120 @@gen_label4 DS    0H
000000F2                                     121 @L34     DS    0H
                                             122 * ***      return p;
000000F2 B904 00F2                           123          LGR   15,2
                                             124 * ***   }
                                             125 * * **** Start of Epilogue
                                             126          DCCEPIL
000000F6                                     127+         ds 0h                                                          01-DCCEP
                                             128+* Epilog
000000F6 D707 D088 D088 00000088 00000088    129+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000FC E3D0 D080 0004          00000080    130+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000102 E3C0 D090 0004          00000090    131+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000108 E3B0 C018 0004          00000018    132+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000010E E3C0 B010 0021          00000010    133+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000114 E3E0 D008 0004          00000008    134+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000011A EB1C D020 0004          00000020    135+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000120 078E                                136+         bcr 8,14                if same dsab, just return              01-DCCEP
00000122 E3F0 D010 0024          00000010    137+         stg 15,16(0,13)         save return code                       01-DCCEP
00000128 E300 D018 0024          00000018    138+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000012E E3F0 D090 0004          00000090    139+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000134 E3F0 F018 0004          00000018    140+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000013A 47F0 F040               00000040    141+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             142+* End of Epilog
                                             143 * * **** End of Epilogue
00000140                                     144          DS    0D
00000140 000000D0                            145 @FRAMESIZE_1087 DC F'208'
00000144 00000000
00000148 0000000000000000                    146 @lit_1087_0 DC AD(malloc)
00000150 0000000000000000                    147 @lit_1087_3 DC AD(__assert)
00000158 000000000000600E                    148 @lit_1087_2 DC AD(@strings@)
00000160 0000000000005B58                    149 @lit_1087_1 DC AD(@DATA)
                                             150          DROP  12
                                             151 *
                                             152 *   DSECT for automatic variables in "rd_malloc"
                                             153 *      (FUNCTION #1087)
                                             154 *
                                                                                                                           Page    7 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                00000000 000000A8    155 @AUTO#rd_malloc DSECT
00000000                                     156          DS    XL168
                                             157 *
00000168                00000000 00005B58    158 @CODE    CSECT
                                             159 *
                                             160 *
                                             161 *
                                             162 * ....... start of rd_free
00000168                                     163 @LNAME1089 DS  0H
00000168 00000007                            164          DC    X'00000007'
0000016C 99846D86998585                      165          DC    C'rd_free'
00000173 00                                  166          DC    X'00'
                                             167 rd_free  DCCPRLG CINDEX=1089,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1089
                                             168          macro
                                             169          dccextrn &m
                                             170          gblc    &$dccext(1000)
                                             171          gbla    &$dccexti
                                             172          lcla    &i
                                             173 &$dccext(&$dccexti+1) setc    '&m'
                                             174 &i       seta    1
                                             175 .loop    aif    (&i gt &$dccexti).around
                                             176          aif    ('&$dccext(&i)' eq '&m').getout
                                             177 &i       seta    &i+1
                                             178          ago     .loop
                                             179 .around  anop
                                             180 &$dccexti seta &$dccexti+1
                                             181          extrn  &m
                                             182 .getout  anop
                                             183          mend
00000178                                     184+$eye0005    ds    0d                                                    02-DCCCA
00000178 C4C3C3                              185+         dc cl3'DCC'                                                    02-DCCCA
0000017B 01                                  186+         dc xl1'01' format one                                          02-DCCCA
0000017C 00000000                            187+         dc a(0)                                                        02-DCCCA
00000180 00000000000001EA                    188+         dc ad(@PER_1089)                                               02-DCCCA
00000188 00000000000000B0                    189+         dc ad(176)                                                     02-DCCCA
00000190 0000000000000000                    190+         dc ad(0)                                                       02-DCCCA
00000198 0000000000001000                    191+         dc ad(4096)                                                    02-DCCCA
000001A0 20                                  192+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A1 03                                  193+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001A2 03                                  194+         dc al1(3)                                                      02-DCCCA
000001A3 08                                  195+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001A4 00                                  196+         dc bl.8'00000000'                                              02-DCCCA
000001A5 000000                              197+         dc al3(0)                                                      02-DCCCA
000001A8 0000000000000168                    198+         dc ad(@LNAME1089)                                              02-DCCCA
000001B0                                     199+         ds 0d                                                          02-DCCCA
000001B0 0000000000000178                    200+         dc ad($eye0005)                                                02-DCCCA
000001B8 0000000000000000                    201+         dc ad(0)                                                       02-DCCCA
000001C0                                     202+         ds    0d                                                       01-DCCPR
000001C0                                     203+rd_free  ds    0d                                                       01-DCCPR
000001C0                                     204+@REGION_1089_1 ds 0h                                                    01-DCCPR
000001C0 EBEC D008 0024          00000008    205+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000001C6 E3E0 D088 0004          00000088    206+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001CC E3C0 D090 0004          00000090    207+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001D2 B904 002E                           208+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001D6 E3B0 C018 0004          00000018    209+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001DC A7EB 00B0               000000B0    210+         aghi  14,176              increase by frame size               01-DCCPR
000001E0 E3E0 C020 0021          00000020    211+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001E6 4720 B020               00000020    212+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001EA                                     213+@PER_1089 ds   0h                                                       01-DCCPR
000001EA EBDE 2080 0024          00000080    214+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F0 E3C0 2090 0024          00000090    215+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001F6 B904 00D2                           216+         lgr   13,2                set real frame pointer               01-DCCPR
000001FA B904 00CF                           217+         lgr   12,15               set base reg                         01-DCCPR
                        000001C0             218+         using @REGION_1089_1,12                                        01-DCCPR
                                             219 * ******* End of Prologue
                                             220 * *
                                             221 * ***      free(ptr);
000001FE E3F0 1000 0004          00000000    222          LG    15,0(0,1)   ; ptr
00000204 E3F0 D0A8 0024          000000A8    223          STG   15,168(0,13)
0000020A 4110 D0A8               000000A8    224          LA    1,168(0,13)
0000020E E3F0 C0A8 0004          00000268    225          LG    15,@lit_1089_5 ; free
00000214                                     226 @@gen_label5 DS    0H
00000214 05EF                                227          BALR  14,15
00000216                                     228 @@gen_label6 DS    0H
                                             229 * ***   }
00000216                                     230 @ret_lab_1089 DS 0H
                                             231 * * **** Start of Epilogue
                                             232          DCCEPIL
00000216                                     233+         ds 0h                                                          01-DCCEP
                                             234+* Epilog
00000216 D707 D088 D088 00000088 00000088    235+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000021C E3D0 D080 0004          00000080    236+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000222 E3C0 D090 0004          00000090    237+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000228 E3B0 C018 0004          00000018    238+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000022E E3C0 B010 0021          00000010    239+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000234 E3E0 D008 0004          00000008    240+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000023A EB1C D020 0004          00000020    241+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000240 078E                                242+         bcr 8,14                if same dsab, just return              01-DCCEP
00000242 E3F0 D010 0024          00000010    243+         stg 15,16(0,13)         save return code                       01-DCCEP
00000248 E300 D018 0024          00000018    244+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000024E E3F0 D090 0004          00000090    245+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000254 E3F0 F018 0004          00000018    246+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000025A 47F0 F040               00000040    247+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             248+* End of Epilog
                                             249 * * **** End of Epilogue
00000260                                     250          DS    0D
00000260 000000B0                            251 @FRAMESIZE_1089 DC F'176'
00000264 00000000
00000268 0000000000000000                    252 @lit_1089_5 DC AD(free)
                                             253          DROP  12
                                             254 *
                                             255 *   DSECT for automatic variables in "rd_free"
                                             256 *      (FUNCTION #1089)
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             257 *
00000000                00000000 000000A8    258 @AUTO#rd_free DSECT
00000000                                     259          DS    XL168
                                             260 *
00000270                00000000 00005B58    261 @CODE    CSECT
                                             262 *
                                             263 *
                                             264 *
                                             265 * ....... start of get_unaligned64
00000270                                     266 @LNAME1930 DS  0H
00000270 0000000F                            267          DC    X'0000000F'
00000274 8785A36DA4958193                    268          DC    C'get_unaligned64'
00000283 00                                  269          DC    X'00'
                                             270 get_unaligned64 DCCPRLG CINDEX=1930,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1930
                                             271          macro
                                             272          dccextrn &m
                                             273          gblc    &$dccext(1000)
                                             274          gbla    &$dccexti
                                             275          lcla    &i
                                             276 &$dccext(&$dccexti+1) setc    '&m'
                                             277 &i       seta    1
                                             278 .loop    aif    (&i gt &$dccexti).around
                                             279          aif    ('&$dccext(&i)' eq '&m').getout
                                             280 &i       seta    &i+1
                                             281          ago     .loop
                                             282 .around  anop
                                             283 &$dccexti seta &$dccexti+1
                                             284          extrn  &m
                                             285 .getout  anop
                                             286          mend
00000288                                     287+$eye0008    ds    0d                                                    02-DCCCA
00000288 C4C3C3                              288+         dc cl3'DCC'                                                    02-DCCCA
0000028B 01                                  289+         dc xl1'01' format one                                          02-DCCCA
0000028C 00000000                            290+         dc a(0)                                                        02-DCCCA
00000290 00000000000002FA                    291+         dc ad(@PER_1930)                                               02-DCCCA
00000298 00000000000000B0                    292+         dc ad(176)                                                     02-DCCCA
000002A0 0000000000000000                    293+         dc ad(0)                                                       02-DCCCA
000002A8 0000000000001000                    294+         dc ad(4096)                                                    02-DCCCA
000002B0 20                                  295+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002B1 03                                  296+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002B2 03                                  297+         dc al1(3)                                                      02-DCCCA
000002B3 08                                  298+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002B4 00                                  299+         dc bl.8'00000000'                                              02-DCCCA
000002B5 000000                              300+         dc al3(0)                                                      02-DCCCA
000002B8 0000000000000270                    301+         dc ad(@LNAME1930)                                              02-DCCCA
000002C0                                     302+         ds 0d                                                          02-DCCCA
000002C0 0000000000000288                    303+         dc ad($eye0008)                                                02-DCCCA
000002C8 0000000000000000                    304+         dc ad(0)                                                       02-DCCCA
000002D0                                     305+         ds    0d                                                       01-DCCPR
000002D0                                     306+get_unaligned64 ds 0d                                                   01-DCCPR
000002D0                                     307+@REGION_1930_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000002D0 EBEC D008 0024          00000008    308+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002D6 E3E0 D088 0004          00000088    309+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002DC E3C0 D090 0004          00000090    310+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002E2 B904 002E                           311+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002E6 E3B0 C018 0004          00000018    312+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002EC A7EB 00B0               000000B0    313+         aghi  14,176              increase by frame size               01-DCCPR
000002F0 E3E0 C020 0021          00000020    314+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000002F6 4720 B020               00000020    315+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000002FA                                     316+@PER_1930 ds   0h                                                       01-DCCPR
000002FA EBDE 2080 0024          00000080    317+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000300 E3C0 2090 0024          00000090    318+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000306 B904 00D2                           319+         lgr   13,2                set real frame pointer               01-DCCPR
0000030A B904 00CF                           320+         lgr   12,15               set base reg                         01-DCCPR
                        000002D0             321+         using @REGION_1930_1,12                                        01-DCCPR
                                             322 * ******* End of Prologue
                                             323 * *
                                             324 * ***      u64 ret;
                                             325 * ***      __memcpy(&ret,b,sizeof(u64));
0000030E E3F0 1000 0004          00000000    326          LG    15,0(0,1)
00000314 4110 D0A8               000000A8    327          LA    1,168(0,13)
00000318 D207 1000 F000 00000000 00000000    328          MVC   0(8,1),0(15)
                                             329 * ***      return ret;
0000031E E3F0 D0A8 0004          000000A8    330          LG    15,168(0,13) ; ret
                                             331 * ***   }
                                             332 * * **** Start of Epilogue
                                             333          DCCEPIL
00000324                                     334+         ds 0h                                                          01-DCCEP
                                             335+* Epilog
00000324 D707 D088 D088 00000088 00000088    336+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000032A E3D0 D080 0004          00000080    337+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000330 E3C0 D090 0004          00000090    338+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000336 E3B0 C018 0004          00000018    339+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000033C E3C0 B010 0021          00000010    340+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000342 E3E0 D008 0004          00000008    341+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000348 EB1C D020 0004          00000020    342+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000034E 078E                                343+         bcr 8,14                if same dsab, just return              01-DCCEP
00000350 E3F0 D010 0024          00000010    344+         stg 15,16(0,13)         save return code                       01-DCCEP
00000356 E300 D018 0024          00000018    345+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000035C E3F0 D090 0004          00000090    346+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000362 E3F0 F018 0004          00000018    347+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000368 47F0 F040               00000040    348+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             349+* End of Epilog
                                             350 * * **** End of Epilogue
00000370                                     351          DS    0D
00000370 000000B0                            352 @FRAMESIZE_1930 DC F'176'
                                             353          DROP  12
                                             354 *
                                             355 *   DSECT for automatic variables in "get_unaligned64"
                                             356 *      (FUNCTION #1930)
                                             357 *
00000000                00000000 000000B0    358 @AUTO#get_unaligned64 DSECT
00000000                                     359          DS    XL168
                                                                                                                           Page   11 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                     360 get_unaligned64#ret#0 DS 8XL1 ; ret
                                             361 *
00000374                00000000 00005B58    362 @CODE    CSECT
                                             363 *
                                             364 *
                                             365 *
                                             366 * ....... start of get_unaligned32
00000374                                     367 @LNAME1931 DS  0H
00000374 0000000F                            368          DC    X'0000000F'
00000378 8785A36DA4958193                    369          DC    C'get_unaligned32'
00000387 00                                  370          DC    X'00'
                                             371 get_unaligned32 DCCPRLG CINDEX=1931,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1931
                                             372          macro
                                             373          dccextrn &m
                                             374          gblc    &$dccext(1000)
                                             375          gbla    &$dccexti
                                             376          lcla    &i
                                             377 &$dccext(&$dccexti+1) setc    '&m'
                                             378 &i       seta    1
                                             379 .loop    aif    (&i gt &$dccexti).around
                                             380          aif    ('&$dccext(&i)' eq '&m').getout
                                             381 &i       seta    &i+1
                                             382          ago     .loop
                                             383 .around  anop
                                             384 &$dccexti seta &$dccexti+1
                                             385          extrn  &m
                                             386 .getout  anop
                                             387          mend
00000388                                     388+$eye0011    ds    0d                                                    02-DCCCA
00000388 C4C3C3                              389+         dc cl3'DCC'                                                    02-DCCCA
0000038B 01                                  390+         dc xl1'01' format one                                          02-DCCCA
0000038C 00000000                            391+         dc a(0)                                                        02-DCCCA
00000390 00000000000003FA                    392+         dc ad(@PER_1931)                                               02-DCCCA
00000398 00000000000000B0                    393+         dc ad(176)                                                     02-DCCCA
000003A0 0000000000000000                    394+         dc ad(0)                                                       02-DCCCA
000003A8 0000000000001000                    395+         dc ad(4096)                                                    02-DCCCA
000003B0 20                                  396+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000003B1 03                                  397+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000003B2 03                                  398+         dc al1(3)                                                      02-DCCCA
000003B3 08                                  399+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000003B4 00                                  400+         dc bl.8'00000000'                                              02-DCCCA
000003B5 000000                              401+         dc al3(0)                                                      02-DCCCA
000003B8 0000000000000374                    402+         dc ad(@LNAME1931)                                              02-DCCCA
000003C0                                     403+         ds 0d                                                          02-DCCCA
000003C0 0000000000000388                    404+         dc ad($eye0011)                                                02-DCCCA
000003C8 0000000000000000                    405+         dc ad(0)                                                       02-DCCCA
000003D0                                     406+         ds    0d                                                       01-DCCPR
000003D0                                     407+get_unaligned32 ds 0d                                                   01-DCCPR
000003D0                                     408+@REGION_1931_1 ds 0h                                                    01-DCCPR
000003D0 EBEC D008 0024          00000008    409+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000003D6 E3E0 D088 0004          00000088    410+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000003DC E3C0 D090 0004          00000090    411+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000003E2 B904 002E                           412+         lgr   2,14                copy addr of our savearea            01-DCCPR
000003E6 E3B0 C018 0004          00000018    413+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000003EC A7EB 00B0               000000B0    414+         aghi  14,176              increase by frame size               01-DCCPR
000003F0 E3E0 C020 0021          00000020    415+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000003F6 4720 B020               00000020    416+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000003FA                                     417+@PER_1931 ds   0h                                                       01-DCCPR
000003FA EBDE 2080 0024          00000080    418+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000400 E3C0 2090 0024          00000090    419+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000406 B904 00D2                           420+         lgr   13,2                set real frame pointer               01-DCCPR
0000040A B904 00CF                           421+         lgr   12,15               set base reg                         01-DCCPR
                        000003D0             422+         using @REGION_1931_1,12                                        01-DCCPR
                                             423 * ******* End of Prologue
                                             424 * *
                                             425 * ***      u32 ret;
                                             426 * ***      __memcpy(&ret,b,sizeof(u32));
0000040E E3F0 1000 0004          00000000    427          LG    15,0(0,1)
00000414 4110 D0A8               000000A8    428          LA    1,168(0,13)
00000418 D203 1000 F000 00000000 00000000    429          MVC   0(4,1),0(15)
                                             430 * ***      return ret;
0000041E E3F0 D0A8 0016          000000A8    431          LLGF  15,168(0,13) ; ret
                                             432 * ***   }
                                             433 * * **** Start of Epilogue
                                             434          DCCEPIL
00000424                                     435+         ds 0h                                                          01-DCCEP
                                             436+* Epilog
00000424 D707 D088 D088 00000088 00000088    437+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000042A E3D0 D080 0004          00000080    438+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000430 E3C0 D090 0004          00000090    439+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000436 E3B0 C018 0004          00000018    440+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000043C E3C0 B010 0021          00000010    441+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000442 E3E0 D008 0004          00000008    442+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000448 EB1C D020 0004          00000020    443+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000044E 078E                                444+         bcr 8,14                if same dsab, just return              01-DCCEP
00000450 E3F0 D010 0024          00000010    445+         stg 15,16(0,13)         save return code                       01-DCCEP
00000456 E300 D018 0024          00000018    446+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000045C E3F0 D090 0004          00000090    447+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000462 E3F0 F018 0004          00000018    448+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000468 47F0 F040               00000040    449+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             450+* End of Epilog
                                             451 * * **** End of Epilogue
00000470                                     452          DS    0D
00000470 000000B0                            453 @FRAMESIZE_1931 DC F'176'
                                             454          DROP  12
                                             455 *
                                             456 *   DSECT for automatic variables in "get_unaligned32"
                                             457 *      (FUNCTION #1931)
                                             458 *
00000000                00000000 000000AC    459 @AUTO#get_unaligned32 DSECT
00000000                                     460          DS    XL168
000000A8                                     461 get_unaligned32#ret#0 DS 1F ; ret
                                             462 *
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000474                00000000 00005B58    463 @CODE    CSECT
                                             464 *
                                             465 *
                                             466 *
                                             467 * ....... start of put_unaligned64
00000474                                     468 @LNAME1932 DS  0H
00000474 0000000F                            469          DC    X'0000000F'
00000478 97A4A36DA4958193                    470          DC    C'put_unaligned64'
00000487 00                                  471          DC    X'00'
                                             472 put_unaligned64 DCCPRLG CINDEX=1932,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1932
                                             473          macro
                                             474          dccextrn &m
                                             475          gblc    &$dccext(1000)
                                             476          gbla    &$dccexti
                                             477          lcla    &i
                                             478 &$dccext(&$dccexti+1) setc    '&m'
                                             479 &i       seta    1
                                             480 .loop    aif    (&i gt &$dccexti).around
                                             481          aif    ('&$dccext(&i)' eq '&m').getout
                                             482 &i       seta    &i+1
                                             483          ago     .loop
                                             484 .around  anop
                                             485 &$dccexti seta &$dccexti+1
                                             486          extrn  &m
                                             487 .getout  anop
                                             488          mend
00000488                                     489+$eye0014    ds    0d                                                    02-DCCCA
00000488 C4C3C3                              490+         dc cl3'DCC'                                                    02-DCCCA
0000048B 01                                  491+         dc xl1'01' format one                                          02-DCCCA
0000048C 00000000                            492+         dc a(0)                                                        02-DCCCA
00000490 0000000000000000                    493+         dc ad(0)                                                       02-DCCCA
00000498 00000000000000A8                    494+         dc ad(168)                                                     02-DCCCA
000004A0 0000000000000000                    495+         dc ad(0)                                                       02-DCCCA
000004A8 0000000000001000                    496+         dc ad(4096)                                                    02-DCCCA
000004B0 20                                  497+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004B1 03                                  498+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004B2 03                                  499+         dc al1(3)                                                      02-DCCCA
000004B3 08                                  500+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004B4 00                                  501+         dc bl.8'00000000'                                              02-DCCCA
000004B5 000000                              502+         dc al3(0)                                                      02-DCCCA
000004B8 0000000000000474                    503+         dc ad(@LNAME1932)                                              02-DCCCA
000004C0                                     504+         ds 0d                                                          02-DCCCA
000004C0 0000000000000488                    505+         dc ad($eye0014)                                                02-DCCCA
000004C8 0000000000000000                    506+         dc ad(0)                                                       02-DCCCA
000004D0                                     507+         ds    0d                                                       01-DCCPR
000004D0                                     508+put_unaligned64 ds 0d                                                   01-DCCPR
000004D0                                     509+@REGION_1932_1 ds 0h                                                    01-DCCPR
000004D0 EBEC D008 0024          00000008    510+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             511 * ******* End of Prologue
                                             512 * *
                                             513 * ***      __memcpy(b,&v,sizeof(v));
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000004D6 E3F0 1008 0004          00000008    514          LG    15,8(0,1)
000004DC D207 F000 1000 00000000 00000000    515          MVC   0(8,15),0(1)
                                             516 * ***   }
000004E2                                     517 @ret_lab_1932 DS 0H
                                             518 * * **** Start of Epilogue
                                             519          DCCEPIL
000004E2                                     520+         ds 0h                                                          01-DCCEP
                                             521+* Epilog
                                             522+* Epilog
000004E2 E3E0 D008 0004          00000008    523+         lg    14,8(,13) restore the reg                                01-DCCEP
000004E8 EB1C D020 0004          00000020    524+         lmg   1,12,32(13)                                              01-DCCEP
000004EE 07FE                                525+         br   14                                                        01-DCCEP
                                             526+* End of Epilog
                                             527 * * **** End of Epilogue
                                             528 *
                                             529 *   DSECT for automatic variables in "put_unaligned64"
                                             530 *      (FUNCTION #1932)
                                             531 *
00000000                00000000 000000A8    532 @AUTO#put_unaligned64 DSECT
00000000                                     533          DS    XL168
                                             534 *
000004F0                00000000 00005B58    535 @CODE    CSECT
                                             536 *
                                             537 *
                                             538 *
                                             539 * ....... start of put_unaligned32
000004F0                                     540 @LNAME1933 DS  0H
000004F0 0000000F                            541          DC    X'0000000F'
000004F4 97A4A36DA4958193                    542          DC    C'put_unaligned32'
00000503 00                                  543          DC    X'00'
                                             544 put_unaligned32 DCCPRLG CINDEX=1933,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1933
                                             545          macro
                                             546          dccextrn &m
                                             547          gblc    &$dccext(1000)
                                             548          gbla    &$dccexti
                                             549          lcla    &i
                                             550 &$dccext(&$dccexti+1) setc    '&m'
                                             551 &i       seta    1
                                             552 .loop    aif    (&i gt &$dccexti).around
                                             553          aif    ('&$dccext(&i)' eq '&m').getout
                                             554 &i       seta    &i+1
                                             555          ago     .loop
                                             556 .around  anop
                                             557 &$dccexti seta &$dccexti+1
                                             558          extrn  &m
                                             559 .getout  anop
                                             560          mend
00000508                                     561+$eye0017    ds    0d                                                    02-DCCCA
00000508 C4C3C3                              562+         dc cl3'DCC'                                                    02-DCCCA
0000050B 01                                  563+         dc xl1'01' format one                                          02-DCCCA
0000050C 00000000                            564+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000510 0000000000000000                    565+         dc ad(0)                                                       02-DCCCA
00000518 00000000000000A8                    566+         dc ad(168)                                                     02-DCCCA
00000520 0000000000000000                    567+         dc ad(0)                                                       02-DCCCA
00000528 0000000000001000                    568+         dc ad(4096)                                                    02-DCCCA
00000530 20                                  569+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000531 03                                  570+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000532 03                                  571+         dc al1(3)                                                      02-DCCCA
00000533 08                                  572+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000534 00                                  573+         dc bl.8'00000000'                                              02-DCCCA
00000535 000000                              574+         dc al3(0)                                                      02-DCCCA
00000538 00000000000004F0                    575+         dc ad(@LNAME1933)                                              02-DCCCA
00000540                                     576+         ds 0d                                                          02-DCCCA
00000540 0000000000000508                    577+         dc ad($eye0017)                                                02-DCCCA
00000548 0000000000000000                    578+         dc ad(0)                                                       02-DCCCA
00000550                                     579+         ds    0d                                                       01-DCCPR
00000550                                     580+put_unaligned32 ds 0d                                                   01-DCCPR
00000550                                     581+@REGION_1933_1 ds 0h                                                    01-DCCPR
00000550 EBEC D008 0024          00000008    582+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             583 * ******* End of Prologue
                                             584 * *
                                             585 * ***      __memcpy(b,&v,sizeof(v));
00000556 41F0 1004               00000004    586          LA    15,4(0,1)
0000055A E310 1008 0004          00000008    587          LG    1,8(0,1)
00000560 D203 1000 F000 00000000 00000000    588          MVC   0(4,1),0(15)
                                             589 * ***   }
00000566                                     590 @ret_lab_1933 DS 0H
                                             591 * * **** Start of Epilogue
                                             592          DCCEPIL
00000566                                     593+         ds 0h                                                          01-DCCEP
                                             594+* Epilog
                                             595+* Epilog
00000566 E3E0 D008 0004          00000008    596+         lg    14,8(,13) restore the reg                                01-DCCEP
0000056C EB1C D020 0004          00000020    597+         lmg   1,12,32(13)                                              01-DCCEP
00000572 07FE                                598+         br   14                                                        01-DCCEP
                                             599+* End of Epilog
                                             600 * * **** End of Epilogue
                                             601 *
                                             602 *   DSECT for automatic variables in "put_unaligned32"
                                             603 *      (FUNCTION #1933)
                                             604 *
00000000                00000000 000000A8    605 @AUTO#put_unaligned32 DSECT
00000000                                     606          DS    XL168
                                             607 *
00000574                00000000 00005B58    608 @CODE    CSECT
                                             609 *
                                             610 *
                                             611 *
                                             612 * ....... start of put_unaligned16
00000574                                     613 @LNAME1934 DS  0H
00000574 0000000F                            614          DC    X'0000000F'
00000578 97A4A36DA4958193                    615          DC    C'put_unaligned16'
00000587 00                                  616          DC    X'00'
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             617 put_unaligned16 DCCPRLG CINDEX=1934,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1934
                                             618          macro
                                             619          dccextrn &m
                                             620          gblc    &$dccext(1000)
                                             621          gbla    &$dccexti
                                             622          lcla    &i
                                             623 &$dccext(&$dccexti+1) setc    '&m'
                                             624 &i       seta    1
                                             625 .loop    aif    (&i gt &$dccexti).around
                                             626          aif    ('&$dccext(&i)' eq '&m').getout
                                             627 &i       seta    &i+1
                                             628          ago     .loop
                                             629 .around  anop
                                             630 &$dccexti seta &$dccexti+1
                                             631          extrn  &m
                                             632 .getout  anop
                                             633          mend
00000588                                     634+$eye0020    ds    0d                                                    02-DCCCA
00000588 C4C3C3                              635+         dc cl3'DCC'                                                    02-DCCCA
0000058B 01                                  636+         dc xl1'01' format one                                          02-DCCCA
0000058C 00000000                            637+         dc a(0)                                                        02-DCCCA
00000590 0000000000000000                    638+         dc ad(0)                                                       02-DCCCA
00000598 00000000000000A8                    639+         dc ad(168)                                                     02-DCCCA
000005A0 0000000000000000                    640+         dc ad(0)                                                       02-DCCCA
000005A8 0000000000001000                    641+         dc ad(4096)                                                    02-DCCCA
000005B0 20                                  642+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000005B1 03                                  643+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000005B2 03                                  644+         dc al1(3)                                                      02-DCCCA
000005B3 08                                  645+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000005B4 00                                  646+         dc bl.8'00000000'                                              02-DCCCA
000005B5 000000                              647+         dc al3(0)                                                      02-DCCCA
000005B8 0000000000000574                    648+         dc ad(@LNAME1934)                                              02-DCCCA
000005C0                                     649+         ds 0d                                                          02-DCCCA
000005C0 0000000000000588                    650+         dc ad($eye0020)                                                02-DCCCA
000005C8 0000000000000000                    651+         dc ad(0)                                                       02-DCCCA
000005D0                                     652+         ds    0d                                                       01-DCCPR
000005D0                                     653+put_unaligned16 ds 0d                                                   01-DCCPR
000005D0                                     654+@REGION_1934_1 ds 0h                                                    01-DCCPR
000005D0 EBEC D008 0024          00000008    655+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             656 * ******* End of Prologue
                                             657 * *
                                             658 * ***      __memcpy(b,&v,sizeof(v));
000005D6 41F0 1006               00000006    659          LA    15,6(0,1)
000005DA E310 1008 0004          00000008    660          LG    1,8(0,1)
000005E0 D201 1000 F000 00000000 00000000    661          MVC   0(2,1),0(15)
                                             662 * ***   }
000005E6                                     663 @ret_lab_1934 DS 0H
                                             664 * * **** Start of Epilogue
                                             665          DCCEPIL
000005E6                                     666+         ds 0h                                                          01-DCCEP
                                             667+* Epilog
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             668+* Epilog
000005E6 E3E0 D008 0004          00000008    669+         lg    14,8(,13) restore the reg                                01-DCCEP
000005EC EB1C D020 0004          00000020    670+         lmg   1,12,32(13)                                              01-DCCEP
000005F2 07FE                                671+         br   14                                                        01-DCCEP
                                             672+* End of Epilog
                                             673 * * **** End of Epilogue
                                             674 *
                                             675 *   DSECT for automatic variables in "put_unaligned16"
                                             676 *      (FUNCTION #1934)
                                             677 *
00000000                00000000 000000A8    678 @AUTO#put_unaligned16 DSECT
00000000                                     679          DS    XL168
                                             680 *
000005F4                00000000 00005B58    681 @CODE    CSECT
                                             682 *
                                             683 *
                                             684 *
                                             685 * ....... start of unaligned_copy64
000005F4                                     686 @LNAME1935 DS  0H
000005F4 00000010                            687          DC    X'00000010'
000005F8 A495819389879585                    688          DC    C'unaligned_copy64'
00000608 00                                  689          DC    X'00'
                                             690 unaligned_copy64 DCCPRLG CINDEX=1935,BASER=12,FRAME=192,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1935
                                             691          macro
                                             692          dccextrn &m
                                             693          gblc    &$dccext(1000)
                                             694          gbla    &$dccexti
                                             695          lcla    &i
                                             696 &$dccext(&$dccexti+1) setc    '&m'
                                             697 &i       seta    1
                                             698 .loop    aif    (&i gt &$dccexti).around
                                             699          aif    ('&$dccext(&i)' eq '&m').getout
                                             700 &i       seta    &i+1
                                             701          ago     .loop
                                             702 .around  anop
                                             703 &$dccexti seta &$dccexti+1
                                             704          extrn  &m
                                             705 .getout  anop
                                             706          mend
00000610                                     707+$eye0023    ds    0d                                                    02-DCCCA
00000610 C4C3C3                              708+         dc cl3'DCC'                                                    02-DCCCA
00000613 01                                  709+         dc xl1'01' format one                                          02-DCCCA
00000614 00000000                            710+         dc a(0)                                                        02-DCCCA
00000618 0000000000000682                    711+         dc ad(@PER_1935)                                               02-DCCCA
00000620 00000000000000C0                    712+         dc ad(192)                                                     02-DCCCA
00000628 0000000000000000                    713+         dc ad(0)                                                       02-DCCCA
00000630 0000000000001000                    714+         dc ad(4096)                                                    02-DCCCA
00000638 20                                  715+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000639 03                                  716+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000063A 03                                  717+         dc al1(3)                                                      02-DCCCA
0000063B 08                                  718+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000063C 00                                  719+         dc bl.8'00000000'                                              02-DCCCA
0000063D 000000                              720+         dc al3(0)                                                      02-DCCCA
00000640 00000000000005F4                    721+         dc ad(@LNAME1935)                                              02-DCCCA
00000648                                     722+         ds 0d                                                          02-DCCCA
00000648 0000000000000610                    723+         dc ad($eye0023)                                                02-DCCCA
00000650 0000000000000000                    724+         dc ad(0)                                                       02-DCCCA
00000658                                     725+         ds    0d                                                       01-DCCPR
00000658                                     726+unaligned_copy64 ds 0d                                                  01-DCCPR
00000658                                     727+@REGION_1935_1 ds 0h                                                    01-DCCPR
00000658 EBEC D008 0024          00000008    728+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000065E E3E0 D088 0004          00000088    729+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000664 E3C0 D090 0004          00000090    730+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000066A B904 002E                           731+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000066E E3B0 C018 0004          00000018    732+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000674 A7EB 00C0               000000C0    733+         aghi  14,192              increase by frame size               01-DCCPR
00000678 E3E0 C020 0021          00000020    734+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000067E 4720 B020               00000020    735+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000682                                     736+@PER_1935 ds   0h                                                       01-DCCPR
00000682 EBDE 2080 0024          00000080    737+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000688 E3C0 2090 0024          00000090    738+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000068E B904 00D2                           739+         lgr   13,2                set real frame pointer               01-DCCPR
00000692 B904 00CF                           740+         lgr   12,15               set base reg                         01-DCCPR
                        00000658             741+         using @REGION_1935_1,12                                        01-DCCPR
00000696 B904 0031                           742          LGR   3,1         ; ptr to parm area
                                             743 * ******* End of Prologue
                                             744 * *
                                             745 * ***      if (sizeof(void *) == 8) {
                                             746 * ***         put_unaligned64(get_unaligned64((u64 *)(src)), (u64 *)(d\
                                             747 * st));
0000069A E3F0 3000 0004          00000000    748          LG    15,0(0,3)   ; src
000006A0 E3F0 D0B0 0024          000000B0    749          STG   15,176(0,13)
000006A6 4110 D0B0               000000B0    750          LA    1,176(0,13)
000006AA E3F0 C088 0004          000006E0    751          LG    15,@lit_1935_9 ; get_unaligned64
000006B0                                     752 @@gen_label7 DS    0H
000006B0 05EF                                753          BALR  14,15
000006B2                                     754 @@gen_label8 DS    0H
000006B2 E3F0 D0B0 0024          000000B0    755          STG   15,176(0,13)
000006B8 E3F0 3008 0004          00000008    756          LG    15,8(0,3)   ; dst
000006BE E3F0 D0B8 0024          000000B8    757          STG   15,184(0,13)
000006C4 4110 D0B0               000000B0    758          LA    1,176(0,13)
000006C8 E3F0 C090 0004          000006E8    759          LG    15,@lit_1935_10 ; put_unaligned64
000006CE                                     760 @@gen_label9 DS    0H
000006CE 05EF                                761          BALR  14,15
000006D0                                     762 @@gen_label10 DS    0H
                                             763 * ***      } else {
000006D0 47F0 C098               000006F0    764          B     @ret_lab_1935
000006D8                                     765          DS    0D
000006D8 000000C0                            766 @FRAMESIZE_1935 DC F'192'
000006DC 00000000
000006E0 00000000000002D0                    767 @lit_1935_9 DC AD(get_unaligned64)
000006E8 00000000000004D0                    768 @lit_1935_10 DC AD(put_unaligned64)
000006F0                                     769 @L630    DS    0H
                                                                                                                           Page   19 
  Active Usings: @REGION_1935_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             770 * ***         const char *src_char = (const char *)(src);
                                             771 * ***         char *dst_char = (char *)(dst);
                                             772 * ***
                                             773 * ***         put_unaligned32(get_unaligned32((u32 *)(src_char)), (u32\
                                             774 *  *)(dst_char));
000006F0                                     775 @@gen_label11 DS    0H
000006F0                                     776 @@gen_label12 DS    0H
000006F0                                     777 @@gen_label13 DS    0H
000006F0                                     778 @@gen_label14 DS    0H
                                             779 * ***         put_unaligned32(get_unaligned32((u32 *)(src_char + 4)), \
                                             780 * (u32 *)(dst_char + 4));
000006F0                                     781 @@gen_label15 DS    0H
000006F0                                     782 @@gen_label16 DS    0H
000006F0                                     783 @@gen_label17 DS    0H
000006F0                                     784 @@gen_label18 DS    0H
                                             785 * ***      }
000006F0                                     786 @L631    DS    0H
                                             787 * ***   }
000006F0                                     788 @ret_lab_1935 DS 0H
                                             789 * * **** Start of Epilogue
                                             790          DCCEPIL
000006F0                                     791+         ds 0h                                                          01-DCCEP
                                             792+* Epilog
000006F0 D707 D088 D088 00000088 00000088    793+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000006F6 E3D0 D080 0004          00000080    794+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000006FC E3C0 D090 0004          00000090    795+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000702 E3B0 C018 0004          00000018    796+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000708 E3C0 B010 0021          00000010    797+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000070E E3E0 D008 0004          00000008    798+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000714 EB1C D020 0004          00000020    799+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000071A 078E                                800+         bcr 8,14                if same dsab, just return              01-DCCEP
0000071C E3F0 D010 0024          00000010    801+         stg 15,16(0,13)         save return code                       01-DCCEP
00000722 E300 D018 0024          00000018    802+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000728 E3F0 D090 0004          00000090    803+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000072E E3F0 F018 0004          00000018    804+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000734 47F0 F040               00000040    805+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             806+* End of Epilog
                                             807 * * **** End of Epilogue
                                             808          DROP  12
                                             809 *
                                             810 *   DSECT for automatic variables in "unaligned_copy64"
                                             811 *      (FUNCTION #1935)
                                             812 *
00000000                00000000 000000A8    813 @AUTO#unaligned_copy64 DSECT
00000000                                     814          DS    XL168
                                             815 *
00000738                00000000 00005B58    816 @CODE    CSECT
                                             817 *
                                             818 *
                                             819 *
                                             820 * ....... start of is_little_endian
00000738                                     821 @LNAME1936 DS  0H
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000738 00000010                            822          DC    X'00000010'
0000073C 89A26D9389A3A393                    823          DC    C'is_little_endian'
0000074C 00                                  824          DC    X'00'
                                             825 is_little_endian DCCPRLG CINDEX=1936,BASER=0,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1936
                                             826          macro
                                             827          dccextrn &m
                                             828          gblc    &$dccext(1000)
                                             829          gbla    &$dccexti
                                             830          lcla    &i
                                             831 &$dccext(&$dccexti+1) setc    '&m'
                                             832 &i       seta    1
                                             833 .loop    aif    (&i gt &$dccexti).around
                                             834          aif    ('&$dccext(&i)' eq '&m').getout
                                             835 &i       seta    &i+1
                                             836          ago     .loop
                                             837 .around  anop
                                             838 &$dccexti seta &$dccexti+1
                                             839          extrn  &m
                                             840 .getout  anop
                                             841          mend
00000750                                     842+$eye0026    ds    0d                                                    02-DCCCA
00000750 C4C3C3                              843+         dc cl3'DCC'                                                    02-DCCCA
00000753 01                                  844+         dc xl1'01' format one                                          02-DCCCA
00000754 00000000                            845+         dc a(0)                                                        02-DCCCA
00000758 0000000000000000                    846+         dc ad(0)                                                       02-DCCCA
00000760 00000000000000A8                    847+         dc ad(168)                                                     02-DCCCA
00000768 0000000000000000                    848+         dc ad(0)                                                       02-DCCCA
00000770 0000000000001000                    849+         dc ad(4096)                                                    02-DCCCA
00000778 20                                  850+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000779 03                                  851+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000077A 03                                  852+         dc al1(3)                                                      02-DCCCA
0000077B 08                                  853+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000077C 00                                  854+         dc bl.8'00000000'                                              02-DCCCA
0000077D 000000                              855+         dc al3(0)                                                      02-DCCCA
00000780 0000000000000738                    856+         dc ad(@LNAME1936)                                              02-DCCCA
00000788                                     857+         ds 0d                                                          02-DCCCA
00000788 0000000000000750                    858+         dc ad($eye0026)                                                02-DCCCA
00000790 0000000000000000                    859+         dc ad(0)                                                       02-DCCCA
00000798                                     860+         ds    0d                                                       01-DCCPR
00000798                                     861+is_little_endian ds 0d                                                  01-DCCPR
00000798                                     862+@REGION_1936_1 ds 0h                                                    01-DCCPR
00000798 EBEC D008 0024          00000008    863+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             864 * ******* End of Prologue
                                             865 * *
                                             866 * ***
                                             867 * ***      return 1;
0000079E A7F9 0001               00000001    868          LGHI  15,1        ; 1
                                             869 * ***
                                             870 * ***      return 0;
                                             871 * ***   }
                                             872 * * **** Start of Epilogue
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             873          DCCEPIL
000007A2                                     874+         ds 0h                                                          01-DCCEP
                                             875+* Epilog
                                             876+* Epilog
000007A2 E3E0 D008 0004          00000008    877+         lg    14,8(,13) restore the reg                                01-DCCEP
000007A8 EB1C D020 0004          00000020    878+         lmg   1,12,32(13)                                              01-DCCEP
000007AE 07FE                                879+         br   14                                                        01-DCCEP
                                             880+* End of Epilog
                                             881 * * **** End of Epilogue
                                             882 *
                                             883 *   DSECT for automatic variables in "is_little_endian"
                                             884 *      (FUNCTION #1936)
                                             885 *
00000000                00000000 000000A8    886 @AUTO#is_little_endian DSECT
00000000                                     887          DS    XL168
                                             888 *
000007B0                00000000 00005B58    889 @CODE    CSECT
                                             890 *
                                             891 *
                                             892 *
                                             893 * ....... start of log2_floor
000007B0                                     894 @LNAME1937 DS  0H
000007B0 0000000A                            895          DC    X'0000000A'
000007B4 939687F26D869396                    896          DC    C'log2_floor'
000007BE 00                                  897          DC    X'00'
                                             898 log2_floor DCCPRLG CINDEX=1937,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1937
                                             899          macro
                                             900          dccextrn &m
                                             901          gblc    &$dccext(1000)
                                             902          gbla    &$dccexti
                                             903          lcla    &i
                                             904 &$dccext(&$dccexti+1) setc    '&m'
                                             905 &i       seta    1
                                             906 .loop    aif    (&i gt &$dccexti).around
                                             907          aif    ('&$dccext(&i)' eq '&m').getout
                                             908 &i       seta    &i+1
                                             909          ago     .loop
                                             910 .around  anop
                                             911 &$dccexti seta &$dccexti+1
                                             912          extrn  &m
                                             913 .getout  anop
                                             914          mend
000007C0                                     915+$eye0029    ds    0d                                                    02-DCCCA
000007C0 C4C3C3                              916+         dc cl3'DCC'                                                    02-DCCCA
000007C3 01                                  917+         dc xl1'01' format one                                          02-DCCCA
000007C4 00000000                            918+         dc a(0)                                                        02-DCCCA
000007C8 0000000000000000                    919+         dc ad(0)                                                       02-DCCCA
000007D0 00000000000000A8                    920+         dc ad(168)                                                     02-DCCCA
000007D8 0000000000000000                    921+         dc ad(0)                                                       02-DCCCA
000007E0 0000000000001000                    922+         dc ad(4096)                                                    02-DCCCA
000007E8 20                                  923+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000007E9 03                                  924+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007EA 03                                  925+         dc al1(3)                                                      02-DCCCA
000007EB 08                                  926+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007EC 00                                  927+         dc bl.8'00000000'                                              02-DCCCA
000007ED 000000                              928+         dc al3(0)                                                      02-DCCCA
000007F0 00000000000007B0                    929+         dc ad(@LNAME1937)                                              02-DCCCA
000007F8                                     930+         ds 0d                                                          02-DCCCA
000007F8 00000000000007C0                    931+         dc ad($eye0029)                                                02-DCCCA
00000800 0000000000000000                    932+         dc ad(0)                                                       02-DCCCA
00000808                                     933+         ds    0d                                                       01-DCCPR
00000808                                     934+log2_floor ds  0d                                                       01-DCCPR
00000808                                     935+@REGION_1937_1 ds 0h                                                    01-DCCPR
00000808 EBEC D008 0024          00000008    936+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000080E B904 00CF                           937+         lgr   12,15               set base reg                         01-DCCPR
                        00000808             938+         using @REGION_1937_1,12                                        01-DCCPR
                                             939 * ******* End of Prologue
                                             940 * *
                                             941 * ***      return n == 0 ? -1 : 31 ^ __builtin_clz(n);
00000812 E55D 1004 0000          00000004    942          CLFHSI 4(1),0
00000818 4770 C01C               00000824    943          BNE   @L632
0000081C A7F8 FFFF               0000FFFF    944          LHI   15,-1       ; -1
00000820 47F0 C032               0000083A    945          B     @L633
00000824                                     946 @L632    DS    0H
00000824 E3F0 1004 0016          00000004    947          LLGF  15,4(0,1)
0000082A B983 002F                           948          FLOGR 2,15
0000082E A72A FFE0               0000FFE0    949          AHI   2,-32
00000832 C027 0000 001F                      950          XILF  2,X'0000001F'
00000838 18F2                                951          LR    15,2
0000083A                                     952 @L633    DS    0H
0000083A B914 00FF                           953          LGFR  15,15
                                             954 * ***   }
                                             955 * * **** Start of Epilogue
                                             956          DCCEPIL
0000083E                                     957+         ds 0h                                                          01-DCCEP
                                             958+* Epilog
                                             959+* Epilog
0000083E E3E0 D008 0004          00000008    960+         lg    14,8(,13) restore the reg                                01-DCCEP
00000844 EB1C D020 0004          00000020    961+         lmg   1,12,32(13)                                              01-DCCEP
0000084A 07FE                                962+         br   14                                                        01-DCCEP
                                             963+* End of Epilog
                                             964 * * **** End of Epilogue
                                             965          DROP  12
                                             966 *
                                             967 *   DSECT for automatic variables in "log2_floor"
                                             968 *      (FUNCTION #1937)
                                             969 *
00000000                00000000 000000A8    970 @AUTO#log2_floor DSECT
00000000                                     971          DS    XL168
                                             972 *
0000084C                00000000 00005B58    973 @CODE    CSECT
                                             974 *
                                             975 *
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             976 *
                                             977 * ....... start of find_lsb_set_non_zero
0000084C                                     978 @LNAME1938 DS  0H
0000084C 00000015                            979          DC    X'00000015'
00000850 868995846D93A282                    980          DC    C'find_lsb_set_non_zero'
00000865 00                                  981          DC    X'00'
                                             982 find_lsb_set_non_zero DCCPRLG CINDEX=1938,BASER=12,FRAME=168,SAVEAREA=N*
                                                                O,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1938
                                             983          macro
                                             984          dccextrn &m
                                             985          gblc    &$dccext(1000)
                                             986          gbla    &$dccexti
                                             987          lcla    &i
                                             988 &$dccext(&$dccexti+1) setc    '&m'
                                             989 &i       seta    1
                                             990 .loop    aif    (&i gt &$dccexti).around
                                             991          aif    ('&$dccext(&i)' eq '&m').getout
                                             992 &i       seta    &i+1
                                             993          ago     .loop
                                             994 .around  anop
                                             995 &$dccexti seta &$dccexti+1
                                             996          extrn  &m
                                             997 .getout  anop
                                             998          mend
00000868                                     999+$eye0032    ds    0d                                                    02-DCCCA
00000868 C4C3C3                             1000+         dc cl3'DCC'                                                    02-DCCCA
0000086B 01                                 1001+         dc xl1'01' format one                                          02-DCCCA
0000086C 00000000                           1002+         dc a(0)                                                        02-DCCCA
00000870 0000000000000000                   1003+         dc ad(0)                                                       02-DCCCA
00000878 00000000000000A8                   1004+         dc ad(168)                                                     02-DCCCA
00000880 0000000000000000                   1005+         dc ad(0)                                                       02-DCCCA
00000888 0000000000001000                   1006+         dc ad(4096)                                                    02-DCCCA
00000890 20                                 1007+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000891 03                                 1008+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000892 03                                 1009+         dc al1(3)                                                      02-DCCCA
00000893 08                                 1010+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000894 00                                 1011+         dc bl.8'00000000'                                              02-DCCCA
00000895 000000                             1012+         dc al3(0)                                                      02-DCCCA
00000898 000000000000084C                   1013+         dc ad(@LNAME1938)                                              02-DCCCA
000008A0                                    1014+         ds 0d                                                          02-DCCCA
000008A0 0000000000000868                   1015+         dc ad($eye0032)                                                02-DCCCA
000008A8 0000000000000000                   1016+         dc ad(0)                                                       02-DCCCA
000008B0                                    1017+         ds    0d                                                       01-DCCPR
000008B0                                    1018+find_lsb_set_non_zero ds 0d                                             01-DCCPR
000008B0                                    1019+@REGION_1938_1 ds 0h                                                    01-DCCPR
000008B0 EBEC D008 0024          00000008   1020+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000008B6 B904 00CF                          1021+         lgr   12,15               set base reg                         01-DCCPR
                        000008B0            1022+         using @REGION_1938_1,12                                        01-DCCPR
                                            1023 * ******* End of Prologue
                                            1024 * *
                                            1025 * ***      return __builtin_ctz(n);
000008BA E3F0 1004 0012          00000004   1026          LT    15,4(0,1)
                                                                                                                           Page   24 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000008C0 4770 C01C               000008CC   1027          BNZ   @@gen_label20
000008C4 A7F8 0020               00000020   1028          LHI   15,32       ; 32
000008C8 47F0 C034               000008E4   1029          B     @@gen_label21
000008CC                                    1030 @@gen_label20 DS 0H
000008CC 131F                               1031          LCR   1,15
000008CE 141F                               1032          NR    1,15
000008D0 B916 0011                          1033          LLGFR 1,1
000008D4 B983 0021                          1034          FLOGR 2,1
000008D8 18F2                               1035          LR    15,2
000008DA A7FA FFE0               0000FFE0   1036          AHI   15,-32
000008DE 13FF                               1037          LCR   15,15
000008E0 A7FA 001F               0000001F   1038          AHI   15,31
000008E4                                    1039 @@gen_label21 DS 0H
000008E4 B914 00FF                          1040          LGFR  15,15
                                            1041 * ***   }
                                            1042 * * **** Start of Epilogue
                                            1043          DCCEPIL
000008E8                                    1044+         ds 0h                                                          01-DCCEP
                                            1045+* Epilog
                                            1046+* Epilog
000008E8 E3E0 D008 0004          00000008   1047+         lg    14,8(,13) restore the reg                                01-DCCEP
000008EE EB1C D020 0004          00000020   1048+         lmg   1,12,32(13)                                              01-DCCEP
000008F4 07FE                               1049+         br   14                                                        01-DCCEP
                                            1050+* End of Epilog
                                            1051 * * **** End of Epilogue
                                            1052          DROP  12
                                            1053 *
                                            1054 *   DSECT for automatic variables in "find_lsb_set_non_zero"
                                            1055 *      (FUNCTION #1938)
                                            1056 *
00000000                00000000 000000A8   1057 @AUTO#find_lsb_set_non_zero DSECT
00000000                                    1058          DS    XL168
                                            1059 *
000008F6                00000000 00005B58   1060 @CODE    CSECT
                                            1061 *
                                            1062 *
                                            1063 *
                                            1064 * ....... start of varint_parse32_with_limit
000008F6                                    1065 @LNAME1940 DS  0H
000008F6 00000019                           1066          DC    X'00000019'
000008FA A581998995A36D97                   1067          DC    C'varint_parse32_with_limit'
00000913 00                                 1068          DC    X'00'
                                            1069 varint_parse32_with_limit DCCPRLG CINDEX=1940,BASER=12,FRAME=176,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1940
                                            1070          macro
                                            1071          dccextrn &m
                                            1072          gblc    &$dccext(1000)
                                            1073          gbla    &$dccexti
                                            1074          lcla    &i
                                            1075 &$dccext(&$dccexti+1) setc    '&m'
                                            1076 &i       seta    1
                                            1077 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1078          aif    ('&$dccext(&i)' eq '&m').getout
                                            1079 &i       seta    &i+1
                                            1080          ago     .loop
                                            1081 .around  anop
                                            1082 &$dccexti seta &$dccexti+1
                                            1083          extrn  &m
                                            1084 .getout  anop
                                            1085          mend
00000918                                    1086+$eye0035    ds    0d                                                    02-DCCCA
00000918 C4C3C3                             1087+         dc cl3'DCC'                                                    02-DCCCA
0000091B 01                                 1088+         dc xl1'01' format one                                          02-DCCCA
0000091C 00000000                           1089+         dc a(0)                                                        02-DCCCA
00000920 0000000000000000                   1090+         dc ad(0)                                                       02-DCCCA
00000928 00000000000000B0                   1091+         dc ad(176)                                                     02-DCCCA
00000930 0000000000000000                   1092+         dc ad(0)                                                       02-DCCCA
00000938 0000000000001000                   1093+         dc ad(4096)                                                    02-DCCCA
00000940 20                                 1094+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000941 03                                 1095+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000942 03                                 1096+         dc al1(3)                                                      02-DCCCA
00000943 08                                 1097+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000944 00                                 1098+         dc bl.8'00000000'                                              02-DCCCA
00000945 000000                             1099+         dc al3(0)                                                      02-DCCCA
00000948 00000000000008F6                   1100+         dc ad(@LNAME1940)                                              02-DCCCA
00000950                                    1101+         ds 0d                                                          02-DCCCA
00000950 0000000000000918                   1102+         dc ad($eye0035)                                                02-DCCCA
00000958 0000000000000000                   1103+         dc ad(0)                                                       02-DCCCA
00000960                                    1104+         ds    0d                                                       01-DCCPR
00000960                                    1105+varint_parse32_with_limit ds 0d                                         01-DCCPR
00000960                                    1106+@REGION_1940_1 ds 0h                                                    01-DCCPR
00000960 EBEC D008 0024          00000008   1107+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000966 B904 00CF                          1108+         lgr   12,15               set base reg                         01-DCCPR
                        00000960            1109+         using @REGION_1940_1,12                                        01-DCCPR
0000096A B904 0031                          1110          LGR   3,1         ; ptr to parm area
                                            1111 * ******* End of Prologue
                                            1112 * *
                                            1113 * ***      const unsigned char *ptr = (const unsigned char *)(p);
0000096E E3F0 3000 0004          00000000   1114          LG    15,0(0,3)   ; p
                                            1115 * ***      const unsigned char *limit = (const unsigned char *)(l);
00000974 E310 3008 0004          00000008   1116          LG    1,8(0,3)    ; l
                                            1117 * ***      u32 b, result;
                                            1118 * ***
                                            1119 * ***      if (ptr >= limit)
0000097A B920 00F1                          1120          CGR   15,1
0000097E 4740 C02A               0000098A   1121          BL    @L634
                                            1122 * ***         return ((void *)0);
00000982 A7F9 0000               00000000   1123          LGHI  15,0        ; 0
00000986 47F0 C134               00000A94   1124          B     @ret_lab_1940
0000098A                                    1125 @L634    DS    0H
                                            1126 * ***      b = *(ptr++);
0000098A B904 002F                          1127          LGR   2,15
0000098E 41F0 F001               00000001   1128          LA    15,1(0,15)
00000992 E340 2000 0094          00000000   1129          LLC   4,0(0,2)
                                                                                                                           Page   26 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1130 * ***      result = b & 127;
00000998 1824                               1131          LR    2,4
0000099A C02B 0000 007F                     1132          NILF  2,X'0000007F'
                                            1133 * ***      if (b < 128)
000009A0 C24F 0000 0080                     1134          CLFI  4,X'00000080'
000009A6 4740 C12A               00000A8A   1135          BL    @_done@1940@0
                                            1136 * ***         goto done;
000009AA                                    1137 @L635    DS    0H
                                            1138 * ***      if (ptr >= limit)
000009AA B920 00F1                          1139          CGR   15,1
000009AE 4740 C05A               000009BA   1140          BL    @L636
                                            1141 * ***         return ((void *)0);
000009B2 A7F9 0000               00000000   1142          LGHI  15,0        ; 0
000009B6 47F0 C134               00000A94   1143          B     @ret_lab_1940
000009BA                                    1144 @L636    DS    0H
                                            1145 * ***      b = *(ptr++);
000009BA B904 004F                          1146          LGR   4,15
000009BE 41F0 F001               00000001   1147          LA    15,1(0,15)
000009C2 E340 4000 0094          00000000   1148          LLC   4,0(0,4)
                                            1149 * ***      result |= (b & 127) << 7;
000009C8 1854                               1150          LR    5,4
000009CA C05B 0000 007F                     1151          NILF  5,X'0000007F'
000009D0 8950 0007               00000007   1152          SLL   5,7(0)
000009D4 1625                               1153          OR    2,5
                                            1154 * ***      if (b < 128)
000009D6 C24F 0000 0080                     1155          CLFI  4,X'00000080'
000009DC 4740 C12A               00000A8A   1156          BL    @_done@1940@0
                                            1157 * ***         goto done;
000009E0                                    1158 @L637    DS    0H
                                            1159 * ***      if (ptr >= limit)
000009E0 B920 00F1                          1160          CGR   15,1
000009E4 4740 C090               000009F0   1161          BL    @L638
                                            1162 * ***         return ((void *)0);
000009E8 A7F9 0000               00000000   1163          LGHI  15,0        ; 0
000009EC 47F0 C134               00000A94   1164          B     @ret_lab_1940
000009F0                                    1165 @L638    DS    0H
                                            1166 * ***      b = *(ptr++);
000009F0 B904 004F                          1167          LGR   4,15
000009F4 41F0 F001               00000001   1168          LA    15,1(0,15)
000009F8 E340 4000 0094          00000000   1169          LLC   4,0(0,4)
                                            1170 * ***      result |= (b & 127) << 14;
000009FE 1854                               1171          LR    5,4
00000A00 C05B 0000 007F                     1172          NILF  5,X'0000007F'
00000A06 8950 000E               0000000E   1173          SLL   5,14(0)
00000A0A 1625                               1174          OR    2,5
                                            1175 * ***      if (b < 128)
00000A0C C24F 0000 0080                     1176          CLFI  4,X'00000080'
00000A12 4740 C12A               00000A8A   1177          BL    @_done@1940@0
                                            1178 * ***         goto done;
00000A16                                    1179 @L639    DS    0H
                                            1180 * ***      if (ptr >= limit)
00000A16 B920 00F1                          1181          CGR   15,1
                                                                                                                           Page   27 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000A1A 4740 C0C6               00000A26   1182          BL    @L640
                                            1183 * ***         return ((void *)0);
00000A1E A7F9 0000               00000000   1184          LGHI  15,0        ; 0
00000A22 47F0 C134               00000A94   1185          B     @ret_lab_1940
00000A26                                    1186 @L640    DS    0H
                                            1187 * ***      b = *(ptr++);
00000A26 B904 004F                          1188          LGR   4,15
00000A2A 41F0 F001               00000001   1189          LA    15,1(0,15)
00000A2E E340 4000 0094          00000000   1190          LLC   4,0(0,4)
                                            1191 * ***      result |= (b & 127) << 21;
00000A34 1854                               1192          LR    5,4
00000A36 C05B 0000 007F                     1193          NILF  5,X'0000007F'
00000A3C 8950 0015               00000015   1194          SLL   5,21(0)
00000A40 1625                               1195          OR    2,5
                                            1196 * ***      if (b < 128)
00000A42 C24F 0000 0080                     1197          CLFI  4,X'00000080'
00000A48 4740 C12A               00000A8A   1198          BL    @_done@1940@0
                                            1199 * ***         goto done;
00000A4C                                    1200 @L641    DS    0H
                                            1201 * ***      if (ptr >= limit)
00000A4C B920 00F1                          1202          CGR   15,1
00000A50 4740 C0FC               00000A5C   1203          BL    @L642
                                            1204 * ***         return ((void *)0);
00000A54 A7F9 0000               00000000   1205          LGHI  15,0        ; 0
00000A58 47F0 C134               00000A94   1206          B     @ret_lab_1940
00000A5C                                    1207 @L642    DS    0H
                                            1208 * ***      b = *(ptr++);
00000A5C B904 001F                          1209          LGR   1,15
00000A60 41F0 F001               00000001   1210          LA    15,1(0,15)
00000A64 E310 1000 0094          00000000   1211          LLC   1,0(0,1)
                                            1212 * ***      result |= (b & 127) << 28;
00000A6A 1841                               1213          LR    4,1
00000A6C C04B 0000 007F                     1214          NILF  4,X'0000007F'
00000A72 8940 001C               0000001C   1215          SLL   4,28(0)
00000A76 1624                               1216          OR    2,4
                                            1217 * ***      if (b < 16)
00000A78 C21F 0000 0010                     1218          CLFI  1,X'00000010'
00000A7E 4740 C12A               00000A8A   1219          BL    @_done@1940@0
                                            1220 * ***         goto done;
00000A82                                    1221 @L643    DS    0H
                                            1222 * ***      return ((void *)0);
00000A82 A7F9 0000               00000000   1223          LGHI  15,0        ; 0
00000A86 47F0 C134               00000A94   1224          B     @ret_lab_1940
                                            1225 * ***   done:
                                            1226 * ***      *OUTPUT = result;
00000A8A                                    1227 @_done@1940@0 DS 0H
00000A8A E310 3010 0004          00000010   1228          LG    1,16(0,3)   ; OUTPUT
00000A90 5020 1000               00000000   1229          ST    2,0(0,1)    ; OUTPUT
                                            1230 * ***      return (const char *)(ptr);
                                            1231 * ***   }
00000A94                                    1232 @ret_lab_1940 DS 0H
                                            1233 * * **** Start of Epilogue
                                                                                                                           Page   28 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1234          DCCEPIL
00000A94                                    1235+         ds 0h                                                          01-DCCEP
                                            1236+* Epilog
                                            1237+* Epilog
00000A94 E3E0 D008 0004          00000008   1238+         lg    14,8(,13) restore the reg                                01-DCCEP
00000A9A EB1C D020 0004          00000020   1239+         lmg   1,12,32(13)                                              01-DCCEP
00000AA0 07FE                               1240+         br   14                                                        01-DCCEP
                                            1241+* End of Epilog
                                            1242 * * **** End of Epilogue
                                            1243          DROP  12
                                            1244 *
                                            1245 *   DSECT for automatic variables in "varint_parse32_with_limit"
                                            1246 *      (FUNCTION #1940)
                                            1247 *
00000000                00000000 000000AC   1248 @AUTO#varint_parse32_with_limit DSECT
00000000                                    1249          DS    XL168
000000A8                                    1250 varint_parse32_with_limit#result#0 DS 1F ; result
000000AC                000000AC 000000A8   1251          ORG   @AUTO#varint_parse32_with_limit+168
000000A8                                    1252 varint_parse32_with_limit#b#0 DS 1F ; b
                                            1253 *
00000AA2                00000000 00005B58   1254 @CODE    CSECT
                                            1255 *
                                            1256 *
                                            1257 *
                                            1258 * ....... start of varint_encode32
00000AA2                                    1259 @LNAME1941 DS  0H
00000AA2 0000000F                           1260          DC    X'0000000F'
00000AA6 A581998995A36D85                   1261          DC    C'varint_encode32'
00000AB5 00                                 1262          DC    X'00'
                                            1263 varint_encode32 DCCPRLG CINDEX=1941,BASER=12,FRAME=176,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1941
                                            1264          macro
                                            1265          dccextrn &m
                                            1266          gblc    &$dccext(1000)
                                            1267          gbla    &$dccexti
                                            1268          lcla    &i
                                            1269 &$dccext(&$dccexti+1) setc    '&m'
                                            1270 &i       seta    1
                                            1271 .loop    aif    (&i gt &$dccexti).around
                                            1272          aif    ('&$dccext(&i)' eq '&m').getout
                                            1273 &i       seta    &i+1
                                            1274          ago     .loop
                                            1275 .around  anop
                                            1276 &$dccexti seta &$dccexti+1
                                            1277          extrn  &m
                                            1278 .getout  anop
                                            1279          mend
00000AB8                                    1280+$eye0038    ds    0d                                                    02-DCCCA
00000AB8 C4C3C3                             1281+         dc cl3'DCC'                                                    02-DCCCA
00000ABB 01                                 1282+         dc xl1'01' format one                                          02-DCCCA
00000ABC 00000000                           1283+         dc a(0)                                                        02-DCCCA
00000AC0 0000000000000000                   1284+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000AC8 00000000000000B0                   1285+         dc ad(176)                                                     02-DCCCA
00000AD0 0000000000000000                   1286+         dc ad(0)                                                       02-DCCCA
00000AD8 0000000000001000                   1287+         dc ad(4096)                                                    02-DCCCA
00000AE0 20                                 1288+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AE1 03                                 1289+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AE2 03                                 1290+         dc al1(3)                                                      02-DCCCA
00000AE3 08                                 1291+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AE4 00                                 1292+         dc bl.8'00000000'                                              02-DCCCA
00000AE5 000000                             1293+         dc al3(0)                                                      02-DCCCA
00000AE8 0000000000000AA2                   1294+         dc ad(@LNAME1941)                                              02-DCCCA
00000AF0                                    1295+         ds 0d                                                          02-DCCCA
00000AF0 0000000000000AB8                   1296+         dc ad($eye0038)                                                02-DCCCA
00000AF8 0000000000000000                   1297+         dc ad(0)                                                       02-DCCCA
00000B00                                    1298+         ds    0d                                                       01-DCCPR
00000B00                                    1299+varint_encode32 ds 0d                                                   01-DCCPR
00000B00                                    1300+@REGION_1941_1 ds 0h                                                    01-DCCPR
00000B00 EBEC D008 0024          00000008   1301+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B06 B904 00CF                          1302+         lgr   12,15               set base reg                         01-DCCPR
                        00000B00            1303+         using @REGION_1941_1,12                                        01-DCCPR
                                            1304 * ******* End of Prologue
                                            1305 * *
00000B0A 58F0 100C               0000000C   1306          L     15,12(0,1)  ; v
                                            1307 * ***
                                            1308 * ***      unsigned char *ptr = (unsigned char *)(sptr);
00000B0E E310 1000 0004          00000000   1309          LG    1,0(0,1)    ; sptr
                                            1310 * ***      static const int B = 128;
                                            1311 * ***
                                            1312 * ***      if (v < (1 << 7)) {
00000B14 C2FF 0000 0080                     1313          CLFI  15,X'00000080'
00000B1A 47B0 C038               00000B38   1314          BNL   @L644
                                            1315 * ***         *(ptr++) = v;
00000B1E B904 0021                          1316          LGR   2,1
00000B22 4110 1001               00000001   1317          LA    1,1(0,1)
00000B26 42F0 2000               00000000   1318          STC   15,0(0,2)
                                            1319 * ***      } else if (v < (1 << 14)) {
00000B2A 47F0 C156               00000C56   1320          B     @L645
00000B30                                    1321          DS    0D
00000B30 0000000000005B58                   1322 @lit_1941_25 DC AD(@DATA)
00000B38                                    1323 @L644    DS    0H
00000B38 C2FF 0000 4000                     1324          CLFI  15,X'00004000'
00000B3E 47B0 C066               00000B66   1325          BNL   @L646
                                            1326 * ***         *(ptr++) = v | B;
00000B42 4120 1001               00000001   1327          LA    2,1(0,1)
00000B46 E330 C030 0004          00000B30   1328          LG    3,@lit_1941_25
00000B4C 184F                               1329          LR    4,15
00000B4E 5640 31A8               000001A8   1330          O     4,424(0,3)
00000B52 4240 1000               00000000   1331          STC   4,0(0,1)
                                            1332 * ***         *(ptr++) = v >> 7;
00000B56 4110 2001               00000001   1333          LA    1,1(0,2)
00000B5A 88F0 0007               00000007   1334          SRL   15,7(0)
00000B5E 42F0 2000               00000000   1335          STC   15,0(0,2)
                                            1336 * ***      } else if (v < (1 << 21)) {
                                                                                                                           Page   30 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000B62 47F0 C156               00000C56   1337          B     @L645
00000B66                                    1338 @L646    DS    0H
00000B66 C2FF 0020 0000                     1339          CLFI  15,X'00200000'
00000B6C 47B0 C0AA               00000BAA   1340          BNL   @L648
                                            1341 * ***         *(ptr++) = v | B;
00000B70 4120 1001               00000001   1342          LA    2,1(0,1)
00000B74 E330 C030 0004          00000B30   1343          LG    3,@lit_1941_25
00000B7A 184F                               1344          LR    4,15
00000B7C 5640 31A8               000001A8   1345          O     4,424(0,3)
00000B80 4240 1000               00000000   1346          STC   4,0(0,1)
                                            1347 * ***         *(ptr++) = (v >> 7) | B;
00000B84 4110 2001               00000001   1348          LA    1,1(0,2)
00000B88 184F                               1349          LR    4,15
00000B8A 8840 0007               00000007   1350          SRL   4,7(0)
00000B8E 5640 31A8               000001A8   1351          O     4,424(0,3)
00000B92 4240 2000               00000000   1352          STC   4,0(0,2)
                                            1353 * ***         *(ptr++) = v >> 14;
00000B96 B904 0021                          1354          LGR   2,1
00000B9A 4110 1001               00000001   1355          LA    1,1(0,1)
00000B9E 88F0 000E               0000000E   1356          SRL   15,14(0)
00000BA2 42F0 2000               00000000   1357          STC   15,0(0,2)
                                            1358 * ***      } else if (v < (1 << 28)) {
00000BA6 47F0 C156               00000C56   1359          B     @L645
00000BAA                                    1360 @L648    DS    0H
00000BAA C2FF 1000 0000                     1361          CLFI  15,X'10000000'
00000BB0 47B0 C0FC               00000BFC   1362          BNL   @L650
                                            1363 * ***         *(ptr++) = v | B;
00000BB4 4120 1001               00000001   1364          LA    2,1(0,1)
00000BB8 E330 C030 0004          00000B30   1365          LG    3,@lit_1941_25
00000BBE 184F                               1366          LR    4,15
00000BC0 5640 31A8               000001A8   1367          O     4,424(0,3)
00000BC4 4240 1000               00000000   1368          STC   4,0(0,1)
                                            1369 * ***         *(ptr++) = (v >> 7) | B;
00000BC8 4110 2001               00000001   1370          LA    1,1(0,2)
00000BCC 184F                               1371          LR    4,15
00000BCE 8840 0007               00000007   1372          SRL   4,7(0)
00000BD2 5640 31A8               000001A8   1373          O     4,424(0,3)
00000BD6 4240 2000               00000000   1374          STC   4,0(0,2)
                                            1375 * ***         *(ptr++) = (v >> 14) | B;
00000BDA 4120 1001               00000001   1376          LA    2,1(0,1)
00000BDE 184F                               1377          LR    4,15
00000BE0 8840 000E               0000000E   1378          SRL   4,14(0)
00000BE4 5640 31A8               000001A8   1379          O     4,424(0,3)
00000BE8 4240 1000               00000000   1380          STC   4,0(0,1)
                                            1381 * ***         *(ptr++) = v >> 21;
00000BEC 4110 2001               00000001   1382          LA    1,1(0,2)
00000BF0 88F0 0015               00000015   1383          SRL   15,21(0)
00000BF4 42F0 2000               00000000   1384          STC   15,0(0,2)
                                            1385 * ***      } else {
00000BF8 47F0 C156               00000C56   1386          B     @L645
00000BFC                                    1387 @L650    DS    0H
                                            1388 * ***         *(ptr++) = v | B;
                                                                                                                           Page   31 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000BFC 4120 1001               00000001   1389          LA    2,1(0,1)
00000C00 E330 C030 0004          00000B30   1390          LG    3,@lit_1941_25
00000C06 184F                               1391          LR    4,15
00000C08 5640 31A8               000001A8   1392          O     4,424(0,3)
00000C0C 4240 1000               00000000   1393          STC   4,0(0,1)
                                            1394 * ***         *(ptr++) = (v >> 7) | B;
00000C10 4110 2001               00000001   1395          LA    1,1(0,2)
00000C14 184F                               1396          LR    4,15
00000C16 8840 0007               00000007   1397          SRL   4,7(0)
00000C1A 5640 31A8               000001A8   1398          O     4,424(0,3)
00000C1E 4240 2000               00000000   1399          STC   4,0(0,2)
                                            1400 * ***         *(ptr++) = (v >> 14) | B;
00000C22 4120 1001               00000001   1401          LA    2,1(0,1)
00000C26 184F                               1402          LR    4,15
00000C28 8840 000E               0000000E   1403          SRL   4,14(0)
00000C2C 5640 31A8               000001A8   1404          O     4,424(0,3)
00000C30 4240 1000               00000000   1405          STC   4,0(0,1)
                                            1406 * ***         *(ptr++) = (v >> 21) | B;
00000C34 4110 2001               00000001   1407          LA    1,1(0,2)
00000C38 184F                               1408          LR    4,15
00000C3A 8840 0015               00000015   1409          SRL   4,21(0)
00000C3E 5640 31A8               000001A8   1410          O     4,424(0,3)
00000C42 4240 2000               00000000   1411          STC   4,0(0,2)
                                            1412 * ***         *(ptr++) = v >> 28;
00000C46 B904 0021                          1413          LGR   2,1
00000C4A 4110 1001               00000001   1414          LA    1,1(0,1)
00000C4E 88F0 001C               0000001C   1415          SRL   15,28(0)
00000C52 42F0 2000               00000000   1416          STC   15,0(0,2)
                                            1417 * ***      }
00000C56                                    1418 @L651    DS    0H
                                            1419 * ***      return (char *)(ptr);
00000C56                                    1420 @L649    DS    0H
00000C56                                    1421 @L647    DS    0H
00000C56                                    1422 @L645    DS    0H
00000C56 B904 00F1                          1423          LGR   15,1
                                            1424 * ***   }
                                            1425 * * **** Start of Epilogue
                                            1426          DCCEPIL
00000C5A                                    1427+         ds 0h                                                          01-DCCEP
                                            1428+* Epilog
                                            1429+* Epilog
00000C5A E3E0 D008 0004          00000008   1430+         lg    14,8(,13) restore the reg                                01-DCCEP
00000C60 EB1C D020 0004          00000020   1431+         lmg   1,12,32(13)                                              01-DCCEP
00000C66 07FE                               1432+         br   14                                                        01-DCCEP
                                            1433+* End of Epilog
                                            1434 * * **** End of Epilogue
                                            1435          DROP  12
                                            1436 *
                                            1437 *   DSECT for automatic variables in "varint_encode32"
                                            1438 *      (FUNCTION #1941)
                                            1439 *
00000000                00000000 000000A8   1440 @AUTO#varint_encode32 DSECT
                                                                                                                           Page   32 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    1441          DS    XL168
                                            1442 *
00000C68                00000000 00005B58   1443 @CODE    CSECT
                                            1444 *
                                            1445 *
                                            1446 *
                                            1447 * ....... start of n_bytes_after_addr
00000C68                                    1448 @LNAME1942 DS  0H
00000C68 00000012                           1449          DC    X'00000012'
00000C6C 956D82A8A385A26D                   1450          DC    C'n_bytes_after_addr'
00000C7E 00                                 1451          DC    X'00'
                                            1452 n_bytes_after_addr DCCPRLG CINDEX=1942,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1942
                                            1453          macro
                                            1454          dccextrn &m
                                            1455          gblc    &$dccext(1000)
                                            1456          gbla    &$dccexti
                                            1457          lcla    &i
                                            1458 &$dccext(&$dccexti+1) setc    '&m'
                                            1459 &i       seta    1
                                            1460 .loop    aif    (&i gt &$dccexti).around
                                            1461          aif    ('&$dccext(&i)' eq '&m').getout
                                            1462 &i       seta    &i+1
                                            1463          ago     .loop
                                            1464 .around  anop
                                            1465 &$dccexti seta &$dccexti+1
                                            1466          extrn  &m
                                            1467 .getout  anop
                                            1468          mend
00000C80                                    1469+$eye0041    ds    0d                                                    02-DCCCA
00000C80 C4C3C3                             1470+         dc cl3'DCC'                                                    02-DCCCA
00000C83 01                                 1471+         dc xl1'01' format one                                          02-DCCCA
00000C84 00000000                           1472+         dc a(0)                                                        02-DCCCA
00000C88 0000000000000000                   1473+         dc ad(0)                                                       02-DCCCA
00000C90 00000000000000A8                   1474+         dc ad(168)                                                     02-DCCCA
00000C98 0000000000000000                   1475+         dc ad(0)                                                       02-DCCCA
00000CA0 0000000000001000                   1476+         dc ad(4096)                                                    02-DCCCA
00000CA8 20                                 1477+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000CA9 03                                 1478+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000CAA 03                                 1479+         dc al1(3)                                                      02-DCCCA
00000CAB 08                                 1480+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000CAC 00                                 1481+         dc bl.8'00000000'                                              02-DCCCA
00000CAD 000000                             1482+         dc al3(0)                                                      02-DCCCA
00000CB0 0000000000000C68                   1483+         dc ad(@LNAME1942)                                              02-DCCCA
00000CB8                                    1484+         ds 0d                                                          02-DCCCA
00000CB8 0000000000000C80                   1485+         dc ad($eye0041)                                                02-DCCCA
00000CC0 0000000000000000                   1486+         dc ad(0)                                                       02-DCCCA
00000CC8                                    1487+         ds    0d                                                       01-DCCPR
00000CC8                                    1488+n_bytes_after_addr ds 0d                                                01-DCCPR
00000CC8                                    1489+@REGION_1942_1 ds 0h                                                    01-DCCPR
00000CC8 EBEC D008 0024          00000008   1490+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1491 * ******* End of Prologue
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1492 * *
                                            1493 * ***       return (void *) ((char *)addr + n_bytes);
00000CCE E3F0 1000 0004          00000000   1494          LG    15,0(0,1)   ; addr
00000CD4 E310 1008 0004          00000008   1495          LG    1,8(0,1)    ; n_bytes
00000CDA 41F1 F000               00000000   1496          LA    15,0(1,15)
                                            1497 * ***   }
                                            1498 * * **** Start of Epilogue
                                            1499          DCCEPIL
00000CDE                                    1500+         ds 0h                                                          01-DCCEP
                                            1501+* Epilog
                                            1502+* Epilog
00000CDE E3E0 D008 0004          00000008   1503+         lg    14,8(,13) restore the reg                                01-DCCEP
00000CE4 EB1C D020 0004          00000020   1504+         lmg   1,12,32(13)                                              01-DCCEP
00000CEA 07FE                               1505+         br   14                                                        01-DCCEP
                                            1506+* End of Epilog
                                            1507 * * **** End of Epilogue
                                            1508 *
                                            1509 *   DSECT for automatic variables in "n_bytes_after_addr"
                                            1510 *      (FUNCTION #1942)
                                            1511 *
00000000                00000000 000000A8   1512 @AUTO#n_bytes_after_addr DSECT
00000000                                    1513          DS    XL168
                                            1514 *
00000CEC                00000000 00005B58   1515 @CODE    CSECT
                                            1516 *
                                            1517 *
                                            1518 *
                                            1519 * ....... start of available
00000CEC                                    1520 @LNAME1943 DS  0H
00000CEC 00000009                           1521          DC    X'00000009'
00000CF0 81A5818993818293                   1522          DC    C'available'
00000CF9 00                                 1523          DC    X'00'
                                            1524 available DCCPRLG CINDEX=1943,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1943
                                            1525          macro
                                            1526          dccextrn &m
                                            1527          gblc    &$dccext(1000)
                                            1528          gbla    &$dccexti
                                            1529          lcla    &i
                                            1530 &$dccext(&$dccexti+1) setc    '&m'
                                            1531 &i       seta    1
                                            1532 .loop    aif    (&i gt &$dccexti).around
                                            1533          aif    ('&$dccext(&i)' eq '&m').getout
                                            1534 &i       seta    &i+1
                                            1535          ago     .loop
                                            1536 .around  anop
                                            1537 &$dccexti seta &$dccexti+1
                                            1538          extrn  &m
                                            1539 .getout  anop
                                            1540          mend
00000D00                                    1541+$eye0044    ds    0d                                                    02-DCCCA
00000D00 C4C3C3                             1542+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000D03 01                                 1543+         dc xl1'01' format one                                          02-DCCCA
00000D04 00000000                           1544+         dc a(0)                                                        02-DCCCA
00000D08 0000000000000000                   1545+         dc ad(0)                                                       02-DCCCA
00000D10 00000000000000A8                   1546+         dc ad(168)                                                     02-DCCCA
00000D18 0000000000000000                   1547+         dc ad(0)                                                       02-DCCCA
00000D20 0000000000001000                   1548+         dc ad(4096)                                                    02-DCCCA
00000D28 20                                 1549+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D29 03                                 1550+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D2A 03                                 1551+         dc al1(3)                                                      02-DCCCA
00000D2B 08                                 1552+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D2C 00                                 1553+         dc bl.8'00000000'                                              02-DCCCA
00000D2D 000000                             1554+         dc al3(0)                                                      02-DCCCA
00000D30 0000000000000CEC                   1555+         dc ad(@LNAME1943)                                              02-DCCCA
00000D38                                    1556+         ds 0d                                                          02-DCCCA
00000D38 0000000000000D00                   1557+         dc ad($eye0044)                                                02-DCCCA
00000D40 0000000000000000                   1558+         dc ad(0)                                                       02-DCCCA
00000D48                                    1559+         ds    0d                                                       01-DCCPR
00000D48                                    1560+available ds   0d                                                       01-DCCPR
00000D48                                    1561+@REGION_1943_1 ds 0h                                                    01-DCCPR
00000D48 EBEC D008 0024          00000008   1562+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1563 * ******* End of Prologue
                                            1564 * *
                                            1565 * ***      return (int) s->total;
00000D4E E3F0 1000 0004          00000000   1566          LG    15,0(0,1)   ; s
00000D54 E3F0 F01C 0014          0000001C   1567          LGF   15,28(0,15)
                                            1568 * ***   }
                                            1569 * * **** Start of Epilogue
                                            1570          DCCEPIL
00000D5A                                    1571+         ds 0h                                                          01-DCCEP
                                            1572+* Epilog
                                            1573+* Epilog
00000D5A E3E0 D008 0004          00000008   1574+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D60 EB1C D020 0004          00000020   1575+         lmg   1,12,32(13)                                              01-DCCEP
00000D66 07FE                               1576+         br   14                                                        01-DCCEP
                                            1577+* End of Epilog
                                            1578 * * **** End of Epilogue
                                            1579 *
                                            1580 *   DSECT for automatic variables in "available"
                                            1581 *      (FUNCTION #1943)
                                            1582 *
00000000                00000000 000000A8   1583 @AUTO#available DSECT
00000000                                    1584          DS    XL168
                                            1585 *
00000D68                00000000 00005B58   1586 @CODE    CSECT
                                            1587 *
                                            1588 *
                                            1589 *
                                            1590 * ....... start of peek
00000D68                                    1591 @LNAME1944 DS  0H
00000D68 00000004                           1592          DC    X'00000004'
00000D6C 97858592                           1593          DC    C'peek'
00000D70 00                                 1594          DC    X'00'
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1595 peek     DCCPRLG CINDEX=1944,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1944
                                            1596          macro
                                            1597          dccextrn &m
                                            1598          gblc    &$dccext(1000)
                                            1599          gbla    &$dccexti
                                            1600          lcla    &i
                                            1601 &$dccext(&$dccexti+1) setc    '&m'
                                            1602 &i       seta    1
                                            1603 .loop    aif    (&i gt &$dccexti).around
                                            1604          aif    ('&$dccext(&i)' eq '&m').getout
                                            1605 &i       seta    &i+1
                                            1606          ago     .loop
                                            1607 .around  anop
                                            1608 &$dccexti seta &$dccexti+1
                                            1609          extrn  &m
                                            1610 .getout  anop
                                            1611          mend
00000D78                                    1612+$eye0047    ds    0d                                                    02-DCCCA
00000D78 C4C3C3                             1613+         dc cl3'DCC'                                                    02-DCCCA
00000D7B 01                                 1614+         dc xl1'01' format one                                          02-DCCCA
00000D7C 00000000                           1615+         dc a(0)                                                        02-DCCCA
00000D80 0000000000000DEA                   1616+         dc ad(@PER_1944)                                               02-DCCCA
00000D88 00000000000000C0                   1617+         dc ad(192)                                                     02-DCCCA
00000D90 0000000000000000                   1618+         dc ad(0)                                                       02-DCCCA
00000D98 0000000000001000                   1619+         dc ad(4096)                                                    02-DCCCA
00000DA0 20                                 1620+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000DA1 03                                 1621+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000DA2 03                                 1622+         dc al1(3)                                                      02-DCCCA
00000DA3 08                                 1623+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000DA4 00                                 1624+         dc bl.8'00000000'                                              02-DCCCA
00000DA5 000000                             1625+         dc al3(0)                                                      02-DCCCA
00000DA8 0000000000000D68                   1626+         dc ad(@LNAME1944)                                              02-DCCCA
00000DB0                                    1627+         ds 0d                                                          02-DCCCA
00000DB0 0000000000000D78                   1628+         dc ad($eye0047)                                                02-DCCCA
00000DB8 0000000000000000                   1629+         dc ad(0)                                                       02-DCCCA
00000DC0                                    1630+         ds    0d                                                       01-DCCPR
00000DC0                                    1631+peek     ds    0d                                                       01-DCCPR
00000DC0                                    1632+@REGION_1944_1 ds 0h                                                    01-DCCPR
00000DC0 EBEC D008 0024          00000008   1633+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DC6 E3E0 D088 0004          00000088   1634+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000DCC E3C0 D090 0004          00000090   1635+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DD2 B904 002E                          1636+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DD6 E3B0 C018 0004          00000018   1637+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DDC A7EB 00C0               000000C0   1638+         aghi  14,192              increase by frame size               01-DCCPR
00000DE0 E3E0 C020 0021          00000020   1639+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DE6 4720 B020               00000020   1640+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DEA                                    1641+@PER_1944 ds   0h                                                       01-DCCPR
00000DEA EBDE 2080 0024          00000080   1642+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DF0 E3C0 2090 0024          00000090   1643+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DF6 B904 00D2                          1644+         lgr   13,2                set real frame pointer               01-DCCPR
00000DFA B904 00CF                          1645+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   36 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        00000DC0            1646+         using @REGION_1944_1,12                                        01-DCCPR
00000DFE B904 0021                          1647          LGR   2,1         ; ptr to parm area
                                            1648 * ******* End of Prologue
                                            1649 * *
                                            1650 * ***      if (((s->curvec < s->iovlen))) {
00000E02 E310 2000 0004          00000000   1651          LG    1,0(0,2)    ; s
00000E08 58F0 100C               0000000C   1652          L     15,12(0,1)  ; offset of curvec in source
00000E0C 59F0 1008               00000008   1653          C     15,8(0,1)
00000E10 47B0 C0D0               00000E90   1654          BNL   @L652
                                            1655 * ***         struct iovec *iv = &s->iov[s->curvec];
00000E14 E3F0 100C 0014          0000000C   1656          LGF   15,12(0,1)
00000E1A E330 1000 0004          00000000   1657          LG    3,0(0,1)    ; s
00000E20 EBFF 0004 000D          00000004   1658          SLLG  15,15,4(0)  ; *0x10
00000E26 41FF 3000               00000000   1659          LA    15,0(15,3)
                                            1660 * ***         if ((unsigned)s->curoff < (size_t)iv->iov_len) {
00000E2A E330 1010 0016          00000010   1661          LLGF  3,16(0,1)
00000E30 E330 F008 0021          00000008   1662          CLG   3,8(0,15)
00000E36 47B0 C0D0               00000E90   1663          BNL   @L653
                                            1664 * ***            *len = iv->iov_len - s->curoff;
00000E3A E320 2008 0004          00000008   1665          LG    2,8(0,2)    ; len
00000E40 E330 F008 0004          00000008   1666          LG    3,8(0,15)   ; offset of iov_len in iovec
00000E46 E340 1010 0014          00000010   1667          LGF   4,16(0,1)
00000E4C B90B 0034                          1668          SLGR  3,4
00000E50 E330 2000 0024          00000000   1669          STG   3,0(0,2)    ; len
                                            1670 * ***            return n_bytes_after_addr(iv->iov_base, s->curoff);
00000E56 E3F0 F000 0004          00000000   1671          LG    15,0(0,15)
00000E5C E3F0 D0B0 0024          000000B0   1672          STG   15,176(0,13)
00000E62 E3F0 1010 0014          00000010   1673          LGF   15,16(0,1)
00000E68 E3F0 D0B8 0024          000000B8   1674          STG   15,184(0,13)
00000E6E 4110 D0B0               000000B0   1675          LA    1,176(0,13)
00000E72 E3F0 C0C8 0004          00000E88   1676          LG    15,@lit_1944_29 ; n_bytes_after_addr
00000E78                                    1677 @@gen_label38 DS    0H
00000E78 05EF                               1678          BALR  14,15
00000E7A                                    1679 @@gen_label39 DS    0H
00000E7A 47F0 C0E0               00000EA0   1680          B     @ret_lab_1944
00000E80                                    1681          DS    0D
00000E80 000000C0                           1682 @FRAMESIZE_1944 DC F'192'
00000E84 00000000
00000E88 0000000000000CC8                   1683 @lit_1944_29 DC AD(n_bytes_after_addr)
                                            1684 * ***         }
00000E90                                    1685 @L653    DS    0H
                                            1686 * ***      }
00000E90                                    1687 @L652    DS    0H
                                            1688 * ***      *len = 0;
00000E90 E3F0 2008 0004          00000008   1689          LG    15,8(0,2)   ; len
00000E96 E548 F000 0000          00000000   1690          MVGHI 0(15),0     ; len
                                            1691 * ***      return ((void *)0);
00000E9C A7F9 0000               00000000   1692          LGHI  15,0        ; 0
                                            1693 * ***   }
00000EA0                                    1694 @ret_lab_1944 DS 0H
                                            1695 * * **** Start of Epilogue
                                            1696          DCCEPIL
                                                                                                                           Page   37 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000EA0                                    1697+         ds 0h                                                          01-DCCEP
                                            1698+* Epilog
00000EA0 D707 D088 D088 00000088 00000088   1699+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000EA6 E3D0 D080 0004          00000080   1700+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000EAC E3C0 D090 0004          00000090   1701+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000EB2 E3B0 C018 0004          00000018   1702+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000EB8 E3C0 B010 0021          00000010   1703+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000EBE E3E0 D008 0004          00000008   1704+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000EC4 EB1C D020 0004          00000020   1705+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000ECA 078E                               1706+         bcr 8,14                if same dsab, just return              01-DCCEP
00000ECC E3F0 D010 0024          00000010   1707+         stg 15,16(0,13)         save return code                       01-DCCEP
00000ED2 E300 D018 0024          00000018   1708+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000ED8 E3F0 D090 0004          00000090   1709+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000EDE E3F0 F018 0004          00000018   1710+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000EE4 47F0 F040               00000040   1711+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1712+* End of Epilog
                                            1713 * * **** End of Epilogue
                                            1714          DROP  12
                                            1715 *
                                            1716 *   DSECT for automatic variables in "peek"
                                            1717 *      (FUNCTION #1944)
                                            1718 *
00000000                00000000 000000A8   1719 @AUTO#peek DSECT
00000000                                    1720          DS    XL168
                                            1721 *
00000EE8                00000000 00005B58   1722 @CODE    CSECT
                                            1723 *
                                            1724 *
                                            1725 *
                                            1726 * ....... start of skip
00000EE8                                    1727 @LNAME1945 DS  0H
00000EE8 00000004                           1728          DC    X'00000004'
00000EEC A2928997                           1729          DC    C'skip'
00000EF0 00                                 1730          DC    X'00'
                                            1731 skip     DCCPRLG CINDEX=1945,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1945
                                            1732          macro
                                            1733          dccextrn &m
                                            1734          gblc    &$dccext(1000)
                                            1735          gbla    &$dccexti
                                            1736          lcla    &i
                                            1737 &$dccext(&$dccexti+1) setc    '&m'
                                            1738 &i       seta    1
                                            1739 .loop    aif    (&i gt &$dccexti).around
                                            1740          aif    ('&$dccext(&i)' eq '&m').getout
                                            1741 &i       seta    &i+1
                                            1742          ago     .loop
                                            1743 .around  anop
                                            1744 &$dccexti seta &$dccexti+1
                                            1745          extrn  &m
                                            1746 .getout  anop
                                            1747          mend
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000EF8                                    1748+$eye0050    ds    0d                                                    02-DCCCA
00000EF8 C4C3C3                             1749+         dc cl3'DCC'                                                    02-DCCCA
00000EFB 01                                 1750+         dc xl1'01' format one                                          02-DCCCA
00000EFC 00000000                           1751+         dc a(0)                                                        02-DCCCA
00000F00 0000000000000F6A                   1752+         dc ad(@PER_1945)                                               02-DCCCA
00000F08 00000000000000D0                   1753+         dc ad(208)                                                     02-DCCCA
00000F10 0000000000000000                   1754+         dc ad(0)                                                       02-DCCCA
00000F18 0000000000001000                   1755+         dc ad(4096)                                                    02-DCCCA
00000F20 20                                 1756+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F21 03                                 1757+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F22 03                                 1758+         dc al1(3)                                                      02-DCCCA
00000F23 08                                 1759+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F24 00                                 1760+         dc bl.8'00000000'                                              02-DCCCA
00000F25 000000                             1761+         dc al3(0)                                                      02-DCCCA
00000F28 0000000000000EE8                   1762+         dc ad(@LNAME1945)                                              02-DCCCA
00000F30                                    1763+         ds 0d                                                          02-DCCCA
00000F30 0000000000000EF8                   1764+         dc ad($eye0050)                                                02-DCCCA
00000F38 0000000000000000                   1765+         dc ad(0)                                                       02-DCCCA
00000F40                                    1766+         ds    0d                                                       01-DCCPR
00000F40                                    1767+skip     ds    0d                                                       01-DCCPR
00000F40                                    1768+@REGION_1945_1 ds 0h                                                    01-DCCPR
00000F40 EBEC D008 0024          00000008   1769+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F46 E3E0 D088 0004          00000088   1770+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F4C E3C0 D090 0004          00000090   1771+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F52 B904 002E                          1772+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F56 E3B0 C018 0004          00000018   1773+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F5C A7EB 00D0               000000D0   1774+         aghi  14,208              increase by frame size               01-DCCPR
00000F60 E3E0 C020 0021          00000020   1775+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F66 4720 B020               00000020   1776+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F6A                                    1777+@PER_1945 ds   0h                                                       01-DCCPR
00000F6A EBDE 2080 0024          00000080   1778+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F70 E3C0 2090 0024          00000090   1779+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F76 B904 00D2                          1780+         lgr   13,2                set real frame pointer               01-DCCPR
00000F7A B904 00CF                          1781+         lgr   12,15               set base reg                         01-DCCPR
                        00000F40            1782+         using @REGION_1945_1,12                                        01-DCCPR
                                            1783 * ******* End of Prologue
                                            1784 * *
                                            1785 * ***      struct iovec *iv = &s->iov[s->curvec];
00000F7E E320 1000 0004          00000000   1786          LG    2,0(0,1)    ; s
00000F84 E3F0 200C 0014          0000000C   1787          LGF   15,12(0,2)
00000F8A E330 2000 0004          00000000   1788          LG    3,0(0,2)    ; s
00000F90 EBFF 0004 000D          00000004   1789          SLLG  15,15,4(0)  ; *0x10
00000F96 413F 3000               00000000   1790          LA    3,0(15,3)
                                            1791 * ***      s->curoff += (int) n;
00000F9A 58F0 2010               00000010   1792          L     15,16(0,2)
00000F9E 5AF0 100C               0000000C   1793          A     15,12(0,1)
00000FA2 50F0 2010               00000010   1794          ST    15,16(0,2)
                                            1795 * ***      ((!(!(((unsigned)s->curoff) <= ((size_t)iv->iov_len)))) ? (\
                                            1796 * void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c\
                                            1797 * ", 393, "!(!(((unsigned)s->curoff) <= ((size_t)iv->iov_len)))"));
00000FA6 E3F0 2010 0016          00000010   1798          LLGF  15,16(0,2)
00000FAC E3F0 3008 0021          00000008   1799          CLG   15,8(0,3)
                                                                                                                           Page   39 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000FB2 47D0 C0B2               00000FF2   1800          BNH   @L655
00000FB6                                    1801 @L654    DS    0H
00000FB6 E3F0 C148 0004          00001088   1802          LG    15,@lit_1945_32
00000FBC 41F0 F1AC               000001AC   1803          LA    15,428(0,15)
00000FC0 E3F0 D0B0 0024          000000B0   1804          STG   15,176(0,13)
00000FC6 E3F0 C140 0004          00001080   1805          LG    15,@lit_1945_33
00000FCC 4110 F022               00000022   1806          LA    1,34(0,15)
00000FD0 E310 D0B8 0024          000000B8   1807          STG   1,184(0,13)
00000FD6 E548 D0C0 0189          000000C0   1808          MVGHI 192(13),393
00000FDC 41F0 F046               00000046   1809          LA    15,70(0,15)
00000FE0 E3F0 D0C8 0024          000000C8   1810          STG   15,200(0,13)
00000FE6 4110 D0B0               000000B0   1811          LA    1,176(0,13)
00000FEA E3F0 C138 0004          00001078   1812          LG    15,@lit_1945_34 ; __assert
00000FF0                                    1813 @@gen_label41 DS    0H
00000FF0 05EF                               1814          BALR  14,15
00000FF2                                    1815 @@gen_label42 DS    0H
00000FF2                                    1816 @L655    DS    0H
                                            1817 * ***      if ((unsigned)s->curoff >= (size_t)iv->iov_len &&
00000FF2 E3F0 2010 0016          00000010   1818          LLGF  15,16(0,2)
00000FF8 E3F0 3008 0021          00000008   1819          CLG   15,8(0,3)
00000FFE 4740 C0E4               00001024   1820          BL    @L656
                                            1821 * ***          s->curvec + 1 < s->iovlen) {
00001002 58F0 200C               0000000C   1822          L     15,12(0,2)  ; offset of curvec in source
00001006 A7FA 0001               00000001   1823          AHI   15,1
0000100A 59F0 2008               00000008   1824          C     15,8(0,2)
0000100E 47B0 C0E4               00001024   1825          BNL   @L656
                                            1826 * ***         s->curoff = 0;
00001012 E54C 2010 0000          00000010   1827          MVHI  16(2),0     ; offset of curoff in source
                                            1828 * ***         s->curvec++;
00001018 58F0 200C               0000000C   1829          L     15,12(0,2)
0000101C A7FA 0001               00000001   1830          AHI   15,1
00001020 50F0 200C               0000000C   1831          ST    15,12(0,2)
                                            1832 * ***      }
00001024                                    1833 @L656    DS    0H
                                            1834 * ***   }
00001024                                    1835 @ret_lab_1945 DS 0H
                                            1836 * * **** Start of Epilogue
                                            1837          DCCEPIL
00001024                                    1838+         ds 0h                                                          01-DCCEP
                                            1839+* Epilog
00001024 D707 D088 D088 00000088 00000088   1840+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000102A E3D0 D080 0004          00000080   1841+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001030 E3C0 D090 0004          00000090   1842+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001036 E3B0 C018 0004          00000018   1843+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000103C E3C0 B010 0021          00000010   1844+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001042 E3E0 D008 0004          00000008   1845+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001048 EB1C D020 0004          00000020   1846+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000104E 078E                               1847+         bcr 8,14                if same dsab, just return              01-DCCEP
00001050 E3F0 D010 0024          00000010   1848+         stg 15,16(0,13)         save return code                       01-DCCEP
00001056 E300 D018 0024          00000018   1849+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000105C E3F0 D090 0004          00000090   1850+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001062 E3F0 F018 0004          00000018   1851+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   40 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001068 47F0 F040               00000040   1852+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1853+* End of Epilog
                                            1854 * * **** End of Epilogue
00001070                                    1855          DS    0D
00001070 000000D0                           1856 @FRAMESIZE_1945 DC F'208'
00001074 00000000
00001078 0000000000000000                   1857 @lit_1945_34 DC AD(__assert)
00001080 000000000000600E                   1858 @lit_1945_33 DC AD(@strings@)
00001088 0000000000005B58                   1859 @lit_1945_32 DC AD(@DATA)
                                            1860          DROP  12
                                            1861 *
                                            1862 *   DSECT for automatic variables in "skip"
                                            1863 *      (FUNCTION #1945)
                                            1864 *
00000000                00000000 000000A8   1865 @AUTO#skip DSECT
00000000                                    1866          DS    XL168
                                            1867 *
00001090                00000000 00005B58   1868 @CODE    CSECT
                                            1869 *
                                            1870 *
                                            1871 *
                                            1872 * ....... start of append
00001090                                    1873 @LNAME1946 DS  0H
00001090 00000006                           1874          DC    X'00000006'
00001094 819797859584                       1875          DC    C'append'
0000109A 00                                 1876          DC    X'00'
                                            1877 append   DCCPRLG CINDEX=1946,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1946
                                            1878          macro
                                            1879          dccextrn &m
                                            1880          gblc    &$dccext(1000)
                                            1881          gbla    &$dccexti
                                            1882          lcla    &i
                                            1883 &$dccext(&$dccexti+1) setc    '&m'
                                            1884 &i       seta    1
                                            1885 .loop    aif    (&i gt &$dccexti).around
                                            1886          aif    ('&$dccext(&i)' eq '&m').getout
                                            1887 &i       seta    &i+1
                                            1888          ago     .loop
                                            1889 .around  anop
                                            1890 &$dccexti seta &$dccexti+1
                                            1891          extrn  &m
                                            1892 .getout  anop
                                            1893          mend
000010A0                                    1894+$eye0053    ds    0d                                                    02-DCCCA
000010A0 C4C3C3                             1895+         dc cl3'DCC'                                                    02-DCCCA
000010A3 01                                 1896+         dc xl1'01' format one                                          02-DCCCA
000010A4 00000000                           1897+         dc a(0)                                                        02-DCCCA
000010A8 0000000000001112                   1898+         dc ad(@PER_1946)                                               02-DCCCA
000010B0 00000000000000D0                   1899+         dc ad(208)                                                     02-DCCCA
000010B8 0000000000000000                   1900+         dc ad(0)                                                       02-DCCCA
000010C0 0000000000001000                   1901+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   41 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000010C8 20                                 1902+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000010C9 03                                 1903+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000010CA 03                                 1904+         dc al1(3)                                                      02-DCCCA
000010CB 08                                 1905+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000010CC 00                                 1906+         dc bl.8'00000000'                                              02-DCCCA
000010CD 000000                             1907+         dc al3(0)                                                      02-DCCCA
000010D0 0000000000001090                   1908+         dc ad(@LNAME1946)                                              02-DCCCA
000010D8                                    1909+         ds 0d                                                          02-DCCCA
000010D8 00000000000010A0                   1910+         dc ad($eye0053)                                                02-DCCCA
000010E0 0000000000000000                   1911+         dc ad(0)                                                       02-DCCCA
000010E8                                    1912+         ds    0d                                                       01-DCCPR
000010E8                                    1913+append   ds    0d                                                       01-DCCPR
000010E8                                    1914+@REGION_1946_1 ds 0h                                                    01-DCCPR
000010E8 EBEC D008 0024          00000008   1915+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010EE E3E0 D088 0004          00000088   1916+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010F4 E3C0 D090 0004          00000090   1917+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010FA B904 002E                          1918+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010FE E3B0 C018 0004          00000018   1919+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001104 A7EB 00D0               000000D0   1920+         aghi  14,208              increase by frame size               01-DCCPR
00001108 E3E0 C020 0021          00000020   1921+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000110E 4720 B020               00000020   1922+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001112                                    1923+@PER_1946 ds   0h                                                       01-DCCPR
00001112 EBDE 2080 0024          00000080   1924+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001118 E3C0 2090 0024          00000090   1925+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000111E B904 00D2                          1926+         lgr   13,2                set real frame pointer               01-DCCPR
00001122 B904 00CF                          1927+         lgr   12,15               set base reg                         01-DCCPR
                        000010E8            1928+         using @REGION_1946_1,12                                        01-DCCPR
                                            1929 * ******* End of Prologue
                                            1930 * *
                                            1931 * ***      struct iovec *iov = &s->iov[s->curvec];
00001126 E350 1000 0004          00000000   1932          LG    5,0(0,1)    ; s
0000112C E340 1008 0004          00000008   1933          LG    4,8(0,1)    ; data
00001132 E320 1010 0004          00000010   1934          LG    2,16(0,1)   ; n
00001138 E3F0 500C 0016          0000000C   1935          LLGF  15,12(0,5)
0000113E E310 5000 0004          00000000   1936          LG    1,0(0,5)    ; s
00001144 EBFF 0004 000D          00000004   1937          SLLG  15,15,4(0)  ; *0x10
0000114A 413F 1000               00000000   1938          LA    3,0(15,1)
                                            1939 * ***      char *dst = n_bytes_after_addr(iov->iov_base, s->curoff);
0000114E E3F0 3000 0004          00000000   1940          LG    15,0(0,3)
00001154 E3F0 D0B0 0024          000000B0   1941          STG   15,176(0,13)
0000115A E3F0 5010 0016          00000010   1942          LLGF  15,16(0,5)
00001160 E3F0 D0B8 0024          000000B8   1943          STG   15,184(0,13)
00001166 4110 D0B0               000000B0   1944          LA    1,176(0,13)
0000116A E3F0 C0B8 0004          000011A0   1945          LG    15,@lit_1946_36 ; n_bytes_after_addr
00001170                                    1946 @@gen_label45 DS    0H
00001170 05EF                               1947          BALR  14,15
00001172                                    1948 @@gen_label46 DS    0H
                                            1949 * ***      size_t nlen = ((iov->iov_len - s->curoff) < (n) ? (iov->iov\
                                            1950 * _len - s->curoff) : (n));
00001172 E310 3008 0004          00000008   1951          LG    1,8(0,3)    ; offset of iov_len in iovec
00001178 E310 5010 001B          00000010   1952          SLGF  1,16(0,5)
0000117E B921 0012                          1953          CLGR  1,2
                                                                                                                           Page   42 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001182 47B0 C0E0               000011C8   1954          BNL   @L657
00001186 E310 3008 0004          00000008   1955          LG    1,8(0,3)    ; offset of iov_len in iovec
0000118C E310 5010 001B          00000010   1956          SLGF  1,16(0,5)
00001192 47F0 C0E4               000011CC   1957          B     @L658
00001198                                    1958          DS    0D
00001198 000000D0                           1959 @FRAMESIZE_1946 DC F'208'
0000119C 00000000
000011A0 0000000000000CC8                   1960 @lit_1946_36 DC AD(n_bytes_after_addr)
000011A8 D200 7000 6000 00000000 00000000   1961 @lit_1946_37          MVC 0(1,7),0(6)
000011AE 0000
000011B0 0000000000000000                   1962 @lit_1946_40 DC AD(__assert)
000011B8 000000000000600E                   1963 @lit_1946_39 DC AD(@strings@)
000011C0 0000000000005B58                   1964 @lit_1946_38 DC AD(@DATA)
000011C8                                    1965 @L657    DS    0H
000011C8 B904 0012                          1966          LGR   1,2
000011CC                                    1967 @L658    DS    0H
                                            1968 * ***      if (data != dst)
000011CC B920 004F                          1969          CGR   4,15
000011D0 4780 C126               0000120E   1970          BE    @L659
                                            1971 * ***         __memcpy(dst,data,nlen);
000011D4 B904 0064                          1972          LGR   6,4
000011D8 B904 007F                          1973          LGR   7,15
000011DC B902 00F1                          1974          LTGR  15,1
000011E0 4780 C126               0000120E   1975          BZ    @@gen_label51
000011E4 A7FB FFFF               0000FFFF   1976          AGHI  15,-1
000011E8 EB8F 0008 000A          00000008   1977          SRAG  8,15,8(0)
000011EE B902 0088                          1978          LTGR  8,8
000011F2 4780 C122               0000120A   1979          BZ    @@gen_label50
000011F6                                    1980 @@gen_label49 DS 0H
000011F6 D2FF 7000 6000 00000000 00000000   1981          MVC   0(256,7),0(6)
000011FC 4170 7100               00000100   1982          LA    7,256(0,7)
00001200 4160 6100               00000100   1983          LA    6,256(0,6)
00001204 E380 C10E 0046          000011F6   1984          BCTG  8,@@gen_label49
0000120A                                    1985 @@gen_label50 DS 0H
0000120A 44F0 C0C0               000011A8   1986          EX    15,@lit_1946_37
0000120E                                    1987 @@gen_label51 DS 0H
0000120E                                    1988 @L659    DS    0H
                                            1989 * ***      s->written += (int) n;
0000120E 18F2                               1990          LR    15,2
00001210 5EF0 5014               00000014   1991          AL    15,20(0,5)
00001214 50F0 5014               00000014   1992          ST    15,20(0,5)
                                            1993 * ***      s->curoff += (int) nlen;
00001218 18F1                               1994          LR    15,1
0000121A 5EF0 5010               00000010   1995          AL    15,16(0,5)
0000121E 50F0 5010               00000010   1996          ST    15,16(0,5)
                                            1997 * ***      while ((n -= nlen) > 0) {
00001222 47F0 C1F2               000012DA   1998          B     @L663
00001226                                    1999 @L662    DS    0H
                                            2000 * ***         data += nlen;
00001226 4141 4000               00000000   2001          LA    4,0(1,4)
                                            2002 * ***         s->curvec++;
0000122A 58F0 500C               0000000C   2003          L     15,12(0,5)
                                                                                                                           Page   43 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000122E A7FA 0001               00000001   2004          AHI   15,1
00001232 50F0 500C               0000000C   2005          ST    15,12(0,5)
                                            2006 * ***         ((!(!(((signed)s->curvec) < (s->iovlen)))) ? (void)0 : _\
                                            2007 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 421, "!\
                                            2008 * (!(((signed)s->curvec) < (s->iovlen)))"));
00001236 59F0 5008               00000008   2009          C     15,8(0,5)
0000123A 4740 C192               0000127A   2010          BL    @L665
0000123E                                    2011 @L664    DS    0H
0000123E E3F0 C0D8 0004          000011C0   2012          LG    15,@lit_1946_38
00001244 41F0 F1B2               000001B2   2013          LA    15,434(0,15)
00001248 E3F0 D0B0 0024          000000B0   2014          STG   15,176(0,13)
0000124E E3F0 C0D0 0004          000011B8   2015          LG    15,@lit_1946_39
00001254 4110 F022               00000022   2016          LA    1,34(0,15)
00001258 E310 D0B8 0024          000000B8   2017          STG   1,184(0,13)
0000125E E548 D0C0 01A5          000000C0   2018          MVGHI 192(13),421
00001264 41F0 F07C               0000007C   2019          LA    15,124(0,15)
00001268 E3F0 D0C8 0024          000000C8   2020          STG   15,200(0,13)
0000126E 4110 D0B0               000000B0   2021          LA    1,176(0,13)
00001272 E3F0 C0C8 0004          000011B0   2022          LG    15,@lit_1946_40 ; __assert
00001278                                    2023 @@gen_label53 DS    0H
00001278 05EF                               2024          BALR  14,15
0000127A                                    2025 @@gen_label54 DS    0H
0000127A                                    2026 @L665    DS    0H
                                            2027 * ***         iov++;
0000127A 4130 3010               00000010   2028          LA    3,16(0,3)
                                            2029 * ***         nlen = (((size_t)iov->iov_len) < (n) ? ((size_t)iov->iov\
                                            2030 * _len) : (n));
0000127E E3F0 3008 0004          00000008   2031          LG    15,8(0,3)   ; offset of iov_len in iovec
00001284 B921 00F2                          2032          CLGR  15,2
00001288 47B0 C1AE               00001296   2033          BNL   @L666
0000128C E310 3008 0004          00000008   2034          LG    1,8(0,3)    ; offset of iov_len in iovec
00001292 47F0 C1B2               0000129A   2035          B     @L667
00001296                                    2036 @L666    DS    0H
00001296 B904 0012                          2037          LGR   1,2
0000129A                                    2038 @L667    DS    0H
                                            2039 * ***         __memcpy(iov->iov_base,data,nlen);
0000129A B904 0064                          2040          LGR   6,4
0000129E E370 3000 0004          00000000   2041          LG    7,0(0,3)
000012A4 B902 00F1                          2042          LTGR  15,1
000012A8 4780 C1EE               000012D6   2043          BZ    @@gen_label58
000012AC A7FB FFFF               0000FFFF   2044          AGHI  15,-1
000012B0 EB8F 0008 000A          00000008   2045          SRAG  8,15,8(0)
000012B6 B902 0088                          2046          LTGR  8,8
000012BA 4780 C1EA               000012D2   2047          BZ    @@gen_label57
000012BE                                    2048 @@gen_label56 DS 0H
000012BE D2FF 7000 6000 00000000 00000000   2049          MVC   0(256,7),0(6)
000012C4 4170 7100               00000100   2050          LA    7,256(0,7)
000012C8 4160 6100               00000100   2051          LA    6,256(0,6)
000012CC E380 C1D6 0046          000012BE   2052          BCTG  8,@@gen_label56
000012D2                                    2053 @@gen_label57 DS 0H
000012D2 44F0 C0C0               000011A8   2054          EX    15,@lit_1946_37
000012D6                                    2055 @@gen_label58 DS 0H
                                                                                                                           Page   44 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2056 * ***         s->curoff = (int) nlen;
000012D6 5010 5010               00000010   2057          ST    1,16(0,5)   ; offset of curoff in sink
                                            2058 * ***      }
000012DA                                    2059 @L663    DS    0H
000012DA B90B 0021                          2060          SLGR  2,1
000012DE C22E 0000 0000                     2061          CLGFI 2,X'00000000'
000012E4 4720 C13E               00001226   2062          BH    @L662
                                            2063 * ***   }
000012E8                                    2064 @ret_lab_1946 DS 0H
                                            2065 * * **** Start of Epilogue
                                            2066          DCCEPIL
000012E8                                    2067+         ds 0h                                                          01-DCCEP
                                            2068+* Epilog
000012E8 D707 D088 D088 00000088 00000088   2069+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012EE E3D0 D080 0004          00000080   2070+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012F4 E3C0 D090 0004          00000090   2071+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012FA E3B0 C018 0004          00000018   2072+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001300 E3C0 B010 0021          00000010   2073+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001306 E3E0 D008 0004          00000008   2074+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000130C EB1C D020 0004          00000020   2075+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001312 078E                               2076+         bcr 8,14                if same dsab, just return              01-DCCEP
00001314 E3F0 D010 0024          00000010   2077+         stg 15,16(0,13)         save return code                       01-DCCEP
0000131A E300 D018 0024          00000018   2078+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001320 E3F0 D090 0004          00000090   2079+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001326 E3F0 F018 0004          00000018   2080+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000132C 47F0 F040               00000040   2081+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2082+* End of Epilog
                                            2083 * * **** End of Epilogue
                                            2084          DROP  12
                                            2085 *
                                            2086 *   DSECT for automatic variables in "append"
                                            2087 *      (FUNCTION #1946)
                                            2088 *
00000000                00000000 000000B0   2089 @AUTO#append DSECT
00000000                                    2090          DS    XL168
000000A8                                    2091 append#nlen#0 DS 8XL1      ; nlen
                                            2092 *
00001330                00000000 00005B58   2093 @CODE    CSECT
                                            2094 *
                                            2095 *
                                            2096 *
                                            2097 * ....... start of sink_peek
00001330                                    2098 @LNAME1947 DS  0H
00001330 00000009                           2099          DC    X'00000009'
00001334 A28995926D978585                   2100          DC    C'sink_peek'
0000133D 00                                 2101          DC    X'00'
                                            2102 sink_peek DCCPRLG CINDEX=1947,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1947
                                            2103          macro
                                            2104          dccextrn &m
                                            2105          gblc    &$dccext(1000)
                                            2106          gbla    &$dccexti
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2107          lcla    &i
                                            2108 &$dccext(&$dccexti+1) setc    '&m'
                                            2109 &i       seta    1
                                            2110 .loop    aif    (&i gt &$dccexti).around
                                            2111          aif    ('&$dccext(&i)' eq '&m').getout
                                            2112 &i       seta    &i+1
                                            2113          ago     .loop
                                            2114 .around  anop
                                            2115 &$dccexti seta &$dccexti+1
                                            2116          extrn  &m
                                            2117 .getout  anop
                                            2118          mend
00001340                                    2119+$eye0056    ds    0d                                                    02-DCCCA
00001340 C4C3C3                             2120+         dc cl3'DCC'                                                    02-DCCCA
00001343 01                                 2121+         dc xl1'01' format one                                          02-DCCCA
00001344 00000000                           2122+         dc a(0)                                                        02-DCCCA
00001348 00000000000013B2                   2123+         dc ad(@PER_1947)                                               02-DCCCA
00001350 00000000000000C0                   2124+         dc ad(192)                                                     02-DCCCA
00001358 0000000000000000                   2125+         dc ad(0)                                                       02-DCCCA
00001360 0000000000001000                   2126+         dc ad(4096)                                                    02-DCCCA
00001368 20                                 2127+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001369 03                                 2128+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000136A 03                                 2129+         dc al1(3)                                                      02-DCCCA
0000136B 08                                 2130+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000136C 00                                 2131+         dc bl.8'00000000'                                              02-DCCCA
0000136D 000000                             2132+         dc al3(0)                                                      02-DCCCA
00001370 0000000000001330                   2133+         dc ad(@LNAME1947)                                              02-DCCCA
00001378                                    2134+         ds 0d                                                          02-DCCCA
00001378 0000000000001340                   2135+         dc ad($eye0056)                                                02-DCCCA
00001380 0000000000000000                   2136+         dc ad(0)                                                       02-DCCCA
00001388                                    2137+         ds    0d                                                       01-DCCPR
00001388                                    2138+sink_peek ds   0d                                                       01-DCCPR
00001388                                    2139+@REGION_1947_1 ds 0h                                                    01-DCCPR
00001388 EBEC D008 0024          00000008   2140+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000138E E3E0 D088 0004          00000088   2141+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001394 E3C0 D090 0004          00000090   2142+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000139A B904 002E                          2143+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000139E E3B0 C018 0004          00000018   2144+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000013A4 A7EB 00C0               000000C0   2145+         aghi  14,192              increase by frame size               01-DCCPR
000013A8 E3E0 C020 0021          00000020   2146+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000013AE 4720 B020               00000020   2147+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000013B2                                    2148+@PER_1947 ds   0h                                                       01-DCCPR
000013B2 EBDE 2080 0024          00000080   2149+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000013B8 E3C0 2090 0024          00000090   2150+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000013BE B904 00D2                          2151+         lgr   13,2                set real frame pointer               01-DCCPR
000013C2 B904 00CF                          2152+         lgr   12,15               set base reg                         01-DCCPR
                        00001388            2153+         using @REGION_1947_1,12                                        01-DCCPR
000013C6 B904 0021                          2154          LGR   2,1         ; ptr to parm area
                                            2155 * ******* End of Prologue
                                            2156 * *
                                            2157 * ***      struct iovec *iov = &s->iov[s->curvec];
000013CA E3F0 2000 0004          00000000   2158          LG    15,0(0,2)   ; s
                                                                                                                           Page   46 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000013D0 E310 F00C 0016          0000000C   2159          LLGF  1,12(0,15)
000013D6 E330 F000 0004          00000000   2160          LG    3,0(0,15)   ; s
000013DC EB11 0004 000D          00000004   2161          SLLG  1,1,4(0)    ; *0x10
000013E2 4111 3000               00000000   2162          LA    1,0(1,3)
                                            2163 * ***      if (s->curvec < (size_t)iov->iov_len && iov->iov_len - s->c\
                                            2164 * uroff >= n)
000013E6 E330 F00C 0016          0000000C   2165          LLGF  3,12(0,15)
000013EC E330 1008 0021          00000008   2166          CLG   3,8(0,1)
000013F2 47B0 C0C0               00001448   2167          BNL   @L668
000013F6 E330 1008 0004          00000008   2168          LG    3,8(0,1)    ; offset of iov_len in iovec
000013FC E330 F010 001B          00000010   2169          SLGF  3,16(0,15)
00001402 E330 2008 0021          00000008   2170          CLG   3,8(0,2)
00001408 4740 C0C0               00001448   2171          BL    @L668
                                            2172 * ***         return n_bytes_after_addr(iov->iov_base, s->curoff);
0000140C E310 1000 0004          00000000   2173          LG    1,0(0,1)
00001412 E310 D0B0 0024          000000B0   2174          STG   1,176(0,13)
00001418 E3F0 F010 0016          00000010   2175          LLGF  15,16(0,15)
0000141E E3F0 D0B8 0024          000000B8   2176          STG   15,184(0,13)
00001424 4110 D0B0               000000B0   2177          LA    1,176(0,13)
00001428 E3F0 C0B8 0004          00001440   2178          LG    15,@lit_1947_43 ; n_bytes_after_addr
0000142E                                    2179 @@gen_label62 DS    0H
0000142E 05EF                               2180          BALR  14,15
00001430                                    2181 @@gen_label63 DS    0H
00001430 47F0 C0C4               0000144C   2182          B     @ret_lab_1947
00001438                                    2183          DS    0D
00001438 000000C0                           2184 @FRAMESIZE_1947 DC F'192'
0000143C 00000000
00001440 0000000000000CC8                   2185 @lit_1947_43 DC AD(n_bytes_after_addr)
00001448                                    2186 @L668    DS    0H
                                            2187 * ***      return ((void *)0);
00001448 A7F9 0000               00000000   2188          LGHI  15,0        ; 0
                                            2189 * ***   }
0000144C                                    2190 @ret_lab_1947 DS 0H
                                            2191 * * **** Start of Epilogue
                                            2192          DCCEPIL
0000144C                                    2193+         ds 0h                                                          01-DCCEP
                                            2194+* Epilog
0000144C D707 D088 D088 00000088 00000088   2195+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001452 E3D0 D080 0004          00000080   2196+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001458 E3C0 D090 0004          00000090   2197+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000145E E3B0 C018 0004          00000018   2198+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001464 E3C0 B010 0021          00000010   2199+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000146A E3E0 D008 0004          00000008   2200+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001470 EB1C D020 0004          00000020   2201+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001476 078E                               2202+         bcr 8,14                if same dsab, just return              01-DCCEP
00001478 E3F0 D010 0024          00000010   2203+         stg 15,16(0,13)         save return code                       01-DCCEP
0000147E E300 D018 0024          00000018   2204+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001484 E3F0 D090 0004          00000090   2205+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000148A E3F0 F018 0004          00000018   2206+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001490 47F0 F040               00000040   2207+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2208+* End of Epilog
                                            2209 * * **** End of Epilogue
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2210          DROP  12
                                            2211 *
                                            2212 *   DSECT for automatic variables in "sink_peek"
                                            2213 *      (FUNCTION #1947)
                                            2214 *
00000000                00000000 000000A8   2215 @AUTO#sink_peek DSECT
00000000                                    2216          DS    XL168
                                            2217 *
00001494                00000000 00005B58   2218 @CODE    CSECT
                                            2219 *
                                            2220 *
                                            2221 *
                                            2222 * ....... start of writer_set_expected_length
00001494                                    2223 @LNAME1948 DS  0H
00001494 0000001A                           2224          DC    X'0000001A'
00001498 A69989A385996DA2                   2225          DC    C'writer_set_expected_length'
000014B2 00                                 2226          DC    X'00'
                                            2227 writer_set_expected_length DCCPRLG CINDEX=1948,BASER=0,FRAME=168,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1948
                                            2228          macro
                                            2229          dccextrn &m
                                            2230          gblc    &$dccext(1000)
                                            2231          gbla    &$dccexti
                                            2232          lcla    &i
                                            2233 &$dccext(&$dccexti+1) setc    '&m'
                                            2234 &i       seta    1
                                            2235 .loop    aif    (&i gt &$dccexti).around
                                            2236          aif    ('&$dccext(&i)' eq '&m').getout
                                            2237 &i       seta    &i+1
                                            2238          ago     .loop
                                            2239 .around  anop
                                            2240 &$dccexti seta &$dccexti+1
                                            2241          extrn  &m
                                            2242 .getout  anop
                                            2243          mend
000014B8                                    2244+$eye0059    ds    0d                                                    02-DCCCA
000014B8 C4C3C3                             2245+         dc cl3'DCC'                                                    02-DCCCA
000014BB 01                                 2246+         dc xl1'01' format one                                          02-DCCCA
000014BC 00000000                           2247+         dc a(0)                                                        02-DCCCA
000014C0 0000000000000000                   2248+         dc ad(0)                                                       02-DCCCA
000014C8 00000000000000A8                   2249+         dc ad(168)                                                     02-DCCCA
000014D0 0000000000000000                   2250+         dc ad(0)                                                       02-DCCCA
000014D8 0000000000001000                   2251+         dc ad(4096)                                                    02-DCCCA
000014E0 20                                 2252+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014E1 03                                 2253+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014E2 03                                 2254+         dc al1(3)                                                      02-DCCCA
000014E3 08                                 2255+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014E4 00                                 2256+         dc bl.8'00000000'                                              02-DCCCA
000014E5 000000                             2257+         dc al3(0)                                                      02-DCCCA
000014E8 0000000000001494                   2258+         dc ad(@LNAME1948)                                              02-DCCCA
000014F0                                    2259+         ds 0d                                                          02-DCCCA
000014F0 00000000000014B8                   2260+         dc ad($eye0059)                                                02-DCCCA
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000014F8 0000000000000000                   2261+         dc ad(0)                                                       02-DCCCA
00001500                                    2262+         ds    0d                                                       01-DCCPR
00001500                                    2263+writer_set_expected_length ds 0d                                        01-DCCPR
00001500                                    2264+@REGION_1948_1 ds 0h                                                    01-DCCPR
00001500 EBEC D008 0024          00000008   2265+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2266 * ******* End of Prologue
                                            2267 * *
                                            2268 * ***      w->op_limit = w->op + len;
00001506 E3F0 1000 0004          00000000   2269          LG    15,0(0,1)   ; w
0000150C E320 F008 0004          00000008   2270          LG    2,8(0,15)   ; offset of op in writer
00001512 E310 1008 0004          00000008   2271          LG    1,8(0,1)    ; len
00001518 4111 2000               00000000   2272          LA    1,0(1,2)
0000151C E310 F010 0024          00000010   2273          STG   1,16(0,15)  ; offset of op_limit in writer
                                            2274 * ***   }
00001522                                    2275 @ret_lab_1948 DS 0H
                                            2276 * * **** Start of Epilogue
                                            2277          DCCEPIL
00001522                                    2278+         ds 0h                                                          01-DCCEP
                                            2279+* Epilog
                                            2280+* Epilog
00001522 E3E0 D008 0004          00000008   2281+         lg    14,8(,13) restore the reg                                01-DCCEP
00001528 EB1C D020 0004          00000020   2282+         lmg   1,12,32(13)                                              01-DCCEP
0000152E 07FE                               2283+         br   14                                                        01-DCCEP
                                            2284+* End of Epilog
                                            2285 * * **** End of Epilogue
                                            2286 *
                                            2287 *   DSECT for automatic variables in "writer_set_expected_length"
                                            2288 *      (FUNCTION #1948)
                                            2289 *
00000000                00000000 000000A8   2290 @AUTO#writer_set_expected_length DSECT
00000000                                    2291          DS    XL168
                                            2292 *
00001530                00000000 00005B58   2293 @CODE    CSECT
                                            2294 *
                                            2295 *
                                            2296 *
                                            2297 * ....... start of writer_check_length
00001530                                    2298 @LNAME1949 DS  0H
00001530 00000013                           2299          DC    X'00000013'
00001534 A69989A385996D83                   2300          DC    C'writer_check_length'
00001547 00                                 2301          DC    X'00'
                                            2302 writer_check_length DCCPRLG CINDEX=1949,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1949
                                            2303          macro
                                            2304          dccextrn &m
                                            2305          gblc    &$dccext(1000)
                                            2306          gbla    &$dccexti
                                            2307          lcla    &i
                                            2308 &$dccext(&$dccexti+1) setc    '&m'
                                            2309 &i       seta    1
                                            2310 .loop    aif    (&i gt &$dccexti).around
                                            2311          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2312 &i       seta    &i+1
                                            2313          ago     .loop
                                            2314 .around  anop
                                            2315 &$dccexti seta &$dccexti+1
                                            2316          extrn  &m
                                            2317 .getout  anop
                                            2318          mend
00001548                                    2319+$eye0062    ds    0d                                                    02-DCCCA
00001548 C4C3C3                             2320+         dc cl3'DCC'                                                    02-DCCCA
0000154B 01                                 2321+         dc xl1'01' format one                                          02-DCCCA
0000154C 00000000                           2322+         dc a(0)                                                        02-DCCCA
00001550 0000000000000000                   2323+         dc ad(0)                                                       02-DCCCA
00001558 00000000000000A8                   2324+         dc ad(168)                                                     02-DCCCA
00001560 0000000000000000                   2325+         dc ad(0)                                                       02-DCCCA
00001568 0000000000001000                   2326+         dc ad(4096)                                                    02-DCCCA
00001570 20                                 2327+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001571 03                                 2328+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001572 03                                 2329+         dc al1(3)                                                      02-DCCCA
00001573 08                                 2330+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001574 00                                 2331+         dc bl.8'00000000'                                              02-DCCCA
00001575 000000                             2332+         dc al3(0)                                                      02-DCCCA
00001578 0000000000001530                   2333+         dc ad(@LNAME1949)                                              02-DCCCA
00001580                                    2334+         ds 0d                                                          02-DCCCA
00001580 0000000000001548                   2335+         dc ad($eye0062)                                                02-DCCCA
00001588 0000000000000000                   2336+         dc ad(0)                                                       02-DCCCA
00001590                                    2337+         ds    0d                                                       01-DCCPR
00001590                                    2338+writer_check_length ds 0d                                               01-DCCPR
00001590                                    2339+@REGION_1949_1 ds 0h                                                    01-DCCPR
00001590 EBEC D008 0024          00000008   2340+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001596 B904 00CF                          2341+         lgr   12,15               set base reg                         01-DCCPR
                        00001590            2342+         using @REGION_1949_1,12                                        01-DCCPR
                                            2343 * ******* End of Prologue
                                            2344 * *
                                            2345 * ***      return w->op == w->op_limit;
0000159A E3F0 1000 0004          00000000   2346          LG    15,0(0,1)   ; w
000015A0 E310 F008 0004          00000008   2347          LG    1,8(0,15)   ; offset of op in writer
000015A6 E3F0 F010 0004          00000010   2348          LG    15,16(0,15) ; offset of op_limit in writer
000015AC B920 001F                          2349          CGR   1,15
000015B0 4770 C038               000015C8   2350          BNE   @@gen_label64
000015B4 A7F8 0001               00000001   2351          LHI   15,1
000015B8 47F0 C03C               000015CC   2352          B     @@gen_label65
000015C0                                    2353          DS    0D
000015C0 00000000000000FF                   2354 @lit_1949_46 DC FD'255' 0x00000000000000ff
000015C8                                    2355 @@gen_label64 DS 0H
000015C8 A7F8 0000               00000000   2356          LHI   15,0
000015CC                                    2357 @@gen_label65 DS 0H
000015CC E3F0 C030 0080          000015C0   2358          NG    15,@lit_1949_46
                                            2359 * ***   }
                                            2360 * * **** Start of Epilogue
                                            2361          DCCEPIL
000015D2                                    2362+         ds 0h                                                          01-DCCEP
                                            2363+* Epilog
                                                                                                                           Page   50 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2364+* Epilog
000015D2 E3E0 D008 0004          00000008   2365+         lg    14,8(,13) restore the reg                                01-DCCEP
000015D8 EB1C D020 0004          00000020   2366+         lmg   1,12,32(13)                                              01-DCCEP
000015DE 07FE                               2367+         br   14                                                        01-DCCEP
                                            2368+* End of Epilog
                                            2369 * * **** End of Epilogue
                                            2370          DROP  12
                                            2371 *
                                            2372 *   DSECT for automatic variables in "writer_check_length"
                                            2373 *      (FUNCTION #1949)
                                            2374 *
00000000                00000000 000000A8   2375 @AUTO#writer_check_length DSECT
00000000                                    2376          DS    XL168
                                            2377 *
000015E0                00000000 00005B58   2378 @CODE    CSECT
                                            2379 *
                                            2380 *
                                            2381 *
                                            2382 * ....... start of incremental_copy
000015E0                                    2383 @LNAME1950 DS  0H
000015E0 00000010                           2384          DC    X'00000010'
000015E4 8995839985948595                   2385          DC    C'incremental_copy'
000015F4 00                                 2386          DC    X'00'
                                            2387 incremental_copy DCCPRLG CINDEX=1950,BASER=12,FRAME=200,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1950
                                            2388          macro
                                            2389          dccextrn &m
                                            2390          gblc    &$dccext(1000)
                                            2391          gbla    &$dccexti
                                            2392          lcla    &i
                                            2393 &$dccext(&$dccexti+1) setc    '&m'
                                            2394 &i       seta    1
                                            2395 .loop    aif    (&i gt &$dccexti).around
                                            2396          aif    ('&$dccext(&i)' eq '&m').getout
                                            2397 &i       seta    &i+1
                                            2398          ago     .loop
                                            2399 .around  anop
                                            2400 &$dccexti seta &$dccexti+1
                                            2401          extrn  &m
                                            2402 .getout  anop
                                            2403          mend
000015F8                                    2404+$eye0065    ds    0d                                                    02-DCCCA
000015F8 C4C3C3                             2405+         dc cl3'DCC'                                                    02-DCCCA
000015FB 01                                 2406+         dc xl1'01' format one                                          02-DCCCA
000015FC 00000000                           2407+         dc a(0)                                                        02-DCCCA
00001600 000000000000166A                   2408+         dc ad(@PER_1950)                                               02-DCCCA
00001608 00000000000000C8                   2409+         dc ad(200)                                                     02-DCCCA
00001610 0000000000000000                   2410+         dc ad(0)                                                       02-DCCCA
00001618 0000000000001000                   2411+         dc ad(4096)                                                    02-DCCCA
00001620 20                                 2412+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001621 03                                 2413+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001622 03                                 2414+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001623 08                                 2415+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001624 00                                 2416+         dc bl.8'00000000'                                              02-DCCCA
00001625 000000                             2417+         dc al3(0)                                                      02-DCCCA
00001628 00000000000015E0                   2418+         dc ad(@LNAME1950)                                              02-DCCCA
00001630                                    2419+         ds 0d                                                          02-DCCCA
00001630 00000000000015F8                   2420+         dc ad($eye0065)                                                02-DCCCA
00001638 0000000000000000                   2421+         dc ad(0)                                                       02-DCCCA
00001640                                    2422+         ds    0d                                                       01-DCCPR
00001640                                    2423+incremental_copy ds 0d                                                  01-DCCPR
00001640                                    2424+@REGION_1950_1 ds 0h                                                    01-DCCPR
00001640 EBEC D008 0024          00000008   2425+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001646 E3E0 D088 0004          00000088   2426+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000164C E3C0 D090 0004          00000090   2427+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001652 B904 002E                          2428+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001656 E3B0 C018 0004          00000018   2429+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000165C A7EB 00C8               000000C8   2430+         aghi  14,200              increase by frame size               01-DCCPR
00001660 E3E0 C020 0021          00000020   2431+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001666 4720 B020               00000020   2432+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000166A                                    2433+@PER_1950 ds   0h                                                       01-DCCPR
0000166A EBDE 2080 0024          00000080   2434+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001670 E3C0 2090 0024          00000090   2435+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001676 B904 00D2                          2436+         lgr   13,2                set real frame pointer               01-DCCPR
0000167A B904 00CF                          2437+         lgr   12,15               set base reg                         01-DCCPR
                        00001640            2438+         using @REGION_1950_1,12                                        01-DCCPR
0000167E B904 0031                          2439          LGR   3,1         ; ptr to parm area
                                            2440 * ******* End of Prologue
                                            2441 * *
                                            2442 * ***      ((!(!((len) > (0)))) ? (void)0 : __assert(__func__, "C:\\as\
                                            2443 * gkafka\\librdkafka\\src\\snappy.c", 514, "!(!((len) > (0)))"));
00001682 E320 3010 0004          00000010   2444          LG    2,16(0,3)   ; len
00001688 B902 00F2                          2445          LTGR  15,2
0000168C 4720 C08C               000016CC   2446          BH    @L671
00001690                                    2447 @L669    DS    0H
00001690 E3F0 C120 0004          00001760   2448          LG    15,@lit_1950_47
00001696 41F0 F1BA               000001BA   2449          LA    15,442(0,15)
0000169A E3F0 D0A8 0024          000000A8   2450          STG   15,168(0,13)
000016A0 E3F0 C118 0004          00001758   2451          LG    15,@lit_1950_48
000016A6 4110 F022               00000022   2452          LA    1,34(0,15)
000016AA E310 D0B0 0024          000000B0   2453          STG   1,176(0,13)
000016B0 E548 D0B8 0202          000000B8   2454          MVGHI 184(13),514
000016B6 41F0 F0A4               000000A4   2455          LA    15,164(0,15)
000016BA E3F0 D0C0 0024          000000C0   2456          STG   15,192(0,13)
000016C0 4110 D0A8               000000A8   2457          LA    1,168(0,13)
000016C4 E3F0 C110 0004          00001750   2458          LG    15,@lit_1950_49 ; __assert
000016CA                                    2459 @@gen_label67 DS    0H
000016CA 05EF                               2460          BALR  14,15
000016CC                                    2461 @@gen_label68 DS    0H
000016CC                                    2462 @L670    DS    0H
                                            2463 * ***      do {
000016CC                                    2464 @L671    DS    0H
                                            2465 * ***         *op++ = *src++;
000016CC E3F0 3008 0004          00000008   2466          LG    15,8(0,3)   ; op
                                                                                                                           Page   52 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000016D2 4110 F001               00000001   2467          LA    1,1(0,15)
000016D6 E310 3008 0024          00000008   2468          STG   1,8(0,3)    ; op
000016DC E310 3000 0004          00000000   2469          LG    1,0(0,3)    ; src
000016E2 4140 1001               00000001   2470          LA    4,1(0,1)
000016E6 E340 3000 0024          00000000   2471          STG   4,0(0,3)    ; src
000016EC 4310 1000               00000000   2472          IC    1,0(0,1)
000016F0 4210 F000               00000000   2473          STC   1,0(0,15)
                                            2474 * ***      } while (--len > 0);
000016F4 A72B FFFF               0000FFFF   2475          AGHI  2,-1
000016F8 B902 00F2                          2476          LTGR  15,2
000016FC 4720 C08C               000016CC   2477          BH    @L671
                                            2478 * ***   }
00001700                                    2479 @ret_lab_1950 DS 0H
                                            2480 * * **** Start of Epilogue
                                            2481          DCCEPIL
00001700                                    2482+         ds 0h                                                          01-DCCEP
                                            2483+* Epilog
00001700 D707 D088 D088 00000088 00000088   2484+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001706 E3D0 D080 0004          00000080   2485+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000170C E3C0 D090 0004          00000090   2486+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001712 E3B0 C018 0004          00000018   2487+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001718 E3C0 B010 0021          00000010   2488+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000171E E3E0 D008 0004          00000008   2489+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001724 EB1C D020 0004          00000020   2490+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000172A 078E                               2491+         bcr 8,14                if same dsab, just return              01-DCCEP
0000172C E3F0 D010 0024          00000010   2492+         stg 15,16(0,13)         save return code                       01-DCCEP
00001732 E300 D018 0024          00000018   2493+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001738 E3F0 D090 0004          00000090   2494+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000173E E3F0 F018 0004          00000018   2495+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001744 47F0 F040               00000040   2496+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2497+* End of Epilog
                                            2498 * * **** End of Epilogue
00001748                                    2499          DS    0D
00001748 000000C8                           2500 @FRAMESIZE_1950 DC F'200'
0000174C 00000000
00001750 0000000000000000                   2501 @lit_1950_49 DC AD(__assert)
00001758 000000000000600E                   2502 @lit_1950_48 DC AD(@strings@)
00001760 0000000000005B58                   2503 @lit_1950_47 DC AD(@DATA)
                                            2504          DROP  12
                                            2505 *
                                            2506 *   DSECT for automatic variables in "incremental_copy"
                                            2507 *      (FUNCTION #1950)
                                            2508 *
00000000                00000000 000000A8   2509 @AUTO#incremental_copy DSECT
00000000                                    2510          DS    XL168
                                            2511 *
00001768                00000000 00005B58   2512 @CODE    CSECT
                                            2513 *
                                            2514 *
                                            2515 *
                                            2516 * ....... start of incremental_copy_fast_path
00001768                                    2517 @LNAME1951 DS  0H
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001768 0000001A                           2518          DC    X'0000001A'
0000176C 8995839985948595                   2519          DC    C'incremental_copy_fast_path'
00001786 00                                 2520          DC    X'00'
                                            2521 incremental_copy_fast_path DCCPRLG CINDEX=1951,BASER=12,FRAME=184,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1951
                                            2522          macro
                                            2523          dccextrn &m
                                            2524          gblc    &$dccext(1000)
                                            2525          gbla    &$dccexti
                                            2526          lcla    &i
                                            2527 &$dccext(&$dccexti+1) setc    '&m'
                                            2528 &i       seta    1
                                            2529 .loop    aif    (&i gt &$dccexti).around
                                            2530          aif    ('&$dccext(&i)' eq '&m').getout
                                            2531 &i       seta    &i+1
                                            2532          ago     .loop
                                            2533 .around  anop
                                            2534 &$dccexti seta &$dccexti+1
                                            2535          extrn  &m
                                            2536 .getout  anop
                                            2537          mend
00001788                                    2538+$eye0068    ds    0d                                                    02-DCCCA
00001788 C4C3C3                             2539+         dc cl3'DCC'                                                    02-DCCCA
0000178B 01                                 2540+         dc xl1'01' format one                                          02-DCCCA
0000178C 00000000                           2541+         dc a(0)                                                        02-DCCCA
00001790 00000000000017FA                   2542+         dc ad(@PER_1951)                                               02-DCCCA
00001798 00000000000000B8                   2543+         dc ad(184)                                                     02-DCCCA
000017A0 0000000000000000                   2544+         dc ad(0)                                                       02-DCCCA
000017A8 0000000000001000                   2545+         dc ad(4096)                                                    02-DCCCA
000017B0 20                                 2546+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000017B1 03                                 2547+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000017B2 03                                 2548+         dc al1(3)                                                      02-DCCCA
000017B3 08                                 2549+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000017B4 00                                 2550+         dc bl.8'00000000'                                              02-DCCCA
000017B5 000000                             2551+         dc al3(0)                                                      02-DCCCA
000017B8 0000000000001768                   2552+         dc ad(@LNAME1951)                                              02-DCCCA
000017C0                                    2553+         ds 0d                                                          02-DCCCA
000017C0 0000000000001788                   2554+         dc ad($eye0068)                                                02-DCCCA
000017C8 0000000000000000                   2555+         dc ad(0)                                                       02-DCCCA
000017D0                                    2556+         ds    0d                                                       01-DCCPR
000017D0                                    2557+incremental_copy_fast_path ds 0d                                        01-DCCPR
000017D0                                    2558+@REGION_1951_1 ds 0h                                                    01-DCCPR
000017D0 EBEC D008 0024          00000008   2559+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000017D6 E3E0 D088 0004          00000088   2560+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000017DC E3C0 D090 0004          00000090   2561+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000017E2 B904 002E                          2562+         lgr   2,14                copy addr of our savearea            01-DCCPR
000017E6 E3B0 C018 0004          00000018   2563+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000017EC A7EB 00B8               000000B8   2564+         aghi  14,184              increase by frame size               01-DCCPR
000017F0 E3E0 C020 0021          00000020   2565+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000017F6 4720 B020               00000020   2566+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000017FA                                    2567+@PER_1951 ds   0h                                                       01-DCCPR
000017FA EBDE 2080 0024          00000080   2568+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001800 E3C0 2090 0024          00000090   2569+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001806 B904 00D2                          2570+         lgr   13,2                set real frame pointer               01-DCCPR
0000180A B904 00CF                          2571+         lgr   12,15               set base reg                         01-DCCPR
                        000017D0            2572+         using @REGION_1951_1,12                                        01-DCCPR
                                            2573 * ******* End of Prologue
                                            2574 * *
                                            2575 * ***      while (op - src < 8) {
0000180E E330 1000 0004          00000000   2576          LG    3,0(0,1)    ; src
00001814 E320 1008 0004          00000008   2577          LG    2,8(0,1)    ; op
0000181A E340 1010 0004          00000010   2578          LG    4,16(0,1)   ; len
00001820 47F0 C098               00001868   2579          B     @L677
00001828                                    2580          DS    0D
00001828 000000B8                           2581 @FRAMESIZE_1951 DC F'184'
0000182C 00000000
00001830 0000000000000658                   2582 @lit_1951_51 DC AD(unaligned_copy64)
00001838                                    2583 @L676    DS    0H
                                            2584 * ***         unaligned_copy64(src, op);
00001838 E330 D0A8 0024          000000A8   2585          STG   3,168(0,13)
0000183E E320 D0B0 0024          000000B0   2586          STG   2,176(0,13)
00001844 4110 D0A8               000000A8   2587          LA    1,168(0,13)
00001848 E3F0 C060 0004          00001830   2588          LG    15,@lit_1951_51 ; unaligned_copy64
0000184E                                    2589 @@gen_label70 DS    0H
0000184E 05EF                               2590          BALR  14,15
00001850                                    2591 @@gen_label71 DS    0H
                                            2592 * ***         len -= op - src;
00001850 B904 00F2                          2593          LGR   15,2
00001854 B909 00F3                          2594          SGR   15,3
00001858 B909 004F                          2595          SGR   4,15
                                            2596 * ***         op += op - src;
0000185C B904 00F2                          2597          LGR   15,2
00001860 B909 00F3                          2598          SGR   15,3
00001864 412F 2000               00000000   2599          LA    2,0(15,2)
                                            2600 * ***      }
00001868                                    2601 @L677    DS    0H
00001868 B904 00F2                          2602          LGR   15,2
0000186C B909 00F3                          2603          SGR   15,3
00001870 A7FF 0008               00000008   2604          CGHI  15,8
00001874 4740 C068               00001838   2605          BL    @L676
                                            2606 * ***      while (len > 0) {
00001878 47F0 C0D0               000018A0   2607          B     @L681
0000187C                                    2608 @L680    DS    0H
                                            2609 * ***         unaligned_copy64(src, op);
0000187C E330 D0A8 0024          000000A8   2610          STG   3,168(0,13)
00001882 E320 D0B0 0024          000000B0   2611          STG   2,176(0,13)
00001888 4110 D0A8               000000A8   2612          LA    1,168(0,13)
0000188C E3F0 C060 0004          00001830   2613          LG    15,@lit_1951_51 ; unaligned_copy64
00001892                                    2614 @@gen_label73 DS    0H
00001892 05EF                               2615          BALR  14,15
00001894                                    2616 @@gen_label74 DS    0H
                                            2617 * ***         src += 8;
00001894 4130 3008               00000008   2618          LA    3,8(0,3)
                                            2619 * ***         op += 8;
                                                                                                                           Page   55 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001898 4120 2008               00000008   2620          LA    2,8(0,2)
                                            2621 * ***         len -= 8;
0000189C A74B FFF8               0000FFF8   2622          AGHI  4,-8
                                            2623 * ***      }
000018A0                                    2624 @L681    DS    0H
000018A0 B902 00F4                          2625          LTGR  15,4
000018A4 4720 C0AC               0000187C   2626          BH    @L680
                                            2627 * ***   }
000018A8                                    2628 @ret_lab_1951 DS 0H
                                            2629 * * **** Start of Epilogue
                                            2630          DCCEPIL
000018A8                                    2631+         ds 0h                                                          01-DCCEP
                                            2632+* Epilog
000018A8 D707 D088 D088 00000088 00000088   2633+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000018AE E3D0 D080 0004          00000080   2634+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000018B4 E3C0 D090 0004          00000090   2635+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000018BA E3B0 C018 0004          00000018   2636+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000018C0 E3C0 B010 0021          00000010   2637+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000018C6 E3E0 D008 0004          00000008   2638+         lg  14,8(0,13)          load up return address                 01-DCCEP
000018CC EB1C D020 0004          00000020   2639+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000018D2 078E                               2640+         bcr 8,14                if same dsab, just return              01-DCCEP
000018D4 E3F0 D010 0024          00000010   2641+         stg 15,16(0,13)         save return code                       01-DCCEP
000018DA E300 D018 0024          00000018   2642+         stg 0,24(0,13)          save more return code                  01-DCCEP
000018E0 E3F0 D090 0004          00000090   2643+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000018E6 E3F0 F018 0004          00000018   2644+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000018EC 47F0 F040               00000040   2645+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2646+* End of Epilog
                                            2647 * * **** End of Epilogue
                                            2648          DROP  12
                                            2649 *
                                            2650 *   DSECT for automatic variables in "incremental_copy_fast_path"
                                            2651 *      (FUNCTION #1951)
                                            2652 *
00000000                00000000 000000A8   2653 @AUTO#incremental_copy_fast_path DSECT
00000000                                    2654          DS    XL168
                                            2655 *
000018F0                00000000 00005B58   2656 @CODE    CSECT
                                            2657 *
                                            2658 *
                                            2659 *
                                            2660 * ....... start of writer_append_from_self
000018F0                                    2661 @LNAME1952 DS  0H
000018F0 00000017                           2662          DC    X'00000017'
000018F4 A69989A385996D81                   2663          DC    C'writer_append_from_self'
0000190B 00                                 2664          DC    X'00'
                                            2665 writer_append_from_self DCCPRLG CINDEX=1952,BASER=12,FRAME=208,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1952
                                            2666          macro
                                            2667          dccextrn &m
                                            2668          gblc    &$dccext(1000)
                                            2669          gbla    &$dccexti
                                            2670          lcla    &i
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2671 &$dccext(&$dccexti+1) setc    '&m'
                                            2672 &i       seta    1
                                            2673 .loop    aif    (&i gt &$dccexti).around
                                            2674          aif    ('&$dccext(&i)' eq '&m').getout
                                            2675 &i       seta    &i+1
                                            2676          ago     .loop
                                            2677 .around  anop
                                            2678 &$dccexti seta &$dccexti+1
                                            2679          extrn  &m
                                            2680 .getout  anop
                                            2681          mend
00001910                                    2682+$eye0071    ds    0d                                                    02-DCCCA
00001910 C4C3C3                             2683+         dc cl3'DCC'                                                    02-DCCCA
00001913 01                                 2684+         dc xl1'01' format one                                          02-DCCCA
00001914 00000000                           2685+         dc a(0)                                                        02-DCCCA
00001918 0000000000001982                   2686+         dc ad(@PER_1952)                                               02-DCCCA
00001920 00000000000000D0                   2687+         dc ad(208)                                                     02-DCCCA
00001928 0000000000000000                   2688+         dc ad(0)                                                       02-DCCCA
00001930 0000000000001000                   2689+         dc ad(4096)                                                    02-DCCCA
00001938 20                                 2690+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001939 03                                 2691+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000193A 03                                 2692+         dc al1(3)                                                      02-DCCCA
0000193B 08                                 2693+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000193C 00                                 2694+         dc bl.8'00000000'                                              02-DCCCA
0000193D 000000                             2695+         dc al3(0)                                                      02-DCCCA
00001940 00000000000018F0                   2696+         dc ad(@LNAME1952)                                              02-DCCCA
00001948                                    2697+         ds 0d                                                          02-DCCCA
00001948 0000000000001910                   2698+         dc ad($eye0071)                                                02-DCCCA
00001950 0000000000000000                   2699+         dc ad(0)                                                       02-DCCCA
00001958                                    2700+         ds    0d                                                       01-DCCPR
00001958                                    2701+writer_append_from_self ds 0d                                           01-DCCPR
00001958                                    2702+@REGION_1952_1 ds 0h                                                    01-DCCPR
00001958 EBEC D008 0024          00000008   2703+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000195E E3E0 D088 0004          00000088   2704+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001964 E3C0 D090 0004          00000090   2705+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000196A B904 002E                          2706+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000196E E3B0 C018 0004          00000018   2707+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001974 A7EB 00D0               000000D0   2708+         aghi  14,208              increase by frame size               01-DCCPR
00001978 E3E0 C020 0021          00000020   2709+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000197E 4720 B020               00000020   2710+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001982                                    2711+@PER_1952 ds   0h                                                       01-DCCPR
00001982 EBDE 2080 0024          00000080   2712+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001988 E3C0 2090 0024          00000090   2713+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000198E B904 00D2                          2714+         lgr   13,2                set real frame pointer               01-DCCPR
00001992 B904 00CF                          2715+         lgr   12,15               set base reg                         01-DCCPR
                        00001958            2716+         using @REGION_1952_1,12                                        01-DCCPR
                                            2717 * ******* End of Prologue
                                            2718 * *
                                            2719 * ***      char *const op = w->op;
00001996 E320 1000 0004          00000000   2720          LG    2,0(0,1)    ; w
0000199C 5830 100C               0000000C   2721          L     3,12(0,1)   ; offset
000019A0 5840 1014               00000014   2722          L     4,20(0,1)   ; len
                                                                                                                           Page   57 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000019A4 E350 2008 0004          00000008   2723          LG    5,8(0,2)    ; offset of op in writer
                                            2724 * ***      ((!(!((op) <= (w->op_limit)))) ? (void)0 : __assert(__func_\
                                            2725 * _, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 575, "!(!((op) <= (w->\
                                            2726 * op_limit)))"));
000019AA E3F0 2010 0004          00000010   2727          LG    15,16(0,2)  ; offset of op_limit in writer
000019B0 B920 005F                          2728          CGR   5,15
000019B4 47D0 C09C               000019F4   2729          BNH   @L683
000019B8                                    2730 @L682    DS    0H
000019B8 E3F0 C0E0 0004          00001A38   2731          LG    15,@lit_1952_54
000019BE 41F0 F1CC               000001CC   2732          LA    15,460(0,15)
000019C2 E3F0 D0B0 0024          000000B0   2733          STG   15,176(0,13)
000019C8 E3F0 C0D8 0004          00001A30   2734          LG    15,@lit_1952_55
000019CE 4110 F022               00000022   2735          LA    1,34(0,15)
000019D2 E310 D0B8 0024          000000B8   2736          STG   1,184(0,13)
000019D8 E548 D0C0 023F          000000C0   2737          MVGHI 192(13),575
000019DE 41F0 F0B6               000000B6   2738          LA    15,182(0,15)
000019E2 E3F0 D0C8 0024          000000C8   2739          STG   15,200(0,13)
000019E8 4110 D0B0               000000B0   2740          LA    1,176(0,13)
000019EC E3F0 C0D0 0004          00001A28   2741          LG    15,@lit_1952_56 ; __assert
000019F2                                    2742 @@gen_label77 DS    0H
000019F2 05EF                               2743          BALR  14,15
000019F4                                    2744 @@gen_label78 DS    0H
000019F4                                    2745 @L683    DS    0H
                                            2746 * ***      const u32 space_left = (u32) (w->op_limit - op);
000019F4 E3F0 2010 0004          00000010   2747          LG    15,16(0,2)  ; offset of op_limit in writer
000019FA B909 00F5                          2748          SGR   15,5
                                            2749 * ***
                                            2750 * ***      if ((unsigned)(op - w->base) <= offset - 1u)
000019FE B904 0015                          2751          LGR   1,5
00001A02 E310 2000 0009          00000000   2752          SG    1,0(0,2)
00001A08 1863                               2753          LR    6,3
00001A0A A76A FFFF               0000FFFF   2754          AHI   6,-1
00001A0E 1516                               2755          CLR   1,6
00001A10 4720 C100               00001A58   2756          BH    @L684
                                            2757 * ***         return 0;
00001A14 A7F9 0000               00000000   2758          LGHI  15,0        ; 0
00001A18 47F0 C200               00001B58   2759          B     @ret_lab_1952
00001A20                                    2760          DS    0D
00001A20 000000D0                           2761 @FRAMESIZE_1952 DC F'208'
00001A24 00000000
00001A28 0000000000000000                   2762 @lit_1952_56 DC AD(__assert)
00001A30 000000000000600E                   2763 @lit_1952_55 DC AD(@strings@)
00001A38 0000000000005B58                   2764 @lit_1952_54 DC AD(@DATA)
00001A40 0000000000000658                   2765 @lit_1952_58 DC AD(unaligned_copy64)
00001A48 00000000000017D0                   2766 @lit_1952_60 DC AD(incremental_copy_fast_path)
00001A50 0000000000001640                   2767 @lit_1952_62 DC AD(incremental_copy)
00001A58                                    2768 @L684    DS    0H
                                            2769 * ***      if (len <= 16 && offset >= 8 && space_left >= 16) {
00001A58 C24F 0000 0010                     2770          CLFI  4,X'00000010'
00001A5E 4720 C174               00001ACC   2771          BH    @L685
00001A62 C23F 0000 0008                     2772          CLFI  3,X'00000008'
00001A68 4740 C174               00001ACC   2773          BL    @L685
                                                                                                                           Page   58 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001A6C C2FF 0000 0010                     2774          CLFI  15,X'00000010'
00001A72 4740 C174               00001ACC   2775          BL    @L685
                                            2776 * ***
                                            2777 * ***
                                            2778 * ***         unaligned_copy64(op - offset, op);
00001A76 B916 00F3                          2779          LLGFR 15,3
00001A7A B904 0015                          2780          LGR   1,5
00001A7E B909 001F                          2781          SGR   1,15
00001A82 E310 D0B0 0024          000000B0   2782          STG   1,176(0,13)
00001A88 E350 D0B8 0024          000000B8   2783          STG   5,184(0,13)
00001A8E 4110 D0B0               000000B0   2784          LA    1,176(0,13)
00001A92 E360 C0E8 0004          00001A40   2785          LG    6,@lit_1952_58 ; unaligned_copy64
00001A98 B904 00F6                          2786          LGR   15,6
00001A9C                                    2787 @@gen_label83 DS    0H
00001A9C 05EF                               2788          BALR  14,15
00001A9E                                    2789 @@gen_label84 DS    0H
                                            2790 * ***         unaligned_copy64(op - offset + 8, op + 8);
00001A9E B916 00F3                          2791          LLGFR 15,3
00001AA2 B904 0015                          2792          LGR   1,5
00001AA6 B909 001F                          2793          SGR   1,15
00001AAA 41F0 1008               00000008   2794          LA    15,8(0,1)
00001AAE E3F0 D0B0 0024          000000B0   2795          STG   15,176(0,13)
00001AB4 41F0 5008               00000008   2796          LA    15,8(0,5)
00001AB8 E3F0 D0B8 0024          000000B8   2797          STG   15,184(0,13)
00001ABE 4110 D0B0               000000B0   2798          LA    1,176(0,13)
00001AC2 B904 00F6                          2799          LGR   15,6
00001AC6                                    2800 @@gen_label85 DS    0H
00001AC6 05EF                               2801          BALR  14,15
00001AC8                                    2802 @@gen_label86 DS    0H
                                            2803 * ***      } else {
00001AC8 47F0 C1EE               00001B46   2804          B     @L686
00001ACC                                    2805 @L685    DS    0H
                                            2806 * ***         if (space_left >= len + 10) {
00001ACC 1814                               2807          LR    1,4
00001ACE A71A 000A               0000000A   2808          AHI   1,10
00001AD2 15F1                               2809          CLR   15,1
00001AD4 4740 C1B2               00001B0A   2810          BL    @L687
                                            2811 * ***            incremental_copy_fast_path(op - offset, op, len);
00001AD8 B916 00F3                          2812          LLGFR 15,3
00001ADC B904 0015                          2813          LGR   1,5
00001AE0 B909 001F                          2814          SGR   1,15
00001AE4 E310 D0B0 0024          000000B0   2815          STG   1,176(0,13)
00001AEA E350 D0B8 0024          000000B8   2816          STG   5,184(0,13)
00001AF0 B916 00F4                          2817          LLGFR 15,4
00001AF4 E3F0 D0C0 0024          000000C0   2818          STG   15,192(0,13)
00001AFA 4110 D0B0               000000B0   2819          LA    1,176(0,13)
00001AFE E3F0 C0F0 0004          00001A48   2820          LG    15,@lit_1952_60 ; incremental_copy_fast_path
00001B04                                    2821 @@gen_label88 DS    0H
00001B04 05EF                               2822          BALR  14,15
00001B06                                    2823 @@gen_label89 DS    0H
                                            2824 * ***         } else {
00001B06 47F0 C1EE               00001B46   2825          B     @L686
                                                                                                                           Page   59 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B0A                                    2826 @L687    DS    0H
                                            2827 * ***            if (space_left < len) {
00001B0A 15F4                               2828          CLR   15,4
00001B0C 47B0 C1C0               00001B18   2829          BNL   @L689
                                            2830 * ***               return 0;
00001B10 A7F9 0000               00000000   2831          LGHI  15,0        ; 0
00001B14 47F0 C200               00001B58   2832          B     @ret_lab_1952
                                            2833 * ***            }
00001B18                                    2834 @L689    DS    0H
                                            2835 * ***            incremental_copy(op - offset, op, len);
00001B18 B916 00F3                          2836          LLGFR 15,3
00001B1C B904 0015                          2837          LGR   1,5
00001B20 B909 001F                          2838          SGR   1,15
00001B24 E310 D0B0 0024          000000B0   2839          STG   1,176(0,13)
00001B2A E350 D0B8 0024          000000B8   2840          STG   5,184(0,13)
00001B30 B916 00F4                          2841          LLGFR 15,4
00001B34 E3F0 D0C0 0024          000000C0   2842          STG   15,192(0,13)
00001B3A 4110 D0B0               000000B0   2843          LA    1,176(0,13)
00001B3E E3F0 C0F8 0004          00001A50   2844          LG    15,@lit_1952_62 ; incremental_copy
00001B44                                    2845 @@gen_label91 DS    0H
00001B44 05EF                               2846          BALR  14,15
00001B46                                    2847 @@gen_label92 DS    0H
                                            2848 * ***         }
00001B46                                    2849 @L688    DS    0H
                                            2850 * ***      }
00001B46                                    2851 @L686    DS    0H
                                            2852 * ***
                                            2853 * ***      w->op = op + len;
00001B46 B916 00F4                          2854          LLGFR 15,4
00001B4A 41FF 5000               00000000   2855          LA    15,0(15,5)
00001B4E E3F0 2008 0024          00000008   2856          STG   15,8(0,2)   ; offset of op in writer
                                            2857 * ***      return 1;
00001B54 A7F9 0001               00000001   2858          LGHI  15,1        ; 1
                                            2859 * ***   }
00001B58                                    2860 @ret_lab_1952 DS 0H
                                            2861 * * **** Start of Epilogue
                                            2862          DCCEPIL
00001B58                                    2863+         ds 0h                                                          01-DCCEP
                                            2864+* Epilog
00001B58 D707 D088 D088 00000088 00000088   2865+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B5E E3D0 D080 0004          00000080   2866+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B64 E3C0 D090 0004          00000090   2867+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B6A E3B0 C018 0004          00000018   2868+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B70 E3C0 B010 0021          00000010   2869+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B76 E3E0 D008 0004          00000008   2870+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B7C EB1C D020 0004          00000020   2871+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B82 078E                               2872+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B84 E3F0 D010 0024          00000010   2873+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B8A E300 D018 0024          00000018   2874+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B90 E3F0 D090 0004          00000090   2875+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B96 E3F0 F018 0004          00000018   2876+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B9C 47F0 F040               00000040   2877+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   60 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2878+* End of Epilog
                                            2879 * * **** End of Epilogue
                                            2880          DROP  12
                                            2881 *
                                            2882 *   DSECT for automatic variables in "writer_append_from_self"
                                            2883 *      (FUNCTION #1952)
                                            2884 *
00000000                00000000 000000AC   2885 @AUTO#writer_append_from_self DSECT
00000000                                    2886          DS    XL168
000000A8                                    2887 writer_append_from_self#space_left#0 DS 1F ; space_left
                                            2888 *
00001BA0                00000000 00005B58   2889 @CODE    CSECT
                                            2890 *
                                            2891 *
                                            2892 *
                                            2893 * ....... start of writer_append
00001BA0                                    2894 @LNAME1953 DS  0H
00001BA0 0000000D                           2895          DC    X'0000000D'
00001BA4 A69989A385996D81                   2896          DC    C'writer_append'
00001BB1 00                                 2897          DC    X'00'
                                            2898 writer_append DCCPRLG CINDEX=1953,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME1953
                                            2899          macro
                                            2900          dccextrn &m
                                            2901          gblc    &$dccext(1000)
                                            2902          gbla    &$dccexti
                                            2903          lcla    &i
                                            2904 &$dccext(&$dccexti+1) setc    '&m'
                                            2905 &i       seta    1
                                            2906 .loop    aif    (&i gt &$dccexti).around
                                            2907          aif    ('&$dccext(&i)' eq '&m').getout
                                            2908 &i       seta    &i+1
                                            2909          ago     .loop
                                            2910 .around  anop
                                            2911 &$dccexti seta &$dccexti+1
                                            2912          extrn  &m
                                            2913 .getout  anop
                                            2914          mend
00001BB8                                    2915+$eye0074    ds    0d                                                    02-DCCCA
00001BB8 C4C3C3                             2916+         dc cl3'DCC'                                                    02-DCCCA
00001BBB 01                                 2917+         dc xl1'01' format one                                          02-DCCCA
00001BBC 00000000                           2918+         dc a(0)                                                        02-DCCCA
00001BC0 0000000000001C2A                   2919+         dc ad(@PER_1953)                                               02-DCCCA
00001BC8 00000000000000D0                   2920+         dc ad(208)                                                     02-DCCCA
00001BD0 0000000000000000                   2921+         dc ad(0)                                                       02-DCCCA
00001BD8 0000000000001000                   2922+         dc ad(4096)                                                    02-DCCCA
00001BE0 20                                 2923+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001BE1 03                                 2924+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001BE2 03                                 2925+         dc al1(3)                                                      02-DCCCA
00001BE3 08                                 2926+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001BE4 00                                 2927+         dc bl.8'00000000'                                              02-DCCCA
00001BE5 000000                             2928+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001BE8 0000000000001BA0                   2929+         dc ad(@LNAME1953)                                              02-DCCCA
00001BF0                                    2930+         ds 0d                                                          02-DCCCA
00001BF0 0000000000001BB8                   2931+         dc ad($eye0074)                                                02-DCCCA
00001BF8 0000000000000000                   2932+         dc ad(0)                                                       02-DCCCA
00001C00                                    2933+         ds    0d                                                       01-DCCPR
00001C00                                    2934+writer_append ds 0d                                                     01-DCCPR
00001C00                                    2935+@REGION_1953_1 ds 0h                                                    01-DCCPR
00001C00 EBEC D008 0024          00000008   2936+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C06 E3E0 D088 0004          00000088   2937+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001C0C E3C0 D090 0004          00000090   2938+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001C12 B904 002E                          2939+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001C16 E3B0 C018 0004          00000018   2940+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001C1C A7EB 00D0               000000D0   2941+         aghi  14,208              increase by frame size               01-DCCPR
00001C20 E3E0 C020 0021          00000020   2942+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001C26 4720 B020               00000020   2943+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001C2A                                    2944+@PER_1953 ds   0h                                                       01-DCCPR
00001C2A EBDE 2080 0024          00000080   2945+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001C30 E3C0 2090 0024          00000090   2946+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001C36 B904 00D2                          2947+         lgr   13,2                set real frame pointer               01-DCCPR
00001C3A B904 00CF                          2948+         lgr   12,15               set base reg                         01-DCCPR
                        00001C00            2949+         using @REGION_1953_1,12                                        01-DCCPR
00001C3E B904 0051                          2950          LGR   5,1         ; ptr to parm area
                                            2951 * ******* End of Prologue
                                            2952 * *
                                            2953 * ***      char *const op = w->op;
00001C42 E320 5000 0004          00000000   2954          LG    2,0(0,5)    ; w
00001C48 5830 5014               00000014   2955          L     3,20(0,5)   ; len
00001C4C E340 2008 0004          00000008   2956          LG    4,8(0,2)    ; offset of op in writer
                                            2957 * ***      ((!(!((op) <= (w->op_limit)))) ? (void)0 : __assert(__func_\
                                            2958 * _, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 603, "!(!((op) <= (w->\
                                            2959 * op_limit)))"));
00001C52 E3F0 2010 0004          00000010   2960          LG    15,16(0,2)  ; offset of op_limit in writer
00001C58 B920 004F                          2961          CGR   4,15
00001C5C 47D0 C09C               00001C9C   2962          BNH   @L691
00001C60                                    2963 @L690    DS    0H
00001C60 E3F0 C0D0 0004          00001CD0   2964          LG    15,@lit_1953_65
00001C66 41F0 F1E4               000001E4   2965          LA    15,484(0,15)
00001C6A E3F0 D0B0 0024          000000B0   2966          STG   15,176(0,13)
00001C70 E3F0 C0C8 0004          00001CC8   2967          LG    15,@lit_1953_66
00001C76 4110 F022               00000022   2968          LA    1,34(0,15)
00001C7A E310 D0B8 0024          000000B8   2969          STG   1,184(0,13)
00001C80 E548 D0C0 025B          000000C0   2970          MVGHI 192(13),603
00001C86 41F0 F0B6               000000B6   2971          LA    15,182(0,15)
00001C8A E3F0 D0C8 0024          000000C8   2972          STG   15,200(0,13)
00001C90 4110 D0B0               000000B0   2973          LA    1,176(0,13)
00001C94 E3F0 C0C0 0004          00001CC0   2974          LG    15,@lit_1953_67 ; __assert
00001C9A                                    2975 @@gen_label94 DS    0H
00001C9A 05EF                               2976          BALR  14,15
00001C9C                                    2977 @@gen_label95 DS    0H
00001C9C                                    2978 @L691    DS    0H
                                            2979 * ***      const u32 space_left = (u32) (w->op_limit - op);
00001C9C E3F0 2010 0004          00000010   2980          LG    15,16(0,2)  ; offset of op_limit in writer
                                                                                                                           Page   62 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001CA2 B909 00F4                          2981          SGR   15,4
                                            2982 * ***      if (space_left < len)
00001CA6 15F3                               2983          CLR   15,3
00001CA8 47B0 C0DE               00001CDE   2984          BNL   @L692
                                            2985 * ***         return 0;
00001CAC A7F9 0000               00000000   2986          LGHI  15,0        ; 0
00001CB0 47F0 C130               00001D30   2987          B     @ret_lab_1953
00001CB8                                    2988          DS    0D
00001CB8 000000D0                           2989 @FRAMESIZE_1953 DC F'208'
00001CBC 00000000
00001CC0 0000000000000000                   2990 @lit_1953_67 DC AD(__assert)
00001CC8 000000000000600E                   2991 @lit_1953_66 DC AD(@strings@)
00001CD0 0000000000005B58                   2992 @lit_1953_65 DC AD(@DATA)
00001CD8 D200 5000 1000 00000000 00000000   2993 @lit_1953_69          MVC 0(1,5),0(1)
00001CDE                                    2994 @L692    DS    0H
                                            2995 * ***      __memcpy(op,ip,len);
00001CDE B916 00F3                          2996          LLGFR 15,3
00001CE2 E310 5008 0004          00000008   2997          LG    1,8(0,5)
00001CE8 B904 0054                          2998          LGR   5,4
00001CEC B902 00FF                          2999          LTGR  15,15
00001CF0 4780 C11E               00001D1E   3000          BZ    @@gen_label99
00001CF4 A7FB FFFF               0000FFFF   3001          AGHI  15,-1
00001CF8 EB6F 0008 000A          00000008   3002          SRAG  6,15,8(0)
00001CFE B902 0066                          3003          LTGR  6,6
00001D02 4780 C11A               00001D1A   3004          BZ    @@gen_label98
00001D06                                    3005 @@gen_label97 DS 0H
00001D06 D2FF 5000 1000 00000000 00000000   3006          MVC   0(256,5),0(1)
00001D0C 4150 5100               00000100   3007          LA    5,256(0,5)
00001D10 4110 1100               00000100   3008          LA    1,256(0,1)
00001D14 E360 C106 0046          00001D06   3009          BCTG  6,@@gen_label97
00001D1A                                    3010 @@gen_label98 DS 0H
00001D1A 44F0 C0D8               00001CD8   3011          EX    15,@lit_1953_69
00001D1E                                    3012 @@gen_label99 DS 0H
                                            3013 * ***      w->op = op + len;
00001D1E B916 00F3                          3014          LLGFR 15,3
00001D22 41FF 4000               00000000   3015          LA    15,0(15,4)
00001D26 E3F0 2008 0024          00000008   3016          STG   15,8(0,2)   ; offset of op in writer
                                            3017 * ***      return 1;
00001D2C A7F9 0001               00000001   3018          LGHI  15,1        ; 1
                                            3019 * ***   }
00001D30                                    3020 @ret_lab_1953 DS 0H
                                            3021 * * **** Start of Epilogue
                                            3022          DCCEPIL
00001D30                                    3023+         ds 0h                                                          01-DCCEP
                                            3024+* Epilog
00001D30 D707 D088 D088 00000088 00000088   3025+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001D36 E3D0 D080 0004          00000080   3026+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001D3C E3C0 D090 0004          00000090   3027+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001D42 E3B0 C018 0004          00000018   3028+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001D48 E3C0 B010 0021          00000010   3029+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001D4E E3E0 D008 0004          00000008   3030+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001D54 EB1C D020 0004          00000020   3031+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   63 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001D5A 078E                               3032+         bcr 8,14                if same dsab, just return              01-DCCEP
00001D5C E3F0 D010 0024          00000010   3033+         stg 15,16(0,13)         save return code                       01-DCCEP
00001D62 E300 D018 0024          00000018   3034+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001D68 E3F0 D090 0004          00000090   3035+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D6E E3F0 F018 0004          00000018   3036+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D74 47F0 F040               00000040   3037+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3038+* End of Epilog
                                            3039 * * **** End of Epilogue
                                            3040          DROP  12
                                            3041 *
                                            3042 *   DSECT for automatic variables in "writer_append"
                                            3043 *      (FUNCTION #1953)
                                            3044 *
00000000                00000000 000000AC   3045 @AUTO#writer_append DSECT
00000000                                    3046          DS    XL168
000000A8                                    3047 writer_append#space_left#0 DS 1F ; space_left
                                            3048 *
00001D78                00000000 00005B58   3049 @CODE    CSECT
                                            3050 *
                                            3051 *
                                            3052 *
                                            3053 * ....... start of writer_try_fast_append
00001D78                                    3054 @LNAME1954 DS  0H
00001D78 00000016                           3055          DC    X'00000016'
00001D7C A69989A385996DA3                   3056          DC    C'writer_try_fast_append'
00001D92 00                                 3057          DC    X'00'
                                            3058 writer_try_fast_append DCCPRLG CINDEX=1954,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1954
                                            3059          macro
                                            3060          dccextrn &m
                                            3061          gblc    &$dccext(1000)
                                            3062          gbla    &$dccexti
                                            3063          lcla    &i
                                            3064 &$dccext(&$dccexti+1) setc    '&m'
                                            3065 &i       seta    1
                                            3066 .loop    aif    (&i gt &$dccexti).around
                                            3067          aif    ('&$dccext(&i)' eq '&m').getout
                                            3068 &i       seta    &i+1
                                            3069          ago     .loop
                                            3070 .around  anop
                                            3071 &$dccexti seta &$dccexti+1
                                            3072          extrn  &m
                                            3073 .getout  anop
                                            3074          mend
00001D98                                    3075+$eye0077    ds    0d                                                    02-DCCCA
00001D98 C4C3C3                             3076+         dc cl3'DCC'                                                    02-DCCCA
00001D9B 01                                 3077+         dc xl1'01' format one                                          02-DCCCA
00001D9C 00000000                           3078+         dc a(0)                                                        02-DCCCA
00001DA0 0000000000001E0A                   3079+         dc ad(@PER_1954)                                               02-DCCCA
00001DA8 00000000000000C0                   3080+         dc ad(192)                                                     02-DCCCA
00001DB0 0000000000000000                   3081+         dc ad(0)                                                       02-DCCCA
00001DB8 0000000000001000                   3082+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001DC0 20                                 3083+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DC1 03                                 3084+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DC2 03                                 3085+         dc al1(3)                                                      02-DCCCA
00001DC3 08                                 3086+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DC4 00                                 3087+         dc bl.8'00000000'                                              02-DCCCA
00001DC5 000000                             3088+         dc al3(0)                                                      02-DCCCA
00001DC8 0000000000001D78                   3089+         dc ad(@LNAME1954)                                              02-DCCCA
00001DD0                                    3090+         ds 0d                                                          02-DCCCA
00001DD0 0000000000001D98                   3091+         dc ad($eye0077)                                                02-DCCCA
00001DD8 0000000000000000                   3092+         dc ad(0)                                                       02-DCCCA
00001DE0                                    3093+         ds    0d                                                       01-DCCPR
00001DE0                                    3094+writer_try_fast_append ds 0d                                            01-DCCPR
00001DE0                                    3095+@REGION_1954_1 ds 0h                                                    01-DCCPR
00001DE0 EBEC D008 0024          00000008   3096+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DE6 E3E0 D088 0004          00000088   3097+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DEC E3C0 D090 0004          00000090   3098+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001DF2 B904 002E                          3099+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001DF6 E3B0 C018 0004          00000018   3100+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001DFC A7EB 00C0               000000C0   3101+         aghi  14,192              increase by frame size               01-DCCPR
00001E00 E3E0 C020 0021          00000020   3102+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E06 4720 B020               00000020   3103+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E0A                                    3104+@PER_1954 ds   0h                                                       01-DCCPR
00001E0A EBDE 2080 0024          00000080   3105+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E10 E3C0 2090 0024          00000090   3106+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E16 B904 00D2                          3107+         lgr   13,2                set real frame pointer               01-DCCPR
00001E1A B904 00CF                          3108+         lgr   12,15               set base reg                         01-DCCPR
                        00001DE0            3109+         using @REGION_1954_1,12                                        01-DCCPR
00001E1E B904 0041                          3110          LGR   4,1         ; ptr to parm area
                                            3111 * ******* End of Prologue
                                            3112 * *
                                            3113 * ***      char *const op = w->op;
00001E22 E330 4000 0004          00000000   3114          LG    3,0(0,4)    ; w
00001E28 E320 3008 0004          00000008   3115          LG    2,8(0,3)    ; offset of op in writer
                                            3116 * ***      const int space_left = (int) (w->op_limit - op);
00001E2E E3F0 3010 0004          00000010   3117          LG    15,16(0,3)  ; offset of op_limit in writer
00001E34 B909 00F2                          3118          SGR   15,2
                                            3119 * ***      if (len <= 16 && available_bytes >= 16 && space_left >= 16)\
                                            3120 *  {
00001E38 E55D 401C 0010          0000001C   3121          CLFHSI 28(4),16
00001E3E 4720 C0E8               00001EC8   3122          BH    @L693
00001E42 E55D 4014 0010          00000014   3123          CLFHSI 20(4),16
00001E48 4740 C0E8               00001EC8   3124          BL    @L693
00001E4C A7FE 0010               00000010   3125          CHI   15,16
00001E50 4740 C0E8               00001EC8   3126          BL    @L693
                                            3127 * ***
                                            3128 * ***         unaligned_copy64(ip, op);
00001E54 E3F0 4008 0004          00000008   3129          LG    15,8(0,4)   ; ip
00001E5A E3F0 D0B0 0024          000000B0   3130          STG   15,176(0,13)
00001E60 E320 D0B8 0024          000000B8   3131          STG   2,184(0,13)
00001E66 4110 D0B0               000000B0   3132          LA    1,176(0,13)
00001E6A E350 C0E0 0004          00001EC0   3133          LG    5,@lit_1954_72 ; unaligned_copy64
00001E70 B904 00F5                          3134          LGR   15,5
                                                                                                                           Page   65 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001E74                                    3135 @@gen_label103 DS    0H
00001E74 05EF                               3136          BALR  14,15
00001E76                                    3137 @@gen_label104 DS    0H
                                            3138 * ***         unaligned_copy64(ip + 8, op + 8);
00001E76 E3F0 4008 0004          00000008   3139          LG    15,8(0,4)   ; ip
00001E7C 41F0 F008               00000008   3140          LA    15,8(0,15)
00001E80 E3F0 D0B0 0024          000000B0   3141          STG   15,176(0,13)
00001E86 41F0 2008               00000008   3142          LA    15,8(0,2)
00001E8A E3F0 D0B8 0024          000000B8   3143          STG   15,184(0,13)
00001E90 4110 D0B0               000000B0   3144          LA    1,176(0,13)
00001E94 B904 00F5                          3145          LGR   15,5
00001E98                                    3146 @@gen_label105 DS    0H
00001E98 05EF                               3147          BALR  14,15
00001E9A                                    3148 @@gen_label106 DS    0H
                                            3149 * ***         w->op = op + len;
00001E9A E3F0 401C 0016          0000001C   3150          LLGF  15,28(0,4)  ; len
00001EA0 41FF 2000               00000000   3151          LA    15,0(15,2)
00001EA4 E3F0 3008 0024          00000008   3152          STG   15,8(0,3)   ; offset of op in writer
                                            3153 * ***         return 1;
00001EAA A7F9 0001               00000001   3154          LGHI  15,1        ; 1
00001EAE 47F0 C0EC               00001ECC   3155          B     @ret_lab_1954
00001EB8                                    3156          DS    0D
00001EB8 000000C0                           3157 @FRAMESIZE_1954 DC F'192'
00001EBC 00000000
00001EC0 0000000000000658                   3158 @lit_1954_72 DC AD(unaligned_copy64)
                                            3159 * ***      }
00001EC8                                    3160 @L693    DS    0H
                                            3161 * ***      return 0;
00001EC8 A7F9 0000               00000000   3162          LGHI  15,0        ; 0
                                            3163 * ***   }
00001ECC                                    3164 @ret_lab_1954 DS 0H
                                            3165 * * **** Start of Epilogue
                                            3166          DCCEPIL
00001ECC                                    3167+         ds 0h                                                          01-DCCEP
                                            3168+* Epilog
00001ECC D707 D088 D088 00000088 00000088   3169+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001ED2 E3D0 D080 0004          00000080   3170+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001ED8 E3C0 D090 0004          00000090   3171+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001EDE E3B0 C018 0004          00000018   3172+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001EE4 E3C0 B010 0021          00000010   3173+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001EEA E3E0 D008 0004          00000008   3174+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001EF0 EB1C D020 0004          00000020   3175+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001EF6 078E                               3176+         bcr 8,14                if same dsab, just return              01-DCCEP
00001EF8 E3F0 D010 0024          00000010   3177+         stg 15,16(0,13)         save return code                       01-DCCEP
00001EFE E300 D018 0024          00000018   3178+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F04 E3F0 D090 0004          00000090   3179+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F0A E3F0 F018 0004          00000018   3180+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F10 47F0 F040               00000040   3181+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3182+* End of Epilog
                                            3183 * * **** End of Epilogue
                                            3184          DROP  12
                                            3185 *
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3186 *   DSECT for automatic variables in "writer_try_fast_append"
                                            3187 *      (FUNCTION #1954)
                                            3188 *
00000000                00000000 000000AC   3189 @AUTO#writer_try_fast_append DSECT
00000000                                    3190          DS    XL168
000000A8                                    3191 writer_try_fast_append#space_left#0 DS 1F ; space_left
                                            3192 *
00001F14                00000000 00005B58   3193 @CODE    CSECT
                                            3194 *
                                            3195 *
                                            3196 *
                                            3197 * ....... start of hash_bytes
00001F14                                    3198 @LNAME1955 DS  0H
00001F14 0000000A                           3199          DC    X'0000000A'
00001F18 8881A2886D82A8A3                   3200          DC    C'hash_bytes'
00001F22 00                                 3201          DC    X'00'
                                            3202 hash_bytes DCCPRLG CINDEX=1955,BASER=0,FRAME=176,SAVEAREA=NO,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1955
                                            3203          macro
                                            3204          dccextrn &m
                                            3205          gblc    &$dccext(1000)
                                            3206          gbla    &$dccexti
                                            3207          lcla    &i
                                            3208 &$dccext(&$dccexti+1) setc    '&m'
                                            3209 &i       seta    1
                                            3210 .loop    aif    (&i gt &$dccexti).around
                                            3211          aif    ('&$dccext(&i)' eq '&m').getout
                                            3212 &i       seta    &i+1
                                            3213          ago     .loop
                                            3214 .around  anop
                                            3215 &$dccexti seta &$dccexti+1
                                            3216          extrn  &m
                                            3217 .getout  anop
                                            3218          mend
00001F28                                    3219+$eye0080    ds    0d                                                    02-DCCCA
00001F28 C4C3C3                             3220+         dc cl3'DCC'                                                    02-DCCCA
00001F2B 01                                 3221+         dc xl1'01' format one                                          02-DCCCA
00001F2C 00000000                           3222+         dc a(0)                                                        02-DCCCA
00001F30 0000000000000000                   3223+         dc ad(0)                                                       02-DCCCA
00001F38 00000000000000B0                   3224+         dc ad(176)                                                     02-DCCCA
00001F40 0000000000000000                   3225+         dc ad(0)                                                       02-DCCCA
00001F48 0000000000001000                   3226+         dc ad(4096)                                                    02-DCCCA
00001F50 20                                 3227+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F51 03                                 3228+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F52 03                                 3229+         dc al1(3)                                                      02-DCCCA
00001F53 08                                 3230+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F54 00                                 3231+         dc bl.8'00000000'                                              02-DCCCA
00001F55 000000                             3232+         dc al3(0)                                                      02-DCCCA
00001F58 0000000000001F14                   3233+         dc ad(@LNAME1955)                                              02-DCCCA
00001F60                                    3234+         ds 0d                                                          02-DCCCA
00001F60 0000000000001F28                   3235+         dc ad($eye0080)                                                02-DCCCA
00001F68 0000000000000000                   3236+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001F70                                    3237+         ds    0d                                                       01-DCCPR
00001F70                                    3238+hash_bytes ds  0d                                                       01-DCCPR
00001F70                                    3239+@REGION_1955_1 ds 0h                                                    01-DCCPR
00001F70 EBEC D008 0024          00000008   3240+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3241 * ******* End of Prologue
                                            3242 * *
                                            3243 * ***      u32 kmul = 0x1e35a7bd;
00001F76 C0F9 1E35 A7BD                     3244          IILF  15,X'1E35A7BD' ; 506832829
                                            3245 * ***      return (bytes * kmul) >> shift;
00001F7C 5820 1004               00000004   3246          L     2,4(0,1)    ; bytes
00001F80 B252 002F                          3247          MSR   2,15
00001F84 58F0 100C               0000000C   3248          L     15,12(0,1)  ; shift
00001F88 8820 F000               00000000   3249          SRL   2,0(15)
00001F8C B916 00F2                          3250          LLGFR 15,2
                                            3251 * ***   }
                                            3252 * * **** Start of Epilogue
                                            3253          DCCEPIL
00001F90                                    3254+         ds 0h                                                          01-DCCEP
                                            3255+* Epilog
                                            3256+* Epilog
00001F90 E3E0 D008 0004          00000008   3257+         lg    14,8(,13) restore the reg                                01-DCCEP
00001F96 EB1C D020 0004          00000020   3258+         lmg   1,12,32(13)                                              01-DCCEP
00001F9C 07FE                               3259+         br   14                                                        01-DCCEP
                                            3260+* End of Epilog
                                            3261 * * **** End of Epilogue
                                            3262 *
                                            3263 *   DSECT for automatic variables in "hash_bytes"
                                            3264 *      (FUNCTION #1955)
                                            3265 *
00000000                00000000 000000AC   3266 @AUTO#hash_bytes DSECT
00000000                                    3267          DS    XL168
000000A8                                    3268 hash_bytes#kmul#0 DS 1F    ; kmul
                                            3269 *
00001F9E                00000000 00005B58   3270 @CODE    CSECT
                                            3271 *
                                            3272 *
                                            3273 *
                                            3274 * ....... start of hash
00001F9E                                    3275 @LNAME1956 DS  0H
00001F9E 00000004                           3276          DC    X'00000004'
00001FA2 8881A288                           3277          DC    C'hash'
00001FA6 00                                 3278          DC    X'00'
                                            3279 hash     DCCPRLG CINDEX=1956,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1956
                                            3280          macro
                                            3281          dccextrn &m
                                            3282          gblc    &$dccext(1000)
                                            3283          gbla    &$dccexti
                                            3284          lcla    &i
                                            3285 &$dccext(&$dccexti+1) setc    '&m'
                                            3286 &i       seta    1
                                            3287 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3288          aif    ('&$dccext(&i)' eq '&m').getout
                                            3289 &i       seta    &i+1
                                            3290          ago     .loop
                                            3291 .around  anop
                                            3292 &$dccexti seta &$dccexti+1
                                            3293          extrn  &m
                                            3294 .getout  anop
                                            3295          mend
00001FA8                                    3296+$eye0083    ds    0d                                                    02-DCCCA
00001FA8 C4C3C3                             3297+         dc cl3'DCC'                                                    02-DCCCA
00001FAB 01                                 3298+         dc xl1'01' format one                                          02-DCCCA
00001FAC 00000000                           3299+         dc a(0)                                                        02-DCCCA
00001FB0 000000000000201A                   3300+         dc ad(@PER_1956)                                               02-DCCCA
00001FB8 00000000000000B8                   3301+         dc ad(184)                                                     02-DCCCA
00001FC0 0000000000000000                   3302+         dc ad(0)                                                       02-DCCCA
00001FC8 0000000000001000                   3303+         dc ad(4096)                                                    02-DCCCA
00001FD0 20                                 3304+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FD1 03                                 3305+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FD2 03                                 3306+         dc al1(3)                                                      02-DCCCA
00001FD3 08                                 3307+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FD4 00                                 3308+         dc bl.8'00000000'                                              02-DCCCA
00001FD5 000000                             3309+         dc al3(0)                                                      02-DCCCA
00001FD8 0000000000001F9E                   3310+         dc ad(@LNAME1956)                                              02-DCCCA
00001FE0                                    3311+         ds 0d                                                          02-DCCCA
00001FE0 0000000000001FA8                   3312+         dc ad($eye0083)                                                02-DCCCA
00001FE8 0000000000000000                   3313+         dc ad(0)                                                       02-DCCCA
00001FF0                                    3314+         ds    0d                                                       01-DCCPR
00001FF0                                    3315+hash     ds    0d                                                       01-DCCPR
00001FF0                                    3316+@REGION_1956_1 ds 0h                                                    01-DCCPR
00001FF0 EBEC D008 0024          00000008   3317+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FF6 E3E0 D088 0004          00000088   3318+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FFC E3C0 D090 0004          00000090   3319+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002002 B904 002E                          3320+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002006 E3B0 C018 0004          00000018   3321+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000200C A7EB 00B8               000000B8   3322+         aghi  14,184              increase by frame size               01-DCCPR
00002010 E3E0 C020 0021          00000020   3323+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002016 4720 B020               00000020   3324+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000201A                                    3325+@PER_1956 ds   0h                                                       01-DCCPR
0000201A EBDE 2080 0024          00000080   3326+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002020 E3C0 2090 0024          00000090   3327+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002026 B904 00D2                          3328+         lgr   13,2                set real frame pointer               01-DCCPR
0000202A B904 00CF                          3329+         lgr   12,15               set base reg                         01-DCCPR
                        00001FF0            3330+         using @REGION_1956_1,12                                        01-DCCPR
0000202E B904 0021                          3331          LGR   2,1         ; ptr to parm area
                                            3332 * ******* End of Prologue
                                            3333 * *
                                            3334 * ***      return hash_bytes(get_unaligned32((u32 *)(p)), shift);
00002032 E3F0 2000 0004          00000000   3335          LG    15,0(0,2)   ; p
00002038 E3F0 D0A8 0024          000000A8   3336          STG   15,168(0,13)
0000203E 4110 D0A8               000000A8   3337          LA    1,168(0,13)
00002042 E3F0 C0D0 0004          000020C0   3338          LG    15,@lit_1956_78 ; get_unaligned32
00002048                                    3339 @@gen_label107 DS    0H
                                                                                                                           Page   69 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002048 05EF                               3340          BALR  14,15
0000204A                                    3341 @@gen_label108 DS    0H
0000204A B916 00FF                          3342          LLGFR 15,15
0000204E E3F0 D0A8 0024          000000A8   3343          STG   15,168(0,13)
00002054 E3F0 200C 0014          0000000C   3344          LGF   15,12(0,2)  ; shift
0000205A E3F0 D0B0 0024          000000B0   3345          STG   15,176(0,13)
00002060 4110 D0A8               000000A8   3346          LA    1,168(0,13)
00002064 E3F0 C0D8 0004          000020C8   3347          LG    15,@lit_1956_79 ; hash_bytes
0000206A                                    3348 @@gen_label109 DS    0H
0000206A 05EF                               3349          BALR  14,15
0000206C                                    3350 @@gen_label110 DS    0H
0000206C B916 00FF                          3351          LLGFR 15,15
                                            3352 * ***   }
                                            3353 * * **** Start of Epilogue
                                            3354          DCCEPIL
00002070                                    3355+         ds 0h                                                          01-DCCEP
                                            3356+* Epilog
00002070 D707 D088 D088 00000088 00000088   3357+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002076 E3D0 D080 0004          00000080   3358+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000207C E3C0 D090 0004          00000090   3359+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002082 E3B0 C018 0004          00000018   3360+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002088 E3C0 B010 0021          00000010   3361+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000208E E3E0 D008 0004          00000008   3362+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002094 EB1C D020 0004          00000020   3363+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000209A 078E                               3364+         bcr 8,14                if same dsab, just return              01-DCCEP
0000209C E3F0 D010 0024          00000010   3365+         stg 15,16(0,13)         save return code                       01-DCCEP
000020A2 E300 D018 0024          00000018   3366+         stg 0,24(0,13)          save more return code                  01-DCCEP
000020A8 E3F0 D090 0004          00000090   3367+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020AE E3F0 F018 0004          00000018   3368+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020B4 47F0 F040               00000040   3369+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3370+* End of Epilog
                                            3371 * * **** End of Epilogue
000020B8                                    3372          DS    0D
000020B8 000000B8                           3373 @FRAMESIZE_1956 DC F'184'
000020BC 00000000
000020C0 00000000000003D0                   3374 @lit_1956_78 DC AD(get_unaligned32)
000020C8 0000000000001F70                   3375 @lit_1956_79 DC AD(hash_bytes)
                                            3376          DROP  12
                                            3377 *
                                            3378 *   DSECT for automatic variables in "hash"
                                            3379 *      (FUNCTION #1956)
                                            3380 *
00000000                00000000 000000A8   3381 @AUTO#hash DSECT
00000000                                    3382          DS    XL168
                                            3383 *
000020D0                00000000 00005B58   3384 @CODE    CSECT
                                            3385 *
                                            3386 *
                                            3387 *
                                            3388 * ....... start of rd_kafka_snappy_max_compressed_length
                                            3389 rd_kafka_snappy_max_compressed_length ALIAS X'99846D92818692816DA295819*
                                                                797A86D9481A76D839694979985A2A285846D93859587A388'
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000020D0                                    3390 @LNAME348 DS   0H
000020D0 00000025                           3391          DC    X'00000025'
000020D4 99846D9281869281                   3392          DC    C'rd_kafka_snappy_max_compressed_l'
000020F4 859587A388                         3393          DC    C'ength'
000020F9 00                                 3394          DC    X'00'
                                            3395 rd_kafka_snappy_max_compressed_length DCCPRLG CINDEX=348,BASER=12,FRAME*
                                                                =168,SAVEAREA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME34*
                                                                8
                                            3396          macro
                                            3397          dccextrn &m
                                            3398          gblc    &$dccext(1000)
                                            3399          gbla    &$dccexti
                                            3400          lcla    &i
                                            3401 &$dccext(&$dccexti+1) setc    '&m'
                                            3402 &i       seta    1
                                            3403 .loop    aif    (&i gt &$dccexti).around
                                            3404          aif    ('&$dccext(&i)' eq '&m').getout
                                            3405 &i       seta    &i+1
                                            3406          ago     .loop
                                            3407 .around  anop
                                            3408 &$dccexti seta &$dccexti+1
                                            3409          extrn  &m
                                            3410 .getout  anop
                                            3411          mend
00002100                                    3412+$eye0086    ds    0d                                                    02-DCCCA
00002100 C4C3C3                             3413+         dc cl3'DCC'                                                    02-DCCCA
00002103 01                                 3414+         dc xl1'01' format one                                          02-DCCCA
00002104 00000000                           3415+         dc a(0)                                                        02-DCCCA
00002108 0000000000000000                   3416+         dc ad(0)                                                       02-DCCCA
00002110 00000000000000A8                   3417+         dc ad(168)                                                     02-DCCCA
00002118 0000000000000000                   3418+         dc ad(0)                                                       02-DCCCA
00002120 0000000000001000                   3419+         dc ad(4096)                                                    02-DCCCA
00002128 20                                 3420+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002129 03                                 3421+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000212A 03                                 3422+         dc al1(3)                                                      02-DCCCA
0000212B 08                                 3423+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000212C 00                                 3424+         dc bl.8'00000000'                                              02-DCCCA
0000212D 000000                             3425+         dc al3(0)                                                      02-DCCCA
00002130 00000000000020D0                   3426+         dc ad(@LNAME348)                                               02-DCCCA
00002138                                    3427+         ds 0d                                                          02-DCCCA
00002138 0000000000002100                   3428+         dc ad($eye0086)                                                02-DCCCA
00002140 0000000000000000                   3429+         dc ad(0)                                                       02-DCCCA
00002148                                    3430+         ds    0d                                                       01-DCCPR
                                            3431+         entry rd_kafka_snappy_max_compressed_length                    01-DCCPR
00002148                                    3432+rd_kafka_snappy_max_compressed_length ds 0d                             01-DCCPR
00002148                                    3433+@REGION_348_1 ds 0h                                                     01-DCCPR
00002148 EBEC D008 0024          00000008   3434+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000214E B904 00CF                          3435+         lgr   12,15               set base reg                         01-DCCPR
                        00002148            3436+         using @REGION_348_1,12                                         01-DCCPR
                                            3437 * ******* End of Prologue
                                            3438 * *
                                            3439 * ***      return 32 + source_len + source_len / 6;
                                                                                                                           Page   71 
  Active Usings: @REGION_348_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002152 E330 1000 0004          00000000   3440          LG    3,0(0,1)    ; source_len
00002158 B904 0013                          3441          LGR   1,3
0000215C A71B 0020               00000020   3442          AGHI  1,32
00002160 A729 0000               00000000   3443          LGHI  2,0
00002164 E320 C038 0087          00002180   3444          DLG   2,@lit_348_81
0000216A B90A 0013                          3445          ALGR  1,3
0000216E B904 00F1                          3446          LGR   15,1
                                            3447 * ***   }
                                            3448 * * **** Start of Epilogue
                                            3449          DCCEPIL
00002172                                    3450+         ds 0h                                                          01-DCCEP
                                            3451+* Epilog
                                            3452+* Epilog
00002172 E3E0 D008 0004          00000008   3453+         lg    14,8(,13) restore the reg                                01-DCCEP
00002178 EB1C D020 0004          00000020   3454+         lmg   1,12,32(13)                                              01-DCCEP
0000217E 07FE                               3455+         br   14                                                        01-DCCEP
                                            3456+* End of Epilog
                                            3457 * * **** End of Epilogue
00002180                                    3458          DS    0D
00002180 0000000000000006                   3459 @lit_348_81 DC FD'6' 0x0000000000000006
                                            3460          DROP  12
                                            3461 *
                                            3462 *   DSECT for automatic variables in "rd_kafka_snappy_max_compressed_l
                                            3463 *           ength"
                                            3464 *      (FUNCTION #348)
                                            3465 *
00000000                00000000 000000A8   3466 @AUTO#rd_kafka_snappy_max_compressed_length DSECT
00000000                                    3467          DS    XL168
                                            3468 *
00002188                00000000 00005B58   3469 @CODE    CSECT
                                            3470 *
                                            3471 *
                                            3472 *
                                            3473 * ....... start of emit_literal
00002188                                    3474 @LNAME1957 DS  0H
00002188 0000000C                           3475          DC    X'0000000C'
0000218C 859489A36D9389A3                   3476          DC    C'emit_literal'
00002198 00                                 3477          DC    X'00'
                                            3478 emit_literal DCCPRLG CINDEX=1957,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME1957
                                            3479          macro
                                            3480          dccextrn &m
                                            3481          gblc    &$dccext(1000)
                                            3482          gbla    &$dccexti
                                            3483          lcla    &i
                                            3484 &$dccext(&$dccexti+1) setc    '&m'
                                            3485 &i       seta    1
                                            3486 .loop    aif    (&i gt &$dccexti).around
                                            3487          aif    ('&$dccext(&i)' eq '&m').getout
                                            3488 &i       seta    &i+1
                                            3489          ago     .loop
                                            3490 .around  anop
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3491 &$dccexti seta &$dccexti+1
                                            3492          extrn  &m
                                            3493 .getout  anop
                                            3494          mend
000021A0                                    3495+$eye0089    ds    0d                                                    02-DCCCA
000021A0 C4C3C3                             3496+         dc cl3'DCC'                                                    02-DCCCA
000021A3 01                                 3497+         dc xl1'01' format one                                          02-DCCCA
000021A4 00000000                           3498+         dc a(0)                                                        02-DCCCA
000021A8 0000000000002212                   3499+         dc ad(@PER_1957)                                               02-DCCCA
000021B0 00000000000000D0                   3500+         dc ad(208)                                                     02-DCCCA
000021B8 0000000000000000                   3501+         dc ad(0)                                                       02-DCCCA
000021C0 0000000000001000                   3502+         dc ad(4096)                                                    02-DCCCA
000021C8 20                                 3503+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000021C9 03                                 3504+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000021CA 03                                 3505+         dc al1(3)                                                      02-DCCCA
000021CB 08                                 3506+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000021CC 00                                 3507+         dc bl.8'00000000'                                              02-DCCCA
000021CD 000000                             3508+         dc al3(0)                                                      02-DCCCA
000021D0 0000000000002188                   3509+         dc ad(@LNAME1957)                                              02-DCCCA
000021D8                                    3510+         ds 0d                                                          02-DCCCA
000021D8 00000000000021A0                   3511+         dc ad($eye0089)                                                02-DCCCA
000021E0 0000000000000000                   3512+         dc ad(0)                                                       02-DCCCA
000021E8                                    3513+         ds    0d                                                       01-DCCPR
000021E8                                    3514+emit_literal ds 0d                                                      01-DCCPR
000021E8                                    3515+@REGION_1957_1 ds 0h                                                    01-DCCPR
000021E8 EBEC D008 0024          00000008   3516+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000021EE E3E0 D088 0004          00000088   3517+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000021F4 E3C0 D090 0004          00000090   3518+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000021FA B904 002E                          3519+         lgr   2,14                copy addr of our savearea            01-DCCPR
000021FE E3B0 C018 0004          00000018   3520+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002204 A7EB 00D0               000000D0   3521+         aghi  14,208              increase by frame size               01-DCCPR
00002208 E3E0 C020 0021          00000020   3522+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000220E 4720 B020               00000020   3523+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002212                                    3524+@PER_1957 ds   0h                                                       01-DCCPR
00002212 EBDE 2080 0024          00000080   3525+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002218 E3C0 2090 0024          00000090   3526+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000221E B904 00D2                          3527+         lgr   13,2                set real frame pointer               01-DCCPR
00002222 B904 00CF                          3528+         lgr   12,15               set base reg                         01-DCCPR
                        000021E8            3529+         using @REGION_1957_1,12                                        01-DCCPR
                                            3530 * ******* End of Prologue
                                            3531 * *
                                            3532 * ***      int n = len - 1;
00002226 E320 1000 0004          00000000   3533          LG    2,0(0,1)    ; op
0000222C E340 1008 0004          00000008   3534          LG    4,8(0,1)    ; literal
00002232 5850 1014               00000014   3535          L     5,20(0,1)   ; len
00002236 18F5                               3536          LR    15,5
00002238 A7FA FFFF               0000FFFF   3537          AHI   15,-1
                                            3538 * ***
                                            3539 * ***      if (n < 60) {
0000223C A7FE 003C               0000003C   3540          CHI   15,60
00002240 47B0 C0F6               000022DE   3541          BNL   @L694
                                            3542 * ***
                                                                                                                           Page   73 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3543 * ***         *op++ = LITERAL | (n << 2);
00002244 B904 0032                          3544          LGR   3,2
00002248 4120 2001               00000001   3545          LA    2,1(0,2)
0000224C 89F0 0002               00000002   3546          SLL   15,2(0)
00002250 42F0 3000               00000000   3547          STC   15,0(0,3)
                                            3548 * ***
                                            3549 * ***
                                            3550 * ***   # 702 "C:\asgkafka\librdkafka\src\snappy.c"
                                            3551 * ***         if (allow_fast_path && len <= 16) {
00002254 9500 101F      0000001F 00000000   3552          CLI   31(1),0
00002258 4780 C1BC               000023A4   3553          BE    @L696
0000225C A75E 0010               00000010   3554          CHI   5,16
00002260 4720 C1BC               000023A4   3555          BH    @L696
                                            3556 * ***            unaligned_copy64(literal, op);
00002264 E340 D0B0 0024          000000B0   3557          STG   4,176(0,13)
0000226A E320 D0B8 0024          000000B8   3558          STG   2,184(0,13)
00002270 4110 D0B0               000000B0   3559          LA    1,176(0,13)
00002274 E330 C0D0 0004          000022B8   3560          LG    3,@lit_1957_82 ; unaligned_copy64
0000227A B904 00F3                          3561          LGR   15,3
0000227E                                    3562 @@gen_label114 DS    0H
0000227E 05EF                               3563          BALR  14,15
00002280                                    3564 @@gen_label115 DS    0H
                                            3565 * ***            unaligned_copy64(literal + 8, op + 8);
00002280 41F0 4008               00000008   3566          LA    15,8(0,4)
00002284 E3F0 D0B0 0024          000000B0   3567          STG   15,176(0,13)
0000228A 41F0 2008               00000008   3568          LA    15,8(0,2)
0000228E E3F0 D0B8 0024          000000B8   3569          STG   15,184(0,13)
00002294 4110 D0B0               000000B0   3570          LA    1,176(0,13)
00002298 B904 00F3                          3571          LGR   15,3
0000229C                                    3572 @@gen_label116 DS    0H
0000229C 05EF                               3573          BALR  14,15
0000229E                                    3574 @@gen_label117 DS    0H
                                            3575 * ***            return op + len;
0000229E B914 00F5                          3576          LGFR  15,5
000022A2 41FF 2000               00000000   3577          LA    15,0(15,2)
000022A6 47F0 C1FE               000023E6   3578          B     @ret_lab_1957
000022B0                                    3579          DS    0D
000022B0 000000D0                           3580 @FRAMESIZE_1957 DC F'208'
000022B4 00000000
000022B8 0000000000000658                   3581 @lit_1957_82 DC AD(unaligned_copy64)
000022C0 0000000000000000                   3582 @lit_1957_87 DC AD(__assert)
000022C8 000000000000600E                   3583 @lit_1957_86 DC AD(@strings@)
000022D0 0000000000005B58                   3584 @lit_1957_85 DC AD(@DATA)
000022D8 D200 1000 4000 00000000 00000000   3585 @lit_1957_91          MVC 0(1,1),0(4)
                                            3586 * ***         }
                                            3587 * ***      } else {
000022DE                                    3588 @L694    DS    0H
                                            3589 * ***
                                            3590 * ***         char *base = op;
000022DE B904 0062                          3591          LGR   6,2         ; base
                                            3592 * ***         int count = 0;
000022E2 A738 0000               00000000   3593          LHI   3,0         ; 0
                                                                                                                           Page   74 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3594 * ***         op++;
000022E6 4120 2001               00000001   3595          LA    2,1(0,2)
                                            3596 * ***         while (n > 0) {
000022EA 47F0 C122               0000230A   3597          B     @L700
000022EE                                    3598 @L699    DS    0H
                                            3599 * ***            *op++ = n & 0xff;
000022EE B904 0012                          3600          LGR   1,2
000022F2 4120 2001               00000001   3601          LA    2,1(0,2)
000022F6 187F                               3602          LR    7,15
000022F8 C07B 0000 00FF                     3603          NILF  7,X'000000FF'
000022FE 4270 1000               00000000   3604          STC   7,0(0,1)
                                            3605 * ***            n >>= 8;
00002302 8AF0 0008               00000008   3606          SRA   15,8(0)
                                            3607 * ***            count++;
00002306 A73A 0001               00000001   3608          AHI   3,1
                                            3609 * ***         }
0000230A                                    3610 @L700    DS    0H
0000230A 12FF                               3611          LTR   15,15
0000230C 4720 C106               000022EE   3612          BH    @L699
                                            3613 * ***         ((!(!(count >= 1))) ? (void)0 : __assert(__func__, "C:\\\
                                            3614 * asgkafka\\librdkafka\\src\\snappy.c", 717, "!(!(count >= 1))"));
00002310 A73E 0001               00000001   3615          CHI   3,1
00002314 47B0 C16C               00002354   3616          BNL   @L702
00002318                                    3617 @L701    DS    0H
00002318 E3F0 C0E8 0004          000022D0   3618          LG    15,@lit_1957_85
0000231E 41F0 F1F2               000001F2   3619          LA    15,498(0,15)
00002322 E3F0 D0B0 0024          000000B0   3620          STG   15,176(0,13)
00002328 E3F0 C0E0 0004          000022C8   3621          LG    15,@lit_1957_86
0000232E 4110 F022               00000022   3622          LA    1,34(0,15)
00002332 E310 D0B8 0024          000000B8   3623          STG   1,184(0,13)
00002338 E548 D0C0 02CD          000000C0   3624          MVGHI 192(13),717
0000233E 41F0 F0D2               000000D2   3625          LA    15,210(0,15)
00002342 E3F0 D0C8 0024          000000C8   3626          STG   15,200(0,13)
00002348 4110 D0B0               000000B0   3627          LA    1,176(0,13)
0000234C E3F0 C0D8 0004          000022C0   3628          LG    15,@lit_1957_87 ; __assert
00002352                                    3629 @@gen_label120 DS    0H
00002352 05EF                               3630          BALR  14,15
00002354                                    3631 @@gen_label121 DS    0H
00002354                                    3632 @L702    DS    0H
                                            3633 * ***         ((!(!(count <= 4))) ? (void)0 : __assert(__func__, "C:\\\
                                            3634 * asgkafka\\librdkafka\\src\\snappy.c", 718, "!(!(count <= 4))"));
00002354 A73E 0004               00000004   3635          CHI   3,4
00002358 47D0 C1B0               00002398   3636          BNH   @L704
0000235C                                    3637 @L703    DS    0H
0000235C E3F0 C0E8 0004          000022D0   3638          LG    15,@lit_1957_85
00002362 41F0 F1F2               000001F2   3639          LA    15,498(0,15)
00002366 E3F0 D0B0 0024          000000B0   3640          STG   15,176(0,13)
0000236C E3F0 C0E0 0004          000022C8   3641          LG    15,@lit_1957_86
00002372 4110 F022               00000022   3642          LA    1,34(0,15)
00002376 E310 D0B8 0024          000000B8   3643          STG   1,184(0,13)
0000237C E548 D0C0 02CE          000000C0   3644          MVGHI 192(13),718
00002382 41F0 F0E4               000000E4   3645          LA    15,228(0,15)
                                                                                                                           Page   75 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002386 E3F0 D0C8 0024          000000C8   3646          STG   15,200(0,13)
0000238C 4110 D0B0               000000B0   3647          LA    1,176(0,13)
00002390 E3F0 C0D8 0004          000022C0   3648          LG    15,@lit_1957_87 ; __assert
00002396                                    3649 @@gen_label123 DS    0H
00002396 05EF                               3650          BALR  14,15
00002398                                    3651 @@gen_label124 DS    0H
00002398                                    3652 @L704    DS    0H
                                            3653 * ***         *base = LITERAL | ((59 + count) << 2);
00002398 A73A 003B               0000003B   3654          AHI   3,59
0000239C 8930 0002               00000002   3655          SLL   3,2(0)
000023A0 4230 6000               00000000   3656          STC   3,0(0,6)    ; base
                                            3657 * ***      }
000023A4                                    3658 @L696    DS    0H
                                            3659 * ***      __memcpy(op,literal,len);
000023A4 B914 00F5                          3660          LGFR  15,5
000023A8 B904 0012                          3661          LGR   1,2
000023AC B902 00FF                          3662          LTGR  15,15
000023B0 4780 C1F6               000023DE   3663          BZ    @@gen_label127
000023B4 A7FB FFFF               0000FFFF   3664          AGHI  15,-1
000023B8 EB3F 0008 000A          00000008   3665          SRAG  3,15,8(0)
000023BE B902 0033                          3666          LTGR  3,3
000023C2 4780 C1F2               000023DA   3667          BZ    @@gen_label126
000023C6                                    3668 @@gen_label125 DS 0H
000023C6 D2FF 1000 4000 00000000 00000000   3669          MVC   0(256,1),0(4)
000023CC 4110 1100               00000100   3670          LA    1,256(0,1)
000023D0 4140 4100               00000100   3671          LA    4,256(0,4)
000023D4 E330 C1DE 0046          000023C6   3672          BCTG  3,@@gen_label125
000023DA                                    3673 @@gen_label126 DS 0H
000023DA 44F0 C0F0               000022D8   3674          EX    15,@lit_1957_91
000023DE                                    3675 @@gen_label127 DS 0H
                                            3676 * ***      return op + len;
000023DE B914 00F5                          3677          LGFR  15,5
000023E2 41FF 2000               00000000   3678          LA    15,0(15,2)
                                            3679 * ***   }
000023E6                                    3680 @ret_lab_1957 DS 0H
                                            3681 * * **** Start of Epilogue
                                            3682          DCCEPIL
000023E6                                    3683+         ds 0h                                                          01-DCCEP
                                            3684+* Epilog
000023E6 D707 D088 D088 00000088 00000088   3685+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000023EC E3D0 D080 0004          00000080   3686+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000023F2 E3C0 D090 0004          00000090   3687+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000023F8 E3B0 C018 0004          00000018   3688+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000023FE E3C0 B010 0021          00000010   3689+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002404 E3E0 D008 0004          00000008   3690+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000240A EB1C D020 0004          00000020   3691+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002410 078E                               3692+         bcr 8,14                if same dsab, just return              01-DCCEP
00002412 E3F0 D010 0024          00000010   3693+         stg 15,16(0,13)         save return code                       01-DCCEP
00002418 E300 D018 0024          00000018   3694+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000241E E3F0 D090 0004          00000090   3695+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002424 E3F0 F018 0004          00000018   3696+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000242A 47F0 F040               00000040   3697+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   76 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3698+* End of Epilog
                                            3699 * * **** End of Epilogue
                                            3700          DROP  12
                                            3701 *
                                            3702 *   DSECT for automatic variables in "emit_literal"
                                            3703 *      (FUNCTION #1957)
                                            3704 *
00000000                00000000 000000AC   3705 @AUTO#emit_literal DSECT
00000000                                    3706          DS    XL168
000000A8                                    3707 emit_literal#count#3 DS 1F ; count
000000AC                000000AC 000000A8   3708          ORG   @AUTO#emit_literal+168
000000A8                                    3709 emit_literal#n#0 DS 1F     ; n
                                            3710 *
0000242E                00000000 00005B58   3711 @CODE    CSECT
                                            3712 *
                                            3713 *
                                            3714 *
                                            3715 * ....... start of emit_copy_less_than64
0000242E                                    3716 @LNAME1958 DS  0H
0000242E 00000015                           3717          DC    X'00000015'
00002432 859489A36D839697                   3718          DC    C'emit_copy_less_than64'
00002447 00                                 3719          DC    X'00'
                                            3720 emit_copy_less_than64 DCCPRLG CINDEX=1958,BASER=12,FRAME=208,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1958
                                            3721          macro
                                            3722          dccextrn &m
                                            3723          gblc    &$dccext(1000)
                                            3724          gbla    &$dccexti
                                            3725          lcla    &i
                                            3726 &$dccext(&$dccexti+1) setc    '&m'
                                            3727 &i       seta    1
                                            3728 .loop    aif    (&i gt &$dccexti).around
                                            3729          aif    ('&$dccext(&i)' eq '&m').getout
                                            3730 &i       seta    &i+1
                                            3731          ago     .loop
                                            3732 .around  anop
                                            3733 &$dccexti seta &$dccexti+1
                                            3734          extrn  &m
                                            3735 .getout  anop
                                            3736          mend
00002448                                    3737+$eye0092    ds    0d                                                    02-DCCCA
00002448 C4C3C3                             3738+         dc cl3'DCC'                                                    02-DCCCA
0000244B 01                                 3739+         dc xl1'01' format one                                          02-DCCCA
0000244C 00000000                           3740+         dc a(0)                                                        02-DCCCA
00002450 00000000000024BA                   3741+         dc ad(@PER_1958)                                               02-DCCCA
00002458 00000000000000D0                   3742+         dc ad(208)                                                     02-DCCCA
00002460 0000000000000000                   3743+         dc ad(0)                                                       02-DCCCA
00002468 0000000000001000                   3744+         dc ad(4096)                                                    02-DCCCA
00002470 20                                 3745+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002471 03                                 3746+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002472 03                                 3747+         dc al1(3)                                                      02-DCCCA
00002473 08                                 3748+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002474 00                                 3749+         dc bl.8'00000000'                                              02-DCCCA
00002475 000000                             3750+         dc al3(0)                                                      02-DCCCA
00002478 000000000000242E                   3751+         dc ad(@LNAME1958)                                              02-DCCCA
00002480                                    3752+         ds 0d                                                          02-DCCCA
00002480 0000000000002448                   3753+         dc ad($eye0092)                                                02-DCCCA
00002488 0000000000000000                   3754+         dc ad(0)                                                       02-DCCCA
00002490                                    3755+         ds    0d                                                       01-DCCPR
00002490                                    3756+emit_copy_less_than64 ds 0d                                             01-DCCPR
00002490                                    3757+@REGION_1958_1 ds 0h                                                    01-DCCPR
00002490 EBEC D008 0024          00000008   3758+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002496 E3E0 D088 0004          00000088   3759+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000249C E3C0 D090 0004          00000090   3760+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000024A2 B904 002E                          3761+         lgr   2,14                copy addr of our savearea            01-DCCPR
000024A6 E3B0 C018 0004          00000018   3762+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000024AC A7EB 00D0               000000D0   3763+         aghi  14,208              increase by frame size               01-DCCPR
000024B0 E3E0 C020 0021          00000020   3764+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000024B6 4720 B020               00000020   3765+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000024BA                                    3766+@PER_1958 ds   0h                                                       01-DCCPR
000024BA EBDE 2080 0024          00000080   3767+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000024C0 E3C0 2090 0024          00000090   3768+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000024C6 B904 00D2                          3769+         lgr   13,2                set real frame pointer               01-DCCPR
000024CA B904 00CF                          3770+         lgr   12,15               set base reg                         01-DCCPR
                        00002490            3771+         using @REGION_1958_1,12                                        01-DCCPR
                                            3772 * ******* End of Prologue
                                            3773 * *
                                            3774 * ***      ((!(!((len) <= (64)))) ? (void)0 : __assert(__func__, "C:\\\
                                            3775 * asgkafka\\librdkafka\\src\\snappy.c", 727, "!(!((len) <= (64)))"));
000024CE E320 1000 0004          00000000   3776          LG    2,0(0,1)    ; op
000024D4 5830 100C               0000000C   3777          L     3,12(0,1)   ; offset
000024D8 5840 1014               00000014   3778          L     4,20(0,1)   ; len
000024DC A74E 0040               00000040   3779          CHI   4,64
000024E0 47D0 C090               00002520   3780          BNH   @L706
000024E4                                    3781 @L705    DS    0H
000024E4 E3F0 C1B8 0004          00002648   3782          LG    15,@lit_1958_93
000024EA 41F0 F200               00000200   3783          LA    15,512(0,15)
000024EE E3F0 D0B0 0024          000000B0   3784          STG   15,176(0,13)
000024F4 E3F0 C1B0 0004          00002640   3785          LG    15,@lit_1958_94
000024FA 4110 F022               00000022   3786          LA    1,34(0,15)
000024FE E310 D0B8 0024          000000B8   3787          STG   1,184(0,13)
00002504 E548 D0C0 02D7          000000C0   3788          MVGHI 192(13),727
0000250A 41F0 F0F6               000000F6   3789          LA    15,246(0,15)
0000250E E3F0 D0C8 0024          000000C8   3790          STG   15,200(0,13)
00002514 4110 D0B0               000000B0   3791          LA    1,176(0,13)
00002518 E3F0 C1A8 0004          00002638   3792          LG    15,@lit_1958_95 ; __assert
0000251E                                    3793 @@gen_label129 DS    0H
0000251E 05EF                               3794          BALR  14,15
00002520                                    3795 @@gen_label130 DS    0H
00002520                                    3796 @L706    DS    0H
                                            3797 * ***      ((!(!((len) >= (4)))) ? (void)0 : __assert(__func__, "C:\\a\
                                            3798 * sgkafka\\librdkafka\\src\\snappy.c", 728, "!(!((len) >= (4)))"));
00002520 A74E 0004               00000004   3799          CHI   4,4
00002524 47B0 C0D4               00002564   3800          BNL   @L708
                                                                                                                           Page   78 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002528                                    3801 @L707    DS    0H
00002528 E3F0 C1B8 0004          00002648   3802          LG    15,@lit_1958_93
0000252E 41F0 F200               00000200   3803          LA    15,512(0,15)
00002532 E3F0 D0B0 0024          000000B0   3804          STG   15,176(0,13)
00002538 E3F0 C1B0 0004          00002640   3805          LG    15,@lit_1958_94
0000253E 4110 F022               00000022   3806          LA    1,34(0,15)
00002542 E310 D0B8 0024          000000B8   3807          STG   1,184(0,13)
00002548 E548 D0C0 02D8          000000C0   3808          MVGHI 192(13),728
0000254E 41F0 F10A               0000010A   3809          LA    15,266(0,15)
00002552 E3F0 D0C8 0024          000000C8   3810          STG   15,200(0,13)
00002558 4110 D0B0               000000B0   3811          LA    1,176(0,13)
0000255C E3F0 C1A8 0004          00002638   3812          LG    15,@lit_1958_95 ; __assert
00002562                                    3813 @@gen_label132 DS    0H
00002562 05EF                               3814          BALR  14,15
00002564                                    3815 @@gen_label133 DS    0H
00002564                                    3816 @L708    DS    0H
                                            3817 * ***      ((!(!((offset) < (65536)))) ? (void)0 : __assert(__func__, \
                                            3818 * "C:\\asgkafka\\librdkafka\\src\\snappy.c", 729, "!(!((offset) < (655\
                                            3819 * 36)))"));
00002564 C23D 0001 0000                     3820          CFI   3,X'00010000'
0000256A 4740 C11A               000025AA   3821          BL    @L710
0000256E                                    3822 @L709    DS    0H
0000256E E3F0 C1B8 0004          00002648   3823          LG    15,@lit_1958_93
00002574 41F0 F200               00000200   3824          LA    15,512(0,15)
00002578 E3F0 D0B0 0024          000000B0   3825          STG   15,176(0,13)
0000257E E3F0 C1B0 0004          00002640   3826          LG    15,@lit_1958_94
00002584 4110 F022               00000022   3827          LA    1,34(0,15)
00002588 E310 D0B8 0024          000000B8   3828          STG   1,184(0,13)
0000258E E548 D0C0 02D9          000000C0   3829          MVGHI 192(13),729
00002594 41F0 F11E               0000011E   3830          LA    15,286(0,15)
00002598 E3F0 D0C8 0024          000000C8   3831          STG   15,200(0,13)
0000259E 4110 D0B0               000000B0   3832          LA    1,176(0,13)
000025A2 E3F0 C1A8 0004          00002638   3833          LG    15,@lit_1958_95 ; __assert
000025A8                                    3834 @@gen_label135 DS    0H
000025A8 05EF                               3835          BALR  14,15
000025AA                                    3836 @@gen_label136 DS    0H
000025AA                                    3837 @L710    DS    0H
                                            3838 * ***
                                            3839 * ***      if ((len < 12) && (offset < 2048)) {
000025AA A74E 000C               0000000C   3840          CHI   4,12
000025AE 47B0 C1C8               00002658   3841          BNL   @L711
000025B2 A73E 0800               00000800   3842          CHI   3,2048
000025B6 47B0 C1C8               00002658   3843          BNL   @L711
                                            3844 * ***         int len_minus_4 = len - 4;
000025BA A74A FFFC               0000FFFC   3845          AHI   4,-4
                                            3846 * ***         ((!(!(len_minus_4 < 8))) ? (void)0 : __assert(__func__, \
                                            3847 * "C:\\asgkafka\\librdkafka\\src\\snappy.c", 733, "!(!(len_minus_4 < 8\
                                            3848 * ))"));
000025BE A74E 0008               00000008   3849          CHI   4,8
000025C2 4740 C172               00002602   3850          BL    @L713
000025C6                                    3851 @L712    DS    0H
000025C6 E3F0 C1B8 0004          00002648   3852          LG    15,@lit_1958_93
                                                                                                                           Page   79 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000025CC 41F0 F200               00000200   3853          LA    15,512(0,15)
000025D0 E3F0 D0B0 0024          000000B0   3854          STG   15,176(0,13)
000025D6 E3F0 C1B0 0004          00002640   3855          LG    15,@lit_1958_94
000025DC 4110 F022               00000022   3856          LA    1,34(0,15)
000025E0 E310 D0B8 0024          000000B8   3857          STG   1,184(0,13)
000025E6 E548 D0C0 02DD          000000C0   3858          MVGHI 192(13),733
000025EC 41F0 F138               00000138   3859          LA    15,312(0,15)
000025F0 E3F0 D0C8 0024          000000C8   3860          STG   15,200(0,13)
000025F6 4110 D0B0               000000B0   3861          LA    1,176(0,13)
000025FA E3F0 C1A8 0004          00002638   3862          LG    15,@lit_1958_95 ; __assert
00002600                                    3863 @@gen_label140 DS    0H
00002600 05EF                               3864          BALR  14,15
00002602                                    3865 @@gen_label141 DS    0H
00002602                                    3866 @L713    DS    0H
                                            3867 * ***         *op++ =
00002602 41F0 2001               00000001   3868          LA    15,1(0,2)
                                            3869 * ***             COPY_1_BYTE_OFFSET + ((len_minus_4) << 2) + ((offset\
                                            3870 *  >> 8)
                                            3871 * ***                            << 5);
00002606 8940 0002               00000002   3872          SLL   4,2(0)
0000260A A74A 0001               00000001   3873          AHI   4,1
0000260E 1813                               3874          LR    1,3
00002610 8A10 0008               00000008   3875          SRA   1,8(0)
00002614 8910 0005               00000005   3876          SLL   1,5(0)
00002618 1A41                               3877          AR    4,1
0000261A 4240 2000               00000000   3878          STC   4,0(0,2)
                                            3879 * ***         *op++ = offset & 0xff;
0000261E 4120 F001               00000001   3880          LA    2,1(0,15)
00002622 C03B 0000 00FF                     3881          NILF  3,X'000000FF'
00002628 4230 F000               00000000   3882          STC   3,0(0,15)
                                            3883 * ***      } else {
0000262C 47F0 C200               00002690   3884          B     @L714
00002630                                    3885          DS    0D
00002630 000000D0                           3886 @FRAMESIZE_1958 DC F'208'
00002634 00000000
00002638 0000000000000000                   3887 @lit_1958_95 DC AD(__assert)
00002640 000000000000600E                   3888 @lit_1958_94 DC AD(@strings@)
00002648 0000000000005B58                   3889 @lit_1958_93 DC AD(@DATA)
00002650 00000000000005D0                   3890 @lit_1958_105 DC AD(put_unaligned16)
00002658                                    3891 @L711    DS    0H
                                            3892 * ***         *op++ = COPY_2_BYTE_OFFSET + ((len - 1) << 2);
00002658 B904 00F2                          3893          LGR   15,2
0000265C 4120 2001               00000001   3894          LA    2,1(0,2)
00002660 A74A FFFF               0000FFFF   3895          AHI   4,-1
00002664 8940 0002               00000002   3896          SLL   4,2(0)
00002668 A74A 0002               00000002   3897          AHI   4,2
0000266C 4240 F000               00000000   3898          STC   4,0(0,15)
                                            3899 * ***         (put_unaligned16((offset), (u16 *)(op)));
00002670 B985 00F3                          3900          LLGHR 15,3
00002674 E3F0 D0B0 0024          000000B0   3901          STG   15,176(0,13)
0000267A E320 D0B8 0024          000000B8   3902          STG   2,184(0,13)
00002680 4110 D0B0               000000B0   3903          LA    1,176(0,13)
                                                                                                                           Page   80 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002684 E3F0 C1C0 0004          00002650   3904          LG    15,@lit_1958_105 ; put_unaligned16
0000268A                                    3905 @@gen_label142 DS    0H
0000268A 05EF                               3906          BALR  14,15
0000268C                                    3907 @@gen_label143 DS    0H
                                            3908 * ***         op += 2;
0000268C 4120 2002               00000002   3909          LA    2,2(0,2)
                                            3910 * ***      }
00002690                                    3911 @L714    DS    0H
                                            3912 * ***      return op;
00002690 B904 00F2                          3913          LGR   15,2
                                            3914 * ***   }
                                            3915 * * **** Start of Epilogue
                                            3916          DCCEPIL
00002694                                    3917+         ds 0h                                                          01-DCCEP
                                            3918+* Epilog
00002694 D707 D088 D088 00000088 00000088   3919+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000269A E3D0 D080 0004          00000080   3920+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026A0 E3C0 D090 0004          00000090   3921+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026A6 E3B0 C018 0004          00000018   3922+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026AC E3C0 B010 0021          00000010   3923+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026B2 E3E0 D008 0004          00000008   3924+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026B8 EB1C D020 0004          00000020   3925+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026BE 078E                               3926+         bcr 8,14                if same dsab, just return              01-DCCEP
000026C0 E3F0 D010 0024          00000010   3927+         stg 15,16(0,13)         save return code                       01-DCCEP
000026C6 E300 D018 0024          00000018   3928+         stg 0,24(0,13)          save more return code                  01-DCCEP
000026CC E3F0 D090 0004          00000090   3929+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000026D2 E3F0 F018 0004          00000018   3930+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000026D8 47F0 F040               00000040   3931+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3932+* End of Epilog
                                            3933 * * **** End of Epilogue
                                            3934          DROP  12
                                            3935 *
                                            3936 *   DSECT for automatic variables in "emit_copy_less_than64"
                                            3937 *      (FUNCTION #1958)
                                            3938 *
00000000                00000000 000000AC   3939 @AUTO#emit_copy_less_than64 DSECT
00000000                                    3940          DS    XL168
000000A8                                    3941 emit_copy_less_than64#len_minus_4#1 DS 1F ; len_minus_4
                                            3942 *
000026DC                00000000 00005B58   3943 @CODE    CSECT
                                            3944 *
                                            3945 *
                                            3946 *
                                            3947 * ....... start of emit_copy
000026DC                                    3948 @LNAME1959 DS  0H
000026DC 00000009                           3949          DC    X'00000009'
000026E0 859489A36D839697                   3950          DC    C'emit_copy'
000026E9 00                                 3951          DC    X'00'
                                            3952 emit_copy DCCPRLG CINDEX=1959,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1959
                                            3953          macro
                                            3954          dccextrn &m
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3955          gblc    &$dccext(1000)
                                            3956          gbla    &$dccexti
                                            3957          lcla    &i
                                            3958 &$dccext(&$dccexti+1) setc    '&m'
                                            3959 &i       seta    1
                                            3960 .loop    aif    (&i gt &$dccexti).around
                                            3961          aif    ('&$dccext(&i)' eq '&m').getout
                                            3962 &i       seta    &i+1
                                            3963          ago     .loop
                                            3964 .around  anop
                                            3965 &$dccexti seta &$dccexti+1
                                            3966          extrn  &m
                                            3967 .getout  anop
                                            3968          mend
000026F0                                    3969+$eye0095    ds    0d                                                    02-DCCCA
000026F0 C4C3C3                             3970+         dc cl3'DCC'                                                    02-DCCCA
000026F3 01                                 3971+         dc xl1'01' format one                                          02-DCCCA
000026F4 00000000                           3972+         dc a(0)                                                        02-DCCCA
000026F8 0000000000002762                   3973+         dc ad(@PER_1959)                                               02-DCCCA
00002700 00000000000000C0                   3974+         dc ad(192)                                                     02-DCCCA
00002708 0000000000000000                   3975+         dc ad(0)                                                       02-DCCCA
00002710 0000000000001000                   3976+         dc ad(4096)                                                    02-DCCCA
00002718 20                                 3977+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002719 03                                 3978+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000271A 03                                 3979+         dc al1(3)                                                      02-DCCCA
0000271B 08                                 3980+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000271C 00                                 3981+         dc bl.8'00000000'                                              02-DCCCA
0000271D 000000                             3982+         dc al3(0)                                                      02-DCCCA
00002720 00000000000026DC                   3983+         dc ad(@LNAME1959)                                              02-DCCCA
00002728                                    3984+         ds 0d                                                          02-DCCCA
00002728 00000000000026F0                   3985+         dc ad($eye0095)                                                02-DCCCA
00002730 0000000000000000                   3986+         dc ad(0)                                                       02-DCCCA
00002738                                    3987+         ds    0d                                                       01-DCCPR
00002738                                    3988+emit_copy ds   0d                                                       01-DCCPR
00002738                                    3989+@REGION_1959_1 ds 0h                                                    01-DCCPR
00002738 EBEC D008 0024          00000008   3990+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000273E E3E0 D088 0004          00000088   3991+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002744 E3C0 D090 0004          00000090   3992+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000274A B904 002E                          3993+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000274E E3B0 C018 0004          00000018   3994+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002754 A7EB 00C0               000000C0   3995+         aghi  14,192              increase by frame size               01-DCCPR
00002758 E3E0 C020 0021          00000020   3996+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000275E 4720 B020               00000020   3997+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002762                                    3998+@PER_1959 ds   0h                                                       01-DCCPR
00002762 EBDE 2080 0024          00000080   3999+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002768 E3C0 2090 0024          00000090   4000+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000276E B904 00D2                          4001+         lgr   13,2                set real frame pointer               01-DCCPR
00002772 B904 00CF                          4002+         lgr   12,15               set base reg                         01-DCCPR
                        00002738            4003+         using @REGION_1959_1,12                                        01-DCCPR
                                            4004 * ******* End of Prologue
                                            4005 * *
00002776 E3F0 1000 0004          00000000   4006          LG    15,0(0,1)   ; op
                                                                                                                           Page   82 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000277C 5830 100C               0000000C   4007          L     3,12(0,1)   ; offset
00002780 5820 1014               00000014   4008          L     2,20(0,1)   ; len
                                            4009 * ***
                                            4010 * ***
                                            4011 * ***
                                            4012 * ***
                                            4013 * ***      while (len >= 68) {
00002784 47F0 C086               000027BE   4014          B     @L718
00002788                                    4015          DS    0D
00002788 000000C0                           4016 @FRAMESIZE_1959 DC F'192'
0000278C 00000000
00002790 0000000000002490                   4017 @lit_1959_107 DC AD(emit_copy_less_than64)
00002798                                    4018 @L717    DS    0H
                                            4019 * ***         op = emit_copy_less_than64(op, offset, 64);
00002798 E3F0 D0A8 0024          000000A8   4020          STG   15,168(0,13)
0000279E B914 00F3                          4021          LGFR  15,3
000027A2 E3F0 D0B0 0024          000000B0   4022          STG   15,176(0,13)
000027A8 E548 D0B8 0040          000000B8   4023          MVGHI 184(13),64
000027AE 4110 D0A8               000000A8   4024          LA    1,168(0,13)
000027B2 E3F0 C058 0004          00002790   4025          LG    15,@lit_1959_107 ; emit_copy_less_than64
000027B8                                    4026 @@gen_label144 DS    0H
000027B8 05EF                               4027          BALR  14,15
000027BA                                    4028 @@gen_label145 DS    0H
                                            4029 * ***         len -= 64;
000027BA A72A FFC0               0000FFC0   4030          AHI   2,-64
                                            4031 * ***      }
000027BE                                    4032 @L718    DS    0H
000027BE A72E 0044               00000044   4033          CHI   2,68
000027C2 47B0 C060               00002798   4034          BNL   @L717
                                            4035 * ***
                                            4036 * ***
                                            4037 * ***
                                            4038 * ***
                                            4039 * ***
                                            4040 * ***      if (len > 64) {
000027C6 A72E 0040               00000040   4041          CHI   2,64
000027CA 47D0 C0BC               000027F4   4042          BNH   @L719
                                            4043 * ***         op = emit_copy_less_than64(op, offset, 60);
000027CE E3F0 D0A8 0024          000000A8   4044          STG   15,168(0,13)
000027D4 B914 00F3                          4045          LGFR  15,3
000027D8 E3F0 D0B0 0024          000000B0   4046          STG   15,176(0,13)
000027DE E548 D0B8 003C          000000B8   4047          MVGHI 184(13),60
000027E4 4110 D0A8               000000A8   4048          LA    1,168(0,13)
000027E8 E3F0 C058 0004          00002790   4049          LG    15,@lit_1959_107 ; emit_copy_less_than64
000027EE                                    4050 @@gen_label148 DS    0H
000027EE 05EF                               4051          BALR  14,15
000027F0                                    4052 @@gen_label149 DS    0H
                                            4053 * ***         len -= 60;
000027F0 A72A FFC4               0000FFC4   4054          AHI   2,-60
                                            4055 * ***      }
000027F4                                    4056 @L719    DS    0H
                                            4057 * ***
                                                                                                                           Page   83 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4058 * ***
                                            4059 * ***      op = emit_copy_less_than64(op, offset, len);
000027F4 E3F0 D0A8 0024          000000A8   4060          STG   15,168(0,13)
000027FA B914 00F3                          4061          LGFR  15,3
000027FE E3F0 D0B0 0024          000000B0   4062          STG   15,176(0,13)
00002804 B914 00F2                          4063          LGFR  15,2
00002808 E3F0 D0B8 0024          000000B8   4064          STG   15,184(0,13)
0000280E 4110 D0A8               000000A8   4065          LA    1,168(0,13)
00002812 E3F0 C058 0004          00002790   4066          LG    15,@lit_1959_107 ; emit_copy_less_than64
00002818                                    4067 @@gen_label150 DS    0H
00002818 05EF                               4068          BALR  14,15
0000281A                                    4069 @@gen_label151 DS    0H
                                            4070 * ***      return op;
                                            4071 * ***   }
                                            4072 * * **** Start of Epilogue
                                            4073          DCCEPIL
0000281A                                    4074+         ds 0h                                                          01-DCCEP
                                            4075+* Epilog
0000281A D707 D088 D088 00000088 00000088   4076+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002820 E3D0 D080 0004          00000080   4077+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002826 E3C0 D090 0004          00000090   4078+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000282C E3B0 C018 0004          00000018   4079+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002832 E3C0 B010 0021          00000010   4080+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002838 E3E0 D008 0004          00000008   4081+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000283E EB1C D020 0004          00000020   4082+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002844 078E                               4083+         bcr 8,14                if same dsab, just return              01-DCCEP
00002846 E3F0 D010 0024          00000010   4084+         stg 15,16(0,13)         save return code                       01-DCCEP
0000284C E300 D018 0024          00000018   4085+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002852 E3F0 D090 0004          00000090   4086+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002858 E3F0 F018 0004          00000018   4087+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000285E 47F0 F040               00000040   4088+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4089+* End of Epilog
                                            4090 * * **** End of Epilogue
                                            4091          DROP  12
                                            4092 *
                                            4093 *   DSECT for automatic variables in "emit_copy"
                                            4094 *      (FUNCTION #1959)
                                            4095 *
00000000                00000000 000000A8   4096 @AUTO#emit_copy DSECT
00000000                                    4097          DS    XL168
                                            4098 *
00002862                00000000 00005B58   4099 @CODE    CSECT
                                            4100 *
                                            4101 *
                                            4102 *
                                            4103 * ....... start of rd_kafka_snappy_uncompressed_length
                                            4104 rd_kafka_snappy_uncompressed_length ALIAS X'99846D92818692816DA29581979*
                                                                7A86DA495839694979985A2A285846D93859587A388'
00002862                                    4105 @LNAME347 DS   0H
00002862 00000023                           4106          DC    X'00000023'
00002866 99846D9281869281                   4107          DC    C'rd_kafka_snappy_uncompressed_len'
00002886 87A388                             4108          DC    C'gth'
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002889 00                                 4109          DC    X'00'
                                            4110 rd_kafka_snappy_uncompressed_length DCCPRLG CINDEX=347,BASER=12,FRAME=2*
                                                                00,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME347
                                            4111          macro
                                            4112          dccextrn &m
                                            4113          gblc    &$dccext(1000)
                                            4114          gbla    &$dccexti
                                            4115          lcla    &i
                                            4116 &$dccext(&$dccexti+1) setc    '&m'
                                            4117 &i       seta    1
                                            4118 .loop    aif    (&i gt &$dccexti).around
                                            4119          aif    ('&$dccext(&i)' eq '&m').getout
                                            4120 &i       seta    &i+1
                                            4121          ago     .loop
                                            4122 .around  anop
                                            4123 &$dccexti seta &$dccexti+1
                                            4124          extrn  &m
                                            4125 .getout  anop
                                            4126          mend
00002890                                    4127+$eye0098    ds    0d                                                    02-DCCCA
00002890 C4C3C3                             4128+         dc cl3'DCC'                                                    02-DCCCA
00002893 01                                 4129+         dc xl1'01' format one                                          02-DCCCA
00002894 00000000                           4130+         dc a(0)                                                        02-DCCCA
00002898 0000000000002902                   4131+         dc ad(@PER_347)                                                02-DCCCA
000028A0 00000000000000C8                   4132+         dc ad(200)                                                     02-DCCCA
000028A8 0000000000000000                   4133+         dc ad(0)                                                       02-DCCCA
000028B0 0000000000001000                   4134+         dc ad(4096)                                                    02-DCCCA
000028B8 20                                 4135+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000028B9 03                                 4136+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000028BA 03                                 4137+         dc al1(3)                                                      02-DCCCA
000028BB 08                                 4138+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000028BC 00                                 4139+         dc bl.8'00000000'                                              02-DCCCA
000028BD 000000                             4140+         dc al3(0)                                                      02-DCCCA
000028C0 0000000000002862                   4141+         dc ad(@LNAME347)                                               02-DCCCA
000028C8                                    4142+         ds 0d                                                          02-DCCCA
000028C8 0000000000002890                   4143+         dc ad($eye0098)                                                02-DCCCA
000028D0 0000000000000000                   4144+         dc ad(0)                                                       02-DCCCA
000028D8                                    4145+         ds    0d                                                       01-DCCPR
                                            4146+         entry rd_kafka_snappy_uncompressed_length                      01-DCCPR
000028D8                                    4147+rd_kafka_snappy_uncompressed_length ds 0d                               01-DCCPR
000028D8                                    4148+@REGION_347_1 ds 0h                                                     01-DCCPR
000028D8 EBEC D008 0024          00000008   4149+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000028DE E3E0 D088 0004          00000088   4150+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000028E4 E3C0 D090 0004          00000090   4151+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000028EA B904 002E                          4152+         lgr   2,14                copy addr of our savearea            01-DCCPR
000028EE E3B0 C018 0004          00000018   4153+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000028F4 A7EB 00C8               000000C8   4154+         aghi  14,200              increase by frame size               01-DCCPR
000028F8 E3E0 C020 0021          00000020   4155+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000028FE 4720 B020               00000020   4156+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002902                                    4157+@PER_347 ds    0h                                                       01-DCCPR
00002902 EBDE 2080 0024          00000080   4158+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002908 E3C0 2090 0024          00000090   4159+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000290E B904 00D2                          4160+         lgr   13,2                set real frame pointer               01-DCCPR
00002912 B904 00CF                          4161+         lgr   12,15               set base reg                         01-DCCPR
                        000028D8            4162+         using @REGION_347_1,12                                         01-DCCPR
00002916 B904 0021                          4163          LGR   2,1         ; ptr to parm area
                                            4164 * ******* End of Prologue
                                            4165 * *
                                            4166 * ***      u32 v = 0;
0000291A E54C D0A8 0000          000000A8   4167          MVHI  168(13),0   ; v
                                            4168 * ***      const char *limit = start + n;
00002920 E3F0 2000 0004          00000000   4169          LG    15,0(0,2)   ; start
00002926 E310 2008 0004          00000008   4170          LG    1,8(0,2)    ; n
0000292C 4111 F000               00000000   4171          LA    1,0(1,15)
                                            4172 * ***      if (varint_parse32_with_limit(start, limit, &v) != ((void *\
                                            4173 * )0)) {
00002930 E3F0 D0B0 0024          000000B0   4174          STG   15,176(0,13)
00002936 E310 D0B8 0024          000000B8   4175          STG   1,184(0,13)
0000293C 41F0 D0A8               000000A8   4176          LA    15,168(0,13)
00002940 E3F0 D0C0 0024          000000C0   4177          STG   15,192(0,13)
00002946 4110 D0B0               000000B0   4178          LA    1,176(0,13)
0000294A E3F0 C0A8 0004          00002980   4179          LG    15,@lit_347_111 ; varint_parse32_with_limit
00002950                                    4180 @@gen_label152 DS    0H
00002950 05EF                               4181          BALR  14,15
00002952                                    4182 @@gen_label153 DS    0H
00002952 B902 00FF                          4183          LTGR  15,15
00002956 4780 C0B0               00002988   4184          BE    @L720
                                            4185 * ***         *result = v;
0000295A E3F0 2010 0004          00000010   4186          LG    15,16(0,2)  ; result
00002960 E310 D0A8 0016          000000A8   4187          LLGF  1,168(0,13) ; v
00002966 E310 F000 0024          00000000   4188          STG   1,0(0,15)   ; result
                                            4189 * ***         return 1;
0000296C A7F9 0001               00000001   4190          LGHI  15,1        ; 1
00002970 47F0 C0B4               0000298C   4191          B     @ret_lab_347
00002978                                    4192          DS    0D
00002978 000000C8                           4193 @FRAMESIZE_347 DC F'200'
0000297C 00000000
00002980 0000000000000960                   4194 @lit_347_111 DC AD(varint_parse32_with_limit)
                                            4195 * ***      } else {
00002988                                    4196 @L720    DS    0H
                                            4197 * ***         return 0;
00002988 A7F9 0000               00000000   4198          LGHI  15,0        ; 0
                                            4199 * ***      }
                                            4200 * ***   }
0000298C                                    4201 @ret_lab_347 DS 0H
                                            4202 * * **** Start of Epilogue
                                            4203          DCCEPIL
0000298C                                    4204+         ds 0h                                                          01-DCCEP
                                            4205+* Epilog
0000298C D707 D088 D088 00000088 00000088   4206+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002992 E3D0 D080 0004          00000080   4207+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002998 E3C0 D090 0004          00000090   4208+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000299E E3B0 C018 0004          00000018   4209+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000029A4 E3C0 B010 0021          00000010   4210+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   86 
  Active Usings: @REGION_347_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000029AA E3E0 D008 0004          00000008   4211+         lg  14,8(0,13)          load up return address                 01-DCCEP
000029B0 EB1C D020 0004          00000020   4212+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000029B6 078E                               4213+         bcr 8,14                if same dsab, just return              01-DCCEP
000029B8 E3F0 D010 0024          00000010   4214+         stg 15,16(0,13)         save return code                       01-DCCEP
000029BE E300 D018 0024          00000018   4215+         stg 0,24(0,13)          save more return code                  01-DCCEP
000029C4 E3F0 D090 0004          00000090   4216+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000029CA E3F0 F018 0004          00000018   4217+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000029D0 47F0 F040               00000040   4218+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4219+* End of Epilog
                                            4220 * * **** End of Epilogue
                                            4221          DROP  12
                                            4222 *
                                            4223 *   DSECT for automatic variables in "rd_kafka_snappy_uncompressed_len
                                            4224 *           gth"
                                            4225 *      (FUNCTION #347)
                                            4226 *
00000000                00000000 000000AC   4227 @AUTO#rd_kafka_snappy_uncompressed_length DSECT
00000000                                    4228          DS    XL168
000000A8                                    4229 rd_kafka_snappy_uncompressed_length#v#0 DS 1F ; v
                                            4230 *
000029D4                00000000 00005B58   4231 @CODE    CSECT
                                            4232 *
                                            4233 *
                                            4234 *
                                            4235 * ....... start of get_hash_table
000029D4                                    4236 @LNAME1960 DS  0H
000029D4 0000000E                           4237          DC    X'0000000E'
000029D8 8785A36D8881A288                   4238          DC    C'get_hash_table'
000029E6 00                                 4239          DC    X'00'
                                            4240 get_hash_table DCCPRLG CINDEX=1960,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1960
                                            4241          macro
                                            4242          dccextrn &m
                                            4243          gblc    &$dccext(1000)
                                            4244          gbla    &$dccexti
                                            4245          lcla    &i
                                            4246 &$dccext(&$dccexti+1) setc    '&m'
                                            4247 &i       seta    1
                                            4248 .loop    aif    (&i gt &$dccexti).around
                                            4249          aif    ('&$dccext(&i)' eq '&m').getout
                                            4250 &i       seta    &i+1
                                            4251          ago     .loop
                                            4252 .around  anop
                                            4253 &$dccexti seta &$dccexti+1
                                            4254          extrn  &m
                                            4255 .getout  anop
                                            4256          mend
000029E8                                    4257+$eye0101    ds    0d                                                    02-DCCCA
000029E8 C4C3C3                             4258+         dc cl3'DCC'                                                    02-DCCCA
000029EB 01                                 4259+         dc xl1'01' format one                                          02-DCCCA
000029EC 00000000                           4260+         dc a(0)                                                        02-DCCCA
000029F0 0000000000002A5A                   4261+         dc ad(@PER_1960)                                               02-DCCCA
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000029F8 00000000000000D0                   4262+         dc ad(208)                                                     02-DCCCA
00002A00 0000000000000000                   4263+         dc ad(0)                                                       02-DCCCA
00002A08 0000000000001000                   4264+         dc ad(4096)                                                    02-DCCCA
00002A10 20                                 4265+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002A11 03                                 4266+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002A12 03                                 4267+         dc al1(3)                                                      02-DCCCA
00002A13 08                                 4268+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002A14 00                                 4269+         dc bl.8'00000000'                                              02-DCCCA
00002A15 000000                             4270+         dc al3(0)                                                      02-DCCCA
00002A18 00000000000029D4                   4271+         dc ad(@LNAME1960)                                              02-DCCCA
00002A20                                    4272+         ds 0d                                                          02-DCCCA
00002A20 00000000000029E8                   4273+         dc ad($eye0101)                                                02-DCCCA
00002A28 0000000000000000                   4274+         dc ad(0)                                                       02-DCCCA
00002A30                                    4275+         ds    0d                                                       01-DCCPR
00002A30                                    4276+get_hash_table ds 0d                                                    01-DCCPR
00002A30                                    4277+@REGION_1960_1 ds 0h                                                    01-DCCPR
00002A30 EBEC D008 0024          00000008   4278+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A36 E3E0 D088 0004          00000088   4279+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002A3C E3C0 D090 0004          00000090   4280+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002A42 B904 002E                          4281+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002A46 E3B0 C018 0004          00000018   4282+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002A4C A7EB 00D0               000000D0   4283+         aghi  14,208              increase by frame size               01-DCCPR
00002A50 E3E0 C020 0021          00000020   4284+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002A56 4720 B020               00000020   4285+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002A5A                                    4286+@PER_1960 ds   0h                                                       01-DCCPR
00002A5A EBDE 2080 0024          00000080   4287+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002A60 E3C0 2090 0024          00000090   4288+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002A66 B904 00D2                          4289+         lgr   13,2                set real frame pointer               01-DCCPR
00002A6A B904 00CF                          4290+         lgr   12,15               set base reg                         01-DCCPR
                        00002A30            4291+         using @REGION_1960_1,12                                        01-DCCPR
00002A6E B904 0031                          4292          LGR   3,1         ; ptr to parm area
                                            4293 * ******* End of Prologue
                                            4294 * *
                                            4295 * ***      unsigned htsize = 256;
00002A72 A728 0100               00000100   4296          LHI   2,256       ; 256
                                            4297 * ***
                                            4298 * ***      ((!(!((1U << 14) >= 256))) ? (void)0 : __assert(__func__, "\
                                            4299 * C:\\asgkafka\\librdkafka\\src\\snappy.c", 823, "!(!((1U << 14) >= 25\
                                            4300 * 6))"));
                                            4301 * ***      while (htsize < (1U << 14) && htsize < input_size)
00002A76 47F0 C07E               00002AAE   4302          B     @L725
00002A80                                    4303          DS    0D
00002A80 000000D0                           4304 @FRAMESIZE_1960 DC F'208'
00002A84 00000000
00002A88 0000000000000000                   4305 @lit_1960_118 DC AD(__assert)
00002A90 000000000000600E                   4306 @lit_1960_117 DC AD(@strings@)
00002A98 0000000000005B58                   4307 @lit_1960_116 DC AD(@DATA)
00002AA0 00000100                           4308 @lit_1960_122 DC F'256' 0x00000100
00002AA4 D200 2001 2000 00000001 00000000   4309 @lit_1960_124          MVC 1(1,2),0(2)
00002AAA                                    4310 @L724    DS    0H
                                            4311 * ***         htsize <<= 1;
00002AAA 8920 0001               00000001   4312          SLL   2,1(0)
                                                                                                                           Page   88 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002AAE                                    4313 @L725    DS    0H
00002AAE C22F 0000 4000                     4314          CLFI  2,X'00004000'
00002AB4 47B0 C096               00002AC6   4315          BNL   @L726
00002AB8 B916 00F2                          4316          LLGFR 15,2
00002ABC E3F0 3008 0021          00000008   4317          CLG   15,8(0,3)
00002AC2 4740 C07A               00002AAA   4318          BL    @L724
00002AC6                                    4319 @L726    DS    0H
                                            4320 * ***      ((!(!((0) == (htsize & (htsize - 1))))) ? (void)0 : __asser\
                                            4321 * t(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 826, "!(!((0)\
                                            4322 *  == (htsize & (htsize - 1))))"));
00002AC6 18F2                               4323          LR    15,2
00002AC8 A7FA FFFF               0000FFFF   4324          AHI   15,-1
00002ACC 1812                               4325          LR    1,2
00002ACE 141F                               4326          NR    1,15
00002AD0 1211                               4327          LTR   1,1
00002AD2 4780 C0E2               00002B12   4328          BE    @L728
00002AD6                                    4329 @L727    DS    0H
00002AD6 E3F0 C068 0004          00002A98   4330          LG    15,@lit_1960_116
00002ADC 41F0 F216               00000216   4331          LA    15,534(0,15)
00002AE0 E3F0 D0B0 0024          000000B0   4332          STG   15,176(0,13)
00002AE6 E3F0 C060 0004          00002A90   4333          LG    15,@lit_1960_117
00002AEC 4110 F022               00000022   4334          LA    1,34(0,15)
00002AF0 E310 D0B8 0024          000000B8   4335          STG   1,184(0,13)
00002AF6 E548 D0C0 033A          000000C0   4336          MVGHI 192(13),826
00002AFC 41F0 F14E               0000014E   4337          LA    15,334(0,15)
00002B00 E3F0 D0C8 0024          000000C8   4338          STG   15,200(0,13)
00002B06 4110 D0B0               000000B0   4339          LA    1,176(0,13)
00002B0A E3F0 C058 0004          00002A88   4340          LG    15,@lit_1960_118 ; __assert
00002B10                                    4341 @@gen_label158 DS    0H
00002B10 05EF                               4342          BALR  14,15
00002B12                                    4343 @@gen_label159 DS    0H
00002B12                                    4344 @L728    DS    0H
                                            4345 * ***      ((!(!((htsize) <= ((1U << 14))))) ? (void)0 : __assert(__fu\
                                            4346 * nc__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 827, "!(!((htsize) \
                                            4347 * <= ((1U << 14))))"));
00002B12 C22F 0000 4000                     4348          CLFI  2,X'00004000'
00002B18 47D0 C128               00002B58   4349          BNH   @L730
00002B1C                                    4350 @L729    DS    0H
00002B1C E3F0 C068 0004          00002A98   4351          LG    15,@lit_1960_116
00002B22 41F0 F216               00000216   4352          LA    15,534(0,15)
00002B26 E3F0 D0B0 0024          000000B0   4353          STG   15,176(0,13)
00002B2C E3F0 C060 0004          00002A90   4354          LG    15,@lit_1960_117
00002B32 4110 F022               00000022   4355          LA    1,34(0,15)
00002B36 E310 D0B8 0024          000000B8   4356          STG   1,184(0,13)
00002B3C E548 D0C0 033B          000000C0   4357          MVGHI 192(13),827
00002B42 41F0 F174               00000174   4358          LA    15,372(0,15)
00002B46 E3F0 D0C8 0024          000000C8   4359          STG   15,200(0,13)
00002B4C 4110 D0B0               000000B0   4360          LA    1,176(0,13)
00002B50 E3F0 C058 0004          00002A88   4361          LG    15,@lit_1960_118 ; __assert
00002B56                                    4362 @@gen_label161 DS    0H
00002B56 05EF                               4363          BALR  14,15
00002B58                                    4364 @@gen_label162 DS    0H
                                                                                                                           Page   89 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002B58                                    4365 @L730    DS    0H
                                            4366 * ***
                                            4367 * ***      u16 *table;
                                            4368 * ***      table = env->hash_table;
00002B58 E3F0 3000 0004          00000000   4369          LG    15,0(0,3)   ; env
00002B5E E3F0 F000 0004          00000000   4370          LG    15,0(0,15)  ; env
                                            4371 * ***
                                            4372 * ***      *table_size = htsize;
00002B64 E310 3010 0004          00000010   4373          LG    1,16(0,3)   ; table_size
00002B6A 5020 1000               00000000   4374          ST    2,0(0,1)    ; table_size
                                            4375 * ***      __memset(table,0,htsize * sizeof(*table));
00002B6E B916 0012                          4376          LLGFR 1,2
00002B72 B908 0011                          4377          AGR   1,1         ; *0x2
00002B76 B904 002F                          4378          LGR   2,15
00002B7A B902 0011                          4379          LTGR  1,1
00002B7E 4780 C18C               00002BBC   4380          BZ    @@gen_label163
00002B82 9200 2000      00000000 00000000   4381          MVI   0(2),0
00002B86 A71B FFFF               0000FFFF   4382          AGHI  1,-1
00002B8A                                    4383 @@gen_label164 DS 0H
00002B8A B902 0011                          4384          LTGR  1,1
00002B8E 4780 C18C               00002BBC   4385          BZ    @@gen_label163
00002B92 E310 C070 0031          00002AA0   4386          CLGF  1,@lit_1960_122
00002B98 4720 C174               00002BA4   4387          BH    @@gen_label166
00002B9C B904 0031                          4388          LGR   3,1
00002BA0 47F0 C178               00002BA8   4389          B     @@gen_label165
00002BA4                                    4390 @@gen_label166 DS 0H
00002BA4 A739 0100               00000100   4391          LGHI  3,256       ; 256
00002BA8                                    4392 @@gen_label165 DS 0H
00002BA8 B90B 0013                          4393          SLGR  1,3
00002BAC A73B FFFF               0000FFFF   4394          AGHI  3,-1
00002BB0 4430 C074               00002AA4   4395          EX    3,@lit_1960_124
00002BB4 4123 2001               00000001   4396          LA    2,1(3,2)
00002BB8 47F0 C15A               00002B8A   4397          B     @@gen_label164
00002BBC                                    4398 @@gen_label163 DS 0H
                                            4399 * ***      return table;
                                            4400 * ***   }
                                            4401 * * **** Start of Epilogue
                                            4402          DCCEPIL
00002BBC                                    4403+         ds 0h                                                          01-DCCEP
                                            4404+* Epilog
00002BBC D707 D088 D088 00000088 00000088   4405+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002BC2 E3D0 D080 0004          00000080   4406+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002BC8 E3C0 D090 0004          00000090   4407+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002BCE E3B0 C018 0004          00000018   4408+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002BD4 E3C0 B010 0021          00000010   4409+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002BDA E3E0 D008 0004          00000008   4410+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002BE0 EB1C D020 0004          00000020   4411+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002BE6 078E                               4412+         bcr 8,14                if same dsab, just return              01-DCCEP
00002BE8 E3F0 D010 0024          00000010   4413+         stg 15,16(0,13)         save return code                       01-DCCEP
00002BEE E300 D018 0024          00000018   4414+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002BF4 E3F0 D090 0004          00000090   4415+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002BFA E3F0 F018 0004          00000018   4416+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   90 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C00 47F0 F040               00000040   4417+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4418+* End of Epilog
                                            4419 * * **** End of Epilogue
                                            4420          DROP  12
                                            4421 *
                                            4422 *   DSECT for automatic variables in "get_hash_table"
                                            4423 *      (FUNCTION #1960)
                                            4424 *
00000000                00000000 000000AC   4425 @AUTO#get_hash_table DSECT
00000000                                    4426          DS    XL168
000000A8                                    4427 get_hash_table#htsize#0 DS 1F ; htsize
                                            4428 *
00002C04                00000000 00005B58   4429 @CODE    CSECT
                                            4430 *
                                            4431 *
                                            4432 *
                                            4433 * ....... start of find_match_length
00002C04                                    4434 @LNAME1961 DS  0H
00002C04 00000011                           4435          DC    X'00000011'
00002C08 868995846D9481A3                   4436          DC    C'find_match_length'
00002C19 00                                 4437          DC    X'00'
                                            4438 find_match_length DCCPRLG CINDEX=1961,BASER=12,FRAME=208,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1961
                                            4439          macro
                                            4440          dccextrn &m
                                            4441          gblc    &$dccext(1000)
                                            4442          gbla    &$dccexti
                                            4443          lcla    &i
                                            4444 &$dccext(&$dccexti+1) setc    '&m'
                                            4445 &i       seta    1
                                            4446 .loop    aif    (&i gt &$dccexti).around
                                            4447          aif    ('&$dccext(&i)' eq '&m').getout
                                            4448 &i       seta    &i+1
                                            4449          ago     .loop
                                            4450 .around  anop
                                            4451 &$dccexti seta &$dccexti+1
                                            4452          extrn  &m
                                            4453 .getout  anop
                                            4454          mend
00002C20                                    4455+$eye0104    ds    0d                                                    02-DCCCA
00002C20 C4C3C3                             4456+         dc cl3'DCC'                                                    02-DCCCA
00002C23 01                                 4457+         dc xl1'01' format one                                          02-DCCCA
00002C24 00000000                           4458+         dc a(0)                                                        02-DCCCA
00002C28 0000000000002C92                   4459+         dc ad(@PER_1961)                                               02-DCCCA
00002C30 00000000000000D0                   4460+         dc ad(208)                                                     02-DCCCA
00002C38 0000000000000000                   4461+         dc ad(0)                                                       02-DCCCA
00002C40 0000000000001000                   4462+         dc ad(4096)                                                    02-DCCCA
00002C48 20                                 4463+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C49 03                                 4464+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C4A 03                                 4465+         dc al1(3)                                                      02-DCCCA
00002C4B 08                                 4466+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C4C 00                                 4467+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C4D 000000                             4468+         dc al3(0)                                                      02-DCCCA
00002C50 0000000000002C04                   4469+         dc ad(@LNAME1961)                                              02-DCCCA
00002C58                                    4470+         ds 0d                                                          02-DCCCA
00002C58 0000000000002C20                   4471+         dc ad($eye0104)                                                02-DCCCA
00002C60 0000000000000000                   4472+         dc ad(0)                                                       02-DCCCA
00002C68                                    4473+         ds    0d                                                       01-DCCPR
00002C68                                    4474+find_match_length ds 0d                                                 01-DCCPR
00002C68                                    4475+@REGION_1961_1 ds 0h                                                    01-DCCPR
00002C68 EBEC D008 0024          00000008   4476+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C6E E3E0 D088 0004          00000088   4477+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C74 E3C0 D090 0004          00000090   4478+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C7A B904 002E                          4479+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C7E E3B0 C018 0004          00000018   4480+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C84 A7EB 00D0               000000D0   4481+         aghi  14,208              increase by frame size               01-DCCPR
00002C88 E3E0 C020 0021          00000020   4482+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002C8E 4720 B020               00000020   4483+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002C92                                    4484+@PER_1961 ds   0h                                                       01-DCCPR
00002C92 EBDE 2080 0024          00000080   4485+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002C98 E3C0 2090 0024          00000090   4486+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002C9E B904 00D2                          4487+         lgr   13,2                set real frame pointer               01-DCCPR
00002CA2 B904 00CF                          4488+         lgr   12,15               set base reg                         01-DCCPR
                        00002C68            4489+         using @REGION_1961_1,12                                        01-DCCPR
                                            4490 * ******* End of Prologue
                                            4491 * *
00002CA6 E340 1000 0004          00000000   4492          LG    4,0(0,1)    ; s1
00002CAC E320 1008 0004          00000008   4493          LG    2,8(0,1)    ; s2
00002CB2 E350 1010 0004          00000010   4494          LG    5,16(0,1)   ; s2_limit
                                            4495 * ***
                                            4496 * ***      ((!(!((s2_limit) >= (s2)))) ? (void)0 : __assert(__func__, \
                                            4497 * "C:\\asgkafka\\librdkafka\\src\\snappy.c", 900, "!(!((s2_limit) >= (\
                                            4498 * s2)))"));
00002CB8 B920 0052                          4499          CGR   5,2
00002CBC 47B0 C094               00002CFC   4500          BNL   @L732
00002CC0                                    4501 @L731    DS    0H
00002CC0 E3F0 C0B8 0004          00002D20   4502          LG    15,@lit_1961_126
00002CC6 41F0 F226               00000226   4503          LA    15,550(0,15)
00002CCA E3F0 D0B0 0024          000000B0   4504          STG   15,176(0,13)
00002CD0 E3F0 C0B0 0004          00002D18   4505          LG    15,@lit_1961_127
00002CD6 4110 F022               00000022   4506          LA    1,34(0,15)
00002CDA E310 D0B8 0024          000000B8   4507          STG   1,184(0,13)
00002CE0 E548 D0C0 0384          000000C0   4508          MVGHI 192(13),900
00002CE6 41F0 F194               00000194   4509          LA    15,404(0,15)
00002CEA E3F0 D0C8 0024          000000C8   4510          STG   15,200(0,13)
00002CF0 4110 D0B0               000000B0   4511          LA    1,176(0,13)
00002CF4 E3F0 C0A8 0004          00002D10   4512          LG    15,@lit_1961_128 ; __assert
00002CFA                                    4513 @@gen_label168 DS    0H
00002CFA 05EF                               4514          BALR  14,15
00002CFC                                    4515 @@gen_label169 DS    0H
00002CFC                                    4516 @L732    DS    0H
                                            4517 * ***      int matched = 0;
00002CFC A738 0000               00000000   4518          LHI   3,0         ; 0
                                            4519 * ***
                                                                                                                           Page   92 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4520 * ***      while (s2 <= s2_limit - 4 &&
00002D00 47F0 C0E0               00002D48   4521          B     @L736
00002D08                                    4522          DS    0D
00002D08 000000D0                           4523 @FRAMESIZE_1961 DC F'208'
00002D0C 00000000
00002D10 0000000000000000                   4524 @lit_1961_128 DC AD(__assert)
00002D18 000000000000600E                   4525 @lit_1961_127 DC AD(@strings@)
00002D20 0000000000005B58                   4526 @lit_1961_126 DC AD(@DATA)
00002D28 00000000000003D0                   4527 @lit_1961_131 DC AD(get_unaligned32)
00002D30 0000000000000798                   4528 @lit_1961_133 DC AD(is_little_endian)
00002D38 00000000000008B0                   4529 @lit_1961_137 DC AD(find_lsb_set_non_zero)
00002D40                                    4530 @L735    DS    0H
                                            4531 * ***         s2 += 4;
00002D40 4120 2004               00000004   4532          LA    2,4(0,2)
                                            4533 * ***         matched += 4;
00002D44 A73A 0004               00000004   4534          AHI   3,4
                                            4535 * ***      }
00002D48                                    4536 @L736    DS    0H
00002D48 A769 FFFC               0000FFFC   4537          LGHI  6,-4        ; -4
00002D4C 41F6 5000               00000000   4538          LA    15,0(6,5)
00002D50 B920 002F                          4539          CGR   2,15
00002D54 4720 C126               00002D8E   4540          BH    @L737
                                            4541 * ***             get_unaligned32((u32 *)(s2)) == get_unaligned32((u32\
                                            4542 *  *)(s1 + matched))) {
00002D58 E320 D0B0 0024          000000B0   4543          STG   2,176(0,13)
00002D5E 4110 D0B0               000000B0   4544          LA    1,176(0,13)
00002D62 E370 C0C0 0004          00002D28   4545          LG    7,@lit_1961_131 ; get_unaligned32
00002D68 B904 00F7                          4546          LGR   15,7
00002D6C                                    4547 @@gen_label171 DS    0H
00002D6C 05EF                               4548          BALR  14,15
00002D6E                                    4549 @@gen_label172 DS    0H
00002D6E 188F                               4550          LR    8,15
00002D70 B914 00F3                          4551          LGFR  15,3
00002D74 41FF 4000               00000000   4552          LA    15,0(15,4)
00002D78 E3F0 D0B0 0024          000000B0   4553          STG   15,176(0,13)
00002D7E 4110 D0B0               000000B0   4554          LA    1,176(0,13)
00002D82 B904 00F7                          4555          LGR   15,7
00002D86                                    4556 @@gen_label173 DS    0H
00002D86 05EF                               4557          BALR  14,15
00002D88                                    4558 @@gen_label174 DS    0H
00002D88 158F                               4559          CLR   8,15
00002D8A 4780 C0D8               00002D40   4560          BE    @L735
00002D8E                                    4561 @L737    DS    0H
                                            4562 * ***      if (is_little_endian() && s2 <= s2_limit - 4) {
00002D8E E3F0 C0C8 0004          00002D30   4563          LG    15,@lit_1961_133 ; is_little_endian
00002D94                                    4564 @@gen_label176 DS    0H
00002D94 05EF                               4565          BALR  14,15
00002D96                                    4566 @@gen_label177 DS    0H
00002D96 C0FB 0000 00FF                     4567          NILF  15,X'000000FF'
00002D9C 12FF                               4568          LTR   15,15
00002D9E 4780 C1A0               00002E08   4569          BZ    @L743
00002DA2 41F6 5000               00000000   4570          LA    15,0(6,5)
                                                                                                                           Page   93 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002DA6 B920 002F                          4571          CGR   2,15
00002DAA 4720 C1A0               00002E08   4572          BH    @L743
                                            4573 * ***         u32 x =
                                            4574 * ***             get_unaligned32((u32 *)(s2)) ^ get_unaligned32((u32 \
                                            4575 * *)(s1 + matched));
00002DAE E320 D0B0 0024          000000B0   4576          STG   2,176(0,13)
00002DB4 4110 D0B0               000000B0   4577          LA    1,176(0,13)
00002DB8 E320 C0C0 0004          00002D28   4578          LG    2,@lit_1961_131 ; get_unaligned32
00002DBE B904 00F2                          4579          LGR   15,2
00002DC2                                    4580 @@gen_label180 DS    0H
00002DC2 05EF                               4581          BALR  14,15
00002DC4                                    4582 @@gen_label181 DS    0H
00002DC4 185F                               4583          LR    5,15
00002DC6 B914 00F3                          4584          LGFR  15,3
00002DCA 41FF 4000               00000000   4585          LA    15,0(15,4)
00002DCE E3F0 D0B0 0024          000000B0   4586          STG   15,176(0,13)
00002DD4 4110 D0B0               000000B0   4587          LA    1,176(0,13)
00002DD8 B904 00F2                          4588          LGR   15,2
00002DDC                                    4589 @@gen_label182 DS    0H
00002DDC 05EF                               4590          BALR  14,15
00002DDE                                    4591 @@gen_label183 DS    0H
00002DDE 175F                               4592          XR    5,15
                                            4593 * ***         int matching_bits = find_lsb_set_non_zero(x);
00002DE0 B916 00F5                          4594          LLGFR 15,5
00002DE4 E3F0 D0B0 0024          000000B0   4595          STG   15,176(0,13)
00002DEA 4110 D0B0               000000B0   4596          LA    1,176(0,13)
00002DEE E3F0 C0D0 0004          00002D38   4597          LG    15,@lit_1961_137 ; find_lsb_set_non_zero
00002DF4                                    4598 @@gen_label184 DS    0H
00002DF4 05EF                               4599          BALR  14,15
00002DF6                                    4600 @@gen_label185 DS    0H
                                            4601 * ***         matched += matching_bits >> 3;
00002DF6 8AF0 0003               00000003   4602          SRA   15,3(0)
00002DFA 1A3F                               4603          AR    3,15
                                            4604 * ***      } else {
00002DFC 47F0 C1BE               00002E26   4605          B     @L739
                                            4606 * ***         while ((s2 < s2_limit) && (s1[matched] == *s2)) {
00002E00                                    4607 @L742    DS    0H
                                            4608 * ***            ++s2;
00002E00 4120 2001               00000001   4609          LA    2,1(0,2)
                                            4610 * ***            ++matched;
00002E04 A73A 0001               00000001   4611          AHI   3,1
                                            4612 * ***         }
00002E08                                    4613 @L743    DS    0H
00002E08 B920 0025                          4614          CGR   2,5
00002E0C 47B0 C1BE               00002E26   4615          BNL   @L739
00002E10 B914 00F3                          4616          LGFR  15,3
00002E14 41FF 4000               00000000   4617          LA    15,0(15,4)
00002E18 D500 F000 2000 00000000 00000000   4618          CLC   0(1,15),0(2)
00002E1E 4770 C1BE               00002E26   4619          BNE   @L739
00002E22 47F0 C198               00002E00   4620          B     @L742
                                            4621 * ***      }
00002E26                                    4622 @L739    DS    0H
                                                                                                                           Page   94 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4623 * ***      return matched;
00002E26 B914 00F3                          4624          LGFR  15,3
                                            4625 * ***   }
                                            4626 * * **** Start of Epilogue
                                            4627          DCCEPIL
00002E2A                                    4628+         ds 0h                                                          01-DCCEP
                                            4629+* Epilog
00002E2A D707 D088 D088 00000088 00000088   4630+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E30 E3D0 D080 0004          00000080   4631+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E36 E3C0 D090 0004          00000090   4632+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E3C E3B0 C018 0004          00000018   4633+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E42 E3C0 B010 0021          00000010   4634+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E48 E3E0 D008 0004          00000008   4635+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E4E EB1C D020 0004          00000020   4636+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E54 078E                               4637+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E56 E3F0 D010 0024          00000010   4638+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E5C E300 D018 0024          00000018   4639+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E62 E3F0 D090 0004          00000090   4640+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E68 E3F0 F018 0004          00000018   4641+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E6E 47F0 F040               00000040   4642+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4643+* End of Epilog
                                            4644 * * **** End of Epilogue
                                            4645          DROP  12
                                            4646 *
                                            4647 *   DSECT for automatic variables in "find_match_length"
                                            4648 *      (FUNCTION #1961)
                                            4649 *
00000000                00000000 000000AC   4650 @AUTO#find_match_length DSECT
00000000                                    4651          DS    XL168
000000A8                                    4652 find_match_length#matching_bits#2 DS 1F ; matching_bits
000000AC                000000AC 000000A8   4653          ORG   @AUTO#find_match_length+168
000000A8                                    4654 find_match_length#x#2 DS 1F ; x
000000AC                000000AC 000000A8   4655          ORG   @AUTO#find_match_length+168
000000A8                                    4656 find_match_length#matched#0 DS 1F ; matched
                                            4657 *
00002E72                00000000 00005B58   4658 @CODE    CSECT
                                            4659 *
                                            4660 *
                                            4661 *
                                            4662 * ....... start of get_eight_bytes_at
00002E72                                    4663 @LNAME1962 DS  0H
00002E72 00000012                           4664          DC    X'00000012'
00002E76 8785A36D85898788                   4665          DC    C'get_eight_bytes_at'
00002E88 00                                 4666          DC    X'00'
                                            4667 get_eight_bytes_at DCCPRLG CINDEX=1962,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1962
                                            4668          macro
                                            4669          dccextrn &m
                                            4670          gblc    &$dccext(1000)
                                            4671          gbla    &$dccexti
                                            4672          lcla    &i
                                            4673 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   95 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4674 &i       seta    1
                                            4675 .loop    aif    (&i gt &$dccexti).around
                                            4676          aif    ('&$dccext(&i)' eq '&m').getout
                                            4677 &i       seta    &i+1
                                            4678          ago     .loop
                                            4679 .around  anop
                                            4680 &$dccexti seta &$dccexti+1
                                            4681          extrn  &m
                                            4682 .getout  anop
                                            4683          mend
00002E90                                    4684+$eye0107    ds    0d                                                    02-DCCCA
00002E90 C4C3C3                             4685+         dc cl3'DCC'                                                    02-DCCCA
00002E93 01                                 4686+         dc xl1'01' format one                                          02-DCCCA
00002E94 00000000                           4687+         dc a(0)                                                        02-DCCCA
00002E98 0000000000000000                   4688+         dc ad(0)                                                       02-DCCCA
00002EA0 00000000000000A8                   4689+         dc ad(168)                                                     02-DCCCA
00002EA8 0000000000000000                   4690+         dc ad(0)                                                       02-DCCCA
00002EB0 0000000000001000                   4691+         dc ad(4096)                                                    02-DCCCA
00002EB8 20                                 4692+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002EB9 03                                 4693+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002EBA 03                                 4694+         dc al1(3)                                                      02-DCCCA
00002EBB 08                                 4695+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002EBC 00                                 4696+         dc bl.8'00000000'                                              02-DCCCA
00002EBD 000000                             4697+         dc al3(0)                                                      02-DCCCA
00002EC0 0000000000002E72                   4698+         dc ad(@LNAME1962)                                              02-DCCCA
00002EC8                                    4699+         ds 0d                                                          02-DCCCA
00002EC8 0000000000002E90                   4700+         dc ad($eye0107)                                                02-DCCCA
00002ED0 0000000000000000                   4701+         dc ad(0)                                                       02-DCCCA
00002ED8                                    4702+         ds    0d                                                       01-DCCPR
00002ED8                                    4703+get_eight_bytes_at ds 0d                                                01-DCCPR
00002ED8                                    4704+@REGION_1962_1 ds 0h                                                    01-DCCPR
00002ED8 EBEC D008 0024          00000008   4705+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            4706 * ******* End of Prologue
                                            4707 * *
                                            4708 * ***      return ptr;
00002EDE E3F0 1000 0004          00000000   4709          LG    15,0(0,1)   ; ptr
                                            4710 * ***   }
                                            4711 * * **** Start of Epilogue
                                            4712          DCCEPIL
00002EE4                                    4713+         ds 0h                                                          01-DCCEP
                                            4714+* Epilog
                                            4715+* Epilog
00002EE4 E3E0 D008 0004          00000008   4716+         lg    14,8(,13) restore the reg                                01-DCCEP
00002EEA EB1C D020 0004          00000020   4717+         lmg   1,12,32(13)                                              01-DCCEP
00002EF0 07FE                               4718+         br   14                                                        01-DCCEP
                                            4719+* End of Epilog
                                            4720 * * **** End of Epilogue
                                            4721 *
                                            4722 *   DSECT for automatic variables in "get_eight_bytes_at"
                                            4723 *      (FUNCTION #1962)
                                            4724 *
00000000                00000000 000000A8   4725 @AUTO#get_eight_bytes_at DSECT
                                                                                                                           Page   96 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    4726          DS    XL168
                                            4727 *
00002EF2                00000000 00005B58   4728 @CODE    CSECT
                                            4729 *
                                            4730 *
                                            4731 *
                                            4732 * ....... start of get_u32_at_offset
00002EF2                                    4733 @LNAME1963 DS  0H
00002EF2 00000011                           4734          DC    X'00000011'
00002EF6 8785A36DA4F3F26D                   4735          DC    C'get_u32_at_offset'
00002F07 00                                 4736          DC    X'00'
                                            4737 get_u32_at_offset DCCPRLG CINDEX=1963,BASER=12,FRAME=200,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1963
                                            4738          macro
                                            4739          dccextrn &m
                                            4740          gblc    &$dccext(1000)
                                            4741          gbla    &$dccexti
                                            4742          lcla    &i
                                            4743 &$dccext(&$dccexti+1) setc    '&m'
                                            4744 &i       seta    1
                                            4745 .loop    aif    (&i gt &$dccexti).around
                                            4746          aif    ('&$dccext(&i)' eq '&m').getout
                                            4747 &i       seta    &i+1
                                            4748          ago     .loop
                                            4749 .around  anop
                                            4750 &$dccexti seta &$dccexti+1
                                            4751          extrn  &m
                                            4752 .getout  anop
                                            4753          mend
00002F08                                    4754+$eye0110    ds    0d                                                    02-DCCCA
00002F08 C4C3C3                             4755+         dc cl3'DCC'                                                    02-DCCCA
00002F0B 01                                 4756+         dc xl1'01' format one                                          02-DCCCA
00002F0C 00000000                           4757+         dc a(0)                                                        02-DCCCA
00002F10 0000000000002F7A                   4758+         dc ad(@PER_1963)                                               02-DCCCA
00002F18 00000000000000C8                   4759+         dc ad(200)                                                     02-DCCCA
00002F20 0000000000000000                   4760+         dc ad(0)                                                       02-DCCCA
00002F28 0000000000001000                   4761+         dc ad(4096)                                                    02-DCCCA
00002F30 20                                 4762+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002F31 03                                 4763+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002F32 03                                 4764+         dc al1(3)                                                      02-DCCCA
00002F33 08                                 4765+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002F34 00                                 4766+         dc bl.8'00000000'                                              02-DCCCA
00002F35 000000                             4767+         dc al3(0)                                                      02-DCCCA
00002F38 0000000000002EF2                   4768+         dc ad(@LNAME1963)                                              02-DCCCA
00002F40                                    4769+         ds 0d                                                          02-DCCCA
00002F40 0000000000002F08                   4770+         dc ad($eye0110)                                                02-DCCCA
00002F48 0000000000000000                   4771+         dc ad(0)                                                       02-DCCCA
00002F50                                    4772+         ds    0d                                                       01-DCCPR
00002F50                                    4773+get_u32_at_offset ds 0d                                                 01-DCCPR
00002F50                                    4774+@REGION_1963_1 ds 0h                                                    01-DCCPR
00002F50 EBEC D008 0024          00000008   4775+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002F56 E3E0 D088 0004          00000088   4776+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   97 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002F5C E3C0 D090 0004          00000090   4777+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F62 B904 002E                          4778+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F66 E3B0 C018 0004          00000018   4779+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F6C A7EB 00C8               000000C8   4780+         aghi  14,200              increase by frame size               01-DCCPR
00002F70 E3E0 C020 0021          00000020   4781+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F76 4720 B020               00000020   4782+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F7A                                    4783+@PER_1963 ds   0h                                                       01-DCCPR
00002F7A EBDE 2080 0024          00000080   4784+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F80 E3C0 2090 0024          00000090   4785+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F86 B904 00D2                          4786+         lgr   13,2                set real frame pointer               01-DCCPR
00002F8A B904 00CF                          4787+         lgr   12,15               set base reg                         01-DCCPR
                        00002F50            4788+         using @REGION_1963_1,12                                        01-DCCPR
00002F8E B904 0031                          4789          LGR   3,1         ; ptr to parm area
                                            4790 * ******* End of Prologue
                                            4791 * *
                                            4792 * ***      ((!(!((offset) >= (0)))) ? (void)0 : __assert(__func__, "C:\
                                            4793 * \\asgkafka\\librdkafka\\src\\snappy.c", 965, "!(!((offset) >= (0)))"\
                                            4794 * ));
00002F92 E320 300C 0012          0000000C   4795          LT    2,12(0,3)   ; offset
00002F98 47B0 C088               00002FD8   4796          BNL   @L746
00002F9C                                    4797 @L745    DS    0H
00002F9C E3F0 C150 0004          000030A0   4798          LG    15,@lit_1963_139
00002FA2 41F0 F238               00000238   4799          LA    15,568(0,15)
00002FA6 E3F0 D0A8 0024          000000A8   4800          STG   15,168(0,13)
00002FAC E3F0 C148 0004          00003098   4801          LG    15,@lit_1963_140
00002FB2 4110 F022               00000022   4802          LA    1,34(0,15)
00002FB6 E310 D0B0 0024          000000B0   4803          STG   1,176(0,13)
00002FBC E548 D0B8 03C5          000000B8   4804          MVGHI 184(13),965
00002FC2 41F0 F1AE               000001AE   4805          LA    15,430(0,15)
00002FC6 E3F0 D0C0 0024          000000C0   4806          STG   15,192(0,13)
00002FCC 4110 D0A8               000000A8   4807          LA    1,168(0,13)
00002FD0 E3F0 C140 0004          00003090   4808          LG    15,@lit_1963_141 ; __assert
00002FD6                                    4809 @@gen_label189 DS    0H
00002FD6 05EF                               4810          BALR  14,15
00002FD8                                    4811 @@gen_label190 DS    0H
00002FD8                                    4812 @L746    DS    0H
                                            4813 * ***      ((!(!((offset) <= (4)))) ? (void)0 : __assert(__func__, "C:\
                                            4814 * \\asgkafka\\librdkafka\\src\\snappy.c", 966, "!(!((offset) <= (4)))"\
                                            4815 * ));
00002FD8 A72E 0004               00000004   4816          CHI   2,4
00002FDC 47D0 C0CC               0000301C   4817          BNH   @L748
00002FE0                                    4818 @L747    DS    0H
00002FE0 E3F0 C150 0004          000030A0   4819          LG    15,@lit_1963_139
00002FE6 41F0 F238               00000238   4820          LA    15,568(0,15)
00002FEA E3F0 D0A8 0024          000000A8   4821          STG   15,168(0,13)
00002FF0 E3F0 C148 0004          00003098   4822          LG    15,@lit_1963_140
00002FF6 4110 F022               00000022   4823          LA    1,34(0,15)
00002FFA E310 D0B0 0024          000000B0   4824          STG   1,176(0,13)
00003000 E548 D0B8 03C6          000000B8   4825          MVGHI 184(13),966
00003006 41F0 F1C4               000001C4   4826          LA    15,452(0,15)
0000300A E3F0 D0C0 0024          000000C0   4827          STG   15,192(0,13)
00003010 4110 D0A8               000000A8   4828          LA    1,168(0,13)
                                                                                                                           Page   98 
  Active Usings: @REGION_1963_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003014 E3F0 C140 0004          00003090   4829          LG    15,@lit_1963_141 ; __assert
0000301A                                    4830 @@gen_label192 DS    0H
0000301A 05EF                               4831          BALR  14,15
0000301C                                    4832 @@gen_label193 DS    0H
0000301C                                    4833 @L748    DS    0H
                                            4834 * ***      return get_unaligned32((u32 *)(v + offset));
0000301C E3F0 3000 0004          00000000   4835          LG    15,0(0,3)   ; v
00003022 B914 0012                          4836          LGFR  1,2
00003026 41F1 F000               00000000   4837          LA    15,0(1,15)
0000302A E3F0 D0A8 0024          000000A8   4838          STG   15,168(0,13)
00003030 4110 D0A8               000000A8   4839          LA    1,168(0,13)
00003034 E3F0 C158 0004          000030A8   4840          LG    15,@lit_1963_145 ; get_unaligned32
0000303A                                    4841 @@gen_label194 DS    0H
0000303A 05EF                               4842          BALR  14,15
0000303C                                    4843 @@gen_label195 DS    0H
0000303C B916 00FF                          4844          LLGFR 15,15
                                            4845 * ***   }
                                            4846 * * **** Start of Epilogue
                                            4847          DCCEPIL
00003040                                    4848+         ds 0h                                                          01-DCCEP
                                            4849+* Epilog
00003040 D707 D088 D088 00000088 00000088   4850+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003046 E3D0 D080 0004          00000080   4851+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000304C E3C0 D090 0004          00000090   4852+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003052 E3B0 C018 0004          00000018   4853+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003058 E3C0 B010 0021          00000010   4854+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000305E E3E0 D008 0004          00000008   4855+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003064 EB1C D020 0004          00000020   4856+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000306A 078E                               4857+         bcr 8,14                if same dsab, just return              01-DCCEP
0000306C E3F0 D010 0024          00000010   4858+         stg 15,16(0,13)         save return code                       01-DCCEP
00003072 E300 D018 0024          00000018   4859+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003078 E3F0 D090 0004          00000090   4860+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000307E E3F0 F018 0004          00000018   4861+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003084 47F0 F040               00000040   4862+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4863+* End of Epilog
                                            4864 * * **** End of Epilogue
00003088                                    4865          DS    0D
00003088 000000C8                           4866 @FRAMESIZE_1963 DC F'200'
0000308C 00000000
00003090 0000000000000000                   4867 @lit_1963_141 DC AD(__assert)
00003098 000000000000600E                   4868 @lit_1963_140 DC AD(@strings@)
000030A0 0000000000005B58                   4869 @lit_1963_139 DC AD(@DATA)
000030A8 00000000000003D0                   4870 @lit_1963_145 DC AD(get_unaligned32)
                                            4871          DROP  12
                                            4872 *
                                            4873 *   DSECT for automatic variables in "get_u32_at_offset"
                                            4874 *      (FUNCTION #1963)
                                            4875 *
00000000                00000000 000000A8   4876 @AUTO#get_u32_at_offset DSECT
00000000                                    4877          DS    XL168
                                            4878 *
000030B0                00000000 00005B58   4879 @CODE    CSECT
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4880 *
                                            4881 *
                                            4882 *
                                            4883 * ....... start of compress_fragment
000030B0                                    4884 @LNAME1964 DS  0H
000030B0 00000011                           4885          DC    X'00000011'
000030B4 839694979985A2A2                   4886          DC    C'compress_fragment'
000030C5 00                                 4887          DC    X'00'
                                            4888 compress_fragment DCCPRLG CINDEX=1964,BASER=12,FRAME=224,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1964
                                            4889          macro
                                            4890          dccextrn &m
                                            4891          gblc    &$dccext(1000)
                                            4892          gbla    &$dccexti
                                            4893          lcla    &i
                                            4894 &$dccext(&$dccexti+1) setc    '&m'
                                            4895 &i       seta    1
                                            4896 .loop    aif    (&i gt &$dccexti).around
                                            4897          aif    ('&$dccext(&i)' eq '&m').getout
                                            4898 &i       seta    &i+1
                                            4899          ago     .loop
                                            4900 .around  anop
                                            4901 &$dccexti seta &$dccexti+1
                                            4902          extrn  &m
                                            4903 .getout  anop
                                            4904          mend
000030C8                                    4905+$eye0113    ds    0d                                                    02-DCCCA
000030C8 C4C3C3                             4906+         dc cl3'DCC'                                                    02-DCCCA
000030CB 01                                 4907+         dc xl1'01' format one                                          02-DCCCA
000030CC 00000000                           4908+         dc a(0)                                                        02-DCCCA
000030D0 000000000000313A                   4909+         dc ad(@PER_1964)                                               02-DCCCA
000030D8 00000000000000E0                   4910+         dc ad(224)                                                     02-DCCCA
000030E0 0000000000000000                   4911+         dc ad(0)                                                       02-DCCCA
000030E8 0000000000001000                   4912+         dc ad(4096)                                                    02-DCCCA
000030F0 20                                 4913+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000030F1 03                                 4914+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000030F2 03                                 4915+         dc al1(3)                                                      02-DCCCA
000030F3 08                                 4916+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000030F4 00                                 4917+         dc bl.8'00000000'                                              02-DCCCA
000030F5 000000                             4918+         dc al3(0)                                                      02-DCCCA
000030F8 00000000000030B0                   4919+         dc ad(@LNAME1964)                                              02-DCCCA
00003100                                    4920+         ds 0d                                                          02-DCCCA
00003100 00000000000030C8                   4921+         dc ad($eye0113)                                                02-DCCCA
00003108 0000000000000000                   4922+         dc ad(0)                                                       02-DCCCA
00003110                                    4923+         ds    0d                                                       01-DCCPR
00003110                                    4924+compress_fragment ds 0d                                                 01-DCCPR
00003110                                    4925+@REGION_1964_1 ds 0h                                                    01-DCCPR
00003110 EBEC D008 0024          00000008   4926+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003116 E3E0 D088 0004          00000088   4927+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000311C E3C0 D090 0004          00000090   4928+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003122 B904 002E                          4929+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003126 E3B0 C018 0004          00000018   4930+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000312C A7EB 00E0               000000E0   4931+         aghi  14,224              increase by frame size               01-DCCPR
00003130 E3E0 C020 0021          00000020   4932+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003136 4720 B020               00000020   4933+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000313A                                    4934+@PER_1964 ds   0h                                                       01-DCCPR
0000313A EBDE 2080 0024          00000080   4935+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003140 E3C0 2090 0024          00000090   4936+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003146 B904 00D2                          4937+         lgr   13,2                set real frame pointer               01-DCCPR
0000314A B904 00CF                          4938+         lgr   12,15               set base reg                         01-DCCPR
                        00003110            4939+         using @REGION_1964_1,12                                        01-DCCPR
                                            4940 * ******* End of Prologue
                                            4941 * *
0000314E E320 1000 0004          00000000   4942          LG    2,0(0,1)    ; input
00003154 E360 1008 0004          00000008   4943          LG    6,8(0,1)    ; input_size
0000315A E340 1010 0004          00000010   4944          LG    4,16(0,1)   ; op
00003160 E380 1018 0004          00000018   4945          LG    8,24(0,1)   ; table
00003166 5830 1024               00000024   4946          L     3,36(0,1)   ; table_size
                                            4947 * ***
                                            4948 * ***      const char *ip = input;
                                            4949 * ***      ((!(!((input_size) <= ((1 << 16))))) ? (void)0 : __assert(_\
                                            4950 * _func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 991, "!(!((input\
                                            4951 * _size) <= ((1 << 16))))"));
0000316A C26E 0001 0000                     4952          CLGFI 6,X'00010000'
00003170 47D0 C0A0               000031B0   4953          BNH   @L750
00003174                                    4954 @L749    DS    0H
00003174 E3F0 C2A8 0004          000033B8   4955          LG    15,@lit_1964_147
0000317A 41F0 F24A               0000024A   4956          LA    15,586(0,15)
0000317E E3F0 D0B0 0024          000000B0   4957          STG   15,176(0,13)
00003184 E3F0 C2A0 0004          000033B0   4958          LG    15,@lit_1964_148
0000318A 4110 F022               00000022   4959          LA    1,34(0,15)
0000318E E310 D0B8 0024          000000B8   4960          STG   1,184(0,13)
00003194 E548 D0C0 03DF          000000C0   4961          MVGHI 192(13),991
0000319A 41F0 F1DA               000001DA   4962          LA    15,474(0,15)
0000319E E3F0 D0C8 0024          000000C8   4963          STG   15,200(0,13)
000031A4 4110 D0B0               000000B0   4964          LA    1,176(0,13)
000031A8 E3F0 C298 0004          000033A8   4965          LG    15,@lit_1964_149 ; __assert
000031AE                                    4966 @@gen_label197 DS    0H
000031AE 05EF                               4967          BALR  14,15
000031B0                                    4968 @@gen_label198 DS    0H
000031B0                                    4969 @L750    DS    0H
                                            4970 * ***      ((!(!((table_size & (table_size - 1)) == (0)))) ? (void)0 :\
                                            4971 *  __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 992, \
                                            4972 * "!(!((table_size & (table_size - 1)) == (0)))"));
000031B0 18F3                               4973          LR    15,3
000031B2 A7FA FFFF               0000FFFF   4974          AHI   15,-1
000031B6 1813                               4975          LR    1,3
000031B8 141F                               4976          NR    1,15
000031BA 1211                               4977          LTR   1,1
000031BC 4780 C0EC               000031FC   4978          BE    @L752
000031C0                                    4979 @L751    DS    0H
000031C0 E3F0 C2A8 0004          000033B8   4980          LG    15,@lit_1964_147
000031C6 41F0 F24A               0000024A   4981          LA    15,586(0,15)
000031CA E3F0 D0B0 0024          000000B0   4982          STG   15,176(0,13)
                                                                                                                           Page  101 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000031D0 E3F0 C2A0 0004          000033B0   4983          LG    15,@lit_1964_148
000031D6 4110 F022               00000022   4984          LA    1,34(0,15)
000031DA E310 D0B8 0024          000000B8   4985          STG   1,184(0,13)
000031E0 E548 D0C0 03E0          000000C0   4986          MVGHI 192(13),992
000031E6 41F0 F1FC               000001FC   4987          LA    15,508(0,15)
000031EA E3F0 D0C8 0024          000000C8   4988          STG   15,200(0,13)
000031F0 4110 D0B0               000000B0   4989          LA    1,176(0,13)
000031F4 E3F0 C298 0004          000033A8   4990          LG    15,@lit_1964_149 ; __assert
000031FA                                    4991 @@gen_label200 DS    0H
000031FA 05EF                               4992          BALR  14,15
000031FC                                    4993 @@gen_label201 DS    0H
000031FC                                    4994 @L752    DS    0H
                                            4995 * ***      const int shift = 32 - log2_floor(table_size);
000031FC B916 00F3                          4996          LLGFR 15,3
00003200 E3F0 D0B0 0024          000000B0   4997          STG   15,176(0,13)
00003206 4110 D0B0               000000B0   4998          LA    1,176(0,13)
0000320A E3F0 C2B0 0004          000033C0   4999          LG    15,@lit_1964_153 ; log2_floor
00003210                                    5000 @@gen_label202 DS    0H
00003210 05EF                               5001          BALR  14,15
00003212                                    5002 @@gen_label203 DS    0H
00003212 A778 0020               00000020   5003          LHI   7,32        ; 32
00003216 1B7F                               5004          SR    7,15
                                            5005 * ***      ((!(!((0xffffffffU >> shift) == (table_size - 1)))) ? (void\
                                            5006 * )0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 9\
                                            5007 * 94, "!(!((0xffffffffU >> shift) == (table_size - 1)))"));
00003218 A7F8 FFFF               0000FFFF   5008          LHI   15,-1       ; -1
0000321C 88F0 7000               00000000   5009          SRL   15,0(7)
00003220 A73A FFFF               0000FFFF   5010          AHI   3,-1
00003224 15F3                               5011          CLR   15,3
00003226 4780 C156               00003266   5012          BE    @L754
0000322A                                    5013 @L753    DS    0H
0000322A E3F0 C2A8 0004          000033B8   5014          LG    15,@lit_1964_147
00003230 41F0 F24A               0000024A   5015          LA    15,586(0,15)
00003234 E3F0 D0B0 0024          000000B0   5016          STG   15,176(0,13)
0000323A E3F0 C2A0 0004          000033B0   5017          LG    15,@lit_1964_148
00003240 4110 F022               00000022   5018          LA    1,34(0,15)
00003244 E310 D0B8 0024          000000B8   5019          STG   1,184(0,13)
0000324A E548 D0C0 03E2          000000C0   5020          MVGHI 192(13),994
00003250 41F0 F22A               0000022A   5021          LA    15,554(0,15)
00003254 E3F0 D0C8 0024          000000C8   5022          STG   15,200(0,13)
0000325A 4110 D0B0               000000B0   5023          LA    1,176(0,13)
0000325E E3F0 C298 0004          000033A8   5024          LG    15,@lit_1964_149 ; __assert
00003264                                    5025 @@gen_label205 DS    0H
00003264 05EF                               5026          BALR  14,15
00003266                                    5027 @@gen_label206 DS    0H
00003266                                    5028 @L754    DS    0H
                                            5029 * ***      const char *ip_end = input + input_size;
00003266 41A6 2000               00000000   5030          LA    10,0(6,2)
                                            5031 * ***      const char *baseip = ip;
0000326A B904 0052                          5032          LGR   5,2         ; baseip
                                            5033 * ***
                                            5034 * ***
                                                                                                                           Page  102 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5035 * ***
                                            5036 * ***
                                            5037 * ***      const char *next_emit = ip;
0000326E B904 0032                          5038          LGR   3,2         ; next_emit
                                            5039 * ***
                                            5040 * ***      const unsigned kinput_margin_bytes = 15;
00003272 A7F8 000F               0000000F   5041          LHI   15,15       ; 15
                                            5042 * ***
                                            5043 * ***      if (((input_size >= kinput_margin_bytes))) {
00003276 B931 006F                          5044          CLGFR 6,15
0000327A 4740 C6B8               000037C8   5045          BL    @_emit_remainder@1964@1
                                            5046 * ***         const char *const ip_limit = input + input_size -
                                            5047 * ***            kinput_margin_bytes;
0000327E 4116 2000               00000000   5048          LA    1,0(6,2)
00003282 B916 00FF                          5049          LLGFR 15,15
00003286 B909 001F                          5050          SGR   1,15
0000328A E310 D0D8 0024          000000D8   5051          STG   1,216(0,13) ; spill
                                            5052 * ***
                                            5053 * ***         u32 next_hash;
                                            5054 * ***         for (next_hash = hash(++ip, shift);;) {
00003290 B904 00F2                          5055          LGR   15,2
00003294 4120 2001               00000001   5056          LA    2,1(0,2)
00003298 41F0 F001               00000001   5057          LA    15,1(0,15)
0000329C E3F0 D0B0 0024          000000B0   5058          STG   15,176(0,13)
000032A2 B914 00F7                          5059          LGFR  15,7
000032A6 E3F0 D0B8 0024          000000B8   5060          STG   15,184(0,13)
000032AC 4110 D0B0               000000B0   5061          LA    1,176(0,13)
000032B0 E3F0 C2B8 0004          000033C8   5062          LG    15,@lit_1964_160 ; hash
000032B6                                    5063 @@gen_label208 DS    0H
000032B6 05EF                               5064          BALR  14,15
000032B8                                    5065 @@gen_label209 DS    0H
000032B8 189F                               5066          LR    9,15        ; next_hash
000032BA                                    5067 @L756    DS    0H
                                            5068 * ***            ((!(!((next_emit) < (ip)))) ? (void)0 : __assert(__fu\
                                            5069 * nc__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1011, "!(!((next_em\
                                            5070 * it) < (ip)))"));
000032BA B920 0032                          5071          CGR   3,2
000032BE 4740 C1EE               000032FE   5072          BL    @L760
000032C2                                    5073 @L759    DS    0H
000032C2 E3F0 C2A8 0004          000033B8   5074          LG    15,@lit_1964_147
000032C8 41F0 F24A               0000024A   5075          LA    15,586(0,15)
000032CC E3F0 D0B0 0024          000000B0   5076          STG   15,176(0,13)
000032D2 E3F0 C2A0 0004          000033B0   5077          LG    15,@lit_1964_148
000032D8 4110 F022               00000022   5078          LA    1,34(0,15)
000032DC E310 D0B8 0024          000000B8   5079          STG   1,184(0,13)
000032E2 E548 D0C0 03F3          000000C0   5080          MVGHI 192(13),1011
000032E8 41F0 F25C               0000025C   5081          LA    15,604(0,15)
000032EC E3F0 D0C8 0024          000000C8   5082          STG   15,200(0,13)
000032F2 4110 D0B0               000000B0   5083          LA    1,176(0,13)
000032F6 E3F0 C298 0004          000033A8   5084          LG    15,@lit_1964_149 ; __assert
000032FC                                    5085 @@gen_label211 DS    0H
000032FC 05EF                               5086          BALR  14,15
                                                                                                                           Page  103 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000032FE                                    5087 @@gen_label212 DS    0H
000032FE                                    5088 @L760    DS    0H
                                            5089 * ***
                                            5090 * ***   # 1039 "C:\asgkafka\librdkafka\src\snappy.c"
                                            5091 * ***            u32 skip_bytes = 32;
000032FE A7F8 0020               00000020   5092          LHI   15,32       ; 32
00003302 50F0 D0D0               000000D0   5093          ST    15,208(0,13) ; spill
                                            5094 * ***
                                            5095 * ***            const char *next_ip = ip;
00003306 B904 00B2                          5096          LGR   11,2        ; next_ip
                                            5097 * ***            const char *candidate;
                                            5098 * ***            do {
0000330A                                    5099 @L761    DS    0H
                                            5100 * ***               ip = next_ip;
0000330A B904 002B                          5101          LGR   2,11        ; ip
                                            5102 * ***               u32 hval = next_hash;
0000330E 5090 D0D4               000000D4   5103          ST    9,212(0,13) ; spill
                                            5104 * ***               ((!(!((hval) == (hash(ip, shift))))) ? (void)0 : _\
                                            5105 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1046, "\
                                            5106 * !(!((hval) == (hash(ip, shift))))"));
00003312 E3B0 D0B0 0024          000000B0   5107          STG   11,176(0,13)
00003318 B914 00F7                          5108          LGFR  15,7
0000331C E3F0 D0B8 0024          000000B8   5109          STG   15,184(0,13)
00003322 4110 D0B0               000000B0   5110          LA    1,176(0,13)
00003326 E360 C2B8 0004          000033C8   5111          LG    6,@lit_1964_160 ; hash
0000332C B904 00F6                          5112          LGR   15,6
00003330                                    5113 @@gen_label213 DS    0H
00003330 05EF                               5114          BALR  14,15
00003332                                    5115 @@gen_label214 DS    0H
00003332 159F                               5116          CLR   9,15
00003334 4780 C264               00003374   5117          BE    @L765
00003338                                    5118 @L764    DS    0H
00003338 E3F0 C2A8 0004          000033B8   5119          LG    15,@lit_1964_147
0000333E 41F0 F24A               0000024A   5120          LA    15,586(0,15)
00003342 E3F0 D0B0 0024          000000B0   5121          STG   15,176(0,13)
00003348 E3F0 C2A0 0004          000033B0   5122          LG    15,@lit_1964_148
0000334E 4110 F022               00000022   5123          LA    1,34(0,15)
00003352 E310 D0B8 0024          000000B8   5124          STG   1,184(0,13)
00003358 E548 D0C0 0416          000000C0   5125          MVGHI 192(13),1046
0000335E 41F0 F276               00000276   5126          LA    15,630(0,15)
00003362 E3F0 D0C8 0024          000000C8   5127          STG   15,200(0,13)
00003368 4110 D0B0               000000B0   5128          LA    1,176(0,13)
0000336C E3F0 C298 0004          000033A8   5129          LG    15,@lit_1964_149 ; __assert
00003372                                    5130 @@gen_label216 DS    0H
00003372 05EF                               5131          BALR  14,15
00003374                                    5132 @@gen_label217 DS    0H
00003374                                    5133 @L765    DS    0H
                                            5134 * ***               u32 bytes_between_hash_lookups = skip_bytes++ >> 5\
                                            5135 * ;
00003374 58F0 D0D0               000000D0   5136          L     15,208(0,13) ; spill
00003378 181F                               5137          LR    1,15
0000337A A71A 0001               00000001   5138          AHI   1,1
                                                                                                                           Page  104 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000337E 5010 D0D0               000000D0   5139          ST    1,208(0,13) ; spill
00003382 88F0 0005               00000005   5140          SRL   15,5(0)
                                            5141 * ***               next_ip = ip + bytes_between_hash_lookups;
00003386 B916 00FF                          5142          LLGFR 15,15
0000338A 41BF 2000               00000000   5143          LA    11,0(15,2)
                                            5144 * ***               if (((next_ip > ip_limit))) {
0000338E E310 D0D8 0004          000000D8   5145          LG    1,216(0,13) ; spill
00003394 B920 00B1                          5146          CGR   11,1
00003398 47D0 C2F8               00003408   5147          BNH   @L766
                                            5148 * ***                  goto emit_remainder;
0000339C 47F0 C6B8               000037C8   5149          B     @_emit_remainder@1964@1
000033A0                                    5150          DS    0D
000033A0 000000E0                           5151 @FRAMESIZE_1964 DC F'224'
000033A4 00000000
000033A8 0000000000000000                   5152 @lit_1964_149 DC AD(__assert)
000033B0 000000000000600E                   5153 @lit_1964_148 DC AD(@strings@)
000033B8 0000000000005B58                   5154 @lit_1964_147 DC AD(@DATA)
000033C0 0000000000000808                   5155 @lit_1964_153 DC AD(log2_floor)
000033C8 0000000000001FF0                   5156 @lit_1964_160 DC AD(hash)
000033D0 00000000000003D0                   5157 @lit_1964_199 DC AD(get_unaligned32)
000033D8 00000000000021E8                   5158 @lit_1964_181 DC AD(emit_literal)
000033E0 0000000000002C68                   5159 @lit_1964_183 DC AD(find_match_length)
000033E8 0000000000002738                   5160 @lit_1964_187 DC AD(emit_copy)
000033F0 0000000000002ED8                   5161 @lit_1964_189 DC AD(get_eight_bytes_at)
000033F8 0000000000002F50                   5162 @lit_1964_201 DC AD(get_u32_at_offset)
00003400 0000000000001F70                   5163 @lit_1964_202 DC AD(hash_bytes)
                                            5164 * ***               }
00003408                                    5165 @L766    DS    0H
                                            5166 * ***               next_hash = hash(next_ip, shift);
00003408 E3B0 D0B0 0024          000000B0   5167          STG   11,176(0,13)
0000340E B914 00F7                          5168          LGFR  15,7
00003412 E3F0 D0B8 0024          000000B8   5169          STG   15,184(0,13)
00003418 4110 D0B0               000000B0   5170          LA    1,176(0,13)
0000341C B904 00F6                          5171          LGR   15,6
00003420                                    5172 @@gen_label219 DS    0H
00003420 05EF                               5173          BALR  14,15
00003422                                    5174 @@gen_label220 DS    0H
00003422 189F                               5175          LR    9,15        ; next_hash
                                            5176 * ***               candidate = baseip + table[hval];
00003424 E3F0 D0D4 0016          000000D4   5177          LLGF  15,212(0,13) ; spill
0000342A B908 00FF                          5178          AGR   15,15       ; *0x2
0000342E E3FF 8000 0091          00000000   5179          LLGH  15,0(15,8)
00003434 416F 5000               00000000   5180          LA    6,0(15,5)
                                            5181 * ***               ((!(!((candidate) >= (baseip)))) ? (void)0 : __ass\
                                            5182 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1054, "!(!(\
                                            5183 * (candidate) >= (baseip)))"));
00003438 B920 0065                          5184          CGR   6,5
0000343C 47B0 C36C               0000347C   5185          BNL   @L768
00003440                                    5186 @L767    DS    0H
00003440 E3F0 C2A8 0004          000033B8   5187          LG    15,@lit_1964_147
00003446 41F0 F24A               0000024A   5188          LA    15,586(0,15)
0000344A E3F0 D0B0 0024          000000B0   5189          STG   15,176(0,13)
                                                                                                                           Page  105 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003450 E3F0 C2A0 0004          000033B0   5190          LG    15,@lit_1964_148
00003456 4110 F022               00000022   5191          LA    1,34(0,15)
0000345A E310 D0B8 0024          000000B8   5192          STG   1,184(0,13)
00003460 E548 D0C0 041E          000000C0   5193          MVGHI 192(13),1054
00003466 41F0 F298               00000298   5194          LA    15,664(0,15)
0000346A E3F0 D0C8 0024          000000C8   5195          STG   15,200(0,13)
00003470 4110 D0B0               000000B0   5196          LA    1,176(0,13)
00003474 E3F0 C298 0004          000033A8   5197          LG    15,@lit_1964_149 ; __assert
0000347A                                    5198 @@gen_label222 DS    0H
0000347A 05EF                               5199          BALR  14,15
0000347C                                    5200 @@gen_label223 DS    0H
0000347C                                    5201 @L768    DS    0H
                                            5202 * ***               ((!(!((candidate) < (ip)))) ? (void)0 : __assert(_\
                                            5203 * _func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1055, "!(!((cand\
                                            5204 * idate) < (ip)))"));
0000347C B920 0062                          5205          CGR   6,2
00003480 4740 C3B0               000034C0   5206          BL    @L770
00003484                                    5207 @L769    DS    0H
00003484 E3F0 C2A8 0004          000033B8   5208          LG    15,@lit_1964_147
0000348A 41F0 F24A               0000024A   5209          LA    15,586(0,15)
0000348E E3F0 D0B0 0024          000000B0   5210          STG   15,176(0,13)
00003494 E3F0 C2A0 0004          000033B0   5211          LG    15,@lit_1964_148
0000349A 4110 F022               00000022   5212          LA    1,34(0,15)
0000349E E310 D0B8 0024          000000B8   5213          STG   1,184(0,13)
000034A4 E548 D0C0 041F          000000C0   5214          MVGHI 192(13),1055
000034AA 41F0 F2B6               000002B6   5215          LA    15,694(0,15)
000034AE E3F0 D0C8 0024          000000C8   5216          STG   15,200(0,13)
000034B4 4110 D0B0               000000B0   5217          LA    1,176(0,13)
000034B8 E3F0 C298 0004          000033A8   5218          LG    15,@lit_1964_149 ; __assert
000034BE                                    5219 @@gen_label225 DS    0H
000034BE 05EF                               5220          BALR  14,15
000034C0                                    5221 @@gen_label226 DS    0H
000034C0                                    5222 @L770    DS    0H
                                            5223 * ***
                                            5224 * ***               table[hval] = (u16) (ip - baseip);
000034C0 E3F0 D0D4 0016          000000D4   5225          LLGF  15,212(0,13) ; spill
000034C6 B908 00FF                          5226          AGR   15,15       ; *0x2
000034CA B904 0012                          5227          LGR   1,2
000034CE B909 0015                          5228          SGR   1,5
000034D2 401F 8000               00000000   5229          STH   1,0(15,8)
                                            5230 * ***            } while (((get_unaligned32((u32 *)(ip)) != get_unalig\
                                            5231 * ned32((u32 *)(candidate)))));
000034D6 E320 D0B0 0024          000000B0   5232          STG   2,176(0,13)
000034DC 4110 D0B0               000000B0   5233          LA    1,176(0,13)
000034E0 E3F0 C2C0 0004          000033D0   5234          LG    15,@lit_1964_199 ; get_unaligned32
000034E6                                    5235 @@gen_label227 DS    0H
000034E6 05EF                               5236          BALR  14,15
000034E8                                    5237 @@gen_label228 DS    0H
000034E8 50F0 D0D4               000000D4   5238          ST    15,212(0,13) ; spill
000034EC E360 D0B0 0024          000000B0   5239          STG   6,176(0,13)
000034F2 4110 D0B0               000000B0   5240          LA    1,176(0,13)
000034F6 E3F0 C2C0 0004          000033D0   5241          LG    15,@lit_1964_199 ; get_unaligned32
                                                                                                                           Page  106 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000034FC                                    5242 @@gen_label229 DS    0H
000034FC 05EF                               5243          BALR  14,15
000034FE                                    5244 @@gen_label230 DS    0H
000034FE 5810 D0D4               000000D4   5245          L     1,212(0,13) ; spill
00003502 151F                               5246          CLR   1,15
00003504 4770 C1FA               0000330A   5247          BNE   @L761
                                            5248 * ***
                                            5249 * ***
                                            5250 * ***
                                            5251 * ***
                                            5252 * ***
                                            5253 * ***
                                            5254 * ***
                                            5255 * ***            ((!(!((next_emit + 16) <= (ip_end)))) ? (void)0 : __a\
                                            5256 * ssert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1066, "!(\
                                            5257 * !((next_emit + 16) <= (ip_end)))"));
00003508 41F0 3010               00000010   5258          LA    15,16(0,3)
0000350C B920 00FA                          5259          CGR   15,10
00003510 47D0 C440               00003550   5260          BNH   @L772
00003514                                    5261 @L771    DS    0H
00003514 E3F0 C2A8 0004          000033B8   5262          LG    15,@lit_1964_147
0000351A 41F0 F24A               0000024A   5263          LA    15,586(0,15)
0000351E E3F0 D0B0 0024          000000B0   5264          STG   15,176(0,13)
00003524 E3F0 C2A0 0004          000033B0   5265          LG    15,@lit_1964_148
0000352A 4110 F022               00000022   5266          LA    1,34(0,15)
0000352E E310 D0B8 0024          000000B8   5267          STG   1,184(0,13)
00003534 E548 D0C0 042A          000000C0   5268          MVGHI 192(13),1066
0000353A 41F0 F2D0               000002D0   5269          LA    15,720(0,15)
0000353E E3F0 D0C8 0024          000000C8   5270          STG   15,200(0,13)
00003544 4110 D0B0               000000B0   5271          LA    1,176(0,13)
00003548 E3F0 C298 0004          000033A8   5272          LG    15,@lit_1964_149 ; __assert
0000354E                                    5273 @@gen_label233 DS    0H
0000354E 05EF                               5274          BALR  14,15
00003550                                    5275 @@gen_label234 DS    0H
00003550                                    5276 @L772    DS    0H
                                            5277 * ***            op = emit_literal(op, next_emit, (int) (ip - next_emi\
                                            5278 * t), 1);
00003550 E340 D0B0 0024          000000B0   5279          STG   4,176(0,13)
00003556 E330 D0B8 0024          000000B8   5280          STG   3,184(0,13)
0000355C B904 00F2                          5281          LGR   15,2
00003560 B909 00F3                          5282          SGR   15,3
00003564 B914 00FF                          5283          LGFR  15,15
00003568 E3F0 D0C0 0024          000000C0   5284          STG   15,192(0,13)
0000356E E548 D0C8 0001          000000C8   5285          MVGHI 200(13),1
00003574 4110 D0B0               000000B0   5286          LA    1,176(0,13)
00003578 E3F0 C2C8 0004          000033D8   5287          LG    15,@lit_1964_181 ; emit_literal
0000357E                                    5288 @@gen_label235 DS    0H
0000357E 05EF                               5289          BALR  14,15
00003580                                    5290 @@gen_label236 DS    0H
00003580 B904 004F                          5291          LGR   4,15        ; op
                                            5292 * ***
                                            5293 * ***
                                                                                                                           Page  107 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5294 * ***   # 1079 "C:\asgkafka\librdkafka\src\snappy.c"
                                            5295 * ***            eight_bytes_reference input_bytes;
                                            5296 * ***            u32 candidate_bytes = 0;
                                            5297 * ***
                                            5298 * ***            do {
00003584                                    5299 @L773    DS    0H
                                            5300 * ***
                                            5301 * ***
                                            5302 * ***
                                            5303 * ***
                                            5304 * ***               const char *base = ip;
00003584 B904 0032                          5305          LGR   3,2         ; base
                                            5306 * ***               int matched = 4 +
                                            5307 * ***                   find_match_length(candidate + 4, ip + 4,
                                            5308 * ***                           ip_end);
00003588 41F0 6004               00000004   5309          LA    15,4(0,6)
0000358C E3F0 D0B0 0024          000000B0   5310          STG   15,176(0,13)
00003592 41F0 2004               00000004   5311          LA    15,4(0,2)
00003596 E3F0 D0B8 0024          000000B8   5312          STG   15,184(0,13)
0000359C E3A0 D0C0 0024          000000C0   5313          STG   10,192(0,13)
000035A2 4110 D0B0               000000B0   5314          LA    1,176(0,13)
000035A6 E3F0 C2D0 0004          000033E0   5315          LG    15,@lit_1964_183 ; find_match_length
000035AC                                    5316 @@gen_label237 DS    0H
000035AC 05EF                               5317          BALR  14,15
000035AE                                    5318 @@gen_label238 DS    0H
000035AE 189F                               5319          LR    9,15
000035B0 A79A 0004               00000004   5320          AHI   9,4
                                            5321 * ***               ip += matched;
000035B4 B914 0019                          5322          LGFR  1,9
000035B8 4121 2000               00000000   5323          LA    2,0(1,2)
                                            5324 * ***               int offset = (int) (base - candidate);
000035BC B904 00B3                          5325          LGR   11,3
000035C0 B909 00B6                          5326          SGR   11,6
                                            5327 * ***               ((!(!((0) == (__memcmp(base,candidate,matched)))))\
                                            5328 *  ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snap\
                                            5329 * py.c", 1093, "!(!((0) == (__memcmp(base,candidate,matched))))"));
000035C4 B914 00F9                          5330          LGFR  15,9
000035C8 A719 0000               00000000   5331          LGHI  1,0
000035CC B902 00FF                          5332          LTGR  15,15
000035D0 4780 C4F0               00003600   5333          BZ    @@gen_label239
000035D4                                    5334 @@gen_label241 DS 0H
000035D4 D500 3000 6000 00000000 00000000   5335          CLC   0(1,3),0(6)
000035DA 4770 C4E0               000035F0   5336          BNZ   @@gen_label240
000035DE 4130 3001               00000001   5337          LA    3,1(0,3)
000035E2 4160 6001               00000001   5338          LA    6,1(0,6)
000035E6 E3F0 C4C4 0046          000035D4   5339          BCTG  15,@@gen_label241
000035EC 47F0 C4F0               00003600   5340          B     @@gen_label239
000035F0                                    5341 @@gen_label240 DS 0H
000035F0 4310 3000               00000000   5342          IC    1,0(0,3)
000035F4 A739 0000               00000000   5343          LGHI  3,0
000035F8 4330 6000               00000000   5344          IC    3,0(0,6)
000035FC B90B 0013                          5345          SLGR  1,3
                                                                                                                           Page  108 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003600                                    5346 @@gen_label239 DS 0H
00003600 1211                               5347          LTR   1,1
00003602 4780 C532               00003642   5348          BE    @L777
00003606                                    5349 @L776    DS    0H
00003606 E3F0 C2A8 0004          000033B8   5350          LG    15,@lit_1964_147
0000360C 41F0 F24A               0000024A   5351          LA    15,586(0,15)
00003610 E3F0 D0B0 0024          000000B0   5352          STG   15,176(0,13)
00003616 E3F0 C2A0 0004          000033B0   5353          LG    15,@lit_1964_148
0000361C 4110 F022               00000022   5354          LA    1,34(0,15)
00003620 E310 D0B8 0024          000000B8   5355          STG   1,184(0,13)
00003626 E548 D0C0 0445          000000C0   5356          MVGHI 192(13),1093
0000362C 41F0 F2F4               000002F4   5357          LA    15,756(0,15)
00003630 E3F0 D0C8 0024          000000C8   5358          STG   15,200(0,13)
00003636 4110 D0B0               000000B0   5359          LA    1,176(0,13)
0000363A E3F0 C298 0004          000033A8   5360          LG    15,@lit_1964_149 ; __assert
00003640                                    5361 @@gen_label243 DS    0H
00003640 05EF                               5362          BALR  14,15
00003642                                    5363 @@gen_label244 DS    0H
00003642                                    5364 @L777    DS    0H
                                            5365 * ***               op = emit_copy(op, offset, matched);
00003642 E340 D0B0 0024          000000B0   5366          STG   4,176(0,13)
00003648 B914 00FB                          5367          LGFR  15,11
0000364C E3F0 D0B8 0024          000000B8   5368          STG   15,184(0,13)
00003652 B914 00F9                          5369          LGFR  15,9
00003656 E3F0 D0C0 0024          000000C0   5370          STG   15,192(0,13)
0000365C 4110 D0B0               000000B0   5371          LA    1,176(0,13)
00003660 E3F0 C2D8 0004          000033E8   5372          LG    15,@lit_1964_187 ; emit_copy
00003666                                    5373 @@gen_label245 DS    0H
00003666 05EF                               5374          BALR  14,15
00003668                                    5375 @@gen_label246 DS    0H
00003668 B904 004F                          5376          LGR   4,15        ; op
                                            5377 * ***
                                            5378 * ***
                                            5379 * ***
                                            5380 * ***
                                            5381 * ***               const char *insert_tail = ip - 1;
0000366C A7F9 FFFF               0000FFFF   5382          LGHI  15,-1       ; -1
00003670 41FF 2000               00000000   5383          LA    15,0(15,2)
                                            5384 * ***               next_emit = ip;
00003674 B904 0032                          5385          LGR   3,2         ; next_emit
                                            5386 * ***               if (((ip >= ip_limit))) {
00003678 E310 D0D8 0004          000000D8   5387          LG    1,216(0,13) ; spill
0000367E B920 0021                          5388          CGR   2,1
00003682 4740 C57A               0000368A   5389          BL    @L778
                                            5390 * ***                  goto emit_remainder;
00003686 47F0 C6B8               000037C8   5391          B     @_emit_remainder@1964@1
                                            5392 * ***               }
0000368A                                    5393 @L778    DS    0H
                                            5394 * ***               input_bytes = get_eight_bytes_at(insert_tail);
0000368A E3F0 D0B0 0024          000000B0   5395          STG   15,176(0,13)
00003690 4110 D0B0               000000B0   5396          LA    1,176(0,13)
00003694 E3F0 C2E0 0004          000033F0   5397          LG    15,@lit_1964_189 ; get_eight_bytes_at
                                                                                                                           Page  109 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000369A                                    5398 @@gen_label248 DS    0H
0000369A 05EF                               5399          BALR  14,15
0000369C                                    5400 @@gen_label249 DS    0H
0000369C B904 009F                          5401          LGR   9,15
                                            5402 * ***               u32 prev_hash =
                                            5403 * ***                   hash_bytes(get_u32_at_offset
                                            5404 * ***                         (input_bytes, 0), shift);
000036A0 E3F0 D0B0 0024          000000B0   5405          STG   15,176(0,13)
000036A6 D707 D0B8 D0B8 000000B8 000000B8   5406          XC    184(8,13),184(13)
000036AC 4110 D0B0               000000B0   5407          LA    1,176(0,13)
000036B0 E3F0 C2E8 0004          000033F8   5408          LG    15,@lit_1964_201 ; get_u32_at_offset
000036B6                                    5409 @@gen_label250 DS    0H
000036B6 05EF                               5410          BALR  14,15
000036B8                                    5411 @@gen_label251 DS    0H
000036B8 B916 00FF                          5412          LLGFR 15,15
000036BC E3F0 D0B0 0024          000000B0   5413          STG   15,176(0,13)
000036C2 B914 00F7                          5414          LGFR  15,7
000036C6 E3F0 D0B8 0024          000000B8   5415          STG   15,184(0,13)
000036CC 4110 D0B0               000000B0   5416          LA    1,176(0,13)
000036D0 E3F0 C2F0 0004          00003400   5417          LG    15,@lit_1964_202 ; hash_bytes
000036D6                                    5418 @@gen_label252 DS    0H
000036D6 05EF                               5419          BALR  14,15
000036D8                                    5420 @@gen_label253 DS    0H
                                            5421 * ***               table[prev_hash] = (u16) (ip - baseip - 1);
000036D8 B916 00FF                          5422          LLGFR 15,15
000036DC B908 00FF                          5423          AGR   15,15       ; *0x2
000036E0 B904 0012                          5424          LGR   1,2
000036E4 B909 0015                          5425          SGR   1,5
000036E8 A71B FFFF               0000FFFF   5426          AGHI  1,-1
000036EC 401F 8000               00000000   5427          STH   1,0(15,8)
                                            5428 * ***               u32 cur_hash =
                                            5429 * ***                   hash_bytes(get_u32_at_offset
                                            5430 * ***                         (input_bytes, 1), shift);
000036F0 E390 D0B0 0024          000000B0   5431          STG   9,176(0,13)
000036F6 E548 D0B8 0001          000000B8   5432          MVGHI 184(13),1
000036FC 4110 D0B0               000000B0   5433          LA    1,176(0,13)
00003700 E3F0 C2E8 0004          000033F8   5434          LG    15,@lit_1964_201 ; get_u32_at_offset
00003706                                    5435 @@gen_label254 DS    0H
00003706 05EF                               5436          BALR  14,15
00003708                                    5437 @@gen_label255 DS    0H
00003708 B916 00FF                          5438          LLGFR 15,15
0000370C E3F0 D0B0 0024          000000B0   5439          STG   15,176(0,13)
00003712 B914 00F7                          5440          LGFR  15,7
00003716 E3F0 D0B8 0024          000000B8   5441          STG   15,184(0,13)
0000371C 4110 D0B0               000000B0   5442          LA    1,176(0,13)
00003720 E3F0 C2F0 0004          00003400   5443          LG    15,@lit_1964_202 ; hash_bytes
00003726                                    5444 @@gen_label256 DS    0H
00003726 05EF                               5445          BALR  14,15
00003728                                    5446 @@gen_label257 DS    0H
00003728 50F0 D0D0               000000D0   5447          ST    15,208(0,13) ; spill
                                            5448 * ***               candidate = baseip + table[cur_hash];
0000372C B916 00FF                          5449          LLGFR 15,15
                                                                                                                           Page  110 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003730 B908 00FF                          5450          AGR   15,15       ; *0x2
00003734 E3FF 8000 0091          00000000   5451          LLGH  15,0(15,8)
0000373A 416F 5000               00000000   5452          LA    6,0(15,5)
                                            5453 * ***               candidate_bytes = get_unaligned32((u32 *)(candidat\
                                            5454 * e));
0000373E E360 D0B0 0024          000000B0   5455          STG   6,176(0,13)
00003744 4110 D0B0               000000B0   5456          LA    1,176(0,13)
00003748 E3F0 C2C0 0004          000033D0   5457          LG    15,@lit_1964_199 ; get_unaligned32
0000374E                                    5458 @@gen_label258 DS    0H
0000374E 05EF                               5459          BALR  14,15
00003750                                    5460 @@gen_label259 DS    0H
00003750 18BF                               5461          LR    11,15
                                            5462 * ***               table[cur_hash] = (u16) (ip - baseip);
00003752 E3F0 D0D0 0016          000000D0   5463          LLGF  15,208(0,13) ; spill
00003758 B908 00FF                          5464          AGR   15,15       ; *0x2
0000375C B904 0012                          5465          LGR   1,2
00003760 B909 0015                          5466          SGR   1,5
00003764 401F 8000               00000000   5467          STH   1,0(15,8)
                                            5468 * ***            } while (get_u32_at_offset(input_bytes, 1) ==
00003768 E390 D0B0 0024          000000B0   5469          STG   9,176(0,13)
0000376E E548 D0B8 0001          000000B8   5470          MVGHI 184(13),1
00003774 4110 D0B0               000000B0   5471          LA    1,176(0,13)
00003778 E3F0 C2E8 0004          000033F8   5472          LG    15,@lit_1964_201 ; get_u32_at_offset
0000377E                                    5473 @@gen_label260 DS    0H
0000377E 05EF                               5474          BALR  14,15
00003780                                    5475 @@gen_label261 DS    0H
                                            5476 * ***                candidate_bytes);
00003780 15FB                               5477          CLR   15,11
00003782 4780 C474               00003584   5478          BE    @L773
                                            5479 * ***
                                            5480 * ***            next_hash =
                                            5481 * ***                hash_bytes(get_u32_at_offset(input_bytes, 2),
                                            5482 * ***                      shift);
00003786 E390 D0B0 0024          000000B0   5483          STG   9,176(0,13)
0000378C E548 D0B8 0002          000000B8   5484          MVGHI 184(13),2
00003792 4110 D0B0               000000B0   5485          LA    1,176(0,13)
00003796 E3F0 C2E8 0004          000033F8   5486          LG    15,@lit_1964_201 ; get_u32_at_offset
0000379C                                    5487 @@gen_label263 DS    0H
0000379C 05EF                               5488          BALR  14,15
0000379E                                    5489 @@gen_label264 DS    0H
0000379E B916 00FF                          5490          LLGFR 15,15
000037A2 E3F0 D0B0 0024          000000B0   5491          STG   15,176(0,13)
000037A8 B914 00F7                          5492          LGFR  15,7
000037AC E3F0 D0B8 0024          000000B8   5493          STG   15,184(0,13)
000037B2 4110 D0B0               000000B0   5494          LA    1,176(0,13)
000037B6 E3F0 C2F0 0004          00003400   5495          LG    15,@lit_1964_202 ; hash_bytes
000037BC                                    5496 @@gen_label265 DS    0H
000037BC 05EF                               5497          BALR  14,15
000037BE                                    5498 @@gen_label266 DS    0H
000037BE 189F                               5499          LR    9,15        ; next_hash
                                            5500 * ***            ++ip;
000037C0 4120 2001               00000001   5501          LA    2,1(0,2)
                                                                                                                           Page  111 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5502 * ***         }
000037C4 47F0 C1AA               000032BA   5503          B     @L756
                                            5504 * ***      }
                                            5505 * ***
                                            5506 * ***   emit_remainder:
                                            5507 * ***
                                            5508 * ***      if (next_emit < ip_end)
000037C8                                    5509 @_emit_remainder@1964@1 DS 0H
000037C8 B920 003A                          5510          CGR   3,10
000037CC 47B0 C6F0               00003800   5511          BNL   @L779
                                            5512 * ***         op = emit_literal(op, next_emit, (int) (ip_end - next_em\
                                            5513 * it), 0);
000037D0 E340 D0B0 0024          000000B0   5514          STG   4,176(0,13)
000037D6 E330 D0B8 0024          000000B8   5515          STG   3,184(0,13)
000037DC B909 00A3                          5516          SGR   10,3
000037E0 B914 00FA                          5517          LGFR  15,10
000037E4 E3F0 D0C0 0024          000000C0   5518          STG   15,192(0,13)
000037EA D707 D0C8 D0C8 000000C8 000000C8   5519          XC    200(8,13),200(13)
000037F0 4110 D0B0               000000B0   5520          LA    1,176(0,13)
000037F4 E3F0 C2C8 0004          000033D8   5521          LG    15,@lit_1964_181 ; emit_literal
000037FA                                    5522 @@gen_label268 DS    0H
000037FA 05EF                               5523          BALR  14,15
000037FC                                    5524 @@gen_label269 DS    0H
000037FC B904 004F                          5525          LGR   4,15        ; op
00003800                                    5526 @L779    DS    0H
                                            5527 * ***
                                            5528 * ***      return op;
00003800 B904 00F4                          5529          LGR   15,4
                                            5530 * ***   }
                                            5531 * * **** Start of Epilogue
                                            5532          DCCEPIL
00003804                                    5533+         ds 0h                                                          01-DCCEP
                                            5534+* Epilog
00003804 D707 D088 D088 00000088 00000088   5535+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000380A E3D0 D080 0004          00000080   5536+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003810 E3C0 D090 0004          00000090   5537+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003816 E3B0 C018 0004          00000018   5538+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000381C E3C0 B010 0021          00000010   5539+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003822 E3E0 D008 0004          00000008   5540+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003828 EB1C D020 0004          00000020   5541+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000382E 078E                               5542+         bcr 8,14                if same dsab, just return              01-DCCEP
00003830 E3F0 D010 0024          00000010   5543+         stg 15,16(0,13)         save return code                       01-DCCEP
00003836 E300 D018 0024          00000018   5544+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000383C E3F0 D090 0004          00000090   5545+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003842 E3F0 F018 0004          00000018   5546+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003848 47F0 F040               00000040   5547+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5548+* End of Epilog
                                            5549 * * **** End of Epilogue
                                            5550          DROP  12
                                            5551 *
                                            5552 *   DSECT for automatic variables in "compress_fragment"
                                            5553 *      (FUNCTION #1964)
                                                                                                                           Page  112 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5554 *
00000000                00000000 000000AC   5555 @AUTO#compress_fragment DSECT
00000000                                    5556          DS    XL168
000000A8                                    5557 compress_fragment#cur_hash#6 DS 1F ; cur_hash
000000AC                000000AC 000000A8   5558          ORG   @AUTO#compress_fragment+168
000000A8                                    5559 compress_fragment#prev_hash#6 DS 1F ; prev_hash
000000AC                000000AC 000000A8   5560          ORG   @AUTO#compress_fragment+168
000000A8                                    5561 compress_fragment#offset#5 DS 1F ; offset
000000AC                000000AC 000000A8   5562          ORG   @AUTO#compress_fragment+168
000000A8                                    5563 compress_fragment#matched#5 DS 1F ; matched
000000AC                000000AC 000000A8   5564          ORG   @AUTO#compress_fragment+168
000000A8                                    5565 compress_fragment#candidate_bytes#4 DS 1F ; candidate_bytes
000000AC                000000AC 000000A8   5566          ORG   @AUTO#compress_fragment+168
000000A8                                    5567 compress_fragment#bytes_between_hash_lookups#3 DS 1F ; bytes_between_ha*
                                                                sh_lookups
000000AC                000000AC 000000A8   5568          ORG   @AUTO#compress_fragment+168
000000A8                                    5569 compress_fragment#hval#3 DS 1F ; hval
000000AC                000000AC 000000A8   5570          ORG   @AUTO#compress_fragment+168
000000A8                                    5571 compress_fragment#skip_bytes#2 DS 1F ; skip_bytes
000000AC                000000AC 000000A8   5572          ORG   @AUTO#compress_fragment+168
000000A8                                    5573 compress_fragment#next_hash#1 DS 1F ; next_hash
000000AC                000000AC 000000A8   5574          ORG   @AUTO#compress_fragment+168
000000A8                                    5575 compress_fragment#kinput_margin_bytes#0 DS 1F ; kinput_margin_bytes
000000AC                000000AC 000000A8   5576          ORG   @AUTO#compress_fragment+168
000000A8                                    5577 compress_fragment#shift#0 DS 1F ; shift
                                            5578 *
0000384C                00000000 00005B58   5579 @CODE    CSECT
                                            5580 *
                                            5581 *
                                            5582 *
                                            5583 * ....... start of init_snappy_decompressor
0000384C                                    5584 @LNAME1965 DS  0H
0000384C 00000018                           5585          DC    X'00000018'
00003850 899589A36DA29581                   5586          DC    C'init_snappy_decompressor'
00003868 00                                 5587          DC    X'00'
                                            5588 init_snappy_decompressor DCCPRLG CINDEX=1965,BASER=0,FRAME=168,SAVEAREA*
                                                                =NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1965
                                            5589          macro
                                            5590          dccextrn &m
                                            5591          gblc    &$dccext(1000)
                                            5592          gbla    &$dccexti
                                            5593          lcla    &i
                                            5594 &$dccext(&$dccexti+1) setc    '&m'
                                            5595 &i       seta    1
                                            5596 .loop    aif    (&i gt &$dccexti).around
                                            5597          aif    ('&$dccext(&i)' eq '&m').getout
                                            5598 &i       seta    &i+1
                                            5599          ago     .loop
                                            5600 .around  anop
                                            5601 &$dccexti seta &$dccexti+1
                                            5602          extrn  &m
                                            5603 .getout  anop
                                                                                                                           Page  113 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5604          mend
00003870                                    5605+$eye0116    ds    0d                                                    02-DCCCA
00003870 C4C3C3                             5606+         dc cl3'DCC'                                                    02-DCCCA
00003873 01                                 5607+         dc xl1'01' format one                                          02-DCCCA
00003874 00000000                           5608+         dc a(0)                                                        02-DCCCA
00003878 0000000000000000                   5609+         dc ad(0)                                                       02-DCCCA
00003880 00000000000000A8                   5610+         dc ad(168)                                                     02-DCCCA
00003888 0000000000000000                   5611+         dc ad(0)                                                       02-DCCCA
00003890 0000000000001000                   5612+         dc ad(4096)                                                    02-DCCCA
00003898 20                                 5613+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003899 03                                 5614+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000389A 03                                 5615+         dc al1(3)                                                      02-DCCCA
0000389B 08                                 5616+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000389C 00                                 5617+         dc bl.8'00000000'                                              02-DCCCA
0000389D 000000                             5618+         dc al3(0)                                                      02-DCCCA
000038A0 000000000000384C                   5619+         dc ad(@LNAME1965)                                              02-DCCCA
000038A8                                    5620+         ds 0d                                                          02-DCCCA
000038A8 0000000000003870                   5621+         dc ad($eye0116)                                                02-DCCCA
000038B0 0000000000000000                   5622+         dc ad(0)                                                       02-DCCCA
000038B8                                    5623+         ds    0d                                                       01-DCCPR
000038B8                                    5624+init_snappy_decompressor ds 0d                                          01-DCCPR
000038B8                                    5625+@REGION_1965_1 ds 0h                                                    01-DCCPR
000038B8 EBEC D008 0024          00000008   5626+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            5627 * ******* End of Prologue
                                            5628 * *
                                            5629 * ***      d->reader = reader;
000038BE E3F0 1000 0004          00000000   5630          LG    15,0(0,1)   ; d
000038C4 E310 1008 0004          00000008   5631          LG    1,8(0,1)    ; reader
000038CA E310 F000 0024          00000000   5632          STG   1,0(0,15)   ; d
                                            5633 * ***      d->ip = ((void *)0);
000038D0 A719 0000               00000000   5634          LGHI  1,0         ; 0
000038D4 E310 F008 0024          00000008   5635          STG   1,8(0,15)   ; offset of ip in snappy_decompressor
                                            5636 * ***      d->ip_limit = ((void *)0);
000038DA E310 F010 0024          00000010   5637          STG   1,16(0,15)  ; offset of ip_limit in snappy_decompressor
                                            5638 * ***      d->peeked = 0;
000038E0 E54C F018 0000          00000018   5639          MVHI  24(15),0    ; offset of peeked in snappy_decompressor
                                            5640 * ***      d->eof = 0;
000038E6 9200 F01C      0000001C 00000000   5641          MVI   28(15),0    ; offset of eof in snappy_decompressor
                                            5642 * ***   }
000038EA                                    5643 @ret_lab_1965 DS 0H
                                            5644 * * **** Start of Epilogue
                                            5645          DCCEPIL
000038EA                                    5646+         ds 0h                                                          01-DCCEP
                                            5647+* Epilog
                                            5648+* Epilog
000038EA E3E0 D008 0004          00000008   5649+         lg    14,8(,13) restore the reg                                01-DCCEP
000038F0 EB1C D020 0004          00000020   5650+         lmg   1,12,32(13)                                              01-DCCEP
000038F6 07FE                               5651+         br   14                                                        01-DCCEP
                                            5652+* End of Epilog
                                            5653 * * **** End of Epilogue
                                            5654 *
                                            5655 *   DSECT for automatic variables in "init_snappy_decompressor"
                                                                                                                           Page  114 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5656 *      (FUNCTION #1965)
                                            5657 *
00000000                00000000 000000A8   5658 @AUTO#init_snappy_decompressor DSECT
00000000                                    5659          DS    XL168
                                            5660 *
000038F8                00000000 00005B58   5661 @CODE    CSECT
                                            5662 *
                                            5663 *
                                            5664 *
                                            5665 * ....... start of exit_snappy_decompressor
000038F8                                    5666 @LNAME1966 DS  0H
000038F8 00000018                           5667          DC    X'00000018'
000038FC 85A789A36DA29581                   5668          DC    C'exit_snappy_decompressor'
00003914 00                                 5669          DC    X'00'
                                            5670 exit_snappy_decompressor DCCPRLG CINDEX=1966,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1966
                                            5671          macro
                                            5672          dccextrn &m
                                            5673          gblc    &$dccext(1000)
                                            5674          gbla    &$dccexti
                                            5675          lcla    &i
                                            5676 &$dccext(&$dccexti+1) setc    '&m'
                                            5677 &i       seta    1
                                            5678 .loop    aif    (&i gt &$dccexti).around
                                            5679          aif    ('&$dccext(&i)' eq '&m').getout
                                            5680 &i       seta    &i+1
                                            5681          ago     .loop
                                            5682 .around  anop
                                            5683 &$dccexti seta &$dccexti+1
                                            5684          extrn  &m
                                            5685 .getout  anop
                                            5686          mend
00003918                                    5687+$eye0119    ds    0d                                                    02-DCCCA
00003918 C4C3C3                             5688+         dc cl3'DCC'                                                    02-DCCCA
0000391B 01                                 5689+         dc xl1'01' format one                                          02-DCCCA
0000391C 00000000                           5690+         dc a(0)                                                        02-DCCCA
00003920 000000000000398A                   5691+         dc ad(@PER_1966)                                               02-DCCCA
00003928 00000000000000B8                   5692+         dc ad(184)                                                     02-DCCCA
00003930 0000000000000000                   5693+         dc ad(0)                                                       02-DCCCA
00003938 0000000000001000                   5694+         dc ad(4096)                                                    02-DCCCA
00003940 20                                 5695+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003941 03                                 5696+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003942 03                                 5697+         dc al1(3)                                                      02-DCCCA
00003943 08                                 5698+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003944 00                                 5699+         dc bl.8'00000000'                                              02-DCCCA
00003945 000000                             5700+         dc al3(0)                                                      02-DCCCA
00003948 00000000000038F8                   5701+         dc ad(@LNAME1966)                                              02-DCCCA
00003950                                    5702+         ds 0d                                                          02-DCCCA
00003950 0000000000003918                   5703+         dc ad($eye0119)                                                02-DCCCA
00003958 0000000000000000                   5704+         dc ad(0)                                                       02-DCCCA
00003960                                    5705+         ds    0d                                                       01-DCCPR
00003960                                    5706+exit_snappy_decompressor ds 0d                                          01-DCCPR
                                                                                                                           Page  115 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003960                                    5707+@REGION_1966_1 ds 0h                                                    01-DCCPR
00003960 EBEC D008 0024          00000008   5708+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003966 E3E0 D088 0004          00000088   5709+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000396C E3C0 D090 0004          00000090   5710+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003972 B904 002E                          5711+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003976 E3B0 C018 0004          00000018   5712+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000397C A7EB 00B8               000000B8   5713+         aghi  14,184              increase by frame size               01-DCCPR
00003980 E3E0 C020 0021          00000020   5714+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003986 4720 B020               00000020   5715+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000398A                                    5716+@PER_1966 ds   0h                                                       01-DCCPR
0000398A EBDE 2080 0024          00000080   5717+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003990 E3C0 2090 0024          00000090   5718+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003996 B904 00D2                          5719+         lgr   13,2                set real frame pointer               01-DCCPR
0000399A B904 00CF                          5720+         lgr   12,15               set base reg                         01-DCCPR
                        00003960            5721+         using @REGION_1966_1,12                                        01-DCCPR
                                            5722 * ******* End of Prologue
                                            5723 * *
                                            5724 * ***      skip(d->reader, d->peeked);
0000399E E3F0 1000 0004          00000000   5725          LG    15,0(0,1)   ; d
000039A4 E310 F000 0004          00000000   5726          LG    1,0(0,15)
000039AA E310 D0A8 0024          000000A8   5727          STG   1,168(0,13)
000039B0 E3F0 F018 0016          00000018   5728          LLGF  15,24(0,15)
000039B6 E3F0 D0B0 0024          000000B0   5729          STG   15,176(0,13)
000039BC 4110 D0A8               000000A8   5730          LA    1,168(0,13)
000039C0 E3F0 C0B8 0004          00003A18   5731          LG    15,@lit_1966_211 ; skip
000039C6                                    5732 @@gen_label270 DS    0H
000039C6 05EF                               5733          BALR  14,15
000039C8                                    5734 @@gen_label271 DS    0H
                                            5735 * ***   }
000039C8                                    5736 @ret_lab_1966 DS 0H
                                            5737 * * **** Start of Epilogue
                                            5738          DCCEPIL
000039C8                                    5739+         ds 0h                                                          01-DCCEP
                                            5740+* Epilog
000039C8 D707 D088 D088 00000088 00000088   5741+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000039CE E3D0 D080 0004          00000080   5742+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000039D4 E3C0 D090 0004          00000090   5743+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000039DA E3B0 C018 0004          00000018   5744+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000039E0 E3C0 B010 0021          00000010   5745+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000039E6 E3E0 D008 0004          00000008   5746+         lg  14,8(0,13)          load up return address                 01-DCCEP
000039EC EB1C D020 0004          00000020   5747+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000039F2 078E                               5748+         bcr 8,14                if same dsab, just return              01-DCCEP
000039F4 E3F0 D010 0024          00000010   5749+         stg 15,16(0,13)         save return code                       01-DCCEP
000039FA E300 D018 0024          00000018   5750+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003A00 E3F0 D090 0004          00000090   5751+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003A06 E3F0 F018 0004          00000018   5752+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003A0C 47F0 F040               00000040   5753+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5754+* End of Epilog
                                            5755 * * **** End of Epilogue
00003A10                                    5756          DS    0D
00003A10 000000B8                           5757 @FRAMESIZE_1966 DC F'184'
00003A14 00000000
                                                                                                                           Page  116 
  Active Usings: @REGION_1966_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A18 0000000000000F40                   5758 @lit_1966_211 DC AD(skip)
                                            5759          DROP  12
                                            5760 *
                                            5761 *   DSECT for automatic variables in "exit_snappy_decompressor"
                                            5762 *      (FUNCTION #1966)
                                            5763 *
00000000                00000000 000000A8   5764 @AUTO#exit_snappy_decompressor DSECT
00000000                                    5765          DS    XL168
                                            5766 *
00003A20                00000000 00005B58   5767 @CODE    CSECT
                                            5768 *
                                            5769 *
                                            5770 *
                                            5771 * ....... start of read_uncompressed_length
00003A20                                    5772 @LNAME1967 DS  0H
00003A20 00000018                           5773          DC    X'00000018'
00003A24 998581846DA49583                   5774          DC    C'read_uncompressed_length'
00003A3C 00                                 5775          DC    X'00'
                                            5776 read_uncompressed_length DCCPRLG CINDEX=1967,BASER=12,FRAME=216,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1967
                                            5777          macro
                                            5778          dccextrn &m
                                            5779          gblc    &$dccext(1000)
                                            5780          gbla    &$dccexti
                                            5781          lcla    &i
                                            5782 &$dccext(&$dccexti+1) setc    '&m'
                                            5783 &i       seta    1
                                            5784 .loop    aif    (&i gt &$dccexti).around
                                            5785          aif    ('&$dccext(&i)' eq '&m').getout
                                            5786 &i       seta    &i+1
                                            5787          ago     .loop
                                            5788 .around  anop
                                            5789 &$dccexti seta &$dccexti+1
                                            5790          extrn  &m
                                            5791 .getout  anop
                                            5792          mend
00003A40                                    5793+$eye0122    ds    0d                                                    02-DCCCA
00003A40 C4C3C3                             5794+         dc cl3'DCC'                                                    02-DCCCA
00003A43 01                                 5795+         dc xl1'01' format one                                          02-DCCCA
00003A44 00000000                           5796+         dc a(0)                                                        02-DCCCA
00003A48 0000000000003AB2                   5797+         dc ad(@PER_1967)                                               02-DCCCA
00003A50 00000000000000D8                   5798+         dc ad(216)                                                     02-DCCCA
00003A58 0000000000000000                   5799+         dc ad(0)                                                       02-DCCCA
00003A60 0000000000001000                   5800+         dc ad(4096)                                                    02-DCCCA
00003A68 20                                 5801+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A69 03                                 5802+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A6A 03                                 5803+         dc al1(3)                                                      02-DCCCA
00003A6B 08                                 5804+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A6C 00                                 5805+         dc bl.8'00000000'                                              02-DCCCA
00003A6D 000000                             5806+         dc al3(0)                                                      02-DCCCA
00003A70 0000000000003A20                   5807+         dc ad(@LNAME1967)                                              02-DCCCA
00003A78                                    5808+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  117 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A78 0000000000003A40                   5809+         dc ad($eye0122)                                                02-DCCCA
00003A80 0000000000000000                   5810+         dc ad(0)                                                       02-DCCCA
00003A88                                    5811+         ds    0d                                                       01-DCCPR
00003A88                                    5812+read_uncompressed_length ds 0d                                          01-DCCPR
00003A88                                    5813+@REGION_1967_1 ds 0h                                                    01-DCCPR
00003A88 EBEC D008 0024          00000008   5814+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003A8E E3E0 D088 0004          00000088   5815+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003A94 E3C0 D090 0004          00000090   5816+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003A9A B904 002E                          5817+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003A9E E3B0 C018 0004          00000018   5818+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003AA4 A7EB 00D8               000000D8   5819+         aghi  14,216              increase by frame size               01-DCCPR
00003AA8 E3E0 C020 0021          00000020   5820+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003AAE 4720 B020               00000020   5821+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003AB2                                    5822+@PER_1967 ds   0h                                                       01-DCCPR
00003AB2 EBDE 2080 0024          00000080   5823+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003AB8 E3C0 2090 0024          00000090   5824+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003ABE B904 00D2                          5825+         lgr   13,2                set real frame pointer               01-DCCPR
00003AC2 B904 00CF                          5826+         lgr   12,15               set base reg                         01-DCCPR
                        00003A88            5827+         using @REGION_1967_1,12                                        01-DCCPR
00003AC6 B904 0041                          5828          LGR   4,1         ; ptr to parm area
                                            5829 * ******* End of Prologue
                                            5830 * *
                                            5831 * ***      ((!(!(d->ip == ((void *)0)))) ? (void)0 : __assert(__func__\
                                            5832 * , "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1224, "!(!(d->ip == ((v\
                                            5833 * oid *)0)))"));
00003ACA E330 4000 0004          00000000   5834          LG    3,0(0,4)    ; d
00003AD0 E3F0 3008 0002          00000008   5835          LTG   15,8(0,3)   ; offset of ip in snappy_decompressor
00003AD6 4780 C08E               00003B16   5836          BE    @L781
00003ADA                                    5837 @L780    DS    0H
00003ADA E3F0 C0C8 0004          00003B50   5838          LG    15,@lit_1967_213
00003AE0 41F0 F470               00000470   5839          LA    15,1136(0,15)
00003AE4 E3F0 D0B8 0024          000000B8   5840          STG   15,184(0,13)
00003AEA E3F0 C0C0 0004          00003B48   5841          LG    15,@lit_1967_214
00003AF0 4110 F022               00000022   5842          LA    1,34(0,15)
00003AF4 E310 D0C0 0024          000000C0   5843          STG   1,192(0,13)
00003AFA E548 D0C8 04C8          000000C8   5844          MVGHI 200(13),1224
00003B00 41F0 F324               00000324   5845          LA    15,804(0,15)
00003B04 E3F0 D0D0 0024          000000D0   5846          STG   15,208(0,13)
00003B0A 4110 D0B8               000000B8   5847          LA    1,184(0,13)
00003B0E E3F0 C0B8 0004          00003B40   5848          LG    15,@lit_1967_215 ; __assert
00003B14                                    5849 @@gen_label273 DS    0H
00003B14 05EF                               5850          BALR  14,15
00003B16                                    5851 @@gen_label274 DS    0H
00003B16                                    5852 @L781    DS    0H
                                            5853 * ***
                                            5854 * ***
                                            5855 * ***
                                            5856 * ***      *result = 0;
00003B16 E3F0 4008 0004          00000008   5857          LG    15,8(0,4)   ; result
00003B1C E54C F000 0000          00000000   5858          MVHI  0(15),0     ; result
                                            5859 * ***      u32 shift = 0;
00003B22 A728 0000               00000000   5860          LHI   2,0         ; 0
                                                                                                                           Page  118 
  Active Usings: @REGION_1967_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5861 * ***      while (1) {
00003B26                                    5862 @L784    DS    0H
                                            5863 * ***         if (shift >= 32)
00003B26 C22F 0000 0020                     5864          CLFI  2,X'00000020'
00003B2C 4740 C0E0               00003B68   5865          BL    @L786
                                            5866 * ***            return 0;
00003B30 A7F9 0000               00000000   5867          LGHI  15,0        ; 0
00003B34 47F0 C172               00003BFA   5868          B     @ret_lab_1967
00003B38                                    5869          DS    0D
00003B38 000000D8                           5870 @FRAMESIZE_1967 DC F'216'
00003B3C 00000000
00003B40 0000000000000000                   5871 @lit_1967_215 DC AD(__assert)
00003B48 000000000000600E                   5872 @lit_1967_214 DC AD(@strings@)
00003B50 0000000000005B58                   5873 @lit_1967_213 DC AD(@DATA)
00003B58 0000000000000DC0                   5874 @lit_1967_218 DC AD(peek)
00003B60 0000000000000F40                   5875 @lit_1967_220 DC AD(skip)
00003B68                                    5876 @L786    DS    0H
                                            5877 * ***         size_t n;
                                            5878 * ***         const char *ip = peek(d->reader, &n);
00003B68 E3F0 3000 0004          00000000   5879          LG    15,0(0,3)
00003B6E E3F0 D0B8 0024          000000B8   5880          STG   15,184(0,13)
00003B74 41F0 D0A8               000000A8   5881          LA    15,168(0,13)
00003B78 E3F0 D0C0 0024          000000C0   5882          STG   15,192(0,13)
00003B7E 4110 D0B8               000000B8   5883          LA    1,184(0,13)
00003B82 E3F0 C0D0 0004          00003B58   5884          LG    15,@lit_1967_218 ; peek
00003B88                                    5885 @@gen_label276 DS    0H
00003B88 05EF                               5886          BALR  14,15
00003B8A                                    5887 @@gen_label277 DS    0H
                                            5888 * ***         if (n == 0)
00003B8A E559 D0A8 0000          000000A8   5889          CLGHSI 168(13),0
00003B90 4770 C114               00003B9C   5890          BNE   @L787
                                            5891 * ***            return 0;
00003B94 A7F9 0000               00000000   5892          LGHI  15,0        ; 0
00003B98 47F0 C172               00003BFA   5893          B     @ret_lab_1967
00003B9C                                    5894 @L787    DS    0H
                                            5895 * ***         const unsigned char c = *(const unsigned char *)(ip);
00003B9C 4350 F000               00000000   5896          IC    5,0(0,15)   ; ip
00003BA0 4250 D0B0               000000B0   5897          STC   5,176(0,13) ; c
                                            5898 * ***         skip(d->reader, 1);
00003BA4 E3F0 3000 0004          00000000   5899          LG    15,0(0,3)
00003BAA E3F0 D0B8 0024          000000B8   5900          STG   15,184(0,13)
00003BB0 E548 D0C0 0001          000000C0   5901          MVGHI 192(13),1
00003BB6 4110 D0B8               000000B8   5902          LA    1,184(0,13)
00003BBA E3F0 C0D8 0004          00003B60   5903          LG    15,@lit_1967_220 ; skip
00003BC0                                    5904 @@gen_label279 DS    0H
00003BC0 05EF                               5905          BALR  14,15
00003BC2                                    5906 @@gen_label280 DS    0H
                                            5907 * ***         *result |= (u32) (c & 0x7f) << shift;
00003BC2 E3F0 4008 0004          00000008   5908          LG    15,8(0,4)   ; result
00003BC8 1815                               5909          LR    1,5
00003BCA C01B 0000 007F                     5910          NILF  1,X'0000007F'
00003BD0 8910 2000               00000000   5911          SLL   1,0(2)
                                                                                                                           Page  119 
  Active Usings: @REGION_1967_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003BD4 5610 F000               00000000   5912          O     1,0(0,15)
00003BD8 5010 F000               00000000   5913          ST    1,0(0,15)
                                            5914 * ***         if (c < 128) {
00003BDC C05B 0000 00FF                     5915          NILF  5,X'000000FF'
00003BE2 A75E 0080               00000080   5916          CHI   5,128
00003BE6 47B0 C166               00003BEE   5917          BNL   @L788
                                            5918 * ***            break;
00003BEA 47F0 C16E               00003BF6   5919          B     @L782
                                            5920 * ***         }
00003BEE                                    5921 @L788    DS    0H
                                            5922 * ***         shift += 7;
00003BEE A72A 0007               00000007   5923          AHI   2,7
                                            5924 * ***      }
00003BF2                                    5925 @L785    DS    0H
00003BF2 47F0 C09E               00003B26   5926          B     @L784
00003BF6                                    5927 @L782    DS    0H
                                            5928 * ***      return 1;
00003BF6 A7F9 0001               00000001   5929          LGHI  15,1        ; 1
                                            5930 * ***   }
00003BFA                                    5931 @ret_lab_1967 DS 0H
                                            5932 * * **** Start of Epilogue
                                            5933          DCCEPIL
00003BFA                                    5934+         ds 0h                                                          01-DCCEP
                                            5935+* Epilog
00003BFA D707 D088 D088 00000088 00000088   5936+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C00 E3D0 D080 0004          00000080   5937+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003C06 E3C0 D090 0004          00000090   5938+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C0C E3B0 C018 0004          00000018   5939+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C12 E3C0 B010 0021          00000010   5940+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C18 E3E0 D008 0004          00000008   5941+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C1E EB1C D020 0004          00000020   5942+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C24 078E                               5943+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C26 E3F0 D010 0024          00000010   5944+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C2C E300 D018 0024          00000018   5945+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C32 E3F0 D090 0004          00000090   5946+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C38 E3F0 F018 0004          00000018   5947+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C3E 47F0 F040               00000040   5948+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5949+* End of Epilog
                                            5950 * * **** End of Epilogue
                                            5951          DROP  12
                                            5952 *
                                            5953 *   DSECT for automatic variables in "read_uncompressed_length"
                                            5954 *      (FUNCTION #1967)
                                            5955 *
00000000                00000000 000000B1   5956 @AUTO#read_uncompressed_length DSECT
00000000                                    5957          DS    XL168
000000A8                                    5958 read_uncompressed_length#n#1 DS 8XL1 ; n
000000B0                000000B0 000000A8   5959          ORG   @AUTO#read_uncompressed_length+168
000000A8                                    5960 read_uncompressed_length#shift#0 DS 1F ; shift
000000AC                000000AC 000000B0   5961          ORG   @AUTO#read_uncompressed_length+176
000000B0                                    5962 read_uncompressed_length#c#1 DS 1CL1 ; c
                                            5963 *
                                                                                                                           Page  120 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003C42                00000000 00005B58   5964 @CODE    CSECT
                                            5965 *
                                            5966 *
                                            5967 *
                                            5968 * ....... start of decompress_all_tags
00003C42                                    5969 @LNAME1969 DS  0H
00003C42 00000013                           5970          DC    X'00000013'
00003C46 8485839694979985                   5971          DC    C'decompress_all_tags'
00003C59 00                                 5972          DC    X'00'
                                            5973 decompress_all_tags DCCPRLG CINDEX=1969,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1969
                                            5974          macro
                                            5975          dccextrn &m
                                            5976          gblc    &$dccext(1000)
                                            5977          gbla    &$dccexti
                                            5978          lcla    &i
                                            5979 &$dccext(&$dccexti+1) setc    '&m'
                                            5980 &i       seta    1
                                            5981 .loop    aif    (&i gt &$dccexti).around
                                            5982          aif    ('&$dccext(&i)' eq '&m').getout
                                            5983 &i       seta    &i+1
                                            5984          ago     .loop
                                            5985 .around  anop
                                            5986 &$dccexti seta &$dccexti+1
                                            5987          extrn  &m
                                            5988 .getout  anop
                                            5989          mend
00003C60                                    5990+$eye0125    ds    0d                                                    02-DCCCA
00003C60 C4C3C3                             5991+         dc cl3'DCC'                                                    02-DCCCA
00003C63 01                                 5992+         dc xl1'01' format one                                          02-DCCCA
00003C64 00000000                           5993+         dc a(0)                                                        02-DCCCA
00003C68 0000000000003CD2                   5994+         dc ad(@PER_1969)                                               02-DCCCA
00003C70 00000000000000D8                   5995+         dc ad(216)                                                     02-DCCCA
00003C78 0000000000000000                   5996+         dc ad(0)                                                       02-DCCCA
00003C80 0000000000001000                   5997+         dc ad(4096)                                                    02-DCCCA
00003C88 20                                 5998+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003C89 03                                 5999+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003C8A 03                                 6000+         dc al1(3)                                                      02-DCCCA
00003C8B 08                                 6001+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003C8C 00                                 6002+         dc bl.8'00000000'                                              02-DCCCA
00003C8D 000000                             6003+         dc al3(0)                                                      02-DCCCA
00003C90 0000000000003C42                   6004+         dc ad(@LNAME1969)                                              02-DCCCA
00003C98                                    6005+         ds 0d                                                          02-DCCCA
00003C98 0000000000003C60                   6006+         dc ad($eye0125)                                                02-DCCCA
00003CA0 0000000000000000                   6007+         dc ad(0)                                                       02-DCCCA
00003CA8                                    6008+         ds    0d                                                       01-DCCPR
00003CA8                                    6009+decompress_all_tags ds 0d                                               01-DCCPR
00003CA8                                    6010+@REGION_1969_1 ds 0h                                                    01-DCCPR
00003CA8 EBEC D008 0024          00000008   6011+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003CAE E3E0 D088 0004          00000088   6012+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003CB4 E3C0 D090 0004          00000090   6013+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003CBA B904 002E                          6014+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003CBE E3B0 C018 0004          00000018   6015+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003CC4 A7EB 00D8               000000D8   6016+         aghi  14,216              increase by frame size               01-DCCPR
00003CC8 E3E0 C020 0021          00000020   6017+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003CCE 4720 B020               00000020   6018+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003CD2                                    6019+@PER_1969 ds   0h                                                       01-DCCPR
00003CD2 EBDE 2080 0024          00000080   6020+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003CD8 E3C0 2090 0024          00000090   6021+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003CDE B904 00D2                          6022+         lgr   13,2                set real frame pointer               01-DCCPR
00003CE2 B904 00CF                          6023+         lgr   12,15               set base reg                         01-DCCPR
                        00003CA8            6024+         using @REGION_1969_1,12                                        01-DCCPR
                                            6025 * ******* End of Prologue
                                            6026 * *
                                            6027 * ***      const char *ip = d->ip;
00003CE6 EB56 1000 0004          00000000   6028          LMG   5,6,0(1)    ; d
00003CEC E320 5008 0004          00000008   6029          LG    2,8(0,5)    ; offset of ip in snappy_decompressor
                                            6030 * ***
                                            6031 * ***
                                            6032 * ***
                                            6033 * ***
                                            6034 * ***   # 1273 "C:\asgkafka\librdkafka\src\snappy.c"
                                            6035 * ***      if (d->ip_limit - ip < 5) { d->ip = ip; if (!refill_tag(d))\
                                            6036 *  return; ip = d->ip; };
00003CF2 E3F0 5010 0004          00000010   6037          LG    15,16(0,5)  ; offset of ip_limit in snappy_decompressor
00003CF8 B909 00F2                          6038          SGR   15,2
00003CFC A7FF 0005               00000005   6039          CGHI  15,5
00003D00 47B0 C086               00003D2E   6040          BNL   @L791
00003D04 E320 5008 0024          00000008   6041          STG   2,8(0,5)    ; offset of ip in snappy_decompressor
00003D0A E350 D0B8 0024          000000B8   6042          STG   5,184(0,13)
00003D10 4110 D0B8               000000B8   6043          LA    1,184(0,13)
00003D14 E3F0 C1C8 0004          00003E70   6044          LG    15,@lit_1969_223 ; refill_tag
00003D1A                                    6045 @@gen_label283 DS    0H
00003D1A 05EF                               6046          BALR  14,15
00003D1C                                    6047 @@gen_label284 DS    0H
00003D1C C0FB 0000 00FF                     6048          NILF  15,X'000000FF'
00003D22 12FF                               6049          LTR   15,15
00003D24 4780 C458               00004100   6050          BZ    @ret_lab_1969
00003D28                                    6051 @L790    DS    0H
00003D28 E320 5008 0004          00000008   6052          LG    2,8(0,5)    ; offset of ip in snappy_decompressor
00003D2E                                    6053 @L789    DS    0H
                                            6054 * ***      for (;;) {
00003D2E                                    6055 @L791    DS    0H
                                            6056 * ***         if (d->ip_limit - ip < 5) {
00003D2E E3F0 5010 0004          00000010   6057          LG    15,16(0,5)  ; offset of ip_limit in snappy_decompressor
00003D34 B909 00F2                          6058          SGR   15,2
00003D38 A7FF 0005               00000005   6059          CGHI  15,5
00003D3C 47B0 C0C2               00003D6A   6060          BNL   @L794
                                            6061 * ***            d->ip = ip;
00003D40 E320 5008 0024          00000008   6062          STG   2,8(0,5)    ; offset of ip in snappy_decompressor
                                            6063 * ***            if (!refill_tag(d))
00003D46 E350 D0B8 0024          000000B8   6064          STG   5,184(0,13)
00003D4C 4110 D0B8               000000B8   6065          LA    1,184(0,13)
00003D50 E3F0 C1C8 0004          00003E70   6066          LG    15,@lit_1969_223 ; refill_tag
                                                                                                                           Page  122 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003D56                                    6067 @@gen_label287 DS    0H
00003D56 05EF                               6068          BALR  14,15
00003D58                                    6069 @@gen_label288 DS    0H
00003D58 C0FB 0000 00FF                     6070          NILF  15,X'000000FF'
00003D5E 12FF                               6071          LTR   15,15
00003D60 4780 C458               00004100   6072          BZ    @ret_lab_1969
                                            6073 * ***               return;
00003D64                                    6074 @L795    DS    0H
                                            6075 * ***            ip = d->ip;
00003D64 E320 5008 0004          00000008   6076          LG    2,8(0,5)    ; offset of ip in snappy_decompressor
                                            6077 * ***         }
00003D6A                                    6078 @L794    DS    0H
                                            6079 * ***
                                            6080 * ***         const unsigned char c = *(const unsigned char *)(ip++);
00003D6A B904 00F2                          6081          LGR   15,2
00003D6E 4120 2001               00000001   6082          LA    2,1(0,2)
00003D72 4330 F000               00000000   6083          IC    3,0(0,15)
00003D76 4230 D0B0               000000B0   6084          STC   3,176(0,13) ; c
                                            6085 * ***
                                            6086 * ***         if ((c & 0x3) == LITERAL) {
00003D7A 18F3                               6087          LR    15,3
00003D7C C0FB 0000 0003                     6088          NILF  15,X'00000003'
00003D82 12FF                               6089          LTR   15,15
00003D84 4770 C388               00004030   6090          BNE   @L796
                                            6091 * ***            u32 literal_length = (c >> 2) + 1;
00003D88 C03B 0000 00FF                     6092          NILF  3,X'000000FF'
00003D8E 8A30 0002               00000002   6093          SRA   3,2(0)
00003D92 A73A 0001               00000001   6094          AHI   3,1
                                            6095 * ***            if (writer_try_fast_append(writer, ip, (u32) (d->ip_l\
                                            6096 * imit - ip),
                                            6097 * ***                        literal_length)) {
00003D96 E360 D0B8 0024          000000B8   6098          STG   6,184(0,13)
00003D9C E320 D0C0 0024          000000C0   6099          STG   2,192(0,13)
00003DA2 E3F0 5010 0004          00000010   6100          LG    15,16(0,5)  ; offset of ip_limit in snappy_decompressor
00003DA8 B909 00F2                          6101          SGR   15,2
00003DAC B916 00FF                          6102          LLGFR 15,15
00003DB0 E3F0 D0C8 0024          000000C8   6103          STG   15,200(0,13)
00003DB6 B916 00F3                          6104          LLGFR 15,3
00003DBA E3F0 D0D0 0024          000000D0   6105          STG   15,208(0,13)
00003DC0 4110 D0B8               000000B8   6106          LA    1,184(0,13)
00003DC4 E3F0 C1D0 0004          00003E78   6107          LG    15,@lit_1969_225 ; writer_try_fast_append
00003DCA                                    6108 @@gen_label291 DS    0H
00003DCA 05EF                               6109          BALR  14,15
00003DCC                                    6110 @@gen_label292 DS    0H
00003DCC C0FB 0000 00FF                     6111          NILF  15,X'000000FF'
00003DD2 12FF                               6112          LTR   15,15
00003DD4 4780 C220               00003EC8   6113          BZ    @L797
                                            6114 * ***               ((!(!((literal_length) < (61)))) ? (void)0 : __ass\
                                            6115 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1288, "!(!(\
                                            6116 * (literal_length) < (61)))"));
00003DD8 C23F 0000 003D                     6117          CLFI  3,X'0000003D'
00003DDE 4740 C176               00003E1E   6118          BL    @L799
                                                                                                                           Page  123 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003DE2                                    6119 @L798    DS    0H
00003DE2 E3F0 C1E8 0004          00003E90   6120          LG    15,@lit_1969_226
00003DE8 41F0 F48A               0000048A   6121          LA    15,1162(0,15)
00003DEC E3F0 D0B8 0024          000000B8   6122          STG   15,184(0,13)
00003DF2 E3F0 C1E0 0004          00003E88   6123          LG    15,@lit_1969_227
00003DF8 4110 F022               00000022   6124          LA    1,34(0,15)
00003DFC E310 D0C0 0024          000000C0   6125          STG   1,192(0,13)
00003E02 E548 D0C8 0508          000000C8   6126          MVGHI 200(13),1288
00003E08 41F0 F340               00000340   6127          LA    15,832(0,15)
00003E0C E3F0 D0D0 0024          000000D0   6128          STG   15,208(0,13)
00003E12 4110 D0B8               000000B8   6129          LA    1,184(0,13)
00003E16 E3F0 C1D8 0004          00003E80   6130          LG    15,@lit_1969_228 ; __assert
00003E1C                                    6131 @@gen_label295 DS    0H
00003E1C 05EF                               6132          BALR  14,15
00003E1E                                    6133 @@gen_label296 DS    0H
00003E1E                                    6134 @L799    DS    0H
                                            6135 * ***               ip += literal_length;
00003E1E B916 00F3                          6136          LLGFR 15,3
00003E22 412F 2000               00000000   6137          LA    2,0(15,2)
                                            6138 * ***               if (d->ip_limit - ip < 5) { d->ip = ip; if (!refil\
                                            6139 * l_tag(d)) return; ip = d->ip; };
00003E26 E3F0 5010 0004          00000010   6140          LG    15,16(0,5)  ; offset of ip_limit in snappy_decompressor
00003E2C B909 00F2                          6141          SGR   15,2
00003E30 A7FF 0005               00000005   6142          CGHI  15,5
00003E34 47B0 C086               00003D2E   6143          BNL   @L791
00003E38 E320 5008 0024          00000008   6144          STG   2,8(0,5)    ; offset of ip in snappy_decompressor
00003E3E E350 D0B8 0024          000000B8   6145          STG   5,184(0,13)
00003E44 4110 D0B8               000000B8   6146          LA    1,184(0,13)
00003E48 E3F0 C1C8 0004          00003E70   6147          LG    15,@lit_1969_223 ; refill_tag
00003E4E                                    6148 @@gen_label298 DS    0H
00003E4E 05EF                               6149          BALR  14,15
00003E50                                    6150 @@gen_label299 DS    0H
00003E50 C0FB 0000 00FF                     6151          NILF  15,X'000000FF'
00003E56 12FF                               6152          LTR   15,15
00003E58 4780 C458               00004100   6153          BZ    @ret_lab_1969
00003E5C                                    6154 @L801    DS    0H
00003E5C E320 5008 0004          00000008   6155          LG    2,8(0,5)    ; offset of ip in snappy_decompressor
00003E62                                    6156 @L800    DS    0H
                                            6157 * ***               continue;
00003E62 47F0 C086               00003D2E   6158          B     @L791
00003E68                                    6159          DS    0D
00003E68 000000D8                           6160 @FRAMESIZE_1969 DC F'216'
00003E6C 00000000
00003E70 00000000000041A0                   6161 @lit_1969_223 DC AD(refill_tag)
00003E78 0000000000001DE0                   6162 @lit_1969_225 DC AD(writer_try_fast_append)
00003E80 0000000000000000                   6163 @lit_1969_228 DC AD(__assert)
00003E88 000000000000600E                   6164 @lit_1969_227 DC AD(@strings@)
00003E90 0000000000005B58                   6165 @lit_1969_226 DC AD(@DATA)
00003E98 00000000000003D0                   6166 @lit_1969_230 DC AD(get_unaligned32)
00003EA0 0000000000001C00                   6167 @lit_1969_232 DC AD(writer_append)
00003EA8 0000000000000F40                   6168 @lit_1969_233 DC AD(skip)
00003EB0 0000000000000DC0                   6169 @lit_1969_234 DC AD(peek)
                                                                                                                           Page  124 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003EB8 00000000000000FF                   6170 @lit_1969_237 DC FD'255' 0x00000000000000ff
00003EC0 0000000000001958                   6171 @lit_1969_240 DC AD(writer_append_from_self)
                                            6172 * ***            }
00003EC8                                    6173 @L797    DS    0H
                                            6174 * ***            if (((literal_length >= 61))) {
00003EC8 C23F 0000 003D                     6175          CLFI  3,X'0000003D'
00003ECE 4740 C266               00003F0E   6176          BL    @L802
                                            6177 * ***
                                            6178 * ***               const u32 literal_ll = literal_length - 60;
00003ED2 1843                               6179          LR    4,3
00003ED4 A74A FFC4               0000FFC4   6180          AHI   4,-60
                                            6181 * ***               literal_length = ((__builtin_bswap32(get_unaligned\
                                            6182 * 32((u32 *)(ip)))) &
00003ED8 E320 D0B8 0024          000000B8   6183          STG   2,184(0,13)
00003EDE 4110 D0B8               000000B8   6184          LA    1,184(0,13)
00003EE2 E3F0 C1F0 0004          00003E98   6185          LG    15,@lit_1969_230 ; get_unaligned32
00003EE8                                    6186 @@gen_label302 DS    0H
00003EE8 05EF                               6187          BALR  14,15
00003EEA                                    6188 @@gen_label303 DS    0H
00003EEA B91F 003F                          6189          LRVR  3,15
                                            6190 * ***                       wordmask[literal_ll]) + 1;
00003EEE B916 00F4                          6191          LLGFR 15,4
00003EF2 E310 C1E8 0004          00003E90   6192          LG    1,@lit_1969_226
00003EF8 EBFF 0002 000D          00000002   6193          SLLG  15,15,2(0)  ; *0x4
00003EFE 543F 125C               0000025C   6194          N     3,604(15,1)
00003F02 A73A 0001               00000001   6195          AHI   3,1
                                            6196 * ***               ip += literal_ll;
00003F06 B916 00F4                          6197          LLGFR 15,4
00003F0A 412F 2000               00000000   6198          LA    2,0(15,2)
                                            6199 * ***            }
00003F0E                                    6200 @L802    DS    0H
                                            6201 * ***
                                            6202 * ***            u32 avail = (u32) (d->ip_limit - ip);
00003F0E E340 5010 0004          00000010   6203          LG    4,16(0,5)   ; offset of ip_limit in snappy_decompressor
00003F14 B909 0042                          6204          SGR   4,2
                                            6205 * ***            while (avail < literal_length) {
00003F18 47F0 C30C               00003FB4   6206          B     @L806
00003F1C                                    6207 @L805    DS    0H
                                            6208 * ***               if (!writer_append(writer, ip, avail))
00003F1C E360 D0B8 0024          000000B8   6209          STG   6,184(0,13)
00003F22 E320 D0C0 0024          000000C0   6210          STG   2,192(0,13)
00003F28 B916 00F4                          6211          LLGFR 15,4
00003F2C E3F0 D0C8 0024          000000C8   6212          STG   15,200(0,13)
00003F32 4110 D0B8               000000B8   6213          LA    1,184(0,13)
00003F36 E3F0 C1F8 0004          00003EA0   6214          LG    15,@lit_1969_232 ; writer_append
00003F3C                                    6215 @@gen_label304 DS    0H
00003F3C 05EF                               6216          BALR  14,15
00003F3E                                    6217 @@gen_label305 DS    0H
00003F3E C0FB 0000 00FF                     6218          NILF  15,X'000000FF'
00003F44 12FF                               6219          LTR   15,15
00003F46 4780 C458               00004100   6220          BZ    @ret_lab_1969
                                            6221 * ***                  return;
                                                                                                                           Page  125 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003F4A                                    6222 @L807    DS    0H
                                            6223 * ***               literal_length -= avail;
00003F4A 1F34                               6224          SLR   3,4
                                            6225 * ***               skip(d->reader, d->peeked);
00003F4C E3F0 5000 0004          00000000   6226          LG    15,0(0,5)
00003F52 E3F0 D0B8 0024          000000B8   6227          STG   15,184(0,13)
00003F58 E3F0 5018 0016          00000018   6228          LLGF  15,24(0,5)
00003F5E E3F0 D0C0 0024          000000C0   6229          STG   15,192(0,13)
00003F64 4110 D0B8               000000B8   6230          LA    1,184(0,13)
00003F68 E3F0 C200 0004          00003EA8   6231          LG    15,@lit_1969_233 ; skip
00003F6E                                    6232 @@gen_label307 DS    0H
00003F6E 05EF                               6233          BALR  14,15
00003F70                                    6234 @@gen_label308 DS    0H
                                            6235 * ***               size_t n;
                                            6236 * ***               ip = peek(d->reader, &n);
00003F70 E3F0 5000 0004          00000000   6237          LG    15,0(0,5)
00003F76 E3F0 D0B8 0024          000000B8   6238          STG   15,184(0,13)
00003F7C 41F0 D0A8               000000A8   6239          LA    15,168(0,13)
00003F80 E3F0 D0C0 0024          000000C0   6240          STG   15,192(0,13)
00003F86 4110 D0B8               000000B8   6241          LA    1,184(0,13)
00003F8A E3F0 C208 0004          00003EB0   6242          LG    15,@lit_1969_234 ; peek
00003F90                                    6243 @@gen_label309 DS    0H
00003F90 05EF                               6244          BALR  14,15
00003F92                                    6245 @@gen_label310 DS    0H
00003F92 B904 002F                          6246          LGR   2,15        ; ip
                                            6247 * ***               avail = (u32) n;
00003F96 E340 D0A8 0004          000000A8   6248          LG    4,168(0,13) ; n
                                            6249 * ***               d->peeked = avail;
00003F9C 5040 5018               00000018   6250          ST    4,24(0,5)   ; offset of peeked in snappy_decompressor
                                            6251 * ***               if (avail == 0)
00003FA0 1244                               6252          LTR   4,4
00003FA2 4780 C458               00004100   6253          BE    @ret_lab_1969
                                            6254 * ***                  return;
00003FA6                                    6255 @L808    DS    0H
                                            6256 * ***               d->ip_limit = ip + avail;
00003FA6 B916 00F4                          6257          LLGFR 15,4
00003FAA 41FF 2000               00000000   6258          LA    15,0(15,2)
00003FAE E3F0 5010 0024          00000010   6259          STG   15,16(0,5)  ; offset of ip_limit in snappy_decompressor
                                            6260 * ***            }
00003FB4                                    6261 @L806    DS    0H
00003FB4 1543                               6262          CLR   4,3
00003FB6 4740 C274               00003F1C   6263          BL    @L805
                                            6264 * ***            if (!writer_append(writer, ip, literal_length))
00003FBA E360 D0B8 0024          000000B8   6265          STG   6,184(0,13)
00003FC0 E320 D0C0 0024          000000C0   6266          STG   2,192(0,13)
00003FC6 B916 00F3                          6267          LLGFR 15,3
00003FCA E3F0 D0C8 0024          000000C8   6268          STG   15,200(0,13)
00003FD0 4110 D0B8               000000B8   6269          LA    1,184(0,13)
00003FD4 E3F0 C1F8 0004          00003EA0   6270          LG    15,@lit_1969_232 ; writer_append
00003FDA                                    6271 @@gen_label313 DS    0H
00003FDA 05EF                               6272          BALR  14,15
00003FDC                                    6273 @@gen_label314 DS    0H
                                                                                                                           Page  126 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003FDC C0FB 0000 00FF                     6274          NILF  15,X'000000FF'
00003FE2 12FF                               6275          LTR   15,15
00003FE4 4780 C458               00004100   6276          BZ    @ret_lab_1969
                                            6277 * ***               return;
00003FE8                                    6278 @L809    DS    0H
                                            6279 * ***            ip += literal_length;
00003FE8 B916 00F3                          6280          LLGFR 15,3
00003FEC 412F 2000               00000000   6281          LA    2,0(15,2)
                                            6282 * ***            if (d->ip_limit - ip < 5) { d->ip = ip; if (!refill_t\
                                            6283 * ag(d)) return; ip = d->ip; };
00003FF0 E3F0 5010 0004          00000010   6284          LG    15,16(0,5)  ; offset of ip_limit in snappy_decompressor
00003FF6 B909 00F2                          6285          SGR   15,2
00003FFA A7FF 0005               00000005   6286          CGHI  15,5
00003FFE 47B0 C454               000040FC   6287          BNL   @L812
00004002 E320 5008 0024          00000008   6288          STG   2,8(0,5)    ; offset of ip in snappy_decompressor
00004008 E350 D0B8 0024          000000B8   6289          STG   5,184(0,13)
0000400E 4110 D0B8               000000B8   6290          LA    1,184(0,13)
00004012 E3F0 C1C8 0004          00003E70   6291          LG    15,@lit_1969_223 ; refill_tag
00004018                                    6292 @@gen_label317 DS    0H
00004018 05EF                               6293          BALR  14,15
0000401A                                    6294 @@gen_label318 DS    0H
0000401A C0FB 0000 00FF                     6295          NILF  15,X'000000FF'
00004020 12FF                               6296          LTR   15,15
00004022 4780 C458               00004100   6297          BZ    @ret_lab_1969
00004026                                    6298 @L811    DS    0H
00004026 E320 5008 0004          00000008   6299          LG    2,8(0,5)    ; offset of ip in snappy_decompressor
0000402C                                    6300 @L810    DS    0H
                                            6301 * ***         } else {
0000402C 47F0 C454               000040FC   6302          B     @L812
00004030                                    6303 @L796    DS    0H
                                            6304 * ***            const u32 entry = char_table[c];
00004030 E330 C210 0080          00003EB8   6305          NG    3,@lit_1969_237
00004036 E340 C1E8 0004          00003E90   6306          LG    4,@lit_1969_226
0000403C B908 0033                          6307          AGR   3,3         ; *0x2
00004040 E333 4270 0095          00000270   6308          LLH   3,624(3,4)
                                            6309 * ***            const u32 trailer = (__builtin_bswap32(get_unaligned3\
                                            6310 * 2((u32 *)(ip)))) &
00004046 E320 D0B8 0024          000000B8   6311          STG   2,184(0,13)
0000404C 4110 D0B8               000000B8   6312          LA    1,184(0,13)
00004050 E3F0 C1F0 0004          00003E98   6313          LG    15,@lit_1969_230 ; get_unaligned32
00004056                                    6314 @@gen_label320 DS    0H
00004056 05EF                               6315          BALR  14,15
00004058                                    6316 @@gen_label321 DS    0H
00004058 B91F 00FF                          6317          LRVR  15,15
                                            6318 * ***               wordmask[entry >> 11];
0000405C 1813                               6319          LR    1,3
0000405E 8810 000B               0000000B   6320          SRL   1,11(0)
00004062 B916 0011                          6321          LLGFR 1,1
00004066 EB11 0002 000D          00000002   6322          SLLG  1,1,2(0)    ; *0x4
0000406C 54F1 425C               0000025C   6323          N     15,604(1,4)
                                            6324 * ***            const u32 length = entry & 0xff;
00004070 1813                               6325          LR    1,3
                                                                                                                           Page  127 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004072 C01B 0000 00FF                     6326          NILF  1,X'000000FF'
                                            6327 * ***            ip += entry >> 11;
00004078 1843                               6328          LR    4,3
0000407A 8840 000B               0000000B   6329          SRL   4,11(0)
0000407E B916 0044                          6330          LLGFR 4,4
00004082 4124 2000               00000000   6331          LA    2,0(4,2)
                                            6332 * ***
                                            6333 * ***
                                            6334 * ***   # 1332 "C:\asgkafka\librdkafka\src\snappy.c"
                                            6335 * ***            const u32 copy_offset = entry & 0x700;
00004086 C03B 0000 0700                     6336          NILF  3,X'00000700'
                                            6337 * ***            if (!writer_append_from_self(writer,
                                            6338 * ***                          copy_offset + trailer,
                                            6339 * ***                          length))
0000408C E360 D0B8 0024          000000B8   6340          STG   6,184(0,13)
00004092 1E3F                               6341          ALR   3,15
00004094 B916 00F3                          6342          LLGFR 15,3
00004098 E3F0 D0C0 0024          000000C0   6343          STG   15,192(0,13)
0000409E B916 00F1                          6344          LLGFR 15,1
000040A2 E3F0 D0C8 0024          000000C8   6345          STG   15,200(0,13)
000040A8 4110 D0B8               000000B8   6346          LA    1,184(0,13)
000040AC E3F0 C218 0004          00003EC0   6347          LG    15,@lit_1969_240 ; writer_append_from_self
000040B2                                    6348 @@gen_label322 DS    0H
000040B2 05EF                               6349          BALR  14,15
000040B4                                    6350 @@gen_label323 DS    0H
000040B4 C0FB 0000 00FF                     6351          NILF  15,X'000000FF'
000040BA 12FF                               6352          LTR   15,15
000040BC 4780 C458               00004100   6353          BZ    @ret_lab_1969
                                            6354 * ***               return;
000040C0                                    6355 @L813    DS    0H
                                            6356 * ***            if (d->ip_limit - ip < 5) { d->ip = ip; if (!refill_t\
                                            6357 * ag(d)) return; ip = d->ip; };
000040C0 E3F0 5010 0004          00000010   6358          LG    15,16(0,5)  ; offset of ip_limit in snappy_decompressor
000040C6 B909 00F2                          6359          SGR   15,2
000040CA A7FF 0005               00000005   6360          CGHI  15,5
000040CE 47B0 C454               000040FC   6361          BNL   @L814
000040D2 E320 5008 0024          00000008   6362          STG   2,8(0,5)    ; offset of ip in snappy_decompressor
000040D8 E350 D0B8 0024          000000B8   6363          STG   5,184(0,13)
000040DE 4110 D0B8               000000B8   6364          LA    1,184(0,13)
000040E2 E3F0 C1C8 0004          00003E70   6365          LG    15,@lit_1969_223 ; refill_tag
000040E8                                    6366 @@gen_label326 DS    0H
000040E8 05EF                               6367          BALR  14,15
000040EA                                    6368 @@gen_label327 DS    0H
000040EA C0FB 0000 00FF                     6369          NILF  15,X'000000FF'
000040F0 12FF                               6370          LTR   15,15
000040F2 4780 C458               00004100   6371          BZ    @ret_lab_1969
000040F6                                    6372 @L815    DS    0H
000040F6 E320 5008 0004          00000008   6373          LG    2,8(0,5)    ; offset of ip in snappy_decompressor
000040FC                                    6374 @L814    DS    0H
                                            6375 * ***         }
000040FC                                    6376 @L812    DS    0H
                                            6377 * ***      }
                                                                                                                           Page  128 
  Active Usings: @REGION_1969_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000040FC                                    6378 @L793    DS    0H
000040FC 47F0 C086               00003D2E   6379          B     @L791
                                            6380 * ***   }
00004100                                    6381 @ret_lab_1969 DS 0H
                                            6382 * * **** Start of Epilogue
                                            6383          DCCEPIL
00004100                                    6384+         ds 0h                                                          01-DCCEP
                                            6385+* Epilog
00004100 D707 D088 D088 00000088 00000088   6386+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004106 E3D0 D080 0004          00000080   6387+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000410C E3C0 D090 0004          00000090   6388+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004112 E3B0 C018 0004          00000018   6389+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004118 E3C0 B010 0021          00000010   6390+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000411E E3E0 D008 0004          00000008   6391+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004124 EB1C D020 0004          00000020   6392+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000412A 078E                               6393+         bcr 8,14                if same dsab, just return              01-DCCEP
0000412C E3F0 D010 0024          00000010   6394+         stg 15,16(0,13)         save return code                       01-DCCEP
00004132 E300 D018 0024          00000018   6395+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004138 E3F0 D090 0004          00000090   6396+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000413E E3F0 F018 0004          00000018   6397+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004144 47F0 F040               00000040   6398+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6399+* End of Epilog
                                            6400 * * **** End of Epilogue
                                            6401          DROP  12
                                            6402 *
                                            6403 *   DSECT for automatic variables in "decompress_all_tags"
                                            6404 *      (FUNCTION #1969)
                                            6405 *
00000000                00000000 000000B1   6406 @AUTO#decompress_all_tags DSECT
00000000                                    6407          DS    XL168
000000A8                                    6408 decompress_all_tags#copy_offset#10 DS 1F ; copy_offset
000000AC                000000AC 000000A8   6409          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6410 decompress_all_tags#length#10 DS 1F ; length
000000AC                000000AC 000000A8   6411          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6412 decompress_all_tags#trailer#10 DS 1F ; trailer
000000AC                000000AC 000000A8   6413          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6414 decompress_all_tags#entry#10 DS 1F ; entry
000000AC                000000AC 000000A8   6415          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6416 decompress_all_tags#n#8 DS 8XL1 ; n
000000B0                000000B0 000000A8   6417          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6418 decompress_all_tags#avail#7 DS 1F ; avail
000000AC                000000AC 000000A8   6419          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6420 decompress_all_tags#literal_ll#7 DS 1F ; literal_ll
000000AC                000000AC 000000A8   6421          ORG   @AUTO#decompress_all_tags+168
000000A8                                    6422 decompress_all_tags#literal_length#4 DS 1F ; literal_length
000000AC                000000AC 000000B0   6423          ORG   @AUTO#decompress_all_tags+176
000000B0                                    6424 decompress_all_tags#c#3 DS 1CL1 ; c
                                            6425 *
00004148                00000000 00005B58   6426 @CODE    CSECT
                                            6427 *
                                            6428 *
                                            6429 *
                                                                                                                           Page  129 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6430 * ....... start of refill_tag
00004148                                    6431 @LNAME1968 DS  0H
00004148 0000000A                           6432          DC    X'0000000A'
0000414C 9985868993936DA3                   6433          DC    C'refill_tag'
00004156 00                                 6434          DC    X'00'
                                            6435 refill_tag DCCPRLG CINDEX=1968,BASER=12,FRAME=224,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME1968
                                            6436          macro
                                            6437          dccextrn &m
                                            6438          gblc    &$dccext(1000)
                                            6439          gbla    &$dccexti
                                            6440          lcla    &i
                                            6441 &$dccext(&$dccexti+1) setc    '&m'
                                            6442 &i       seta    1
                                            6443 .loop    aif    (&i gt &$dccexti).around
                                            6444          aif    ('&$dccext(&i)' eq '&m').getout
                                            6445 &i       seta    &i+1
                                            6446          ago     .loop
                                            6447 .around  anop
                                            6448 &$dccexti seta &$dccexti+1
                                            6449          extrn  &m
                                            6450 .getout  anop
                                            6451          mend
00004158                                    6452+$eye0128    ds    0d                                                    02-DCCCA
00004158 C4C3C3                             6453+         dc cl3'DCC'                                                    02-DCCCA
0000415B 01                                 6454+         dc xl1'01' format one                                          02-DCCCA
0000415C 00000000                           6455+         dc a(0)                                                        02-DCCCA
00004160 00000000000041CA                   6456+         dc ad(@PER_1968)                                               02-DCCCA
00004168 00000000000000E0                   6457+         dc ad(224)                                                     02-DCCCA
00004170 0000000000000000                   6458+         dc ad(0)                                                       02-DCCCA
00004178 0000000000001000                   6459+         dc ad(4096)                                                    02-DCCCA
00004180 20                                 6460+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004181 03                                 6461+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004182 03                                 6462+         dc al1(3)                                                      02-DCCCA
00004183 08                                 6463+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004184 00                                 6464+         dc bl.8'00000000'                                              02-DCCCA
00004185 000000                             6465+         dc al3(0)                                                      02-DCCCA
00004188 0000000000004148                   6466+         dc ad(@LNAME1968)                                              02-DCCCA
00004190                                    6467+         ds 0d                                                          02-DCCCA
00004190 0000000000004158                   6468+         dc ad($eye0128)                                                02-DCCCA
00004198 0000000000000000                   6469+         dc ad(0)                                                       02-DCCCA
000041A0                                    6470+         ds    0d                                                       01-DCCPR
000041A0                                    6471+refill_tag ds  0d                                                       01-DCCPR
000041A0                                    6472+@REGION_1968_1 ds 0h                                                    01-DCCPR
000041A0 EBEC D008 0024          00000008   6473+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000041A6 E3E0 D088 0004          00000088   6474+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000041AC E3C0 D090 0004          00000090   6475+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000041B2 B904 002E                          6476+         lgr   2,14                copy addr of our savearea            01-DCCPR
000041B6 E3B0 C018 0004          00000018   6477+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000041BC A7EB 00E0               000000E0   6478+         aghi  14,224              increase by frame size               01-DCCPR
000041C0 E3E0 C020 0021          00000020   6479+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000041C6 4720 B020               00000020   6480+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  130 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000041CA                                    6481+@PER_1968 ds   0h                                                       01-DCCPR
000041CA EBDE 2080 0024          00000080   6482+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000041D0 E3C0 2090 0024          00000090   6483+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000041D6 B904 00D2                          6484+         lgr   13,2                set real frame pointer               01-DCCPR
000041DA B904 00CF                          6485+         lgr   12,15               set base reg                         01-DCCPR
                        000041A0            6486+         using @REGION_1968_1,12                                        01-DCCPR
                                            6487 * ******* End of Prologue
                                            6488 * *
                                            6489 * ***      const char *ip = d->ip;
000041DE E340 1000 0004          00000000   6490          LG    4,0(0,1)    ; d
000041E4 E330 4008 0004          00000008   6491          LG    3,8(0,4)    ; offset of ip in snappy_decompressor
                                            6492 * ***
                                            6493 * ***      if (ip == d->ip_limit) {
000041EA E3F0 4010 0004          00000010   6494          LG    15,16(0,4)  ; offset of ip_limit in snappy_decompressor
000041F0 B920 003F                          6495          CGR   3,15
000041F4 4770 C11E               000042BE   6496          BNE   @L816
                                            6497 * ***         size_t n;
                                            6498 * ***
                                            6499 * ***         skip(d->reader, d->peeked);
000041F8 E3F0 4000 0004          00000000   6500          LG    15,0(0,4)
000041FE E3F0 D0C0 0024          000000C0   6501          STG   15,192(0,13)
00004204 E3F0 4018 0016          00000018   6502          LLGF  15,24(0,4)
0000420A E3F0 D0C8 0024          000000C8   6503          STG   15,200(0,13)
00004210 4110 D0C0               000000C0   6504          LA    1,192(0,13)
00004214 E3F0 C0D0 0004          00004270   6505          LG    15,@lit_1968_243 ; skip
0000421A                                    6506 @@gen_label330 DS    0H
0000421A 05EF                               6507          BALR  14,15
0000421C                                    6508 @@gen_label331 DS    0H
                                            6509 * ***         ip = peek(d->reader, &n);
0000421C E3F0 4000 0004          00000000   6510          LG    15,0(0,4)
00004222 E3F0 D0C0 0024          000000C0   6511          STG   15,192(0,13)
00004228 41F0 D0B0               000000B0   6512          LA    15,176(0,13)
0000422C E3F0 D0C8 0024          000000C8   6513          STG   15,200(0,13)
00004232 4110 D0C0               000000C0   6514          LA    1,192(0,13)
00004236 E3F0 C0D8 0004          00004278   6515          LG    15,@lit_1968_244 ; peek
0000423C                                    6516 @@gen_label332 DS    0H
0000423C 05EF                               6517          BALR  14,15
0000423E                                    6518 @@gen_label333 DS    0H
0000423E B904 003F                          6519          LGR   3,15        ; ip
                                            6520 * ***         d->peeked = (u32) n;
00004242 E3F0 D0B0 0004          000000B0   6521          LG    15,176(0,13) ; n
00004248 50F0 4018               00000018   6522          ST    15,24(0,4)  ; offset of peeked in snappy_decompressor
                                            6523 * ***         if (n == 0) {
0000424C E559 D0B0 0000          000000B0   6524          CLGHSI 176(13),0
00004252 4770 C10E               000042AE   6525          BNE   @L817
                                            6526 * ***            d->eof = 1;
00004256 9201 401C      0000001C 00000001   6527          MVI   28(4),1     ; offset of eof in snappy_decompressor
                                            6528 * ***            return 0;
0000425A A7F9 0000               00000000   6529          LGHI  15,0        ; 0
0000425E 47F0 C3CE               0000456E   6530          B     @ret_lab_1968
00004268                                    6531          DS    0D
00004268 000000E0                           6532 @FRAMESIZE_1968 DC F'224'
                                                                                                                           Page  131 
  Active Usings: @REGION_1968_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000426C 00000000
00004270 0000000000000F40                   6533 @lit_1968_243 DC AD(skip)
00004278 0000000000000DC0                   6534 @lit_1968_244 DC AD(peek)
00004280 0000000000000000                   6535 @lit_1968_248 DC AD(__assert)
00004288 000000000000600E                   6536 @lit_1968_247 DC AD(@strings@)
00004290 0000000000005B58                   6537 @lit_1968_246 DC AD(@DATA)
00004298 00000000000000FF                   6538 @lit_1968_249 DC FD'255' 0x00000000000000ff
000042A0 0000000000000000                   6539 @lit_1968_253 DC AD(memmove)
000042A8 D200 3000 7000 00000000 00000000   6540 @lit_1968_257          MVC 0(1,3),0(7)
                                            6541 * ***         }
000042AE                                    6542 @L817    DS    0H
                                            6543 * ***         d->ip_limit = ip + n;
000042AE E3F0 D0B0 0004          000000B0   6544          LG    15,176(0,13) ; n
000042B4 41FF 3000               00000000   6545          LA    15,0(15,3)
000042B8 E3F0 4010 0024          00000010   6546          STG   15,16(0,4)  ; offset of ip_limit in snappy_decompressor
                                            6547 * ***      }
000042BE                                    6548 @L816    DS    0H
                                            6549 * ***
                                            6550 * ***
                                            6551 * ***      ((!(!((ip) < (d->ip_limit)))) ? (void)0 : __assert(__func__\
                                            6552 * , "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1362, "!(!((ip) < (d->i\
                                            6553 * p_limit)))"));
000042BE E3F0 4010 0004          00000010   6554          LG    15,16(0,4)  ; offset of ip_limit in snappy_decompressor
000042C4 B920 003F                          6555          CGR   3,15
000042C8 4740 C168               00004308   6556          BL    @L819
000042CC                                    6557 @L818    DS    0H
000042CC E3F0 C0F0 0004          00004290   6558          LG    15,@lit_1968_246
000042D2 41F0 F49E               0000049E   6559          LA    15,1182(0,15)
000042D6 E3F0 D0C0 0024          000000C0   6560          STG   15,192(0,13)
000042DC E3F0 C0E8 0004          00004288   6561          LG    15,@lit_1968_247
000042E2 4110 F022               00000022   6562          LA    1,34(0,15)
000042E6 E310 D0C8 0024          000000C8   6563          STG   1,200(0,13)
000042EC E548 D0D0 0552          000000D0   6564          MVGHI 208(13),1362
000042F2 41F0 F35E               0000035E   6565          LA    15,862(0,15)
000042F6 E3F0 D0D8 0024          000000D8   6566          STG   15,216(0,13)
000042FC 4110 D0C0               000000C0   6567          LA    1,192(0,13)
00004300 E3F0 C0E0 0004          00004280   6568          LG    15,@lit_1968_248 ; __assert
00004306                                    6569 @@gen_label336 DS    0H
00004306 05EF                               6570          BALR  14,15
00004308                                    6571 @@gen_label337 DS    0H
00004308                                    6572 @L819    DS    0H
                                            6573 * ***      const unsigned char c = *(const unsigned char *)(ip);
00004308 43F0 3000               00000000   6574          IC    15,0(0,3)   ; ip
0000430C 42F0 D0B8               000000B8   6575          STC   15,184(0,13) ; c
                                            6576 * ***      const u32 entry = char_table[c];
00004310 E3F0 C0F8 0080          00004298   6577          NG    15,@lit_1968_249
00004316 E310 C0F0 0004          00004290   6578          LG    1,@lit_1968_246
0000431C B908 00FF                          6579          AGR   15,15       ; *0x2
00004320 E35F 1270 0095          00000270   6580          LLH   5,624(15,1)
                                            6581 * ***      const u32 needed = (entry >> 11) + 1;
00004326 8850 000B               0000000B   6582          SRL   5,11(0)
0000432A A75A 0001               00000001   6583          AHI   5,1
                                                                                                                           Page  132 
  Active Usings: @REGION_1968_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6584 * ***      ((!(!((needed) <= (sizeof(d->scratch))))) ? (void)0 : __ass\
                                            6585 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1366, "!(!(\
                                            6586 * (needed) <= (sizeof(d->scratch))))"));
0000432E B916 00F5                          6587          LLGFR 15,5
00004332 C2FE 0000 0005                     6588          CLGFI 15,X'00000005'
00004338 47D0 C1D2               00004372   6589          BNH   @L821
0000433C                                    6590 @L820    DS    0H
0000433C 41F0 149E               0000049E   6591          LA    15,1182(0,1)
00004340 E3F0 D0C0 0024          000000C0   6592          STG   15,192(0,13)
00004346 E3F0 C0E8 0004          00004288   6593          LG    15,@lit_1968_247
0000434C 4110 F022               00000022   6594          LA    1,34(0,15)
00004350 E310 D0C8 0024          000000C8   6595          STG   1,200(0,13)
00004356 E548 D0D0 0556          000000D0   6596          MVGHI 208(13),1366
0000435C 41F0 F37A               0000037A   6597          LA    15,890(0,15)
00004360 E3F0 D0D8 0024          000000D8   6598          STG   15,216(0,13)
00004366 4110 D0C0               000000C0   6599          LA    1,192(0,13)
0000436A E3F0 C0E0 0004          00004280   6600          LG    15,@lit_1968_248 ; __assert
00004370                                    6601 @@gen_label339 DS    0H
00004370 05EF                               6602          BALR  14,15
00004372                                    6603 @@gen_label340 DS    0H
00004372                                    6604 @L821    DS    0H
                                            6605 * ***
                                            6606 * ***
                                            6607 * ***      u32 nbuf = (u32) (d->ip_limit - ip);
00004372 E320 4010 0004          00000010   6608          LG    2,16(0,4)   ; offset of ip_limit in snappy_decompressor
00004378 B909 0023                          6609          SGR   2,3
                                            6610 * ***
                                            6611 * ***      if (nbuf < needed) {
0000437C 1525                               6612          CLR   2,5
0000437E 47B0 C34E               000044EE   6613          BNL   @L822
                                            6614 * ***
                                            6615 * ***   # 1378 "C:\asgkafka\librdkafka\src\snappy.c"
                                            6616 * ***         memmove(d->scratch, ip, nbuf);
00004382 41F0 401D               0000001D   6617          LA    15,29(0,4)
00004386 E3F0 D0C0 0024          000000C0   6618          STG   15,192(0,13)
0000438C E330 D0C8 0024          000000C8   6619          STG   3,200(0,13)
00004392 B916 00F2                          6620          LLGFR 15,2
00004396 E3F0 D0D0 0024          000000D0   6621          STG   15,208(0,13)
0000439C 4110 D0C0               000000C0   6622          LA    1,192(0,13)
000043A0 E3F0 C100 0004          000042A0   6623          LG    15,@lit_1968_253 ; memmove
000043A6                                    6624 @@gen_label342 DS    0H
000043A6 05EF                               6625          BALR  14,15
000043A8                                    6626 @@gen_label343 DS    0H
                                            6627 * ***         skip(d->reader, d->peeked);
000043A8 E3F0 4000 0004          00000000   6628          LG    15,0(0,4)
000043AE E3F0 D0C0 0024          000000C0   6629          STG   15,192(0,13)
000043B4 E3F0 4018 0016          00000018   6630          LLGF  15,24(0,4)
000043BA E3F0 D0C8 0024          000000C8   6631          STG   15,200(0,13)
000043C0 4110 D0C0               000000C0   6632          LA    1,192(0,13)
000043C4 E3F0 C0D0 0004          00004270   6633          LG    15,@lit_1968_243 ; skip
000043CA                                    6634 @@gen_label344 DS    0H
000043CA 05EF                               6635          BALR  14,15
                                                                                                                           Page  133 
  Active Usings: @REGION_1968_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000043CC                                    6636 @@gen_label345 DS    0H
                                            6637 * ***         d->peeked = 0;
000043CC E54C 4018 0000          00000018   6638          MVHI  24(4),0     ; offset of peeked in snappy_decompressor
                                            6639 * ***         while (nbuf < needed) {
000043D2 47F0 C2EA               0000448A   6640          B     @L826
000043D6                                    6641 @L825    DS    0H
                                            6642 * ***            size_t length;
                                            6643 * ***            const char *src = peek(d->reader, &length);
000043D6 E3F0 4000 0004          00000000   6644          LG    15,0(0,4)
000043DC E3F0 D0C0 0024          000000C0   6645          STG   15,192(0,13)
000043E2 41F0 D0A8               000000A8   6646          LA    15,168(0,13)
000043E6 E3F0 D0C8 0024          000000C8   6647          STG   15,200(0,13)
000043EC 4110 D0C0               000000C0   6648          LA    1,192(0,13)
000043F0 E3F0 C0D8 0004          00004278   6649          LG    15,@lit_1968_244 ; peek
000043F6                                    6650 @@gen_label346 DS    0H
000043F6 05EF                               6651          BALR  14,15
000043F8                                    6652 @@gen_label347 DS    0H
                                            6653 * ***            if (length == 0)
000043F8 E559 D0A8 0000          000000A8   6654          CLGHSI 168(13),0
000043FE 4770 C26A               0000440A   6655          BNE   @L827
                                            6656 * ***               return 0;
00004402 A7F9 0000               00000000   6657          LGHI  15,0        ; 0
00004406 47F0 C3CE               0000456E   6658          B     @ret_lab_1968
0000440A                                    6659 @L827    DS    0H
                                            6660 * ***            u32 to_add = ((needed - nbuf) < ((u32) length) ? (nee\
                                            6661 * ded - nbuf) : ((u32) length));
0000440A 1815                               6662          LR    1,5
0000440C 1F12                               6663          SLR   1,2
0000440E 5510 D0AC               000000AC   6664          CL    1,172(0,13)
00004412 47B0 C27E               0000441E   6665          BNL   @L828
00004416 1815                               6666          LR    1,5
00004418 1F12                               6667          SLR   1,2
0000441A 47F0 C284               00004424   6668          B     @L829
0000441E                                    6669 @L828    DS    0H
0000441E E310 D0A8 0004          000000A8   6670          LG    1,168(0,13) ; length
00004424                                    6671 @L829    DS    0H
                                            6672 * ***            __memcpy(d->scratch + nbuf,src,to_add);
00004424 B916 0032                          6673          LLGFR 3,2
00004428 B916 0061                          6674          LLGFR 6,1
0000442C B904 007F                          6675          LGR   7,15
00004430 4133 401D               0000001D   6676          LA    3,29(3,4)
00004434 B902 00F6                          6677          LTGR  15,6
00004438 4780 C2C6               00004466   6678          BZ    @@gen_label352
0000443C A7FB FFFF               0000FFFF   6679          AGHI  15,-1
00004440 EB6F 0008 000A          00000008   6680          SRAG  6,15,8(0)
00004446 B902 0066                          6681          LTGR  6,6
0000444A 4780 C2C2               00004462   6682          BZ    @@gen_label351
0000444E                                    6683 @@gen_label350 DS 0H
0000444E D2FF 3000 7000 00000000 00000000   6684          MVC   0(256,3),0(7)
00004454 4130 3100               00000100   6685          LA    3,256(0,3)
00004458 4170 7100               00000100   6686          LA    7,256(0,7)
0000445C E360 C2AE 0046          0000444E   6687          BCTG  6,@@gen_label350
                                                                                                                           Page  134 
  Active Usings: @REGION_1968_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004462                                    6688 @@gen_label351 DS 0H
00004462 44F0 C108               000042A8   6689          EX    15,@lit_1968_257
00004466                                    6690 @@gen_label352 DS 0H
                                            6691 * ***            nbuf += to_add;
00004466 1E21                               6692          ALR   2,1
                                            6693 * ***            skip(d->reader, to_add);
00004468 E3F0 4000 0004          00000000   6694          LG    15,0(0,4)
0000446E E3F0 D0C0 0024          000000C0   6695          STG   15,192(0,13)
00004474 B916 00F1                          6696          LLGFR 15,1
00004478 E3F0 D0C8 0024          000000C8   6697          STG   15,200(0,13)
0000447E 4110 D0C0               000000C0   6698          LA    1,192(0,13)
00004482 E3F0 C0D0 0004          00004270   6699          LG    15,@lit_1968_243 ; skip
00004488                                    6700 @@gen_label353 DS    0H
00004488 05EF                               6701          BALR  14,15
0000448A                                    6702 @@gen_label354 DS    0H
                                            6703 * ***         }
0000448A                                    6704 @L826    DS    0H
0000448A 1525                               6705          CLR   2,5
0000448C 4740 C236               000043D6   6706          BL    @L825
                                            6707 * ***         ((!(!((nbuf) == (needed)))) ? (void)0 : __assert(__func_\
                                            6708 * _, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1391, "!(!((nbuf) == (\
                                            6709 * needed)))"));
00004490 1525                               6710          CLR   2,5
00004492 4780 C332               000044D2   6711          BE    @L831
00004496                                    6712 @L830    DS    0H
00004496 E3F0 C0F0 0004          00004290   6713          LG    15,@lit_1968_246
0000449C 41F0 F49E               0000049E   6714          LA    15,1182(0,15)
000044A0 E3F0 D0C0 0024          000000C0   6715          STG   15,192(0,13)
000044A6 E3F0 C0E8 0004          00004288   6716          LG    15,@lit_1968_247
000044AC 4110 F022               00000022   6717          LA    1,34(0,15)
000044B0 E310 D0C8 0024          000000C8   6718          STG   1,200(0,13)
000044B6 E548 D0D0 056F          000000D0   6719          MVGHI 208(13),1391
000044BC 41F0 F3A2               000003A2   6720          LA    15,930(0,15)
000044C0 E3F0 D0D8 0024          000000D8   6721          STG   15,216(0,13)
000044C6 4110 D0C0               000000C0   6722          LA    1,192(0,13)
000044CA E3F0 C0E0 0004          00004280   6723          LG    15,@lit_1968_248 ; __assert
000044D0                                    6724 @@gen_label357 DS    0H
000044D0 05EF                               6725          BALR  14,15
000044D2                                    6726 @@gen_label358 DS    0H
000044D2                                    6727 @L831    DS    0H
                                            6728 * ***         d->ip = d->scratch;
000044D2 41F0 401D               0000001D   6729          LA    15,29(0,4)
000044D6 E3F0 4008 0024          00000008   6730          STG   15,8(0,4)   ; offset of ip in snappy_decompressor
                                            6731 * ***         d->ip_limit = d->scratch + needed;
000044DC B916 00F5                          6732          LLGFR 15,5
000044E0 41FF 401D               0000001D   6733          LA    15,29(15,4)
000044E4 E3F0 4010 0024          00000010   6734          STG   15,16(0,4)  ; offset of ip_limit in snappy_decompressor
                                            6735 * ***      } else if (nbuf < 5) {
000044EA 47F0 C3CA               0000456A   6736          B     @L832
000044EE                                    6737 @L822    DS    0H
000044EE C22F 0000 0005                     6738          CLFI  2,X'00000005'
000044F4 47B0 C3C4               00004564   6739          BNL   @L833
                                                                                                                           Page  135 
  Active Usings: @REGION_1968_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6740 * ***
                                            6741 * ***
                                            6742 * ***
                                            6743 * ***
                                            6744 * ***         memmove(d->scratch, ip, nbuf);
000044F8 41F0 401D               0000001D   6745          LA    15,29(0,4)
000044FC E3F0 D0C0 0024          000000C0   6746          STG   15,192(0,13)
00004502 E330 D0C8 0024          000000C8   6747          STG   3,200(0,13)
00004508 B916 00F2                          6748          LLGFR 15,2
0000450C E3F0 D0D0 0024          000000D0   6749          STG   15,208(0,13)
00004512 4110 D0C0               000000C0   6750          LA    1,192(0,13)
00004516 E3F0 C100 0004          000042A0   6751          LG    15,@lit_1968_253 ; memmove
0000451C                                    6752 @@gen_label360 DS    0H
0000451C 05EF                               6753          BALR  14,15
0000451E                                    6754 @@gen_label361 DS    0H
                                            6755 * ***         skip(d->reader, d->peeked);
0000451E E3F0 4000 0004          00000000   6756          LG    15,0(0,4)
00004524 E3F0 D0C0 0024          000000C0   6757          STG   15,192(0,13)
0000452A E3F0 4018 0016          00000018   6758          LLGF  15,24(0,4)
00004530 E3F0 D0C8 0024          000000C8   6759          STG   15,200(0,13)
00004536 4110 D0C0               000000C0   6760          LA    1,192(0,13)
0000453A E3F0 C0D0 0004          00004270   6761          LG    15,@lit_1968_243 ; skip
00004540                                    6762 @@gen_label362 DS    0H
00004540 05EF                               6763          BALR  14,15
00004542                                    6764 @@gen_label363 DS    0H
                                            6765 * ***         d->peeked = 0;
00004542 E54C 4018 0000          00000018   6766          MVHI  24(4),0     ; offset of peeked in snappy_decompressor
                                            6767 * ***         d->ip = d->scratch;
00004548 41F0 401D               0000001D   6768          LA    15,29(0,4)
0000454C E3F0 4008 0024          00000008   6769          STG   15,8(0,4)   ; offset of ip in snappy_decompressor
                                            6770 * ***         d->ip_limit = d->scratch + nbuf;
00004552 B916 00F2                          6771          LLGFR 15,2
00004556 41FF 401D               0000001D   6772          LA    15,29(15,4)
0000455A E3F0 4010 0024          00000010   6773          STG   15,16(0,4)  ; offset of ip_limit in snappy_decompressor
                                            6774 * ***      } else {
00004560 47F0 C3CA               0000456A   6775          B     @L832
00004564                                    6776 @L833    DS    0H
                                            6777 * ***
                                            6778 * ***         d->ip = ip;
00004564 E330 4008 0024          00000008   6779          STG   3,8(0,4)    ; offset of ip in snappy_decompressor
                                            6780 * ***      }
0000456A                                    6781 @L834    DS    0H
                                            6782 * ***      return 1;
0000456A                                    6783 @L832    DS    0H
0000456A A7F9 0001               00000001   6784          LGHI  15,1        ; 1
                                            6785 * ***   }
0000456E                                    6786 @ret_lab_1968 DS 0H
                                            6787 * * **** Start of Epilogue
                                            6788          DCCEPIL
0000456E                                    6789+         ds 0h                                                          01-DCCEP
                                            6790+* Epilog
0000456E D707 D088 D088 00000088 00000088   6791+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  136 
  Active Usings: @REGION_1968_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004574 E3D0 D080 0004          00000080   6792+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000457A E3C0 D090 0004          00000090   6793+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004580 E3B0 C018 0004          00000018   6794+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004586 E3C0 B010 0021          00000010   6795+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000458C E3E0 D008 0004          00000008   6796+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004592 EB1C D020 0004          00000020   6797+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004598 078E                               6798+         bcr 8,14                if same dsab, just return              01-DCCEP
0000459A E3F0 D010 0024          00000010   6799+         stg 15,16(0,13)         save return code                       01-DCCEP
000045A0 E300 D018 0024          00000018   6800+         stg 0,24(0,13)          save more return code                  01-DCCEP
000045A6 E3F0 D090 0004          00000090   6801+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000045AC E3F0 F018 0004          00000018   6802+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000045B2 47F0 F040               00000040   6803+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6804+* End of Epilog
                                            6805 * * **** End of Epilogue
                                            6806          DROP  12
                                            6807 *
                                            6808 *   DSECT for automatic variables in "refill_tag"
                                            6809 *      (FUNCTION #1968)
                                            6810 *
00000000                00000000 000000B9   6811 @AUTO#refill_tag DSECT
00000000                                    6812          DS    XL168
000000A8                                    6813 refill_tag#to_add#4 DS 1F  ; to_add
000000AC                000000AC 000000A8   6814          ORG   @AUTO#refill_tag+168
000000A8                                    6815 refill_tag#length#4 DS 8XL1 ; length
000000B0                000000B0 000000A8   6816          ORG   @AUTO#refill_tag+168
000000A8                                    6817 refill_tag#nbuf#2 DS 1F    ; nbuf
000000AC                000000AC 000000A8   6818          ORG   @AUTO#refill_tag+168
000000A8                                    6819 refill_tag#needed#2 DS 1F  ; needed
000000AC                000000AC 000000A8   6820          ORG   @AUTO#refill_tag+168
000000A8                                    6821 refill_tag#entry#2 DS 1F   ; entry
000000AC                000000AC 000000B0   6822          ORG   @AUTO#refill_tag+176
000000B0                                    6823 refill_tag#n#1 DS 8XL1     ; n
000000B8                000000B8 000000B8   6824          ORG   @AUTO#refill_tag+184
000000B8                                    6825 refill_tag#c#2 DS 1CL1     ; c
                                            6826 *
000045B6                00000000 00005B58   6827 @CODE    CSECT
                                            6828 *
                                            6829 *
                                            6830 *
                                            6831 * ....... start of internal_uncompress
000045B6                                    6832 @LNAME1970 DS  0H
000045B6 00000013                           6833          DC    X'00000013'
000045BA 8995A38599958193                   6834          DC    C'internal_uncompress'
000045CD 00                                 6835          DC    X'00'
                                            6836 internal_uncompress DCCPRLG CINDEX=1970,BASER=12,FRAME=232,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1970
                                            6837          macro
                                            6838          dccextrn &m
                                            6839          gblc    &$dccext(1000)
                                            6840          gbla    &$dccexti
                                            6841          lcla    &i
                                            6842 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  137 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6843 &i       seta    1
                                            6844 .loop    aif    (&i gt &$dccexti).around
                                            6845          aif    ('&$dccext(&i)' eq '&m').getout
                                            6846 &i       seta    &i+1
                                            6847          ago     .loop
                                            6848 .around  anop
                                            6849 &$dccexti seta &$dccexti+1
                                            6850          extrn  &m
                                            6851 .getout  anop
                                            6852          mend
000045D0                                    6853+$eye0131    ds    0d                                                    02-DCCCA
000045D0 C4C3C3                             6854+         dc cl3'DCC'                                                    02-DCCCA
000045D3 01                                 6855+         dc xl1'01' format one                                          02-DCCCA
000045D4 00000000                           6856+         dc a(0)                                                        02-DCCCA
000045D8 0000000000004642                   6857+         dc ad(@PER_1970)                                               02-DCCCA
000045E0 00000000000000E8                   6858+         dc ad(232)                                                     02-DCCCA
000045E8 0000000000000000                   6859+         dc ad(0)                                                       02-DCCCA
000045F0 0000000000001000                   6860+         dc ad(4096)                                                    02-DCCCA
000045F8 20                                 6861+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000045F9 03                                 6862+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000045FA 03                                 6863+         dc al1(3)                                                      02-DCCCA
000045FB 08                                 6864+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000045FC 00                                 6865+         dc bl.8'00000000'                                              02-DCCCA
000045FD 000000                             6866+         dc al3(0)                                                      02-DCCCA
00004600 00000000000045B6                   6867+         dc ad(@LNAME1970)                                              02-DCCCA
00004608                                    6868+         ds 0d                                                          02-DCCCA
00004608 00000000000045D0                   6869+         dc ad($eye0131)                                                02-DCCCA
00004610 0000000000000000                   6870+         dc ad(0)                                                       02-DCCCA
00004618                                    6871+         ds    0d                                                       01-DCCPR
00004618                                    6872+internal_uncompress ds 0d                                               01-DCCPR
00004618                                    6873+@REGION_1970_1 ds 0h                                                    01-DCCPR
00004618 EBEC D008 0024          00000008   6874+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000461E E3E0 D088 0004          00000088   6875+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004624 E3C0 D090 0004          00000090   6876+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000462A B904 002E                          6877+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000462E E3B0 C018 0004          00000018   6878+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004634 A7EB 00E8               000000E8   6879+         aghi  14,232              increase by frame size               01-DCCPR
00004638 E3E0 C020 0021          00000020   6880+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000463E 4720 B020               00000020   6881+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004642                                    6882+@PER_1970 ds   0h                                                       01-DCCPR
00004642 EBDE 2080 0024          00000080   6883+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004648 E3C0 2090 0024          00000090   6884+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000464E B904 00D2                          6885+         lgr   13,2                set real frame pointer               01-DCCPR
00004652 B904 00CF                          6886+         lgr   12,15               set base reg                         01-DCCPR
                        00004618            6887+         using @REGION_1970_1,12                                        01-DCCPR
00004656 B904 0031                          6888          LGR   3,1         ; ptr to parm area
                                            6889 * ******* End of Prologue
                                            6890 * *
0000465A E320 3008 0004          00000008   6891          LG    2,8(0,3)    ; writer
                                            6892 * ***      struct snappy_decompressor decompressor;
                                            6893 * ***      u32 uncompressed_len = 0;
00004660 E54C D0A8 0000          000000A8   6894          MVHI  168(13),0   ; uncompressed_len
                                                                                                                           Page  138 
  Active Usings: @REGION_1970_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6895 * ***
                                            6896 * ***      init_snappy_decompressor(&decompressor, r);
00004666 41F0 D0B0               000000B0   6897          LA    15,176(0,13)
0000466A E3F0 D0D8 0024          000000D8   6898          STG   15,216(0,13)
00004670 E3F0 3000 0004          00000000   6899          LG    15,0(0,3)   ; r
00004676 E3F0 D0E0 0024          000000E0   6900          STG   15,224(0,13)
0000467C 4110 D0D8               000000D8   6901          LA    1,216(0,13)
00004680 E3F0 C0B0 0004          000046C8   6902          LG    15,@lit_1970_266 ; init_snappy_decompressor
00004686                                    6903 @@gen_label364 DS    0H
00004686 05EF                               6904          BALR  14,15
00004688                                    6905 @@gen_label365 DS    0H
                                            6906 * ***
                                            6907 * ***      if (!read_uncompressed_length(&decompressor, &uncompressed_\
                                            6908 * len))
00004688 41F0 D0B0               000000B0   6909          LA    15,176(0,13)
0000468C E3F0 D0D8 0024          000000D8   6910          STG   15,216(0,13)
00004692 41F0 D0A8               000000A8   6911          LA    15,168(0,13)
00004696 E3F0 D0E0 0024          000000E0   6912          STG   15,224(0,13)
0000469C 4110 D0D8               000000D8   6913          LA    1,216(0,13)
000046A0 E3F0 C0B8 0004          000046D0   6914          LG    15,@lit_1970_267 ; read_uncompressed_length
000046A6                                    6915 @@gen_label366 DS    0H
000046A6 05EF                               6916          BALR  14,15
000046A8                                    6917 @@gen_label367 DS    0H
000046A8 C0FB 0000 00FF                     6918          NILF  15,X'000000FF'
000046AE 12FF                               6919          LTR   15,15
000046B0 4770 C0E0               000046F8   6920          BNZ   @L835
                                            6921 * ***         return -5;
000046B4 A7F9 FFFB               0000FFFB   6922          LGHI  15,-5       ; -5
000046B8 47F0 C17A               00004792   6923          B     @ret_lab_1970
000046C0                                    6924          DS    0D
000046C0 000000E8                           6925 @FRAMESIZE_1970 DC F'232'
000046C4 00000000
000046C8 00000000000038B8                   6926 @lit_1970_266 DC AD(init_snappy_decompressor)
000046D0 0000000000003A88                   6927 @lit_1970_267 DC AD(read_uncompressed_length)
000046D8 0000000000001500                   6928 @lit_1970_270 DC AD(writer_set_expected_length)
000046E0 0000000000003CA8                   6929 @lit_1970_271 DC AD(decompress_all_tags)
000046E8 0000000000003960                   6930 @lit_1970_272 DC AD(exit_snappy_decompressor)
000046F0 0000000000001590                   6931 @lit_1970_273 DC AD(writer_check_length)
000046F8                                    6932 @L835    DS    0H
                                            6933 * ***
                                            6934 * ***      if ((u64) (uncompressed_len) > max_len)
000046F8 E3F0 D0A8 0016          000000A8   6935          LLGF  15,168(0,13) ; uncompressed_len
000046FE E3F0 3014 0031          00000014   6936          CLGF  15,20(0,3)
00004704 47D0 C0F8               00004710   6937          BNH   @L836
                                            6938 * ***         return -5;
00004708 A7F9 FFFB               0000FFFB   6939          LGHI  15,-5       ; -5
0000470C 47F0 C17A               00004792   6940          B     @ret_lab_1970
00004710                                    6941 @L836    DS    0H
                                            6942 * ***
                                            6943 * ***      writer_set_expected_length(writer, uncompressed_len);
00004710 E320 D0D8 0024          000000D8   6944          STG   2,216(0,13)
00004716 E3F0 D0A8 0016          000000A8   6945          LLGF  15,168(0,13) ; uncompressed_len
                                                                                                                           Page  139 
  Active Usings: @REGION_1970_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000471C E3F0 D0E0 0024          000000E0   6946          STG   15,224(0,13)
00004722 4110 D0D8               000000D8   6947          LA    1,216(0,13)
00004726 E3F0 C0C0 0004          000046D8   6948          LG    15,@lit_1970_270 ; writer_set_expected_length
0000472C                                    6949 @@gen_label370 DS    0H
0000472C 05EF                               6950          BALR  14,15
0000472E                                    6951 @@gen_label371 DS    0H
                                            6952 * ***
                                            6953 * ***
                                            6954 * ***      decompress_all_tags(&decompressor, writer);
0000472E 41F0 D0B0               000000B0   6955          LA    15,176(0,13)
00004732 E3F0 D0D8 0024          000000D8   6956          STG   15,216(0,13)
00004738 E320 D0E0 0024          000000E0   6957          STG   2,224(0,13)
0000473E 4110 D0D8               000000D8   6958          LA    1,216(0,13)
00004742 E3F0 C0C8 0004          000046E0   6959          LG    15,@lit_1970_271 ; decompress_all_tags
00004748                                    6960 @@gen_label372 DS    0H
00004748 05EF                               6961          BALR  14,15
0000474A                                    6962 @@gen_label373 DS    0H
                                            6963 * ***
                                            6964 * ***      exit_snappy_decompressor(&decompressor);
0000474A 41F0 D0B0               000000B0   6965          LA    15,176(0,13)
0000474E E3F0 D0D8 0024          000000D8   6966          STG   15,216(0,13)
00004754 4110 D0D8               000000D8   6967          LA    1,216(0,13)
00004758 E3F0 C0D0 0004          000046E8   6968          LG    15,@lit_1970_272 ; exit_snappy_decompressor
0000475E                                    6969 @@gen_label374 DS    0H
0000475E 05EF                               6970          BALR  14,15
00004760                                    6971 @@gen_label375 DS    0H
                                            6972 * ***      if (decompressor.eof && writer_check_length(writer))
00004760 9500 D0CC      000000CC 00000000   6973          CLI   204(13),0
00004764 4780 C176               0000478E   6974          BE    @L837
00004768 E320 D0D8 0024          000000D8   6975          STG   2,216(0,13)
0000476E 4110 D0D8               000000D8   6976          LA    1,216(0,13)
00004772 E3F0 C0D8 0004          000046F0   6977          LG    15,@lit_1970_273 ; writer_check_length
00004778                                    6978 @@gen_label377 DS    0H
00004778 05EF                               6979          BALR  14,15
0000477A                                    6980 @@gen_label378 DS    0H
0000477A C0FB 0000 00FF                     6981          NILF  15,X'000000FF'
00004780 12FF                               6982          LTR   15,15
00004782 4780 C176               0000478E   6983          BZ    @L837
                                            6984 * ***         return 0;
00004786 A7F9 0000               00000000   6985          LGHI  15,0        ; 0
0000478A 47F0 C17A               00004792   6986          B     @ret_lab_1970
0000478E                                    6987 @L837    DS    0H
                                            6988 * ***      return -5;
0000478E A7F9 FFFB               0000FFFB   6989          LGHI  15,-5       ; -5
                                            6990 * ***   }
00004792                                    6991 @ret_lab_1970 DS 0H
                                            6992 * * **** Start of Epilogue
                                            6993          DCCEPIL
00004792                                    6994+         ds 0h                                                          01-DCCEP
                                            6995+* Epilog
00004792 D707 D088 D088 00000088 00000088   6996+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004798 E3D0 D080 0004          00000080   6997+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  140 
  Active Usings: @REGION_1970_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000479E E3C0 D090 0004          00000090   6998+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000047A4 E3B0 C018 0004          00000018   6999+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000047AA E3C0 B010 0021          00000010   7000+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000047B0 E3E0 D008 0004          00000008   7001+         lg  14,8(0,13)          load up return address                 01-DCCEP
000047B6 EB1C D020 0004          00000020   7002+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000047BC 078E                               7003+         bcr 8,14                if same dsab, just return              01-DCCEP
000047BE E3F0 D010 0024          00000010   7004+         stg 15,16(0,13)         save return code                       01-DCCEP
000047C4 E300 D018 0024          00000018   7005+         stg 0,24(0,13)          save more return code                  01-DCCEP
000047CA E3F0 D090 0004          00000090   7006+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000047D0 E3F0 F018 0004          00000018   7007+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000047D6 47F0 F040               00000040   7008+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7009+* End of Epilog
                                            7010 * * **** End of Epilogue
                                            7011          DROP  12
                                            7012 *
                                            7013 *   DSECT for automatic variables in "internal_uncompress"
                                            7014 *      (FUNCTION #1970)
                                            7015 *
00000000                00000000 000000D8   7016 @AUTO#internal_uncompress DSECT
00000000                                    7017          DS    XL168
000000A8                                    7018 internal_uncompress#uncompressed_len#0 DS 1F ; uncompressed_len
000000AC                000000AC 000000B0   7019          ORG   @AUTO#internal_uncompress+176
000000B0                                    7020 internal_uncompress#decompressor#0 DS 40XL1 ; decompressor
                                            7021 *
000047DA                00000000 00005B58   7022 @CODE    CSECT
                                            7023 *
                                            7024 *
                                            7025 *
                                            7026 * ....... start of sn_compress
000047DA                                    7027 @LNAME1971 DS  0H
000047DA 0000000B                           7028          DC    X'0000000B'
000047DE A2956D8396949799                   7029          DC    C'sn_compress'
000047E9 00                                 7030          DC    X'00'
                                            7031 sn_compress DCCPRLG CINDEX=1971,BASER=12,FRAME=232,ENTRY=NO,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME1971
                                            7032          macro
                                            7033          dccextrn &m
                                            7034          gblc    &$dccext(1000)
                                            7035          gbla    &$dccexti
                                            7036          lcla    &i
                                            7037 &$dccext(&$dccexti+1) setc    '&m'
                                            7038 &i       seta    1
                                            7039 .loop    aif    (&i gt &$dccexti).around
                                            7040          aif    ('&$dccext(&i)' eq '&m').getout
                                            7041 &i       seta    &i+1
                                            7042          ago     .loop
                                            7043 .around  anop
                                            7044 &$dccexti seta &$dccexti+1
                                            7045          extrn  &m
                                            7046 .getout  anop
                                            7047          mend
000047F0                                    7048+$eye0134    ds    0d                                                    02-DCCCA
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000047F0 C4C3C3                             7049+         dc cl3'DCC'                                                    02-DCCCA
000047F3 01                                 7050+         dc xl1'01' format one                                          02-DCCCA
000047F4 00000000                           7051+         dc a(0)                                                        02-DCCCA
000047F8 0000000000004862                   7052+         dc ad(@PER_1971)                                               02-DCCCA
00004800 00000000000000E8                   7053+         dc ad(232)                                                     02-DCCCA
00004808 0000000000000000                   7054+         dc ad(0)                                                       02-DCCCA
00004810 0000000000001000                   7055+         dc ad(4096)                                                    02-DCCCA
00004818 20                                 7056+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004819 03                                 7057+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000481A 03                                 7058+         dc al1(3)                                                      02-DCCCA
0000481B 08                                 7059+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000481C 00                                 7060+         dc bl.8'00000000'                                              02-DCCCA
0000481D 000000                             7061+         dc al3(0)                                                      02-DCCCA
00004820 00000000000047DA                   7062+         dc ad(@LNAME1971)                                              02-DCCCA
00004828                                    7063+         ds 0d                                                          02-DCCCA
00004828 00000000000047F0                   7064+         dc ad($eye0134)                                                02-DCCCA
00004830 0000000000000000                   7065+         dc ad(0)                                                       02-DCCCA
00004838                                    7066+         ds    0d                                                       01-DCCPR
00004838                                    7067+sn_compress ds 0d                                                       01-DCCPR
00004838                                    7068+@REGION_1971_1 ds 0h                                                    01-DCCPR
00004838 EBEC D008 0024          00000008   7069+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000483E E3E0 D088 0004          00000088   7070+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004844 E3C0 D090 0004          00000090   7071+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000484A B904 002E                          7072+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000484E E3B0 C018 0004          00000018   7073+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004854 A7EB 00E8               000000E8   7074+         aghi  14,232              increase by frame size               01-DCCPR
00004858 E3E0 C020 0021          00000020   7075+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000485E 4720 B020               00000020   7076+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004862                                    7077+@PER_1971 ds   0h                                                       01-DCCPR
00004862 EBDE 2080 0024          00000080   7078+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004868 E3C0 2090 0024          00000090   7079+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000486E B904 00D2                          7080+         lgr   13,2                set real frame pointer               01-DCCPR
00004872 B904 00CF                          7081+         lgr   12,15               set base reg                         01-DCCPR
                        00004838            7082+         using @REGION_1971_1,12                                        01-DCCPR
                                            7083 * ******* End of Prologue
                                            7084 * *
00004876 EB79 1000 0004          00000000   7085          LMG   7,9,0(1)    ; env
                                            7086 * ***      int err;
                                            7087 * ***      size_t written = 0;
0000487C A759 0000               00000000   7088          LGHI  5,0         ; 0
                                            7089 * ***      int N = available(reader);
00004880 E380 D0C0 0024          000000C0   7090          STG   8,192(0,13)
00004886 4110 D0C0               000000C0   7091          LA    1,192(0,13)
0000488A E3F0 C0C8 0004          00004900   7092          LG    15,@lit_1971_278 ; available
00004890                                    7093 @@gen_label380 DS    0H
00004890 05EF                               7094          BALR  14,15
00004892                                    7095 @@gen_label381 DS    0H
00004892 183F                               7096          LR    3,15        ; N
                                            7097 * ***      char ulength[5];
                                            7098 * ***      char *p = varint_encode32(ulength, N);
00004894 4110 D0B8               000000B8   7099          LA    1,184(0,13)
00004898 E310 D0C0 0024          000000C0   7100          STG   1,192(0,13)
                                                                                                                           Page  142 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000489E B916 00FF                          7101          LLGFR 15,15
000048A2 E3F0 D0C8 0024          000000C8   7102          STG   15,200(0,13)
000048A8 4110 D0C0               000000C0   7103          LA    1,192(0,13)
000048AC E3F0 C0D0 0004          00004908   7104          LG    15,@lit_1971_279 ; varint_encode32
000048B2                                    7105 @@gen_label382 DS    0H
000048B2 05EF                               7106          BALR  14,15
000048B4                                    7107 @@gen_label383 DS    0H
000048B4 B904 002F                          7108          LGR   2,15
                                            7109 * ***
                                            7110 * ***      append(writer, ulength, p - ulength);
000048B8 E390 D0C0 0024          000000C0   7111          STG   9,192(0,13)
000048BE 4110 D0B8               000000B8   7112          LA    1,184(0,13)
000048C2 E310 D0C8 0024          000000C8   7113          STG   1,200(0,13)
000048C8 4110 D0B8               000000B8   7114          LA    1,184(0,13)
000048CC B904 00F2                          7115          LGR   15,2
000048D0 B909 00F1                          7116          SGR   15,1
000048D4 E3F0 D0D0 0024          000000D0   7117          STG   15,208(0,13)
000048DA 4110 D0C0               000000C0   7118          LA    1,192(0,13)
000048DE E3F0 C0D8 0004          00004910   7119          LG    15,@lit_1971_280 ; append
000048E4                                    7120 @@gen_label384 DS    0H
000048E4 05EF                               7121          BALR  14,15
000048E6                                    7122 @@gen_label385 DS    0H
                                            7123 * ***      written += (p - ulength);
000048E6 41F0 D0B8               000000B8   7124          LA    15,184(0,13)
000048EA B909 002F                          7125          SGR   2,15
000048EE B90A 0052                          7126          ALGR  5,2
                                            7127 * ***
                                            7128 * ***      while (N > 0) {
000048F2 47F0 C3EE               00004C26   7129          B     @L841
000048F8                                    7130          DS    0D
000048F8 000000E8                           7131 @FRAMESIZE_1971 DC F'232'
000048FC 00000000
00004900 0000000000000D48                   7132 @lit_1971_278 DC AD(available)
00004908 0000000000000B00                   7133 @lit_1971_279 DC AD(varint_encode32)
00004910 00000000000010E8                   7134 @lit_1971_280 DC AD(append)
00004918 0000000000000DC0                   7135 @lit_1971_281 DC AD(peek)
00004920 D200 1000 4000 00000000 00000000   7136 @lit_1971_285          MVC 0(1,1),0(4)
00004926 0000
00004928 0000000000000F40                   7137 @lit_1971_286 DC AD(skip)
00004930 D200 B000 4000 00000000 00000000   7138 @lit_1971_288          MVC 0(1,11),0(4)
00004936 0000
00004938 0000000000000000                   7139 @lit_1971_292 DC AD(__assert)
00004940 000000000000600E                   7140 @lit_1971_291 DC AD(@strings@)
00004948 0000000000005B58                   7141 @lit_1971_290 DC AD(@DATA)
00004950 0000000000002A30                   7142 @lit_1971_294 DC AD(get_hash_table)
00004958 0000000000002148                   7143 @lit_1971_295 DC AD(rd_kafka_snappy_max_compressed_length)
00004960 0000000000001388                   7144 @lit_1971_296 DC AD(sink_peek)
00004968 0000000000003110                   7145 @lit_1971_297 DC AD(compress_fragment)
00004970                                    7146 @L840    DS    0H
                                            7147 * ***
                                            7148 * ***         size_t fragment_size;
                                            7149 * ***         const char *fragment = peek(reader, &fragment_size);
                                                                                                                           Page  143 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004970 E380 D0C0 0024          000000C0   7150          STG   8,192(0,13)
00004976 41F0 D0B0               000000B0   7151          LA    15,176(0,13)
0000497A E3F0 D0C8 0024          000000C8   7152          STG   15,200(0,13)
00004980 4110 D0C0               000000C0   7153          LA    1,192(0,13)
00004984 E3F0 C0E0 0004          00004918   7154          LG    15,@lit_1971_281 ; peek
0000498A                                    7155 @@gen_label386 DS    0H
0000498A 05EF                               7156          BALR  14,15
0000498C                                    7157 @@gen_label387 DS    0H
0000498C B904 004F                          7158          LGR   4,15        ; fragment
                                            7159 * ***         if (fragment_size == 0) {
00004990 E559 D0B0 0000          000000B0   7160          CLGHSI 176(13),0
00004996 4770 C16A               000049A2   7161          BNE   @L842
                                            7162 * ***            err = -5;
0000499A A7F8 FFFB               0000FFFB   7163          LHI   15,-5       ; -5
                                            7164 * ***            goto out;
0000499E 47F0 C3F8               00004C30   7165          B     @_out@1971@2
                                            7166 * ***         }
000049A2                                    7167 @L842    DS    0H
                                            7168 * ***         const unsigned num_to_read = ((N) < ((1 << 16)) ? (N) : \
                                            7169 * ((1 << 16)));
000049A2 C23D 0001 0000                     7170          CFI   3,X'00010000'
000049A8 47B0 C17A               000049B2   7171          BNL   @L843
000049AC 18A3                               7172          LR    10,3
000049AE 47F0 C180               000049B8   7173          B     @L844
000049B2                                    7174 @L843    DS    0H
000049B2 C0A9 0001 0000                     7175          IILF  10,X'00010000' ; 65536
000049B8                                    7176 @L844    DS    0H
                                            7177 * ***         size_t bytes_read = fragment_size;
000049B8 E320 D0B0 0004          000000B0   7178          LG    2,176(0,13) ; fragment_size
                                            7179 * ***
                                            7180 * ***         int pending_advance = 0;
000049BE A768 0000               00000000   7181          LHI   6,0         ; 0
                                            7182 * ***         if (bytes_read >= num_to_read) {
000049C2 B931 002A                          7183          CLGFR 2,10
000049C6 4740 C1A2               000049DA   7184          BL    @L845
                                            7185 * ***
                                            7186 * ***            pending_advance = num_to_read;
000049CA 186A                               7187          LR    6,10        ; pending_advance
                                            7188 * ***            fragment_size = num_to_read;
000049CC B916 00FA                          7189          LLGFR 15,10
000049D0 E3F0 D0B0 0024          000000B0   7190          STG   15,176(0,13) ; fragment_size
                                            7191 * ***         }
000049D6 47F0 C2EC               00004B24   7192          B     @L846
                                            7193 * ***         else {
000049DA                                    7194 @L845    DS    0H
                                            7195 * ***            __memcpy(env->scratch,fragment,bytes_read);
000049DA E310 7008 0004          00000008   7196          LG    1,8(0,7)
000049E0 B902 00F2                          7197          LTGR  15,2
000049E4 4780 C1DA               00004A12   7198          BZ    @@gen_label393
000049E8 A7FB FFFF               0000FFFF   7199          AGHI  15,-1
000049EC EBBF 0008 000A          00000008   7200          SRAG  11,15,8(0)
000049F2 B902 00BB                          7201          LTGR  11,11
                                                                                                                           Page  144 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000049F6 4780 C1D6               00004A0E   7202          BZ    @@gen_label392
000049FA                                    7203 @@gen_label391 DS 0H
000049FA D2FF 1000 4000 00000000 00000000   7204          MVC   0(256,1),0(4)
00004A00 4110 1100               00000100   7205          LA    1,256(0,1)
00004A04 4140 4100               00000100   7206          LA    4,256(0,4)
00004A08 E3B0 C1C2 0046          000049FA   7207          BCTG  11,@@gen_label391
00004A0E                                    7208 @@gen_label392 DS 0H
00004A0E 44F0 C0E8               00004920   7209          EX    15,@lit_1971_285
00004A12                                    7210 @@gen_label393 DS 0H
                                            7211 * ***            skip(reader, bytes_read);
00004A12 E380 D0C0 0024          000000C0   7212          STG   8,192(0,13)
00004A18 E320 D0C8 0024          000000C8   7213          STG   2,200(0,13)
00004A1E 4110 D0C0               000000C0   7214          LA    1,192(0,13)
00004A22 E3F0 C0F0 0004          00004928   7215          LG    15,@lit_1971_286 ; skip
00004A28                                    7216 @@gen_label394 DS    0H
00004A28 05EF                               7217          BALR  14,15
00004A2A                                    7218 @@gen_label395 DS    0H
                                            7219 * ***
                                            7220 * ***            while (bytes_read < num_to_read) {
00004A2A 47F0 C290               00004AC8   7221          B     @L850
00004A2E                                    7222 @L849    DS    0H
                                            7223 * ***               fragment = peek(reader, &fragment_size);
00004A2E E380 D0C0 0024          000000C0   7224          STG   8,192(0,13)
00004A34 41F0 D0B0               000000B0   7225          LA    15,176(0,13)
00004A38 E3F0 D0C8 0024          000000C8   7226          STG   15,200(0,13)
00004A3E 4110 D0C0               000000C0   7227          LA    1,192(0,13)
00004A42 E3F0 C0E0 0004          00004918   7228          LG    15,@lit_1971_281 ; peek
00004A48                                    7229 @@gen_label396 DS    0H
00004A48 05EF                               7230          BALR  14,15
00004A4A                                    7231 @@gen_label397 DS    0H
00004A4A B904 004F                          7232          LGR   4,15        ; fragment
                                            7233 * ***               size_t n =
                                            7234 * ***                   ((fragment_size) < (num_to_read - bytes_read) \
                                            7235 * ? (fragment_size) : (num_to_read - bytes_read));
00004A4E E3F0 D0B0 0004          000000B0   7236          LG    15,176(0,13) ; fragment_size
00004A54 B916 001A                          7237          LLGFR 1,10
00004A58 B90B 0012                          7238          SLGR  1,2
00004A5C B921 00F1                          7239          CLGR  15,1
00004A60 47B0 C230               00004A68   7240          BNL   @L851
00004A64 47F0 C238               00004A70   7241          B     @L852
00004A68                                    7242 @L851    DS    0H
00004A68 B916 00FA                          7243          LLGFR 15,10
00004A6C B90B 00F2                          7244          SLGR  15,2
00004A70                                    7245 @L852    DS    0H
                                            7246 * ***
                                            7247 * ***               __memcpy((char *)(env->scratch) + bytes_read,fragm\
                                            7248 * ent,n);
00004A70 E310 7008 0004          00000008   7249          LG    1,8(0,7)    ; offset of scratch in snappy_env
00004A76 41B2 1000               00000000   7250          LA    11,0(2,1)
00004A7A B902 001F                          7251          LTGR  1,15
00004A7E 4780 C274               00004AAC   7252          BZ    @@gen_label401
00004A82 A71B FFFF               0000FFFF   7253          AGHI  1,-1
                                                                                                                           Page  145 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004A86 EBE1 0008 000A          00000008   7254          SRAG  14,1,8(0)
00004A8C B902 00EE                          7255          LTGR  14,14
00004A90 4780 C270               00004AA8   7256          BZ    @@gen_label400
00004A94                                    7257 @@gen_label399 DS 0H
00004A94 D2FF B000 4000 00000000 00000000   7258          MVC   0(256,11),0(4)
00004A9A 41B0 B100               00000100   7259          LA    11,256(0,11)
00004A9E 4140 4100               00000100   7260          LA    4,256(0,4)
00004AA2 E3E0 C25C 0046          00004A94   7261          BCTG  14,@@gen_label399
00004AA8                                    7262 @@gen_label400 DS 0H
00004AA8 4410 C0F8               00004930   7263          EX    1,@lit_1971_288
00004AAC                                    7264 @@gen_label401 DS 0H
                                            7265 * ***               bytes_read += n;
00004AAC B90A 002F                          7266          ALGR  2,15
                                            7267 * ***               skip(reader, n);
00004AB0 E380 D0C0 0024          000000C0   7268          STG   8,192(0,13)
00004AB6 E3F0 D0C8 0024          000000C8   7269          STG   15,200(0,13)
00004ABC 4110 D0C0               000000C0   7270          LA    1,192(0,13)
00004AC0 E3F0 C0F0 0004          00004928   7271          LG    15,@lit_1971_286 ; skip
00004AC6                                    7272 @@gen_label402 DS    0H
00004AC6 05EF                               7273          BALR  14,15
00004AC8                                    7274 @@gen_label403 DS    0H
                                            7275 * ***            }
00004AC8                                    7276 @L850    DS    0H
00004AC8 B931 002A                          7277          CLGFR 2,10
00004ACC 4740 C1F6               00004A2E   7278          BL    @L849
                                            7279 * ***            ((!(!((bytes_read) == (num_to_read)))) ? (void)0 : __\
                                            7280 * assert(__func__, "C:\\asgkafka\\librdkafka\\src\\snappy.c", 1478, "!\
                                            7281 * (!((bytes_read) == (num_to_read)))"));
00004AD0 B931 002A                          7282          CLGFR 2,10
00004AD4 4780 C2DC               00004B14   7283          BE    @L854
00004AD8                                    7284 @L853    DS    0H
00004AD8 E3F0 C110 0004          00004948   7285          LG    15,@lit_1971_290
00004ADE 41F0 F4AA               000004AA   7286          LA    15,1194(0,15)
00004AE2 E3F0 D0C0 0024          000000C0   7287          STG   15,192(0,13)
00004AE8 E3F0 C108 0004          00004940   7288          LG    15,@lit_1971_291
00004AEE 4110 F022               00000022   7289          LA    1,34(0,15)
00004AF2 E310 D0C8 0024          000000C8   7290          STG   1,200(0,13)
00004AF8 E548 D0D0 05C6          000000D0   7291          MVGHI 208(13),1478
00004AFE 41F0 F3BC               000003BC   7292          LA    15,956(0,15)
00004B02 E3F0 D0D8 0024          000000D8   7293          STG   15,216(0,13)
00004B08 4110 D0C0               000000C0   7294          LA    1,192(0,13)
00004B0C E3F0 C100 0004          00004938   7295          LG    15,@lit_1971_292 ; __assert
00004B12                                    7296 @@gen_label406 DS    0H
00004B12 05EF                               7297          BALR  14,15
00004B14                                    7298 @@gen_label407 DS    0H
00004B14                                    7299 @L854    DS    0H
                                            7300 * ***            fragment = env->scratch;
00004B14 E340 7008 0004          00000008   7301          LG    4,8(0,7)    ; offset of scratch in snappy_env
                                            7302 * ***            fragment_size = num_to_read;
00004B1A B916 00FA                          7303          LLGFR 15,10
00004B1E E3F0 D0B0 0024          000000B0   7304          STG   15,176(0,13) ; fragment_size
                                            7305 * ***         }
                                                                                                                           Page  146 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B24                                    7306 @L846    DS    0H
                                            7307 * ***         if (fragment_size < num_to_read)
00004B24 E3F0 D0B0 0004          000000B0   7308          LG    15,176(0,13) ; fragment_size
00004B2A B931 00FA                          7309          CLGFR 15,10
00004B2E 47B0 C302               00004B3A   7310          BNL   @L855
                                            7311 * ***            return -5;
00004B32 A7F9 FFFB               0000FFFB   7312          LGHI  15,-5       ; -5
00004B36 47F0 C3FC               00004C34   7313          B     @ret_lab_1971
00004B3A                                    7314 @L855    DS    0H
                                            7315 * ***
                                            7316 * ***
                                            7317 * ***         int table_size;
                                            7318 * ***         u16 *table = get_hash_table(env, num_to_read, &table_siz\
                                            7319 * e);
00004B3A E370 D0C0 0024          000000C0   7320          STG   7,192(0,13)
00004B40 B916 00FA                          7321          LLGFR 15,10
00004B44 E3F0 D0C8 0024          000000C8   7322          STG   15,200(0,13)
00004B4A 41F0 D0A8               000000A8   7323          LA    15,168(0,13)
00004B4E E3F0 D0D0 0024          000000D0   7324          STG   15,208(0,13)
00004B54 4110 D0C0               000000C0   7325          LA    1,192(0,13)
00004B58 E3F0 C118 0004          00004950   7326          LG    15,@lit_1971_294 ; get_hash_table
00004B5E                                    7327 @@gen_label409 DS    0H
00004B5E 05EF                               7328          BALR  14,15
00004B60                                    7329 @@gen_label410 DS    0H
00004B60 B904 00BF                          7330          LGR   11,15
                                            7331 * ***
                                            7332 * ***
                                            7333 * ***         char *dest;
                                            7334 * ***         dest = sink_peek(writer, rd_kafka_snappy_max_compressed_\
                                            7335 * length(num_to_read));
00004B64 B916 00FA                          7336          LLGFR 15,10
00004B68 E3F0 D0C0 0024          000000C0   7337          STG   15,192(0,13)
00004B6E 4110 D0C0               000000C0   7338          LA    1,192(0,13)
00004B72 E3F0 C120 0004          00004958   7339          LG    15,@lit_1971_295 ; rd_kafka_snappy_max_compressed_length
00004B78                                    7340 @@gen_label411 DS    0H
00004B78 05EF                               7341          BALR  14,15
00004B7A                                    7342 @@gen_label412 DS    0H
00004B7A E390 D0C0 0024          000000C0   7343          STG   9,192(0,13)
00004B80 E3F0 D0C8 0024          000000C8   7344          STG   15,200(0,13)
00004B86 4110 D0C0               000000C0   7345          LA    1,192(0,13)
00004B8A E3F0 C128 0004          00004960   7346          LG    15,@lit_1971_296 ; sink_peek
00004B90                                    7347 @@gen_label413 DS    0H
00004B90 05EF                               7348          BALR  14,15
00004B92                                    7349 @@gen_label414 DS    0H
00004B92 B902 002F                          7350          LTGR  2,15        ; dest
                                            7351 * ***         if (!dest) {
00004B96 4770 C368               00004BA0   7352          BNZ   @L856
                                            7353 * ***
                                            7354 * ***
                                            7355 * ***
                                            7356 * ***
                                            7357 * ***
                                                                                                                           Page  147 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7358 * ***            dest = env->scratch_output;
00004B9A E320 7010 0004          00000010   7359          LG    2,16(0,7)   ; offset of scratch_output in snappy_env
                                            7360 * ***         }
00004BA0                                    7361 @L856    DS    0H
                                            7362 * ***         char *end = compress_fragment(fragment, fragment_size,
                                            7363 * ***                        dest, table, table_size);
00004BA0 E340 D0C0 0024          000000C0   7364          STG   4,192(0,13)
00004BA6 E3F0 D0B0 0004          000000B0   7365          LG    15,176(0,13) ; fragment_size
00004BAC E3F0 D0C8 0024          000000C8   7366          STG   15,200(0,13)
00004BB2 E320 D0D0 0024          000000D0   7367          STG   2,208(0,13)
00004BB8 E3B0 D0D8 0024          000000D8   7368          STG   11,216(0,13)
00004BBE E3F0 D0A8 0016          000000A8   7369          LLGF  15,168(0,13)
00004BC4 E3F0 D0E0 0024          000000E0   7370          STG   15,224(0,13)
00004BCA 4110 D0C0               000000C0   7371          LA    1,192(0,13)
00004BCE E3F0 C130 0004          00004968   7372          LG    15,@lit_1971_297 ; compress_fragment
00004BD4                                    7373 @@gen_label416 DS    0H
00004BD4 05EF                               7374          BALR  14,15
00004BD6                                    7375 @@gen_label417 DS    0H
00004BD6 B904 004F                          7376          LGR   4,15
                                            7377 * ***         append(writer, dest, end - dest);
00004BDA E390 D0C0 0024          000000C0   7378          STG   9,192(0,13)
00004BE0 E320 D0C8 0024          000000C8   7379          STG   2,200(0,13)
00004BE6 B904 00F4                          7380          LGR   15,4
00004BEA B909 00F2                          7381          SGR   15,2
00004BEE E3F0 D0D0 0024          000000D0   7382          STG   15,208(0,13)
00004BF4 4110 D0C0               000000C0   7383          LA    1,192(0,13)
00004BF8 E3F0 C0D8 0004          00004910   7384          LG    15,@lit_1971_280 ; append
00004BFE                                    7385 @@gen_label418 DS    0H
00004BFE 05EF                               7386          BALR  14,15
00004C00                                    7387 @@gen_label419 DS    0H
                                            7388 * ***         written += (end - dest);
00004C00 B909 0042                          7389          SGR   4,2
00004C04 B90A 0054                          7390          ALGR  5,4
                                            7391 * ***
                                            7392 * ***         N -= num_to_read;
00004C08 1F3A                               7393          SLR   3,10
                                            7394 * ***         skip(reader, pending_advance);
00004C0A E380 D0C0 0024          000000C0   7395          STG   8,192(0,13)
00004C10 B914 00F6                          7396          LGFR  15,6
00004C14 E3F0 D0C8 0024          000000C8   7397          STG   15,200(0,13)
00004C1A 4110 D0C0               000000C0   7398          LA    1,192(0,13)
00004C1E E3F0 C0F0 0004          00004928   7399          LG    15,@lit_1971_286 ; skip
00004C24                                    7400 @@gen_label420 DS    0H
00004C24 05EF                               7401          BALR  14,15
00004C26                                    7402 @@gen_label421 DS    0H
                                            7403 * ***      }
00004C26                                    7404 @L841    DS    0H
00004C26 1233                               7405          LTR   3,3
00004C28 4720 C138               00004970   7406          BH    @L840
                                            7407 * ***
                                            7408 * ***      err = 0;
00004C2C A7F8 0000               00000000   7409          LHI   15,0        ; 0
                                                                                                                           Page  148 
  Active Usings: @REGION_1971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7410 * ***   out:
                                            7411 * ***      return err;
00004C30                                    7412 @_out@1971@2 DS 0H
00004C30 B914 00FF                          7413          LGFR  15,15
                                            7414 * ***   }
00004C34                                    7415 @ret_lab_1971 DS 0H
                                            7416 * * **** Start of Epilogue
                                            7417          DCCEPIL
00004C34                                    7418+         ds 0h                                                          01-DCCEP
                                            7419+* Epilog
00004C34 D707 D088 D088 00000088 00000088   7420+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004C3A E3D0 D080 0004          00000080   7421+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004C40 E3C0 D090 0004          00000090   7422+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004C46 E3B0 C018 0004          00000018   7423+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004C4C E3C0 B010 0021          00000010   7424+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004C52 E3E0 D008 0004          00000008   7425+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004C58 EB1C D020 0004          00000020   7426+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004C5E 078E                               7427+         bcr 8,14                if same dsab, just return              01-DCCEP
00004C60 E3F0 D010 0024          00000010   7428+         stg 15,16(0,13)         save return code                       01-DCCEP
00004C66 E300 D018 0024          00000018   7429+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004C6C E3F0 D090 0004          00000090   7430+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004C72 E3F0 F018 0004          00000018   7431+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004C78 47F0 F040               00000040   7432+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7433+* End of Epilog
                                            7434 * * **** End of Epilogue
                                            7435          DROP  12
                                            7436 *
                                            7437 *   DSECT for automatic variables in "sn_compress"
                                            7438 *      (FUNCTION #1971)
                                            7439 *
00000000                00000000 000000BD   7440 @AUTO#sn_compress DSECT
00000000                                    7441          DS    XL168
000000A8                                    7442 sn_compress#table_size#5 DS 1F ; table_size
000000AC                000000AC 000000A8   7443          ORG   @AUTO#sn_compress+168
000000A8                                    7444 sn_compress#n#5 DS 8XL1    ; n
000000B0                000000B0 000000A8   7445          ORG   @AUTO#sn_compress+168
000000A8                                    7446 sn_compress#pending_advance#2 DS 1F ; pending_advance
000000AC                000000AC 000000A8   7447          ORG   @AUTO#sn_compress+168
000000A8                                    7448 sn_compress#bytes_read#2 DS 8XL1 ; bytes_read
000000B0                000000B0 000000A8   7449          ORG   @AUTO#sn_compress+168
000000A8                                    7450 sn_compress#num_to_read#2 DS 1F ; num_to_read
000000AC                000000AC 000000A8   7451          ORG   @AUTO#sn_compress+168
000000A8                                    7452 sn_compress#$N#0 DS 1F     ; N
000000AC                000000AC 000000A8   7453          ORG   @AUTO#sn_compress+168
000000A8                                    7454 sn_compress#written#0 DS 8XL1 ; written
000000B0                000000B0 000000A8   7455          ORG   @AUTO#sn_compress+168
000000A8                                    7456 sn_compress#err#0 DS 1F    ; err
000000AC                000000AC 000000B0   7457          ORG   @AUTO#sn_compress+176
000000B0                                    7458 sn_compress#fragment_size#1 DS 8XL1 ; fragment_size
000000B8                000000B8 000000B8   7459          ORG   @AUTO#sn_compress+184
000000B8                                    7460 sn_compress#ulength#0 DS 5XL1 ; ulength
                                            7461 *
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004C7C                00000000 00005B58   7462 @CODE    CSECT
                                            7463 *
                                            7464 *
                                            7465 *
                                            7466 * ....... start of rd_kafka_snappy_compress_iov
                                            7467 rd_kafka_snappy_compress_iov ALIAS X'99846D92818692816DA295819797A86D83*
                                                                9694979985A2A26D8996A5'
00004C7C                                    7468 @LNAME346 DS   0H
00004C7C 0000001C                           7469          DC    X'0000001C'
00004C80 99846D9281869281                   7470          DC    C'rd_kafka_snappy_compress_iov'
00004C9C 00                                 7471          DC    X'00'
                                            7472 rd_kafka_snappy_compress_iov DCCPRLG CINDEX=346,BASER=12,FRAME=248,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME346
                                            7473          macro
                                            7474          dccextrn &m
                                            7475          gblc    &$dccext(1000)
                                            7476          gbla    &$dccexti
                                            7477          lcla    &i
                                            7478 &$dccext(&$dccexti+1) setc    '&m'
                                            7479 &i       seta    1
                                            7480 .loop    aif    (&i gt &$dccexti).around
                                            7481          aif    ('&$dccext(&i)' eq '&m').getout
                                            7482 &i       seta    &i+1
                                            7483          ago     .loop
                                            7484 .around  anop
                                            7485 &$dccexti seta &$dccexti+1
                                            7486          extrn  &m
                                            7487 .getout  anop
                                            7488          mend
00004CA0                                    7489+$eye0137    ds    0d                                                    02-DCCCA
00004CA0 C4C3C3                             7490+         dc cl3'DCC'                                                    02-DCCCA
00004CA3 01                                 7491+         dc xl1'01' format one                                          02-DCCCA
00004CA4 00000000                           7492+         dc a(0)                                                        02-DCCCA
00004CA8 0000000000004D12                   7493+         dc ad(@PER_346)                                                02-DCCCA
00004CB0 00000000000000F8                   7494+         dc ad(248)                                                     02-DCCCA
00004CB8 0000000000000000                   7495+         dc ad(0)                                                       02-DCCCA
00004CC0 0000000000001000                   7496+         dc ad(4096)                                                    02-DCCCA
00004CC8 20                                 7497+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004CC9 03                                 7498+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004CCA 03                                 7499+         dc al1(3)                                                      02-DCCCA
00004CCB 08                                 7500+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004CCC 00                                 7501+         dc bl.8'00000000'                                              02-DCCCA
00004CCD 000000                             7502+         dc al3(0)                                                      02-DCCCA
00004CD0 0000000000004C7C                   7503+         dc ad(@LNAME346)                                               02-DCCCA
00004CD8                                    7504+         ds 0d                                                          02-DCCCA
00004CD8 0000000000004CA0                   7505+         dc ad($eye0137)                                                02-DCCCA
00004CE0 0000000000000000                   7506+         dc ad(0)                                                       02-DCCCA
00004CE8                                    7507+         ds    0d                                                       01-DCCPR
                                            7508+         entry rd_kafka_snappy_compress_iov                             01-DCCPR
00004CE8                                    7509+rd_kafka_snappy_compress_iov ds 0d                                      01-DCCPR
00004CE8                                    7510+@REGION_346_1 ds 0h                                                     01-DCCPR
00004CE8 EBEC D008 0024          00000008   7511+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page  150 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004CEE E3E0 D088 0004          00000088   7512+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004CF4 E3C0 D090 0004          00000090   7513+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004CFA B904 002E                          7514+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004CFE E3B0 C018 0004          00000018   7515+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004D04 A7EB 00F8               000000F8   7516+         aghi  14,248              increase by frame size               01-DCCPR
00004D08 E3E0 C020 0021          00000020   7517+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004D0E 4720 B020               00000020   7518+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004D12                                    7519+@PER_346 ds    0h                                                       01-DCCPR
00004D12 EBDE 2080 0024          00000080   7520+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004D18 E3C0 2090 0024          00000090   7521+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004D1E B904 00D2                          7522+         lgr   13,2                set real frame pointer               01-DCCPR
00004D22 B904 00CF                          7523+         lgr   12,15               set base reg                         01-DCCPR
                        00004CE8            7524+         using @REGION_346_1,12                                         01-DCCPR
                                            7525 * ******* End of Prologue
                                            7526 * *
                                            7527 * ***           struct source reader = {
                                            7528 * ***                   .iov = (struct iovec *)iov_in,
00004D26 E3F0 1008 0004          00000008   7529          LG    15,8(0,1)   ; iov_in
00004D2C E3F0 D0A8 0024          000000A8   7530          STG   15,168(0,13)
                                            7531 * ***                   .iovlen = (int)iov_in_cnt,
00004D32 E3F0 1010 0004          00000010   7532          LG    15,16(0,1)  ; iov_in_cnt
00004D38 50F0 D0B0               000000B0   7533          ST    15,176(0,13)
                                            7534 * ***                   .total = input_length
                                            7535 * ***           };
00004D3C E3F0 1018 0004          00000018   7536          LG    15,24(0,1)  ; input_length
00004D42 E3F0 D0C0 0024          000000C0   7537          STG   15,192(0,13)
                                            7538 * setting 12 bytes to 0x00
00004D48 D70B D0B4 D0B4 000000B4 000000B4   7539          XC    180(12,13),180(13)
                                            7540 * ***           struct sink writer = {
                                            7541 * ***                   .iov = iov_out,
00004D4E E320 1020 0004          00000020   7542          LG    2,32(0,1)   ; iov_out
00004D54 E320 D0C8 0024          000000C8   7543          STG   2,200(0,13)
                                            7544 * ***                   .iovlen = 1
                                            7545 * ***           };
00004D5A E54C D0D0 0001          000000D0   7546          MVHI  208(13),1
                                            7547 * setting 12 bytes to 0x00
00004D60 D70B D0D4 D0D4 000000D4 000000D4   7548          XC    212(12,13),212(13)
                                            7549 * ***           int err = sn_compress(env, &reader, &writer);
00004D66 E3F0 1000 0004          00000000   7550          LG    15,0(0,1)   ; env
00004D6C E3F0 D0E0 0024          000000E0   7551          STG   15,224(0,13)
00004D72 41F0 D0A8               000000A8   7552          LA    15,168(0,13)
00004D76 E3F0 D0E8 0024          000000E8   7553          STG   15,232(0,13)
00004D7C 41F0 D0C8               000000C8   7554          LA    15,200(0,13)
00004D80 E3F0 D0F0 0024          000000F0   7555          STG   15,240(0,13)
00004D86 4110 D0E0               000000E0   7556          LA    1,224(0,13)
00004D8A E3F0 C110 0004          00004DF8   7557          LG    15,@lit_346_302 ; sn_compress
00004D90                                    7558 @@gen_label423 DS    0H
00004D90 05EF                               7559          BALR  14,15
00004D92                                    7560 @@gen_label424 DS    0H
                                            7561 * ***
                                            7562 * ***           iov_out->iov_len = writer.written;
00004D92 E310 D0DC 0016          000000DC   7563          LLGF  1,220(0,13)
                                                                                                                           Page  151 
  Active Usings: @REGION_346_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004D98 E310 2008 0024          00000008   7564          STG   1,8(0,2)    ; offset of iov_len in iovec
                                            7565 * ***
                                            7566 * ***           return err;
00004D9E B914 00FF                          7567          LGFR  15,15
                                            7568 * ***   }
                                            7569 * * **** Start of Epilogue
                                            7570          DCCEPIL
00004DA2                                    7571+         ds 0h                                                          01-DCCEP
                                            7572+* Epilog
00004DA2 D707 D088 D088 00000088 00000088   7573+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004DA8 E3D0 D080 0004          00000080   7574+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004DAE E3C0 D090 0004          00000090   7575+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004DB4 E3B0 C018 0004          00000018   7576+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004DBA E3C0 B010 0021          00000010   7577+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004DC0 E3E0 D008 0004          00000008   7578+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004DC6 EB1C D020 0004          00000020   7579+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004DCC 078E                               7580+         bcr 8,14                if same dsab, just return              01-DCCEP
00004DCE E3F0 D010 0024          00000010   7581+         stg 15,16(0,13)         save return code                       01-DCCEP
00004DD4 E300 D018 0024          00000018   7582+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004DDA E3F0 D090 0004          00000090   7583+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004DE0 E3F0 F018 0004          00000018   7584+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004DE6 47F0 F040               00000040   7585+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7586+* End of Epilog
                                            7587 * * **** End of Epilogue
00004DF0                                    7588          DS    0D
00004DF0 000000F8                           7589 @FRAMESIZE_346 DC F'248'
00004DF4 00000000
00004DF8 0000000000004838                   7590 @lit_346_302 DC AD(sn_compress)
                                            7591          DROP  12
                                            7592 *
                                            7593 *   DSECT for automatic variables in "rd_kafka_snappy_compress_iov"
                                            7594 *      (FUNCTION #346)
                                            7595 *
00000000                00000000 000000E0   7596 @AUTO#rd_kafka_snappy_compress_iov DSECT
00000000                                    7597          DS    XL168
000000A8                                    7598 rd_kafka_snappy_compress_iov#err#0 DS 1F ; err
000000AC                000000AC 000000A8   7599          ORG   @AUTO#rd_kafka_snappy_compress_iov+168
000000A8                                    7600 rd_kafka_snappy_compress_iov#reader#0 DS 32XL1 ; reader
000000C8                000000C8 000000C8   7601          ORG   @AUTO#rd_kafka_snappy_compress_iov+200
000000C8                                    7602 rd_kafka_snappy_compress_iov#writer#0 DS 24XL1 ; writer
                                            7603 *
00004E00                00000000 00005B58   7604 @CODE    CSECT
                                            7605 *
                                            7606 *
                                            7607 *
                                            7608 * ....... start of rd_kafka_snappy_compress
                                            7609 rd_kafka_snappy_compress ALIAS X'99846D92818692816DA295819797A86D839694*
                                                                979985A2A2'
00004E00                                    7610 @LNAME1972 DS  0H
00004E00 00000018                           7611          DC    X'00000018'
00004E04 99846D9281869281                   7612          DC    C'rd_kafka_snappy_compress'
00004E1C 00                                 7613          DC    X'00'
                                                                                                                           Page  152 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7614 rd_kafka_snappy_compress DCCPRLG CINDEX=1972,BASER=12,FRAME=240,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1972
                                            7615          macro
                                            7616          dccextrn &m
                                            7617          gblc    &$dccext(1000)
                                            7618          gbla    &$dccexti
                                            7619          lcla    &i
                                            7620 &$dccext(&$dccexti+1) setc    '&m'
                                            7621 &i       seta    1
                                            7622 .loop    aif    (&i gt &$dccexti).around
                                            7623          aif    ('&$dccext(&i)' eq '&m').getout
                                            7624 &i       seta    &i+1
                                            7625          ago     .loop
                                            7626 .around  anop
                                            7627 &$dccexti seta &$dccexti+1
                                            7628          extrn  &m
                                            7629 .getout  anop
                                            7630          mend
00004E20                                    7631+$eye0140    ds    0d                                                    02-DCCCA
00004E20 C4C3C3                             7632+         dc cl3'DCC'                                                    02-DCCCA
00004E23 01                                 7633+         dc xl1'01' format one                                          02-DCCCA
00004E24 00000000                           7634+         dc a(0)                                                        02-DCCCA
00004E28 0000000000004E92                   7635+         dc ad(@PER_1972)                                               02-DCCCA
00004E30 00000000000000F0                   7636+         dc ad(240)                                                     02-DCCCA
00004E38 0000000000000000                   7637+         dc ad(0)                                                       02-DCCCA
00004E40 0000000000001000                   7638+         dc ad(4096)                                                    02-DCCCA
00004E48 20                                 7639+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004E49 03                                 7640+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004E4A 03                                 7641+         dc al1(3)                                                      02-DCCCA
00004E4B 08                                 7642+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004E4C 00                                 7643+         dc bl.8'00000000'                                              02-DCCCA
00004E4D 000000                             7644+         dc al3(0)                                                      02-DCCCA
00004E50 0000000000004E00                   7645+         dc ad(@LNAME1972)                                              02-DCCCA
00004E58                                    7646+         ds 0d                                                          02-DCCCA
00004E58 0000000000004E20                   7647+         dc ad($eye0140)                                                02-DCCCA
00004E60 0000000000000000                   7648+         dc ad(0)                                                       02-DCCCA
00004E68                                    7649+         ds    0d                                                       01-DCCPR
                                            7650+         entry rd_kafka_snappy_compress                                 01-DCCPR
00004E68                                    7651+rd_kafka_snappy_compress ds 0d                                          01-DCCPR
00004E68                                    7652+@REGION_1972_1 ds 0h                                                    01-DCCPR
00004E68 EBEC D008 0024          00000008   7653+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004E6E E3E0 D088 0004          00000088   7654+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004E74 E3C0 D090 0004          00000090   7655+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004E7A B904 002E                          7656+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004E7E E3B0 C018 0004          00000018   7657+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004E84 A7EB 00F0               000000F0   7658+         aghi  14,240              increase by frame size               01-DCCPR
00004E88 E3E0 C020 0021          00000020   7659+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004E8E 4720 B020               00000020   7660+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004E92                                    7661+@PER_1972 ds   0h                                                       01-DCCPR
00004E92 EBDE 2080 0024          00000080   7662+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004E98 E3C0 2090 0024          00000090   7663+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004E9E B904 00D2                          7664+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004EA2 B904 00CF                          7665+         lgr   12,15               set base reg                         01-DCCPR
                        00004E68            7666+         using @REGION_1972_1,12                                        01-DCCPR
                                            7667 * ******* End of Prologue
                                            7668 * *
                                            7669 * ***      struct iovec iov_in = {
                                            7670 * ***         .iov_base = (char *)input,
00004EA6 E3F0 1008 0004          00000008   7671          LG    15,8(0,1)   ; input
00004EAC E3F0 D0B8 0024          000000B8   7672          STG   15,184(0,13)
                                            7673 * ***         .iov_len = input_length,
00004EB2 E3F0 1010 0004          00000010   7674          LG    15,16(0,1)  ; input_length
00004EB8 E3F0 D0C0 0024          000000C0   7675          STG   15,192(0,13)
                                            7676 * ***      };
                                            7677 * ***      struct iovec iov_out = {
                                            7678 * ***         .iov_base = compressed,
00004EBE E320 1018 0004          00000018   7679          LG    2,24(0,1)   ; compressed
00004EC4 E320 D0A8 0024          000000A8   7680          STG   2,168(0,13)
                                            7681 * ***         .iov_len = 0xffffffff,
00004ECA C02F FFFF FFFF                     7682          LLILF 2,X'FFFFFFFF' ; 4294967295
00004ED0 E320 D0B0 0024          000000B0   7683          STG   2,176(0,13)
                                            7684 * ***      };
                                            7685 * ***           return rd_kafka_snappy_compress_iov(env,
                                            7686 * ***                                               &iov_in, 1, input_\
                                            7687 * length,
                                            7688 * ***                                               &iov_out);
00004ED6 E310 1000 0004          00000000   7689          LG    1,0(0,1)    ; env
00004EDC E310 D0C8 0024          000000C8   7690          STG   1,200(0,13)
00004EE2 4110 D0B8               000000B8   7691          LA    1,184(0,13)
00004EE6 E310 D0D0 0024          000000D0   7692          STG   1,208(0,13)
00004EEC E548 D0D8 0001          000000D8   7693          MVGHI 216(13),1
00004EF2 E3F0 D0E0 0024          000000E0   7694          STG   15,224(0,13)
00004EF8 41F0 D0A8               000000A8   7695          LA    15,168(0,13)
00004EFC E3F0 D0E8 0024          000000E8   7696          STG   15,232(0,13)
00004F02 4110 D0C8               000000C8   7697          LA    1,200(0,13)
00004F06 E3F0 C100 0004          00004F68   7698          LG    15,@lit_1972_305 ; rd_kafka_snappy_compress_iov
00004F0C                                    7699 @@gen_label425 DS    0H
00004F0C 05EF                               7700          BALR  14,15
00004F0E                                    7701 @@gen_label426 DS    0H
00004F0E B914 00FF                          7702          LGFR  15,15
                                            7703 * ***   }
                                            7704 * * **** Start of Epilogue
                                            7705          DCCEPIL
00004F12                                    7706+         ds 0h                                                          01-DCCEP
                                            7707+* Epilog
00004F12 D707 D088 D088 00000088 00000088   7708+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004F18 E3D0 D080 0004          00000080   7709+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004F1E E3C0 D090 0004          00000090   7710+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004F24 E3B0 C018 0004          00000018   7711+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004F2A E3C0 B010 0021          00000010   7712+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004F30 E3E0 D008 0004          00000008   7713+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004F36 EB1C D020 0004          00000020   7714+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004F3C 078E                               7715+         bcr 8,14                if same dsab, just return              01-DCCEP
00004F3E E3F0 D010 0024          00000010   7716+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page  154 
  Active Usings: @REGION_1972_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004F44 E300 D018 0024          00000018   7717+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004F4A E3F0 D090 0004          00000090   7718+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004F50 E3F0 F018 0004          00000018   7719+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004F56 47F0 F040               00000040   7720+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7721+* End of Epilog
                                            7722 * * **** End of Epilogue
00004F60                                    7723          DS    0D
00004F60 000000F0                           7724 @FRAMESIZE_1972 DC F'240'
00004F64 00000000
00004F68 0000000000004CE8                   7725 @lit_1972_305 DC AD(rd_kafka_snappy_compress_iov)
                                            7726          DROP  12
                                            7727 *
                                            7728 *   DSECT for automatic variables in "rd_kafka_snappy_compress"
                                            7729 *      (FUNCTION #1972)
                                            7730 *
00000000                00000000 000000C8   7731 @AUTO#rd_kafka_snappy_compress DSECT
00000000                                    7732          DS    XL168
000000A8                                    7733 rd_kafka_snappy_compress#iov_out#0 DS 16XL1 ; iov_out
000000B8                                    7734 rd_kafka_snappy_compress#iov_in#0 DS 16XL1 ; iov_in
                                            7735 *
00004F70                00000000 00005B58   7736 @CODE    CSECT
                                            7737 *
                                            7738 *
                                            7739 *
                                            7740 * ....... start of rd_kafka_snappy_uncompress_iov
                                            7741 rd_kafka_snappy_uncompress_iov ALIAS X'99846D92818692816DA295819797A86D*
                                                                A495839694979985A2A26D8996A5'
00004F70                                    7742 @LNAME343 DS   0H
00004F70 0000001E                           7743          DC    X'0000001E'
00004F74 99846D9281869281                   7744          DC    C'rd_kafka_snappy_uncompress_iov'
00004F92 00                                 7745          DC    X'00'
                                            7746 rd_kafka_snappy_uncompress_iov DCCPRLG CINDEX=343,BASER=12,FRAME=248,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME343
                                            7747          macro
                                            7748          dccextrn &m
                                            7749          gblc    &$dccext(1000)
                                            7750          gbla    &$dccexti
                                            7751          lcla    &i
                                            7752 &$dccext(&$dccexti+1) setc    '&m'
                                            7753 &i       seta    1
                                            7754 .loop    aif    (&i gt &$dccexti).around
                                            7755          aif    ('&$dccext(&i)' eq '&m').getout
                                            7756 &i       seta    &i+1
                                            7757          ago     .loop
                                            7758 .around  anop
                                            7759 &$dccexti seta &$dccexti+1
                                            7760          extrn  &m
                                            7761 .getout  anop
                                            7762          mend
00004F98                                    7763+$eye0143    ds    0d                                                    02-DCCCA
00004F98 C4C3C3                             7764+         dc cl3'DCC'                                                    02-DCCCA
00004F9B 01                                 7765+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  155 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004F9C 00000000                           7766+         dc a(0)                                                        02-DCCCA
00004FA0 000000000000500A                   7767+         dc ad(@PER_343)                                                02-DCCCA
00004FA8 00000000000000F8                   7768+         dc ad(248)                                                     02-DCCCA
00004FB0 0000000000000000                   7769+         dc ad(0)                                                       02-DCCCA
00004FB8 0000000000001000                   7770+         dc ad(4096)                                                    02-DCCCA
00004FC0 20                                 7771+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004FC1 03                                 7772+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004FC2 03                                 7773+         dc al1(3)                                                      02-DCCCA
00004FC3 08                                 7774+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004FC4 00                                 7775+         dc bl.8'00000000'                                              02-DCCCA
00004FC5 000000                             7776+         dc al3(0)                                                      02-DCCCA
00004FC8 0000000000004F70                   7777+         dc ad(@LNAME343)                                               02-DCCCA
00004FD0                                    7778+         ds 0d                                                          02-DCCCA
00004FD0 0000000000004F98                   7779+         dc ad($eye0143)                                                02-DCCCA
00004FD8 0000000000000000                   7780+         dc ad(0)                                                       02-DCCCA
00004FE0                                    7781+         ds    0d                                                       01-DCCPR
                                            7782+         entry rd_kafka_snappy_uncompress_iov                           01-DCCPR
00004FE0                                    7783+rd_kafka_snappy_uncompress_iov ds 0d                                    01-DCCPR
00004FE0                                    7784+@REGION_343_1 ds 0h                                                     01-DCCPR
00004FE0 EBEC D008 0024          00000008   7785+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004FE6 E3E0 D088 0004          00000088   7786+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004FEC E3C0 D090 0004          00000090   7787+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004FF2 B904 002E                          7788+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004FF6 E3B0 C018 0004          00000018   7789+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004FFC A7EB 00F8               000000F8   7790+         aghi  14,248              increase by frame size               01-DCCPR
00005000 E3E0 C020 0021          00000020   7791+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005006 4720 B020               00000020   7792+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000500A                                    7793+@PER_343 ds    0h                                                       01-DCCPR
0000500A EBDE 2080 0024          00000080   7794+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005010 E3C0 2090 0024          00000090   7795+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005016 B904 00D2                          7796+         lgr   13,2                set real frame pointer               01-DCCPR
0000501A B904 00CF                          7797+         lgr   12,15               set base reg                         01-DCCPR
                        00004FE0            7798+         using @REGION_343_1,12                                         01-DCCPR
                                            7799 * ******* End of Prologue
                                            7800 * *
                                            7801 * ***      struct source reader = {
                                            7802 * ***         .iov = iov_in,
0000501E E3F0 1000 0004          00000000   7803          LG    15,0(0,1)   ; iov_in
00005024 E3F0 D0C0 0024          000000C0   7804          STG   15,192(0,13)
                                            7805 * ***         .iovlen = iov_in_len,
0000502A 58F0 100C               0000000C   7806          L     15,12(0,1)  ; iov_in_len
0000502E 50F0 D0C8               000000C8   7807          ST    15,200(0,13)
                                            7808 * ***         .total = input_len
                                            7809 * ***      };
00005032 E3F0 1010 0004          00000010   7810          LG    15,16(0,1)  ; input_len
00005038 E3F0 D0D8 0024          000000D8   7811          STG   15,216(0,13)
                                            7812 * setting 12 bytes to 0x00
0000503E D70B D0CC D0CC 000000CC 000000CC   7813          XC    204(12,13),204(13)
                                            7814 * ***      struct writer output = {
                                            7815 * ***         .base = uncompressed,
00005044 E3F0 1018 0004          00000018   7816          LG    15,24(0,1)  ; uncompressed
0000504A E3F0 D0A8 0024          000000A8   7817          STG   15,168(0,13)
                                                                                                                           Page  156 
  Active Usings: @REGION_343_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7818 * ***         .op = uncompressed
                                            7819 * ***      };
00005050 E3F0 D0B0 0024          000000B0   7820          STG   15,176(0,13)
                                            7821 * setting 8 bytes to 0x00
00005056 D707 D0B8 D0B8 000000B8 000000B8   7822          XC    184(8,13),184(13)
                                            7823 * ***      return internal_uncompress(&reader, &output, 0xffffffff);
0000505C 41F0 D0C0               000000C0   7824          LA    15,192(0,13)
00005060 E3F0 D0E0 0024          000000E0   7825          STG   15,224(0,13)
00005066 41F0 D0A8               000000A8   7826          LA    15,168(0,13)
0000506A E3F0 D0E8 0024          000000E8   7827          STG   15,232(0,13)
00005070 C0FF FFFF FFFF                     7828          LLILF 15,X'FFFFFFFF' ; 4294967295
00005076 E3F0 D0F0 0024          000000F0   7829          STG   15,240(0,13)
0000507C 4110 D0E0               000000E0   7830          LA    1,224(0,13)
00005080 E3F0 C100 0004          000050E0   7831          LG    15,@lit_343_308 ; internal_uncompress
00005086                                    7832 @@gen_label427 DS    0H
00005086 05EF                               7833          BALR  14,15
00005088                                    7834 @@gen_label428 DS    0H
00005088 B914 00FF                          7835          LGFR  15,15
                                            7836 * ***   }
                                            7837 * * **** Start of Epilogue
                                            7838          DCCEPIL
0000508C                                    7839+         ds 0h                                                          01-DCCEP
                                            7840+* Epilog
0000508C D707 D088 D088 00000088 00000088   7841+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005092 E3D0 D080 0004          00000080   7842+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005098 E3C0 D090 0004          00000090   7843+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000509E E3B0 C018 0004          00000018   7844+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000050A4 E3C0 B010 0021          00000010   7845+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000050AA E3E0 D008 0004          00000008   7846+         lg  14,8(0,13)          load up return address                 01-DCCEP
000050B0 EB1C D020 0004          00000020   7847+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000050B6 078E                               7848+         bcr 8,14                if same dsab, just return              01-DCCEP
000050B8 E3F0 D010 0024          00000010   7849+         stg 15,16(0,13)         save return code                       01-DCCEP
000050BE E300 D018 0024          00000018   7850+         stg 0,24(0,13)          save more return code                  01-DCCEP
000050C4 E3F0 D090 0004          00000090   7851+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000050CA E3F0 F018 0004          00000018   7852+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000050D0 47F0 F040               00000040   7853+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7854+* End of Epilog
                                            7855 * * **** End of Epilogue
000050D8                                    7856          DS    0D
000050D8 000000F8                           7857 @FRAMESIZE_343 DC F'248'
000050DC 00000000
000050E0 0000000000004618                   7858 @lit_343_308 DC AD(internal_uncompress)
                                            7859          DROP  12
                                            7860 *
                                            7861 *   DSECT for automatic variables in "rd_kafka_snappy_uncompress_iov"
                                            7862 *      (FUNCTION #343)
                                            7863 *
00000000                00000000 000000E0   7864 @AUTO#rd_kafka_snappy_uncompress_iov DSECT
00000000                                    7865          DS    XL168
000000A8                                    7866 rd_kafka_snappy_uncompress_iov#output#0 DS 24XL1 ; output
000000C0                                    7867 rd_kafka_snappy_uncompress_iov#reader#0 DS 32XL1 ; reader
                                            7868 *
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000050E8                00000000 00005B58   7869 @CODE    CSECT
                                            7870 *
                                            7871 *
                                            7872 *
                                            7873 * ....... start of rd_kafka_snappy_uncompress
                                            7874 rd_kafka_snappy_uncompress ALIAS X'99846D92818692816DA295819797A86DA495*
                                                                839694979985A2A2'
000050E8                                    7875 @LNAME344 DS   0H
000050E8 0000001A                           7876          DC    X'0000001A'
000050EC 99846D9281869281                   7877          DC    C'rd_kafka_snappy_uncompress'
00005106 00                                 7878          DC    X'00'
                                            7879 rd_kafka_snappy_uncompress DCCPRLG CINDEX=344,BASER=12,FRAME=216,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME344
                                            7880          macro
                                            7881          dccextrn &m
                                            7882          gblc    &$dccext(1000)
                                            7883          gbla    &$dccexti
                                            7884          lcla    &i
                                            7885 &$dccext(&$dccexti+1) setc    '&m'
                                            7886 &i       seta    1
                                            7887 .loop    aif    (&i gt &$dccexti).around
                                            7888          aif    ('&$dccext(&i)' eq '&m').getout
                                            7889 &i       seta    &i+1
                                            7890          ago     .loop
                                            7891 .around  anop
                                            7892 &$dccexti seta &$dccexti+1
                                            7893          extrn  &m
                                            7894 .getout  anop
                                            7895          mend
00005108                                    7896+$eye0146    ds    0d                                                    02-DCCCA
00005108 C4C3C3                             7897+         dc cl3'DCC'                                                    02-DCCCA
0000510B 01                                 7898+         dc xl1'01' format one                                          02-DCCCA
0000510C 00000000                           7899+         dc a(0)                                                        02-DCCCA
00005110 000000000000517A                   7900+         dc ad(@PER_344)                                                02-DCCCA
00005118 00000000000000D8                   7901+         dc ad(216)                                                     02-DCCCA
00005120 0000000000000000                   7902+         dc ad(0)                                                       02-DCCCA
00005128 0000000000001000                   7903+         dc ad(4096)                                                    02-DCCCA
00005130 20                                 7904+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005131 03                                 7905+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005132 03                                 7906+         dc al1(3)                                                      02-DCCCA
00005133 08                                 7907+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005134 00                                 7908+         dc bl.8'00000000'                                              02-DCCCA
00005135 000000                             7909+         dc al3(0)                                                      02-DCCCA
00005138 00000000000050E8                   7910+         dc ad(@LNAME344)                                               02-DCCCA
00005140                                    7911+         ds 0d                                                          02-DCCCA
00005140 0000000000005108                   7912+         dc ad($eye0146)                                                02-DCCCA
00005148 0000000000000000                   7913+         dc ad(0)                                                       02-DCCCA
00005150                                    7914+         ds    0d                                                       01-DCCPR
                                            7915+         entry rd_kafka_snappy_uncompress                               01-DCCPR
00005150                                    7916+rd_kafka_snappy_uncompress ds 0d                                        01-DCCPR
00005150                                    7917+@REGION_344_1 ds 0h                                                     01-DCCPR
00005150 EBEC D008 0024          00000008   7918+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005156 E3E0 D088 0004          00000088   7919+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000515C E3C0 D090 0004          00000090   7920+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005162 B904 002E                          7921+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005166 E3B0 C018 0004          00000018   7922+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000516C A7EB 00D8               000000D8   7923+         aghi  14,216              increase by frame size               01-DCCPR
00005170 E3E0 C020 0021          00000020   7924+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005176 4720 B020               00000020   7925+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000517A                                    7926+@PER_344 ds    0h                                                       01-DCCPR
0000517A EBDE 2080 0024          00000080   7927+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005180 E3C0 2090 0024          00000090   7928+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005186 B904 00D2                          7929+         lgr   13,2                set real frame pointer               01-DCCPR
0000518A B904 00CF                          7930+         lgr   12,15               set base reg                         01-DCCPR
                        00005150            7931+         using @REGION_344_1,12                                         01-DCCPR
                                            7932 * ******* End of Prologue
                                            7933 * *
                                            7934 * ***      struct iovec iov = {
                                            7935 * ***         .iov_base = (char *)compressed,
0000518E E3F0 1000 0004          00000000   7936          LG    15,0(0,1)   ; compressed
00005194 E3F0 D0A8 0024          000000A8   7937          STG   15,168(0,13)
                                            7938 * ***         .iov_len = n
                                            7939 * ***      };
0000519A E3F0 1008 0004          00000008   7940          LG    15,8(0,1)   ; n
000051A0 E3F0 D0B0 0024          000000B0   7941          STG   15,176(0,13)
                                            7942 * ***      return rd_kafka_snappy_uncompress_iov(&iov, 1, n, uncompres\
                                            7943 * sed);
000051A6 4120 D0A8               000000A8   7944          LA    2,168(0,13)
000051AA E320 D0B8 0024          000000B8   7945          STG   2,184(0,13)
000051B0 E548 D0C0 0001          000000C0   7946          MVGHI 192(13),1
000051B6 E3F0 D0C8 0024          000000C8   7947          STG   15,200(0,13)
000051BC E3F0 1010 0004          00000010   7948          LG    15,16(0,1)  ; uncompressed
000051C2 E3F0 D0D0 0024          000000D0   7949          STG   15,208(0,13)
000051C8 4110 D0B8               000000B8   7950          LA    1,184(0,13)
000051CC E3F0 C0D8 0004          00005228   7951          LG    15,@lit_344_310 ; rd_kafka_snappy_uncompress_iov
000051D2                                    7952 @@gen_label429 DS    0H
000051D2 05EF                               7953          BALR  14,15
000051D4                                    7954 @@gen_label430 DS    0H
000051D4 B914 00FF                          7955          LGFR  15,15
                                            7956 * ***   }
                                            7957 * * **** Start of Epilogue
                                            7958          DCCEPIL
000051D8                                    7959+         ds 0h                                                          01-DCCEP
                                            7960+* Epilog
000051D8 D707 D088 D088 00000088 00000088   7961+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000051DE E3D0 D080 0004          00000080   7962+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000051E4 E3C0 D090 0004          00000090   7963+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000051EA E3B0 C018 0004          00000018   7964+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000051F0 E3C0 B010 0021          00000010   7965+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000051F6 E3E0 D008 0004          00000008   7966+         lg  14,8(0,13)          load up return address                 01-DCCEP
000051FC EB1C D020 0004          00000020   7967+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005202 078E                               7968+         bcr 8,14                if same dsab, just return              01-DCCEP
00005204 E3F0 D010 0024          00000010   7969+         stg 15,16(0,13)         save return code                       01-DCCEP
0000520A E300 D018 0024          00000018   7970+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  159 
  Active Usings: @REGION_344_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005210 E3F0 D090 0004          00000090   7971+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005216 E3F0 F018 0004          00000018   7972+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000521C 47F0 F040               00000040   7973+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7974+* End of Epilog
                                            7975 * * **** End of Epilogue
00005220                                    7976          DS    0D
00005220 000000D8                           7977 @FRAMESIZE_344 DC F'216'
00005224 00000000
00005228 0000000000004FE0                   7978 @lit_344_310 DC AD(rd_kafka_snappy_uncompress_iov)
                                            7979          DROP  12
                                            7980 *
                                            7981 *   DSECT for automatic variables in "rd_kafka_snappy_uncompress"
                                            7982 *      (FUNCTION #344)
                                            7983 *
00000000                00000000 000000B8   7984 @AUTO#rd_kafka_snappy_uncompress DSECT
00000000                                    7985          DS    XL168
000000A8                                    7986 rd_kafka_snappy_uncompress#iov#0 DS 16XL1 ; iov
                                            7987 *
00005230                00000000 00005B58   7988 @CODE    CSECT
                                            7989 *
                                            7990 *
                                            7991 *
                                            7992 * ....... start of rd_kafka_snappy_java_uncompress
                                            7993 rd_kafka_snappy_java_uncompress ALIAS X'99846D92818692816DA295819797A86*
                                                                D9181A5816DA495839694979985A2A2'
00005230                                    7994 @LNAME345 DS   0H
00005230 0000001F                           7995          DC    X'0000001F'
00005234 99846D9281869281                   7996          DC    C'rd_kafka_snappy_java_uncompress'
00005253 00                                 7997          DC    X'00'
                                            7998 rd_kafka_snappy_java_uncompress DCCPRLG CINDEX=345,BASER=12,FRAME=224,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME345
                                            7999          macro
                                            8000          dccextrn &m
                                            8001          gblc    &$dccext(1000)
                                            8002          gbla    &$dccexti
                                            8003          lcla    &i
                                            8004 &$dccext(&$dccexti+1) setc    '&m'
                                            8005 &i       seta    1
                                            8006 .loop    aif    (&i gt &$dccexti).around
                                            8007          aif    ('&$dccext(&i)' eq '&m').getout
                                            8008 &i       seta    &i+1
                                            8009          ago     .loop
                                            8010 .around  anop
                                            8011 &$dccexti seta &$dccexti+1
                                            8012          extrn  &m
                                            8013 .getout  anop
                                            8014          mend
00005258                                    8015+$eye0149    ds    0d                                                    02-DCCCA
00005258 C4C3C3                             8016+         dc cl3'DCC'                                                    02-DCCCA
0000525B 01                                 8017+         dc xl1'01' format one                                          02-DCCCA
0000525C 00000000                           8018+         dc a(0)                                                        02-DCCCA
00005260 00000000000052CA                   8019+         dc ad(@PER_345)                                                02-DCCCA
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005268 00000000000000E0                   8020+         dc ad(224)                                                     02-DCCCA
00005270 0000000000000000                   8021+         dc ad(0)                                                       02-DCCCA
00005278 0000000000001000                   8022+         dc ad(4096)                                                    02-DCCCA
00005280 20                                 8023+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005281 03                                 8024+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005282 03                                 8025+         dc al1(3)                                                      02-DCCCA
00005283 08                                 8026+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005284 00                                 8027+         dc bl.8'00000000'                                              02-DCCCA
00005285 000000                             8028+         dc al3(0)                                                      02-DCCCA
00005288 0000000000005230                   8029+         dc ad(@LNAME345)                                               02-DCCCA
00005290                                    8030+         ds 0d                                                          02-DCCCA
00005290 0000000000005258                   8031+         dc ad($eye0149)                                                02-DCCCA
00005298 0000000000000000                   8032+         dc ad(0)                                                       02-DCCCA
000052A0                                    8033+         ds    0d                                                       01-DCCPR
                                            8034+         entry rd_kafka_snappy_java_uncompress                          01-DCCPR
000052A0                                    8035+rd_kafka_snappy_java_uncompress ds 0d                                   01-DCCPR
000052A0                                    8036+@REGION_345_1 ds 0h                                                     01-DCCPR
000052A0 EBEC D008 0024          00000008   8037+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000052A6 E3E0 D088 0004          00000088   8038+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000052AC E3C0 D090 0004          00000090   8039+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000052B2 B904 002E                          8040+         lgr   2,14                copy addr of our savearea            01-DCCPR
000052B6 E3B0 C018 0004          00000018   8041+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000052BC A7EB 00E0               000000E0   8042+         aghi  14,224              increase by frame size               01-DCCPR
000052C0 E3E0 C020 0021          00000020   8043+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000052C6 4720 B020               00000020   8044+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000052CA                                    8045+@PER_345 ds    0h                                                       01-DCCPR
000052CA EBDE 2080 0024          00000080   8046+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000052D0 E3C0 2090 0024          00000090   8047+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000052D6 B904 00D2                          8048+         lgr   13,2                set real frame pointer               01-DCCPR
000052DA B904 00CF                          8049+         lgr   12,15               set base reg                         01-DCCPR
                        000052A0            8050+         using @REGION_345_1,12                                         01-DCCPR
000052DE B904 00A1                          8051          LGR   10,1        ; ptr to parm area
                                            8052 * ******* End of Prologue
                                            8053 * *
000052E2 EB67 A000 0004          00000000   8054          LMG   6,7,0(10)   ; inbuf
000052E8 EB89 A018 0004          00000018   8055          LMG   8,9,24(10)  ; errstr
                                            8056 * ***           int pass;
                                            8057 * ***           char *outbuf = ((void *)0);
000052EE A749 0000               00000000   8058          LGHI  4,0         ; 0
                                            8059 * ***
                                            8060 * ***
                                            8061 * ***
                                            8062 * ***   # 1629 "C:\asgkafka\librdkafka\src\snappy.c"
                                            8063 * ***           for (pass = 1 ; pass <= 2 ; pass++) {
000052F2 A758 0001               00000001   8064          LHI   5,1         ; 1
000052F6 47F0 C36A               0000560A   8065          B     @L858
00005300                                    8066          DS    0D
00005300 000000E0                           8067 @FRAMESIZE_345 DC F'224'
00005304 00000000
00005308 0000000000000000                   8068 @lit_345_317 DC AD(snprintf)
00005310 000000000000600E                   8069 @lit_345_316 DC AD(@strings@)
00005318 00000000000028D8                   8070 @lit_345_319 DC AD(rd_kafka_snappy_uncompressed_length)
                                                                                                                           Page  161 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005320 0000000000005150                   8071 @lit_345_323 DC AD(rd_kafka_snappy_uncompress)
00005328 0000000000000000                   8072 @lit_345_324 DC AD(strerror)
00005330 00000000000001C0                   8073 @lit_345_327 DC AD(rd_free)
00005338 0000000000000058                   8074 @lit_345_336 DC AD(rd_malloc)
00005340 0000000000000000                   8075 @lit_345_337 DC AD(__error)
00005348                                    8076 @L857    DS    0H
                                            8077 * ***                   ssize_t of = 0;
00005348 A729 0000               00000000   8078          LGHI  2,0         ; 0
                                            8079 * ***                   ssize_t uof = 0;
0000534C B904 0032                          8080          LGR   3,2         ; uof
                                            8081 * ***
                                            8082 * ***                   while (of + 4 <= (ssize_t)inlen) {
00005350 47F0 C248               000054E8   8083          B     @L864
00005354                                    8084 @L863    DS    0H
                                            8085 * ***                           uint32_t clen;
                                            8086 * ***                           size_t ulen;
                                            8087 * ***                           int r;
                                            8088 * ***
                                            8089 * ***                           __memcpy(&clen,inbuf+of,4);
00005354 41F2 6000               00000000   8090          LA    15,0(2,6)
00005358 4110 D0B0               000000B0   8091          LA    1,176(0,13)
0000535C D203 1000 F000 00000000 00000000   8092          MVC   0(4,1),0(15)
                                            8093 * ***                           clen = (clen);
00005362 58F0 D0B0               000000B0   8094          L     15,176(0,13) ; clen
                                            8095 * ***                           of += 4;
00005366 A72B 0004               00000004   8096          AGHI  2,4
                                            8097 * ***
                                            8098 * ***                           if (((clen > inlen - of))) {
0000536A B916 001F                          8099          LLGFR 1,15
0000536E B904 00B7                          8100          LGR   11,7
00005372 B90B 00B2                          8101          SLGR  11,2
00005376 B921 001B                          8102          CLGR  1,11
0000537A 47D0 C11C               000053BC   8103          BNH   @L865
                                            8104 * ***                                   snprintf(errstr, errstr_size, \
                                            8105 * "Invalid snappy-java chunk length " "%" "d" " > %" "zd" " available \
                                            8106 * bytes", clen, (ssize_t)inlen - of);
0000537E EB89 D0B8 0024          000000B8   8107          STMG  8,9,184(13)
00005384 E310 C070 0004          00005310   8108          LG    1,@lit_345_316
0000538A 4110 13E0               000003E0   8109          LA    1,992(0,1)
0000538E E310 D0C8 0024          000000C8   8110          STG   1,200(0,13)
00005394 B916 00FF                          8111          LLGFR 15,15
00005398 E3F0 D0D0 0024          000000D0   8112          STG   15,208(0,13)
0000539E B909 0072                          8113          SGR   7,2
000053A2 E370 D0D8 0024          000000D8   8114          STG   7,216(0,13)
000053A8 4110 D0B8               000000B8   8115          LA    1,184(0,13)
000053AC E3F0 C068 0004          00005308   8116          LG    15,@lit_345_317 ; snprintf
000053B2                                    8117 @@gen_label432 DS    0H
000053B2 05EF                               8118          BALR  14,15
000053B4                                    8119 @@gen_label433 DS    0H
                                            8120 * ***
                                            8121 * ***
                                            8122 * ***
                                                                                                                           Page  162 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8123 * ***
                                            8124 * ***                                   return ((void *)0);
000053B4 A7F9 0000               00000000   8125          LGHI  15,0        ; 0
000053B8 47F0 C376               00005616   8126          B     @ret_lab_345
                                            8127 * ***                           }
000053BC                                    8128 @L865    DS    0H
                                            8129 * ***
                                            8130 * ***
                                            8131 * ***                           if (((!rd_kafka_snappy_uncompressed_le\
                                            8132 * ngth( inbuf+of, clen, &ulen)))) {
000053BC 4112 6000               00000000   8133          LA    1,0(2,6)
000053C0 E310 D0B8 0024          000000B8   8134          STG   1,184(0,13)
000053C6 B916 00FF                          8135          LLGFR 15,15
000053CA E3F0 D0C0 0024          000000C0   8136          STG   15,192(0,13)
000053D0 41F0 D0A8               000000A8   8137          LA    15,168(0,13)
000053D4 E3F0 D0C8 0024          000000C8   8138          STG   15,200(0,13)
000053DA 4110 D0B8               000000B8   8139          LA    1,184(0,13)
000053DE E3F0 C078 0004          00005318   8140          LG    15,@lit_345_319 ; rd_kafka_snappy_uncompressed_length
000053E4                                    8141 @@gen_label434 DS    0H
000053E4 05EF                               8142          BALR  14,15
000053E6                                    8143 @@gen_label435 DS    0H
000053E6 C0FB 0000 00FF                     8144          NILF  15,X'000000FF'
000053EC 12FF                               8145          LTR   15,15
000053EE 4770 C188               00005428   8146          BNZ   @L866
                                            8147 * ***
                                            8148 * ***                                   snprintf(errstr, errstr_size, \
                                            8149 * "Failed to get length of " "(snappy-java framed) Snappy " "compresse\
                                            8150 * d payload " "(clen %" "d" ")", clen);
000053F2 EB89 D0B8 0024          000000B8   8151          STMG  8,9,184(13)
000053F8 E3F0 C070 0004          00005310   8152          LG    15,@lit_345_316
000053FE 41F0 F41A               0000041A   8153          LA    15,1050(0,15)
00005402 E3F0 D0C8 0024          000000C8   8154          STG   15,200(0,13)
00005408 E3F0 D0B0 0016          000000B0   8155          LLGF  15,176(0,13) ; clen
0000540E E3F0 D0D0 0024          000000D0   8156          STG   15,208(0,13)
00005414 4110 D0B8               000000B8   8157          LA    1,184(0,13)
00005418 E3F0 C068 0004          00005308   8158          LG    15,@lit_345_317 ; snprintf
0000541E                                    8159 @@gen_label437 DS    0H
0000541E 05EF                               8160          BALR  14,15
00005420                                    8161 @@gen_label438 DS    0H
                                            8162 * ***   # 1660 "C:\asgkafka\librdkafka\src\snappy.c"
                                            8163 * ***                                   return ((void *)0);
00005420 A7F9 0000               00000000   8164          LGHI  15,0        ; 0
00005424 47F0 C376               00005616   8165          B     @ret_lab_345
                                            8166 * ***                           }
00005428                                    8167 @L866    DS    0H
                                            8168 * ***
                                            8169 * ***                           if (pass == 1) {
00005428 A75E 0001               00000001   8170          CHI   5,1
0000542C 4770 C1A2               00005442   8171          BNE   @L867
                                            8172 * ***
                                            8173 * ***                                   of  += clen;
00005430 58F0 D0B0               000000B0   8174          L     15,176(0,13) ; clen
                                                                                                                           Page  163 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005434 B91A 002F                          8175          ALGFR 2,15
                                            8176 * ***                                   uof += ulen;
00005438 E330 D0A8 000A          000000A8   8177          ALG   3,168(0,13)
                                            8178 * ***                                   continue;
0000543E 47F0 C248               000054E8   8179          B     @L864
                                            8180 * ***                           }
00005442                                    8181 @L867    DS    0H
                                            8182 * ***
                                            8183 * ***
                                            8184 * ***                           if ((((r = rd_kafka_snappy_uncompress(\
                                            8185 *  inbuf+of, clen, outbuf+uof))))) {
00005442 41F2 6000               00000000   8186          LA    15,0(2,6)
00005446 E3F0 D0B8 0024          000000B8   8187          STG   15,184(0,13)
0000544C E3F0 D0B0 0016          000000B0   8188          LLGF  15,176(0,13) ; clen
00005452 E3F0 D0C0 0024          000000C0   8189          STG   15,192(0,13)
00005458 41F3 4000               00000000   8190          LA    15,0(3,4)
0000545C E3F0 D0C8 0024          000000C8   8191          STG   15,200(0,13)
00005462 4110 D0B8               000000B8   8192          LA    1,184(0,13)
00005466 E3F0 C080 0004          00005320   8193          LG    15,@lit_345_323 ; rd_kafka_snappy_uncompress
0000546C                                    8194 @@gen_label440 DS    0H
0000546C 05EF                               8195          BALR  14,15
0000546E                                    8196 @@gen_label441 DS    0H
0000546E 12FF                               8197          LTR   15,15
00005470 4780 C23A               000054DA   8198          BZ    @L868
                                            8199 * ***
                                            8200 * ***                                   snprintf(errstr, errstr_size, \
                                            8201 * "Failed to decompress Snappy-java " "framed payload of size %" "d" "\
                                            8202 * : %s", clen, strerror(-r));
00005474 13FF                               8203          LCR   15,15
00005476 B914 00FF                          8204          LGFR  15,15
0000547A E3F0 D0B8 0024          000000B8   8205          STG   15,184(0,13)
00005480 4110 D0B8               000000B8   8206          LA    1,184(0,13)
00005484 E3F0 C088 0004          00005328   8207          LG    15,@lit_345_324 ; strerror
0000548A                                    8208 @@gen_label443 DS    0H
0000548A 05EF                               8209          BALR  14,15
0000548C                                    8210 @@gen_label444 DS    0H
0000548C EB89 D0B8 0024          000000B8   8211          STMG  8,9,184(13)
00005492 E310 C070 0004          00005310   8212          LG    1,@lit_345_316
00005498 4110 146C               0000046C   8213          LA    1,1132(0,1)
0000549C E310 D0C8 0024          000000C8   8214          STG   1,200(0,13)
000054A2 E310 D0B0 0016          000000B0   8215          LLGF  1,176(0,13) ; clen
000054A8 E310 D0D0 0024          000000D0   8216          STG   1,208(0,13)
000054AE E3F0 D0D8 0024          000000D8   8217          STG   15,216(0,13)
000054B4 4110 D0B8               000000B8   8218          LA    1,184(0,13)
000054B8 E3F0 C068 0004          00005308   8219          LG    15,@lit_345_317 ; snprintf
000054BE                                    8220 @@gen_label445 DS    0H
000054BE 05EF                               8221          BALR  14,15
000054C0                                    8222 @@gen_label446 DS    0H
                                            8223 * ***   # 1679 "C:\asgkafka\librdkafka\src\snappy.c"
                                            8224 * ***                                   rd_free(outbuf);
000054C0 E340 D0B8 0024          000000B8   8225          STG   4,184(0,13)
000054C6 4110 D0B8               000000B8   8226          LA    1,184(0,13)
                                                                                                                           Page  164 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000054CA E3F0 C090 0004          00005330   8227          LG    15,@lit_345_327 ; rd_free
000054D0                                    8228 @@gen_label447 DS    0H
000054D0 05EF                               8229          BALR  14,15
000054D2                                    8230 @@gen_label448 DS    0H
                                            8231 * ***                                   return ((void *)0);
000054D2 A7F9 0000               00000000   8232          LGHI  15,0        ; 0
000054D6 47F0 C376               00005616   8233          B     @ret_lab_345
                                            8234 * ***                           }
000054DA                                    8235 @L868    DS    0H
                                            8236 * ***
                                            8237 * ***                           of  += clen;
000054DA 58F0 D0B0               000000B0   8238          L     15,176(0,13) ; clen
000054DE B91A 002F                          8239          ALGFR 2,15
                                            8240 * ***                           uof += ulen;
000054E2 E330 D0A8 000A          000000A8   8241          ALG   3,168(0,13)
                                            8242 * ***                   }
000054E8                                    8243 @L862    DS    0H
000054E8                                    8244 @L864    DS    0H
000054E8 B904 00F2                          8245          LGR   15,2
000054EC A7FB 0004               00000004   8246          AGHI  15,4
000054F0 B920 00F7                          8247          CGR   15,7
000054F4 47D0 C0B4               00005354   8248          BNH   @L863
                                            8249 * ***
                                            8250 * ***                   if (((of != (ssize_t)inlen))) {
000054F8 B920 0027                          8251          CGR   2,7
000054FC 4780 C2AE               0000554E   8252          BE    @L869
                                            8253 * ***                           snprintf(errstr, errstr_size, "%" "zu"\
                                            8254 *  " trailing bytes in Snappy-java " "framed compressed data", inlen -\
                                            8255 *  of);
00005500 EB89 D0B8 0024          000000B8   8256          STMG  8,9,184(13)
00005506 E3F0 C070 0004          00005310   8257          LG    15,@lit_345_316
0000550C 41F0 F4AC               000004AC   8258          LA    15,1196(0,15)
00005510 E3F0 D0C8 0024          000000C8   8259          STG   15,200(0,13)
00005516 B90B 0072                          8260          SLGR  7,2
0000551A E370 D0D0 0024          000000D0   8261          STG   7,208(0,13)
00005520 4110 D0B8               000000B8   8262          LA    1,184(0,13)
00005524 E3F0 C068 0004          00005308   8263          LG    15,@lit_345_317 ; snprintf
0000552A                                    8264 @@gen_label451 DS    0H
0000552A 05EF                               8265          BALR  14,15
0000552C                                    8266 @@gen_label452 DS    0H
                                            8267 * ***
                                            8268 * ***
                                            8269 * ***
                                            8270 * ***                           if (outbuf)
0000552C B902 00F4                          8271          LTGR  15,4
00005530 4780 C2A6               00005546   8272          BZ    @L870
                                            8273 * ***                                   rd_free(outbuf);
00005534 E340 D0B8 0024          000000B8   8274          STG   4,184(0,13)
0000553A 4110 D0B8               000000B8   8275          LA    1,184(0,13)
0000553E E3F0 C090 0004          00005330   8276          LG    15,@lit_345_327 ; rd_free
00005544                                    8277 @@gen_label454 DS    0H
00005544 05EF                               8278          BALR  14,15
                                                                                                                           Page  165 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005546                                    8279 @@gen_label455 DS    0H
00005546                                    8280 @L870    DS    0H
                                            8281 * ***                           return ((void *)0);
00005546 A7F9 0000               00000000   8282          LGHI  15,0        ; 0
0000554A 47F0 C376               00005616   8283          B     @ret_lab_345
                                            8284 * ***                   }
0000554E                                    8285 @L869    DS    0H
                                            8286 * ***
                                            8287 * ***                   if (pass == 1) {
0000554E A75E 0001               00000001   8288          CHI   5,1
00005552 4770 C35A               000055FA   8289          BNE   @L871
                                            8290 * ***                           if (uof <= 0) {
00005556 B902 00F3                          8291          LTGR  15,3
0000555A 4720 C2E8               00005588   8292          BH    @L872
                                            8293 * ***                                   snprintf(errstr, errstr_size, \
                                            8294 * "Empty Snappy-java framed data");
0000555E EB89 D0B8 0024          000000B8   8295          STMG  8,9,184(13)
00005564 E3F0 C070 0004          00005310   8296          LG    15,@lit_345_316
0000556A 41F0 F4E6               000004E6   8297          LA    15,1254(0,15)
0000556E E3F0 D0C8 0024          000000C8   8298          STG   15,200(0,13)
00005574 4110 D0B8               000000B8   8299          LA    1,184(0,13)
00005578 E3F0 C068 0004          00005308   8300          LG    15,@lit_345_317 ; snprintf
0000557E                                    8301 @@gen_label458 DS    0H
0000557E 05EF                               8302          BALR  14,15
00005580                                    8303 @@gen_label459 DS    0H
                                            8304 * ***
                                            8305 * ***                                   return ((void *)0);
00005580 A7F9 0000               00000000   8306          LGHI  15,0        ; 0
00005584 47F0 C376               00005616   8307          B     @ret_lab_345
                                            8308 * ***                           }
00005588                                    8309 @L872    DS    0H
                                            8310 * ***
                                            8311 * ***
                                            8312 * ***                           outbuf = rd_malloc(uof);
00005588 E330 D0B8 0024          000000B8   8313          STG   3,184(0,13)
0000558E 4110 D0B8               000000B8   8314          LA    1,184(0,13)
00005592 E3F0 C098 0004          00005338   8315          LG    15,@lit_345_336 ; rd_malloc
00005598                                    8316 @@gen_label460 DS    0H
00005598 05EF                               8317          BALR  14,15
0000559A                                    8318 @@gen_label461 DS    0H
0000559A B902 004F                          8319          LTGR  4,15        ; outbuf
                                            8320 * ***                           if (((!outbuf))) {
0000559E 4770 C366               00005606   8321          BNZ   @L874
                                            8322 * ***                                   snprintf(errstr, errstr_size, \
                                            8323 * "Failed to allocate memory " "(%" "zd" ") for " "uncompressed Snappy\
                                            8324 *  data: %s", uof, strerror((* __error())));
000055A2 E3F0 C0A0 0004          00005340   8325          LG    15,@lit_345_337 ; __error
000055A8                                    8326 @@gen_label463 DS    0H
000055A8 05EF                               8327          BALR  14,15
000055AA                                    8328 @@gen_label464 DS    0H
000055AA 58F0 F000               00000000   8329          L     15,0(0,15)
000055AE B914 00FF                          8330          LGFR  15,15
                                                                                                                           Page  166 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000055B2 E3F0 D0B8 0024          000000B8   8331          STG   15,184(0,13)
000055B8 4110 D0B8               000000B8   8332          LA    1,184(0,13)
000055BC E3F0 C088 0004          00005328   8333          LG    15,@lit_345_324 ; strerror
000055C2                                    8334 @@gen_label465 DS    0H
000055C2 05EF                               8335          BALR  14,15
000055C4                                    8336 @@gen_label466 DS    0H
000055C4 EB89 D0B8 0024          000000B8   8337          STMG  8,9,184(13)
000055CA E310 C070 0004          00005310   8338          LG    1,@lit_345_316
000055D0 4110 1504               00000504   8339          LA    1,1284(0,1)
000055D4 E310 D0C8 0024          000000C8   8340          STG   1,200(0,13)
000055DA E330 D0D0 0024          000000D0   8341          STG   3,208(0,13)
000055E0 E3F0 D0D8 0024          000000D8   8342          STG   15,216(0,13)
000055E6 4110 D0B8               000000B8   8343          LA    1,184(0,13)
000055EA E3F0 C068 0004          00005308   8344          LG    15,@lit_345_317 ; snprintf
000055F0                                    8345 @@gen_label467 DS    0H
000055F0 05EF                               8346          BALR  14,15
000055F2                                    8347 @@gen_label468 DS    0H
                                            8348 * ***
                                            8349 * ***
                                            8350 * ***
                                            8351 * ***
                                            8352 * ***                                   return ((void *)0);
000055F2 A7F9 0000               00000000   8353          LGHI  15,0        ; 0
000055F6 47F0 C376               00005616   8354          B     @ret_lab_345
                                            8355 * ***                           }
                                            8356 * ***
                                            8357 * ***                   } else {
000055FA                                    8358 @L871    DS    0H
                                            8359 * ***
                                            8360 * ***                           *outlenp = uof;
000055FA E3F0 A010 0004          00000010   8361          LG    15,16(0,10) ; outlenp
00005600 E330 F000 0024          00000000   8362          STG   3,0(0,15)   ; outlenp
                                            8363 * ***                   }
00005606                                    8364 @L874    DS    0H
                                            8365 * ***           }
00005606 A75A 0001               00000001   8366          AHI   5,1
0000560A                                    8367 @L858    DS    0H
0000560A A75E 0002               00000002   8368          CHI   5,2
0000560E 47D0 C0A8               00005348   8369          BNH   @L857
                                            8370 * ***
                                            8371 * ***           return outbuf;
00005612 B904 00F4                          8372          LGR   15,4
                                            8373 * ***   }
00005616                                    8374 @ret_lab_345 DS 0H
                                            8375 * * **** Start of Epilogue
                                            8376          DCCEPIL
00005616                                    8377+         ds 0h                                                          01-DCCEP
                                            8378+* Epilog
00005616 D707 D088 D088 00000088 00000088   8379+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000561C E3D0 D080 0004          00000080   8380+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005622 E3C0 D090 0004          00000090   8381+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005628 E3B0 C018 0004          00000018   8382+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  167 
  Active Usings: @REGION_345_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000562E E3C0 B010 0021          00000010   8383+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005634 E3E0 D008 0004          00000008   8384+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000563A EB1C D020 0004          00000020   8385+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005640 078E                               8386+         bcr 8,14                if same dsab, just return              01-DCCEP
00005642 E3F0 D010 0024          00000010   8387+         stg 15,16(0,13)         save return code                       01-DCCEP
00005648 E300 D018 0024          00000018   8388+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000564E E3F0 D090 0004          00000090   8389+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005654 E3F0 F018 0004          00000018   8390+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000565A 47F0 F040               00000040   8391+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8392+* End of Epilog
                                            8393 * * **** End of Epilogue
                                            8394          DROP  12
                                            8395 *
                                            8396 *   DSECT for automatic variables in "rd_kafka_snappy_java_uncompress"
                                            8397 *      (FUNCTION #345)
                                            8398 *
00000000                00000000 000000B4   8399 @AUTO#rd_kafka_snappy_java_uncompress DSECT
00000000                                    8400          DS    XL168
000000A8                                    8401 rd_kafka_snappy_java_uncompress#r#2 DS 1F ; r
000000AC                000000AC 000000A8   8402          ORG   @AUTO#rd_kafka_snappy_java_uncompress+168
000000A8                                    8403 rd_kafka_snappy_java_uncompress#ulen#2 DS 8XL1 ; ulen
000000B0                000000B0 000000A8   8404          ORG   @AUTO#rd_kafka_snappy_java_uncompress+168
000000A8                                    8405 rd_kafka_snappy_java_uncompress#uof#1 DS 8XL1 ; uof
000000B0                000000B0 000000A8   8406          ORG   @AUTO#rd_kafka_snappy_java_uncompress+168
000000A8                                    8407 rd_kafka_snappy_java_uncompress#of#1 DS 8XL1 ; of
000000B0                000000B0 000000A8   8408          ORG   @AUTO#rd_kafka_snappy_java_uncompress+168
000000A8                                    8409 rd_kafka_snappy_java_uncompress#pass#0 DS 1F ; pass
000000AC                000000AC 000000B0   8410          ORG   @AUTO#rd_kafka_snappy_java_uncompress+176
000000B0                                    8411 rd_kafka_snappy_java_uncompress#clen#2 DS 1F ; clen
                                            8412 *
0000565E                00000000 00005B58   8413 @CODE    CSECT
                                            8414 *
                                            8415 *
                                            8416 *
                                            8417 * ....... start of clear_env
0000565E                                    8418 @LNAME1973 DS  0H
0000565E 00000009                           8419          DC    X'00000009'
00005662 83938581996D8595                   8420          DC    C'clear_env'
0000566B 00                                 8421          DC    X'00'
                                            8422 clear_env DCCPRLG CINDEX=1973,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1973
                                            8423          macro
                                            8424          dccextrn &m
                                            8425          gblc    &$dccext(1000)
                                            8426          gbla    &$dccexti
                                            8427          lcla    &i
                                            8428 &$dccext(&$dccexti+1) setc    '&m'
                                            8429 &i       seta    1
                                            8430 .loop    aif    (&i gt &$dccexti).around
                                            8431          aif    ('&$dccext(&i)' eq '&m').getout
                                            8432 &i       seta    &i+1
                                            8433          ago     .loop
                                                                                                                           Page  168 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8434 .around  anop
                                            8435 &$dccexti seta &$dccexti+1
                                            8436          extrn  &m
                                            8437 .getout  anop
                                            8438          mend
00005670                                    8439+$eye0152    ds    0d                                                    02-DCCCA
00005670 C4C3C3                             8440+         dc cl3'DCC'                                                    02-DCCCA
00005673 01                                 8441+         dc xl1'01' format one                                          02-DCCCA
00005674 00000000                           8442+         dc a(0)                                                        02-DCCCA
00005678 0000000000000000                   8443+         dc ad(0)                                                       02-DCCCA
00005680 00000000000000A8                   8444+         dc ad(168)                                                     02-DCCCA
00005688 0000000000000000                   8445+         dc ad(0)                                                       02-DCCCA
00005690 0000000000001000                   8446+         dc ad(4096)                                                    02-DCCCA
00005698 20                                 8447+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005699 03                                 8448+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000569A 03                                 8449+         dc al1(3)                                                      02-DCCCA
0000569B 08                                 8450+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000569C 00                                 8451+         dc bl.8'00000000'                                              02-DCCCA
0000569D 000000                             8452+         dc al3(0)                                                      02-DCCCA
000056A0 000000000000565E                   8453+         dc ad(@LNAME1973)                                              02-DCCCA
000056A8                                    8454+         ds 0d                                                          02-DCCCA
000056A8 0000000000005670                   8455+         dc ad($eye0152)                                                02-DCCCA
000056B0 0000000000000000                   8456+         dc ad(0)                                                       02-DCCCA
000056B8                                    8457+         ds    0d                                                       01-DCCPR
000056B8                                    8458+clear_env ds   0d                                                       01-DCCPR
000056B8                                    8459+@REGION_1973_1 ds 0h                                                    01-DCCPR
000056B8 EBEC D008 0024          00000008   8460+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            8461 * ******* End of Prologue
                                            8462 * *
                                            8463 * ***       __memset(env,0,sizeof(*env));
000056BE E3F0 1000 0004          00000000   8464          LG    15,0(0,1)
                                            8465 * setting 24 bytes to 0x00
000056C4 D717 F000 F000 00000000 00000000   8466          XC    0(24,15),0(15)
                                            8467 * ***   }
000056CA                                    8468 @ret_lab_1973 DS 0H
                                            8469 * * **** Start of Epilogue
                                            8470          DCCEPIL
000056CA                                    8471+         ds 0h                                                          01-DCCEP
                                            8472+* Epilog
                                            8473+* Epilog
000056CA E3E0 D008 0004          00000008   8474+         lg    14,8(,13) restore the reg                                01-DCCEP
000056D0 EB1C D020 0004          00000020   8475+         lmg   1,12,32(13)                                              01-DCCEP
000056D6 07FE                               8476+         br   14                                                        01-DCCEP
                                            8477+* End of Epilog
                                            8478 * * **** End of Epilogue
                                            8479 *
                                            8480 *   DSECT for automatic variables in "clear_env"
                                            8481 *      (FUNCTION #1973)
                                            8482 *
00000000                00000000 000000A8   8483 @AUTO#clear_env DSECT
00000000                                    8484          DS    XL168
                                            8485 *
                                                                                                                           Page  169 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000056D8                00000000 00005B58   8486 @CODE    CSECT
                                            8487 *
                                            8488 *
                                            8489 *
                                            8490 * ....... start of rd_kafka_snappy_init_env_sg
                                            8491 rd_kafka_snappy_init_env_sg ALIAS X'99846D92818692816DA295819797A86D899*
                                                                589A36D8595A56DA287'
000056D8                                    8492 @LNAME341 DS   0H
000056D8 0000001B                           8493          DC    X'0000001B'
000056DC 99846D9281869281                   8494          DC    C'rd_kafka_snappy_init_env_sg'
000056F7 00                                 8495          DC    X'00'
                                            8496 rd_kafka_snappy_init_env_sg DCCPRLG CINDEX=341,BASER=12,FRAME=176,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME341
                                            8497          macro
                                            8498          dccextrn &m
                                            8499          gblc    &$dccext(1000)
                                            8500          gbla    &$dccexti
                                            8501          lcla    &i
                                            8502 &$dccext(&$dccexti+1) setc    '&m'
                                            8503 &i       seta    1
                                            8504 .loop    aif    (&i gt &$dccexti).around
                                            8505          aif    ('&$dccext(&i)' eq '&m').getout
                                            8506 &i       seta    &i+1
                                            8507          ago     .loop
                                            8508 .around  anop
                                            8509 &$dccexti seta &$dccexti+1
                                            8510          extrn  &m
                                            8511 .getout  anop
                                            8512          mend
000056F8                                    8513+$eye0155    ds    0d                                                    02-DCCCA
000056F8 C4C3C3                             8514+         dc cl3'DCC'                                                    02-DCCCA
000056FB 01                                 8515+         dc xl1'01' format one                                          02-DCCCA
000056FC 00000000                           8516+         dc a(0)                                                        02-DCCCA
00005700 000000000000576A                   8517+         dc ad(@PER_341)                                                02-DCCCA
00005708 00000000000000B0                   8518+         dc ad(176)                                                     02-DCCCA
00005710 0000000000000000                   8519+         dc ad(0)                                                       02-DCCCA
00005718 0000000000001000                   8520+         dc ad(4096)                                                    02-DCCCA
00005720 20                                 8521+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005721 03                                 8522+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005722 03                                 8523+         dc al1(3)                                                      02-DCCCA
00005723 08                                 8524+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005724 00                                 8525+         dc bl.8'00000000'                                              02-DCCCA
00005725 000000                             8526+         dc al3(0)                                                      02-DCCCA
00005728 00000000000056D8                   8527+         dc ad(@LNAME341)                                               02-DCCCA
00005730                                    8528+         ds 0d                                                          02-DCCCA
00005730 00000000000056F8                   8529+         dc ad($eye0155)                                                02-DCCCA
00005738 0000000000000000                   8530+         dc ad(0)                                                       02-DCCCA
00005740                                    8531+         ds    0d                                                       01-DCCPR
                                            8532+         entry rd_kafka_snappy_init_env_sg                              01-DCCPR
00005740                                    8533+rd_kafka_snappy_init_env_sg ds 0d                                       01-DCCPR
00005740                                    8534+@REGION_341_1 ds 0h                                                     01-DCCPR
00005740 EBEC D008 0024          00000008   8535+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page  170 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005746 E3E0 D088 0004          00000088   8536+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000574C E3C0 D090 0004          00000090   8537+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005752 B904 002E                          8538+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005756 E3B0 C018 0004          00000018   8539+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000575C A7EB 00B0               000000B0   8540+         aghi  14,176              increase by frame size               01-DCCPR
00005760 E3E0 C020 0021          00000020   8541+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005766 4720 B020               00000020   8542+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000576A                                    8543+@PER_341 ds    0h                                                       01-DCCPR
0000576A EBDE 2080 0024          00000080   8544+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005770 E3C0 2090 0024          00000090   8545+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005776 B904 00D2                          8546+         lgr   13,2                set real frame pointer               01-DCCPR
0000577A B904 00CF                          8547+         lgr   12,15               set base reg                         01-DCCPR
                        00005740            8548+         using @REGION_341_1,12                                         01-DCCPR
0000577E B904 0031                          8549          LGR   3,1         ; ptr to parm area
                                            8550 * ******* End of Prologue
                                            8551 * *
                                            8552 * ***      if (rd_kafka_snappy_init_env(env) < 0)
00005782 E320 3000 0004          00000000   8553          LG    2,0(0,3)    ; env
00005788 E320 D0A8 0024          000000A8   8554          STG   2,168(0,13)
0000578E 4110 D0A8               000000A8   8555          LA    1,168(0,13)
00005792 E3F0 C0D0 0004          00005810   8556          LG    15,@lit_341_343 ; rd_kafka_snappy_init_env
00005798                                    8557 @@gen_label470 DS    0H
00005798 05EF                               8558          BALR  14,15
0000579A                                    8559 @@gen_label471 DS    0H
0000579A 12FF                               8560          LTR   15,15
0000579C 4740 C0F8               00005838   8561          BL    @_error@341@3
                                            8562 * ***         goto error;
000057A0                                    8563 @L875    DS    0H
                                            8564 * ***
                                            8565 * ***      if (sg) {
000057A0 9500 300F      0000000F 00000000   8566          CLI   15(3),0
000057A4 4780 C0F0               00005830   8567          BE    @L876
                                            8568 * ***         env->scratch = rd_malloc((1 << 16));
000057A8 C03F 0001 0000                     8569          LLILF 3,X'00010000' ; 65536
000057AE E330 D0A8 0024          000000A8   8570          STG   3,168(0,13)
000057B4 4110 D0A8               000000A8   8571          LA    1,168(0,13)
000057B8 E340 C0D8 0004          00005818   8572          LG    4,@lit_341_345 ; rd_malloc
000057BE B904 00F4                          8573          LGR   15,4
000057C2                                    8574 @@gen_label474 DS    0H
000057C2 05EF                               8575          BALR  14,15
000057C4                                    8576 @@gen_label475 DS    0H
000057C4 E3F0 2008 0024          00000008   8577          STG   15,8(0,2)
                                            8578 * ***         if (!env->scratch)
000057CA B902 00FF                          8579          LTGR  15,15
000057CE 4780 C0F8               00005838   8580          BZ    @_error@341@3
                                            8581 * ***            goto error;
000057D2                                    8582 @L877    DS    0H
                                            8583 * ***         env->scratch_output =
                                            8584 * ***            rd_malloc(rd_kafka_snappy_max_compressed_length((1 <<\
                                            8585 *  16)));
000057D2 E330 D0A8 0024          000000A8   8586          STG   3,168(0,13)
000057D8 4110 D0A8               000000A8   8587          LA    1,168(0,13)
                                                                                                                           Page  171 
  Active Usings: @REGION_341_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000057DC E3F0 C0E0 0004          00005820   8588          LG    15,@lit_341_347 ; rd_kafka_snappy_max_compressed_length
000057E2                                    8589 @@gen_label477 DS    0H
000057E2 05EF                               8590          BALR  14,15
000057E4                                    8591 @@gen_label478 DS    0H
000057E4 E3F0 D0A8 0024          000000A8   8592          STG   15,168(0,13)
000057EA 4110 D0A8               000000A8   8593          LA    1,168(0,13)
000057EE B904 00F4                          8594          LGR   15,4
000057F2                                    8595 @@gen_label479 DS    0H
000057F2 05EF                               8596          BALR  14,15
000057F4                                    8597 @@gen_label480 DS    0H
000057F4 E3F0 2010 0024          00000010   8598          STG   15,16(0,2)
                                            8599 * ***         if (!env->scratch_output)
000057FA B902 00FF                          8600          LTGR  15,15
000057FE 4770 C0F0               00005830   8601          BNZ   @L876
                                            8602 * ***            goto error;
00005802 47F0 C0F8               00005838   8603          B     @_error@341@3
00005808                                    8604          DS    0D
00005808 000000B0                           8605 @FRAMESIZE_341 DC F'176'
0000580C 00000000
00005810 0000000000005900                   8606 @lit_341_343 DC AD(rd_kafka_snappy_init_env)
00005818 0000000000000058                   8607 @lit_341_345 DC AD(rd_malloc)
00005820 0000000000002148                   8608 @lit_341_347 DC AD(rd_kafka_snappy_max_compressed_length)
00005828 0000000000005A58                   8609 @lit_341_350 DC AD(rd_kafka_snappy_free_env)
                                            8610 * ***      }
00005830                                    8611 @L876    DS    0H
                                            8612 * ***      return 0;
00005830 A7F9 0000               00000000   8613          LGHI  15,0        ; 0
00005834 47F0 C10E               0000584E   8614          B     @ret_lab_341
                                            8615 * ***   error:
                                            8616 * ***      rd_kafka_snappy_free_env(env);
00005838                                    8617 @_error@341@3 DS 0H
00005838 E320 D0A8 0024          000000A8   8618          STG   2,168(0,13)
0000583E 4110 D0A8               000000A8   8619          LA    1,168(0,13)
00005842 E3F0 C0E8 0004          00005828   8620          LG    15,@lit_341_350 ; rd_kafka_snappy_free_env
00005848                                    8621 @@gen_label482 DS    0H
00005848 05EF                               8622          BALR  14,15
0000584A                                    8623 @@gen_label483 DS    0H
                                            8624 * ***      return -12;
0000584A A7F9 FFF4               0000FFF4   8625          LGHI  15,-12      ; -12
                                            8626 * ***   }
0000584E                                    8627 @ret_lab_341 DS 0H
                                            8628 * * **** Start of Epilogue
                                            8629          DCCEPIL
0000584E                                    8630+         ds 0h                                                          01-DCCEP
                                            8631+* Epilog
0000584E D707 D088 D088 00000088 00000088   8632+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005854 E3D0 D080 0004          00000080   8633+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000585A E3C0 D090 0004          00000090   8634+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005860 E3B0 C018 0004          00000018   8635+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005866 E3C0 B010 0021          00000010   8636+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000586C E3E0 D008 0004          00000008   8637+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005872 EB1C D020 0004          00000020   8638+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  172 
  Active Usings: @REGION_341_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005878 078E                               8639+         bcr 8,14                if same dsab, just return              01-DCCEP
0000587A E3F0 D010 0024          00000010   8640+         stg 15,16(0,13)         save return code                       01-DCCEP
00005880 E300 D018 0024          00000018   8641+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005886 E3F0 D090 0004          00000090   8642+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000588C E3F0 F018 0004          00000018   8643+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005892 47F0 F040               00000040   8644+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8645+* End of Epilog
                                            8646 * * **** End of Epilogue
                                            8647          DROP  12
                                            8648 *
                                            8649 *   DSECT for automatic variables in "rd_kafka_snappy_init_env_sg"
                                            8650 *      (FUNCTION #341)
                                            8651 *
00000000                00000000 000000A8   8652 @AUTO#rd_kafka_snappy_init_env_sg DSECT
00000000                                    8653          DS    XL168
                                            8654 *
00005896                00000000 00005B58   8655 @CODE    CSECT
                                            8656 *
                                            8657 *
                                            8658 *
                                            8659 * ....... start of rd_kafka_snappy_init_env
                                            8660 rd_kafka_snappy_init_env ALIAS X'99846D92818692816DA295819797A86D899589*
                                                                A36D8595A5'
00005896                                    8661 @LNAME340 DS   0H
00005896 00000018                           8662          DC    X'00000018'
0000589A 99846D9281869281                   8663          DC    C'rd_kafka_snappy_init_env'
000058B2 00                                 8664          DC    X'00'
                                            8665 rd_kafka_snappy_init_env DCCPRLG CINDEX=340,BASER=12,FRAME=176,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME340
                                            8666          macro
                                            8667          dccextrn &m
                                            8668          gblc    &$dccext(1000)
                                            8669          gbla    &$dccexti
                                            8670          lcla    &i
                                            8671 &$dccext(&$dccexti+1) setc    '&m'
                                            8672 &i       seta    1
                                            8673 .loop    aif    (&i gt &$dccexti).around
                                            8674          aif    ('&$dccext(&i)' eq '&m').getout
                                            8675 &i       seta    &i+1
                                            8676          ago     .loop
                                            8677 .around  anop
                                            8678 &$dccexti seta &$dccexti+1
                                            8679          extrn  &m
                                            8680 .getout  anop
                                            8681          mend
000058B8                                    8682+$eye0158    ds    0d                                                    02-DCCCA
000058B8 C4C3C3                             8683+         dc cl3'DCC'                                                    02-DCCCA
000058BB 01                                 8684+         dc xl1'01' format one                                          02-DCCCA
000058BC 00000000                           8685+         dc a(0)                                                        02-DCCCA
000058C0 000000000000592A                   8686+         dc ad(@PER_340)                                                02-DCCCA
000058C8 00000000000000B0                   8687+         dc ad(176)                                                     02-DCCCA
000058D0 0000000000000000                   8688+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  173 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000058D8 0000000000001000                   8689+         dc ad(4096)                                                    02-DCCCA
000058E0 20                                 8690+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000058E1 03                                 8691+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000058E2 03                                 8692+         dc al1(3)                                                      02-DCCCA
000058E3 08                                 8693+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000058E4 00                                 8694+         dc bl.8'00000000'                                              02-DCCCA
000058E5 000000                             8695+         dc al3(0)                                                      02-DCCCA
000058E8 0000000000005896                   8696+         dc ad(@LNAME340)                                               02-DCCCA
000058F0                                    8697+         ds 0d                                                          02-DCCCA
000058F0 00000000000058B8                   8698+         dc ad($eye0158)                                                02-DCCCA
000058F8 0000000000000000                   8699+         dc ad(0)                                                       02-DCCCA
00005900                                    8700+         ds    0d                                                       01-DCCPR
                                            8701+         entry rd_kafka_snappy_init_env                                 01-DCCPR
00005900                                    8702+rd_kafka_snappy_init_env ds 0d                                          01-DCCPR
00005900                                    8703+@REGION_340_1 ds 0h                                                     01-DCCPR
00005900 EBEC D008 0024          00000008   8704+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005906 E3E0 D088 0004          00000088   8705+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000590C E3C0 D090 0004          00000090   8706+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005912 B904 002E                          8707+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005916 E3B0 C018 0004          00000018   8708+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000591C A7EB 00B0               000000B0   8709+         aghi  14,176              increase by frame size               01-DCCPR
00005920 E3E0 C020 0021          00000020   8710+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005926 4720 B020               00000020   8711+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000592A                                    8712+@PER_340 ds    0h                                                       01-DCCPR
0000592A EBDE 2080 0024          00000080   8713+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005930 E3C0 2090 0024          00000090   8714+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005936 B904 00D2                          8715+         lgr   13,2                set real frame pointer               01-DCCPR
0000593A B904 00CF                          8716+         lgr   12,15               set base reg                         01-DCCPR
                        00005900            8717+         using @REGION_340_1,12                                         01-DCCPR
                                            8718 * ******* End of Prologue
                                            8719 * *
                                            8720 * ***       clear_env(env);
0000593E E320 1000 0004          00000000   8721          LG    2,0(0,1)    ; env
00005944 E320 D0A8 0024          000000A8   8722          STG   2,168(0,13)
0000594A 4110 D0A8               000000A8   8723          LA    1,168(0,13)
0000594E E3F0 C090 0004          00005990   8724          LG    15,@lit_340_353 ; clear_env
00005954                                    8725 @@gen_label484 DS    0H
00005954 05EF                               8726          BALR  14,15
00005956                                    8727 @@gen_label485 DS    0H
                                            8728 * ***      env->hash_table = rd_malloc(sizeof(u16) * (1U << 14));
00005956 C0FF 0000 8000                     8729          LLILF 15,X'00008000' ; 32768
0000595C E3F0 D0A8 0024          000000A8   8730          STG   15,168(0,13)
00005962 4110 D0A8               000000A8   8731          LA    1,168(0,13)
00005966 E3F0 C098 0004          00005998   8732          LG    15,@lit_340_355 ; rd_malloc
0000596C                                    8733 @@gen_label486 DS    0H
0000596C 05EF                               8734          BALR  14,15
0000596E                                    8735 @@gen_label487 DS    0H
0000596E E3F0 2000 0024          00000000   8736          STG   15,0(0,2)
                                            8737 * ***      if (!env->hash_table)
00005974 B902 00FF                          8738          LTGR  15,15
00005978 4770 C0A0               000059A0   8739          BNZ   @L879
                                            8740 * ***         return -12;
                                                                                                                           Page  174 
  Active Usings: @REGION_340_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000597C A7F9 FFF4               0000FFF4   8741          LGHI  15,-12      ; -12
00005980 47F0 C0A4               000059A4   8742          B     @ret_lab_340
00005988                                    8743          DS    0D
00005988 000000B0                           8744 @FRAMESIZE_340 DC F'176'
0000598C 00000000
00005990 00000000000056B8                   8745 @lit_340_353 DC AD(clear_env)
00005998 0000000000000058                   8746 @lit_340_355 DC AD(rd_malloc)
000059A0                                    8747 @L879    DS    0H
                                            8748 * ***      return 0;
000059A0 A7F9 0000               00000000   8749          LGHI  15,0        ; 0
                                            8750 * ***   }
000059A4                                    8751 @ret_lab_340 DS 0H
                                            8752 * * **** Start of Epilogue
                                            8753          DCCEPIL
000059A4                                    8754+         ds 0h                                                          01-DCCEP
                                            8755+* Epilog
000059A4 D707 D088 D088 00000088 00000088   8756+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000059AA E3D0 D080 0004          00000080   8757+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000059B0 E3C0 D090 0004          00000090   8758+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000059B6 E3B0 C018 0004          00000018   8759+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000059BC E3C0 B010 0021          00000010   8760+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000059C2 E3E0 D008 0004          00000008   8761+         lg  14,8(0,13)          load up return address                 01-DCCEP
000059C8 EB1C D020 0004          00000020   8762+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000059CE 078E                               8763+         bcr 8,14                if same dsab, just return              01-DCCEP
000059D0 E3F0 D010 0024          00000010   8764+         stg 15,16(0,13)         save return code                       01-DCCEP
000059D6 E300 D018 0024          00000018   8765+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059DC E3F0 D090 0004          00000090   8766+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059E2 E3F0 F018 0004          00000018   8767+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000059E8 47F0 F040               00000040   8768+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8769+* End of Epilog
                                            8770 * * **** End of Epilogue
                                            8771          DROP  12
                                            8772 *
                                            8773 *   DSECT for automatic variables in "rd_kafka_snappy_init_env"
                                            8774 *      (FUNCTION #340)
                                            8775 *
00000000                00000000 000000A8   8776 @AUTO#rd_kafka_snappy_init_env DSECT
00000000                                    8777          DS    XL168
                                            8778 *
000059EC                00000000 00005B58   8779 @CODE    CSECT
                                            8780 *
                                            8781 *
                                            8782 *
                                            8783 * ....... start of rd_kafka_snappy_free_env
                                            8784 rd_kafka_snappy_free_env ALIAS X'99846D92818692816DA295819797A86D869985*
                                                                856D8595A5'
000059EC                                    8785 @LNAME342 DS   0H
000059EC 00000018                           8786          DC    X'00000018'
000059F0 99846D9281869281                   8787          DC    C'rd_kafka_snappy_free_env'
00005A08 00                                 8788          DC    X'00'
                                            8789 rd_kafka_snappy_free_env DCCPRLG CINDEX=342,BASER=12,FRAME=176,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME342
                                                                                                                           Page  175 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8790          macro
                                            8791          dccextrn &m
                                            8792          gblc    &$dccext(1000)
                                            8793          gbla    &$dccexti
                                            8794          lcla    &i
                                            8795 &$dccext(&$dccexti+1) setc    '&m'
                                            8796 &i       seta    1
                                            8797 .loop    aif    (&i gt &$dccexti).around
                                            8798          aif    ('&$dccext(&i)' eq '&m').getout
                                            8799 &i       seta    &i+1
                                            8800          ago     .loop
                                            8801 .around  anop
                                            8802 &$dccexti seta &$dccexti+1
                                            8803          extrn  &m
                                            8804 .getout  anop
                                            8805          mend
00005A10                                    8806+$eye0161    ds    0d                                                    02-DCCCA
00005A10 C4C3C3                             8807+         dc cl3'DCC'                                                    02-DCCCA
00005A13 01                                 8808+         dc xl1'01' format one                                          02-DCCCA
00005A14 00000000                           8809+         dc a(0)                                                        02-DCCCA
00005A18 0000000000005A82                   8810+         dc ad(@PER_342)                                                02-DCCCA
00005A20 00000000000000B0                   8811+         dc ad(176)                                                     02-DCCCA
00005A28 0000000000000000                   8812+         dc ad(0)                                                       02-DCCCA
00005A30 0000000000001000                   8813+         dc ad(4096)                                                    02-DCCCA
00005A38 20                                 8814+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005A39 03                                 8815+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005A3A 03                                 8816+         dc al1(3)                                                      02-DCCCA
00005A3B 08                                 8817+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005A3C 00                                 8818+         dc bl.8'00000000'                                              02-DCCCA
00005A3D 000000                             8819+         dc al3(0)                                                      02-DCCCA
00005A40 00000000000059EC                   8820+         dc ad(@LNAME342)                                               02-DCCCA
00005A48                                    8821+         ds 0d                                                          02-DCCCA
00005A48 0000000000005A10                   8822+         dc ad($eye0161)                                                02-DCCCA
00005A50 0000000000000000                   8823+         dc ad(0)                                                       02-DCCCA
00005A58                                    8824+         ds    0d                                                       01-DCCPR
                                            8825+         entry rd_kafka_snappy_free_env                                 01-DCCPR
00005A58                                    8826+rd_kafka_snappy_free_env ds 0d                                          01-DCCPR
00005A58                                    8827+@REGION_342_1 ds 0h                                                     01-DCCPR
00005A58 EBEC D008 0024          00000008   8828+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005A5E E3E0 D088 0004          00000088   8829+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005A64 E3C0 D090 0004          00000090   8830+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005A6A B904 002E                          8831+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005A6E E3B0 C018 0004          00000018   8832+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005A74 A7EB 00B0               000000B0   8833+         aghi  14,176              increase by frame size               01-DCCPR
00005A78 E3E0 C020 0021          00000020   8834+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005A7E 4720 B020               00000020   8835+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005A82                                    8836+@PER_342 ds    0h                                                       01-DCCPR
00005A82 EBDE 2080 0024          00000080   8837+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005A88 E3C0 2090 0024          00000090   8838+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005A8E B904 00D2                          8839+         lgr   13,2                set real frame pointer               01-DCCPR
00005A92 B904 00CF                          8840+         lgr   12,15               set base reg                         01-DCCPR
                        00005A58            8841+         using @REGION_342_1,12                                         01-DCCPR
                                                                                                                           Page  176 
  Active Usings: @REGION_342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8842 * ******* End of Prologue
                                            8843 * *
                                            8844 * ***      rd_free(env->hash_table);
00005A96 E320 1000 0004          00000000   8845          LG    2,0(0,1)    ; env
00005A9C E3F0 2000 0004          00000000   8846          LG    15,0(0,2)
00005AA2 E3F0 D0A8 0024          000000A8   8847          STG   15,168(0,13)
00005AA8 4110 D0A8               000000A8   8848          LA    1,168(0,13)
00005AAC E330 C0F0 0004          00005B48   8849          LG    3,@lit_342_359 ; rd_free
00005AB2 B904 00F3                          8850          LGR   15,3
00005AB6                                    8851 @@gen_label489 DS    0H
00005AB6 05EF                               8852          BALR  14,15
00005AB8                                    8853 @@gen_label490 DS    0H
                                            8854 * ***
                                            8855 * ***      rd_free(env->scratch);
00005AB8 E3F0 2008 0004          00000008   8856          LG    15,8(0,2)
00005ABE E3F0 D0A8 0024          000000A8   8857          STG   15,168(0,13)
00005AC4 4110 D0A8               000000A8   8858          LA    1,168(0,13)
00005AC8 B904 00F3                          8859          LGR   15,3
00005ACC                                    8860 @@gen_label491 DS    0H
00005ACC 05EF                               8861          BALR  14,15
00005ACE                                    8862 @@gen_label492 DS    0H
                                            8863 * ***      rd_free(env->scratch_output);
00005ACE E3F0 2010 0004          00000010   8864          LG    15,16(0,2)
00005AD4 E3F0 D0A8 0024          000000A8   8865          STG   15,168(0,13)
00005ADA 4110 D0A8               000000A8   8866          LA    1,168(0,13)
00005ADE B904 00F3                          8867          LGR   15,3
00005AE2                                    8868 @@gen_label493 DS    0H
00005AE2 05EF                               8869          BALR  14,15
00005AE4                                    8870 @@gen_label494 DS    0H
                                            8871 * ***
                                            8872 * ***      clear_env(env);
00005AE4 E320 D0A8 0024          000000A8   8873          STG   2,168(0,13)
00005AEA 4110 D0A8               000000A8   8874          LA    1,168(0,13)
00005AEE E3F0 C0F8 0004          00005B50   8875          LG    15,@lit_342_362 ; clear_env
00005AF4                                    8876 @@gen_label495 DS    0H
00005AF4 05EF                               8877          BALR  14,15
00005AF6                                    8878 @@gen_label496 DS    0H
                                            8879 * ***   }
00005AF6                                    8880 @ret_lab_342 DS 0H
                                            8881 * * **** Start of Epilogue
                                            8882          DCCEPIL
00005AF6                                    8883+         ds 0h                                                          01-DCCEP
                                            8884+* Epilog
00005AF6 D707 D088 D088 00000088 00000088   8885+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005AFC E3D0 D080 0004          00000080   8886+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005B02 E3C0 D090 0004          00000090   8887+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005B08 E3B0 C018 0004          00000018   8888+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005B0E E3C0 B010 0021          00000010   8889+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005B14 E3E0 D008 0004          00000008   8890+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005B1A EB1C D020 0004          00000020   8891+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005B20 078E                               8892+         bcr 8,14                if same dsab, just return              01-DCCEP
00005B22 E3F0 D010 0024          00000010   8893+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page  177 
  Active Usings: @REGION_342_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005B28 E300 D018 0024          00000018   8894+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005B2E E3F0 D090 0004          00000090   8895+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005B34 E3F0 F018 0004          00000018   8896+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005B3A 47F0 F040               00000040   8897+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8898+* End of Epilog
                                            8899 * * **** End of Epilogue
00005B40                                    8900          DS    0D
00005B40 000000B0                           8901 @FRAMESIZE_342 DC F'176'
00005B44 00000000
00005B48 00000000000001C0                   8902 @lit_342_359 DC AD(rd_free)
00005B50 00000000000056B8                   8903 @lit_342_362 DC AD(clear_env)
                                            8904          DROP  12
                                            8905 *
                                            8906 *   DSECT for automatic variables in "rd_kafka_snappy_free_env"
                                            8907 *      (FUNCTION #342)
                                            8908 *
00000000                00000000 000000A8   8909 @AUTO#rd_kafka_snappy_free_env DSECT
00000000                                    8910          DS    XL168
                                            8911 *
00005B58                00000000 00005B58   8912 @CODE    CSECT
                                            8913 @@STATIC ALIAS X'7CA295819797A850'
                                            8914 @@STATIC DXD   219D
                                            8915 *
                                            8916 *  Non-Re-Entrant Data Section
                                            8917 *
00005B58                00005B58 00000F36   8918 @DATA    CSECT
                                            8919 @DATA    RMODE ANY
                                            8920 @DATA    AMODE ANY
00005B58 99846D8381939396                   8921 @@T498   DC    X'99846D838193939683'               rd.calloc
00005B61 00                                 8922          DC    1X'00'
00005B62 99846D9481939396                   8923 @@T49C   DC    X'99846D948193939683'               rd.malloc
00005B6B 00                                 8924          DC    1X'00'
00005B6C 99846D9985819393                   8925 @@T4A1   DC    X'99846D99858193939683'             rd.realloc
00005B76 0000                               8926          DC    2X'00'
00005B78 99846DA2A39984A4                   8927 @@T4A7   DC    X'99846DA2A39984A497'               rd.strdup
00005B81 00                                 8928          DC    1X'00'
00005B82 99846DA2A3999584                   8929 @@T4AC   DC    X'99846DA2A3999584A497'             rd.strndup
00005B8C 0000                               8930          DC    2X'00'
00005B8E 99846D9985868395                   8931 @@T4B4   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00005B9C 00000000                           8932          DC    4X'00'
00005BA0 00000000                           8933 @@T663   DC    4X'00'
00005BA4 0000001A00000000                   8934          DC    X'0000001A000000000000002200000000' ................
00005BB4 00000024                           8935          DC    X'00000024'                         ....
00005BB8 99846D9281869281                   8936 @@T686   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00005BC8 98                                 8937          DC    X'98'                               q
00005BC9 00                                 8938          DC    1X'00'
00005BCA 99846D9281869281                   8939 @@T70D   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00005BDA 96A8F0                             8940          DC    X'96A8F0'                           oy0
00005BDD 00                                 8941          DC    1X'00'
00005BDE 99846D9281869281                   8942 @@T78E   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005BEE 856D8485A2A39996                   8943          DC    X'856D8485A2A39996A8F0'             e.destroy0
00005BF8 0000                               8944          DC    2X'00'
                                                                                                                           Page  178 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005BFA 99846D9281869281                   8945 @@T796   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005C0A 856D8485936DA296                   8946          DC    X'856D8485936DA296A4998385'         e.del.source
00005C16 0000                               8947          DC    2X'00'
00005C18 99846D9281869281                   8948 @@T79D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005C28 856D8485936DA296                   8949          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00005C38 A49995                             8950          DC    X'A49995'                           urn
00005C3B 00                                 8951          DC    1X'00'
00005C3C 99846D9281869281                   8952 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005C4C 856DA39989878785                   8953          DC    X'856DA3998987878599'               e.trigger
00005C55 00                                 8954          DC    1X'00'
00005C56 99846D9281869281                   8955 @@T7A9   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005C66 856D8485A2A39996                   8956          DC    X'856D8485A2A39996A8'               e.destroy
00005C6F 00                                 8957          DC    1X'00'
00005C70 99846D9281869281                   8958 @@T7AE   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005C80 856D8489A2818293                   8959          DC    X'856D8489A281829385'               e.disable
00005C89 00                                 8960          DC    1X'00'
00005C8A 99846DA394978182                   8961 @@T7CE   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
00005C9A F0                                 8962          DC    X'F0'                               0
00005C9B 00                                 8963          DC    1X'00'
00005C9C 99846D9281869281                   8964 @@T802   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
00005CAC 81A385                             8965          DC    X'81A385'                           ate
00005CAF 00                                 8966          DC    1X'00'
00005CB0 99846D9281869281                   8967 @@T823   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00005CC0 819389A9856D8199                   8968          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00005CCE 0000                               8969          DC    2X'00'
00005CD0 99846D9281869281                   8970 @@T860   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00005CE0 6D899589A3                         8971          DC    X'6D899589A3'                       .init
00005CE5 00                                 8972          DC    1X'00'
00005CE6 99846D9281869281                   8973 @@TA30   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
00005CF6 87A26DA2A482                       8974          DC    X'87A26DA2A482'                     gs.sub
00005CFC 00000000                           8975          DC    4X'00'
00005D00 00000080                           8976 @@TA87   DC    X'00000080'                         ....
00005D04 A2928997                           8977 @@TA95   DC    X'A2928997'                         skip
00005D08 0000                               8978          DC    2X'00'
00005D0A 819797859584                       8979 @@TA9E   DC    X'819797859584'                     append
00005D10 0000                               8980          DC    2X'00'
00005D12 8995839985948595                   8981 @@TAAD   DC    X'8995839985948595A381936D839697A8' incremental.copy
00005D22 0000                               8982          DC    2X'00'
00005D24 A69989A385996D81                   8983 @@TAB7   DC    X'A69989A385996D8197978595846D8699' writer.append.fr
00005D34 96946DA2859386                     8984          DC    X'96946DA2859386'                   om.self
00005D3B 00                                 8985          DC    1X'00'
00005D3C A69989A385996D81                   8986 @@TABE   DC    X'A69989A385996D819797859584'       writer.append
00005D49 00                                 8987          DC    1X'00'
00005D4A 859489A36D9389A3                   8988 @@TAD7   DC    X'859489A36D9389A385998193'         emit.literal
00005D56 0000                               8989          DC    2X'00'
00005D58 859489A36D839697                   8990 @@TADC   DC    X'859489A36D839697A86D9385A2A26DA3' emit.copy.less.t
00005D68 888195F6F4                         8991          DC    X'888195F6F4'                       han64
00005D6D 00                                 8992          DC    1X'00'
00005D6E 8785A36D8881A288                   8993 @@TAEC   DC    X'8785A36D8881A2886DA381829385'     get.hash.table
00005D7C 0000                               8994          DC    2X'00'
00005D7E 868995846D9481A3                   8995 @@TAF2   DC    X'868995846D9481A383886D93859587A3' find.match.lengt
00005D8E 88                                 8996          DC    X'88'                               h
                                                                                                                           Page  179 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005D8F 00                                 8997          DC    1X'00'
00005D90 8785A36DA4F3F26D                   8998 @@TAFB   DC    X'8785A36DA4F3F26D81A36D968686A285' get.u32.at.offse
00005DA0 A3                                 8999          DC    X'A3'                               t
00005DA1 00                                 9000          DC    1X'00'
00005DA2 839694979985A2A2                   9001 @@TB03   DC    X'839694979985A2A26D86998187948595' compress.fragmen
00005DB2 A3                                 9002          DC    X'A3'                               t
00005DB3 00                                 9003          DC    1X'00'
00005DB4 00000000                           9004 wordmask DC    4X'00'
00005DB8 000000FF0000FFFF                   9005          DC    X'000000FF0000FFFF00FFFFFFFFFFFFFF' ................
00005DC8 0001080410012001                   9006 char_table DC    X'00010804100120010002080510022002' ................
00005DD8 0003080610032003                   9007          DC    X'00030806100320030004080710042004' ................
00005DE8 0005080810052005                   9008          DC    X'00050808100520050006080910062006' ................
00005DF8 0007080A10072007                   9009          DC    X'0007080A100720070008080B10082008' ................
00005E08 0009090410092009                   9010          DC    X'0009090410092009000A0905100A200A' ................
00005E18 000B0906100B200B                   9011          DC    X'000B0906100B200B000C0907100C200C' ................
00005E28 000D0908100D200D                   9012          DC    X'000D0908100D200D000E0909100E200E' ................
00005E38 000F090A100F200F                   9013          DC    X'000F090A100F200F0010090B10102010' ................
00005E48 00110A0410112011                   9014          DC    X'00110A041011201100120A0510122012' ................
00005E58 00130A0610132013                   9015          DC    X'00130A061013201300140A0710142014' ................
00005E68 00150A0810152015                   9016          DC    X'00150A081015201500160A0910162016' ................
00005E78 00170A0A10172017                   9017          DC    X'00170A0A1017201700180A0B10182018' ................
00005E88 00190B0410192019                   9018          DC    X'00190B0410192019001A0B05101A201A' ................
00005E98 001B0B06101B201B                   9019          DC    X'001B0B06101B201B001C0B07101C201C' ................
00005EA8 001D0B08101D201D                   9020          DC    X'001D0B08101D201D001E0B09101E201E' ................
00005EB8 001F0B0A101F201F                   9021          DC    X'001F0B0A101F201F00200B0B10202020' ................
00005EC8 00210C0410212021                   9022          DC    X'00210C041021202100220C0510222022' ................
00005ED8 00230C0610232023                   9023          DC    X'00230C061023202300240C0710242024' ................
00005EE8 00250C0810252025                   9024          DC    X'00250C081025202500260C0910262026' ................
00005EF8 00270C0A10272027                   9025          DC    X'00270C0A1027202700280C0B10282028' ................
00005F08 00290D0410292029                   9026          DC    X'00290D0410292029002A0D05102A202A' ................
00005F18 002B0D06102B202B                   9027          DC    X'002B0D06102B202B002C0D07102C202C' ................
00005F28 002D0D08102D202D                   9028          DC    X'002D0D08102D202D002E0D09102E202E' ................
00005F38 002F0D0A102F202F                   9029          DC    X'002F0D0A102F202F00300D0B10302030' ................
00005F48 00310E0410312031                   9030          DC    X'00310E041031203100320E0510322032' ................
00005F58 00330E0610332033                   9031          DC    X'00330E061033203300340E0710342034' ................
00005F68 00350E0810352035                   9032          DC    X'00350E081035203500360E0910362036' ................
00005F78 00370E0A10372037                   9033          DC    X'00370E0A1037203700380E0B10382038' ................
00005F88 00390F0410392039                   9034          DC    X'00390F0410392039003A0F05103A203A' ................
00005F98 003B0F06103B203B                   9035          DC    X'003B0F06103B203B003C0F07103C203C' ................
00005FA8 08010F08103D203D                   9036          DC    X'08010F08103D203D10010F09103E203E' ................
00005FB8 18010F0A103F203F                   9037          DC    X'18010F0A103F203F20010F0B10402040' ................
00005FC8 998581846DA49583                   9038 @@TB22   DC    X'998581846DA495839694979985A2A285' read.uncompresse
00005FD8 846D93859587A388                   9039          DC    X'846D93859587A388'                 d.length
00005FE0 0000                               9040          DC    2X'00'
00005FE2 8485839694979985                   9041 @@TB2E   DC    X'8485839694979985A2A26D8193936DA3' decompress.all.t
00005FF2 8187A2                             9042          DC    X'8187A2'                           ags
00005FF5 00                                 9043          DC    1X'00'
00005FF6 9985868993936DA3                   9044 @@TB39   DC    X'9985868993936DA38187'             refill.tag
00006000 0000                               9045          DC    2X'00'
00006002 A2956D8396949799                   9046 @@TB59   DC    X'A2956D839694979985A2A2'           sn.compress
0000600D 00                                 9047          DC    1X'00'
0000600E                                    9048 @strings@ DS   0H
                                                                                                                           Page  180 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000600E C37AE081A2879281                   9049          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000601E 849281869281E0A2                   9050          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000602E 9700C37AE081A287                   9051          DC    X'9700C37AE081A2879281869281E09389' p.C..asgkafka.li
0000603E 8299849281869281                   9052          DC    X'8299849281869281E0A29983E0A29581' brdkafka.src.sna
0000604E 9797A84B83005A4D                   9053          DC    X'9797A84B83005A4D5A4D4D4DA495A289' ppy.c.......unsi
0000605E 879585845DA2606E                   9054          DC    X'879585845DA2606E83A4999686865D40' gned.s..curoff..
0000606E 4C7E404D4DA289A9                   9055          DC    X'4C7E404D4DA289A9856DA35D89A5606E' .....size.t.iv..
0000607E 8996A56D9385955D                   9056          DC    X'8996A56D9385955D5D5D00005A4D5A4D' iov.len.........
0000608E 4D4DA28987958584                   9057          DC    X'4D4DA289879585845DA2606E83A499A5' ..signed.s..curv
0000609E 85835D404C404DA2                   9058          DC    X'85835D404C404DA2606E8996A5938595' ec.....s..iovlen
000060AE 5D5D5D005A4D5A4D                   9059          DC    X'5D5D5D005A4D5A4D4D9385955D406E40' .........len....
000060BE 4DF05D5D5D005A4D                   9060          DC    X'4DF05D5D5D005A4D5A4D4D96975D404C' .0.........op...
000060CE 7E404DA6606E9697                   9061          DC    X'7E404DA6606E96976D93899489A35D5D' ...w..op.limit..
000060DE 5D005A4D5A4D8396                   9062          DC    X'5D005A4D5A4D8396A495A3406E7E40F1' ......count....1
000060EE 5D5D00005A4D5A4D                   9063          DC    X'5D5D00005A4D5A4D8396A495A3404C7E' ........count...
000060FE 40F45D5D00005A4D                   9064          DC    X'40F45D5D00005A4D5A4D4D9385955D40' .4.........len..
0000610E 4C7E404DF6F45D5D                   9065          DC    X'4C7E404DF6F45D5D5D005A4D5A4D4D93' ....64.........l
0000611E 85955D406E7E404D                   9066          DC    X'85955D406E7E404DF45D5D5D00005A4D' en......4.......
0000612E 5A4D4D968686A285                   9067          DC    X'5A4D4D968686A285A35D404C404DF6F5' ...offset.....65
0000613E F5F3F65D5D5D0000                   9068          DC    X'F5F3F65D5D5D00005A4D5A4D9385956D' 536.........len.
0000614E 948995A4A26DF440                   9069          DC    X'948995A4A26DF4404C40F85D5D005A4D' minus.4...8.....
0000615E 5A4D4DF05D407E7E                   9070          DC    X'5A4D4DF05D407E7E404D88A3A289A985' ...0......htsize
0000616E 4050404D88A3A289                   9071          DC    X'4050404D88A3A289A985406040F15D5D' ....htsize...1..
0000617E 5D5D00005A4D5A4D                   9072          DC    X'5D5D00005A4D5A4D4D88A3A289A9855D' .........htsize.
0000618E 404C7E404D4DF1E4                   9073          DC    X'404C7E404D4DF1E4404C4C40F1F45D5D' ......1U....14..
0000619E 5D5D00005A4D5A4D                   9074          DC    X'5D5D00005A4D5A4D4DA2F26D93899489' .........s2.limi
000061AE A35D406E7E404DA2                   9075          DC    X'A35D406E7E404DA2F25D5D5D00005A4D' t......s2.......
000061BE 5A4D4D968686A285                   9076          DC    X'5A4D4D968686A285A35D406E7E404DF0' ...offset......0
000061CE 5D5D5D005A4D5A4D                   9077          DC    X'5D5D5D005A4D5A4D4D968686A285A35D' .........offset.
000061DE 404C7E404DF45D5D                   9078          DC    X'404C7E404DF45D5D5D005A4D5A4D4D89' .....4.........i
000061EE 9597A4A36DA289A9                   9079          DC    X'9597A4A36DA289A9855D404C7E404D4D' nput.size.......
000061FE F1404C4C40F1F65D                   9080          DC    X'F1404C4C40F1F65D5D5D5D005A4D5A4D' 1....16.........
0000620E 4DA3818293856DA2                   9081          DC    X'4DA3818293856DA289A9854050404DA3' .table.size....t
0000621E 818293856DA289A9                   9082          DC    X'818293856DA289A985406040F15D5D40' able.size...1...
0000622E 7E7E404DF05D5D5D                   9083          DC    X'7E7E404DF05D5D5D00005A4D5A4D4DF0' ....0..........0
0000623E A786868686868686                   9084          DC    X'A78686868686868686E4406E6E40A288' xffffffffU....sh
0000624E 8986A35D407E7E40                   9085          DC    X'8986A35D407E7E404DA3818293856DA2' ift......table.s
0000625E 89A985406040F15D                   9086          DC    X'89A985406040F15D5D5D00005A4D5A4D' ize...1.........
0000626E 4D9585A7A36D8594                   9087          DC    X'4D9585A7A36D859489A35D404C404D89' .next.emit.....i
0000627E 975D5D5D00005A4D                   9088          DC    X'975D5D5D00005A4D5A4D4D88A581935D' p..........hval.
0000628E 407E7E404D8881A2                   9089          DC    X'407E7E404D8881A2884D89976B40A288' .....hash.ip..sh
0000629E 8986A35D5D5D5D00                   9090          DC    X'8986A35D5D5D5D005A4D5A4D4D838195' ift..........can
000062AE 84898481A3855D40                   9091          DC    X'84898481A3855D406E7E404D8281A285' didate......base
000062BE 89975D5D5D005A4D                   9092          DC    X'89975D5D5D005A4D5A4D4D8381958489' ip.........candi
000062CE 8481A3855D404C40                   9093          DC    X'8481A3855D404C404D89975D5D5D0000' date.....ip.....
000062DE 5A4D5A4D4D9585A7                   9094          DC    X'5A4D5A4D4D9585A7A36D859489A3404E' .....next.emit..
000062EE 40F1F65D404C7E40                   9095          DC    X'40F1F65D404C7E404D89976D8595845D' .16......ip.end.
000062FE 5D5D00005A4D5A4D                   9096          DC    X'5D5D00005A4D5A4D4DF05D407E7E404D' .........0......
0000630E 6D6D948594839497                   9097          DC    X'6D6D9485948394974D8281A2856B8381' ..memcmp.base.ca
0000631E 9584898481A3856B                   9098          DC    X'9584898481A3856B9481A3838885845D' ndidate.matched.
0000632E 5D5D5D005A4D5A4D                   9099          DC    X'5D5D5D005A4D5A4D84606E8997407E7E' ........d..ip...
0000633E 404D4DA596898440                   9100          DC    X'404D4DA5968984405C5DF05D5D5D0000' ...void...0.....
                                                                                                                           Page  181 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000634E 5A4D5A4D4D9389A3                   9101          DC    X'5A4D5A4D4D9389A3859981936D938595' .....literal.len
0000635E 87A3885D404C404D                   9102          DC    X'87A3885D404C404DF6F15D5D5D005A4D' gth.....61......
0000636E 5A4D4D89975D404C                   9103          DC    X'5A4D4D89975D404C404D84606E89976D' ...ip.....d..ip.
0000637E 93899489A35D5D5D                   9104          DC    X'93899489A35D5D5D00005A4D5A4D4D95' limit..........n
0000638E 85858485845D404C                   9105          DC    X'85858485845D404C7E404DA289A98596' eeded......sizeo
0000639E 864D84606EA28399                   9106          DC    X'864D84606EA2839981A383885D5D5D5D' f.d..scratch....
000063AE 00005A4D5A4D4D95                   9107          DC    X'00005A4D5A4D4D9582A4865D407E7E40' .......nbuf.....
000063BE 4D9585858485845D                   9108          DC    X'4D9585858485845D5D5D00005A4D5A4D' .needed.........
000063CE 4D82A8A385A26D99                   9109          DC    X'4D82A8A385A26D998581845D407E7E40' .bytes.read.....
000063DE 4D95A4946DA3966D                   9110          DC    X'4D95A4946DA3966D998581845D5D5D00' .num.to.read....
000063EE C995A58193898440                   9111          DC    X'C995A58193898440A295819797A86091' Invalid.snappy.j
000063FE 81A581408388A495                   9112          DC    X'81A581408388A495924093859587A388' ava.chunk.length
0000640E 406C84406E406CA9                   9113          DC    X'406C84406E406CA9844081A581899381' ..d....zd.availa
0000641E 8293854082A8A385                   9114          DC    X'8293854082A8A385A200C68189938584' ble.bytes.Failed
0000642E 40A396408785A340                   9115          DC    X'40A396408785A34093859587A3884096' .to.get.length.o
0000643E 86404DA295819797                   9116          DC    X'86404DA295819797A8609181A5814086' f..snappy.java.f
0000644E 99819485845D40E2                   9117          DC    X'99819485845D40E295819797A8408396' ramed..Snappy.co
0000645E 94979985A2A28584                   9118          DC    X'94979985A2A28584409781A893968184' mpressed.payload
0000646E 404D83938595406C                   9119          DC    X'404D83938595406C845D0000C6818993' ..clen..d...Fail
0000647E 858440A396408485                   9120          DC    X'858440A396408485839694979985A2A2' ed.to.decompress
0000648E 40E295819797A860                   9121          DC    X'40E295819797A8609181A58140869981' .Snappy.java.fra
0000649E 948584409781A893                   9122          DC    X'948584409781A89396818440968640A2' med.payload.of.s
000064AE 89A985406C847A40                   9123          DC    X'89A985406C847A406CA200006CA9A440' ize..d...s...zu.
000064BE A399818993899587                   9124          DC    X'A3998189938995874082A8A385A24089' trailing.bytes.i
000064CE 9540E295819797A8                   9125          DC    X'9540E295819797A8609181A581408699' n.Snappy.java.fr
000064DE 8194858440839694                   9126          DC    X'8194858440839694979985A2A2858440' amed.compressed.
000064EE 8481A3810000C594                   9127          DC    X'8481A3810000C59497A3A840E2958197' data..Empty.Snap
000064FE 97A8609181A58140                   9128          DC    X'97A8609181A581408699819485844084' py.java.framed.d
0000650E 81A38100C6818993                   9129          DC    X'81A38100C6818993858440A396408193' ata.Failed.to.al
0000651E 93968381A3854094                   9130          DC    X'93968381A385409485949699A8404D6C' locate.memory...
0000652E A9845D4086969940                   9131          DC    X'A9845D4086969940A495839694979985' zd..for.uncompre
0000653E A2A2858440E29581                   9132          DC    X'A2A2858440E295819797A8408481A381' ssed.Snappy.data
0000654E 7A406CA20000D799                   9133          DC    X'7A406CA20000D7999684A4838500C685' ...s..Produce.Fe
0000655E A3838800D68686A2                   9134          DC    X'A3838800D68686A285A30000D485A381' tch.Offset..Meta
0000656E 8481A3810000D385                   9135          DC    X'8481A3810000D38581848599C19584C9' data..LeaderAndI
0000657E A2990000E2A39697                   9136          DC    X'A2990000E2A39697D985979389838100' sr..StopReplica.
0000658E E4978481A385D485                   9137          DC    X'E4978481A385D485A3818481A3810000' UpdateMetadata..
0000659E C39695A399969393                   9138          DC    X'C39695A3999693938584E288A4A38496' ControlledShutdo
000065AE A6950000D68686A2                   9139          DC    X'A6950000D68686A285A3C396949489A3' wn..OffsetCommit
000065BE 0000D68686A285A3                   9140          DC    X'0000D68686A285A3C685A3838800C689' ..OffsetFetch.Fi
000065CE 9584C39696998489                   9141          DC    X'9584C396969984899581A3969900D196' ndCoordinator.Jo
000065DE 8995C79996A49700                   9142          DC    X'8995C79996A49700C8858199A3828581' inGroup.Heartbea
000065EE A300D38581A585C7                   9143          DC    X'A300D38581A585C79996A4970000E2A8' t.LeaveGroup..Sy
000065FE 9583C79996A49700                   9144          DC    X'9583C79996A49700C485A28399898285' ncGroup.Describe
0000660E C79996A497A20000                   9145          DC    X'C79996A497A20000D389A2A3C79996A4' Groups..ListGrou
0000661E 97A20000E281A293                   9146          DC    X'97A20000E281A293C8819584A2888192' ps..SaslHandshak
0000662E 8500C19789E58599                   9147          DC    X'8500C19789E58599A28996950000C399' e.ApiVersion..Cr
0000663E 8581A385E3969789                   9148          DC    X'8581A385E396978983A20000C4859385' eateTopics..Dele
0000664E A385E396978983A2                   9149          DC    X'A385E396978983A20000C4859385A385' teTopics..Delete
0000665E D98583969984A200                   9150          DC    X'D98583969984A200C99589A3D7999684' Records.InitProd
0000666E A4838599C9840000                   9151          DC    X'A4838599C9840000D68686A285A3C696' ucerId..OffsetFo
0000667E 99D38581848599C5                   9152          DC    X'99D38581848599C5979683880000C184' rLeaderEpoch..Ad
                                                                                                                           Page  182 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000668E 84D78199A389A389                   9153          DC    X'84D78199A389A3899695A2E396E3A795' dPartitionsToTxn
0000669E 0000C18484D68686                   9154          DC    X'0000C18484D68686A285A3A2E396E3A7' ..AddOffsetsToTx
000066AE 9500C59584E3A795                   9155          DC    X'9500C59584E3A7950000E69989A385E3' n.EndTxn..WriteT
000066BE A795D48199928599                   9156          DC    X'A795D48199928599A200E3A795D68686' xnMarkers.TxnOff
000066CE A285A3C396949489                   9157          DC    X'A285A3C396949489A300C485A2839989' setCommit.Descri
000066DE 8285C18393A20000                   9158          DC    X'8285C18393A20000C3998581A385C183' beAcls..CreateAc
000066EE 93A20000C4859385                   9159          DC    X'93A20000C4859385A385C18393A20000' ls..DeleteAcls..
000066FE C485A28399898285                   9160          DC    X'C485A28399898285C39695868987A200' DescribeConfigs.
0000670E C193A38599C39695                   9161          DC    X'C193A38599C39695868987A20000C193' AlterConfigs..Al
0000671E A38599D985979389                   9162          DC    X'A38599D9859793898381D39687C48999' terReplicaLogDir
0000672E A200C485A2839989                   9163          DC    X'A200C485A28399898285D39687C48999' s.DescribeLogDir
0000673E A200E281A293C1A4                   9164          DC    X'A200E281A293C1A4A3888595A3898381' s.SaslAuthentica
0000674E A3850000C3998581                   9165          DC    X'A3850000C3998581A385D78199A389A3' te..CreatePartit
0000675E 899695A20000C399                   9166          DC    X'899695A20000C3998581A385C4859385' ions..CreateDele
0000676E 8781A3899695E396                   9167          DC    X'8781A3899695E39692859500D9859585' gationToken.Rene
0000677E A6C48593858781A3                   9168          DC    X'A6C48593858781A3899695E396928595' wDelegationToken
0000678E 0000C5A797899985                   9169          DC    X'0000C5A797899985C48593858781A389' ..ExpireDelegati
0000679E 9695E39692859500                   9170          DC    X'9695E39692859500C485A28399898285' onToken.Describe
000067AE C48593858781A389                   9171          DC    X'C48593858781A3899695E39692859500' DelegationToken.
000067BE C4859385A385C799                   9172          DC    X'C4859385A385C79996A497A20000C593' DeleteGroups..El
000067CE 8583A3D385818485                   9173          DC    X'8583A3D38581848599A2D98598A485A2' ectLeadersReques
000067DE A300C99583998594                   9174          DC    X'A300C995839985948595A38193C193A3' t.IncrementalAlt
000067EE 8599C39695868987                   9175          DC    X'8599C39695868987A2D98598A485A2A3' erConfigsRequest
000067FE 0000C193A38599D7                   9176          DC    X'0000C193A38599D78199A389A3899695' ..AlterPartition
0000680E D98581A2A2898795                   9177          DC    X'D98581A2A2898795948595A3A2D98598' ReassignmentsReq
0000681E A485A2A30000D389                   9178          DC    X'A485A2A30000D389A2A3D78199A389A3' uest..ListPartit
0000682E 899695D98581A2A2                   9179          DC    X'899695D98581A2A2898795948595A3A2' ionReassignments
0000683E D98598A485A2A300                   9180          DC    X'D98598A485A2A300D68686A285A3C485' Request.OffsetDe
0000684E 9385A385D98598A4                   9181          DC    X'9385A385D98598A485A2A300C485A283' leteRequest.Desc
0000685E 99898285C3938985                   9182          DC    X'99898285C393898595A3D8A496A381A2' ribeClientQuotas
0000686E D98598A485A2A300                   9183          DC    X'D98598A485A2A300C193A38599C39389' Request.AlterCli
0000687E 8595A3D8A496A381                   9184          DC    X'8595A3D8A496A381A2D98598A485A2A3' entQuotasRequest
0000688E 0000C485A2839989                   9185          DC    X'0000C485A28399898285E4A28599E283' ..DescribeUserSc
0000689E 998194C399858485                   9186          DC    X'998194C39985848595A3898193A2D985' ramCredentialsRe
000068AE 98A485A2A300C193                   9187          DC    X'98A485A2A300C193A38599E4A28599E2' quest.AlterUserS
000068BE 83998194C3998584                   9188          DC    X'83998194C39985848595A3898193A2D9' cramCredentialsR
000068CE 8598A485A2A30000                   9189          DC    X'8598A485A2A30000E596A385D98598A4' equest..VoteRequ
000068DE 85A2A300C2858789                   9190          DC    X'85A2A300C285878995D8A49699A494C5' est.BeginQuorumE
000068EE 97968388D98598A4                   9191          DC    X'97968388D98598A485A2A300C59584D8' pochRequest.EndQ
000068FE A49699A494C59796                   9192          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
0000690E A300C485A2839989                   9193          DC    X'A300C485A28399898285D8A49699A494' t.DescribeQuorum
0000691E D98598A485A2A300                   9194          DC    X'D98598A485A2A300C193A38599C9A299' Request.AlterIsr
0000692E D98598A485A2A300                   9195          DC    X'D98598A485A2A300E4978481A385C685' Request.UpdateFe
0000693E 81A3A49985A2D985                   9196          DC    X'81A3A49985A2D98598A485A2A300C595' aturesRequest.En
0000694E A58593969785D985                   9197          DC    X'A58593969785D98598A485A2A3009596' velopeRequest.no
0000695E 9585000087A98997                   9198          DC    X'9585000087A989970000A295819797A8' ne..gzip..snappy
0000696E 000093A9F400A9A2                   9199          DC    X'000093A9F400A9A2A384000089958885' ..lz4.zstd..inhe
0000697E 9989A30083969586                   9200          DC    X'9989A300839695868987A49985840000' rit.configured..
0000698E 9385819995858400                   9201          DC    X'93858199958584008995A38599958193' learned.internal
0000699E 0000939687898381                   9202          DC    X'00009396878983819300C99589A30000' ..logical.Init..
000069AE E3859994899581A3                   9203          DC    X'E3859994899581A38500C681A38193C5' Terminate.FatalE
000069BE 999996990000D985                   9204          DC    X'999996990000D98598A485A2A3D7C9C4' rror..RequestPID
                                                                                                                           Page  183 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000069CE 0000E68189A3E399                   9205          DC    X'0000E68189A3E3998195A2979699A300' ..WaitTransport.
000069DE E68189A3D7C9C400                   9206          DC    X'E68189A3D7C9C400C1A2A28987958584' WaitPID.Assigned
000069EE 0000C499818995D9                   9207          DC    X'0000C499818995D985A285A30000C499' ..DrainReset..Dr
000069FE 818995C2A4949700                   9208          DC    X'818995C2A4949700D9858184A8D596A3' ainBump.ReadyNot
00006A0E C18392858400D985                   9209          DC    X'C18392858400D9858184A800C995E399' Acked.Ready.InTr
00006A1E 8195A28183A38996                   9210          DC    X'8195A28183A389969500C285878995C3' ansaction.BeginC
00006A2E 96949489A300C396                   9211          DC    X'96949489A300C396949489A3A3899587' ommit.Committing
00006A3E E3998195A28183A3                   9212          DC    X'E3998195A28183A389969500C3969494' Transaction.Comm
00006A4E 89A3D596A3C18392                   9213          DC    X'89A3D596A3C1839285840000C1829699' itNotAcked..Abor
00006A5E A3899587E3998195                   9214          DC    X'A3899587E3998195A28183A389969500' tingTransaction.
00006A6E C1829699A38584D5                   9215          DC    X'C1829699A38584D596A3C18392858400' AbortedNotAcked.
00006A7E C1829699A3818293                   9216          DC    X'C1829699A381829385C5999996990000' AbortableError..
                                            9217 *
                                            9218 *
                                            9219 *   Re-entrant Data Initialization Section
                                            9220 *
                                            9221 @@INIT@  ALIAS C'@snappy:'
00006A90                00006A90 00001040   9222 @@INIT@  CSECT
                                            9223 @@INIT@  AMODE ANY
                                            9224 @@INIT@  RMODE ANY
00006A90 05                                 9225          DC    XL1'5'
00006A91 000000                             9226          DC    AL3(0)
00006A94 00000120                           9227          DC    AL4(288)
00006A98 00000000                           9228          DC    4X'00'
00006A9C 00000000                           9229          DC    Q(@@STATIC)
00006AA0 00000000                           9230          DC    X'00000000'
00006AA4 00000001                           9231          DC    X'00000001'
00006AA8 00000000                           9232          DC    X'00000000'
00006AAC 000000FF                           9233          DC    X'000000FF'
00006AB0 0102039C09867F97                   9234          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00006AC0 1112139D85088718                   9235          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00006AD0 818283840A171B88                   9236          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00006AE0 9116939495960498                   9237          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00006AF0 A0E2E4E0E1E3E5E7                   9238          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00006B00 E9EAEBE8EDEEEFEC                   9239          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00006B10 2FC2C4C0C1C3C5C7                   9240          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00006B20 C9CACBC8CDCECFCC                   9241          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00006B30 6162636465666768                   9242          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00006B40 6A6B6C6D6E6F7071                   9243          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00006B50 7E73747576777879                   9244          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00006B60 A3A5B7A9A7B6BCBD                   9245          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00006B70 4142434445464748                   9246          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00006B80 4A4B4C4D4E4F5051                   9247          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00006B90 F753545556575859                   9248          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00006BA0 3132333435363738                   9249          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            9250 *
00006BB0 05                                 9251          DC    XL1'5'
00006BB1 000000                             9252          DC    AL3(0)
00006BB4 000001E0                           9253          DC    AL4(480)
00006BB8 00000000                           9254          DC    4X'00'
00006BBC 00000000                           9255          DC    Q(@@STATIC)
00006BC0 00000000                           9256          DC    X'00000000'
                                                                                                                           Page  184 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006BC4 00000101                           9257          DC    X'00000101'
00006BC8 00000000                           9258          DC    X'00000000'
00006BCC 000000A0                           9259          DC    X'000000A0'
00006BD0 010203372D2E2F16                   9260          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00006BE0 1112133C3D322618                   9261          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00006BF0 5A7F7B5B6C507D4D                   9262          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00006C00 F1F2F3F4F5F6F7F8                   9263          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00006C10 C1C2C3C4C5C6C7C8                   9264          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00006C20 D8D9E2E3E4E5E6E7                   9265          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00006C30 8182838485868788                   9266          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00006C40 9899A2A3A4A5A6A7                   9267          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00006C50 2122232425061728                   9268          DC    X'2122232425061728292A2B2C090A1B30' ................
00006C60 311A333435360838                   9269          DC    X'311A333435360838393A3B04143EFF80' ................
                                            9270 *
00006C70 05                                 9271          DC    XL1'5'
00006C71 000000                             9272          DC    AL3(0)
00006C74 00000208                           9273          DC    AL4(520)
00006C78 00000000                           9274          DC    4X'00'
00006C7C 00000000                           9275          DC    Q(@@STATIC)
00006C80 00000000                           9276          DC    X'00000000'
00006C84 000001C0                           9277          DC    X'000001C0'
00006C88 00000000                           9278          DC    X'00000000'
00006C8C 00000001                           9279          DC    X'00000001'
00006C90 8A40404040404040                   9280          DC    X'8A40404040404040'                 ........
                                            9281 *
00006C98 05                                 9282          DC    XL1'5'
00006C99 000000                             9283          DC    AL3(0)
00006C9C 00000230                           9284          DC    AL4(560)
00006CA0 00000000                           9285          DC    4X'00'
00006CA4 00000000                           9286          DC    Q(@@STATIC)
00006CA8 00000000                           9287          DC    X'00000000'
00006CAC 000001E0                           9288          DC    X'000001E0'
00006CB0 00000000                           9289          DC    X'00000000'
00006CB4 00000001                           9290          DC    X'00000001'
00006CB8 8B40404040404040                   9291          DC    X'8B40404040404040'                 ........
                                            9292 *
00006CC0 0D                                 9293          DC    XL1'D'
00006CC1 000000                             9294          DC    AL3(0)
00006CC4 00000258                           9295          DC    AL4(600)
00006CC8 00000000                           9296          DC    4X'00'
00006CCC 00000000                           9297          DC    Q(@@STATIC)
00006CD0 00000000                           9298          DC    X'00000000'
00006CD4 00000220                           9299          DC    X'00000220'
00006CD8 0000000000005B58                   9300          DC    ADL8(@DATA)
00006CE0 00000000                           9301          DC    X'00000000'
00006CE4 000009FC                           9302          DC    X'000009FC'
                                            9303 *
00006CE8 0D                                 9304          DC    XL1'D'
00006CE9 000000                             9305          DC    AL3(0)
00006CEC 00000280                           9306          DC    AL4(640)
00006CF0 00000000                           9307          DC    4X'00'
00006CF4 00000000                           9308          DC    Q(@@STATIC)
                                                                                                                           Page  185 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006CF8 00000000                           9309          DC    X'00000000'
00006CFC 00000228                           9310          DC    X'00000228'
00006D00 0000000000005B58                   9311          DC    ADL8(@DATA)
00006D08 00000000                           9312          DC    X'00000000'
00006D0C 00000A04                           9313          DC    X'00000A04'
                                            9314 *
00006D10 0D                                 9315          DC    XL1'D'
00006D11 000000                             9316          DC    AL3(0)
00006D14 000002A8                           9317          DC    AL4(680)
00006D18 00000000                           9318          DC    4X'00'
00006D1C 00000000                           9319          DC    Q(@@STATIC)
00006D20 00000000                           9320          DC    X'00000000'
00006D24 00000230                           9321          DC    X'00000230'
00006D28 0000000000005B58                   9322          DC    ADL8(@DATA)
00006D30 00000000                           9323          DC    X'00000000'
00006D34 00000A0A                           9324          DC    X'00000A0A'
                                            9325 *
00006D38 0D                                 9326          DC    XL1'D'
00006D39 000000                             9327          DC    AL3(0)
00006D3C 000002D0                           9328          DC    AL4(720)
00006D40 00000000                           9329          DC    4X'00'
00006D44 00000000                           9330          DC    Q(@@STATIC)
00006D48 00000000                           9331          DC    X'00000000'
00006D4C 00000238                           9332          DC    X'00000238'
00006D50 0000000000005B58                   9333          DC    ADL8(@DATA)
00006D58 00000000                           9334          DC    X'00000000'
00006D5C 00000A12                           9335          DC    X'00000A12'
                                            9336 *
00006D60 0D                                 9337          DC    XL1'D'
00006D61 000000                             9338          DC    AL3(0)
00006D64 000002F8                           9339          DC    AL4(760)
00006D68 00000000                           9340          DC    4X'00'
00006D6C 00000000                           9341          DC    Q(@@STATIC)
00006D70 00000000                           9342          DC    X'00000000'
00006D74 00000240                           9343          DC    X'00000240'
00006D78 0000000000005B58                   9344          DC    ADL8(@DATA)
00006D80 00000000                           9345          DC    X'00000000'
00006D84 00000A1C                           9346          DC    X'00000A1C'
                                            9347 *
00006D88 0D                                 9348          DC    XL1'D'
00006D89 000000                             9349          DC    AL3(0)
00006D8C 00000320                           9350          DC    AL4(800)
00006D90 00000000                           9351          DC    4X'00'
00006D94 00000000                           9352          DC    Q(@@STATIC)
00006D98 00000000                           9353          DC    X'00000000'
00006D9C 00000248                           9354          DC    X'00000248'
00006DA0 0000000000005B58                   9355          DC    ADL8(@DATA)
00006DA8 00000000                           9356          DC    X'00000000'
00006DAC 00000A2A                           9357          DC    X'00000A2A'
                                            9358 *
00006DB0 0D                                 9359          DC    XL1'D'
00006DB1 000000                             9360          DC    AL3(0)
                                                                                                                           Page  186 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006DB4 00000348                           9361          DC    AL4(840)
00006DB8 00000000                           9362          DC    4X'00'
00006DBC 00000000                           9363          DC    Q(@@STATIC)
00006DC0 00000000                           9364          DC    X'00000000'
00006DC4 00000250                           9365          DC    X'00000250'
00006DC8 0000000000005B58                   9366          DC    ADL8(@DATA)
00006DD0 00000000                           9367          DC    X'00000000'
00006DD4 00000A36                           9368          DC    X'00000A36'
                                            9369 *
00006DD8 0D                                 9370          DC    XL1'D'
00006DD9 000000                             9371          DC    AL3(0)
00006DDC 00000370                           9372          DC    AL4(880)
00006DE0 00000000                           9373          DC    4X'00'
00006DE4 00000000                           9374          DC    Q(@@STATIC)
00006DE8 00000000                           9375          DC    X'00000000'
00006DEC 00000258                           9376          DC    X'00000258'
00006DF0 0000000000005B58                   9377          DC    ADL8(@DATA)
00006DF8 00000000                           9378          DC    X'00000000'
00006DFC 00000A46                           9379          DC    X'00000A46'
                                            9380 *
00006E00 0D                                 9381          DC    XL1'D'
00006E01 000000                             9382          DC    AL3(0)
00006E04 00000398                           9383          DC    AL4(920)
00006E08 00000000                           9384          DC    4X'00'
00006E0C 00000000                           9385          DC    Q(@@STATIC)
00006E10 00000000                           9386          DC    X'00000000'
00006E14 00000260                           9387          DC    X'00000260'
00006E18 0000000000005B58                   9388          DC    ADL8(@DATA)
00006E20 00000000                           9389          DC    X'00000000'
00006E24 00000A5A                           9390          DC    X'00000A5A'
                                            9391 *
00006E28 0D                                 9392          DC    XL1'D'
00006E29 000000                             9393          DC    AL3(0)
00006E2C 000003C0                           9394          DC    AL4(960)
00006E30 00000000                           9395          DC    4X'00'
00006E34 00000000                           9396          DC    Q(@@STATIC)
00006E38 00000000                           9397          DC    X'00000000'
00006E3C 00000268                           9398          DC    X'00000268'
00006E40 0000000000005B58                   9399          DC    ADL8(@DATA)
00006E48 00000000                           9400          DC    X'00000000'
00006E4C 00000A68                           9401          DC    X'00000A68'
                                            9402 *
00006E50 0D                                 9403          DC    XL1'D'
00006E51 000000                             9404          DC    AL3(0)
00006E54 000003E8                           9405          DC    AL4(1000)
00006E58 00000000                           9406          DC    4X'00'
00006E5C 00000000                           9407          DC    Q(@@STATIC)
00006E60 00000000                           9408          DC    X'00000000'
00006E64 00000270                           9409          DC    X'00000270'
00006E68 0000000000005B58                   9410          DC    ADL8(@DATA)
00006E70 00000000                           9411          DC    X'00000000'
00006E74 00000A74                           9412          DC    X'00000A74'
                                                                                                                           Page  187 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9413 *
00006E78 0D                                 9414          DC    XL1'D'
00006E79 000000                             9415          DC    AL3(0)
00006E7C 00000410                           9416          DC    AL4(1040)
00006E80 00000000                           9417          DC    4X'00'
00006E84 00000000                           9418          DC    Q(@@STATIC)
00006E88 00000000                           9419          DC    X'00000000'
00006E8C 00000278                           9420          DC    X'00000278'
00006E90 0000000000005B58                   9421          DC    ADL8(@DATA)
00006E98 00000000                           9422          DC    X'00000000'
00006E9C 00000A84                           9423          DC    X'00000A84'
                                            9424 *
00006EA0 0D                                 9425          DC    XL1'D'
00006EA1 000000                             9426          DC    AL3(0)
00006EA4 00000438                           9427          DC    AL4(1080)
00006EA8 00000000                           9428          DC    4X'00'
00006EAC 00000000                           9429          DC    Q(@@STATIC)
00006EB0 00000000                           9430          DC    X'00000000'
00006EB4 00000280                           9431          DC    X'00000280'
00006EB8 0000000000005B58                   9432          DC    ADL8(@DATA)
00006EC0 00000000                           9433          DC    X'00000000'
00006EC4 00000A8E                           9434          DC    X'00000A8E'
                                            9435 *
00006EC8 0D                                 9436          DC    XL1'D'
00006EC9 000000                             9437          DC    AL3(0)
00006ECC 00000460                           9438          DC    AL4(1120)
00006ED0 00000000                           9439          DC    4X'00'
00006ED4 00000000                           9440          DC    Q(@@STATIC)
00006ED8 00000000                           9441          DC    X'00000000'
00006EDC 00000288                           9442          DC    X'00000288'
00006EE0 0000000000005B58                   9443          DC    ADL8(@DATA)
00006EE8 00000000                           9444          DC    X'00000000'
00006EEC 00000A98                           9445          DC    X'00000A98'
                                            9446 *
00006EF0 0D                                 9447          DC    XL1'D'
00006EF1 000000                             9448          DC    AL3(0)
00006EF4 00000488                           9449          DC    AL4(1160)
00006EF8 00000000                           9450          DC    4X'00'
00006EFC 00000000                           9451          DC    Q(@@STATIC)
00006F00 00000000                           9452          DC    X'00000000'
00006F04 00000290                           9453          DC    X'00000290'
00006F08 0000000000005B58                   9454          DC    ADL8(@DATA)
00006F10 00000000                           9455          DC    X'00000000'
00006F14 00000AA4                           9456          DC    X'00000AA4'
                                            9457 *
00006F18 0D                                 9458          DC    XL1'D'
00006F19 000000                             9459          DC    AL3(0)
00006F1C 000004B0                           9460          DC    AL4(1200)
00006F20 00000000                           9461          DC    4X'00'
00006F24 00000000                           9462          DC    Q(@@STATIC)
00006F28 00000000                           9463          DC    X'00000000'
00006F2C 00000298                           9464          DC    X'00000298'
                                                                                                                           Page  188 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006F30 0000000000005B58                   9465          DC    ADL8(@DATA)
00006F38 00000000                           9466          DC    X'00000000'
00006F3C 00000AAE                           9467          DC    X'00000AAE'
                                            9468 *
00006F40 0D                                 9469          DC    XL1'D'
00006F41 000000                             9470          DC    AL3(0)
00006F44 000004D8                           9471          DC    AL4(1240)
00006F48 00000000                           9472          DC    4X'00'
00006F4C 00000000                           9473          DC    Q(@@STATIC)
00006F50 00000000                           9474          DC    X'00000000'
00006F54 000002A0                           9475          DC    X'000002A0'
00006F58 0000000000005B58                   9476          DC    ADL8(@DATA)
00006F60 00000000                           9477          DC    X'00000000'
00006F64 00000ABE                           9478          DC    X'00000ABE'
                                            9479 *
00006F68 0D                                 9480          DC    XL1'D'
00006F69 000000                             9481          DC    AL3(0)
00006F6C 00000500                           9482          DC    AL4(1280)
00006F70 00000000                           9483          DC    4X'00'
00006F74 00000000                           9484          DC    Q(@@STATIC)
00006F78 00000000                           9485          DC    X'00000000'
00006F7C 000002A8                           9486          DC    X'000002A8'
00006F80 0000000000005B58                   9487          DC    ADL8(@DATA)
00006F88 00000000                           9488          DC    X'00000000'
00006F8C 00000ACA                           9489          DC    X'00000ACA'
                                            9490 *
00006F90 0D                                 9491          DC    XL1'D'
00006F91 000000                             9492          DC    AL3(0)
00006F94 00000528                           9493          DC    AL4(1320)
00006F98 00000000                           9494          DC    4X'00'
00006F9C 00000000                           9495          DC    Q(@@STATIC)
00006FA0 00000000                           9496          DC    X'00000000'
00006FA4 000002B0                           9497          DC    X'000002B0'
00006FA8 0000000000005B58                   9498          DC    ADL8(@DATA)
00006FB0 00000000                           9499          DC    X'00000000'
00006FB4 00000AD8                           9500          DC    X'00000AD8'
                                            9501 *
00006FB8 0D                                 9502          DC    XL1'D'
00006FB9 000000                             9503          DC    AL3(0)
00006FBC 00000550                           9504          DC    AL4(1360)
00006FC0 00000000                           9505          DC    4X'00'
00006FC4 00000000                           9506          DC    Q(@@STATIC)
00006FC8 00000000                           9507          DC    X'00000000'
00006FCC 000002B8                           9508          DC    X'000002B8'
00006FD0 0000000000005B58                   9509          DC    ADL8(@DATA)
00006FD8 00000000                           9510          DC    X'00000000'
00006FDC 00000AE4                           9511          DC    X'00000AE4'
                                            9512 *
00006FE0 0D                                 9513          DC    XL1'D'
00006FE1 000000                             9514          DC    AL3(0)
00006FE4 00000578                           9515          DC    AL4(1400)
00006FE8 00000000                           9516          DC    4X'00'
                                                                                                                           Page  189 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006FEC 00000000                           9517          DC    Q(@@STATIC)
00006FF0 00000000                           9518          DC    X'00000000'
00006FF4 000002C0                           9519          DC    X'000002C0'
00006FF8 0000000000005B58                   9520          DC    ADL8(@DATA)
00007000 00000000                           9521          DC    X'00000000'
00007004 00000AF2                           9522          DC    X'00000AF2'
                                            9523 *
00007008 0D                                 9524          DC    XL1'D'
00007009 000000                             9525          DC    AL3(0)
0000700C 000005A0                           9526          DC    AL4(1440)
00007010 00000000                           9527          DC    4X'00'
00007014 00000000                           9528          DC    Q(@@STATIC)
00007018 00000000                           9529          DC    X'00000000'
0000701C 000002C8                           9530          DC    X'000002C8'
00007020 0000000000005B58                   9531          DC    ADL8(@DATA)
00007028 00000000                           9532          DC    X'00000000'
0000702C 00000B00                           9533          DC    X'00000B00'
                                            9534 *
00007030 0D                                 9535          DC    XL1'D'
00007031 000000                             9536          DC    AL3(0)
00007034 000005C8                           9537          DC    AL4(1480)
00007038 00000000                           9538          DC    4X'00'
0000703C 00000000                           9539          DC    Q(@@STATIC)
00007040 00000000                           9540          DC    X'00000000'
00007044 000002D0                           9541          DC    X'000002D0'
00007048 0000000000005B58                   9542          DC    ADL8(@DATA)
00007050 00000000                           9543          DC    X'00000000'
00007054 00000B0E                           9544          DC    X'00000B0E'
                                            9545 *
00007058 0D                                 9546          DC    XL1'D'
00007059 000000                             9547          DC    AL3(0)
0000705C 000005F0                           9548          DC    AL4(1520)
00007060 00000000                           9549          DC    4X'00'
00007064 00000000                           9550          DC    Q(@@STATIC)
00007068 00000000                           9551          DC    X'00000000'
0000706C 000002D8                           9552          DC    X'000002D8'
00007070 0000000000005B58                   9553          DC    ADL8(@DATA)
00007078 00000000                           9554          DC    X'00000000'
0000707C 00000B1E                           9555          DC    X'00000B1E'
                                            9556 *
00007080 0D                                 9557          DC    XL1'D'
00007081 000000                             9558          DC    AL3(0)
00007084 00000618                           9559          DC    AL4(1560)
00007088 00000000                           9560          DC    4X'00'
0000708C 00000000                           9561          DC    Q(@@STATIC)
00007090 00000000                           9562          DC    X'00000000'
00007094 000002E0                           9563          DC    X'000002E0'
00007098 0000000000005B58                   9564          DC    ADL8(@DATA)
000070A0 00000000                           9565          DC    X'00000000'
000070A4 00000B34                           9566          DC    X'00000B34'
                                            9567 *
000070A8 0D                                 9568          DC    XL1'D'
                                                                                                                           Page  190 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000070A9 000000                             9569          DC    AL3(0)
000070AC 00000640                           9570          DC    AL4(1600)
000070B0 00000000                           9571          DC    4X'00'
000070B4 00000000                           9572          DC    Q(@@STATIC)
000070B8 00000000                           9573          DC    X'00000000'
000070BC 000002E8                           9574          DC    X'000002E8'
000070C0 0000000000005B58                   9575          DC    ADL8(@DATA)
000070C8 00000000                           9576          DC    X'00000000'
000070CC 00000B48                           9577          DC    X'00000B48'
                                            9578 *
000070D0 0D                                 9579          DC    XL1'D'
000070D1 000000                             9580          DC    AL3(0)
000070D4 00000668                           9581          DC    AL4(1640)
000070D8 00000000                           9582          DC    4X'00'
000070DC 00000000                           9583          DC    Q(@@STATIC)
000070E0 00000000                           9584          DC    X'00000000'
000070E4 000002F0                           9585          DC    X'000002F0'
000070E8 0000000000005B58                   9586          DC    ADL8(@DATA)
000070F0 00000000                           9587          DC    X'00000000'
000070F4 00000B58                           9588          DC    X'00000B58'
                                            9589 *
000070F8 0D                                 9590          DC    XL1'D'
000070F9 000000                             9591          DC    AL3(0)
000070FC 00000690                           9592          DC    AL4(1680)
00007100 00000000                           9593          DC    4X'00'
00007104 00000000                           9594          DC    Q(@@STATIC)
00007108 00000000                           9595          DC    X'00000000'
0000710C 000002F8                           9596          DC    X'000002F8'
00007110 0000000000005B58                   9597          DC    ADL8(@DATA)
00007118 00000000                           9598          DC    X'00000000'
0000711C 00000B60                           9599          DC    X'00000B60'
                                            9600 *
00007120 0D                                 9601          DC    XL1'D'
00007121 000000                             9602          DC    AL3(0)
00007124 000006B8                           9603          DC    AL4(1720)
00007128 00000000                           9604          DC    4X'00'
0000712C 00000000                           9605          DC    Q(@@STATIC)
00007130 00000000                           9606          DC    X'00000000'
00007134 00000300                           9607          DC    X'00000300'
00007138 0000000000005B58                   9608          DC    ADL8(@DATA)
00007140 00000000                           9609          DC    X'00000000'
00007144 00000B70                           9610          DC    X'00000B70'
                                            9611 *
00007148 0D                                 9612          DC    XL1'D'
00007149 000000                             9613          DC    AL3(0)
0000714C 000006E0                           9614          DC    AL4(1760)
00007150 00000000                           9615          DC    4X'00'
00007154 00000000                           9616          DC    Q(@@STATIC)
00007158 00000000                           9617          DC    X'00000000'
0000715C 00000308                           9618          DC    X'00000308'
00007160 0000000000005B58                   9619          DC    ADL8(@DATA)
00007168 00000000                           9620          DC    X'00000000'
                                                                                                                           Page  191 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000716C 00000B80                           9621          DC    X'00000B80'
                                            9622 *
00007170 0D                                 9623          DC    XL1'D'
00007171 000000                             9624          DC    AL3(0)
00007174 00000708                           9625          DC    AL4(1800)
00007178 00000000                           9626          DC    4X'00'
0000717C 00000000                           9627          DC    Q(@@STATIC)
00007180 00000000                           9628          DC    X'00000000'
00007184 00000310                           9629          DC    X'00000310'
00007188 0000000000005B58                   9630          DC    ADL8(@DATA)
00007190 00000000                           9631          DC    X'00000000'
00007194 00000B8E                           9632          DC    X'00000B8E'
                                            9633 *
00007198 0D                                 9634          DC    XL1'D'
00007199 000000                             9635          DC    AL3(0)
0000719C 00000730                           9636          DC    AL4(1840)
000071A0 00000000                           9637          DC    4X'00'
000071A4 00000000                           9638          DC    Q(@@STATIC)
000071A8 00000000                           9639          DC    X'00000000'
000071AC 00000318                           9640          DC    X'00000318'
000071B0 0000000000005B58                   9641          DC    ADL8(@DATA)
000071B8 00000000                           9642          DC    X'00000000'
000071BC 00000B9A                           9643          DC    X'00000B9A'
                                            9644 *
000071C0 0D                                 9645          DC    XL1'D'
000071C1 000000                             9646          DC    AL3(0)
000071C4 00000758                           9647          DC    AL4(1880)
000071C8 00000000                           9648          DC    4X'00'
000071CC 00000000                           9649          DC    Q(@@STATIC)
000071D0 00000000                           9650          DC    X'00000000'
000071D4 00000320                           9651          DC    X'00000320'
000071D8 0000000000005B58                   9652          DC    ADL8(@DATA)
000071E0 00000000                           9653          DC    X'00000000'
000071E4 00000BA6                           9654          DC    X'00000BA6'
                                            9655 *
000071E8 0D                                 9656          DC    XL1'D'
000071E9 000000                             9657          DC    AL3(0)
000071EC 00000780                           9658          DC    AL4(1920)
000071F0 00000000                           9659          DC    4X'00'
000071F4 00000000                           9660          DC    Q(@@STATIC)
000071F8 00000000                           9661          DC    X'00000000'
000071FC 00000328                           9662          DC    X'00000328'
00007200 0000000000005B58                   9663          DC    ADL8(@DATA)
00007208 00000000                           9664          DC    X'00000000'
0000720C 00000BB6                           9665          DC    X'00000BB6'
                                            9666 *
00007210 0D                                 9667          DC    XL1'D'
00007211 000000                             9668          DC    AL3(0)
00007214 000007A8                           9669          DC    AL4(1960)
00007218 00000000                           9670          DC    4X'00'
0000721C 00000000                           9671          DC    Q(@@STATIC)
00007220 00000000                           9672          DC    X'00000000'
                                                                                                                           Page  192 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007224 00000330                           9673          DC    X'00000330'
00007228 0000000000005B58                   9674          DC    ADL8(@DATA)
00007230 00000000                           9675          DC    X'00000000'
00007234 00000BC4                           9676          DC    X'00000BC4'
                                            9677 *
00007238 0D                                 9678          DC    XL1'D'
00007239 000000                             9679          DC    AL3(0)
0000723C 000007D0                           9680          DC    AL4(2000)
00007240 00000000                           9681          DC    4X'00'
00007244 00000000                           9682          DC    Q(@@STATIC)
00007248 00000000                           9683          DC    X'00000000'
0000724C 00000338                           9684          DC    X'00000338'
00007250 0000000000005B58                   9685          DC    ADL8(@DATA)
00007258 00000000                           9686          DC    X'00000000'
0000725C 00000BD8                           9687          DC    X'00000BD8'
                                            9688 *
00007260 0D                                 9689          DC    XL1'D'
00007261 000000                             9690          DC    AL3(0)
00007264 000007F8                           9691          DC    AL4(2040)
00007268 00000000                           9692          DC    4X'00'
0000726C 00000000                           9693          DC    Q(@@STATIC)
00007270 00000000                           9694          DC    X'00000000'
00007274 00000340                           9695          DC    X'00000340'
00007278 0000000000005B58                   9696          DC    ADL8(@DATA)
00007280 00000000                           9697          DC    X'00000000'
00007284 00000BE8                           9698          DC    X'00000BE8'
                                            9699 *
00007288 0D                                 9700          DC    XL1'D'
00007289 000000                             9701          DC    AL3(0)
0000728C 00000820                           9702          DC    AL4(2080)
00007290 00000000                           9703          DC    4X'00'
00007294 00000000                           9704          DC    Q(@@STATIC)
00007298 00000000                           9705          DC    X'00000000'
0000729C 00000348                           9706          DC    X'00000348'
000072A0 0000000000005B58                   9707          DC    ADL8(@DATA)
000072A8 00000000                           9708          DC    X'00000000'
000072AC 00000BFA                           9709          DC    X'00000BFA'
                                            9710 *
000072B0 0D                                 9711          DC    XL1'D'
000072B1 000000                             9712          DC    AL3(0)
000072B4 00000848                           9713          DC    AL4(2120)
000072B8 00000000                           9714          DC    4X'00'
000072BC 00000000                           9715          DC    Q(@@STATIC)
000072C0 00000000                           9716          DC    X'00000000'
000072C4 00000350                           9717          DC    X'00000350'
000072C8 0000000000005B58                   9718          DC    ADL8(@DATA)
000072D0 00000000                           9719          DC    X'00000000'
000072D4 00000C0C                           9720          DC    X'00000C0C'
                                            9721 *
000072D8 0D                                 9722          DC    XL1'D'
000072D9 000000                             9723          DC    AL3(0)
000072DC 00000870                           9724          DC    AL4(2160)
                                                                                                                           Page  193 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000072E0 00000000                           9725          DC    4X'00'
000072E4 00000000                           9726          DC    Q(@@STATIC)
000072E8 00000000                           9727          DC    X'00000000'
000072EC 00000358                           9728          DC    X'00000358'
000072F0 0000000000005B58                   9729          DC    ADL8(@DATA)
000072F8 00000000                           9730          DC    X'00000000'
000072FC 00000C22                           9731          DC    X'00000C22'
                                            9732 *
00007300 0D                                 9733          DC    XL1'D'
00007301 000000                             9734          DC    AL3(0)
00007304 00000898                           9735          DC    AL4(2200)
00007308 00000000                           9736          DC    4X'00'
0000730C 00000000                           9737          DC    Q(@@STATIC)
00007310 00000000                           9738          DC    X'00000000'
00007314 00000360                           9739          DC    X'00000360'
00007318 0000000000005B58                   9740          DC    ADL8(@DATA)
00007320 00000000                           9741          DC    X'00000000'
00007324 00000C38                           9742          DC    X'00000C38'
                                            9743 *
00007328 0D                                 9744          DC    XL1'D'
00007329 000000                             9745          DC    AL3(0)
0000732C 000008C0                           9746          DC    AL4(2240)
00007330 00000000                           9747          DC    4X'00'
00007334 00000000                           9748          DC    Q(@@STATIC)
00007338 00000000                           9749          DC    X'00000000'
0000733C 00000368                           9750          DC    X'00000368'
00007340 0000000000005B58                   9751          DC    ADL8(@DATA)
00007348 00000000                           9752          DC    X'00000000'
0000734C 00000C4E                           9753          DC    X'00000C4E'
                                            9754 *
00007350 0D                                 9755          DC    XL1'D'
00007351 000000                             9756          DC    AL3(0)
00007354 000008E8                           9757          DC    AL4(2280)
00007358 00000000                           9758          DC    4X'00'
0000735C 00000000                           9759          DC    Q(@@STATIC)
00007360 00000000                           9760          DC    X'00000000'
00007364 00000370                           9761          DC    X'00000370'
00007368 0000000000005B58                   9762          DC    ADL8(@DATA)
00007370 00000000                           9763          DC    X'00000000'
00007374 00000C66                           9764          DC    X'00000C66'
                                            9765 *
00007378 0D                                 9766          DC    XL1'D'
00007379 000000                             9767          DC    AL3(0)
0000737C 00000910                           9768          DC    AL4(2320)
00007380 00000000                           9769          DC    4X'00'
00007384 00000000                           9770          DC    Q(@@STATIC)
00007388 00000000                           9771          DC    X'00000000'
0000738C 00000378                           9772          DC    X'00000378'
00007390 0000000000005B58                   9773          DC    ADL8(@DATA)
00007398 00000000                           9774          DC    X'00000000'
0000739C 00000C74                           9775          DC    X'00000C74'
                                            9776 *
                                                                                                                           Page  194 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000073A0 0D                                 9777          DC    XL1'D'
000073A1 000000                             9778          DC    AL3(0)
000073A4 00000938                           9779          DC    AL4(2360)
000073A8 00000000                           9780          DC    4X'00'
000073AC 00000000                           9781          DC    Q(@@STATIC)
000073B0 00000000                           9782          DC    X'00000000'
000073B4 00000380                           9783          DC    X'00000380'
000073B8 0000000000005B58                   9784          DC    ADL8(@DATA)
000073C0 00000000                           9785          DC    X'00000000'
000073C4 00000C88                           9786          DC    X'00000C88'
                                            9787 *
000073C8 0D                                 9788          DC    XL1'D'
000073C9 000000                             9789          DC    AL3(0)
000073CC 00000960                           9790          DC    AL4(2400)
000073D0 00000000                           9791          DC    4X'00'
000073D4 00000000                           9792          DC    Q(@@STATIC)
000073D8 00000000                           9793          DC    X'00000000'
000073DC 00000388                           9794          DC    X'00000388'
000073E0 0000000000005B58                   9795          DC    ADL8(@DATA)
000073E8 00000000                           9796          DC    X'00000000'
000073EC 00000CA8                           9797          DC    X'00000CA8'
                                            9798 *
000073F0 0D                                 9799          DC    XL1'D'
000073F1 000000                             9800          DC    AL3(0)
000073F4 00000988                           9801          DC    AL4(2440)
000073F8 00000000                           9802          DC    4X'00'
000073FC 00000000                           9803          DC    Q(@@STATIC)
00007400 00000000                           9804          DC    X'00000000'
00007404 00000390                           9805          DC    X'00000390'
00007408 0000000000005B58                   9806          DC    ADL8(@DATA)
00007410 00000000                           9807          DC    X'00000000'
00007414 00000CCC                           9808          DC    X'00000CCC'
                                            9809 *
00007418 0D                                 9810          DC    XL1'D'
00007419 000000                             9811          DC    AL3(0)
0000741C 000009B0                           9812          DC    AL4(2480)
00007420 00000000                           9813          DC    4X'00'
00007424 00000000                           9814          DC    Q(@@STATIC)
00007428 00000000                           9815          DC    X'00000000'
0000742C 00000398                           9816          DC    X'00000398'
00007430 0000000000005B58                   9817          DC    ADL8(@DATA)
00007438 00000000                           9818          DC    X'00000000'
0000743C 00000CEE                           9819          DC    X'00000CEE'
                                            9820 *
00007440 0D                                 9821          DC    XL1'D'
00007441 000000                             9822          DC    AL3(0)
00007444 000009D8                           9823          DC    AL4(2520)
00007448 00000000                           9824          DC    4X'00'
0000744C 00000000                           9825          DC    Q(@@STATIC)
00007450 00000000                           9826          DC    X'00000000'
00007454 000003A0                           9827          DC    X'000003A0'
00007458 0000000000005B58                   9828          DC    ADL8(@DATA)
                                                                                                                           Page  195 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007460 00000000                           9829          DC    X'00000000'
00007464 00000D02                           9830          DC    X'00000D02'
                                            9831 *
00007468 0D                                 9832          DC    XL1'D'
00007469 000000                             9833          DC    AL3(0)
0000746C 00000A00                           9834          DC    AL4(2560)
00007470 00000000                           9835          DC    4X'00'
00007474 00000000                           9836          DC    Q(@@STATIC)
00007478 00000000                           9837          DC    X'00000000'
0000747C 000003A8                           9838          DC    X'000003A8'
00007480 0000000000005B58                   9839          DC    ADL8(@DATA)
00007488 00000000                           9840          DC    X'00000000'
0000748C 00000D1E                           9841          DC    X'00000D1E'
                                            9842 *
00007490 0D                                 9843          DC    XL1'D'
00007491 000000                             9844          DC    AL3(0)
00007494 00000A28                           9845          DC    AL4(2600)
00007498 00000000                           9846          DC    4X'00'
0000749C 00000000                           9847          DC    Q(@@STATIC)
000074A0 00000000                           9848          DC    X'00000000'
000074A4 000003B0                           9849          DC    X'000003B0'
000074A8 0000000000005B58                   9850          DC    ADL8(@DATA)
000074B0 00000000                           9851          DC    X'00000000'
000074B4 00000D38                           9852          DC    X'00000D38'
                                            9853 *
000074B8 0D                                 9854          DC    XL1'D'
000074B9 000000                             9855          DC    AL3(0)
000074BC 00000A50                           9856          DC    AL4(2640)
000074C0 00000000                           9857          DC    4X'00'
000074C4 00000000                           9858          DC    Q(@@STATIC)
000074C8 00000000                           9859          DC    X'00000000'
000074CC 000003B8                           9860          DC    X'000003B8'
000074D0 0000000000005B58                   9861          DC    ADL8(@DATA)
000074D8 00000000                           9862          DC    X'00000000'
000074DC 00000D5C                           9863          DC    X'00000D5C'
                                            9864 *
000074E0 0D                                 9865          DC    XL1'D'
000074E1 000000                             9866          DC    AL3(0)
000074E4 00000A78                           9867          DC    AL4(2680)
000074E8 00000000                           9868          DC    4X'00'
000074EC 00000000                           9869          DC    Q(@@STATIC)
000074F0 00000000                           9870          DC    X'00000000'
000074F4 000003C0                           9871          DC    X'000003C0'
000074F8 0000000000005B58                   9872          DC    ADL8(@DATA)
00007500 00000000                           9873          DC    X'00000000'
00007504 00000D7E                           9874          DC    X'00000D7E'
                                            9875 *
00007508 0D                                 9876          DC    XL1'D'
00007509 000000                             9877          DC    AL3(0)
0000750C 00000AA0                           9878          DC    AL4(2720)
00007510 00000000                           9879          DC    4X'00'
00007514 00000000                           9880          DC    Q(@@STATIC)
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007518 00000000                           9881          DC    X'00000000'
0000751C 000003C8                           9882          DC    X'000003C8'
00007520 0000000000005B58                   9883          DC    ADL8(@DATA)
00007528 00000000                           9884          DC    X'00000000'
0000752C 00000D8A                           9885          DC    X'00000D8A'
                                            9886 *
00007530 0D                                 9887          DC    XL1'D'
00007531 000000                             9888          DC    AL3(0)
00007534 00000AC8                           9889          DC    AL4(2760)
00007538 00000000                           9890          DC    4X'00'
0000753C 00000000                           9891          DC    Q(@@STATIC)
00007540 00000000                           9892          DC    X'00000000'
00007544 000003D0                           9893          DC    X'000003D0'
00007548 0000000000005B58                   9894          DC    ADL8(@DATA)
00007550 00000000                           9895          DC    X'00000000'
00007554 00000DA2                           9896          DC    X'00000DA2'
                                            9897 *
00007558 0D                                 9898          DC    XL1'D'
00007559 000000                             9899          DC    AL3(0)
0000755C 00000AF0                           9900          DC    AL4(2800)
00007560 00000000                           9901          DC    4X'00'
00007564 00000000                           9902          DC    Q(@@STATIC)
00007568 00000000                           9903          DC    X'00000000'
0000756C 000003D8                           9904          DC    X'000003D8'
00007570 0000000000005B58                   9905          DC    ADL8(@DATA)
00007578 00000000                           9906          DC    X'00000000'
0000757C 00000DB8                           9907          DC    X'00000DB8'
                                            9908 *
00007580 0D                                 9909          DC    XL1'D'
00007581 000000                             9910          DC    AL3(0)
00007584 00000B18                           9911          DC    AL4(2840)
00007588 00000000                           9912          DC    4X'00'
0000758C 00000000                           9913          DC    Q(@@STATIC)
00007590 00000000                           9914          DC    X'00000000'
00007594 000003E0                           9915          DC    X'000003E0'
00007598 0000000000005B58                   9916          DC    ADL8(@DATA)
000075A0 00000000                           9917          DC    X'00000000'
000075A4 00000DCE                           9918          DC    X'00000DCE'
                                            9919 *
000075A8 0D                                 9920          DC    XL1'D'
000075A9 000000                             9921          DC    AL3(0)
000075AC 00000B40                           9922          DC    AL4(2880)
000075B0 00000000                           9923          DC    4X'00'
000075B4 00000000                           9924          DC    Q(@@STATIC)
000075B8 00000000                           9925          DC    X'00000000'
000075BC 000003E8                           9926          DC    X'000003E8'
000075C0 0000000000005B58                   9927          DC    ADL8(@DATA)
000075C8 00000000                           9928          DC    X'00000000'
000075CC 00000DDE                           9929          DC    X'00000DDE'
                                            9930 *
000075D0 0D                                 9931          DC    XL1'D'
000075D1 000000                             9932          DC    AL3(0)
                                                                                                                           Page  197 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000075D4 00000B68                           9933          DC    AL4(2920)
000075D8 00000000                           9934          DC    4X'00'
000075DC 00000000                           9935          DC    Q(@@STATIC)
000075E0 00000000                           9936          DC    X'00000000'
000075E4 000003F0                           9937          DC    X'000003F0'
000075E8 0000000000005B58                   9938          DC    ADL8(@DATA)
000075F0 00000000                           9939          DC    X'00000000'
000075F4 00000DF4                           9940          DC    X'00000DF4'
                                            9941 *
000075F8 0D                                 9942          DC    XL1'D'
000075F9 000000                             9943          DC    AL3(0)
000075FC 00000B90                           9944          DC    AL4(2960)
00007600 00000000                           9945          DC    4X'00'
00007604 00000000                           9946          DC    Q(@@STATIC)
00007608 00000000                           9947          DC    X'00000000'
0000760C 000004C0                           9948          DC    X'000004C0'
00007610 0000000000005B58                   9949          DC    ADL8(@DATA)
00007618 00000000                           9950          DC    X'00000000'
0000761C 00000E04                           9951          DC    X'00000E04'
                                            9952 *
00007620 0D                                 9953          DC    XL1'D'
00007621 000000                             9954          DC    AL3(0)
00007624 00000BB8                           9955          DC    AL4(3000)
00007628 00000000                           9956          DC    4X'00'
0000762C 00000000                           9957          DC    Q(@@STATIC)
00007630 00000000                           9958          DC    X'00000000'
00007634 000004C8                           9959          DC    X'000004C8'
00007638 0000000000005B58                   9960          DC    ADL8(@DATA)
00007640 00000000                           9961          DC    X'00000000'
00007644 00000E0A                           9962          DC    X'00000E0A'
                                            9963 *
00007648 0D                                 9964          DC    XL1'D'
00007649 000000                             9965          DC    AL3(0)
0000764C 00000BE0                           9966          DC    AL4(3040)
00007650 00000000                           9967          DC    4X'00'
00007654 00000000                           9968          DC    Q(@@STATIC)
00007658 00000000                           9969          DC    X'00000000'
0000765C 000004D0                           9970          DC    X'000004D0'
00007660 0000000000005B58                   9971          DC    ADL8(@DATA)
00007668 00000000                           9972          DC    X'00000000'
0000766C 00000E10                           9973          DC    X'00000E10'
                                            9974 *
00007670 0D                                 9975          DC    XL1'D'
00007671 000000                             9976          DC    AL3(0)
00007674 00000C08                           9977          DC    AL4(3080)
00007678 00000000                           9978          DC    4X'00'
0000767C 00000000                           9979          DC    Q(@@STATIC)
00007680 00000000                           9980          DC    X'00000000'
00007684 000004D8                           9981          DC    X'000004D8'
00007688 0000000000005B58                   9982          DC    ADL8(@DATA)
00007690 00000000                           9983          DC    X'00000000'
00007694 00000E18                           9984          DC    X'00000E18'
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9985 *
00007698 0D                                 9986          DC    XL1'D'
00007699 000000                             9987          DC    AL3(0)
0000769C 00000C30                           9988          DC    AL4(3120)
000076A0 00000000                           9989          DC    4X'00'
000076A4 00000000                           9990          DC    Q(@@STATIC)
000076A8 00000000                           9991          DC    X'00000000'
000076AC 000004E0                           9992          DC    X'000004E0'
000076B0 0000000000005B58                   9993          DC    ADL8(@DATA)
000076B8 00000000                           9994          DC    X'00000000'
000076BC 00000E1C                           9995          DC    X'00000E1C'
                                            9996 *
000076C0 0D                                 9997          DC    XL1'D'
000076C1 000000                             9998          DC    AL3(0)
000076C4 00000C58                           9999          DC    AL4(3160)
000076C8 00000000                          10000          DC    4X'00'
000076CC 00000000                          10001          DC    Q(@@STATIC)
000076D0 00000000                          10002          DC    X'00000000'
000076D4 000004E8                          10003          DC    X'000004E8'
000076D8 0000000000005B58                  10004          DC    ADL8(@DATA)
000076E0 00000000                          10005          DC    X'00000000'
000076E4 00000E22                          10006          DC    X'00000E22'
                                           10007 *
000076E8 0D                                10008          DC    XL1'D'
000076E9 000000                            10009          DC    AL3(0)
000076EC 00000C80                          10010          DC    AL4(3200)
000076F0 00000000                          10011          DC    4X'00'
000076F4 00000000                          10012          DC    Q(@@STATIC)
000076F8 00000000                          10013          DC    X'00000000'
000076FC 00000510                          10014          DC    X'00000510'
00007700 0000000000005B58                  10015          DC    ADL8(@DATA)
00007708 00000000                          10016          DC    X'00000000'
0000770C 00000E2A                          10017          DC    X'00000E2A'
                                           10018 *
00007710 0D                                10019          DC    XL1'D'
00007711 000000                            10020          DC    AL3(0)
00007714 00000CA8                          10021          DC    AL4(3240)
00007718 00000000                          10022          DC    4X'00'
0000771C 00000000                          10023          DC    Q(@@STATIC)
00007720 00000000                          10024          DC    X'00000000'
00007724 00000518                          10025          DC    X'00000518'
00007728 0000000000005B58                  10026          DC    ADL8(@DATA)
00007730 00000000                          10027          DC    X'00000000'
00007734 00000E36                          10028          DC    X'00000E36'
                                           10029 *
00007738 0D                                10030          DC    XL1'D'
00007739 000000                            10031          DC    AL3(0)
0000773C 00000CD0                          10032          DC    AL4(3280)
00007740 00000000                          10033          DC    4X'00'
00007744 00000000                          10034          DC    Q(@@STATIC)
00007748 00000000                          10035          DC    X'00000000'
0000774C 00000520                          10036          DC    X'00000520'
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007750 0000000000005B58                  10037          DC    ADL8(@DATA)
00007758 00000000                          10038          DC    X'00000000'
0000775C 00000E3E                          10039          DC    X'00000E3E'
                                           10040 *
00007760 0D                                10041          DC    XL1'D'
00007761 000000                            10042          DC    AL3(0)
00007764 00000CF8                          10043          DC    AL4(3320)
00007768 00000000                          10044          DC    4X'00'
0000776C 00000000                          10045          DC    Q(@@STATIC)
00007770 00000000                          10046          DC    X'00000000'
00007774 00000528                          10047          DC    X'00000528'
00007778 0000000000005B58                  10048          DC    ADL8(@DATA)
00007780 00000000                          10049          DC    X'00000000'
00007784 00000E48                          10050          DC    X'00000E48'
                                           10051 *
00007788 0D                                10052          DC    XL1'D'
00007789 000000                            10053          DC    AL3(0)
0000778C 00000D20                          10054          DC    AL4(3360)
00007790 00000000                          10055          DC    4X'00'
00007794 00000000                          10056          DC    Q(@@STATIC)
00007798 00000000                          10057          DC    X'00000000'
0000779C 00000630                          10058          DC    X'00000630'
000077A0 0000000000005B58                  10059          DC    ADL8(@DATA)
000077A8 00000000                          10060          DC    X'00000000'
000077AC 00000E50                          10061          DC    X'00000E50'
                                           10062 *
000077B0 0D                                10063          DC    XL1'D'
000077B1 000000                            10064          DC    AL3(0)
000077B4 00000D48                          10065          DC    AL4(3400)
000077B8 00000000                          10066          DC    4X'00'
000077BC 00000000                          10067          DC    Q(@@STATIC)
000077C0 00000000                          10068          DC    X'00000000'
000077C4 00000638                          10069          DC    X'00000638'
000077C8 0000000000005B58                  10070          DC    ADL8(@DATA)
000077D0 00000000                          10071          DC    X'00000000'
000077D4 00000E56                          10072          DC    X'00000E56'
                                           10073 *
000077D8 0D                                10074          DC    XL1'D'
000077D9 000000                            10075          DC    AL3(0)
000077DC 00000D70                          10076          DC    AL4(3440)
000077E0 00000000                          10077          DC    4X'00'
000077E4 00000000                          10078          DC    Q(@@STATIC)
000077E8 00000000                          10079          DC    X'00000000'
000077EC 00000640                          10080          DC    X'00000640'
000077F0 0000000000005B58                  10081          DC    ADL8(@DATA)
000077F8 00000000                          10082          DC    X'00000000'
000077FC 00000E60                          10083          DC    X'00000E60'
                                           10084 *
00007800 0D                                10085          DC    XL1'D'
00007801 000000                            10086          DC    AL3(0)
00007804 00000D98                          10087          DC    AL4(3480)
00007808 00000000                          10088          DC    4X'00'
                                                                                                                           Page  200 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000780C 00000000                          10089          DC    Q(@@STATIC)
00007810 00000000                          10090          DC    X'00000000'
00007814 00000648                          10091          DC    X'00000648'
00007818 0000000000005B58                  10092          DC    ADL8(@DATA)
00007820 00000000                          10093          DC    X'00000000'
00007824 00000E6C                          10094          DC    X'00000E6C'
                                           10095 *
00007828 0D                                10096          DC    XL1'D'
00007829 000000                            10097          DC    AL3(0)
0000782C 00000DC0                          10098          DC    AL4(3520)
00007830 00000000                          10099          DC    4X'00'
00007834 00000000                          10100          DC    Q(@@STATIC)
00007838 00000000                          10101          DC    X'00000000'
0000783C 00000650                          10102          DC    X'00000650'
00007840 0000000000005B58                  10103          DC    ADL8(@DATA)
00007848 00000000                          10104          DC    X'00000000'
0000784C 00000E78                          10105          DC    X'00000E78'
                                           10106 *
00007850 0D                                10107          DC    XL1'D'
00007851 000000                            10108          DC    AL3(0)
00007854 00000DE8                          10109          DC    AL4(3560)
00007858 00000000                          10110          DC    4X'00'
0000785C 00000000                          10111          DC    Q(@@STATIC)
00007860 00000000                          10112          DC    X'00000000'
00007864 00000658                          10113          DC    X'00000658'
00007868 0000000000005B58                  10114          DC    ADL8(@DATA)
00007870 00000000                          10115          DC    X'00000000'
00007874 00000E86                          10116          DC    X'00000E86'
                                           10117 *
00007878 0D                                10118          DC    XL1'D'
00007879 000000                            10119          DC    AL3(0)
0000787C 00000E10                          10120          DC    AL4(3600)
00007880 00000000                          10121          DC    4X'00'
00007884 00000000                          10122          DC    Q(@@STATIC)
00007888 00000000                          10123          DC    X'00000000'
0000788C 00000660                          10124          DC    X'00000660'
00007890 0000000000005B58                  10125          DC    ADL8(@DATA)
00007898 00000000                          10126          DC    X'00000000'
0000789C 00000E8E                          10127          DC    X'00000E8E'
                                           10128 *
000078A0 0D                                10129          DC    XL1'D'
000078A1 000000                            10130          DC    AL3(0)
000078A4 00000E38                          10131          DC    AL4(3640)
000078A8 00000000                          10132          DC    4X'00'
000078AC 00000000                          10133          DC    Q(@@STATIC)
000078B0 00000000                          10134          DC    X'00000000'
000078B4 00000668                          10135          DC    X'00000668'
000078B8 0000000000005B58                  10136          DC    ADL8(@DATA)
000078C0 00000000                          10137          DC    X'00000000'
000078C4 00000E98                          10138          DC    X'00000E98'
                                           10139 *
000078C8 0D                                10140          DC    XL1'D'
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000078C9 000000                            10141          DC    AL3(0)
000078CC 00000E60                          10142          DC    AL4(3680)
000078D0 00000000                          10143          DC    4X'00'
000078D4 00000000                          10144          DC    Q(@@STATIC)
000078D8 00000000                          10145          DC    X'00000000'
000078DC 00000670                          10146          DC    X'00000670'
000078E0 0000000000005B58                  10147          DC    ADL8(@DATA)
000078E8 00000000                          10148          DC    X'00000000'
000078EC 00000EA4                          10149          DC    X'00000EA4'
                                           10150 *
000078F0 0D                                10151          DC    XL1'D'
000078F1 000000                            10152          DC    AL3(0)
000078F4 00000E88                          10153          DC    AL4(3720)
000078F8 00000000                          10154          DC    4X'00'
000078FC 00000000                          10155          DC    Q(@@STATIC)
00007900 00000000                          10156          DC    X'00000000'
00007904 00000678                          10157          DC    X'00000678'
00007908 0000000000005B58                  10158          DC    ADL8(@DATA)
00007910 00000000                          10159          DC    X'00000000'
00007914 00000E50                          10160          DC    X'00000E50'
                                           10161 *
00007918 0D                                10162          DC    XL1'D'
00007919 000000                            10163          DC    AL3(0)
0000791C 00000EB0                          10164          DC    AL4(3760)
00007920 00000000                          10165          DC    4X'00'
00007924 00000000                          10166          DC    Q(@@STATIC)
00007928 00000000                          10167          DC    X'00000000'
0000792C 00000680                          10168          DC    X'00000680'
00007930 0000000000005B58                  10169          DC    ADL8(@DATA)
00007938 00000000                          10170          DC    X'00000000'
0000793C 00000E86                          10171          DC    X'00000E86'
                                           10172 *
00007940 0D                                10173          DC    XL1'D'
00007941 000000                            10174          DC    AL3(0)
00007944 00000ED8                          10175          DC    AL4(3800)
00007948 00000000                          10176          DC    4X'00'
0000794C 00000000                          10177          DC    Q(@@STATIC)
00007950 00000000                          10178          DC    X'00000000'
00007954 00000688                          10179          DC    X'00000688'
00007958 0000000000005B58                  10180          DC    ADL8(@DATA)
00007960 00000000                          10181          DC    X'00000000'
00007964 00000EAE                          10182          DC    X'00000EAE'
                                           10183 *
00007968 0D                                10184          DC    XL1'D'
00007969 000000                            10185          DC    AL3(0)
0000796C 00000F00                          10186          DC    AL4(3840)
00007970 00000000                          10187          DC    4X'00'
00007974 00000000                          10188          DC    Q(@@STATIC)
00007978 00000000                          10189          DC    X'00000000'
0000797C 00000690                          10190          DC    X'00000690'
00007980 0000000000005B58                  10191          DC    ADL8(@DATA)
00007988 00000000                          10192          DC    X'00000000'
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000798C 00000EBC                          10193          DC    X'00000EBC'
                                           10194 *
00007990 0D                                10195          DC    XL1'D'
00007991 000000                            10196          DC    AL3(0)
00007994 00000F28                          10197          DC    AL4(3880)
00007998 00000000                          10198          DC    4X'00'
0000799C 00000000                          10199          DC    Q(@@STATIC)
000079A0 00000000                          10200          DC    X'00000000'
000079A4 00000698                          10201          DC    X'00000698'
000079A8 0000000000005B58                  10202          DC    ADL8(@DATA)
000079B0 00000000                          10203          DC    X'00000000'
000079B4 00000EC2                          10204          DC    X'00000EC2'
                                           10205 *
000079B8 0D                                10206          DC    XL1'D'
000079B9 000000                            10207          DC    AL3(0)
000079BC 00000F50                          10208          DC    AL4(3920)
000079C0 00000000                          10209          DC    4X'00'
000079C4 00000000                          10210          DC    Q(@@STATIC)
000079C8 00000000                          10211          DC    X'00000000'
000079CC 000006A0                          10212          DC    X'000006A0'
000079D0 0000000000005B58                  10213          DC    ADL8(@DATA)
000079D8 00000000                          10214          DC    X'00000000'
000079DC 00000ED0                          10215          DC    X'00000ED0'
                                           10216 *
000079E0 0D                                10217          DC    XL1'D'
000079E1 000000                            10218          DC    AL3(0)
000079E4 00000F78                          10219          DC    AL4(3960)
000079E8 00000000                          10220          DC    4X'00'
000079EC 00000000                          10221          DC    Q(@@STATIC)
000079F0 00000000                          10222          DC    X'00000000'
000079F4 000006A8                          10223          DC    X'000006A8'
000079F8 0000000000005B58                  10224          DC    ADL8(@DATA)
00007A00 00000000                          10225          DC    X'00000000'
00007A04 00000EDC                          10226          DC    X'00000EDC'
                                           10227 *
00007A08 0D                                10228          DC    XL1'D'
00007A09 000000                            10229          DC    AL3(0)
00007A0C 00000FA0                          10230          DC    AL4(4000)
00007A10 00000000                          10231          DC    4X'00'
00007A14 00000000                          10232          DC    Q(@@STATIC)
00007A18 00000000                          10233          DC    X'00000000'
00007A1C 000006B0                          10234          DC    X'000006B0'
00007A20 0000000000005B58                  10235          DC    ADL8(@DATA)
00007A28 00000000                          10236          DC    X'00000000'
00007A2C 00000EF2                          10237          DC    X'00000EF2'
                                           10238 *
00007A30 0D                                10239          DC    XL1'D'
00007A31 000000                            10240          DC    AL3(0)
00007A34 00000FC8                          10241          DC    AL4(4040)
00007A38 00000000                          10242          DC    4X'00'
00007A3C 00000000                          10243          DC    Q(@@STATIC)
00007A40 00000000                          10244          DC    X'00000000'
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007A44 000006B8                          10245          DC    X'000006B8'
00007A48 0000000000005B58                  10246          DC    ADL8(@DATA)
00007A50 00000000                          10247          DC    X'00000000'
00007A54 00000F02                          10248          DC    X'00000F02'
                                           10249 *
00007A58 0D                                10250          DC    XL1'D'
00007A59 000000                            10251          DC    AL3(0)
00007A5C 00000FF0                          10252          DC    AL4(4080)
00007A60 00000000                          10253          DC    4X'00'
00007A64 00000000                          10254          DC    Q(@@STATIC)
00007A68 00000000                          10255          DC    X'00000000'
00007A6C 000006C0                          10256          DC    X'000006C0'
00007A70 0000000000005B58                  10257          DC    ADL8(@DATA)
00007A78 00000000                          10258          DC    X'00000000'
00007A7C 00000F16                          10259          DC    X'00000F16'
                                           10260 *
00007A80 0D                                10261          DC    XL1'D'
00007A81 000000                            10262          DC    AL3(0)
00007A84 00001018                          10263          DC    AL4(4120)
00007A88 00000000                          10264          DC    4X'00'
00007A8C 00000000                          10265          DC    Q(@@STATIC)
00007A90 00000000                          10266          DC    X'00000000'
00007A94 000006C8                          10267          DC    X'000006C8'
00007A98 0000000000005B58                  10268          DC    ADL8(@DATA)
00007AA0 00000000                          10269          DC    X'00000000'
00007AA4 00000F26                          10270          DC    X'00000F26'
                                           10271 *
00007AA8 0D                                10272          DC    XL1'D'
00007AA9 000000                            10273          DC    AL3(0)
00007AAC 00000000                          10274          DC    AL4(0)
00007AB0 00000000                          10275          DC    4X'00'
00007AB4 00000000                          10276          DC    Q(@@STATIC)
00007AB8 00000000                          10277          DC    X'00000000'
00007ABC 000006D0                          10278          DC    X'000006D0'
00007AC0 0000000000005B58                  10279          DC    ADL8(@DATA)
00007AC8 00000000                          10280          DC    X'00000000'
00007ACC 00000E60                          10281          DC    X'00000E60'
                                           10282 *
                                           10283          END
                                                 Relocation Dictionary                                                     Page  204 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000007 00000148   A 4      +
 00000002 00000004 00000150   A 4      +
 00000002 0000000B 00000158   A 4      +
 00000002 0000000B 00000160   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 00000002 000001A8   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000006 00000268   A 4      +
 00000002 00000002 00000290   A 4      +
 00000002 00000002 000002B8   A 4      +
 00000002 00000002 000002C0   A 4      +
 00000002 00000002 00000390   A 4      +
 00000002 00000002 000003B8   A 4      +
 00000002 00000002 000003C0   A 4      +
 00000002 00000002 000004B8   A 4      +
 00000002 00000002 000004C0   A 4      +
 00000002 00000002 00000538   A 4      +
 00000002 00000002 00000540   A 4      +
 00000002 00000002 000005B8   A 4      +
 00000002 00000002 000005C0   A 4      +
 00000002 00000002 00000618   A 4      +
 00000002 00000002 00000640   A 4      +
 00000002 00000002 00000648   A 4      +
 00000002 00000002 000006E0   A 4      +
 00000002 00000002 000006E8   A 4      +
 00000002 00000002 00000780   A 4      +
 00000002 00000002 00000788   A 4      +
 00000002 00000002 000007F0   A 4      +
 00000002 00000002 000007F8   A 4      +
 00000002 00000002 00000898   A 4      +
 00000002 00000002 000008A0   A 4      +
 00000002 00000002 00000948   A 4      +
 00000002 00000002 00000950   A 4      +
 00000002 00000002 00000AE8   A 4      +
 00000002 00000002 00000AF0   A 4      +
 00000002 0000000B 00000B30   A 4      +
 00000002 00000002 00000CB0   A 4      +
 00000002 00000002 00000CB8   A 4      +
 00000002 00000002 00000D30   A 4      +
 00000002 00000002 00000D38   A 4      +
 00000002 00000002 00000D80   A 4      +
 00000002 00000002 00000DA8   A 4      +
 00000002 00000002 00000DB0   A 4      +
 00000002 00000002 00000E88   A 4      +
 00000002 00000002 00000F00   A 4      +
 00000002 00000002 00000F28   A 4      +
 00000002 00000002 00000F30   A 4      +
 00000002 00000004 00001078   A 4      +
 00000002 0000000B 00001080   A 4      +
 00000002 0000000B 00001088   A 4      +
                                                 Relocation Dictionary                                                     Page  205 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000010A8   A 4      +
 00000002 00000002 000010D0   A 4      +
 00000002 00000002 000010D8   A 4      +
 00000002 00000002 000011A0   A 4      +
 00000002 00000004 000011B0   A 4      +
 00000002 0000000B 000011B8   A 4      +
 00000002 0000000B 000011C0   A 4      +
 00000002 00000002 00001348   A 4      +
 00000002 00000002 00001370   A 4      +
 00000002 00000002 00001378   A 4      +
 00000002 00000002 00001440   A 4      +
 00000002 00000002 000014E8   A 4      +
 00000002 00000002 000014F0   A 4      +
 00000002 00000002 00001578   A 4      +
 00000002 00000002 00001580   A 4      +
 00000002 00000002 00001600   A 4      +
 00000002 00000002 00001628   A 4      +
 00000002 00000002 00001630   A 4      +
 00000002 00000004 00001750   A 4      +
 00000002 0000000B 00001758   A 4      +
 00000002 0000000B 00001760   A 4      +
 00000002 00000002 00001790   A 4      +
 00000002 00000002 000017B8   A 4      +
 00000002 00000002 000017C0   A 4      +
 00000002 00000002 00001830   A 4      +
 00000002 00000002 00001918   A 4      +
 00000002 00000002 00001940   A 4      +
 00000002 00000002 00001948   A 4      +
 00000002 00000004 00001A28   A 4      +
 00000002 0000000B 00001A30   A 4      +
 00000002 0000000B 00001A38   A 4      +
 00000002 00000002 00001A40   A 4      +
 00000002 00000002 00001A48   A 4      +
 00000002 00000002 00001A50   A 4      +
 00000002 00000002 00001BC0   A 4      +
 00000002 00000002 00001BE8   A 4      +
 00000002 00000002 00001BF0   A 4      +
 00000002 00000004 00001CC0   A 4      +
 00000002 0000000B 00001CC8   A 4      +
 00000002 0000000B 00001CD0   A 4      +
 00000002 00000002 00001DA0   A 4      +
 00000002 00000002 00001DC8   A 4      +
 00000002 00000002 00001DD0   A 4      +
 00000002 00000002 00001EC0   A 4      +
 00000002 00000002 00001F58   A 4      +
 00000002 00000002 00001F60   A 4      +
 00000002 00000002 00001FB0   A 4      +
 00000002 00000002 00001FD8   A 4      +
 00000002 00000002 00001FE0   A 4      +
 00000002 00000002 000020C0   A 4      +
 00000002 00000002 000020C8   A 4      +
 00000002 00000002 00002130   A 4      +
 00000002 00000002 00002138   A 4      +
                                                 Relocation Dictionary                                                     Page  206 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000021A8   A 4      +
 00000002 00000002 000021D0   A 4      +
 00000002 00000002 000021D8   A 4      +
 00000002 00000002 000022B8   A 4      +
 00000002 00000004 000022C0   A 4      +
 00000002 0000000B 000022C8   A 4      +
 00000002 0000000B 000022D0   A 4      +
 00000002 00000002 00002450   A 4      +
 00000002 00000002 00002478   A 4      +
 00000002 00000002 00002480   A 4      +
 00000002 00000004 00002638   A 4      +
 00000002 0000000B 00002640   A 4      +
 00000002 0000000B 00002648   A 4      +
 00000002 00000002 00002650   A 4      +
 00000002 00000002 000026F8   A 4      +
 00000002 00000002 00002720   A 4      +
 00000002 00000002 00002728   A 4      +
 00000002 00000002 00002790   A 4      +
 00000002 00000002 00002898   A 4      +
 00000002 00000002 000028C0   A 4      +
 00000002 00000002 000028C8   A 4      +
 00000002 00000002 00002980   A 4      +
 00000002 00000002 000029F0   A 4      +
 00000002 00000002 00002A18   A 4      +
 00000002 00000002 00002A20   A 4      +
 00000002 00000004 00002A88   A 4      +
 00000002 0000000B 00002A90   A 4      +
 00000002 0000000B 00002A98   A 4      +
 00000002 00000002 00002C28   A 4      +
 00000002 00000002 00002C50   A 4      +
 00000002 00000002 00002C58   A 4      +
 00000002 00000004 00002D10   A 4      +
 00000002 0000000B 00002D18   A 4      +
 00000002 0000000B 00002D20   A 4      +
 00000002 00000002 00002D28   A 4      +
 00000002 00000002 00002D30   A 4      +
 00000002 00000002 00002D38   A 4      +
 00000002 00000002 00002EC0   A 4      +
 00000002 00000002 00002EC8   A 4      +
 00000002 00000002 00002F10   A 4      +
 00000002 00000002 00002F38   A 4      +
 00000002 00000002 00002F40   A 4      +
 00000002 00000004 00003090   A 4      +
 00000002 0000000B 00003098   A 4      +
 00000002 0000000B 000030A0   A 4      +
 00000002 00000002 000030A8   A 4      +
 00000002 00000002 000030D0   A 4      +
 00000002 00000002 000030F8   A 4      +
 00000002 00000002 00003100   A 4      +
 00000002 00000004 000033A8   A 4      +
 00000002 0000000B 000033B0   A 4      +
 00000002 0000000B 000033B8   A 4      +
 00000002 00000002 000033C0   A 4      +
                                                 Relocation Dictionary                                                     Page  207 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000033C8   A 4      +
 00000002 00000002 000033D0   A 4      +
 00000002 00000002 000033D8   A 4      +
 00000002 00000002 000033E0   A 4      +
 00000002 00000002 000033E8   A 4      +
 00000002 00000002 000033F0   A 4      +
 00000002 00000002 000033F8   A 4      +
 00000002 00000002 00003400   A 4      +
 00000002 00000002 000038A0   A 4      +
 00000002 00000002 000038A8   A 4      +
 00000002 00000002 00003920   A 4      +
 00000002 00000002 00003948   A 4      +
 00000002 00000002 00003950   A 4      +
 00000002 00000002 00003A18   A 4      +
 00000002 00000002 00003A48   A 4      +
 00000002 00000002 00003A70   A 4      +
 00000002 00000002 00003A78   A 4      +
 00000002 00000004 00003B40   A 4      +
 00000002 0000000B 00003B48   A 4      +
 00000002 0000000B 00003B50   A 4      +
 00000002 00000002 00003B58   A 4      +
 00000002 00000002 00003B60   A 4      +
 00000002 00000002 00003C68   A 4      +
 00000002 00000002 00003C90   A 4      +
 00000002 00000002 00003C98   A 4      +
 00000002 00000002 00003E70   A 4      +
 00000002 00000002 00003E78   A 4      +
 00000002 00000004 00003E80   A 4      +
 00000002 0000000B 00003E88   A 4      +
 00000002 0000000B 00003E90   A 4      +
 00000002 00000002 00003E98   A 4      +
 00000002 00000002 00003EA0   A 4      +
 00000002 00000002 00003EA8   A 4      +
 00000002 00000002 00003EB0   A 4      +
 00000002 00000002 00003EC0   A 4      +
 00000002 00000002 00004160   A 4      +
 00000002 00000002 00004188   A 4      +
 00000002 00000002 00004190   A 4      +
 00000002 00000002 00004270   A 4      +
 00000002 00000002 00004278   A 4      +
 00000002 00000004 00004280   A 4      +
 00000002 0000000B 00004288   A 4      +
 00000002 0000000B 00004290   A 4      +
 00000002 00000008 000042A0   A 4      +
 00000002 00000002 000045D8   A 4      +
 00000002 00000002 00004600   A 4      +
 00000002 00000002 00004608   A 4      +
 00000002 00000002 000046C8   A 4      +
 00000002 00000002 000046D0   A 4      +
 00000002 00000002 000046D8   A 4      +
 00000002 00000002 000046E0   A 4      +
 00000002 00000002 000046E8   A 4      +
 00000002 00000002 000046F0   A 4      +
                                                 Relocation Dictionary                                                     Page  208 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000047F8   A 4      +
 00000002 00000002 00004820   A 4      +
 00000002 00000002 00004828   A 4      +
 00000002 00000002 00004900   A 4      +
 00000002 00000002 00004908   A 4      +
 00000002 00000002 00004910   A 4      +
 00000002 00000002 00004918   A 4      +
 00000002 00000002 00004928   A 4      +
 00000002 00000004 00004938   A 4      +
 00000002 0000000B 00004940   A 4      +
 00000002 0000000B 00004948   A 4      +
 00000002 00000002 00004950   A 4      +
 00000002 00000002 00004958   A 4      +
 00000002 00000002 00004960   A 4      +
 00000002 00000002 00004968   A 4      +
 00000002 00000002 00004CA8   A 4      +
 00000002 00000002 00004CD0   A 4      +
 00000002 00000002 00004CD8   A 4      +
 00000002 00000002 00004DF8   A 4      +
 00000002 00000002 00004E28   A 4      +
 00000002 00000002 00004E50   A 4      +
 00000002 00000002 00004E58   A 4      +
 00000002 00000002 00004F68   A 4      +
 00000002 00000002 00004FA0   A 4      +
 00000002 00000002 00004FC8   A 4      +
 00000002 00000002 00004FD0   A 4      +
 00000002 00000002 000050E0   A 4      +
 00000002 00000002 00005110   A 4      +
 00000002 00000002 00005138   A 4      +
 00000002 00000002 00005140   A 4      +
 00000002 00000002 00005228   A 4      +
 00000002 00000002 00005260   A 4      +
 00000002 00000002 00005288   A 4      +
 00000002 00000002 00005290   A 4      +
 00000002 00000005 00005308   A 4      +
 00000002 0000000B 00005310   A 4      +
 00000002 00000002 00005318   A 4      +
 00000002 00000002 00005320   A 4      +
 00000002 00000009 00005328   A 4      +
 00000002 00000002 00005330   A 4      +
 00000002 00000002 00005338   A 4      +
 00000002 00000003 00005340   A 4      +
 00000002 00000002 000056A0   A 4      +
 00000002 00000002 000056A8   A 4      +
 00000002 00000002 00005700   A 4      +
 00000002 00000002 00005728   A 4      +
 00000002 00000002 00005730   A 4      +
 00000002 00000002 00005810   A 4      +
 00000002 00000002 00005818   A 4      +
 00000002 00000002 00005820   A 4      +
 00000002 00000002 00005828   A 4      +
 00000002 00000002 000058C0   A 4      +
 00000002 00000002 000058E8   A 4      +
                                                 Relocation Dictionary                                                     Page  209 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000058F0   A 4      +
 00000002 00000002 00005990   A 4      +
 00000002 00000002 00005998   A 4      +
 00000002 00000002 00005A18   A 4      +
 00000002 00000002 00005A40   A 4      +
 00000002 00000002 00005A48   A 4      +
 00000002 00000002 00005B48   A 4      +
 00000002 00000002 00005B50   A 4      +
 0000000C 0000000A 00006A9C   Q 4      +
 0000000C 0000000A 00006BBC   Q 4      +
 0000000C 0000000A 00006C7C   Q 4      +
 0000000C 0000000A 00006CA4   Q 4      +
 0000000C 0000000A 00006CCC   Q 4      +
 0000000C 0000000B 00006CD8   A 4      +
 0000000C 0000000A 00006CF4   Q 4      +
 0000000C 0000000B 00006D00   A 4      +
 0000000C 0000000A 00006D1C   Q 4      +
 0000000C 0000000B 00006D28   A 4      +
 0000000C 0000000A 00006D44   Q 4      +
 0000000C 0000000B 00006D50   A 4      +
 0000000C 0000000A 00006D6C   Q 4      +
 0000000C 0000000B 00006D78   A 4      +
 0000000C 0000000A 00006D94   Q 4      +
 0000000C 0000000B 00006DA0   A 4      +
 0000000C 0000000A 00006DBC   Q 4      +
 0000000C 0000000B 00006DC8   A 4      +
 0000000C 0000000A 00006DE4   Q 4      +
 0000000C 0000000B 00006DF0   A 4      +
 0000000C 0000000A 00006E0C   Q 4      +
 0000000C 0000000B 00006E18   A 4      +
 0000000C 0000000A 00006E34   Q 4      +
 0000000C 0000000B 00006E40   A 4      +
 0000000C 0000000A 00006E5C   Q 4      +
 0000000C 0000000B 00006E68   A 4      +
 0000000C 0000000A 00006E84   Q 4      +
 0000000C 0000000B 00006E90   A 4      +
 0000000C 0000000A 00006EAC   Q 4      +
 0000000C 0000000B 00006EB8   A 4      +
 0000000C 0000000A 00006ED4   Q 4      +
 0000000C 0000000B 00006EE0   A 4      +
 0000000C 0000000A 00006EFC   Q 4      +
 0000000C 0000000B 00006F08   A 4      +
 0000000C 0000000A 00006F24   Q 4      +
 0000000C 0000000B 00006F30   A 4      +
 0000000C 0000000A 00006F4C   Q 4      +
 0000000C 0000000B 00006F58   A 4      +
 0000000C 0000000A 00006F74   Q 4      +
 0000000C 0000000B 00006F80   A 4      +
 0000000C 0000000A 00006F9C   Q 4      +
 0000000C 0000000B 00006FA8   A 4      +
 0000000C 0000000A 00006FC4   Q 4      +
 0000000C 0000000B 00006FD0   A 4      +
 0000000C 0000000A 00006FEC   Q 4      +
                                                 Relocation Dictionary                                                     Page  210 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000000C 0000000B 00006FF8   A 4      +
 0000000C 0000000A 00007014   Q 4      +
 0000000C 0000000B 00007020   A 4      +
 0000000C 0000000A 0000703C   Q 4      +
 0000000C 0000000B 00007048   A 4      +
 0000000C 0000000A 00007064   Q 4      +
 0000000C 0000000B 00007070   A 4      +
 0000000C 0000000A 0000708C   Q 4      +
 0000000C 0000000B 00007098   A 4      +
 0000000C 0000000A 000070B4   Q 4      +
 0000000C 0000000B 000070C0   A 4      +
 0000000C 0000000A 000070DC   Q 4      +
 0000000C 0000000B 000070E8   A 4      +
 0000000C 0000000A 00007104   Q 4      +
 0000000C 0000000B 00007110   A 4      +
 0000000C 0000000A 0000712C   Q 4      +
 0000000C 0000000B 00007138   A 4      +
 0000000C 0000000A 00007154   Q 4      +
 0000000C 0000000B 00007160   A 4      +
 0000000C 0000000A 0000717C   Q 4      +
 0000000C 0000000B 00007188   A 4      +
 0000000C 0000000A 000071A4   Q 4      +
 0000000C 0000000B 000071B0   A 4      +
 0000000C 0000000A 000071CC   Q 4      +
 0000000C 0000000B 000071D8   A 4      +
 0000000C 0000000A 000071F4   Q 4      +
 0000000C 0000000B 00007200   A 4      +
 0000000C 0000000A 0000721C   Q 4      +
 0000000C 0000000B 00007228   A 4      +
 0000000C 0000000A 00007244   Q 4      +
 0000000C 0000000B 00007250   A 4      +
 0000000C 0000000A 0000726C   Q 4      +
 0000000C 0000000B 00007278   A 4      +
 0000000C 0000000A 00007294   Q 4      +
 0000000C 0000000B 000072A0   A 4      +
 0000000C 0000000A 000072BC   Q 4      +
 0000000C 0000000B 000072C8   A 4      +
 0000000C 0000000A 000072E4   Q 4      +
 0000000C 0000000B 000072F0   A 4      +
 0000000C 0000000A 0000730C   Q 4      +
 0000000C 0000000B 00007318   A 4      +
 0000000C 0000000A 00007334   Q 4      +
 0000000C 0000000B 00007340   A 4      +
 0000000C 0000000A 0000735C   Q 4      +
 0000000C 0000000B 00007368   A 4      +
 0000000C 0000000A 00007384   Q 4      +
 0000000C 0000000B 00007390   A 4      +
 0000000C 0000000A 000073AC   Q 4      +
 0000000C 0000000B 000073B8   A 4      +
 0000000C 0000000A 000073D4   Q 4      +
 0000000C 0000000B 000073E0   A 4      +
 0000000C 0000000A 000073FC   Q 4      +
 0000000C 0000000B 00007408   A 4      +
                                                 Relocation Dictionary                                                     Page  211 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000000C 0000000A 00007424   Q 4      +
 0000000C 0000000B 00007430   A 4      +
 0000000C 0000000A 0000744C   Q 4      +
 0000000C 0000000B 00007458   A 4      +
 0000000C 0000000A 00007474   Q 4      +
 0000000C 0000000B 00007480   A 4      +
 0000000C 0000000A 0000749C   Q 4      +
 0000000C 0000000B 000074A8   A 4      +
 0000000C 0000000A 000074C4   Q 4      +
 0000000C 0000000B 000074D0   A 4      +
 0000000C 0000000A 000074EC   Q 4      +
 0000000C 0000000B 000074F8   A 4      +
 0000000C 0000000A 00007514   Q 4      +
 0000000C 0000000B 00007520   A 4      +
 0000000C 0000000A 0000753C   Q 4      +
 0000000C 0000000B 00007548   A 4      +
 0000000C 0000000A 00007564   Q 4      +
 0000000C 0000000B 00007570   A 4      +
 0000000C 0000000A 0000758C   Q 4      +
 0000000C 0000000B 00007598   A 4      +
 0000000C 0000000A 000075B4   Q 4      +
 0000000C 0000000B 000075C0   A 4      +
 0000000C 0000000A 000075DC   Q 4      +
 0000000C 0000000B 000075E8   A 4      +
 0000000C 0000000A 00007604   Q 4      +
 0000000C 0000000B 00007610   A 4      +
 0000000C 0000000A 0000762C   Q 4      +
 0000000C 0000000B 00007638   A 4      +
 0000000C 0000000A 00007654   Q 4      +
 0000000C 0000000B 00007660   A 4      +
 0000000C 0000000A 0000767C   Q 4      +
 0000000C 0000000B 00007688   A 4      +
 0000000C 0000000A 000076A4   Q 4      +
 0000000C 0000000B 000076B0   A 4      +
 0000000C 0000000A 000076CC   Q 4      +
 0000000C 0000000B 000076D8   A 4      +
 0000000C 0000000A 000076F4   Q 4      +
 0000000C 0000000B 00007700   A 4      +
 0000000C 0000000A 0000771C   Q 4      +
 0000000C 0000000B 00007728   A 4      +
 0000000C 0000000A 00007744   Q 4      +
 0000000C 0000000B 00007750   A 4      +
 0000000C 0000000A 0000776C   Q 4      +
 0000000C 0000000B 00007778   A 4      +
 0000000C 0000000A 00007794   Q 4      +
 0000000C 0000000B 000077A0   A 4      +
 0000000C 0000000A 000077BC   Q 4      +
 0000000C 0000000B 000077C8   A 4      +
 0000000C 0000000A 000077E4   Q 4      +
 0000000C 0000000B 000077F0   A 4      +
 0000000C 0000000A 0000780C   Q 4      +
 0000000C 0000000B 00007818   A 4      +
 0000000C 0000000A 00007834   Q 4      +
                                                 Relocation Dictionary                                                     Page  212 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000000C 0000000B 00007840   A 4      +
 0000000C 0000000A 0000785C   Q 4      +
 0000000C 0000000B 00007868   A 4      +
 0000000C 0000000A 00007884   Q 4      +
 0000000C 0000000B 00007890   A 4      +
 0000000C 0000000A 000078AC   Q 4      +
 0000000C 0000000B 000078B8   A 4      +
 0000000C 0000000A 000078D4   Q 4      +
 0000000C 0000000B 000078E0   A 4      +
 0000000C 0000000A 000078FC   Q 4      +
 0000000C 0000000B 00007908   A 4      +
 0000000C 0000000A 00007924   Q 4      +
 0000000C 0000000B 00007930   A 4      +
 0000000C 0000000A 0000794C   Q 4      +
 0000000C 0000000B 00007958   A 4      +
 0000000C 0000000A 00007974   Q 4      +
 0000000C 0000000B 00007980   A 4      +
 0000000C 0000000A 0000799C   Q 4      +
 0000000C 0000000B 000079A8   A 4      +
 0000000C 0000000A 000079C4   Q 4      +
 0000000C 0000000B 000079D0   A 4      +
 0000000C 0000000A 000079EC   Q 4      +
 0000000C 0000000B 000079F8   A 4      +
 0000000C 0000000A 00007A14   Q 4      +
 0000000C 0000000B 00007A20   A 4      +
 0000000C 0000000A 00007A3C   Q 4      +
 0000000C 0000000B 00007A48   A 4      +
 0000000C 0000000A 00007A64   Q 4      +
 0000000C 0000000B 00007A70   A 4      +
 0000000C 0000000A 00007A8C   Q 4      +
 0000000C 0000000B 00007A98   A 4      +
 0000000C 0000000A 00007AB4   Q 4      +
 0000000C 0000000B 00007AC0   A 4      +
                                                 DSECT Cross Reference                                                     Page  213 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#append
         000000B0  FFFFFFEE  02089
@AUTO#available
         000000A8  FFFFFFF1  01583
@AUTO#clear_env
         000000A8  FFFFFFCD  08483
@AUTO#compress_fragment
         000000AC  FFFFFFDA  05555
@AUTO#decompress_all_tags
         000000B1  FFFFFFD6  06406
@AUTO#emit_copy
         000000A8  FFFFFFE0  04096
@AUTO#emit_copy_less_than64
         000000AC  FFFFFFE1  03939
@AUTO#emit_literal
         000000AC  FFFFFFE2  03705
@AUTO#exit_snappy_decompressor
         000000A8  FFFFFFD8  05764
@AUTO#find_lsb_set_non_zero
         000000A8  FFFFFFF5  01057
@AUTO#find_match_length
         000000AC  FFFFFFDD  04650
@AUTO#get_eight_bytes_at
         000000A8  FFFFFFDC  04725
@AUTO#get_hash_table
         000000AC  FFFFFFDE  04425
@AUTO#get_unaligned32
         000000AC  FFFFFFFC  00459
@AUTO#get_unaligned64
         000000B0  FFFFFFFD  00358
@AUTO#get_u32_at_offset
         000000A8  FFFFFFDB  04876
@AUTO#hash
         000000A8  FFFFFFE4  03381
@AUTO#hash_bytes
         000000AC  FFFFFFE5  03266
@AUTO#incremental_copy
         000000A8  FFFFFFEA  02509
@AUTO#incremental_copy_fast_path
         000000A8  FFFFFFE9  02653
@AUTO#init_snappy_decompressor
         000000A8  FFFFFFD9  05658
@AUTO#internal_uncompress
         000000D8  FFFFFFD4  07016
@AUTO#is_little_endian
         000000A8  FFFFFFF7  00886
@AUTO#log2_floor
         000000A8  FFFFFFF6  00970
@AUTO#n_bytes_after_addr
         000000A8  FFFFFFF2  01512
@AUTO#peek
         000000A8  FFFFFFF0  01719
@AUTO#put_unaligned16
                                                 DSECT Cross Reference                                                     Page  214 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000A8  FFFFFFF9  00678
@AUTO#put_unaligned32
         000000A8  FFFFFFFA  00605
@AUTO#put_unaligned64
         000000A8  FFFFFFFB  00532
@AUTO#rd_free
         000000A8  FFFFFFFE  00258
@AUTO#rd_kafka_snappy_compress
         000000C8  FFFFFFD1  07731
@AUTO#rd_kafka_snappy_compress_iov
         000000E0  FFFFFFD2  07596
@AUTO#rd_kafka_snappy_free_env
         000000A8  FFFFFFCA  08909
@AUTO#rd_kafka_snappy_init_env
         000000A8  FFFFFFCB  08776
@AUTO#rd_kafka_snappy_init_env_sg
         000000A8  FFFFFFCC  08652
@AUTO#rd_kafka_snappy_java_uncompress
         000000B4  FFFFFFCE  08399
@AUTO#rd_kafka_snappy_max_compressed_length
         000000A8  FFFFFFE3  03466
@AUTO#rd_kafka_snappy_uncompress
         000000B8  FFFFFFCF  07984
@AUTO#rd_kafka_snappy_uncompress_iov
         000000E0  FFFFFFD0  07864
@AUTO#rd_kafka_snappy_uncompressed_length
         000000AC  FFFFFFDF  04227
@AUTO#rd_malloc
         000000A8  FFFFFFFF  00155
@AUTO#read_uncompressed_length
         000000B1  FFFFFFD7  05956
@AUTO#refill_tag
         000000B9  FFFFFFD5  06811
@AUTO#sink_peek
         000000A8  FFFFFFED  02215
@AUTO#skip
         000000A8  FFFFFFEF  01865
@AUTO#sn_compress
         000000BD  FFFFFFD3  07440
@AUTO#unaligned_copy64
         000000A8  FFFFFFF8  00813
@AUTO#varint_encode32
         000000A8  FFFFFFF3  01440
@AUTO#varint_parse32_with_limit
         000000AC  FFFFFFF4  01248
@AUTO#writer_append
         000000AC  FFFFFFE7  03045
@AUTO#writer_append_from_self
         000000AC  FFFFFFE8  02885
@AUTO#writer_check_length
         000000A8  FFFFFFEB  02375
@AUTO#writer_set_expected_length
         000000A8  FFFFFFEC  02290
                                                 DSECT Cross Reference                                                     Page  215 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#writer_try_fast_append
         000000AC  FFFFFFE6  03189
                                          Macro and Copy Code Source Summary                                               Page  216 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  dccextrn
                                                      Using Map                                                            Page  217 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    91  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00108    117 @REGION_1087_1,12
   150  00000168  00000002 DROP                                           12              12
   218  000001FE  00000002 USING  ORDINARY    000001C0 00001000 00000002  12 000A8    225 @REGION_1089_1,12
   253  00000270  00000002 DROP                                           12              12
   321  0000030E  00000002 USING  ORDINARY    000002D0 00001000 00000002  12 00000        @REGION_1930_1,12
   353  00000374  00000002 DROP                                           12              12
   422  0000040E  00000002 USING  ORDINARY    000003D0 00001000 00000002  12 00000        @REGION_1931_1,12
   454  00000474  00000002 DROP                                           12              12
   741  00000696  00000002 USING  ORDINARY    00000658 00001000 00000002  12 00098    764 @REGION_1935_1,12
   808  00000738  00000002 DROP                                           12              12
   938  00000812  00000002 USING  ORDINARY    00000808 00001000 00000002  12 00032    945 @REGION_1937_1,12
   965  0000084C  00000002 DROP                                           12              12
  1022  000008BA  00000002 USING  ORDINARY    000008B0 00001000 00000002  12 00034   1029 @REGION_1938_1,12
  1052  000008F6  00000002 DROP                                           12              12
  1109  0000096A  00000002 USING  ORDINARY    00000960 00001000 00000002  12 00134   1224 @REGION_1940_1,12
  1243  00000AA2  00000002 DROP                                           12              12
  1303  00000B0A  00000002 USING  ORDINARY    00000B00 00001000 00000002  12 00156   1390 @REGION_1941_1,12
  1435  00000C68  00000002 DROP                                           12              12
  1646  00000DFE  00000002 USING  ORDINARY    00000DC0 00001000 00000002  12 000E0   1680 @REGION_1944_1,12
  1714  00000EE8  00000002 DROP                                           12              12
  1782  00000F7E  00000002 USING  ORDINARY    00000F40 00001000 00000002  12 00148   1825 @REGION_1945_1,12
  1860  00001090  00000002 DROP                                           12              12
  1928  00001126  00000002 USING  ORDINARY    000010E8 00001000 00000002  12 001F2   2062 @REGION_1946_1,12
  2084  00001330  00000002 DROP                                           12              12
  2153  000013C6  00000002 USING  ORDINARY    00001388 00001000 00000002  12 000C4   2182 @REGION_1947_1,12
  2210  00001494  00000002 DROP                                           12              12
  2342  0000159A  00000002 USING  ORDINARY    00001590 00001000 00000002  12 0003C   2358 @REGION_1949_1,12
  2370  000015E0  00000002 DROP                                           12              12
  2438  0000167E  00000002 USING  ORDINARY    00001640 00001000 00000002  12 00120   2477 @REGION_1950_1,12
  2504  00001768  00000002 DROP                                           12              12
  2572  0000180E  00000002 USING  ORDINARY    000017D0 00001000 00000002  12 000D0   2626 @REGION_1951_1,12
  2648  000018F0  00000002 DROP                                           12              12
  2716  00001996  00000002 USING  ORDINARY    00001958 00001000 00000002  12 00200   2844 @REGION_1952_1,12
  2880  00001BA0  00000002 DROP                                           12              12
  2949  00001C3E  00000002 USING  ORDINARY    00001C00 00001000 00000002  12 00130   3011 @REGION_1953_1,12
  3040  00001D78  00000002 DROP                                           12              12
  3109  00001E1E  00000002 USING  ORDINARY    00001DE0 00001000 00000002  12 000EC   3155 @REGION_1954_1,12
  3184  00001F14  00000002 DROP                                           12              12
  3330  0000202E  00000002 USING  ORDINARY    00001FF0 00001000 00000002  12 000D8   3347 @REGION_1956_1,12
  3376  000020D0  00000002 DROP                                           12              12
  3436  00002152  00000002 USING  ORDINARY    00002148 00001000 00000002  12 00038   3444 @REGION_348_1,12
  3460  00002188  00000002 DROP                                           12              12
  3529  00002226  00000002 USING  ORDINARY    000021E8 00001000 00000002  12 001FE   3674 @REGION_1957_1,12
  3700  0000242E  00000002 DROP                                           12              12
  3771  000024CE  00000002 USING  ORDINARY    00002490 00001000 00000002  12 00200   3904 @REGION_1958_1,12
  3934  000026DC  00000002 DROP                                           12              12
  4003  00002776  00000002 USING  ORDINARY    00002738 00001000 00000002  12 000BC   4066 @REGION_1959_1,12
  4091  00002862  00000002 DROP                                           12              12
  4162  00002916  00000002 USING  ORDINARY    000028D8 00001000 00000002  12 000B4   4191 @REGION_347_1,12
  4221  000029D4  00000002 DROP                                           12              12
  4291  00002A6E  00000002 USING  ORDINARY    00002A30 00001000 00000002  12 0018C   4397 @REGION_1960_1,12
                                                      Using Map                                                            Page  218 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  4420  00002C04  00000002 DROP                                           12              12
  4489  00002CA6  00000002 USING  ORDINARY    00002C68 00001000 00000002  12 001BE   4620 @REGION_1961_1,12
  4645  00002E72  00000002 DROP                                           12              12
  4788  00002F8E  00000002 USING  ORDINARY    00002F50 00001000 00000002  12 00158   4840 @REGION_1963_1,12
  4871  000030B0  00000002 DROP                                           12              12
  4939  0000314E  00000002 USING  ORDINARY    00003110 00001000 00000002  12 006F0   5521 @REGION_1964_1,12
  5550  0000384C  00000002 DROP                                           12              12
  5721  0000399E  00000002 USING  ORDINARY    00003960 00001000 00000002  12 000B8   5731 @REGION_1966_1,12
  5759  00003A20  00000002 DROP                                           12              12
  5827  00003AC6  00000002 USING  ORDINARY    00003A88 00001000 00000002  12 00172   5926 @REGION_1967_1,12
  5951  00003C42  00000002 DROP                                           12              12
  6024  00003CE6  00000002 USING  ORDINARY    00003CA8 00001000 00000002  12 00458   6379 @REGION_1969_1,12
  6401  00004148  00000002 DROP                                           12              12
  6486  000041DE  00000002 USING  ORDINARY    000041A0 00001000 00000002  12 003CE   6775 @REGION_1968_1,12
  6806  000045B6  00000002 DROP                                           12              12
  6887  00004656  00000002 USING  ORDINARY    00004618 00001000 00000002  12 0017A   6986 @REGION_1970_1,12
  7011  000047DA  00000002 DROP                                           12              12
  7082  00004876  00000002 USING  ORDINARY    00004838 00001000 00000002  12 003FC   7406 @REGION_1971_1,12
  7435  00004C7C  00000002 DROP                                           12              12
  7524  00004D26  00000002 USING  ORDINARY    00004CE8 00001000 00000002  12 00110   7557 @REGION_346_1,12
  7591  00004E00  00000002 DROP                                           12              12
  7666  00004EA6  00000002 USING  ORDINARY    00004E68 00001000 00000002  12 00100   7698 @REGION_1972_1,12
  7726  00004F70  00000002 DROP                                           12              12
  7798  0000501E  00000002 USING  ORDINARY    00004FE0 00001000 00000002  12 00100   7831 @REGION_343_1,12
  7859  000050E8  00000002 DROP                                           12              12
  7931  0000518E  00000002 USING  ORDINARY    00005150 00001000 00000002  12 000D8   7951 @REGION_344_1,12
  7979  00005230  00000002 DROP                                           12              12
  8050  000052DE  00000002 USING  ORDINARY    000052A0 00001000 00000002  12 00376   8369 @REGION_345_1,12
  8394  0000565E  00000002 DROP                                           12              12
  8548  0000577E  00000002 USING  ORDINARY    00005740 00001000 00000002  12 0010E   8620 @REGION_341_1,12
  8647  00005896  00000002 DROP                                           12              12
  8717  0000593E  00000002 USING  ORDINARY    00005900 00001000 00000002  12 000A4   8742 @REGION_340_1,12
  8771  000059EC  00000002 DROP                                           12              12
  8841  00005A96  00000002 USING  ORDINARY    00005A58 00001000 00000002  12 000F8   8875 @REGION_342_1,12
  8904  00005B58  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  219 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  SNAPPY   ..\asg\asm\snappy.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 12.43.50 Stop Time: 12.43.50 Processor Time: 00.00.00.0690
Return Code 000
