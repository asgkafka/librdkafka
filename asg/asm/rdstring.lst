                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdstring.obj ../asg/asm/rdstring.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdstring.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
@@ZARCH#  WX 00000001                              00
@RDSTRING SD 00000002 00000000 00001CB0            07  @CODE
STRC@CMP  ER 00000003                                  STRCASECMP
malloc    ER 00000004                                  MALLOC
fprintf   ER 00000005                                  FPRINTF
realloc   ER 00000006                                  REALLOC
rd_unittest_assert_on_failure
          XD 00000007 00000003 00000000                RD_UNITTEST_ASSERT_ON_FAILURE
@@@2LOWR  ER 00000008                                  ___TOLOWER
@@CRNTLC  XD 00000009 00000003 00000000                _$CURRENT$RUNE$LOCALE
snprintf  ER 0000000A                                  SNPRINTF
strstr    ER 0000000B                                  STRSTR
@@ASSERT  ER 0000000C                                  __ASSERT
@@STDERP  XD 0000000D 00000003 00000000                __STDERRP
free      ER 0000000E                                  FREE
@rdstring&
          XD 0000000F 00000007 00000200                @@STATIC
@rdstring SD 00000010 00001CB0 00000474            07  @DATA
@@STDERP  ER 00000011                                  @E__STDERRP
@@CRNTLC  ER 00000012                                  @E_$CURRENT$RUNE$LOCALE
rd_unittest_assert_on_failure
          ER 00000013                                  @ERD_UNITTEST_ASSERT_ON_FAILURE
rdstring: SD 00000014 00002128 00000230            07  @@INIT@
@@ALLOCA  ER 00000015
rd_string_render
          LD          00000448          00000002   00  RD_STRING_RENDER
rd_strtup_destroy
          LD          00000980          00000002   00  RD_STRTUP_DESTROY
rd_strtup_free
          LD          00000A90          00000002   00  RD_STRTUP_FREE
rd_strtup_new0
          LD          00000BA0          00000002   00  RD_STRTUP_NEW0
rd_strtup_new
          LD          00000DD8          00000002   00  RD_STRTUP_NEW
rd_strtup_dup
          LD          00000F00          00000002   00  RD_STRTUP_DUP
rd_strtup_list_copy
          LD          00001020          00000002   00  RD_STRTUP_LIST_COPY
rd_flags2str
          LD          00001130          00000002   00  RD_FLAGS2STR
rd_string_hash
          LD          00001350          00000002   00  RD_STRING_HASH
rd_strcmp LD          00001430          00000002   00  RD_STRCMP
_rd_strcasestr
          LD          00001510          00000002   00  _RD_STRCASESTR
unittest_string
          LD          00001C08          00000002   00  UNITTEST_STRING
                                                                                                                           Page    4 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:36:21 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDSTRING'
00000000                00000000 00001CB0     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdstring'
                                              18 strcasecmp ALIAS C'STRC@CMP'
                                              19          EXTRN strcasecmp
                                              20 malloc   ALIAS C'malloc'
                                              21          EXTRN malloc
                                              22 fprintf  ALIAS C'fprintf'
                                              23          EXTRN fprintf
                                              24 realloc  ALIAS C'realloc'
                                              25          EXTRN realloc
                                              26 rd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A2859*
                                                                9A36D96956D86818993A49985'
                                              27 rd_unittest_assert_on_failure DXD   0F
                                              28 ___tolower ALIAS C'@@@2LOWR'
                                              29          EXTRN ___tolower
                                              30 _$Current$Rune$Locale ALIAS C'@@CRNTLC'
                                              31 _$Current$Rune$Locale DXD   0F
                                              32 snprintf ALIAS C'snprintf'
                                              33          EXTRN snprintf
                                              34 strstr   ALIAS C'strstr'
                                              35          EXTRN strstr
                                              36 __assert ALIAS C'@@ASSERT'
                                              37          EXTRN __assert
                                              38 __stderrp ALIAS C'@@STDERP'
                                              39 __stderrp DXD   0F
                                              40 free     ALIAS C'free'
                                              41          EXTRN free
                                              42 *
                                              43 *
                                              44 *
                                              45 * ....... start of rd_malloc
00000000                                      46 @LNAME752 DS   0H
00000000 00000009                             47          DC    X'00000009'
00000004 99846D9481939396                     48          DC    C'rd_malloc'
0000000D 00                                   49          DC    X'00'
                                              50 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                              51          macro
                                              52          dccextrn &m
                                              53          gblc    &$dccext(1000)
                                              54          gbla    &$dccexti
                                              55          lcla    &i
                                              56 &$dccext(&$dccexti+1) setc    '&m'
                                              57 &i       seta    1
                                              58 .loop    aif    (&i gt &$dccexti).around
                                              59          aif    ('&$dccext(&i)' eq '&m').getout
                                              60 &i       seta    &i+1
                                              61          ago     .loop
                                              62 .around  anop
                                              63 &$dccexti seta &$dccexti+1
                                              64          extrn  &m
                                              65 .getout  anop
                                              66          mend
00000010                                      67+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               68+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   69+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                             70+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     71+         dc ad(@PER_752)                                                02-DCCCA
00000020 00000000000000D0                     72+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     73+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     74+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   75+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   76+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   77+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   78+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   79+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               80+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     81+         dc ad(@LNAME752)                                               02-DCCCA
00000048                                      82+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     83+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     84+         dc ad(0)                                                       02-DCCCA
00000058                                      85+         ds    0d                                                       01-DCCPR
00000058                                      86+rd_malloc ds   0d                                                       01-DCCPR
00000058                                      87+@REGION_752_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008     88+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     89+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     90+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            91+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     92+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     93+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     94+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     95+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      96+@PER_752 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     97+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     98+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            99+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                           100+         lgr   12,15               set base reg                         01-DCCPR
                        00000058             101+         using @REGION_752_1,12                                         01-DCCPR
                                             102 * ******* End of Prologue
                                                                                                                           Page    6 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             103 * *
                                             104 * ***      void *p = malloc(sz);
00000096 E3F0 1000 0004          00000000    105          LG    15,0(0,1)   ; sz
0000009C E3F0 D0B0 0024          000000B0    106          STG   15,176(0,13)
000000A2 4110 D0B0               000000B0    107          LA    1,176(0,13)
000000A6 E3F0 C0F0 0004          00000148    108          LG    15,@lit_752_0 ; malloc
000000AC                                     109 @@gen_label0 DS    0H
000000AC 05EF                                110          BALR  14,15
000000AE                                     111 @@gen_label1 DS    0H
000000AE B904 002F                           112          LGR   2,15
                                             113 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             114 * ka\\src\\rd.h", 128, "p"));
000000B2 B902 00F2                           115          LTGR  15,2
000000B6 4770 C09A               000000F2    116          BNZ   @L34
000000BA                                     117 @L33     DS    0H
000000BA E3F0 C108 0004          00000160    118          LG    15,@lit_752_1
000000C0 41F0 F00A               0000000A    119          LA    15,10(0,15)
000000C4 E3F0 D0B0 0024          000000B0    120          STG   15,176(0,13)
000000CA E3F0 C100 0004          00000158    121          LG    15,@lit_752_2
000000D0 E3F0 D0B8 0024          000000B8    122          STG   15,184(0,13)
000000D6 E548 D0C0 0080          000000C0    123          MVGHI 192(13),128
000000DC 41F0 F020               00000020    124          LA    15,32(0,15)
000000E0 E3F0 D0C8 0024          000000C8    125          STG   15,200(0,13)
000000E6 4110 D0B0               000000B0    126          LA    1,176(0,13)
000000EA E3F0 C0F8 0004          00000150    127          LG    15,@lit_752_3 ; __assert
000000F0                                     128 @@gen_label3 DS    0H
000000F0 05EF                                129          BALR  14,15
000000F2                                     130 @@gen_label4 DS    0H
000000F2                                     131 @L34     DS    0H
                                             132 * ***      return p;
000000F2 B904 00F2                           133          LGR   15,2
                                             134 * ***   }
                                             135 * * **** Start of Epilogue
                                             136          DCCEPIL
000000F6                                     137+         ds 0h                                                          01-DCCEP
                                             138+* Epilog
000000F6 D707 D088 D088 00000088 00000088    139+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000FC E3D0 D080 0004          00000080    140+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000102 E3C0 D090 0004          00000090    141+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000108 E3B0 C018 0004          00000018    142+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000010E E3C0 B010 0021          00000010    143+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000114 E3E0 D008 0004          00000008    144+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000011A EB1C D020 0004          00000020    145+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000120 078E                                146+         bcr 8,14                if same dsab, just return              01-DCCEP
00000122 E3F0 D010 0024          00000010    147+         stg 15,16(0,13)         save return code                       01-DCCEP
00000128 E300 D018 0024          00000018    148+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000012E E3F0 D090 0004          00000090    149+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000134 E3F0 F018 0004          00000018    150+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000013A 47F0 F040               00000040    151+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             152+* End of Epilog
                                             153 * * **** End of Epilogue
00000140                                     154          DS    0D
                                                                                                                           Page    7 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000140 000000D0                            155 @FRAMESIZE_752 DC F'208'
00000144 00000000
00000148 0000000000000000                    156 @lit_752_0 DC  AD(malloc)
00000150 0000000000000000                    157 @lit_752_3 DC  AD(__assert)
00000158 0000000000001EF6                    158 @lit_752_2 DC  AD(@strings@)
00000160 0000000000001CB0                    159 @lit_752_1 DC  AD(@DATA)
                                             160          DROP  12
                                             161 *
                                             162 *   DSECT for automatic variables in "rd_malloc"
                                             163 *      (FUNCTION #752)
                                             164 *
00000000                00000000 000000A8    165 @AUTO#rd_malloc DSECT
00000000                                     166          DS    XL168
                                             167 *
00000168                00000000 00001CB0    168 @CODE    CSECT
                                             169 *
                                             170 *
                                             171 *
                                             172 * ....... start of rd_realloc
00000168                                     173 @LNAME753 DS   0H
00000168 0000000A                            174          DC    X'0000000A'
0000016C 99846D9985819393                    175          DC    C'rd_realloc'
00000176 00                                  176          DC    X'00'
                                             177 rd_realloc DCCPRLG CINDEX=753,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME753
                                             178          macro
                                             179          dccextrn &m
                                             180          gblc    &$dccext(1000)
                                             181          gbla    &$dccexti
                                             182          lcla    &i
                                             183 &$dccext(&$dccexti+1) setc    '&m'
                                             184 &i       seta    1
                                             185 .loop    aif    (&i gt &$dccexti).around
                                             186          aif    ('&$dccext(&i)' eq '&m').getout
                                             187 &i       seta    &i+1
                                             188          ago     .loop
                                             189 .around  anop
                                             190 &$dccexti seta &$dccexti+1
                                             191          extrn  &m
                                             192 .getout  anop
                                             193          mend
00000178                                     194+$eye0005    ds    0d                                                    02-DCCCA
00000178 C4C3C3                              195+         dc cl3'DCC'                                                    02-DCCCA
0000017B 01                                  196+         dc xl1'01' format one                                          02-DCCCA
0000017C 00000000                            197+         dc a(0)                                                        02-DCCCA
00000180 00000000000001EA                    198+         dc ad(@PER_753)                                                02-DCCCA
00000188 00000000000000D0                    199+         dc ad(208)                                                     02-DCCCA
00000190 0000000000000000                    200+         dc ad(0)                                                       02-DCCCA
00000198 0000000000001000                    201+         dc ad(4096)                                                    02-DCCCA
000001A0 20                                  202+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A1 03                                  203+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001A2 03                                  204+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000001A3 08                                  205+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001A4 00                                  206+         dc bl.8'00000000'                                              02-DCCCA
000001A5 000000                              207+         dc al3(0)                                                      02-DCCCA
000001A8 0000000000000168                    208+         dc ad(@LNAME753)                                               02-DCCCA
000001B0                                     209+         ds 0d                                                          02-DCCCA
000001B0 0000000000000178                    210+         dc ad($eye0005)                                                02-DCCCA
000001B8 0000000000000000                    211+         dc ad(0)                                                       02-DCCCA
000001C0                                     212+         ds    0d                                                       01-DCCPR
000001C0                                     213+rd_realloc ds  0d                                                       01-DCCPR
000001C0                                     214+@REGION_753_1 ds 0h                                                     01-DCCPR
000001C0 EBEC D008 0024          00000008    215+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001C6 E3E0 D088 0004          00000088    216+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001CC E3C0 D090 0004          00000090    217+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001D2 B904 002E                           218+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001D6 E3B0 C018 0004          00000018    219+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001DC A7EB 00D0               000000D0    220+         aghi  14,208              increase by frame size               01-DCCPR
000001E0 E3E0 C020 0021          00000020    221+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001E6 4720 B020               00000020    222+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001EA                                     223+@PER_753 ds    0h                                                       01-DCCPR
000001EA EBDE 2080 0024          00000080    224+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F0 E3C0 2090 0024          00000090    225+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001F6 B904 00D2                           226+         lgr   13,2                set real frame pointer               01-DCCPR
000001FA B904 00CF                           227+         lgr   12,15               set base reg                         01-DCCPR
                        000001C0             228+         using @REGION_753_1,12                                         01-DCCPR
                                             229 * ******* End of Prologue
                                             230 * *
                                             231 * ***      void *p = realloc(ptr, sz);
000001FE E3F0 1000 0004          00000000    232          LG    15,0(0,1)   ; ptr
00000204 E3F0 D0B0 0024          000000B0    233          STG   15,176(0,13)
0000020A E3F0 1008 0004          00000008    234          LG    15,8(0,1)   ; sz
00000210 E3F0 D0B8 0024          000000B8    235          STG   15,184(0,13)
00000216 4110 D0B0               000000B0    236          LA    1,176(0,13)
0000021A E3F0 C100 0004          000002C0    237          LG    15,@lit_753_5 ; realloc
00000220                                     238 @@gen_label5 DS    0H
00000220 05EF                                239          BALR  14,15
00000222                                     240 @@gen_label6 DS    0H
00000222 B904 002F                           241          LGR   2,15
                                             242 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             243 * ka\\src\\rd.h", 134, "p"));
00000226 B902 00F2                           244          LTGR  15,2
0000022A 4770 C0A6               00000266    245          BNZ   @L36
0000022E                                     246 @L35     DS    0H
0000022E E3F0 C118 0004          000002D8    247          LG    15,@lit_753_6
00000234 41F0 F014               00000014    248          LA    15,20(0,15)
00000238 E3F0 D0B0 0024          000000B0    249          STG   15,176(0,13)
0000023E E3F0 C110 0004          000002D0    250          LG    15,@lit_753_7
00000244 E3F0 D0B8 0024          000000B8    251          STG   15,184(0,13)
0000024A E548 D0C0 0086          000000C0    252          MVGHI 192(13),134
00000250 41F0 F020               00000020    253          LA    15,32(0,15)
00000254 E3F0 D0C8 0024          000000C8    254          STG   15,200(0,13)
0000025A 4110 D0B0               000000B0    255          LA    1,176(0,13)
0000025E E3F0 C108 0004          000002C8    256          LG    15,@lit_753_8 ; __assert
                                                                                                                           Page    9 
  Active Usings: @REGION_753_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000264                                     257 @@gen_label8 DS    0H
00000264 05EF                                258          BALR  14,15
00000266                                     259 @@gen_label9 DS    0H
00000266                                     260 @L36     DS    0H
                                             261 * ***      return p;
00000266 B904 00F2                           262          LGR   15,2
                                             263 * ***   }
                                             264 * * **** Start of Epilogue
                                             265          DCCEPIL
0000026A                                     266+         ds 0h                                                          01-DCCEP
                                             267+* Epilog
0000026A D707 D088 D088 00000088 00000088    268+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000270 E3D0 D080 0004          00000080    269+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000276 E3C0 D090 0004          00000090    270+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000027C E3B0 C018 0004          00000018    271+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000282 E3C0 B010 0021          00000010    272+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000288 E3E0 D008 0004          00000008    273+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000028E EB1C D020 0004          00000020    274+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000294 078E                                275+         bcr 8,14                if same dsab, just return              01-DCCEP
00000296 E3F0 D010 0024          00000010    276+         stg 15,16(0,13)         save return code                       01-DCCEP
0000029C E300 D018 0024          00000018    277+         stg 0,24(0,13)          save more return code                  01-DCCEP
000002A2 E3F0 D090 0004          00000090    278+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000002A8 E3F0 F018 0004          00000018    279+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000002AE 47F0 F040               00000040    280+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             281+* End of Epilog
                                             282 * * **** End of Epilogue
000002B8                                     283          DS    0D
000002B8 000000D0                            284 @FRAMESIZE_753 DC F'208'
000002BC 00000000
000002C0 0000000000000000                    285 @lit_753_5 DC  AD(realloc)
000002C8 0000000000000000                    286 @lit_753_8 DC  AD(__assert)
000002D0 0000000000001EF6                    287 @lit_753_7 DC  AD(@strings@)
000002D8 0000000000001CB0                    288 @lit_753_6 DC  AD(@DATA)
                                             289          DROP  12
                                             290 *
                                             291 *   DSECT for automatic variables in "rd_realloc"
                                             292 *      (FUNCTION #753)
                                             293 *
00000000                00000000 000000A8    294 @AUTO#rd_realloc DSECT
00000000                                     295          DS    XL168
                                             296 *
000002E0                00000000 00001CB0    297 @CODE    CSECT
                                             298 *
                                             299 *
                                             300 *
                                             301 * ....... start of rd_free
000002E0                                     302 @LNAME754 DS   0H
000002E0 00000007                            303          DC    X'00000007'
000002E4 99846D86998585                      304          DC    C'rd_free'
000002EB 00                                  305          DC    X'00'
                                             306 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             307          macro
                                             308          dccextrn &m
                                             309          gblc    &$dccext(1000)
                                             310          gbla    &$dccexti
                                             311          lcla    &i
                                             312 &$dccext(&$dccexti+1) setc    '&m'
                                             313 &i       seta    1
                                             314 .loop    aif    (&i gt &$dccexti).around
                                             315          aif    ('&$dccext(&i)' eq '&m').getout
                                             316 &i       seta    &i+1
                                             317          ago     .loop
                                             318 .around  anop
                                             319 &$dccexti seta &$dccexti+1
                                             320          extrn  &m
                                             321 .getout  anop
                                             322          mend
000002F0                                     323+$eye0008    ds    0d                                                    02-DCCCA
000002F0 C4C3C3                              324+         dc cl3'DCC'                                                    02-DCCCA
000002F3 01                                  325+         dc xl1'01' format one                                          02-DCCCA
000002F4 00000000                            326+         dc a(0)                                                        02-DCCCA
000002F8 0000000000000362                    327+         dc ad(@PER_754)                                                02-DCCCA
00000300 00000000000000B0                    328+         dc ad(176)                                                     02-DCCCA
00000308 0000000000000000                    329+         dc ad(0)                                                       02-DCCCA
00000310 0000000000001000                    330+         dc ad(4096)                                                    02-DCCCA
00000318 20                                  331+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000319 03                                  332+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000031A 03                                  333+         dc al1(3)                                                      02-DCCCA
0000031B 08                                  334+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000031C 00                                  335+         dc bl.8'00000000'                                              02-DCCCA
0000031D 000000                              336+         dc al3(0)                                                      02-DCCCA
00000320 00000000000002E0                    337+         dc ad(@LNAME754)                                               02-DCCCA
00000328                                     338+         ds 0d                                                          02-DCCCA
00000328 00000000000002F0                    339+         dc ad($eye0008)                                                02-DCCCA
00000330 0000000000000000                    340+         dc ad(0)                                                       02-DCCCA
00000338                                     341+         ds    0d                                                       01-DCCPR
00000338                                     342+rd_free  ds    0d                                                       01-DCCPR
00000338                                     343+@REGION_754_1 ds 0h                                                     01-DCCPR
00000338 EBEC D008 0024          00000008    344+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000033E E3E0 D088 0004          00000088    345+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000344 E3C0 D090 0004          00000090    346+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000034A B904 002E                           347+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000034E E3B0 C018 0004          00000018    348+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000354 A7EB 00B0               000000B0    349+         aghi  14,176              increase by frame size               01-DCCPR
00000358 E3E0 C020 0021          00000020    350+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000035E 4720 B020               00000020    351+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000362                                     352+@PER_754 ds    0h                                                       01-DCCPR
00000362 EBDE 2080 0024          00000080    353+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000368 E3C0 2090 0024          00000090    354+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000036E B904 00D2                           355+         lgr   13,2                set real frame pointer               01-DCCPR
00000372 B904 00CF                           356+         lgr   12,15               set base reg                         01-DCCPR
                        00000338             357+         using @REGION_754_1,12                                         01-DCCPR
                                             358 * ******* End of Prologue
                                                                                                                           Page   11 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             359 * *
                                             360 * ***      free(ptr);
00000376 E3F0 1000 0004          00000000    361          LG    15,0(0,1)   ; ptr
0000037C E3F0 D0A8 0024          000000A8    362          STG   15,168(0,13)
00000382 4110 D0A8               000000A8    363          LA    1,168(0,13)
00000386 E3F0 C0A8 0004          000003E0    364          LG    15,@lit_754_10 ; free
0000038C                                     365 @@gen_label10 DS    0H
0000038C 05EF                                366          BALR  14,15
0000038E                                     367 @@gen_label11 DS    0H
                                             368 * ***   }
0000038E                                     369 @ret_lab_754 DS 0H
                                             370 * * **** Start of Epilogue
                                             371          DCCEPIL
0000038E                                     372+         ds 0h                                                          01-DCCEP
                                             373+* Epilog
0000038E D707 D088 D088 00000088 00000088    374+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000394 E3D0 D080 0004          00000080    375+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000039A E3C0 D090 0004          00000090    376+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000003A0 E3B0 C018 0004          00000018    377+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000003A6 E3C0 B010 0021          00000010    378+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000003AC E3E0 D008 0004          00000008    379+         lg  14,8(0,13)          load up return address                 01-DCCEP
000003B2 EB1C D020 0004          00000020    380+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000003B8 078E                                381+         bcr 8,14                if same dsab, just return              01-DCCEP
000003BA E3F0 D010 0024          00000010    382+         stg 15,16(0,13)         save return code                       01-DCCEP
000003C0 E300 D018 0024          00000018    383+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003C6 E3F0 D090 0004          00000090    384+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003CC E3F0 F018 0004          00000018    385+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003D2 47F0 F040               00000040    386+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             387+* End of Epilog
                                             388 * * **** End of Epilogue
000003D8                                     389          DS    0D
000003D8 000000B0                            390 @FRAMESIZE_754 DC F'176'
000003DC 00000000
000003E0 0000000000000000                    391 @lit_754_10 DC AD(free)
                                             392          DROP  12
                                             393 *
                                             394 *   DSECT for automatic variables in "rd_free"
                                             395 *      (FUNCTION #754)
                                             396 *
00000000                00000000 000000A8    397 @AUTO#rd_free DSECT
00000000                                     398          DS    XL168
                                             399 *
000003E8                00000000 00001CB0    400 @CODE    CSECT
                                             401 *
                                             402 *
                                             403 *
                                             404 * ....... start of rd_string_render
                                             405 rd_string_render ALIAS X'99846DA2A3998995876D998595848599'
000003E8                                     406 @LNAME760 DS   0H
000003E8 00000010                            407          DC    X'00000010'
000003EC 99846DA2A3998995                    408          DC    C'rd_string_render'
000003FC 00                                  409          DC    X'00'
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             410 rd_string_render DCCPRLG CINDEX=760,BASER=12,FRAME=240,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME760
                                             411          macro
                                             412          dccextrn &m
                                             413          gblc    &$dccext(1000)
                                             414          gbla    &$dccexti
                                             415          lcla    &i
                                             416 &$dccext(&$dccexti+1) setc    '&m'
                                             417 &i       seta    1
                                             418 .loop    aif    (&i gt &$dccexti).around
                                             419          aif    ('&$dccext(&i)' eq '&m').getout
                                             420 &i       seta    &i+1
                                             421          ago     .loop
                                             422 .around  anop
                                             423 &$dccexti seta &$dccexti+1
                                             424          extrn  &m
                                             425 .getout  anop
                                             426          mend
00000400                                     427+$eye0011    ds    0d                                                    02-DCCCA
00000400 C4C3C3                              428+         dc cl3'DCC'                                                    02-DCCCA
00000403 01                                  429+         dc xl1'01' format one                                          02-DCCCA
00000404 00000000                            430+         dc a(0)                                                        02-DCCCA
00000408 0000000000000472                    431+         dc ad(@PER_760)                                                02-DCCCA
00000410 00000000000000F0                    432+         dc ad(240)                                                     02-DCCCA
00000418 0000000000000000                    433+         dc ad(0)                                                       02-DCCCA
00000420 0000000000001000                    434+         dc ad(4096)                                                    02-DCCCA
00000428 20                                  435+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000429 03                                  436+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000042A 03                                  437+         dc al1(3)                                                      02-DCCCA
0000042B 08                                  438+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000042C 00                                  439+         dc bl.8'00000000'                                              02-DCCCA
0000042D 000000                              440+         dc al3(0)                                                      02-DCCCA
00000430 00000000000003E8                    441+         dc ad(@LNAME760)                                               02-DCCCA
00000438                                     442+         ds 0d                                                          02-DCCCA
00000438 0000000000000400                    443+         dc ad($eye0011)                                                02-DCCCA
00000440 0000000000000000                    444+         dc ad(0)                                                       02-DCCCA
00000448                                     445+         ds    0d                                                       01-DCCPR
                                             446+         entry rd_string_render                                         01-DCCPR
00000448                                     447+rd_string_render ds 0d                                                  01-DCCPR
00000448                                     448+@REGION_760_1 ds 0h                                                     01-DCCPR
00000448 EBEC D008 0024          00000008    449+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000044E E3E0 D088 0004          00000088    450+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000454 E3C0 D090 0004          00000090    451+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000045A B904 002E                           452+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000045E E3B0 C018 0004          00000018    453+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000464 A7EB 00F0               000000F0    454+         aghi  14,240              increase by frame size               01-DCCPR
00000468 E3E0 C020 0021          00000020    455+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000046E 4720 B020               00000020    456+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000472                                     457+@PER_760 ds    0h                                                       01-DCCPR
00000472 EBDE 2080 0024          00000080    458+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000478 E3C0 2090 0024          00000090    459+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000047E B904 00D2                           460+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000482 B904 00CF                           461+         lgr   12,15               set base reg                         01-DCCPR
                        00000448             462+         using @REGION_760_1,12                                         01-DCCPR
00000486 B904 0071                           463          LGR   7,1
                                             464 * ******* End of Prologue
                                             465 * *
                                             466 * ***      const char *s = template;
0000048A E340 7000 0004          00000000    467          LG    4,0(0,7)    ; template
00000490 E340 D0E8 0024          000000E8    468          STG   4,232(0,13) ; spill
00000496 EB9A 7008 0004          00000008    469          LMG   9,10,8(7)   ; errstr
                                             470 * ***      const char *tend = template + __strlen(template);
0000049C B904 00F4                           471          LGR   15,4
000004A0 A709 0000               00000000    472          LGHI  0,0
000004A4                                     473 @@gen_label12 DS 0H
000004A4 B25E 000F                           474          SRST  0,15
000004A8 4710 C05C               000004A4    475          BC  1,@@gen_label12
000004AC B904 00F0                           476          LGR   15,0
000004B0 B90B 00F4                           477          SLGR  15,4
000004B4 41BF 4000               00000000    478          LA    11,0(15,4)
                                             479 * ***      size_t size = 256;
000004B8 A759 0100               00000100    480          LGHI  5,256       ; 256
                                             481 * ***      char *buf;
                                             482 * ***      size_t of = 0;
000004BC A739 0000               00000000    483          LGHI  3,0         ; 0
                                             484 * ***
                                             485 * ***      buf = rd_malloc(size);
000004C0 E350 D0B0 0024          000000B0    486          STG   5,176(0,13)
000004C6 4110 D0B0               000000B0    487          LA    1,176(0,13)
000004CA E3F0 C0A0 0004          000004E8    488          LG    15,@lit_760_14 ; rd_malloc
000004D0                                     489 @@gen_label13 DS    0H
000004D0 05EF                                490          BALR  14,15
000004D2                                     491 @@gen_label14 DS    0H
000004D2 B904 002F                           492          LGR   2,15        ; buf
                                             493 * ***
                                             494 * ***   # 71 "C:\asgkafka\librdkafka\src\rdstring.c"
                                             495 * ***
                                             496 * ***
                                             497 * ***
                                             498 * ***
                                             499 * ***   # 80 "C:\asgkafka\librdkafka\src\rdstring.c"
                                             500 * ***      while (*s) {
000004D6 47F0 C47A               000008C2    501          B     @L66
000004E0                                     502          DS    0D
000004E0 000000F0                            503 @FRAMESIZE_760 DC F'240'
000004E4 00000000
000004E8 0000000000000058                    504 @lit_760_14 DC AD(rd_malloc)
000004F0 0000000000000000                    505 @lit_760_16 DC AD(strstr)
000004F8 0000000000001EF6                    506 @lit_760_15 DC AD(@strings@)
00000500 00000000000001C0                    507 @lit_760_17 DC AD(rd_realloc)
00000508 D200 1000 4000 00000000 00000000    508 @lit_760_18          MVC 0(1,1),0(4)
0000050E 0000
00000510 0000000000000000                    509 @lit_760_20 DC AD(snprintf)
00000518 0000000000000338                    510 @lit_760_21 DC AD(rd_free)
                                                                                                                           Page   14 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000520 0000000000000000                    511 @lit_760_23 DC AD(@@ALLOCA)
00000528 D200 E000 6000 00000000 00000000    512 @lit_760_24          MVC 0(1,14),0(6)
0000052E 0000
00000530 0000000000000000                    513 @lit_760_36 DC AD(__assert)
00000538 0000000000001CB0                    514 @lit_760_34 DC AD(@DATA)
00000540                                     515 @L65     DS    0H
                                             516 * ***         const char *t;
                                             517 * ***         size_t tof = (size_t)(s-template);
00000540 B904 00F4                           518          LGR   15,4
00000544 E310 D0E8 0004          000000E8    519          LG    1,232(0,13) ; spill
0000054A B909 00F1                           520          SGR   15,1
0000054E E3F0 D0E0 0024          000000E0    521          STG   15,224(0,13) ; spill
                                             522 * ***
                                             523 * ***         t = strstr(s, "%{");
00000554 E340 D0B0 0024          000000B0    524          STG   4,176(0,13)
0000055A E3F0 C0B0 0004          000004F8    525          LG    15,@lit_760_15
00000560 41F0 F022               00000022    526          LA    15,34(0,15)
00000564 E3F0 D0B8 0024          000000B8    527          STG   15,184(0,13)
0000056A 4110 D0B0               000000B0    528          LA    1,176(0,13)
0000056E E3F0 C0A8 0004          000004F0    529          LG    15,@lit_760_16 ; strstr
00000574                                     530 @@gen_label15 DS    0H
00000574 05EF                                531          BALR  14,15
00000576                                     532 @@gen_label16 DS    0H
00000576 B904 006F                           533          LGR   6,15
                                             534 * ***         if (t != s) {
0000057A B920 00F4                           535          CGR   15,4
0000057E 4780 C1D0               00000618    536          BE    @L67
                                             537 * ***
                                             538 * ***
                                             539 * ***            size_t len = (size_t)((t ? t : tend)-s);
00000582 B902 00F6                           540          LTGR  15,6
00000586 4780 C14A               00000592    541          BZ    @L68
0000058A B904 0086                           542          LGR   8,6
0000058E 47F0 C14E               00000596    543          B     @L69
00000592                                     544 @L68     DS    0H
00000592 B904 008B                           545          LGR   8,11
00000596                                     546 @L69     DS    0H
00000596 B909 0084                           547          SGR   8,4
                                             548 * ***            if (len)
0000059A B902 00F8                           549          LTGR  15,8
0000059E 4780 C1D0               00000618    550          BZ    @L70
                                             551 * ***               do { do { if (of + (len) + 1 >= size) { size = (si\
                                             552 * ze + (len) + 1) * 2; buf = rd_realloc(buf, size); } } while (0); __m\
                                             553 * emcpy(buf+of,(s),(len)); of += (len); } while (0);
000005A2                                     554 @L71     DS    0H
000005A2                                     555 @L74     DS    0H
000005A2 B904 00F3                           556          LGR   15,3
000005A6 B90A 00F8                           557          ALGR  15,8
000005AA A7FB 0001               00000001    558          AGHI  15,1
000005AE B921 00F5                           559          CLGR  15,5
000005B2 4740 C196               000005DE    560          BL    @L77
000005B6 B90A 0058                           561          ALGR  5,8
                                                                                                                           Page   15 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000005BA A75B 0001               00000001    562          AGHI  5,1
000005BE B908 0055                           563          AGR   5,5         ; *0x2
000005C2 E320 D0B0 0024          000000B0    564          STG   2,176(0,13)
000005C8 E350 D0B8 0024          000000B8    565          STG   5,184(0,13)
000005CE 4110 D0B0               000000B0    566          LA    1,176(0,13)
000005D2 E3F0 C0B8 0004          00000500    567          LG    15,@lit_760_17 ; rd_realloc
000005D8                                     568 @@gen_label21 DS    0H
000005D8 05EF                                569          BALR  14,15
000005DA                                     570 @@gen_label22 DS    0H
000005DA B904 002F                           571          LGR   2,15        ; buf
000005DE                                     572 @L77     DS    0H
000005DE 4113 2000               00000000    573          LA    1,0(3,2)
000005E2 B902 00F8                           574          LTGR  15,8
000005E6 4780 C1CC               00000614    575          BZ    @@gen_label25
000005EA A7FB FFFF               0000FFFF    576          AGHI  15,-1
000005EE EBEF 0008 000A          00000008    577          SRAG  14,15,8(0)
000005F4 B902 00EE                           578          LTGR  14,14
000005F8 4780 C1C8               00000610    579          BZ    @@gen_label24
000005FC                                     580 @@gen_label23 DS 0H
000005FC D2FF 1000 4000 00000000 00000000    581          MVC   0(256,1),0(4)
00000602 4110 1100               00000100    582          LA    1,256(0,1)
00000606 4140 4100               00000100    583          LA    4,256(0,4)
0000060A E3E0 C1B4 0046          000005FC    584          BCTG  14,@@gen_label23
00000610                                     585 @@gen_label24 DS 0H
00000610 44F0 C0C0               00000508    586          EX    15,@lit_760_18
00000614                                     587 @@gen_label25 DS 0H
00000614 B90A 0038                           588          ALGR  3,8
                                             589 * ***         }
00000618                                     590 @L70     DS    0H
00000618                                     591 @L67     DS    0H
                                             592 * ***
                                             593 * ***         if (t) {
00000618 B902 00F6                           594          LTGR  15,6
0000061C 4780 C476               000008BE    595          BZ    @L78
                                             596 * ***            const char *te;
                                             597 * ***            ssize_t r;
                                             598 * ***            char *tmpkey;
                                             599 * ***
                                             600 * ***
                                             601 * ***
                                             602 * ***            te = __strchr(t+2,'}');
00000620 4180 6002               00000002    603          LA    8,2(0,6)
00000624                                     604 @@gen_label27 DS 0H
00000624 95D0 8000      00000000 000000D0    605          CLI   0(8),208
00000628 4780 C1F8               00000640    606          BE    @@gen_label28
0000062C 9500 8000      00000000 00000000    607          CLI   0(8),0
00000630 4780 C1F4               0000063C    608          BE    @@gen_label29
00000634 4180 8001               00000001    609          LA    8,1(0,8)
00000638 47F0 C1DC               00000624    610          B     @@gen_label27
0000063C                                     611 @@gen_label29 DS 0H
0000063C A789 0000               00000000    612          LGHI  8,0
00000640                                     613 @@gen_label28 DS 0H
                                                                                                                           Page   16 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             614 * ***            if (!te) {
00000640 B902 00F8                           615          LTGR  15,8
00000644 4770 C254               0000069C    616          BNZ   @L80
                                             617 * ***               snprintf(errstr, errstr_size, "Missing close-brace\
                                             618 *  } for " "%.*s at %" "zu", 15, t, tof);
00000648 EB9A D0B0 0024          000000B0    619          STMG  9,10,176(13)
0000064E E3F0 C0B0 0004          000004F8    620          LG    15,@lit_760_15
00000654 41F0 F026               00000026    621          LA    15,38(0,15)
00000658 E3F0 D0C0 0024          000000C0    622          STG   15,192(0,13)
0000065E E548 D0C8 000F          000000C8    623          MVGHI 200(13),15
00000664 E360 D0D0 0024          000000D0    624          STG   6,208(0,13)
0000066A E3F0 D0E0 0004          000000E0    625          LG    15,224(0,13) ; spill
00000670 E3F0 D0D8 0024          000000D8    626          STG   15,216(0,13)
00000676 4110 D0B0               000000B0    627          LA    1,176(0,13)
0000067A E3F0 C0C8 0004          00000510    628          LG    15,@lit_760_20 ; snprintf
00000680                                     629 @@gen_label31 DS    0H
00000680 05EF                                630          BALR  14,15
00000682                                     631 @@gen_label32 DS    0H
                                             632 * ***
                                             633 * ***
                                             634 * ***
                                             635 * ***               rd_free(buf);
00000682 E320 D0B0 0024          000000B0    636          STG   2,176(0,13)
00000688 4110 D0B0               000000B0    637          LA    1,176(0,13)
0000068C E3F0 C0D0 0004          00000518    638          LG    15,@lit_760_21 ; rd_free
00000692                                     639 @@gen_label33 DS    0H
00000692 05EF                                640          BALR  14,15
00000694                                     641 @@gen_label34 DS    0H
                                             642 * ***               return ((void *)0);
00000694 A7F9 0000               00000000    643          LGHI  15,0        ; 0
00000698 47F0 C48E               000008D6    644          B     @ret_lab_760
                                             645 * ***            }
                                             646 * ***
                                             647 * ***            do { const char *_src = (t+2); size_t _srclen = ((int\
                                             648 * )(te-t-2)); char *_dst = __builtin_alloca(_srclen + 1); __memcpy(_ds\
                                             649 * t,_src,_srclen); _dst[_srclen] = '\0'; *(&tmpkey) = _dst; } while (0\
                                             650 * );
0000069C                                     651 @L80     DS    0H
0000069C 41F0 6002               00000002    652          LA    15,2(0,6)
000006A0 E3F0 D0E0 0024          000000E0    653          STG   15,224(0,13) ; spill
000006A6 B904 00F8                           654          LGR   15,8
000006AA B909 00F6                           655          SGR   15,6
000006AE A7FB FFFE               0000FFFE    656          AGHI  15,-2
000006B2 B914 004F                           657          LGFR  4,15
000006B6 B904 00F4                           658          LGR   15,4
000006BA A7FB 0001               00000001    659          AGHI  15,1
000006BE E3F0 D0B0 0024          000000B0    660          STG   15,176(0,13)
000006C4 4110 D0B0               000000B0    661          LA    1,176(0,13)
000006C8 E3F0 C0D8 0004          00000520    662          LG    15,@lit_760_23 ; @@ALLOCA
000006CE                                     663 @@gen_label35 DS    0H
000006CE 05EF                                664          BALR  14,15
000006D0                                     665 @@gen_label36 DS    0H
                                                                                                                           Page   17 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000006D0 E360 D0E0 0004          000000E0    666          LG    6,224(0,13) ; spill
000006D6 B904 00EF                           667          LGR   14,15
000006DA B902 0014                           668          LTGR  1,4
000006DE 4780 C2C4               0000070C    669          BZ    @@gen_label39
000006E2 A71B FFFF               0000FFFF    670          AGHI  1,-1
000006E6 EB01 0008 000A          00000008    671          SRAG  0,1,8(0)
000006EC B902 0000                           672          LTGR  0,0
000006F0 4780 C2C0               00000708    673          BZ    @@gen_label38
000006F4                                     674 @@gen_label37 DS 0H
000006F4 D2FF E000 6000 00000000 00000000    675          MVC   0(256,14),0(6)
000006FA 41E0 E100               00000100    676          LA    14,256(0,14)
000006FE 4160 6100               00000100    677          LA    6,256(0,6)
00000702 E300 C2AC 0046          000006F4    678          BCTG  0,@@gen_label37
00000708                                     679 @@gen_label38 DS 0H
00000708 4410 C0E0               00000528    680          EX    1,@lit_760_24
0000070C                                     681 @@gen_label39 DS 0H
0000070C 4114 F000               00000000    682          LA    1,0(4,15)
00000710 9200 1000      00000000 00000000    683          MVI   0(1),0
00000714 E3F0 D0A8 0024          000000A8    684          STG   15,168(0,13)
                                             685 * ***
                                             686 * ***
                                             687 * ***            r = callback(tmpkey, ((void *)0), 0, opaque);
0000071A E3F0 D0B0 0024          000000B0    688          STG   15,176(0,13)
00000720 D70F D0B8 D0B8 000000B8 000000B8    689          XC    184(16,13),184(13)
00000726 E3F0 7020 0004          00000020    690          LG    15,32(0,7)  ; opaque
0000072C E3F0 D0C8 0024          000000C8    691          STG   15,200(0,13)
00000732 E3F0 7018 0004          00000018    692          LG    15,24(0,7)  ; callback
00000738 4110 D0B0               000000B0    693          LA    1,176(0,13)
0000073C                                     694 @@gen_label40 DS    0H
0000073C 05EF                                695          BALR  14,15
0000073E                                     696 @@gen_label41 DS    0H
0000073E B904 004F                           697          LGR   4,15        ; r
                                             698 * ***            if (r == -1) {
00000742 A7FF FFFF               0000FFFF    699          CGHI  15,-1
00000746 4770 C34A               00000792    700          BNE   @L84
                                             701 * ***               snprintf(errstr, errstr_size, "Property not availa\
                                             702 * ble: \"%s\"", tmpkey);
0000074A EB9A D0B0 0024          000000B0    703          STMG  9,10,176(13)
00000750 E3F0 C0B0 0004          000004F8    704          LG    15,@lit_760_15
00000756 41F0 F04C               0000004C    705          LA    15,76(0,15)
0000075A E3F0 D0C0 0024          000000C0    706          STG   15,192(0,13)
00000760 E3F0 D0A8 0004          000000A8    707          LG    15,168(0,13) ; tmpkey
00000766 E3F0 D0C8 0024          000000C8    708          STG   15,200(0,13)
0000076C 4110 D0B0               000000B0    709          LA    1,176(0,13)
00000770 E3F0 C0C8 0004          00000510    710          LG    15,@lit_760_20 ; snprintf
00000776                                     711 @@gen_label43 DS    0H
00000776 05EF                                712          BALR  14,15
00000778                                     713 @@gen_label44 DS    0H
                                             714 * ***
                                             715 * ***
                                             716 * ***               rd_free(buf);
00000778 E320 D0B0 0024          000000B0    717          STG   2,176(0,13)
                                                                                                                           Page   18 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000077E 4110 D0B0               000000B0    718          LA    1,176(0,13)
00000782 E3F0 C0D0 0004          00000518    719          LG    15,@lit_760_21 ; rd_free
00000788                                     720 @@gen_label45 DS    0H
00000788 05EF                                721          BALR  14,15
0000078A                                     722 @@gen_label46 DS    0H
                                             723 * ***               return ((void *)0);
0000078A A7F9 0000               00000000    724          LGHI  15,0        ; 0
0000078E 47F0 C48E               000008D6    725          B     @ret_lab_760
                                             726 * ***            }
                                             727 * ***
                                             728 * ***            do { if (of + (r) + 1 >= size) { size = (size + (r) +\
                                             729 *  1) * 2; buf = rd_realloc(buf, size); } } while (0);
00000792                                     730 @L84     DS    0H
00000792 B904 00F3                           731          LGR   15,3
00000796 B90A 00F4                           732          ALGR  15,4
0000079A A7FB 0001               00000001    733          AGHI  15,1
0000079E B921 00F5                           734          CLGR  15,5
000007A2 4740 C386               000007CE    735          BL    @L87
000007A6 B90A 0054                           736          ALGR  5,4
000007AA A75B 0001               00000001    737          AGHI  5,1
000007AE B908 0055                           738          AGR   5,5         ; *0x2
000007B2 E320 D0B0 0024          000000B0    739          STG   2,176(0,13)
000007B8 E350 D0B8 0024          000000B8    740          STG   5,184(0,13)
000007BE 4110 D0B0               000000B0    741          LA    1,176(0,13)
000007C2 E3F0 C0B8 0004          00000500    742          LG    15,@lit_760_17 ; rd_realloc
000007C8                                     743 @@gen_label48 DS    0H
000007C8 05EF                                744          BALR  14,15
000007CA                                     745 @@gen_label49 DS    0H
000007CA B904 002F                           746          LGR   2,15        ; buf
000007CE                                     747 @L87     DS    0H
                                             748 * ***
                                             749 * ***
                                             750 * ***            r = callback(tmpkey, buf+of, (size - of - 1), opaque)\
                                             751 * ;
000007CE E3F0 D0A8 0004          000000A8    752          LG    15,168(0,13) ; tmpkey
000007D4 E3F0 D0B0 0024          000000B0    753          STG   15,176(0,13)
000007DA 41F3 2000               00000000    754          LA    15,0(3,2)
000007DE E3F0 D0B8 0024          000000B8    755          STG   15,184(0,13)
000007E4 B904 00F5                           756          LGR   15,5
000007E8 B90B 00F3                           757          SLGR  15,3
000007EC A7FB FFFF               0000FFFF    758          AGHI  15,-1
000007F0 E3F0 D0C0 0024          000000C0    759          STG   15,192(0,13)
000007F6 E3F0 7020 0004          00000020    760          LG    15,32(0,7)  ; opaque
000007FC E3F0 D0C8 0024          000000C8    761          STG   15,200(0,13)
00000802 E3F0 7018 0004          00000018    762          LG    15,24(0,7)  ; callback
00000808 4110 D0B0               000000B0    763          LA    1,176(0,13)
0000080C                                     764 @@gen_label50 DS    0H
0000080C 05EF                                765          BALR  14,15
0000080E                                     766 @@gen_label51 DS    0H
0000080E B904 004F                           767          LGR   4,15        ; r
                                             768 * ***            if (r == -1) {
00000812 A7FF FFFF               0000FFFF    769          CGHI  15,-1
                                                                                                                           Page   19 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000816 4770 C41A               00000862    770          BNE   @L88
                                             771 * ***               snprintf(errstr, errstr_size, "Property not availa\
                                             772 * ble: " "\"%s\"", tmpkey);
0000081A EB9A D0B0 0024          000000B0    773          STMG  9,10,176(13)
00000820 E3F0 C0B0 0004          000004F8    774          LG    15,@lit_760_15
00000826 41F0 F04C               0000004C    775          LA    15,76(0,15)
0000082A E3F0 D0C0 0024          000000C0    776          STG   15,192(0,13)
00000830 E3F0 D0A8 0004          000000A8    777          LG    15,168(0,13) ; tmpkey
00000836 E3F0 D0C8 0024          000000C8    778          STG   15,200(0,13)
0000083C 4110 D0B0               000000B0    779          LA    1,176(0,13)
00000840 E3F0 C0C8 0004          00000510    780          LG    15,@lit_760_20 ; snprintf
00000846                                     781 @@gen_label53 DS    0H
00000846 05EF                                782          BALR  14,15
00000848                                     783 @@gen_label54 DS    0H
                                             784 * ***
                                             785 * ***
                                             786 * ***               rd_free(buf);
00000848 E320 D0B0 0024          000000B0    787          STG   2,176(0,13)
0000084E 4110 D0B0               000000B0    788          LA    1,176(0,13)
00000852 E3F0 C0D0 0004          00000518    789          LG    15,@lit_760_21 ; rd_free
00000858                                     790 @@gen_label55 DS    0H
00000858 05EF                                791          BALR  14,15
0000085A                                     792 @@gen_label56 DS    0H
                                             793 * ***               return ((void *)0);
0000085A A7F9 0000               00000000    794          LGHI  15,0        ; 0
0000085E 47F0 C48E               000008D6    795          B     @ret_lab_760
                                             796 * ***            }
00000862                                     797 @L88     DS    0H
                                             798 * ***
                                             799 * ***            ((r < (ssize_t)(size - of - 1)) ? (void)0 : __assert(\
                                             800 * __func__, "C:\\asgkafka\\librdkafka\\src\\rdstring.c", 134, "r < (ss\
                                             801 * ize_t)_remain()"));
00000862 B904 00F5                           802          LGR   15,5
00000866 B90B 00F3                           803          SLGR  15,3
0000086A A7FB FFFF               0000FFFF    804          AGHI  15,-1
0000086E B920 004F                           805          CGR   4,15
00000872 4740 C46A               000008B2    806          BL    @L90
00000876                                     807 @L89     DS    0H
00000876 E3F0 C0F0 0004          00000538    808          LG    15,@lit_760_34
0000087C 41F0 F046               00000046    809          LA    15,70(0,15)
00000880 E3F0 D0B0 0024          000000B0    810          STG   15,176(0,13)
00000886 E3F0 C0B0 0004          000004F8    811          LG    15,@lit_760_15
0000088C 4110 F06A               0000006A    812          LA    1,106(0,15)
00000890 E310 D0B8 0024          000000B8    813          STG   1,184(0,13)
00000896 E548 D0C0 0086          000000C0    814          MVGHI 192(13),134
0000089C 41F0 F090               00000090    815          LA    15,144(0,15)
000008A0 E3F0 D0C8 0024          000000C8    816          STG   15,200(0,13)
000008A6 4110 D0B0               000000B0    817          LA    1,176(0,13)
000008AA E3F0 C0E8 0004          00000530    818          LG    15,@lit_760_36 ; __assert
000008B0                                     819 @@gen_label58 DS    0H
000008B0 05EF                                820          BALR  14,15
000008B2                                     821 @@gen_label59 DS    0H
                                                                                                                           Page   20 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000008B2                                     822 @L90     DS    0H
                                             823 * ***            of += r;
000008B2 B90A 0034                           824          ALGR  3,4
                                             825 * ***            s = te+1;
000008B6 4140 8001               00000001    826          LA    4,1(0,8)
                                             827 * ***
                                             828 * ***         } else {
000008BA 47F0 C47A               000008C2    829          B     @L91
000008BE                                     830 @L78     DS    0H
                                             831 * ***            s = tend;
000008BE B904 004B                           832          LGR   4,11        ; s
                                             833 * ***         }
000008C2                                     834 @L91     DS    0H
                                             835 * ***      }
000008C2                                     836 @L66     DS    0H
000008C2 9500 4000      00000000 00000000    837          CLI   0(4),0
000008C6 4770 C0F8               00000540    838          BNE   @L65
                                             839 * ***
                                             840 * ***      buf[of] = '\0';
000008CA 41F3 2000               00000000    841          LA    15,0(3,2)
000008CE 9200 F000      00000000 00000000    842          MVI   0(15),0
                                             843 * ***      return buf;
000008D2 B904 00F2                           844          LGR   15,2
                                             845 * ***   }
000008D6                                     846 @ret_lab_760 DS 0H
                                             847 * * **** Start of Epilogue
                                             848          DCCEPIL
000008D6                                     849+         ds 0h                                                          01-DCCEP
                                             850+* Epilog
000008D6 D707 D088 D088 00000088 00000088    851+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000008DC E3D0 D080 0004          00000080    852+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008E2 E3C0 D090 0004          00000090    853+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008E8 E3B0 C018 0004          00000018    854+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008EE E3C0 B010 0021          00000010    855+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008F4 E3E0 D008 0004          00000008    856+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008FA EB1C D020 0004          00000020    857+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000900 078E                                858+         bcr 8,14                if same dsab, just return              01-DCCEP
00000902 E3F0 D010 0024          00000010    859+         stg 15,16(0,13)         save return code                       01-DCCEP
00000908 E300 D018 0024          00000018    860+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000090E E3F0 D090 0004          00000090    861+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000914 E3F0 F018 0004          00000018    862+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000091A 47F0 F040               00000040    863+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             864+* End of Epilog
                                             865 * * **** End of Epilogue
                                             866          DROP  12
                                             867 *
                                             868 *   DSECT for automatic variables in "rd_string_render"
                                             869 *      (FUNCTION #760)
                                             870 *
00000000                00000000 000000B0    871 @AUTO#rd_string_render DSECT
00000000                                     872          DS    XL168
000000A8                                     873 rd_string_render#_srclen#8 DS 8XL1 ; _srclen
                                                                                                                           Page   21 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000000B0                000000B0 000000A8    874          ORG   @AUTO#rd_string_render+168
000000A8                                     875 rd_string_render#r#6 DS 8XL1 ; r
000000B0                000000B0 000000A8    876          ORG   @AUTO#rd_string_render+168
000000A8                                     877 rd_string_render#len#2 DS 8XL1 ; len
000000B0                000000B0 000000A8    878          ORG   @AUTO#rd_string_render+168
000000A8                                     879 rd_string_render#tof#1 DS 8XL1 ; tof
000000B0                000000B0 000000A8    880          ORG   @AUTO#rd_string_render+168
000000A8                                     881 rd_string_render#of#0 DS 8XL1 ; of
000000B0                000000B0 000000A8    882          ORG   @AUTO#rd_string_render+168
000000A8                                     883 rd_string_render#size#0 DS 8XL1 ; size
                                             884 *
0000091E                00000000 00001CB0    885 @CODE    CSECT
                                             886 *
                                             887 *
                                             888 *
                                             889 * ....... start of rd_strtup_destroy
                                             890 rd_strtup_destroy ALIAS X'99846DA2A399A3A4976D8485A2A39996A8'
0000091E                                     891 @LNAME761 DS   0H
0000091E 00000011                            892          DC    X'00000011'
00000922 99846DA2A399A3A4                    893          DC    C'rd_strtup_destroy'
00000933 00                                  894          DC    X'00'
                                             895 rd_strtup_destroy DCCPRLG CINDEX=761,BASER=12,FRAME=176,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME761
                                             896          macro
                                             897          dccextrn &m
                                             898          gblc    &$dccext(1000)
                                             899          gbla    &$dccexti
                                             900          lcla    &i
                                             901 &$dccext(&$dccexti+1) setc    '&m'
                                             902 &i       seta    1
                                             903 .loop    aif    (&i gt &$dccexti).around
                                             904          aif    ('&$dccext(&i)' eq '&m').getout
                                             905 &i       seta    &i+1
                                             906          ago     .loop
                                             907 .around  anop
                                             908 &$dccexti seta &$dccexti+1
                                             909          extrn  &m
                                             910 .getout  anop
                                             911          mend
00000938                                     912+$eye0014    ds    0d                                                    02-DCCCA
00000938 C4C3C3                              913+         dc cl3'DCC'                                                    02-DCCCA
0000093B 01                                  914+         dc xl1'01' format one                                          02-DCCCA
0000093C 00000000                            915+         dc a(0)                                                        02-DCCCA
00000940 00000000000009AA                    916+         dc ad(@PER_761)                                                02-DCCCA
00000948 00000000000000B0                    917+         dc ad(176)                                                     02-DCCCA
00000950 0000000000000000                    918+         dc ad(0)                                                       02-DCCCA
00000958 0000000000001000                    919+         dc ad(4096)                                                    02-DCCCA
00000960 20                                  920+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000961 03                                  921+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000962 03                                  922+         dc al1(3)                                                      02-DCCCA
00000963 08                                  923+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000964 00                                  924+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000965 000000                              925+         dc al3(0)                                                      02-DCCCA
00000968 000000000000091E                    926+         dc ad(@LNAME761)                                               02-DCCCA
00000970                                     927+         ds 0d                                                          02-DCCCA
00000970 0000000000000938                    928+         dc ad($eye0014)                                                02-DCCCA
00000978 0000000000000000                    929+         dc ad(0)                                                       02-DCCCA
00000980                                     930+         ds    0d                                                       01-DCCPR
                                             931+         entry rd_strtup_destroy                                        01-DCCPR
00000980                                     932+rd_strtup_destroy ds 0d                                                 01-DCCPR
00000980                                     933+@REGION_761_1 ds 0h                                                     01-DCCPR
00000980 EBEC D008 0024          00000008    934+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000986 E3E0 D088 0004          00000088    935+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000098C E3C0 D090 0004          00000090    936+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000992 B904 002E                           937+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000996 E3B0 C018 0004          00000018    938+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000099C A7EB 00B0               000000B0    939+         aghi  14,176              increase by frame size               01-DCCPR
000009A0 E3E0 C020 0021          00000020    940+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000009A6 4720 B020               00000020    941+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000009AA                                     942+@PER_761 ds    0h                                                       01-DCCPR
000009AA EBDE 2080 0024          00000080    943+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000009B0 E3C0 2090 0024          00000090    944+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000009B6 B904 00D2                           945+         lgr   13,2                set real frame pointer               01-DCCPR
000009BA B904 00CF                           946+         lgr   12,15               set base reg                         01-DCCPR
                        00000980             947+         using @REGION_761_1,12                                         01-DCCPR
                                             948 * ******* End of Prologue
                                             949 * *
                                             950 * ***           rd_free(strtup);
000009BE E3F0 1000 0004          00000000    951          LG    15,0(0,1)   ; strtup
000009C4 E3F0 D0A8 0024          000000A8    952          STG   15,168(0,13)
000009CA 4110 D0A8               000000A8    953          LA    1,168(0,13)
000009CE E3F0 C0A8 0004          00000A28    954          LG    15,@lit_761_38 ; rd_free
000009D4                                     955 @@gen_label61 DS    0H
000009D4 05EF                                956          BALR  14,15
000009D6                                     957 @@gen_label62 DS    0H
                                             958 * ***   }
000009D6                                     959 @ret_lab_761 DS 0H
                                             960 * * **** Start of Epilogue
                                             961          DCCEPIL
000009D6                                     962+         ds 0h                                                          01-DCCEP
                                             963+* Epilog
000009D6 D707 D088 D088 00000088 00000088    964+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009DC E3D0 D080 0004          00000080    965+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009E2 E3C0 D090 0004          00000090    966+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000009E8 E3B0 C018 0004          00000018    967+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000009EE E3C0 B010 0021          00000010    968+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000009F4 E3E0 D008 0004          00000008    969+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009FA EB1C D020 0004          00000020    970+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000A00 078E                                971+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A02 E3F0 D010 0024          00000010    972+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A08 E300 D018 0024          00000018    973+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A0E E3F0 D090 0004          00000090    974+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A14 E3F0 F018 0004          00000018    975+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A1A 47F0 F040               00000040    976+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   23 
  Active Usings: @REGION_761_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             977+* End of Epilog
                                             978 * * **** End of Epilogue
00000A20                                     979          DS    0D
00000A20 000000B0                            980 @FRAMESIZE_761 DC F'176'
00000A24 00000000
00000A28 0000000000000338                    981 @lit_761_38 DC AD(rd_free)
                                             982          DROP  12
                                             983 *
                                             984 *   DSECT for automatic variables in "rd_strtup_destroy"
                                             985 *      (FUNCTION #761)
                                             986 *
00000000                00000000 000000A8    987 @AUTO#rd_strtup_destroy DSECT
00000000                                     988          DS    XL168
                                             989 *
00000A30                00000000 00001CB0    990 @CODE    CSECT
                                             991 *
                                             992 *
                                             993 *
                                             994 * ....... start of rd_strtup_free
                                             995 rd_strtup_free ALIAS X'99846DA2A399A3A4976D86998585'
00000A30                                     996 @LNAME762 DS   0H
00000A30 0000000E                            997          DC    X'0000000E'
00000A34 99846DA2A399A3A4                    998          DC    C'rd_strtup_free'
00000A42 00                                  999          DC    X'00'
                                            1000 rd_strtup_free DCCPRLG CINDEX=762,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME762
                                            1001          macro
                                            1002          dccextrn &m
                                            1003          gblc    &$dccext(1000)
                                            1004          gbla    &$dccexti
                                            1005          lcla    &i
                                            1006 &$dccext(&$dccexti+1) setc    '&m'
                                            1007 &i       seta    1
                                            1008 .loop    aif    (&i gt &$dccexti).around
                                            1009          aif    ('&$dccext(&i)' eq '&m').getout
                                            1010 &i       seta    &i+1
                                            1011          ago     .loop
                                            1012 .around  anop
                                            1013 &$dccexti seta &$dccexti+1
                                            1014          extrn  &m
                                            1015 .getout  anop
                                            1016          mend
00000A48                                    1017+$eye0017    ds    0d                                                    02-DCCCA
00000A48 C4C3C3                             1018+         dc cl3'DCC'                                                    02-DCCCA
00000A4B 01                                 1019+         dc xl1'01' format one                                          02-DCCCA
00000A4C 00000000                           1020+         dc a(0)                                                        02-DCCCA
00000A50 0000000000000ABA                   1021+         dc ad(@PER_762)                                                02-DCCCA
00000A58 00000000000000B0                   1022+         dc ad(176)                                                     02-DCCCA
00000A60 0000000000000000                   1023+         dc ad(0)                                                       02-DCCCA
00000A68 0000000000001000                   1024+         dc ad(4096)                                                    02-DCCCA
00000A70 20                                 1025+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A71 03                                 1026+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000A72 03                                 1027+         dc al1(3)                                                      02-DCCCA
00000A73 08                                 1028+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A74 00                                 1029+         dc bl.8'00000000'                                              02-DCCCA
00000A75 000000                             1030+         dc al3(0)                                                      02-DCCCA
00000A78 0000000000000A30                   1031+         dc ad(@LNAME762)                                               02-DCCCA
00000A80                                    1032+         ds 0d                                                          02-DCCCA
00000A80 0000000000000A48                   1033+         dc ad($eye0017)                                                02-DCCCA
00000A88 0000000000000000                   1034+         dc ad(0)                                                       02-DCCCA
00000A90                                    1035+         ds    0d                                                       01-DCCPR
                                            1036+         entry rd_strtup_free                                           01-DCCPR
00000A90                                    1037+rd_strtup_free ds 0d                                                    01-DCCPR
00000A90                                    1038+@REGION_762_1 ds 0h                                                     01-DCCPR
00000A90 EBEC D008 0024          00000008   1039+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A96 E3E0 D088 0004          00000088   1040+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A9C E3C0 D090 0004          00000090   1041+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000AA2 B904 002E                          1042+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000AA6 E3B0 C018 0004          00000018   1043+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000AAC A7EB 00B0               000000B0   1044+         aghi  14,176              increase by frame size               01-DCCPR
00000AB0 E3E0 C020 0021          00000020   1045+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000AB6 4720 B020               00000020   1046+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000ABA                                    1047+@PER_762 ds    0h                                                       01-DCCPR
00000ABA EBDE 2080 0024          00000080   1048+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000AC0 E3C0 2090 0024          00000090   1049+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000AC6 B904 00D2                          1050+         lgr   13,2                set real frame pointer               01-DCCPR
00000ACA B904 00CF                          1051+         lgr   12,15               set base reg                         01-DCCPR
                        00000A90            1052+         using @REGION_762_1,12                                         01-DCCPR
                                            1053 * ******* End of Prologue
                                            1054 * *
                                            1055 * ***           rd_strtup_destroy((rd_strtup_t *)strtup);
00000ACE E3F0 1000 0004          00000000   1056          LG    15,0(0,1)   ; strtup
00000AD4 E3F0 D0A8 0024          000000A8   1057          STG   15,168(0,13)
00000ADA 4110 D0A8               000000A8   1058          LA    1,168(0,13)
00000ADE E3F0 C0A8 0004          00000B38   1059          LG    15,@lit_762_40 ; rd_strtup_destroy
00000AE4                                    1060 @@gen_label63 DS    0H
00000AE4 05EF                               1061          BALR  14,15
00000AE6                                    1062 @@gen_label64 DS    0H
                                            1063 * ***   }
00000AE6                                    1064 @ret_lab_762 DS 0H
                                            1065 * * **** Start of Epilogue
                                            1066          DCCEPIL
00000AE6                                    1067+         ds 0h                                                          01-DCCEP
                                            1068+* Epilog
00000AE6 D707 D088 D088 00000088 00000088   1069+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000AEC E3D0 D080 0004          00000080   1070+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000AF2 E3C0 D090 0004          00000090   1071+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000AF8 E3B0 C018 0004          00000018   1072+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000AFE E3C0 B010 0021          00000010   1073+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000B04 E3E0 D008 0004          00000008   1074+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000B0A EB1C D020 0004          00000020   1075+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000B10 078E                               1076+         bcr 8,14                if same dsab, just return              01-DCCEP
00000B12 E3F0 D010 0024          00000010   1077+         stg 15,16(0,13)         save return code                       01-DCCEP
00000B18 E300 D018 0024          00000018   1078+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   25 
  Active Usings: @REGION_762_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000B1E E3F0 D090 0004          00000090   1079+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000B24 E3F0 F018 0004          00000018   1080+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000B2A 47F0 F040               00000040   1081+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1082+* End of Epilog
                                            1083 * * **** End of Epilogue
00000B30                                    1084          DS    0D
00000B30 000000B0                           1085 @FRAMESIZE_762 DC F'176'
00000B34 00000000
00000B38 0000000000000980                   1086 @lit_762_40 DC AD(rd_strtup_destroy)
                                            1087          DROP  12
                                            1088 *
                                            1089 *   DSECT for automatic variables in "rd_strtup_free"
                                            1090 *      (FUNCTION #762)
                                            1091 *
00000000                00000000 000000A8   1092 @AUTO#rd_strtup_free DSECT
00000000                                    1093          DS    XL168
                                            1094 *
00000B40                00000000 00001CB0   1095 @CODE    CSECT
                                            1096 *
                                            1097 *
                                            1098 *
                                            1099 * ....... start of rd_strtup_new0
                                            1100 rd_strtup_new0 ALIAS X'99846DA2A399A3A4976D9585A6F0'
00000B40                                    1101 @LNAME763 DS   0H
00000B40 0000000E                           1102          DC    X'0000000E'
00000B44 99846DA2A399A3A4                   1103          DC    C'rd_strtup_new0'
00000B52 00                                 1104          DC    X'00'
                                            1105 rd_strtup_new0 DCCPRLG CINDEX=763,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME763
                                            1106          macro
                                            1107          dccextrn &m
                                            1108          gblc    &$dccext(1000)
                                            1109          gbla    &$dccexti
                                            1110          lcla    &i
                                            1111 &$dccext(&$dccexti+1) setc    '&m'
                                            1112 &i       seta    1
                                            1113 .loop    aif    (&i gt &$dccexti).around
                                            1114          aif    ('&$dccext(&i)' eq '&m').getout
                                            1115 &i       seta    &i+1
                                            1116          ago     .loop
                                            1117 .around  anop
                                            1118 &$dccexti seta &$dccexti+1
                                            1119          extrn  &m
                                            1120 .getout  anop
                                            1121          mend
00000B58                                    1122+$eye0020    ds    0d                                                    02-DCCCA
00000B58 C4C3C3                             1123+         dc cl3'DCC'                                                    02-DCCCA
00000B5B 01                                 1124+         dc xl1'01' format one                                          02-DCCCA
00000B5C 00000000                           1125+         dc a(0)                                                        02-DCCCA
00000B60 0000000000000BCA                   1126+         dc ad(@PER_763)                                                02-DCCCA
00000B68 00000000000000B8                   1127+         dc ad(184)                                                     02-DCCCA
00000B70 0000000000000000                   1128+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000B78 0000000000001000                   1129+         dc ad(4096)                                                    02-DCCCA
00000B80 20                                 1130+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B81 03                                 1131+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B82 03                                 1132+         dc al1(3)                                                      02-DCCCA
00000B83 08                                 1133+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B84 00                                 1134+         dc bl.8'00000000'                                              02-DCCCA
00000B85 000000                             1135+         dc al3(0)                                                      02-DCCCA
00000B88 0000000000000B40                   1136+         dc ad(@LNAME763)                                               02-DCCCA
00000B90                                    1137+         ds 0d                                                          02-DCCCA
00000B90 0000000000000B58                   1138+         dc ad($eye0020)                                                02-DCCCA
00000B98 0000000000000000                   1139+         dc ad(0)                                                       02-DCCCA
00000BA0                                    1140+         ds    0d                                                       01-DCCPR
                                            1141+         entry rd_strtup_new0                                           01-DCCPR
00000BA0                                    1142+rd_strtup_new0 ds 0d                                                    01-DCCPR
00000BA0                                    1143+@REGION_763_1 ds 0h                                                     01-DCCPR
00000BA0 EBEC D008 0024          00000008   1144+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000BA6 E3E0 D088 0004          00000088   1145+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000BAC E3C0 D090 0004          00000090   1146+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000BB2 B904 002E                          1147+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000BB6 E3B0 C018 0004          00000018   1148+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000BBC A7EB 00B8               000000B8   1149+         aghi  14,184              increase by frame size               01-DCCPR
00000BC0 E3E0 C020 0021          00000020   1150+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BC6 4720 B020               00000020   1151+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BCA                                    1152+@PER_763 ds    0h                                                       01-DCCPR
00000BCA EBDE 2080 0024          00000080   1153+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BD0 E3C0 2090 0024          00000090   1154+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BD6 B904 00D2                          1155+         lgr   13,2                set real frame pointer               01-DCCPR
00000BDA B904 00CF                          1156+         lgr   12,15               set base reg                         01-DCCPR
                        00000BA0            1157+         using @REGION_763_1,12                                         01-DCCPR
00000BDE B904 0051                          1158          LGR   5,1         ; ptr to parm area
                                            1159 * ******* End of Prologue
                                            1160 * *
00000BE2 EB34 5008 0004          00000008   1161          LMG   3,4,8(5)    ; name_len
00000BE8 E320 5018 0004          00000018   1162          LG    2,24(0,5)   ; value_len
                                            1163 * ***           rd_strtup_t *strtup;
                                            1164 * ***
                                            1165 * ***
                                            1166 * ***
                                            1167 * ***           if (name_len == -1)
00000BEE A73F FFFF               0000FFFF   1168          CGHI  3,-1
00000BF2 4770 C074               00000C14   1169          BNE   @L92
                                            1170 * ***                   name_len = __strlen(name);
00000BF6 E3F0 5000 0004          00000000   1171          LG    15,0(0,5)
00000BFC B904 001F                          1172          LGR   1,15
00000C00 A709 0000               00000000   1173          LGHI  0,0
00000C04                                    1174 @@gen_label66 DS 0H
00000C04 B25E 000F                          1175          SRST  0,15
00000C08 4710 C064               00000C04   1176          BC  1,@@gen_label66
00000C0C B90B 0001                          1177          SLGR  0,1
00000C10 B904 0030                          1178          LGR   3,0         ; name_len
00000C14                                    1179 @L92     DS    0H
                                            1180 * ***
                                                                                                                           Page   27 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1181 * ***           if (!value)
00000C14 B902 00F4                          1182          LTGR  15,4
00000C18 4770 C0A4               00000C44   1183          BNZ   @L93
                                            1184 * ***                   value_len = 0;
00000C1C A729 0000               00000000   1185          LGHI  2,0         ; 0
00000C20 47F0 C0C4               00000C64   1186          B     @L94
00000C28                                    1187          DS    0D
00000C28 000000B8                           1188 @FRAMESIZE_763 DC F'184'
00000C2C 00000000
00000C30 0000000000000058                   1189 @lit_763_43 DC AD(rd_malloc)
00000C38 D200 6000 5000 00000000 00000000   1190 @lit_763_44          MVC 0(1,6),0(5)
00000C3E D200 3000 4000 00000000 00000000   1191 @lit_763_45          MVC 0(1,3),0(4)
                                            1192 * ***           else if (value_len == -1)
00000C44                                    1193 @L93     DS    0H
00000C44 A72F FFFF               0000FFFF   1194          CGHI  2,-1
00000C48 4770 C0C4               00000C64   1195          BNE   @L94
                                            1196 * ***                   value_len = __strlen(value);
00000C4C B904 00F4                          1197          LGR   15,4
00000C50 A709 0000               00000000   1198          LGHI  0,0
00000C54                                    1199 @@gen_label69 DS 0H
00000C54 B25E 000F                          1200          SRST  0,15
00000C58 4710 C0B4               00000C54   1201          BC  1,@@gen_label69
00000C5C B90B 0004                          1202          SLGR  0,4
00000C60 B904 0020                          1203          LGR   2,0         ; value_len
00000C64                                    1204 @L95     DS    0H
                                            1205 * ***
                                            1206 * ***
                                            1207 * ***           strtup = rd_malloc(sizeof(*strtup) +
00000C64                                    1208 @L94     DS    0H
                                            1209 * ***                              name_len + 1 + value_len + 1 - 1);
00000C64 B904 00F3                          1210          LGR   15,3
00000C68 A7FB 0010               00000010   1211          AGHI  15,16
00000C6C A7FB 0001               00000001   1212          AGHI  15,1
00000C70 B90A 00F2                          1213          ALGR  15,2
00000C74 A7FB 0001               00000001   1214          AGHI  15,1
00000C78 A7FB FFFF               0000FFFF   1215          AGHI  15,-1
00000C7C E3F0 D0B0 0024          000000B0   1216          STG   15,176(0,13)
00000C82 4110 D0B0               000000B0   1217          LA    1,176(0,13)
00000C86 E3F0 C090 0004          00000C30   1218          LG    15,@lit_763_43 ; rd_malloc
00000C8C                                    1219 @@gen_label70 DS    0H
00000C8C 05EF                               1220          BALR  14,15
00000C8E                                    1221 @@gen_label71 DS    0H
                                            1222 * ***           __memcpy(strtup->name,name,name_len);
00000C8E E350 5000 0004          00000000   1223          LG    5,0(0,5)
00000C94 4160 F008               00000008   1224          LA    6,8(0,15)
00000C98 B902 0013                          1225          LTGR  1,3
00000C9C 4780 C12A               00000CCA   1226          BZ    @@gen_label74
00000CA0 A71B FFFF               0000FFFF   1227          AGHI  1,-1
00000CA4 EB71 0008 000A          00000008   1228          SRAG  7,1,8(0)
00000CAA B902 0077                          1229          LTGR  7,7
00000CAE 4780 C126               00000CC6   1230          BZ    @@gen_label73
00000CB2                                    1231 @@gen_label72 DS 0H
                                                                                                                           Page   28 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000CB2 D2FF 6000 5000 00000000 00000000   1232          MVC   0(256,6),0(5)
00000CB8 4160 6100               00000100   1233          LA    6,256(0,6)
00000CBC 4150 5100               00000100   1234          LA    5,256(0,5)
00000CC0 E370 C112 0046          00000CB2   1235          BCTG  7,@@gen_label72
00000CC6                                    1236 @@gen_label73 DS 0H
00000CC6 4410 C098               00000C38   1237          EX    1,@lit_763_44
00000CCA                                    1238 @@gen_label74 DS 0H
                                            1239 * ***           strtup->name[name_len] = '\0';
00000CCA 4113 F000               00000000   1240          LA    1,0(3,15)
00000CCE 9200 1008      00000008 00000000   1241          MVI   8(1),0
                                            1242 * ***           if (value) {
00000CD2 B902 0014                          1243          LTGR  1,4
00000CD6 4780 C18C               00000D2C   1244          BZ    @L96
                                            1245 * ***                   strtup->value = &strtup->name[name_len+1];
00000CDA 4113 F009               00000009   1246          LA    1,9(3,15)
00000CDE E310 F000 0024          00000000   1247          STG   1,0(0,15)   ; strtup
                                            1248 * ***                   __memcpy(strtup->value,value,value_len);
00000CE4 B904 0031                          1249          LGR   3,1
00000CE8 B902 0012                          1250          LTGR  1,2
00000CEC 4780 C17A               00000D1A   1251          BZ    @@gen_label78
00000CF0 A71B FFFF               0000FFFF   1252          AGHI  1,-1
00000CF4 EB51 0008 000A          00000008   1253          SRAG  5,1,8(0)
00000CFA B902 0055                          1254          LTGR  5,5
00000CFE 4780 C176               00000D16   1255          BZ    @@gen_label77
00000D02                                    1256 @@gen_label76 DS 0H
00000D02 D2FF 3000 4000 00000000 00000000   1257          MVC   0(256,3),0(4)
00000D08 4130 3100               00000100   1258          LA    3,256(0,3)
00000D0C 4140 4100               00000100   1259          LA    4,256(0,4)
00000D10 E350 C162 0046          00000D02   1260          BCTG  5,@@gen_label76
00000D16                                    1261 @@gen_label77 DS 0H
00000D16 4410 C09E               00000C3E   1262          EX    1,@lit_763_45
00000D1A                                    1263 @@gen_label78 DS 0H
                                            1264 * ***                   strtup->value[value_len] = '\0';
00000D1A E310 F000 0004          00000000   1265          LG    1,0(0,15)   ; strtup
00000D20 4112 1000               00000000   1266          LA    1,0(2,1)
00000D24 9200 1000      00000000 00000000   1267          MVI   0(1),0
                                            1268 * ***           } else {
00000D28 47F0 C196               00000D36   1269          B     @L97
00000D2C                                    1270 @L96     DS    0H
                                            1271 * ***                   strtup->value = ((void *)0);
00000D2C A719 0000               00000000   1272          LGHI  1,0         ; 0
00000D30 E310 F000 0024          00000000   1273          STG   1,0(0,15)   ; strtup
                                            1274 * ***           }
00000D36                                    1275 @L97     DS    0H
                                            1276 * ***
                                            1277 * ***           return strtup;
                                            1278 * ***   }
                                            1279 * * **** Start of Epilogue
                                            1280          DCCEPIL
00000D36                                    1281+         ds 0h                                                          01-DCCEP
                                            1282+* Epilog
00000D36 D707 D088 D088 00000088 00000088   1283+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page   29 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000D3C E3D0 D080 0004          00000080   1284+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000D42 E3C0 D090 0004          00000090   1285+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000D48 E3B0 C018 0004          00000018   1286+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000D4E E3C0 B010 0021          00000010   1287+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000D54 E3E0 D008 0004          00000008   1288+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000D5A EB1C D020 0004          00000020   1289+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000D60 078E                               1290+         bcr 8,14                if same dsab, just return              01-DCCEP
00000D62 E3F0 D010 0024          00000010   1291+         stg 15,16(0,13)         save return code                       01-DCCEP
00000D68 E300 D018 0024          00000018   1292+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000D6E E3F0 D090 0004          00000090   1293+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D74 E3F0 F018 0004          00000018   1294+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D7A 47F0 F040               00000040   1295+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1296+* End of Epilog
                                            1297 * * **** End of Epilogue
                                            1298          DROP  12
                                            1299 *
                                            1300 *   DSECT for automatic variables in "rd_strtup_new0"
                                            1301 *      (FUNCTION #763)
                                            1302 *
00000000                00000000 000000A8   1303 @AUTO#rd_strtup_new0 DSECT
00000000                                    1304          DS    XL168
                                            1305 *
00000D7E                00000000 00001CB0   1306 @CODE    CSECT
                                            1307 *
                                            1308 *
                                            1309 *
                                            1310 * ....... start of rd_strtup_new
                                            1311 rd_strtup_new ALIAS X'99846DA2A399A3A4976D9585A6'
00000D7E                                    1312 @LNAME764 DS   0H
00000D7E 0000000D                           1313          DC    X'0000000D'
00000D82 99846DA2A399A3A4                   1314          DC    C'rd_strtup_new'
00000D8F 00                                 1315          DC    X'00'
                                            1316 rd_strtup_new DCCPRLG CINDEX=764,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME764
                                            1317          macro
                                            1318          dccextrn &m
                                            1319          gblc    &$dccext(1000)
                                            1320          gbla    &$dccexti
                                            1321          lcla    &i
                                            1322 &$dccext(&$dccexti+1) setc    '&m'
                                            1323 &i       seta    1
                                            1324 .loop    aif    (&i gt &$dccexti).around
                                            1325          aif    ('&$dccext(&i)' eq '&m').getout
                                            1326 &i       seta    &i+1
                                            1327          ago     .loop
                                            1328 .around  anop
                                            1329 &$dccexti seta &$dccexti+1
                                            1330          extrn  &m
                                            1331 .getout  anop
                                            1332          mend
00000D90                                    1333+$eye0023    ds    0d                                                    02-DCCCA
00000D90 C4C3C3                             1334+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000D93 01                                 1335+         dc xl1'01' format one                                          02-DCCCA
00000D94 00000000                           1336+         dc a(0)                                                        02-DCCCA
00000D98 0000000000000E02                   1337+         dc ad(@PER_764)                                                02-DCCCA
00000DA0 00000000000000C8                   1338+         dc ad(200)                                                     02-DCCCA
00000DA8 0000000000000000                   1339+         dc ad(0)                                                       02-DCCCA
00000DB0 0000000000001000                   1340+         dc ad(4096)                                                    02-DCCCA
00000DB8 20                                 1341+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000DB9 03                                 1342+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000DBA 03                                 1343+         dc al1(3)                                                      02-DCCCA
00000DBB 08                                 1344+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000DBC 00                                 1345+         dc bl.8'00000000'                                              02-DCCCA
00000DBD 000000                             1346+         dc al3(0)                                                      02-DCCCA
00000DC0 0000000000000D7E                   1347+         dc ad(@LNAME764)                                               02-DCCCA
00000DC8                                    1348+         ds 0d                                                          02-DCCCA
00000DC8 0000000000000D90                   1349+         dc ad($eye0023)                                                02-DCCCA
00000DD0 0000000000000000                   1350+         dc ad(0)                                                       02-DCCCA
00000DD8                                    1351+         ds    0d                                                       01-DCCPR
                                            1352+         entry rd_strtup_new                                            01-DCCPR
00000DD8                                    1353+rd_strtup_new ds 0d                                                     01-DCCPR
00000DD8                                    1354+@REGION_764_1 ds 0h                                                     01-DCCPR
00000DD8 EBEC D008 0024          00000008   1355+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DDE E3E0 D088 0004          00000088   1356+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000DE4 E3C0 D090 0004          00000090   1357+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DEA B904 002E                          1358+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DEE E3B0 C018 0004          00000018   1359+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DF4 A7EB 00C8               000000C8   1360+         aghi  14,200              increase by frame size               01-DCCPR
00000DF8 E3E0 C020 0021          00000020   1361+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DFE 4720 B020               00000020   1362+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000E02                                    1363+@PER_764 ds    0h                                                       01-DCCPR
00000E02 EBDE 2080 0024          00000080   1364+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000E08 E3C0 2090 0024          00000090   1365+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000E0E B904 00D2                          1366+         lgr   13,2                set real frame pointer               01-DCCPR
00000E12 B904 00CF                          1367+         lgr   12,15               set base reg                         01-DCCPR
                        00000DD8            1368+         using @REGION_764_1,12                                         01-DCCPR
                                            1369 * ******* End of Prologue
                                            1370 * *
                                            1371 * ***           return rd_strtup_new0(name, -1, value, -1);
00000E16 E3F0 1000 0004          00000000   1372          LG    15,0(0,1)   ; name
00000E1C E3F0 D0A8 0024          000000A8   1373          STG   15,168(0,13)
00000E22 E548 D0B0 FFFF          000000B0   1374          MVGHI 176(13),-1
00000E28 E3F0 1008 0004          00000008   1375          LG    15,8(0,1)   ; value
00000E2E E3F0 D0B8 0024          000000B8   1376          STG   15,184(0,13)
00000E34 E548 D0C0 FFFF          000000C0   1377          MVGHI 192(13),-1
00000E3A 4110 D0A8               000000A8   1378          LA    1,168(0,13)
00000E3E E3F0 C0C0 0004          00000E98   1379          LG    15,@lit_764_48 ; rd_strtup_new0
00000E44                                    1380 @@gen_label79 DS    0H
00000E44 05EF                               1381          BALR  14,15
00000E46                                    1382 @@gen_label80 DS    0H
                                            1383 * ***   }
                                            1384 * * **** Start of Epilogue
                                            1385          DCCEPIL
00000E46                                    1386+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   31 
  Active Usings: @REGION_764_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1387+* Epilog
00000E46 D707 D088 D088 00000088 00000088   1388+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E4C E3D0 D080 0004          00000080   1389+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E52 E3C0 D090 0004          00000090   1390+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E58 E3B0 C018 0004          00000018   1391+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E5E E3C0 B010 0021          00000010   1392+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E64 E3E0 D008 0004          00000008   1393+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E6A EB1C D020 0004          00000020   1394+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E70 078E                               1395+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E72 E3F0 D010 0024          00000010   1396+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E78 E300 D018 0024          00000018   1397+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E7E E3F0 D090 0004          00000090   1398+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E84 E3F0 F018 0004          00000018   1399+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E8A 47F0 F040               00000040   1400+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1401+* End of Epilog
                                            1402 * * **** End of Epilogue
00000E90                                    1403          DS    0D
00000E90 000000C8                           1404 @FRAMESIZE_764 DC F'200'
00000E94 00000000
00000E98 0000000000000BA0                   1405 @lit_764_48 DC AD(rd_strtup_new0)
                                            1406          DROP  12
                                            1407 *
                                            1408 *   DSECT for automatic variables in "rd_strtup_new"
                                            1409 *      (FUNCTION #764)
                                            1410 *
00000000                00000000 000000A8   1411 @AUTO#rd_strtup_new DSECT
00000000                                    1412          DS    XL168
                                            1413 *
00000EA0                00000000 00001CB0   1414 @CODE    CSECT
                                            1415 *
                                            1416 *
                                            1417 *
                                            1418 * ....... start of rd_strtup_dup
                                            1419 rd_strtup_dup ALIAS X'99846DA2A399A3A4976D84A497'
00000EA0                                    1420 @LNAME765 DS   0H
00000EA0 0000000D                           1421          DC    X'0000000D'
00000EA4 99846DA2A399A3A4                   1422          DC    C'rd_strtup_dup'
00000EB1 00                                 1423          DC    X'00'
                                            1424 rd_strtup_dup DCCPRLG CINDEX=765,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME765
                                            1425          macro
                                            1426          dccextrn &m
                                            1427          gblc    &$dccext(1000)
                                            1428          gbla    &$dccexti
                                            1429          lcla    &i
                                            1430 &$dccext(&$dccexti+1) setc    '&m'
                                            1431 &i       seta    1
                                            1432 .loop    aif    (&i gt &$dccexti).around
                                            1433          aif    ('&$dccext(&i)' eq '&m').getout
                                            1434 &i       seta    &i+1
                                            1435          ago     .loop
                                            1436 .around  anop
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1437 &$dccexti seta &$dccexti+1
                                            1438          extrn  &m
                                            1439 .getout  anop
                                            1440          mend
00000EB8                                    1441+$eye0026    ds    0d                                                    02-DCCCA
00000EB8 C4C3C3                             1442+         dc cl3'DCC'                                                    02-DCCCA
00000EBB 01                                 1443+         dc xl1'01' format one                                          02-DCCCA
00000EBC 00000000                           1444+         dc a(0)                                                        02-DCCCA
00000EC0 0000000000000F2A                   1445+         dc ad(@PER_765)                                                02-DCCCA
00000EC8 00000000000000B8                   1446+         dc ad(184)                                                     02-DCCCA
00000ED0 0000000000000000                   1447+         dc ad(0)                                                       02-DCCCA
00000ED8 0000000000001000                   1448+         dc ad(4096)                                                    02-DCCCA
00000EE0 20                                 1449+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000EE1 03                                 1450+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000EE2 03                                 1451+         dc al1(3)                                                      02-DCCCA
00000EE3 08                                 1452+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000EE4 00                                 1453+         dc bl.8'00000000'                                              02-DCCCA
00000EE5 000000                             1454+         dc al3(0)                                                      02-DCCCA
00000EE8 0000000000000EA0                   1455+         dc ad(@LNAME765)                                               02-DCCCA
00000EF0                                    1456+         ds 0d                                                          02-DCCCA
00000EF0 0000000000000EB8                   1457+         dc ad($eye0026)                                                02-DCCCA
00000EF8 0000000000000000                   1458+         dc ad(0)                                                       02-DCCCA
00000F00                                    1459+         ds    0d                                                       01-DCCPR
                                            1460+         entry rd_strtup_dup                                            01-DCCPR
00000F00                                    1461+rd_strtup_dup ds 0d                                                     01-DCCPR
00000F00                                    1462+@REGION_765_1 ds 0h                                                     01-DCCPR
00000F00 EBEC D008 0024          00000008   1463+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F06 E3E0 D088 0004          00000088   1464+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F0C E3C0 D090 0004          00000090   1465+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F12 B904 002E                          1466+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F16 E3B0 C018 0004          00000018   1467+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F1C A7EB 00B8               000000B8   1468+         aghi  14,184              increase by frame size               01-DCCPR
00000F20 E3E0 C020 0021          00000020   1469+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F26 4720 B020               00000020   1470+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F2A                                    1471+@PER_765 ds    0h                                                       01-DCCPR
00000F2A EBDE 2080 0024          00000080   1472+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F30 E3C0 2090 0024          00000090   1473+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F36 B904 00D2                          1474+         lgr   13,2                set real frame pointer               01-DCCPR
00000F3A B904 00CF                          1475+         lgr   12,15               set base reg                         01-DCCPR
                        00000F00            1476+         using @REGION_765_1,12                                         01-DCCPR
                                            1477 * ******* End of Prologue
                                            1478 * *
                                            1479 * ***           return rd_strtup_new(src->name, src->value);
00000F3E E3F0 1000 0004          00000000   1480          LG    15,0(0,1)   ; src
00000F44 4110 F008               00000008   1481          LA    1,8(0,15)
00000F48 E310 D0A8 0024          000000A8   1482          STG   1,168(0,13)
00000F4E E3F0 F000 0004          00000000   1483          LG    15,0(0,15)
00000F54 E3F0 D0B0 0024          000000B0   1484          STG   15,176(0,13)
00000F5A 4110 D0A8               000000A8   1485          LA    1,168(0,13)
00000F5E E3F0 C0B8 0004          00000FB8   1486          LG    15,@lit_765_50 ; rd_strtup_new
00000F64                                    1487 @@gen_label81 DS    0H
00000F64 05EF                               1488          BALR  14,15
                                                                                                                           Page   33 
  Active Usings: @REGION_765_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000F66                                    1489 @@gen_label82 DS    0H
                                            1490 * ***   }
                                            1491 * * **** Start of Epilogue
                                            1492          DCCEPIL
00000F66                                    1493+         ds 0h                                                          01-DCCEP
                                            1494+* Epilog
00000F66 D707 D088 D088 00000088 00000088   1495+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000F6C E3D0 D080 0004          00000080   1496+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000F72 E3C0 D090 0004          00000090   1497+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000F78 E3B0 C018 0004          00000018   1498+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000F7E E3C0 B010 0021          00000010   1499+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000F84 E3E0 D008 0004          00000008   1500+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000F8A EB1C D020 0004          00000020   1501+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000F90 078E                               1502+         bcr 8,14                if same dsab, just return              01-DCCEP
00000F92 E3F0 D010 0024          00000010   1503+         stg 15,16(0,13)         save return code                       01-DCCEP
00000F98 E300 D018 0024          00000018   1504+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000F9E E3F0 D090 0004          00000090   1505+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000FA4 E3F0 F018 0004          00000018   1506+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000FAA 47F0 F040               00000040   1507+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1508+* End of Epilog
                                            1509 * * **** End of Epilogue
00000FB0                                    1510          DS    0D
00000FB0 000000B8                           1511 @FRAMESIZE_765 DC F'184'
00000FB4 00000000
00000FB8 0000000000000DD8                   1512 @lit_765_50 DC AD(rd_strtup_new)
                                            1513          DROP  12
                                            1514 *
                                            1515 *   DSECT for automatic variables in "rd_strtup_dup"
                                            1516 *      (FUNCTION #765)
                                            1517 *
00000000                00000000 000000A8   1518 @AUTO#rd_strtup_dup DSECT
00000000                                    1519          DS    XL168
                                            1520 *
00000FC0                00000000 00001CB0   1521 @CODE    CSECT
                                            1522 *
                                            1523 *
                                            1524 *
                                            1525 * ....... start of rd_strtup_list_copy
                                            1526 rd_strtup_list_copy ALIAS X'99846DA2A399A3A4976D9389A2A36D839697A8'
00000FC0                                    1527 @LNAME766 DS   0H
00000FC0 00000013                           1528          DC    X'00000013'
00000FC4 99846DA2A399A3A4                   1529          DC    C'rd_strtup_list_copy'
00000FD7 00                                 1530          DC    X'00'
                                            1531 rd_strtup_list_copy DCCPRLG CINDEX=766,BASER=12,FRAME=184,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME766
                                            1532          macro
                                            1533          dccextrn &m
                                            1534          gblc    &$dccext(1000)
                                            1535          gbla    &$dccexti
                                            1536          lcla    &i
                                            1537 &$dccext(&$dccexti+1) setc    '&m'
                                            1538 &i       seta    1
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1539 .loop    aif    (&i gt &$dccexti).around
                                            1540          aif    ('&$dccext(&i)' eq '&m').getout
                                            1541 &i       seta    &i+1
                                            1542          ago     .loop
                                            1543 .around  anop
                                            1544 &$dccexti seta &$dccexti+1
                                            1545          extrn  &m
                                            1546 .getout  anop
                                            1547          mend
00000FD8                                    1548+$eye0029    ds    0d                                                    02-DCCCA
00000FD8 C4C3C3                             1549+         dc cl3'DCC'                                                    02-DCCCA
00000FDB 01                                 1550+         dc xl1'01' format one                                          02-DCCCA
00000FDC 00000000                           1551+         dc a(0)                                                        02-DCCCA
00000FE0 000000000000104A                   1552+         dc ad(@PER_766)                                                02-DCCCA
00000FE8 00000000000000B8                   1553+         dc ad(184)                                                     02-DCCCA
00000FF0 0000000000000000                   1554+         dc ad(0)                                                       02-DCCCA
00000FF8 0000000000001000                   1555+         dc ad(4096)                                                    02-DCCCA
00001000 20                                 1556+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001001 03                                 1557+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001002 03                                 1558+         dc al1(3)                                                      02-DCCCA
00001003 08                                 1559+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001004 00                                 1560+         dc bl.8'00000000'                                              02-DCCCA
00001005 000000                             1561+         dc al3(0)                                                      02-DCCCA
00001008 0000000000000FC0                   1562+         dc ad(@LNAME766)                                               02-DCCCA
00001010                                    1563+         ds 0d                                                          02-DCCCA
00001010 0000000000000FD8                   1564+         dc ad($eye0029)                                                02-DCCCA
00001018 0000000000000000                   1565+         dc ad(0)                                                       02-DCCCA
00001020                                    1566+         ds    0d                                                       01-DCCPR
                                            1567+         entry rd_strtup_list_copy                                      01-DCCPR
00001020                                    1568+rd_strtup_list_copy ds 0d                                               01-DCCPR
00001020                                    1569+@REGION_766_1 ds 0h                                                     01-DCCPR
00001020 EBEC D008 0024          00000008   1570+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001026 E3E0 D088 0004          00000088   1571+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000102C E3C0 D090 0004          00000090   1572+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001032 B904 002E                          1573+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001036 E3B0 C018 0004          00000018   1574+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000103C A7EB 00B8               000000B8   1575+         aghi  14,184              increase by frame size               01-DCCPR
00001040 E3E0 C020 0021          00000020   1576+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001046 4720 B020               00000020   1577+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000104A                                    1578+@PER_766 ds    0h                                                       01-DCCPR
0000104A EBDE 2080 0024          00000080   1579+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001050 E3C0 2090 0024          00000090   1580+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001056 B904 00D2                          1581+         lgr   13,2                set real frame pointer               01-DCCPR
0000105A B904 00CF                          1582+         lgr   12,15               set base reg                         01-DCCPR
                        00001020            1583+         using @REGION_766_1,12                                         01-DCCPR
                                            1584 * ******* End of Prologue
                                            1585 * *
                                            1586 * ***           const rd_strtup_t *src = elem;
0000105E E3F0 1000 0004          00000000   1587          LG    15,0(0,1)   ; elem
                                            1588 * ***           return (void *)rd_strtup_dup(src);
00001064 E3F0 D0B0 0024          000000B0   1589          STG   15,176(0,13)
0000106A 4110 D0B0               000000B0   1590          LA    1,176(0,13)
                                                                                                                           Page   35 
  Active Usings: @REGION_766_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000106E E3F0 C0A8 0004          000010C8   1591          LG    15,@lit_766_52 ; rd_strtup_dup
00001074                                    1592 @@gen_label83 DS    0H
00001074 05EF                               1593          BALR  14,15
00001076                                    1594 @@gen_label84 DS    0H
                                            1595 * ***   }
                                            1596 * * **** Start of Epilogue
                                            1597          DCCEPIL
00001076                                    1598+         ds 0h                                                          01-DCCEP
                                            1599+* Epilog
00001076 D707 D088 D088 00000088 00000088   1600+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000107C E3D0 D080 0004          00000080   1601+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001082 E3C0 D090 0004          00000090   1602+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001088 E3B0 C018 0004          00000018   1603+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000108E E3C0 B010 0021          00000010   1604+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001094 E3E0 D008 0004          00000008   1605+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000109A EB1C D020 0004          00000020   1606+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000010A0 078E                               1607+         bcr 8,14                if same dsab, just return              01-DCCEP
000010A2 E3F0 D010 0024          00000010   1608+         stg 15,16(0,13)         save return code                       01-DCCEP
000010A8 E300 D018 0024          00000018   1609+         stg 0,24(0,13)          save more return code                  01-DCCEP
000010AE E3F0 D090 0004          00000090   1610+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000010B4 E3F0 F018 0004          00000018   1611+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000010BA 47F0 F040               00000040   1612+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1613+* End of Epilog
                                            1614 * * **** End of Epilogue
000010C0                                    1615          DS    0D
000010C0 000000B8                           1616 @FRAMESIZE_766 DC F'184'
000010C4 00000000
000010C8 0000000000000F00                   1617 @lit_766_52 DC AD(rd_strtup_dup)
                                            1618          DROP  12
                                            1619 *
                                            1620 *   DSECT for automatic variables in "rd_strtup_list_copy"
                                            1621 *      (FUNCTION #766)
                                            1622 *
00000000                00000000 000000A8   1623 @AUTO#rd_strtup_list_copy DSECT
00000000                                    1624          DS    XL168
                                            1625 *
000010D0                00000000 00001CB0   1626 @CODE    CSECT
                                            1627 *
                                            1628 *
                                            1629 *
                                            1630 * ....... start of rd_flags2str
                                            1631 rd_flags2str ALIAS X'99846D86938187A2F2A2A399'
000010D0                                    1632 @LNAME767 DS   0H
000010D0 0000000C                           1633          DC    X'0000000C'
000010D4 99846D86938187A2                   1634          DC    C'rd_flags2str'
000010E0 00                                 1635          DC    X'00'
                                            1636 rd_flags2str DCCPRLG CINDEX=767,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME767
                                            1637          macro
                                            1638          dccextrn &m
                                            1639          gblc    &$dccext(1000)
                                            1640          gbla    &$dccexti
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1641          lcla    &i
                                            1642 &$dccext(&$dccexti+1) setc    '&m'
                                            1643 &i       seta    1
                                            1644 .loop    aif    (&i gt &$dccexti).around
                                            1645          aif    ('&$dccext(&i)' eq '&m').getout
                                            1646 &i       seta    &i+1
                                            1647          ago     .loop
                                            1648 .around  anop
                                            1649 &$dccexti seta &$dccexti+1
                                            1650          extrn  &m
                                            1651 .getout  anop
                                            1652          mend
000010E8                                    1653+$eye0032    ds    0d                                                    02-DCCCA
000010E8 C4C3C3                             1654+         dc cl3'DCC'                                                    02-DCCCA
000010EB 01                                 1655+         dc xl1'01' format one                                          02-DCCCA
000010EC 00000000                           1656+         dc a(0)                                                        02-DCCCA
000010F0 000000000000115A                   1657+         dc ad(@PER_767)                                                02-DCCCA
000010F8 00000000000000D8                   1658+         dc ad(216)                                                     02-DCCCA
00001100 0000000000000000                   1659+         dc ad(0)                                                       02-DCCCA
00001108 0000000000001000                   1660+         dc ad(4096)                                                    02-DCCCA
00001110 20                                 1661+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001111 03                                 1662+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001112 03                                 1663+         dc al1(3)                                                      02-DCCCA
00001113 08                                 1664+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001114 00                                 1665+         dc bl.8'00000000'                                              02-DCCCA
00001115 000000                             1666+         dc al3(0)                                                      02-DCCCA
00001118 00000000000010D0                   1667+         dc ad(@LNAME767)                                               02-DCCCA
00001120                                    1668+         ds 0d                                                          02-DCCCA
00001120 00000000000010E8                   1669+         dc ad($eye0032)                                                02-DCCCA
00001128 0000000000000000                   1670+         dc ad(0)                                                       02-DCCCA
00001130                                    1671+         ds    0d                                                       01-DCCPR
                                            1672+         entry rd_flags2str                                             01-DCCPR
00001130                                    1673+rd_flags2str ds 0d                                                      01-DCCPR
00001130                                    1674+@REGION_767_1 ds 0h                                                     01-DCCPR
00001130 EBEC D008 0024          00000008   1675+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001136 E3E0 D088 0004          00000088   1676+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000113C E3C0 D090 0004          00000090   1677+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001142 B904 002E                          1678+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001146 E3B0 C018 0004          00000018   1679+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000114C A7EB 00D8               000000D8   1680+         aghi  14,216              increase by frame size               01-DCCPR
00001150 E3E0 C020 0021          00000020   1681+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001156 4720 B020               00000020   1682+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000115A                                    1683+@PER_767 ds    0h                                                       01-DCCPR
0000115A EBDE 2080 0024          00000080   1684+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001160 E3C0 2090 0024          00000090   1685+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001166 B904 00D2                          1686+         lgr   13,2                set real frame pointer               01-DCCPR
0000116A B904 00CF                          1687+         lgr   12,15               set base reg                         01-DCCPR
                        00001130            1688+         using @REGION_767_1,12                                         01-DCCPR
0000116E B904 0071                          1689          LGR   7,1         ; ptr to parm area
                                            1690 * ******* End of Prologue
                                            1691 * *
                                            1692 * ***           int bit = 0;
                                                                                                                           Page   37 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001172 EB56 7000 0004          00000000   1693          LMG   5,6,0(7)    ; dst
00001178 E330 7010 0004          00000010   1694          LG    3,16(0,7)   ; desc
0000117E A748 0000               00000000   1695          LHI   4,0         ; 0
                                            1696 * ***           size_t of = 0;
00001182 A729 0000               00000000   1697          LGHI  2,0         ; 0
                                            1698 * ***
                                            1699 * ***           for ( ; *desc ; desc++, bit++) {
00001186 47F0 C156               00001286   1700          B     @L99
00001190                                    1701          DS    0D
00001190 000000D8                           1702 @FRAMESIZE_767 DC F'216'
00001194 00000000
00001198 0000000000000000                   1703 @lit_767_58 DC AD(snprintf)
000011A0 0000000000001EF6                   1704 @lit_767_57 DC AD(@strings@)
000011A8                                    1705 @L98     DS    0H
                                            1706 * ***                   int r;
                                            1707 * ***
                                            1708 * ***                   if (!(flags & (1 << bit)) || !*desc)
000011A8 A7F8 0001               00000001   1709          LHI   15,1        ; 1
000011AC 89F0 4000               00000000   1710          SLL   15,0(4)
000011B0 54F0 701C               0000001C   1711          N     15,28(0,7)
000011B4 4780 C14E               0000127E   1712          BZ    @L101
000011B8 E3F0 3000 0002          00000000   1713          LTG   15,0(0,3)   ; desc
000011BE 4770 C096               000011C6   1714          BNZ   @L102
000011C2                                    1715 @L103    DS    0H
                                            1716 * ***                           continue;
000011C2 47F0 C14E               0000127E   1717          B     @L101
000011C6                                    1718 @L102    DS    0H
                                            1719 * ***
                                            1720 * ***                   if (of >= size) {
000011C6 B921 0026                          1721          CLGR  2,6
000011CA 4740 C0E0               00001210   1722          BL    @L104
                                            1723 * ***
                                            1724 * ***                           if (size > 3)
000011CE C26E 0000 0003                     1725          CLGFI 6,X'00000003'
000011D4 47D0 C160               00001290   1726          BNH   @L100
                                            1727 * ***                                   snprintf(dst+(size-3), 3, ".."\
                                            1728 * );
000011D8 B904 00F6                          1729          LGR   15,6
000011DC A7FB FFFD               0000FFFD   1730          AGHI  15,-3
000011E0 41FF 5000               00000000   1731          LA    15,0(15,5)
000011E4 E3F0 D0B0 0024          000000B0   1732          STG   15,176(0,13)
000011EA E548 D0B8 0003          000000B8   1733          MVGHI 184(13),3
000011F0 E3F0 C070 0004          000011A0   1734          LG    15,@lit_767_57
000011F6 41F0 F0A8               000000A8   1735          LA    15,168(0,15)
000011FA E3F0 D0C0 0024          000000C0   1736          STG   15,192(0,13)
00001200 4110 D0B0               000000B0   1737          LA    1,176(0,13)
00001204 E3F0 C068 0004          00001198   1738          LG    15,@lit_767_58 ; snprintf
0000120A                                    1739 @@gen_label89 DS    0H
0000120A 05EF                               1740          BALR  14,15
0000120C                                    1741 @@gen_label90 DS    0H
0000120C                                    1742 @L105    DS    0H
                                            1743 * ***                           break;
                                                                                                                           Page   38 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000120C 47F0 C160               00001290   1744          B     @L100
                                            1745 * ***                   }
00001210                                    1746 @L104    DS    0H
                                            1747 * ***
                                            1748 * ***                   r = snprintf(dst+of, size-of, "%s%s", !of ? ""\
                                            1749 *  : ",", *desc);
00001210 B902 00F2                          1750          LTGR  15,2
00001214 4770 C0F6               00001226   1751          BNZ   @L106
00001218 E3F0 C070 0004          000011A0   1752          LG    15,@lit_767_57
0000121E 41F0 F0AC               000000AC   1753          LA    15,172(0,15)
00001222 47F0 C100               00001230   1754          B     @L107
00001226                                    1755 @L106    DS    0H
00001226 E3F0 C070 0004          000011A0   1756          LG    15,@lit_767_57
0000122C 41F0 F0AE               000000AE   1757          LA    15,174(0,15)
00001230                                    1758 @L107    DS    0H
00001230 4112 5000               00000000   1759          LA    1,0(2,5)
00001234 E310 D0B0 0024          000000B0   1760          STG   1,176(0,13)
0000123A B904 0016                          1761          LGR   1,6
0000123E B90B 0012                          1762          SLGR  1,2
00001242 E310 D0B8 0024          000000B8   1763          STG   1,184(0,13)
00001248 E310 C070 0004          000011A0   1764          LG    1,@lit_767_57
0000124E 4110 10B0               000000B0   1765          LA    1,176(0,1)
00001252 E310 D0C0 0024          000000C0   1766          STG   1,192(0,13)
00001258 E3F0 D0C8 0024          000000C8   1767          STG   15,200(0,13)
0000125E E3F0 3000 0004          00000000   1768          LG    15,0(0,3)
00001264 E3F0 D0D0 0024          000000D0   1769          STG   15,208(0,13)
0000126A 4110 D0B0               000000B0   1770          LA    1,176(0,13)
0000126E E3F0 C068 0004          00001198   1771          LG    15,@lit_767_58 ; snprintf
00001274                                    1772 @@gen_label92 DS    0H
00001274 05EF                               1773          BALR  14,15
00001276                                    1774 @@gen_label93 DS    0H
                                            1775 * ***
                                            1776 * ***
                                            1777 * ***                   of += r;
00001276 B914 00FF                          1778          LGFR  15,15
0000127A B90A 002F                          1779          ALGR  2,15
                                            1780 * ***           }
0000127E                                    1781 @L101    DS    0H
0000127E 4130 3008               00000008   1782          LA    3,8(0,3)
00001282 A74A 0001               00000001   1783          AHI   4,1
00001286                                    1784 @L99     DS    0H
00001286 E3F0 3000 0002          00000000   1785          LTG   15,0(0,3)   ; desc
0000128C 4770 C078               000011A8   1786          BNZ   @L98
00001290                                    1787 @L100    DS    0H
                                            1788 * ***
                                            1789 * ***           if (of == 0 && size > 0)
00001290 B902 00F2                          1790          LTGR  15,2
00001294 4770 C176               000012A6   1791          BNE   @L108
00001298 C26E 0000 0000                     1792          CLGFI 6,X'00000000'
0000129E 47D0 C176               000012A6   1793          BNH   @L108
                                            1794 * ***                   *dst = '\0';
000012A2 9200 5000      00000000 00000000   1795          MVI   0(5),0      ; dst
                                                                                                                           Page   39 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000012A6                                    1796 @L108    DS    0H
                                            1797 * ***
                                            1798 * ***           return dst;
000012A6 B904 00F5                          1799          LGR   15,5
                                            1800 * ***   }
                                            1801 * * **** Start of Epilogue
                                            1802          DCCEPIL
000012AA                                    1803+         ds 0h                                                          01-DCCEP
                                            1804+* Epilog
000012AA D707 D088 D088 00000088 00000088   1805+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012B0 E3D0 D080 0004          00000080   1806+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012B6 E3C0 D090 0004          00000090   1807+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012BC E3B0 C018 0004          00000018   1808+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012C2 E3C0 B010 0021          00000010   1809+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012C8 E3E0 D008 0004          00000008   1810+         lg  14,8(0,13)          load up return address                 01-DCCEP
000012CE EB1C D020 0004          00000020   1811+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000012D4 078E                               1812+         bcr 8,14                if same dsab, just return              01-DCCEP
000012D6 E3F0 D010 0024          00000010   1813+         stg 15,16(0,13)         save return code                       01-DCCEP
000012DC E300 D018 0024          00000018   1814+         stg 0,24(0,13)          save more return code                  01-DCCEP
000012E2 E3F0 D090 0004          00000090   1815+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000012E8 E3F0 F018 0004          00000018   1816+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000012EE 47F0 F040               00000040   1817+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1818+* End of Epilog
                                            1819 * * **** End of Epilogue
                                            1820          DROP  12
                                            1821 *
                                            1822 *   DSECT for automatic variables in "rd_flags2str"
                                            1823 *      (FUNCTION #767)
                                            1824 *
00000000                00000000 000000B0   1825 @AUTO#rd_flags2str DSECT
00000000                                    1826          DS    XL168
000000A8                                    1827 rd_flags2str#r#1 DS 1F     ; r
000000AC                000000AC 000000A8   1828          ORG   @AUTO#rd_flags2str+168
000000A8                                    1829 rd_flags2str#of#0 DS 8XL1  ; of
000000B0                000000B0 000000A8   1830          ORG   @AUTO#rd_flags2str+168
000000A8                                    1831 rd_flags2str#bit#0 DS 1F   ; bit
                                            1832 *
000012F2                00000000 00001CB0   1833 @CODE    CSECT
                                            1834 *
                                            1835 *
                                            1836 *
                                            1837 * ....... start of rd_string_hash
                                            1838 rd_string_hash ALIAS X'99846DA2A3998995876D8881A288'
000012F2                                    1839 @LNAME768 DS   0H
000012F2 0000000E                           1840          DC    X'0000000E'
000012F6 99846DA2A3998995                   1841          DC    C'rd_string_hash'
00001304 00                                 1842          DC    X'00'
                                            1843 rd_string_hash DCCPRLG CINDEX=768,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME768
                                            1844          macro
                                            1845          dccextrn &m
                                            1846          gblc    &$dccext(1000)
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1847          gbla    &$dccexti
                                            1848          lcla    &i
                                            1849 &$dccext(&$dccexti+1) setc    '&m'
                                            1850 &i       seta    1
                                            1851 .loop    aif    (&i gt &$dccexti).around
                                            1852          aif    ('&$dccext(&i)' eq '&m').getout
                                            1853 &i       seta    &i+1
                                            1854          ago     .loop
                                            1855 .around  anop
                                            1856 &$dccexti seta &$dccexti+1
                                            1857          extrn  &m
                                            1858 .getout  anop
                                            1859          mend
00001308                                    1860+$eye0035    ds    0d                                                    02-DCCCA
00001308 C4C3C3                             1861+         dc cl3'DCC'                                                    02-DCCCA
0000130B 01                                 1862+         dc xl1'01' format one                                          02-DCCCA
0000130C 00000000                           1863+         dc a(0)                                                        02-DCCCA
00001310 0000000000000000                   1864+         dc ad(0)                                                       02-DCCCA
00001318 00000000000000B0                   1865+         dc ad(176)                                                     02-DCCCA
00001320 0000000000000000                   1866+         dc ad(0)                                                       02-DCCCA
00001328 0000000000001000                   1867+         dc ad(4096)                                                    02-DCCCA
00001330 20                                 1868+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001331 03                                 1869+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001332 03                                 1870+         dc al1(3)                                                      02-DCCCA
00001333 08                                 1871+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001334 00                                 1872+         dc bl.8'00000000'                                              02-DCCCA
00001335 000000                             1873+         dc al3(0)                                                      02-DCCCA
00001338 00000000000012F2                   1874+         dc ad(@LNAME768)                                               02-DCCCA
00001340                                    1875+         ds 0d                                                          02-DCCCA
00001340 0000000000001308                   1876+         dc ad($eye0035)                                                02-DCCCA
00001348 0000000000000000                   1877+         dc ad(0)                                                       02-DCCCA
00001350                                    1878+         ds    0d                                                       01-DCCPR
                                            1879+         entry rd_string_hash                                           01-DCCPR
00001350                                    1880+rd_string_hash ds 0d                                                    01-DCCPR
00001350                                    1881+@REGION_768_1 ds 0h                                                     01-DCCPR
00001350 EBEC D008 0024          00000008   1882+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001356 B904 00CF                          1883+         lgr   12,15               set base reg                         01-DCCPR
                        00001350            1884+         using @REGION_768_1,12                                         01-DCCPR
0000135A B904 0031                          1885          LGR   3,1         ; ptr to parm area
                                            1886 * ******* End of Prologue
                                            1887 * *
                                            1888 * ***           unsigned int hash = 5381;
0000135E E3F0 3000 0004          00000000   1889          LG    15,0(0,3)   ; str
00001364 A718 1505               00001505   1890          LHI   1,5381      ; 5381
                                            1891 * ***           ssize_t i;
                                            1892 * ***
                                            1893 * ***           if (len == -1) {
00001368 E558 3008 FFFF          00000008   1894          CGHSI 8(3),-1
0000136E 4770 C050               000013A0   1895          BNE   @L109
                                            1896 * ***                   for (i = 0 ; str[i] != '\0' ; i++)
00001372 A729 0000               00000000   1897          LGHI  2,0         ; 0
00001376 47F0 C040               00001390   1898          B     @L111
                                                                                                                           Page   41 
  Active Usings: @REGION_768_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000137A                                    1899 @L110    DS    0H
                                            1900 * ***                           hash = ((hash << 5) + hash) + str[i];
0000137A 1831                               1901          LR    3,1
0000137C 8930 0005               00000005   1902          SLL   3,5(0)
00001380 1E31                               1903          ALR   3,1
00001382 E312 F000 0094          00000000   1904          LLC   1,0(2,15)
00001388 1E31                               1905          ALR   3,1
0000138A 1813                               1906          LR    1,3         ; hash
0000138C A72B 0001               00000001   1907          AGHI  2,1
00001390                                    1908 @L111    DS    0H
00001390 4132 F000               00000000   1909          LA    3,0(2,15)
00001394 9500 3000      00000000 00000000   1910          CLI   0(3),0
00001398 4770 C02A               0000137A   1911          BNE   @L110
                                            1912 * ***           } else {
0000139C 47F0 C078               000013C8   1913          B     @L114
000013A0                                    1914 @L109    DS    0H
                                            1915 * ***                   for (i = 0 ; i < len ; i++)
000013A0 A729 0000               00000000   1916          LGHI  2,0         ; 0
000013A4 47F0 C06E               000013BE   1917          B     @L116
000013A8                                    1918 @L115    DS    0H
                                            1919 * ***                           hash = ((hash << 5) + hash) + str[i];
000013A8 1841                               1920          LR    4,1
000013AA 8940 0005               00000005   1921          SLL   4,5(0)
000013AE 1E41                               1922          ALR   4,1
000013B0 E312 F000 0094          00000000   1923          LLC   1,0(2,15)
000013B6 1E41                               1924          ALR   4,1
000013B8 1814                               1925          LR    1,4         ; hash
000013BA A72B 0001               00000001   1926          AGHI  2,1
000013BE                                    1927 @L116    DS    0H
000013BE E320 3008 0020          00000008   1928          CG    2,8(0,3)
000013C4 4740 C058               000013A8   1929          BL    @L115
                                            1930 * ***           }
000013C8                                    1931 @L114    DS    0H
                                            1932 * ***
                                            1933 * ***           return hash;
000013C8 B916 00F1                          1934          LLGFR 15,1
                                            1935 * ***   }
                                            1936 * * **** Start of Epilogue
                                            1937          DCCEPIL
000013CC                                    1938+         ds 0h                                                          01-DCCEP
                                            1939+* Epilog
                                            1940+* Epilog
000013CC E3E0 D008 0004          00000008   1941+         lg    14,8(,13) restore the reg                                01-DCCEP
000013D2 EB1C D020 0004          00000020   1942+         lmg   1,12,32(13)                                              01-DCCEP
000013D8 07FE                               1943+         br   14                                                        01-DCCEP
                                            1944+* End of Epilog
                                            1945 * * **** End of Epilogue
                                            1946          DROP  12
                                            1947 *
                                            1948 *   DSECT for automatic variables in "rd_string_hash"
                                            1949 *      (FUNCTION #768)
                                            1950 *
                                                                                                                           Page   42 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000000                00000000 000000B0   1951 @AUTO#rd_string_hash DSECT
00000000                                    1952          DS    XL168
000000A8                                    1953 rd_string_hash#i#0 DS 8XL1 ; i
000000B0                000000B0 000000A8   1954          ORG   @AUTO#rd_string_hash+168
000000A8                                    1955 rd_string_hash#hash#0 DS 1F ; hash
                                            1956 *
000013DA                00000000 00001CB0   1957 @CODE    CSECT
                                            1958 *
                                            1959 *
                                            1960 *
                                            1961 * ....... start of rd_strcmp
                                            1962 rd_strcmp ALIAS X'99846DA2A399839497'
000013DA                                    1963 @LNAME769 DS   0H
000013DA 00000009                           1964          DC    X'00000009'
000013DE 99846DA2A3998394                   1965          DC    C'rd_strcmp'
000013E7 00                                 1966          DC    X'00'
                                            1967 rd_strcmp DCCPRLG CINDEX=769,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME769
                                            1968          macro
                                            1969          dccextrn &m
                                            1970          gblc    &$dccext(1000)
                                            1971          gbla    &$dccexti
                                            1972          lcla    &i
                                            1973 &$dccext(&$dccexti+1) setc    '&m'
                                            1974 &i       seta    1
                                            1975 .loop    aif    (&i gt &$dccexti).around
                                            1976          aif    ('&$dccext(&i)' eq '&m').getout
                                            1977 &i       seta    &i+1
                                            1978          ago     .loop
                                            1979 .around  anop
                                            1980 &$dccexti seta &$dccexti+1
                                            1981          extrn  &m
                                            1982 .getout  anop
                                            1983          mend
000013E8                                    1984+$eye0038    ds    0d                                                    02-DCCCA
000013E8 C4C3C3                             1985+         dc cl3'DCC'                                                    02-DCCCA
000013EB 01                                 1986+         dc xl1'01' format one                                          02-DCCCA
000013EC 00000000                           1987+         dc a(0)                                                        02-DCCCA
000013F0 0000000000000000                   1988+         dc ad(0)                                                       02-DCCCA
000013F8 00000000000000A8                   1989+         dc ad(168)                                                     02-DCCCA
00001400 0000000000000000                   1990+         dc ad(0)                                                       02-DCCCA
00001408 0000000000001000                   1991+         dc ad(4096)                                                    02-DCCCA
00001410 20                                 1992+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001411 03                                 1993+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001412 03                                 1994+         dc al1(3)                                                      02-DCCCA
00001413 08                                 1995+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001414 00                                 1996+         dc bl.8'00000000'                                              02-DCCCA
00001415 000000                             1997+         dc al3(0)                                                      02-DCCCA
00001418 00000000000013DA                   1998+         dc ad(@LNAME769)                                               02-DCCCA
00001420                                    1999+         ds 0d                                                          02-DCCCA
00001420 00000000000013E8                   2000+         dc ad($eye0038)                                                02-DCCCA
00001428 0000000000000000                   2001+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   43 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001430                                    2002+         ds    0d                                                       01-DCCPR
                                            2003+         entry rd_strcmp                                                01-DCCPR
00001430                                    2004+rd_strcmp ds   0d                                                       01-DCCPR
00001430                                    2005+@REGION_769_1 ds 0h                                                     01-DCCPR
00001430 EBEC D008 0024          00000008   2006+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001436 B904 00CF                          2007+         lgr   12,15               set base reg                         01-DCCPR
                        00001430            2008+         using @REGION_769_1,12                                         01-DCCPR
                                            2009 * ******* End of Prologue
                                            2010 * *
                                            2011 * ***           if (a == b)
0000143A E3F0 1000 0004          00000000   2012          LG    15,0(0,1)   ; a
00001440 E310 1008 0004          00000008   2013          LG    1,8(0,1)    ; b
00001446 B920 00F1                          2014          CGR   15,1
0000144A 4770 C026               00001456   2015          BNE   @L119
                                            2016 * ***                   return 0;
0000144E A7F9 0000               00000000   2017          LGHI  15,0        ; 0
00001452 47F0 C076               000014A6   2018          B     @ret_lab_769
                                            2019 * ***           else if (!a && b)
00001456                                    2020 @L119    DS    0H
00001456 B902 002F                          2021          LTGR  2,15
0000145A 4770 C03E               0000146E   2022          BNZ   @L121
0000145E B902 0021                          2023          LTGR  2,1
00001462 4780 C03E               0000146E   2024          BZ    @L121
                                            2025 * ***                   return -1;
00001466 A7F9 FFFF               0000FFFF   2026          LGHI  15,-1       ; -1
0000146A 47F0 C076               000014A6   2027          B     @ret_lab_769
                                            2028 * ***           else if (!b)
0000146E                                    2029 @L121    DS    0H
0000146E B902 0021                          2030          LTGR  2,1
00001472 4770 C04E               0000147E   2031          BNZ   @L123
                                            2032 * ***                   return 1;
00001476 A7F9 0001               00000001   2033          LGHI  15,1        ; 1
0000147A 47F0 C076               000014A6   2034          B     @ret_lab_769
                                            2035 * ***           else
0000147E                                    2036 @L123    DS    0H
                                            2037 * ***                   return __strcmp(a,b);
0000147E 4100 0000               00000000   2038          LA    0,0(0,0)
00001482 A729 0000               00000000   2039          LGHI  2,0
00001486                                    2040 @@gen_label104 DS 0H
00001486 B25D 00F1                          2041          CLST  15,1
0000148A 4710 C056               00001486   2042          BC  1,@@gen_label104
0000148E 4780 C072               000014A2   2043          BE    @@gen_label105
00001492 E320 F000 0090          00000000   2044          LLGC  2,0(0,15)
00001498 E3F0 1000 0090          00000000   2045          LLGC  15,0(0,1)
0000149E B90B 002F                          2046          SLGR  2,15
000014A2                                    2047 @@gen_label105 DS 0H
000014A2 B914 00F2                          2048          LGFR  15,2
                                            2049 * ***   }
000014A6                                    2050 @ret_lab_769 DS 0H
                                            2051 * * **** Start of Epilogue
                                            2052          DCCEPIL
000014A6                                    2053+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   44 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2054+* Epilog
                                            2055+* Epilog
000014A6 E3E0 D008 0004          00000008   2056+         lg    14,8(,13) restore the reg                                01-DCCEP
000014AC EB1C D020 0004          00000020   2057+         lmg   1,12,32(13)                                              01-DCCEP
000014B2 07FE                               2058+         br   14                                                        01-DCCEP
                                            2059+* End of Epilog
                                            2060 * * **** End of Epilogue
                                            2061          DROP  12
                                            2062 *
                                            2063 *   DSECT for automatic variables in "rd_strcmp"
                                            2064 *      (FUNCTION #769)
                                            2065 *
00000000                00000000 000000A8   2066 @AUTO#rd_strcmp DSECT
00000000                                    2067          DS    XL168
                                            2068 *
000014B4                00000000 00001CB0   2069 @CODE    CSECT
                                            2070 *
                                            2071 *
                                            2072 *
                                            2073 * ....... start of _rd_strcasestr
                                            2074 _rd_strcasestr ALIAS X'6D99846DA2A3998381A285A2A399'
000014B4                                    2075 @LNAME770 DS   0H
000014B4 0000000E                           2076          DC    X'0000000E'
000014B8 6D99846DA2A39983                   2077          DC    C'_rd_strcasestr'
000014C6 00                                 2078          DC    X'00'
                                            2079 _rd_strcasestr DCCPRLG CINDEX=770,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME770
                                            2080          macro
                                            2081          dccextrn &m
                                            2082          gblc    &$dccext(1000)
                                            2083          gbla    &$dccexti
                                            2084          lcla    &i
                                            2085 &$dccext(&$dccexti+1) setc    '&m'
                                            2086 &i       seta    1
                                            2087 .loop    aif    (&i gt &$dccexti).around
                                            2088          aif    ('&$dccext(&i)' eq '&m').getout
                                            2089 &i       seta    &i+1
                                            2090          ago     .loop
                                            2091 .around  anop
                                            2092 &$dccexti seta &$dccexti+1
                                            2093          extrn  &m
                                            2094 .getout  anop
                                            2095          mend
000014C8                                    2096+$eye0041    ds    0d                                                    02-DCCCA
000014C8 C4C3C3                             2097+         dc cl3'DCC'                                                    02-DCCCA
000014CB 01                                 2098+         dc xl1'01' format one                                          02-DCCCA
000014CC 00000000                           2099+         dc a(0)                                                        02-DCCCA
000014D0 000000000000153A                   2100+         dc ad(@PER_770)                                                02-DCCCA
000014D8 00000000000000C0                   2101+         dc ad(192)                                                     02-DCCCA
000014E0 0000000000000000                   2102+         dc ad(0)                                                       02-DCCCA
000014E8 0000000000001000                   2103+         dc ad(4096)                                                    02-DCCCA
000014F0 20                                 2104+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000014F1 03                                 2105+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014F2 03                                 2106+         dc al1(3)                                                      02-DCCCA
000014F3 08                                 2107+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014F4 00                                 2108+         dc bl.8'00000000'                                              02-DCCCA
000014F5 000000                             2109+         dc al3(0)                                                      02-DCCCA
000014F8 00000000000014B4                   2110+         dc ad(@LNAME770)                                               02-DCCCA
00001500                                    2111+         ds 0d                                                          02-DCCCA
00001500 00000000000014C8                   2112+         dc ad($eye0041)                                                02-DCCCA
00001508 0000000000000000                   2113+         dc ad(0)                                                       02-DCCCA
00001510                                    2114+         ds    0d                                                       01-DCCPR
                                            2115+         entry _rd_strcasestr                                           01-DCCPR
00001510                                    2116+_rd_strcasestr ds 0d                                                    01-DCCPR
00001510                                    2117+@REGION_770_1 ds 0h                                                     01-DCCPR
00001510 EBEC D008 0024          00000008   2118+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001516 E3E0 D088 0004          00000088   2119+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000151C E3C0 D090 0004          00000090   2120+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001522 B904 002E                          2121+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001526 E3B0 C018 0004          00000018   2122+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000152C A7EB 00C0               000000C0   2123+         aghi  14,192              increase by frame size               01-DCCPR
00001530 E3E0 C020 0021          00000020   2124+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001536 4720 B020               00000020   2125+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000153A                                    2126+@PER_770 ds    0h                                                       01-DCCPR
0000153A EBDE 2080 0024          00000080   2127+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001540 E3C0 2090 0024          00000090   2128+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001546 B904 00D2                          2129+         lgr   13,2                set real frame pointer               01-DCCPR
0000154A B904 00CF                          2130+         lgr   12,15               set base reg                         01-DCCPR
                        00001510            2131+         using @REGION_770_1,12                                         01-DCCPR
                                            2132          DCCPRV REG=7      ; Get PRV from DVT
0000154E E370 B008 0004          00000008   2133+         LG 7,8(0,11)                                                   01-DCCPR
                                            2134 * ******* End of Prologue
                                            2135 * *
00001554 E320 1000 0004          00000000   2136          LG    2,0(0,1)    ; haystack
0000155A E350 1008 0004          00000008   2137          LG    5,8(0,1)    ; needle
                                            2138 * ***           const char *h_rem, *n_last;
                                            2139 * ***           size_t h_len = __strlen(haystack);
00001560 B904 00F2                          2140          LGR   15,2
00001564 A709 0000               00000000   2141          LGHI  0,0
00001568                                    2142 @@gen_label106 DS 0H
00001568 B25E 000F                          2143          SRST  0,15
0000156C 4710 C058               00001568   2144          BC  1,@@gen_label106
00001570 B904 00F0                          2145          LGR   15,0
00001574 B90B 00F2                          2146          SLGR  15,2
                                            2147 * ***           size_t n_len = __strlen(needle);
00001578 B904 0015                          2148          LGR   1,5
0000157C A709 0000               00000000   2149          LGHI  0,0
00001580                                    2150 @@gen_label107 DS 0H
00001580 B25E 0001                          2151          SRST  0,1
00001584 4710 C070               00001580   2152          BC  1,@@gen_label107
00001588 B90B 0005                          2153          SLGR  0,5
                                            2154 * ***
                                            2155 * ***
                                            2156 * ***           if (n_len == 0 || n_len > h_len)
                                                                                                                           Page   46 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000158C B902 0010                          2157          LTGR  1,0
00001590 4780 C08C               0000159C   2158          BE    @L126
00001594 B921 000F                          2159          CLGR  0,15
00001598 47D0 C0B4               000015C4   2160          BNH   @L125
0000159C                                    2161 @L126    DS    0H
                                            2162 * ***                   return ((void *)0);
0000159C A7F9 0000               00000000   2163          LGHI  15,0        ; 0
000015A0 47F0 C28A               0000179A   2164          B     @ret_lab_770
000015A8                                    2165          DS    0D
000015A8 000000C0                           2166 @FRAMESIZE_770 DC F'192'
000015AC 00000000
000015B0 0000000000000000                   2167 @lit_770_71 DC AD(strcasecmp)
000015B8 0000000000000000                   2168 @lit_770_73 DC AD(___tolower)
000015C0 00000000                           2169 @lit_770_74 DC Q(_$Current$Rune$Locale)
                                            2170 * ***           else if (n_len == h_len)
000015C4                                    2171 @L125    DS    0H
000015C4 B921 000F                          2172          CLGR  0,15
000015C8 4770 C0EA               000015FA   2173          BNE   @L127
                                            2174 * ***                   return !strcasecmp(haystack,needle) ?
000015CC E320 D0B0 0024          000000B0   2175          STG   2,176(0,13)
000015D2 E350 D0B8 0024          000000B8   2176          STG   5,184(0,13)
000015D8 4110 D0B0               000000B0   2177          LA    1,176(0,13)
000015DC E3F0 C0A0 0004          000015B0   2178          LG    15,@lit_770_71 ; strcasecmp
000015E2                                    2179 @@gen_label111 DS    0H
000015E2 05EF                               2180          BALR  14,15
000015E4                                    2181 @@gen_label112 DS    0H
000015E4 12FF                               2182          LTR   15,15
000015E6 4770 C0DE               000015EE   2183          BNZ   @L129
                                            2184 * ***                           (char *)haystack : ((void *)0);
000015EA 47F0 C0E2               000015F2   2185          B     @L130
000015EE                                    2186 @L129    DS    0H
000015EE A729 0000               00000000   2187          LGHI  2,0         ; 0
000015F2                                    2188 @L130    DS    0H
000015F2 B904 00F2                          2189          LGR   15,2
000015F6 47F0 C28A               0000179A   2190          B     @ret_lab_770
                                            2191 * ***
                                            2192 * ***
                                            2193 * ***   # 321 "C:\asgkafka\librdkafka\src\rdstring.c"
                                            2194 * ***           n_last = needle + n_len - 1;
000015FA                                    2195 @L127    DS    0H
000015FA B904 00F0                          2196          LGR   15,0
000015FE B946 00F0                          2197          BCTGR 15,0
00001602 416F 5000               00000000   2198          LA    6,0(15,5)
                                            2199 * ***           h_rem = haystack + n_len - 1;
00001606 B904 00F0                          2200          LGR   15,0
0000160A B946 00F0                          2201          BCTGR 15,0
0000160E 413F 2000               00000000   2202          LA    3,0(15,2)
                                            2203 * ***
                                            2204 * ***           while (*h_rem) {
00001612 47F0 C27E               0000178E   2205          B     @L134
00001616                                    2206 @L133    DS    0H
                                            2207 * ***                   const char *h, *n = n_last;
                                                                                                                           Page   47 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001616 B904 0046                          2208          LGR   4,6         ; n
                                            2209 * ***
                                            2210 * ***
                                            2211 * ***
                                            2212 * ***                   for (h = h_rem ;
0000161A B904 0023                          2213          LGR   2,3         ; h
                                            2214 * ***                        *h && __tolower((int)*h) != __tolower((in\
                                            2215 * t)*n) ;
                                            2216 * ***                        h++)
0000161E 47F0 C116               00001626   2217          B     @L136
00001622                                    2218 @L135    DS    0H
                                            2219 * ***                           ;
00001622 4120 2001               00000001   2220          LA    2,1(0,2)
00001626                                    2221 @L136    DS    0H
00001626 9500 2000      00000000 00000000   2222          CLI   0(2),0
0000162A 4780 C1B6               000016C6   2223          BE    @L137
0000162E E3F0 2000 0094          00000000   2224          LLC   15,0(0,2)
                                            2225 * <<< begin inline copy of __tolower
                                            2226 * ***      return (_c < 0 || _c >= (1 <<8 )) ? ___tolower(_c) :
00001634 12FF                               2227          LTR   15,15
00001636 4740 C132               00001642   2228          BL    @2_@L57
0000163A A7FE 0100               00000100   2229          CHI   15,256
0000163E 4740 C14E               0000165E   2230          BL    @2_@L56
00001642                                    2231 @2_@L57  DS    0H
00001642 B914 00FF                          2232          LGFR  15,15
00001646 E3F0 D0B0 0024          000000B0   2233          STG   15,176(0,13)
0000164C 4110 D0B0               000000B0   2234          LA    1,176(0,13)
00001650 E3F0 C0A8 0004          000015B8   2235          LG    15,@lit_770_73 ; ___tolower
00001656                                    2236 @@gen_label117 DS    0H
00001656 05EF                               2237          BALR  14,15
00001658                                    2238 @@gen_label118 DS    0H
00001658 188F                               2239          LR    8,15
0000165A 47F0 C168               00001678   2240          B     @2_@L58
0000165E                                    2241 @2_@L56  DS    0H
                                            2242 * ***             _CurrentRuneLocale->__maplower[_c];
0000165E B914 00FF                          2243          LGFR  15,15
00001662 E310 C0B0 0016          000015C0   2244          LLGF  1,@lit_770_74 ; _CurrentRuneLocale
00001668 E311 7000 0004          00000000   2245          LG    1,0(1,7)    ; _CurrentRuneLocale
0000166E EBFF 0002 000D          00000002   2246          SLLG  15,15,2(0)  ; *0x4
00001674 588F 1840               00000840   2247          L     8,2112(15,1)
00001678                                    2248 @2_@L58  DS    0H
                                            2249 * ***   }
                                            2250 * >>> end inline copy of __tolower
00001678 E3F0 4000 0094          00000000   2251          LLC   15,0(0,4)
                                            2252 * <<< begin inline copy of __tolower
                                            2253 * ***      return (_c < 0 || _c >= (1 <<8 )) ? ___tolower(_c) :
0000167E 12FF                               2254          LTR   15,15
00001680 4740 C17C               0000168C   2255          BL    @3_@L57
00001684 A7FE 0100               00000100   2256          CHI   15,256
00001688 4740 C196               000016A6   2257          BL    @3_@L56
0000168C                                    2258 @3_@L57  DS    0H
0000168C B914 00FF                          2259          LGFR  15,15
                                                                                                                           Page   48 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001690 E3F0 D0B0 0024          000000B0   2260          STG   15,176(0,13)
00001696 4110 D0B0               000000B0   2261          LA    1,176(0,13)
0000169A E3F0 C0A8 0004          000015B8   2262          LG    15,@lit_770_73 ; ___tolower
000016A0                                    2263 @@gen_label121 DS    0H
000016A0 05EF                               2264          BALR  14,15
000016A2                                    2265 @@gen_label122 DS    0H
000016A2 47F0 C1B0               000016C0   2266          B     @3_@L58
000016A6                                    2267 @3_@L56  DS    0H
                                            2268 * ***             _CurrentRuneLocale->__maplower[_c];
000016A6 B914 00FF                          2269          LGFR  15,15
000016AA E310 C0B0 0016          000015C0   2270          LLGF  1,@lit_770_74 ; _CurrentRuneLocale
000016B0 E311 7000 0004          00000000   2271          LG    1,0(1,7)    ; _CurrentRuneLocale
000016B6 EBFF 0002 000D          00000002   2272          SLLG  15,15,2(0)  ; *0x4
000016BC 58FF 1840               00000840   2273          L     15,2112(15,1)
000016C0                                    2274 @3_@L58  DS    0H
                                            2275 * ***   }
                                            2276 * >>> end inline copy of __tolower
000016C0 198F                               2277          CR    8,15
000016C2 4770 C112               00001622   2278          BNE   @L135
000016C6                                    2279 @L137    DS    0H
                                            2280 * ***
                                            2281 * ***                   if (!*h)
000016C6 9500 2000      00000000 00000000   2282          CLI   0(2),0
000016CA 4770 C1C6               000016D6   2283          BNE   @L141
                                            2284 * ***                           return ((void *)0);
000016CE A7F9 0000               00000000   2285          LGHI  15,0        ; 0
000016D2 47F0 C28A               0000179A   2286          B     @ret_lab_770
                                            2287 * ***
                                            2288 * ***
                                            2289 * ***
                                            2290 * ***
                                            2291 * ***
                                            2292 * ***                   do {
000016D6                                    2293 @L141    DS    0H
                                            2294 * ***                           if (n == needle)
000016D6 B920 0045                          2295          CGR   4,5
000016DA 4770 C1D6               000016E6   2296          BNE   @L144
                                            2297 * ***                                   return (char *)h;
000016DE B904 00F2                          2298          LGR   15,2
000016E2 47F0 C28A               0000179A   2299          B     @ret_lab_770
000016E6                                    2300 @L144    DS    0H
                                            2301 * ***
                                            2302 * ***
                                            2303 * ***                           n--;
000016E6 A7F9 FFFF               0000FFFF   2304          LGHI  15,-1       ; -1
000016EA 414F 4000               00000000   2305          LA    4,0(15,4)
                                            2306 * ***                           h--;
000016EE 412F 2000               00000000   2307          LA    2,0(15,2)
                                            2308 * ***
                                            2309 * ***                   } while (__tolower((int)*n) == __tolower((int)\
                                            2310 * *h));
000016F2 E3F0 4000 0094          00000000   2311          LLC   15,0(0,4)
                                                                                                                           Page   49 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2312 * <<< begin inline copy of __tolower
                                            2313 * ***      return (_c < 0 || _c >= (1 <<8 )) ? ___tolower(_c) :
000016F8 12FF                               2314          LTR   15,15
000016FA 4740 C1F6               00001706   2315          BL    @4_@L57
000016FE A7FE 0100               00000100   2316          CHI   15,256
00001702 4740 C212               00001722   2317          BL    @4_@L56
00001706                                    2318 @4_@L57  DS    0H
00001706 B914 00FF                          2319          LGFR  15,15
0000170A E3F0 D0B0 0024          000000B0   2320          STG   15,176(0,13)
00001710 4110 D0B0               000000B0   2321          LA    1,176(0,13)
00001714 E3F0 C0A8 0004          000015B8   2322          LG    15,@lit_770_73 ; ___tolower
0000171A                                    2323 @@gen_label128 DS    0H
0000171A 05EF                               2324          BALR  14,15
0000171C                                    2325 @@gen_label129 DS    0H
0000171C 188F                               2326          LR    8,15
0000171E 47F0 C22C               0000173C   2327          B     @4_@L58
00001722                                    2328 @4_@L56  DS    0H
                                            2329 * ***             _CurrentRuneLocale->__maplower[_c];
00001722 B914 00FF                          2330          LGFR  15,15
00001726 E310 C0B0 0016          000015C0   2331          LLGF  1,@lit_770_74 ; _CurrentRuneLocale
0000172C E311 7000 0004          00000000   2332          LG    1,0(1,7)    ; _CurrentRuneLocale
00001732 EBFF 0002 000D          00000002   2333          SLLG  15,15,2(0)  ; *0x4
00001738 588F 1840               00000840   2334          L     8,2112(15,1)
0000173C                                    2335 @4_@L58  DS    0H
                                            2336 * ***   }
                                            2337 * >>> end inline copy of __tolower
0000173C E3F0 2000 0094          00000000   2338          LLC   15,0(0,2)
                                            2339 * <<< begin inline copy of __tolower
                                            2340 * ***      return (_c < 0 || _c >= (1 <<8 )) ? ___tolower(_c) :
00001742 12FF                               2341          LTR   15,15
00001744 4740 C240               00001750   2342          BL    @5_@L57
00001748 A7FE 0100               00000100   2343          CHI   15,256
0000174C 4740 C25A               0000176A   2344          BL    @5_@L56
00001750                                    2345 @5_@L57  DS    0H
00001750 B914 00FF                          2346          LGFR  15,15
00001754 E3F0 D0B0 0024          000000B0   2347          STG   15,176(0,13)
0000175A 4110 D0B0               000000B0   2348          LA    1,176(0,13)
0000175E E3F0 C0A8 0004          000015B8   2349          LG    15,@lit_770_73 ; ___tolower
00001764                                    2350 @@gen_label132 DS    0H
00001764 05EF                               2351          BALR  14,15
00001766                                    2352 @@gen_label133 DS    0H
00001766 47F0 C274               00001784   2353          B     @5_@L58
0000176A                                    2354 @5_@L56  DS    0H
                                            2355 * ***             _CurrentRuneLocale->__maplower[_c];
0000176A B914 00FF                          2356          LGFR  15,15
0000176E E310 C0B0 0016          000015C0   2357          LLGF  1,@lit_770_74 ; _CurrentRuneLocale
00001774 E311 7000 0004          00000000   2358          LG    1,0(1,7)    ; _CurrentRuneLocale
0000177A EBFF 0002 000D          00000002   2359          SLLG  15,15,2(0)  ; *0x4
00001780 58FF 1840               00000840   2360          L     15,2112(15,1)
00001784                                    2361 @5_@L58  DS    0H
                                            2362 * ***   }
                                            2363 * >>> end inline copy of __tolower
                                                                                                                           Page   50 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001784 198F                               2364          CR    8,15
00001786 4780 C1C6               000016D6   2365          BE    @L141
                                            2366 * ***
                                            2367 * ***
                                            2368 * ***                   h_rem++;
0000178A 4130 3001               00000001   2369          LA    3,1(0,3)
                                            2370 * ***           }
0000178E                                    2371 @L134    DS    0H
0000178E 9500 3000      00000000 00000000   2372          CLI   0(3),0
00001792 4770 C106               00001616   2373          BNE   @L133
                                            2374 * ***
                                            2375 * ***           return ((void *)0);
00001796 A7F9 0000               00000000   2376          LGHI  15,0        ; 0
                                            2377 * ***   }
0000179A                                    2378 @ret_lab_770 DS 0H
                                            2379 * * **** Start of Epilogue
                                            2380          DCCEPIL
0000179A                                    2381+         ds 0h                                                          01-DCCEP
                                            2382+* Epilog
0000179A D707 D088 D088 00000088 00000088   2383+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017A0 E3D0 D080 0004          00000080   2384+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017A6 E3C0 D090 0004          00000090   2385+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000017AC E3B0 C018 0004          00000018   2386+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000017B2 E3C0 B010 0021          00000010   2387+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000017B8 E3E0 D008 0004          00000008   2388+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017BE EB1C D020 0004          00000020   2389+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017C4 078E                               2390+         bcr 8,14                if same dsab, just return              01-DCCEP
000017C6 E3F0 D010 0024          00000010   2391+         stg 15,16(0,13)         save return code                       01-DCCEP
000017CC E300 D018 0024          00000018   2392+         stg 0,24(0,13)          save more return code                  01-DCCEP
000017D2 E3F0 D090 0004          00000090   2393+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017D8 E3F0 F018 0004          00000018   2394+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017DE 47F0 F040               00000040   2395+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2396+* End of Epilog
                                            2397 * * **** End of Epilogue
                                            2398          DROP  12
                                            2399 *
                                            2400 *   DSECT for automatic variables in "_rd_strcasestr"
                                            2401 *      (FUNCTION #770)
                                            2402 *
00000000                00000000 000000B0   2403 @AUTO#_rd_strcasestr DSECT
00000000                                    2404          DS    XL168
000000A8                                    2405 _rd_strcasestr#n_len#0 DS 8XL1 ; n_len
000000B0                000000B0 000000A8   2406          ORG   @AUTO#_rd_strcasestr+168
000000A8                                    2407 _rd_strcasestr#h_len#0 DS 8XL1 ; h_len
                                            2408 *
000017E2                00000000 00001CB0   2409 @CODE    CSECT
                                            2410 *
                                            2411 *
                                            2412 *
                                            2413 * ....... start of ut_strcasestr
000017E2                                    2414 @LNAME806 DS   0H
000017E2 0000000D                           2415          DC    X'0000000D'
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000017E6 A4A36DA2A3998381                   2416          DC    C'ut_strcasestr'
000017F3 00                                 2417          DC    X'00'
                                            2418 ut_strcasestr DCCPRLG CINDEX=806,BASER=12,FRAME=240,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME806
                                            2419          macro
                                            2420          dccextrn &m
                                            2421          gblc    &$dccext(1000)
                                            2422          gbla    &$dccexti
                                            2423          lcla    &i
                                            2424 &$dccext(&$dccexti+1) setc    '&m'
                                            2425 &i       seta    1
                                            2426 .loop    aif    (&i gt &$dccexti).around
                                            2427          aif    ('&$dccext(&i)' eq '&m').getout
                                            2428 &i       seta    &i+1
                                            2429          ago     .loop
                                            2430 .around  anop
                                            2431 &$dccexti seta &$dccexti+1
                                            2432          extrn  &m
                                            2433 .getout  anop
                                            2434          mend
000017F8                                    2435+$eye0045    ds    0d                                                    02-DCCCA
000017F8 C4C3C3                             2436+         dc cl3'DCC'                                                    02-DCCCA
000017FB 01                                 2437+         dc xl1'01' format one                                          02-DCCCA
000017FC 00000000                           2438+         dc a(0)                                                        02-DCCCA
00001800 000000000000186A                   2439+         dc ad(@PER_806)                                                02-DCCCA
00001808 00000000000000F0                   2440+         dc ad(240)                                                     02-DCCCA
00001810 0000000000000000                   2441+         dc ad(0)                                                       02-DCCCA
00001818 0000000000001000                   2442+         dc ad(4096)                                                    02-DCCCA
00001820 20                                 2443+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001821 03                                 2444+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001822 03                                 2445+         dc al1(3)                                                      02-DCCCA
00001823 08                                 2446+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001824 00                                 2447+         dc bl.8'00000000'                                              02-DCCCA
00001825 000000                             2448+         dc al3(0)                                                      02-DCCCA
00001828 00000000000017E2                   2449+         dc ad(@LNAME806)                                               02-DCCCA
00001830                                    2450+         ds 0d                                                          02-DCCCA
00001830 00000000000017F8                   2451+         dc ad($eye0045)                                                02-DCCCA
00001838 0000000000000000                   2452+         dc ad(0)                                                       02-DCCCA
00001840                                    2453+         ds    0d                                                       01-DCCPR
00001840                                    2454+ut_strcasestr ds 0d                                                     01-DCCPR
00001840                                    2455+@REGION_806_1 ds 0h                                                     01-DCCPR
00001840 EBEC D008 0024          00000008   2456+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001846 E3E0 D088 0004          00000088   2457+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000184C E3C0 D090 0004          00000090   2458+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001852 B904 002E                          2459+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001856 E3B0 C018 0004          00000018   2460+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000185C A7EB 00F0               000000F0   2461+         aghi  14,240              increase by frame size               01-DCCPR
00001860 E3E0 C020 0021          00000020   2462+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001866 4720 B020               00000020   2463+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000186A                                    2464+@PER_806 ds    0h                                                       01-DCCPR
0000186A EBDE 2080 0024          00000080   2465+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001870 E3C0 2090 0024          00000090   2466+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001876 B904 00D2                          2467+         lgr   13,2                set real frame pointer               01-DCCPR
0000187A B904 00CF                          2468+         lgr   12,15               set base reg                         01-DCCPR
                        00001840            2469+         using @REGION_806_1,12                                         01-DCCPR
                                            2470          DCCPRV REG=5      ; Get PRV from DVT
0000187E E350 B008 0004          00000008   2471+         LG 5,8(0,11)                                                   01-DCCPR
                                            2472 * ******* End of Prologue
                                            2473 * *
                                            2474 * ***           static const struct {
                                            2475 * ***                   const char *haystack;
                                            2476 * ***                   const char *needle;
                                            2477 * ***                   ssize_t exp;
                                            2478 * ***           } strs[] = {
                                            2479 * ***                   { "this is a haystack", "hays", 10 },
                                            2480 * ***                   { "abc", "a", 0 },
                                            2481 * ***                   { "abc", "b", 1 },
                                            2482 * ***                   { "abc", "c", 2 },
                                            2483 * ***                   { "AbcaBcabC", "ABC", 0 },
                                            2484 * ***                   { "abcabcaBC", "BcA", 1 },
                                            2485 * ***                   { "abcabcABc", "cAB", 2 },
                                            2486 * ***                   { "need to estart stART the tart ReStArT!", "R\
                                            2487 * EsTaRt", 30 },
                                            2488 * ***                   { "need to estart stART the tart ReStArT!", "?\
                                            2489 * sTaRt", -1 },
                                            2490 * ***                   { "aaaabaaAb", "ab", 3 },
                                            2491 * ***                   { "0A!", "a", 1 },
                                            2492 * ***                   { "a", "A", 0 },
                                            2493 * ***                   { ".z", "Z", 1 },
                                            2494 * ***                   { "", "", -1 },
                                            2495 * ***                   { "", "a", -1 },
                                            2496 * ***                   { "a", "", -1 },
                                            2497 * ***                   { "peRfeCt", "peRfeCt", 0 },
                                            2498 * ***                   { "perfect", "perfect", 0 },
                                            2499 * ***                   { "PERFECT", "perfect", 0 },
                                            2500 * ***                   { ((void *)0) },
                                            2501 * ***           };
                                            2502 * ***           int i;
                                            2503 * ***
                                            2504 * ***           fprintf(__stderrp, "\033[34mRDUT: INFO: %s:%d: %s: BEG\
                                            2505 * IN: \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdstring.c", 392, __\
                                            2506 * FUNCTION__);
00001884 E3F0 C0C0 0016          00001900   2507          LLGF  15,@lit_806_86 ; __stderrp
0000188A E3FF 5000 0004          00000000   2508          LG    15,0(15,5)  ; __stderrp
00001890 E3F0 D0B0 0024          000000B0   2509          STG   15,176(0,13)
00001896 E3F0 C0B8 0004          000018F8   2510          LG    15,@lit_806_87
0000189C 4110 F0B6               000000B6   2511          LA    1,182(0,15)
000018A0 E310 D0B8 0024          000000B8   2512          STG   1,184(0,13)
000018A6 41F0 F06A               0000006A   2513          LA    15,106(0,15)
000018AA E3F0 D0C0 0024          000000C0   2514          STG   15,192(0,13)
000018B0 E548 D0C8 0188          000000C8   2515          MVGHI 200(13),392
000018B6 E3F0 C0B0 0004          000018F0   2516          LG    15,@lit_806_88
000018BC 41F0 F238               00000238   2517          LA    15,568(0,15)
000018C0 E3F0 D0D0 0024          000000D0   2518          STG   15,208(0,13)
                                                                                                                           Page   53 
  Active Usings: @REGION_806_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000018C6 4110 D0B0               000000B0   2519          LA    1,176(0,13)
000018CA E3F0 C0A8 0004          000018E8   2520          LG    15,@lit_806_89 ; fprintf
000018D0                                    2521 @@gen_label136 DS    0H
000018D0 05EF                               2522          BALR  14,15
000018D2                                    2523 @@gen_label137 DS    0H
                                            2524 * ***
                                            2525 * ***           for (i = 0 ; strs[i].haystack ; i++) {
000018D2 A728 0000               00000000   2526          LHI   2,0         ; 0
000018D6 47F0 C2FC               00001B3C   2527          B     @L146
000018E0                                    2528          DS    0D
000018E0 000000F0                           2529 @FRAMESIZE_806 DC F'240'
000018E4 00000000
000018E8 0000000000000000                   2530 @lit_806_89 DC AD(fprintf)
000018F0 0000000000001CB0                   2531 @lit_806_88 DC AD(@DATA)
000018F8 0000000000001EF6                   2532 @lit_806_87 DC AD(@strings@)
00001900 00000000                           2533 @lit_806_86 DC Q(__stderrp)
00001904 00000000
00001908 0000000000001510                   2534 @lit_806_93 DC AD(_rd_strcasestr)
00001910 00000000                           2535 @lit_806_102 DC Q(rd_unittest_assert_on_failure)
00001914 00000000
00001918 0000000000000000                   2536 @lit_806_103 DC AD(__assert)
00001920                                    2537 @L145    DS    0H
                                            2538 * ***                   const char *ret;
                                            2539 * ***                   ssize_t of = -1;
00001920 A739 FFFF               0000FFFF   2540          LGHI  3,-1        ; -1
                                            2541 * ***
                                            2542 * ***                   ret = _rd_strcasestr(strs[i].haystack, strs[i]\
                                            2543 * .needle);
00001924 B914 00F2                          2544          LGFR  15,2
00001928 E360 C0B0 0004          000018F0   2545          LG    6,@lit_806_88
0000192E EB1F 0002 000D          00000002   2546          SLLG  1,15,2(0)   ;   .
00001934 B90B 001F                          2547          SLGR  1,15        ;   .
00001938 EB11 0003 000D          00000003   2548          SLLG  1,1,3(0)    ;   .
0000193E E3F1 6058 0004          00000058   2549          LG    15,88(1,6)
00001944 E3F0 D0B0 0024          000000B0   2550          STG   15,176(0,13)
0000194A B914 00F2                          2551          LGFR  15,2
0000194E EB1F 0002 000D          00000002   2552          SLLG  1,15,2(0)   ;   .
00001954 B90B 001F                          2553          SLGR  1,15        ;   .
00001958 EB11 0003 000D          00000003   2554          SLLG  1,1,3(0)    ;   .
0000195E E3F1 6060 0004          00000060   2555          LG    15,96(1,6)
00001964 E3F0 D0B8 0024          000000B8   2556          STG   15,184(0,13)
0000196A 4110 D0B0               000000B0   2557          LA    1,176(0,13)
0000196E E3F0 C0C8 0004          00001908   2558          LG    15,@lit_806_93 ; _rd_strcasestr
00001974                                    2559 @@gen_label138 DS    0H
00001974 05EF                               2560          BALR  14,15
00001976                                    2561 @@gen_label139 DS    0H
00001976 B904 004F                          2562          LGR   4,15
                                            2563 * ***                   if (ret)
0000197A B902 00F4                          2564          LTGR  15,4
0000197E 4780 C160               000019A0   2565          BZ    @L150
                                            2566 * ***                           of = ret - strs[i].haystack;
00001982 B914 00F2                          2567          LGFR  15,2
                                                                                                                           Page   54 
  Active Usings: @REGION_806_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001986 EB1F 0002 000D          00000002   2568          SLLG  1,15,2(0)   ;   .
0000198C B90B 001F                          2569          SLGR  1,15        ;   .
00001990 EB11 0003 000D          00000003   2570          SLLG  1,1,3(0)    ;   .
00001996 B904 0034                          2571          LGR   3,4
0000199A E331 6058 0009          00000058   2572          SG    3,88(1,6)
000019A0                                    2573 @L149    DS    0H
                                            2574 * ***                   do { if (!(of == strs[i].exp)) { fprintf(__std\
                                            2575 * errp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "of == str\
                                            2576 * s[i].exp" ": ", "C:\\asgkafka\\librdkafka\\src\\rdstring.c", 401, __\
                                            2577 * FUNCTION__); fprintf(__stderrp, "#%d: '%s' in '%s': expected offset \
                                            2578 * %" "zd" ", not %" "zd" " (%s)", i, strs[i].needle, strs[i].haystack,\
                                            2579 *  strs[i].exp, of, ret ? ret : "(NULL)"); fprintf(__stderrp, "\033[0m\
                                            2580 * \n"); if (rd_unittest_assert_on_failure) ((of == strs[i].exp) ? (voi\
                                            2581 * d)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdstring.c"\
                                            2582 * , 401, "of == strs[i].exp")); return 1; } } while (0);
000019A0                                    2583 @L150    DS    0H
000019A0 B914 00F2                          2584          LGFR  15,2
000019A4 E360 C0B0 0004          000018F0   2585          LG    6,@lit_806_88
000019AA EB1F 0002 000D          00000002   2586          SLLG  1,15,2(0)   ;   .
000019B0 B90B 001F                          2587          SLGR  1,15        ;   .
000019B4 EB11 0003 000D          00000003   2588          SLLG  1,1,3(0)    ;   .
000019BA E331 6068 0020          00000068   2589          CG    3,104(1,6)
000019C0 4780 C2F8               00001B38   2590          BE    @L153
000019C4 E370 C0C0 0016          00001900   2591          LLGF  7,@lit_806_86 ; __stderrp
000019CA E3F7 5000 0004          00000000   2592          LG    15,0(7,5)   ; __stderrp
000019D0 E3F0 D0B0 0024          000000B0   2593          STG   15,176(0,13)
000019D6 E380 C0B8 0004          000018F8   2594          LG    8,@lit_806_87
000019DC 41F0 80E0               000000E0   2595          LA    15,224(0,8)
000019E0 E3F0 D0B8 0024          000000B8   2596          STG   15,184(0,13)
000019E6 41F0 806A               0000006A   2597          LA    15,106(0,8)
000019EA E3F0 D0C0 0024          000000C0   2598          STG   15,192(0,13)
000019F0 E548 D0C8 0191          000000C8   2599          MVGHI 200(13),401
000019F6 41F0 6238               00000238   2600          LA    15,568(0,6)
000019FA E3F0 D0D0 0024          000000D0   2601          STG   15,208(0,13)
00001A00 4110 D0B0               000000B0   2602          LA    1,176(0,13)
00001A04 E390 C0A8 0004          000018E8   2603          LG    9,@lit_806_89 ; fprintf
00001A0A B904 00F9                          2604          LGR   15,9
00001A0E                                    2605 @@gen_label142 DS    0H
00001A0E 05EF                               2606          BALR  14,15
00001A10                                    2607 @@gen_label143 DS    0H
00001A10 B902 00F4                          2608          LTGR  15,4
00001A14 4780 C1DC               00001A1C   2609          BZ    @L154
00001A18 47F0 C1E0               00001A20   2610          B     @L155
00001A1C                                    2611 @L154    DS    0H
00001A1C 4140 8120               00000120   2612          LA    4,288(0,8)
00001A20                                    2613 @L155    DS    0H
00001A20 E3F7 5000 0004          00000000   2614          LG    15,0(7,5)   ; __stderrp
00001A26 E3F0 D0B0 0024          000000B0   2615          STG   15,176(0,13)
00001A2C 41F0 8128               00000128   2616          LA    15,296(0,8)
00001A30 E3F0 D0B8 0024          000000B8   2617          STG   15,184(0,13)
00001A36 B914 00F2                          2618          LGFR  15,2
00001A3A E3F0 D0C0 0024          000000C0   2619          STG   15,192(0,13)
                                                                                                                           Page   55 
  Active Usings: @REGION_806_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001A40 B914 00F2                          2620          LGFR  15,2
00001A44 EB1F 0002 000D          00000002   2621          SLLG  1,15,2(0)   ;   .
00001A4A B90B 001F                          2622          SLGR  1,15        ;   .
00001A4E EB11 0003 000D          00000003   2623          SLLG  1,1,3(0)    ;   .
00001A54 E3F1 6060 0004          00000060   2624          LG    15,96(1,6)
00001A5A E3F0 D0C8 0024          000000C8   2625          STG   15,200(0,13)
00001A60 B914 00F2                          2626          LGFR  15,2
00001A64 EB1F 0002 000D          00000002   2627          SLLG  1,15,2(0)   ;   .
00001A6A B90B 001F                          2628          SLGR  1,15        ;   .
00001A6E EB11 0003 000D          00000003   2629          SLLG  1,1,3(0)    ;   .
00001A74 E3F1 6058 0004          00000058   2630          LG    15,88(1,6)
00001A7A E3F0 D0D0 0024          000000D0   2631          STG   15,208(0,13)
00001A80 B914 00F2                          2632          LGFR  15,2
00001A84 EB1F 0002 000D          00000002   2633          SLLG  1,15,2(0)   ;   .
00001A8A B90B 001F                          2634          SLGR  1,15        ;   .
00001A8E EB11 0003 000D          00000003   2635          SLLG  1,1,3(0)    ;   .
00001A94 E3F1 6068 0004          00000068   2636          LG    15,104(1,6)
00001A9A E3F0 D0D8 0024          000000D8   2637          STG   15,216(0,13)
00001AA0 EB34 D0E0 0024          000000E0   2638          STMG  3,4,224(13)
00001AA6 4110 D0B0               000000B0   2639          LA    1,176(0,13)
00001AAA B904 00F9                          2640          LGR   15,9
00001AAE                                    2641 @@gen_label145 DS    0H
00001AAE 05EF                               2642          BALR  14,15
00001AB0                                    2643 @@gen_label146 DS    0H
00001AB0 E3F7 5000 0004          00000000   2644          LG    15,0(7,5)   ; __stderrp
00001AB6 E3F0 D0B0 0024          000000B0   2645          STG   15,176(0,13)
00001ABC 41F0 815E               0000015E   2646          LA    15,350(0,8)
00001AC0 E3F0 D0B8 0024          000000B8   2647          STG   15,184(0,13)
00001AC6 4110 D0B0               000000B0   2648          LA    1,176(0,13)
00001ACA B904 00F9                          2649          LGR   15,9
00001ACE                                    2650 @@gen_label147 DS    0H
00001ACE 05EF                               2651          BALR  14,15
00001AD0                                    2652 @@gen_label148 DS    0H
00001AD0 E3F0 C0D0 0016          00001910   2653          LLGF  15,@lit_806_102 ; rd_unittest_assert_on_failure
00001AD6 41FF 5000               00000000   2654          LA    15,0(15,5)
00001ADA 9500 F000      00000000 00000000   2655          CLI   0(15),0
00001ADE 4780 C2F0               00001B30   2656          BE    @L156
00001AE2 B914 00F2                          2657          LGFR  15,2
00001AE6 EB1F 0002 000D          00000002   2658          SLLG  1,15,2(0)   ;   .
00001AEC B90B 001F                          2659          SLGR  1,15        ;   .
00001AF0 EB11 0003 000D          00000003   2660          SLLG  1,1,3(0)    ;   .
00001AF6 E331 6068 0020          00000068   2661          CG    3,104(1,6)
00001AFC 4780 C2F0               00001B30   2662          BE    @L156
00001B00                                    2663 @L157    DS    0H
00001B00 41F0 6238               00000238   2664          LA    15,568(0,6)
00001B04 E3F0 D0B0 0024          000000B0   2665          STG   15,176(0,13)
00001B0A 41F0 806A               0000006A   2666          LA    15,106(0,8)
00001B0E E3F0 D0B8 0024          000000B8   2667          STG   15,184(0,13)
00001B14 E548 D0C0 0191          000000C0   2668          MVGHI 192(13),401
00001B1A 41F0 8164               00000164   2669          LA    15,356(0,8)
00001B1E E3F0 D0C8 0024          000000C8   2670          STG   15,200(0,13)
00001B24 4110 D0B0               000000B0   2671          LA    1,176(0,13)
                                                                                                                           Page   56 
  Active Usings: @REGION_806_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001B28 E3F0 C0D8 0004          00001918   2672          LG    15,@lit_806_103 ; __assert
00001B2E                                    2673 @@gen_label151 DS    0H
00001B2E 05EF                               2674          BALR  14,15
00001B30                                    2675 @@gen_label152 DS    0H
00001B30                                    2676 @L158    DS    0H
00001B30                                    2677 @L156    DS    0H
00001B30 A7F9 0001               00000001   2678          LGHI  15,1        ; 1
00001B34 47F0 C324               00001B64   2679          B     @ret_lab_806
00001B38                                    2680 @L153    DS    0H
                                            2681 * ***
                                            2682 * ***
                                            2683 * ***
                                            2684 * ***
                                            2685 * ***           }
00001B38 A72A 0001               00000001   2686          AHI   2,1
00001B3C                                    2687 @L146    DS    0H
00001B3C B914 00F2                          2688          LGFR  15,2
00001B40 E310 C0B0 0004          000018F0   2689          LG    1,@lit_806_88
00001B46 EB3F 0002 000D          00000002   2690          SLLG  3,15,2(0)   ;   .
00001B4C B90B 003F                          2691          SLGR  3,15        ;   .
00001B50 EB33 0003 000D          00000003   2692          SLLG  3,3,3(0)    ;   .
00001B56 E3F3 1058 0002          00000058   2693          LTG   15,88(3,1)
00001B5C 4770 C0E0               00001920   2694          BNZ   @L145
                                            2695 * ***
                                            2696 * ***           return 0;
00001B60 A7F9 0000               00000000   2697          LGHI  15,0        ; 0
                                            2698 * ***   }
00001B64                                    2699 @ret_lab_806 DS 0H
                                            2700 * * **** Start of Epilogue
                                            2701          DCCEPIL
00001B64                                    2702+         ds 0h                                                          01-DCCEP
                                            2703+* Epilog
00001B64 D707 D088 D088 00000088 00000088   2704+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B6A E3D0 D080 0004          00000080   2705+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B70 E3C0 D090 0004          00000090   2706+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B76 E3B0 C018 0004          00000018   2707+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B7C E3C0 B010 0021          00000010   2708+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B82 E3E0 D008 0004          00000008   2709+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B88 EB1C D020 0004          00000020   2710+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B8E 078E                               2711+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B90 E3F0 D010 0024          00000010   2712+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B96 E300 D018 0024          00000018   2713+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B9C E3F0 D090 0004          00000090   2714+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001BA2 E3F0 F018 0004          00000018   2715+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001BA8 47F0 F040               00000040   2716+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2717+* End of Epilog
                                            2718 * * **** End of Epilogue
                                            2719          DROP  12
                                            2720 *
                                            2721 *   DSECT for automatic variables in "ut_strcasestr"
                                            2722 *      (FUNCTION #806)
                                            2723 *
                                                                                                                           Page   57 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000000                00000000 000000B0   2724 @AUTO#ut_strcasestr DSECT
00000000                                    2725          DS    XL168
000000A8                                    2726 ut_strcasestr#of#1 DS 8XL1 ; of
000000B0                000000B0 000000A8   2727          ORG   @AUTO#ut_strcasestr+168
000000A8                                    2728 ut_strcasestr#i#0 DS 1F    ; i
                                            2729 *
00001BAC                00000000 00001CB0   2730 @CODE    CSECT
                                            2731 *
                                            2732 *
                                            2733 *
                                            2734 * ....... start of unittest_string
                                            2735 unittest_string ALIAS X'A49589A3A385A2A36DA2A399899587'
00001BAC                                    2736 @LNAME807 DS   0H
00001BAC 0000000F                           2737          DC    X'0000000F'
00001BB0 A49589A3A385A2A3                   2738          DC    C'unittest_string'
00001BBF 00                                 2739          DC    X'00'
                                            2740 unittest_string DCCPRLG CINDEX=807,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME807
                                            2741          macro
                                            2742          dccextrn &m
                                            2743          gblc    &$dccext(1000)
                                            2744          gbla    &$dccexti
                                            2745          lcla    &i
                                            2746 &$dccext(&$dccexti+1) setc    '&m'
                                            2747 &i       seta    1
                                            2748 .loop    aif    (&i gt &$dccexti).around
                                            2749          aif    ('&$dccext(&i)' eq '&m').getout
                                            2750 &i       seta    &i+1
                                            2751          ago     .loop
                                            2752 .around  anop
                                            2753 &$dccexti seta &$dccexti+1
                                            2754          extrn  &m
                                            2755 .getout  anop
                                            2756          mend
00001BC0                                    2757+$eye0049    ds    0d                                                    02-DCCCA
00001BC0 C4C3C3                             2758+         dc cl3'DCC'                                                    02-DCCCA
00001BC3 01                                 2759+         dc xl1'01' format one                                          02-DCCCA
00001BC4 00000000                           2760+         dc a(0)                                                        02-DCCCA
00001BC8 0000000000001C32                   2761+         dc ad(@PER_807)                                                02-DCCCA
00001BD0 00000000000000B0                   2762+         dc ad(176)                                                     02-DCCCA
00001BD8 0000000000000000                   2763+         dc ad(0)                                                       02-DCCCA
00001BE0 0000000000001000                   2764+         dc ad(4096)                                                    02-DCCCA
00001BE8 20                                 2765+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001BE9 03                                 2766+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001BEA 03                                 2767+         dc al1(3)                                                      02-DCCCA
00001BEB 08                                 2768+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001BEC 00                                 2769+         dc bl.8'00000000'                                              02-DCCCA
00001BED 000000                             2770+         dc al3(0)                                                      02-DCCCA
00001BF0 0000000000001BAC                   2771+         dc ad(@LNAME807)                                               02-DCCCA
00001BF8                                    2772+         ds 0d                                                          02-DCCCA
00001BF8 0000000000001BC0                   2773+         dc ad($eye0049)                                                02-DCCCA
00001C00 0000000000000000                   2774+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001C08                                    2775+         ds    0d                                                       01-DCCPR
                                            2776+         entry unittest_string                                          01-DCCPR
00001C08                                    2777+unittest_string ds 0d                                                   01-DCCPR
00001C08                                    2778+@REGION_807_1 ds 0h                                                     01-DCCPR
00001C08 EBEC D008 0024          00000008   2779+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C0E E3E0 D088 0004          00000088   2780+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001C14 E3C0 D090 0004          00000090   2781+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001C1A B904 002E                          2782+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001C1E E3B0 C018 0004          00000018   2783+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001C24 A7EB 00B0               000000B0   2784+         aghi  14,176              increase by frame size               01-DCCPR
00001C28 E3E0 C020 0021          00000020   2785+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001C2E 4720 B020               00000020   2786+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001C32                                    2787+@PER_807 ds    0h                                                       01-DCCPR
00001C32 EBDE 2080 0024          00000080   2788+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001C38 E3C0 2090 0024          00000090   2789+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001C3E B904 00D2                          2790+         lgr   13,2                set real frame pointer               01-DCCPR
00001C42 B904 00CF                          2791+         lgr   12,15               set base reg                         01-DCCPR
                        00001C08            2792+         using @REGION_807_1,12                                         01-DCCPR
                                            2793 * ******* End of Prologue
                                            2794 * *
                                            2795 * ***           int fails = 0;
00001C46 A728 0000               00000000   2796          LHI   2,0         ; 0
                                            2797 * ***
                                            2798 * ***           fails += ut_strcasestr();
00001C4A E3F0 C0A0 0004          00001CA8   2799          LG    15,@lit_807_109 ; ut_strcasestr
00001C50                                    2800 @@gen_label154 DS    0H
00001C50 05EF                               2801          BALR  14,15
00001C52                                    2802 @@gen_label155 DS    0H
00001C52 1A2F                               2803          AR    2,15
                                            2804 * ***
                                            2805 * ***           return fails;
00001C54 B914 00F2                          2806          LGFR  15,2
                                            2807 * ***   }
                                            2808 * * **** Start of Epilogue
                                            2809          DCCEPIL
00001C58                                    2810+         ds 0h                                                          01-DCCEP
                                            2811+* Epilog
00001C58 D707 D088 D088 00000088 00000088   2812+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C5E E3D0 D080 0004          00000080   2813+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C64 E3C0 D090 0004          00000090   2814+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C6A E3B0 C018 0004          00000018   2815+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C70 E3C0 B010 0021          00000010   2816+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C76 E3E0 D008 0004          00000008   2817+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C7C EB1C D020 0004          00000020   2818+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C82 078E                               2819+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C84 E3F0 D010 0024          00000010   2820+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C8A E300 D018 0024          00000018   2821+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C90 E3F0 D090 0004          00000090   2822+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C96 E3F0 F018 0004          00000018   2823+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C9C 47F0 F040               00000040   2824+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2825+* End of Epilog
                                            2826 * * **** End of Epilogue
                                                                                                                           Page   59 
  Active Usings: @REGION_807_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001CA0                                    2827          DS    0D
00001CA0 000000B0                           2828 @FRAMESIZE_807 DC F'176'
00001CA4 00000000
00001CA8 0000000000001840                   2829 @lit_807_109 DC AD(ut_strcasestr)
                                            2830          DROP  12
                                            2831 *
                                            2832 *   DSECT for automatic variables in "unittest_string"
                                            2833 *      (FUNCTION #807)
                                            2834 *
00000000                00000000 000000AC   2835 @AUTO#unittest_string DSECT
00000000                                    2836          DS    XL168
000000A8                                    2837 unittest_string#fails#0 DS 1F ; fails
                                            2838 *
00001CB0                00000000 00001CB0   2839 @CODE    CSECT
                                            2840 @@STATIC ALIAS X'7C9984A2A39989958750'
                                            2841 @@STATIC DXD   64D
                                            2842 *
                                            2843 *  Non-Re-Entrant Data Section
                                            2844 *
00001CB0                00001CB0 00000474   2845 @DATA    CSECT
                                            2846 @DATA    RMODE ANY
                                            2847 @DATA    AMODE ANY
00001CB0 99846D8381939396                   2848 @@T349   DC    X'99846D838193939683'               rd.calloc
00001CB9 00                                 2849          DC    1X'00'
00001CBA 99846D9481939396                   2850 @@T34D   DC    X'99846D948193939683'               rd.malloc
00001CC3 00                                 2851          DC    1X'00'
00001CC4 99846D9985819393                   2852 @@T352   DC    X'99846D99858193939683'             rd.realloc
00001CCE 0000                               2853          DC    2X'00'
00001CD0 99846DA2A39984A4                   2854 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00001CD9 00                                 2855          DC    1X'00'
00001CDA 99846DA2A3999584                   2856 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00001CE4 0000                               2857          DC    2X'00'
00001CE6 99846D9985868395                   2858 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00001CF4 0000                               2859          DC    2X'00'
00001CF6 99846DA2A3998995                   2860 @@T3C3   DC    X'99846DA2A3998995876D998595848599' rd.string.render
00001D06 0000                               2861          DC    2X'00'
00001D08 000000000000206C                   2862 @@T3E9   DC    ADL8(@strings@+374)
00001D10 0000000000002080                   2863          DC    ADL8(@strings@+394)
00001D18 00000000                           2864          DC    4X'00'
00001D1C 0000000A                           2865          DC    X'0000000A'                         ....
00001D20 0000000000002086                   2866          DC    ADL8(@strings@+400)
00001D28 000000000000208A                   2867          DC    ADL8(@strings@+404)
00001D30 0000000000000000                   2868          DC    8X'00'
00001D38 0000000000002086                   2869          DC    ADL8(@strings@+400)
00001D40 000000000000208C                   2870          DC    ADL8(@strings@+406)
00001D48 00000000                           2871          DC    4X'00'
00001D4C 00000001                           2872          DC    X'00000001'                         ....
00001D50 0000000000002086                   2873          DC    ADL8(@strings@+400)
00001D58 000000000000208E                   2874          DC    ADL8(@strings@+408)
00001D60 00000000                           2875          DC    4X'00'
00001D64 00000002                           2876          DC    X'00000002'                         ....
00001D68 0000000000002090                   2877          DC    ADL8(@strings@+410)
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001D70 000000000000209A                   2878          DC    ADL8(@strings@+420)
00001D78 0000000000000000                   2879          DC    8X'00'
00001D80 000000000000209E                   2880          DC    ADL8(@strings@+424)
00001D88 00000000000020A8                   2881          DC    ADL8(@strings@+434)
00001D90 00000000                           2882          DC    4X'00'
00001D94 00000001                           2883          DC    X'00000001'                         ....
00001D98 00000000000020AC                   2884          DC    ADL8(@strings@+438)
00001DA0 00000000000020B6                   2885          DC    ADL8(@strings@+448)
00001DA8 00000000                           2886          DC    4X'00'
00001DAC 00000002                           2887          DC    X'00000002'                         ....
00001DB0 00000000000020BA                   2888          DC    ADL8(@strings@+452)
00001DB8 00000000000020E2                   2889          DC    ADL8(@strings@+492)
00001DC0 00000000                           2890          DC    4X'00'
00001DC4 0000001E                           2891          DC    X'0000001E'                         ....
00001DC8 00000000000020BA                   2892          DC    ADL8(@strings@+452)
00001DD0 00000000000020EA                   2893          DC    ADL8(@strings@+500)
00001DD8 FFFFFFFFFFFFFFFF                   2894          DC    X'FFFFFFFFFFFFFFFF'                 ........
00001DE0 00000000000020F2                   2895          DC    ADL8(@strings@+508)
00001DE8 00000000000020FC                   2896          DC    ADL8(@strings@+518)
00001DF0 00000000                           2897          DC    4X'00'
00001DF4 00000003                           2898          DC    X'00000003'                         ....
00001DF8 0000000000002100                   2899          DC    ADL8(@strings@+522)
00001E00 000000000000208A                   2900          DC    ADL8(@strings@+404)
00001E08 00000000                           2901          DC    4X'00'
00001E0C 00000001                           2902          DC    X'00000001'                         ....
00001E10 000000000000208A                   2903          DC    ADL8(@strings@+404)
00001E18 0000000000002104                   2904          DC    ADL8(@strings@+526)
00001E20 0000000000000000                   2905          DC    8X'00'
00001E28 0000000000002106                   2906          DC    ADL8(@strings@+528)
00001E30 000000000000210A                   2907          DC    ADL8(@strings@+532)
00001E38 00000000                           2908          DC    4X'00'
00001E3C 00000001                           2909          DC    X'00000001'                         ....
00001E40 0000000000001FA2                   2910          DC    ADL8(@strings@+172)
00001E48 0000000000001FA2                   2911          DC    ADL8(@strings@+172)
00001E50 FFFFFFFFFFFFFFFF                   2912          DC    X'FFFFFFFFFFFFFFFF'                 ........
00001E58 0000000000001FA2                   2913          DC    ADL8(@strings@+172)
00001E60 000000000000208A                   2914          DC    ADL8(@strings@+404)
00001E68 FFFFFFFFFFFFFFFF                   2915          DC    X'FFFFFFFFFFFFFFFF'                 ........
00001E70 000000000000208A                   2916          DC    ADL8(@strings@+404)
00001E78 0000000000001FA2                   2917          DC    ADL8(@strings@+172)
00001E80 FFFFFFFFFFFFFFFF                   2918          DC    X'FFFFFFFFFFFFFFFF'                 ........
00001E88 000000000000210C                   2919          DC    ADL8(@strings@+534)
00001E90 000000000000210C                   2920          DC    ADL8(@strings@+534)
00001E98 0000000000000000                   2921          DC    8X'00'
00001EA0 0000000000002114                   2922          DC    ADL8(@strings@+542)
00001EA8 0000000000002114                   2923          DC    ADL8(@strings@+542)
00001EB0 0000000000000000                   2924          DC    8X'00'
00001EB8 000000000000211C                   2925          DC    ADL8(@strings@+550)
00001EC0 0000000000002114                   2926          DC    ADL8(@strings@+542)
00001EC8 0000000000000000                   2927          DC    32X'00'
00001EE8 A4A36DA2A3998381                   2928 @@T3EB   DC    X'A4A36DA2A3998381A285A2A399'       ut.strcasestr
00001EF5 00                                 2929          DC    1X'00'
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001EF6                                    2930 @strings@ DS   0H
00001EF6 C37AE081A2879281                   2931          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00001F06 849281869281E0A2                   2932          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00001F16 97006CC00000D489                   2933          DC    X'97006CC00000D489A2A2899587408393' p.....Missing.cl
00001F26 96A2856082998183                   2934          DC    X'96A28560829981838540D04086969940' ose.brace...for.
00001F36 6C4B5CA24081A340                   2935          DC    X'6C4B5CA24081A3406CA9A400D7999697' ...s.at..zu.Prop
00001F46 8599A3A8409596A3                   2936          DC    X'8599A3A8409596A34081A58189938182' erty.not.availab
00001F56 93857A407F6CA27F                   2937          DC    X'93857A407F6CA27F0000C37AE081A287' le....s...C..asg
00001F66 9281869281E09389                   2938          DC    X'9281869281E093898299849281869281' kafka.librdkafka
00001F76 E0A29983E09984A2                   2939          DC    X'E0A29983E09984A2A3998995874B8300' .src.rdstring.c.
00001F86 99404C404DA2A289                   2940          DC    X'99404C404DA2A289A9856DA35D6D9985' r....ssize.t..re
00001F96 948189954D5D0000                   2941          DC    X'948189954D5D00004B4B000000006B00' main............
00001FA6 6CA26CA200001BAD                   2942          DC    X'6CA26CA200001BADF3F494D9C4E4E37A' .s.s....34mRDUT.
00001FB6 40C9D5C6D67A406C                   2943          DC    X'40C9D5C6D67A406CA27A6C847A406CA2' .INFO...s..d...s
00001FC6 7A40C2C5C7C9D57A                   2944          DC    X'7A40C2C5C7C9D57A401BADF094150000' ..BEGIN....0m...
00001FD6 1BADF3F194D9C4E4                   2945          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
00001FE6 406CA27A6C847A40                   2946          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
00001FF6 99A3408681899385                   2947          DC    X'99A3408681899385847A409686407E7E' rt.failed..of...
00002006 40A2A399A2AD89BD                   2948          DC    X'40A2A399A2AD89BD4B85A7977A400000' .strs.i..exp....
00002016 4DD5E4D3D35D0000                   2949          DC    X'4DD5E4D3D35D00007B6C847A407D6CA2' .NULL.....d....s
00002026 7D408995407D6CA2                   2950          DC    X'7D408995407D6CA27D7A4085A7978583' ..in...s...expec
00002036 A3858440968686A2                   2951          DC    X'A3858440968686A285A3406CA9846B40' ted.offset..zd..
00002046 9596A3406CA98440                   2952          DC    X'9596A3406CA984404D6CA25D00001BAD' not..zd...s.....
00002056 F09415009686407E                   2953          DC    X'F09415009686407E7E40A2A399A2AD89' 0m..of....strs.i
00002066 BD4B85A79700A388                   2954          DC    X'BD4B85A79700A38889A24089A2408140' ..exp.this.is.a.
00002076 8881A8A2A3818392                   2955          DC    X'8881A8A2A381839200008881A8A20000' haystack..hays..
00002086 8182830081008200                   2956          DC    X'81828300810082008300C1828381C283' abc.a.b.c.AbcaBc
00002096 8182C300C1C2C300                   2957          DC    X'8182C300C1C2C30081828381828381C2' abC.ABC.abcabcaB
000020A6 C300C283C1008182                   2958          DC    X'C300C283C100818283818283C1C28300' C.BcA.abcabcABc.
000020B6 83C1C20095858584                   2959          DC    X'83C1C2009585858440A3964085A2A381' cAB.need.to.esta
000020C6 99A340A2A3C1D9E3                   2960          DC    X'99A340A2A3C1D9E340A3888540A38199' rt.stART.the.tar
000020D6 A340D985E2A3C199                   2961          DC    X'A340D985E2A3C199E35A0000D9C5A2E3' t.ReStArT...REsT
000020E6 81D9A3006FA2E381                   2962          DC    X'81D9A3006FA2E381D9A3000081818181' aRt..sTaRt..aaaa
000020F6 828181C182008182                   2963          DC    X'828181C1820081820000F0C15A00C100' baaAb.ab..0A..A.
00002106 4BA90000E9009785                   2964          DC    X'4BA90000E9009785D98685C3A3009785' .z..Z.peRfeCt.pe
00002116 99868583A300D7C5                   2965          DC    X'99868583A300D7C5D9C6C5C3E300'     rfect.PERFECT.
                                            2966 @E__stderrp ALIAS C'@@STDERP'
                                            2967          EXTRN @E__stderrp
                                            2968 @E_$Current$Rune$Locale ALIAS C'@@CRNTLC'
                                            2969          EXTRN @E_$Current$Rune$Locale
                                            2970 @Erd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A28*
                                                                599A36D96956D86818993A49985'
                                            2971          EXTRN @Erd_unittest_assert_on_failure
                                            2972 *
                                            2973 *
                                            2974 *   Re-entrant Data Initialization Section
                                            2975 *
                                            2976 @@INIT@  ALIAS C'rdstring:'
00002128                00002128 00000230   2977 @@INIT@  CSECT
                                            2978 @@INIT@  AMODE ANY
                                            2979 @@INIT@  RMODE ANY
00002128 05                                 2980          DC    XL1'5'
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002129 000000                             2981          DC    AL3(0)
0000212C 00000120                           2982          DC    AL4(288)
00002130 00000000                           2983          DC    4X'00'
00002134 00000000                           2984          DC    Q(@@STATIC)
00002138 00000000                           2985          DC    X'00000000'
0000213C 00000001                           2986          DC    X'00000001'
00002140 00000000                           2987          DC    X'00000000'
00002144 000000FF                           2988          DC    X'000000FF'
00002148 0102039C09867F97                   2989          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00002158 1112139D85088718                   2990          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00002168 818283840A171B88                   2991          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00002178 9116939495960498                   2992          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00002188 A0E2E4E0E1E3E5E7                   2993          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00002198 E9EAEBE8EDEEEFEC                   2994          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
000021A8 2FC2C4C0C1C3C5C7                   2995          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
000021B8 C9CACBC8CDCECFCC                   2996          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
000021C8 6162636465666768                   2997          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
000021D8 6A6B6C6D6E6F7071                   2998          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000021E8 7E73747576777879                   2999          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000021F8 A3A5B7A9A7B6BCBD                   3000          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00002208 4142434445464748                   3001          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00002218 4A4B4C4D4E4F5051                   3002          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00002228 F753545556575859                   3003          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00002238 3132333435363738                   3004          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            3005 *
00002248 05                                 3006          DC    XL1'5'
00002249 000000                             3007          DC    AL3(0)
0000224C 000001E0                           3008          DC    AL4(480)
00002250 00000000                           3009          DC    4X'00'
00002254 00000000                           3010          DC    Q(@@STATIC)
00002258 00000000                           3011          DC    X'00000000'
0000225C 00000101                           3012          DC    X'00000101'
00002260 00000000                           3013          DC    X'00000000'
00002264 000000A0                           3014          DC    X'000000A0'
00002268 010203372D2E2F16                   3015          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00002278 1112133C3D322618                   3016          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00002288 5A7F7B5B6C507D4D                   3017          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00002298 F1F2F3F4F5F6F7F8                   3018          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
000022A8 C1C2C3C4C5C6C7C8                   3019          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
000022B8 D8D9E2E3E4E5E6E7                   3020          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
000022C8 8182838485868788                   3021          DC    X'81828384858687888991929394959697' abcdefghijklmnop
000022D8 9899A2A3A4A5A6A7                   3022          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000022E8 2122232425061728                   3023          DC    X'2122232425061728292A2B2C090A1B30' ................
000022F8 311A333435360838                   3024          DC    X'311A333435360838393A3B04143EFF80' ................
                                            3025 *
00002308 05                                 3026          DC    XL1'5'
00002309 000000                             3027          DC    AL3(0)
0000230C 00000208                           3028          DC    AL4(520)
00002310 00000000                           3029          DC    4X'00'
00002314 00000000                           3030          DC    Q(@@STATIC)
00002318 00000000                           3031          DC    X'00000000'
0000231C 000001C0                           3032          DC    X'000001C0'
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002320 00000000                           3033          DC    X'00000000'
00002324 00000001                           3034          DC    X'00000001'
00002328 8A40404040404040                   3035          DC    X'8A40404040404040'                 ........
                                            3036 *
00002330 05                                 3037          DC    XL1'5'
00002331 000000                             3038          DC    AL3(0)
00002334 00000000                           3039          DC    AL4(0)
00002338 00000000                           3040          DC    4X'00'
0000233C 00000000                           3041          DC    Q(@@STATIC)
00002340 00000000                           3042          DC    X'00000000'
00002344 000001E0                           3043          DC    X'000001E0'
00002348 00000000                           3044          DC    X'00000000'
0000234C 00000001                           3045          DC    X'00000001'
00002350 8B40404040404040                   3046          DC    X'8B40404040404040'                 ........
                                            3047 *
                                            3048          EXTRN @@ALLOCA
                                            3049          END
                                                 Relocation Dictionary                                                     Page   64 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000004 00000148   A 4      +
 00000002 0000000C 00000150   A 4      +
 00000002 00000010 00000158   A 4      +
 00000002 00000010 00000160   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 00000002 000001A8   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000006 000002C0   A 4      +
 00000002 0000000C 000002C8   A 4      +
 00000002 00000010 000002D0   A 4      +
 00000002 00000010 000002D8   A 4      +
 00000002 00000002 000002F8   A 4      +
 00000002 00000002 00000320   A 4      +
 00000002 00000002 00000328   A 4      +
 00000002 0000000E 000003E0   A 4      +
 00000002 00000002 00000408   A 4      +
 00000002 00000002 00000430   A 4      +
 00000002 00000002 00000438   A 4      +
 00000002 00000002 000004E8   A 4      +
 00000002 0000000B 000004F0   A 4      +
 00000002 00000010 000004F8   A 4      +
 00000002 00000002 00000500   A 4      +
 00000002 0000000A 00000510   A 4      +
 00000002 00000002 00000518   A 4      +
 00000002 00000015 00000520   A 4      +
 00000002 0000000C 00000530   A 4      +
 00000002 00000010 00000538   A 4      +
 00000002 00000002 00000940   A 4      +
 00000002 00000002 00000968   A 4      +
 00000002 00000002 00000970   A 4      +
 00000002 00000002 00000A28   A 4      +
 00000002 00000002 00000A50   A 4      +
 00000002 00000002 00000A78   A 4      +
 00000002 00000002 00000A80   A 4      +
 00000002 00000002 00000B38   A 4      +
 00000002 00000002 00000B60   A 4      +
 00000002 00000002 00000B88   A 4      +
 00000002 00000002 00000B90   A 4      +
 00000002 00000002 00000C30   A 4      +
 00000002 00000002 00000D98   A 4      +
 00000002 00000002 00000DC0   A 4      +
 00000002 00000002 00000DC8   A 4      +
 00000002 00000002 00000E98   A 4      +
 00000002 00000002 00000EC0   A 4      +
 00000002 00000002 00000EE8   A 4      +
 00000002 00000002 00000EF0   A 4      +
 00000002 00000002 00000FB8   A 4      +
 00000002 00000002 00000FE0   A 4      +
 00000002 00000002 00001008   A 4      +
 00000002 00000002 00001010   A 4      +
                                                 Relocation Dictionary                                                     Page   65 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 000010C8   A 4      +
 00000002 00000002 000010F0   A 4      +
 00000002 00000002 00001118   A 4      +
 00000002 00000002 00001120   A 4      +
 00000002 0000000A 00001198   A 4      +
 00000002 00000010 000011A0   A 4      +
 00000002 00000002 00001338   A 4      +
 00000002 00000002 00001340   A 4      +
 00000002 00000002 00001418   A 4      +
 00000002 00000002 00001420   A 4      +
 00000002 00000002 000014D0   A 4      +
 00000002 00000002 000014F8   A 4      +
 00000002 00000002 00001500   A 4      +
 00000002 00000003 000015B0   A 4      +
 00000002 00000008 000015B8   A 4      +
 00000002 00000009 000015C0   Q 4      +
 00000002 00000002 00001800   A 4      +
 00000002 00000002 00001828   A 4      +
 00000002 00000002 00001830   A 4      +
 00000002 00000005 000018E8   A 4      +
 00000002 00000010 000018F0   A 4      +
 00000002 00000010 000018F8   A 4      +
 00000002 0000000D 00001900   Q 4      +
 00000002 00000002 00001908   A 4      +
 00000002 00000007 00001910   Q 4      +
 00000002 0000000C 00001918   A 4      +
 00000002 00000002 00001BC8   A 4      +
 00000002 00000002 00001BF0   A 4      +
 00000002 00000002 00001BF8   A 4      +
 00000002 00000002 00001CA8   A 4      +
 00000010 00000010 00001D08   A 4      +
 00000010 00000010 00001D10   A 4      +
 00000010 00000010 00001D20   A 4      +
 00000010 00000010 00001D28   A 4      +
 00000010 00000010 00001D38   A 4      +
 00000010 00000010 00001D40   A 4      +
 00000010 00000010 00001D50   A 4      +
 00000010 00000010 00001D58   A 4      +
 00000010 00000010 00001D68   A 4      +
 00000010 00000010 00001D70   A 4      +
 00000010 00000010 00001D80   A 4      +
 00000010 00000010 00001D88   A 4      +
 00000010 00000010 00001D98   A 4      +
 00000010 00000010 00001DA0   A 4      +
 00000010 00000010 00001DB0   A 4      +
 00000010 00000010 00001DB8   A 4      +
 00000010 00000010 00001DC8   A 4      +
 00000010 00000010 00001DD0   A 4      +
 00000010 00000010 00001DE0   A 4      +
 00000010 00000010 00001DE8   A 4      +
 00000010 00000010 00001DF8   A 4      +
 00000010 00000010 00001E00   A 4      +
 00000010 00000010 00001E10   A 4      +
                                                 Relocation Dictionary                                                     Page   66 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000010 00000010 00001E18   A 4      +
 00000010 00000010 00001E28   A 4      +
 00000010 00000010 00001E30   A 4      +
 00000010 00000010 00001E40   A 4      +
 00000010 00000010 00001E48   A 4      +
 00000010 00000010 00001E58   A 4      +
 00000010 00000010 00001E60   A 4      +
 00000010 00000010 00001E70   A 4      +
 00000010 00000010 00001E78   A 4      +
 00000010 00000010 00001E88   A 4      +
 00000010 00000010 00001E90   A 4      +
 00000010 00000010 00001EA0   A 4      +
 00000010 00000010 00001EA8   A 4      +
 00000010 00000010 00001EB8   A 4      +
 00000010 00000010 00001EC0   A 4      +
 00000014 0000000F 00002134   Q 4      +
 00000014 0000000F 00002254   Q 4      +
 00000014 0000000F 00002314   Q 4      +
 00000014 0000000F 0000233C   Q 4      +
                                                 DSECT Cross Reference                                                     Page   67 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
@AUTO#_rd_strcasestr
         000000B0  FFFFFFF2  02403
@AUTO#rd_flags2str
         000000B0  FFFFFFF5  01825
@AUTO#rd_free
         000000A8  FFFFFFFD  00397
@AUTO#rd_malloc
         000000A8  FFFFFFFF  00165
@AUTO#rd_realloc
         000000A8  FFFFFFFE  00294
@AUTO#rd_strcmp
         000000A8  FFFFFFF3  02066
@AUTO#rd_string_hash
         000000B0  FFFFFFF4  01951
@AUTO#rd_string_render
         000000B0  FFFFFFFC  00871
@AUTO#rd_strtup_destroy
         000000A8  FFFFFFFB  00987
@AUTO#rd_strtup_dup
         000000A8  FFFFFFF7  01518
@AUTO#rd_strtup_free
         000000A8  FFFFFFFA  01092
@AUTO#rd_strtup_list_copy
         000000A8  FFFFFFF6  01623
@AUTO#rd_strtup_new
         000000A8  FFFFFFF8  01411
@AUTO#rd_strtup_new0
         000000A8  FFFFFFF9  01303
@AUTO#unittest_string
         000000AC  FFFFFFF0  02835
@AUTO#ut_strcasestr
         000000B0  FFFFFFF1  02724
                                          Macro and Copy Code Source Summary                                               Page   68 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:36 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page   69 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   101  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00108    127 @REGION_752_1,12
   160  00000168  00000002 DROP                                           12              12
   228  000001FE  00000002 USING  ORDINARY    000001C0 00001000 00000002  12 00118    256 @REGION_753_1,12
   289  000002E0  00000002 DROP                                           12              12
   357  00000376  00000002 USING  ORDINARY    00000338 00001000 00000002  12 000A8    364 @REGION_754_1,12
   392  000003E8  00000002 DROP                                           12              12
   462  00000486  00000002 USING  ORDINARY    00000448 00001000 00000002  12 0048E    838 @REGION_760_1,12
   866  0000091E  00000002 DROP                                           12              12
   947  000009BE  00000002 USING  ORDINARY    00000980 00001000 00000002  12 000A8    954 @REGION_761_1,12
   982  00000A30  00000002 DROP                                           12              12
  1052  00000ACE  00000002 USING  ORDINARY    00000A90 00001000 00000002  12 000A8   1059 @REGION_762_1,12
  1087  00000B40  00000002 DROP                                           12              12
  1157  00000BDE  00000002 USING  ORDINARY    00000BA0 00001000 00000002  12 00196   1269 @REGION_763_1,12
  1298  00000D7E  00000002 DROP                                           12              12
  1368  00000E16  00000002 USING  ORDINARY    00000DD8 00001000 00000002  12 000C0   1379 @REGION_764_1,12
  1406  00000EA0  00000002 DROP                                           12              12
  1476  00000F3E  00000002 USING  ORDINARY    00000F00 00001000 00000002  12 000B8   1486 @REGION_765_1,12
  1513  00000FC0  00000002 DROP                                           12              12
  1583  0000105E  00000002 USING  ORDINARY    00001020 00001000 00000002  12 000A8   1591 @REGION_766_1,12
  1618  000010D0  00000002 DROP                                           12              12
  1688  0000116E  00000002 USING  ORDINARY    00001130 00001000 00000002  12 00176   1793 @REGION_767_1,12
  1820  000012F2  00000002 DROP                                           12              12
  1884  0000135A  00000002 USING  ORDINARY    00001350 00001000 00000002  12 00078   1929 @REGION_768_1,12
  1946  000013DA  00000002 DROP                                           12              12
  2008  0000143A  00000002 USING  ORDINARY    00001430 00001000 00000002  12 00076   2043 @REGION_769_1,12
  2061  000014B4  00000002 DROP                                           12              12
  2131  0000154E  00000002 USING  ORDINARY    00001510 00001000 00000002  12 0028A   2373 @REGION_770_1,12
  2398  000017E2  00000002 DROP                                           12              12
  2469  0000187E  00000002 USING  ORDINARY    00001840 00001000 00000002  12 00324   2694 @REGION_806_1,12
  2719  00001BAC  00000002 DROP                                           12              12
  2792  00001C46  00000002 USING  ORDINARY    00001C08 00001000 00000002  12 000A0   2799 @REGION_807_1,12
  2830  00001CB0  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page   70 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDSTRING ..\asg\asm\rdstring.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.36.22 Stop Time: 15.36.22 Processor Time: 00.00.00.0320
Return Code 000
