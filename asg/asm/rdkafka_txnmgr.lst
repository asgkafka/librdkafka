                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_txnmgr.obj ../asg/asm/rdkafka_txnmgr.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_txnmgr.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_TXNMGR
          SD 00000002 00000000 00014658            07  @CODE
write     ER 00000003                                  WRITE
rd_kafka_topic_partition_list_get_err
          ER 00000004                                  RD_KAFKA_TOPIC_PARTITION_LIST_GET_ERR
rd_kafka_set_fatal_error0
          ER 00000005                                  RD_KAFKA_SET_FATAL_ERROR0
rd_buf_write
          ER 00000006                                  RD_BUF_WRITE
fprintf   ER 00000007                                  FPRINTF
rd_kafka_AddPartitionsToTxnRequest
          ER 00000008                                  RD_KAFKA_$ADD$PARTITIONS$TO$TXN$REQUEST
rd_kafka_broker_persistent_connection_add
          ER 00000009                                  RD_KAFKA_BROKER_PERSISTENT_CONNECTION_ADD
rd_kafka_AddOffsetsToTxnRequest
          ER 0000000A                                  RD_KAFKA_$ADD$OFFSETS$TO$TXN$REQUEST
rd_kafka_op_destroy
          ER 0000000B                                  RD_KAFKA_OP_DESTROY
rd_kafka_broker_persistent_connection_del
          ER 0000000C                                  RD_KAFKA_BROKER_PERSISTENT_CONNECTION_DEL
rd_kafka_EndTxnRequest
          ER 0000000D                                  RD_KAFKA_$END$TXN$REQUEST
rd_kafka_broker_monitor_add
          ER 0000000E                                  RD_KAFKA_BROKER_MONITOR_ADD
rd_kafka_op_new0
          ER 0000000F                                  RD_KAFKA_OP_NEW0
rd_kafka_broker_monitor_del
          ER 00000010                                  RD_KAFKA_BROKER_MONITOR_DEL
rd_kafka_outq_len
          ER 00000011                                  RD_KAFKA_OUTQ_LEN
rd_kafka_op_new_cb
          ER 00000012                                  RD_KAFKA_OP_NEW_CB
rd_kafka_error_new_v
          ER 00000013                                  RD_KAFKA_ERROR_NEW_V
rd_kafka_op_reply
          ER 00000014                                  RD_KAFKA_OP_REPLY
rd_kafka_error_set_fatal
          ER 00000015                                  RD_KAFKA_ERROR_SET_FATAL
rd_kafka_error_set_retriable
          ER 00000016                                  RD_KAFKA_ERROR_SET_RETRIABLE
@@PT3MI   ER 00000017                                  PTHREAD_MUTEX_INIT
rd_kafka_error_set_txn_requires_abort
          ER 00000018                                  RD_KAFKA_ERROR_SET_TXN_REQUIRES_ABORT
@@PT3ML   ER 00000019                                  PTHREAD_MUTEX_LOCK
rd_kafka_op_req0
          ER 0000001A                                  RD_KAFKA_OP_REQ0
rd_kafka_error_new_fatal
          ER 0000001B                                  RD_KAFKA_ERROR_NEW_FATAL
rd_kafka_error_new_retriable
          ER 0000001C                                  RD_KAFKA_ERROR_NEW_RETRIABLE
rd_kafka_op_req
          ER 0000001D                                  RD_KAFKA_OP_REQ
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
rd_kafka_error_new_txn_requires_abort
          ER 0000001E                                  RD_KAFKA_ERROR_NEW_TXN_REQUIRES_ABORT
rd_kafka_metadata_refresh_brokers
          ER 0000001F                                  RD_KAFKA_METADATA_REFRESH_BROKERS
rd_kafka_toppar_destroy_final
          ER 00000020                                  RD_KAFKA_TOPPAR_DESTROY_FINAL
@@PT3MU   ER 00000021                                  PTHREAD_MUTEX_UNLOCK
crc_table XD 00000022 00000003 00000000                CRC_TABLE
rd_kafka_op_throttle_time
          ER 00000023                                  RD_KAFKA_OP_THROTTLE_TIME
rd_kafka_consumer_group_metadata_dup
          ER 00000024                                  RD_KAFKA_CONSUMER_GROUP_METADATA_DUP
rd_kafka_err2str
          ER 00000025                                  RD_KAFKA_ERR2STR
rd_kafka_err2name
          ER 00000026                                  RD_KAFKA_ERR2NAME
rd_slice_read
          ER 00000027                                  RD_SLICE_READ
rd_kafka_q_new0
          ER 00000028                                  RD_KAFKA_Q_NEW0
rd_slice_read_uvarint
          ER 00000029                                  RD_SLICE_READ_UVARINT
rd_kafka_q_destroy_final
          ER 0000002A                                  RD_KAFKA_Q_DESTROY_FINAL
rd_kafka_fatal_error
          ER 0000002B                                  RD_KAFKA_FATAL_ERROR
rd_kafka_toppar_get0
          ER 0000002C                                  RD_KAFKA_TOPPAR_GET0
rd_kafka_error_code
          ER 0000002D                                  RD_KAFKA_ERROR_CODE
rd_kafka_error_string
          ER 0000002E                                  RD_KAFKA_ERROR_STRING
snprintf  ER 0000002F                                  SNPRINTF
rd_slice_ensure_contig
          ER 00000030                                  RD_SLICE_ENSURE_CONTIG
strdup    ER 00000031                                  STRDUP
rd_kafka_error_txn_requires_abort
          ER 00000032                                  RD_KAFKA_ERROR_TXN_REQUIRES_ABORT
VSNPRNT@  ER 00000033                                  VSNPRINTF
rd_kafka_error_destroy
          ER 00000034                                  RD_KAFKA_ERROR_DESTROY
rd_kafka_error_new
          ER 00000035                                  RD_KAFKA_ERROR_NEW
rd_kafka_topic_partition_list_destroy
          ER 00000036                                  RD_KAFKA_TOPIC_PARTITION_LIST_DESTROY
rd_kafka_q_purge0
          ER 00000037                                  RD_KAFKA_Q_PURGE0
rd_kafka_idemp_set_state
          ER 00000038                                  RD_KAFKA_IDEMP_SET_STATE
@@ASSERT  ER 00000039                                  __ASSERT
rd_kafka_coord_cache_evict
          ER 0000003A                                  RD_KAFKA_COORD_CACHE_EVICT
rd_kafka_broker_ApiVersion_supported
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          ER 0000003B                                  RD_KAFKA_BROKER_$API$VERSION_SUPPORTED
rd_kafka_broker_find_by_nodeid0_fl
          ER 0000003C                                  RD_KAFKA_BROKER_FIND_BY_NODEID0_FL
rd_kafka_idemp_pid_fsm
          ER 0000003D                                  RD_KAFKA_IDEMP_PID_FSM
mtx_init  ER 0000003E                                  MTX_INIT
rd_kafka_coord_req
          ER 0000003F                                  RD_KAFKA_COORD_REQ
mtx_destroy
          ER 00000040                                  MTX_DESTROY
mtx_lock  ER 00000041                                  MTX_LOCK
GETTFD@Y  ER 00000042                                  GETTIMEOFDAY
rd_kafka_idemp_broker_any
          ER 00000043                                  RD_KAFKA_IDEMP_BROKER_ANY
mtx_unlock
          ER 00000044                                  MTX_UNLOCK
rd_kafka_idemp_check_error
          ER 00000045                                  RD_KAFKA_IDEMP_CHECK_ERROR
rd_kafka_idemp_start
          ER 00000046                                  RD_KAFKA_IDEMP_START
cnd_signal
          ER 00000047                                  CND_SIGNAL
rd_kafka_timer_stop
          ER 00000048                                  RD_KAFKA_TIMER_STOP
rd_kafka_lwtopic_destroy
          ER 00000049                                  RD_KAFKA_LWTOPIC_DESTROY
rd_kafka_buf_read_topic_partitions
          ER 0000004A                                  RD_KAFKA_BUF_READ_TOPIC_PARTITIONS
rd_kafka_timer_start0
          ER 0000004B                                  RD_KAFKA_TIMER_START0
rd_kafka_buf_write_topic_partitions
          ER 0000004C                                  RD_KAFKA_BUF_WRITE_TOPIC_PARTITIONS
rd_kafka_FindCoordinatorRequest
          ER 0000004D                                  RD_KAFKA_$FIND$COORDINATOR$REQUEST
rd_kafka_broker_destroy_final
          ER 0000004E                                  RD_KAFKA_BROKER_DESTROY_FINAL
rd_kafka_buf_destroy_final
          ER 0000004F                                  RD_KAFKA_BUF_DESTROY_FINAL
rd_kafka_broker_add_logical
          ER 00000050                                  RD_KAFKA_BROKER_ADD_LOGICAL
rd_kafka_topic_destroy_final
          ER 00000051                                  RD_KAFKA_TOPIC_DESTROY_FINAL
rd_kafka_broker_set_nodename
          ER 00000052                                  RD_KAFKA_BROKER_SET_NODENAME
rd_kafka_buf_new_request0
          ER 00000053                                  RD_KAFKA_BUF_NEW_REQUEST0
rd_kafka_topic_partition_list_sort_by_topic
          ER 00000054                                  RD_KAFKA_TOPIC_PARTITION_LIST_SORT_BY_TOPIC
rd_kafka_topic_find0_fl
          ER 00000055                                  RD_KAFKA_TOPIC_FIND0_FL
rd_kafka_broker_buf_enq_replyq
          ER 00000056                                  RD_KAFKA_BROKER_BUF_ENQ_REPLYQ
rd_kafka_buf_retry
                                              External Symbol Dictionary                                                   Page    6 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          ER 00000057                                  RD_KAFKA_BUF_RETRY
rd_kafka_crash
          ER 00000058                                  RD_KAFKA_CRASH
rwlock_rdlock
          ER 00000059                                  RWLOCK_RDLOCK
rd_kafka_broker_name
          ER 0000005A                                  RD_KAFKA_BROKER_NAME
rwlock_wrlock
          ER 0000005B                                  RWLOCK_WRLOCK
rd_kafka_all_brokers_wakeup
          ER 0000005C                                  RD_KAFKA_ALL_BROKERS_WAKEUP
rwlock_rdunlock
          ER 0000005D                                  RWLOCK_RDUNLOCK
rd_kafka_topic_partition_list_str
          ER 0000005E                                  RD_KAFKA_TOPIC_PARTITION_LIST_STR
rwlock_wrunlock
          ER 0000005F                                  RWLOCK_WRUNLOCK
@@STDERP  XD 00000060 00000003 00000000                __STDERRP
calloc    ER 00000061                                  CALLOC
rd_kafka_flush
          ER 00000062                                  RD_KAFKA_FLUSH
rd_kafka_purge
          ER 00000063                                  RD_KAFKA_PURGE
free      ER 00000064                                  FREE
rd_kafka_log0
          ER 00000065                                  RD_KAFKA_LOG0
rd_kafka_topic_partition_list_match
          ER 00000066                                  RD_KAFKA_TOPIC_PARTITION_LIST_MATCH
@rdkafka_txnmgr&
          XD 00000067 00000007 000006D8                @@STATIC
@rdkafka_txnmgr
          SD 00000068 00014658 00001ED4            07  @DATA
@@STDERP  ER 00000069                                  @E__STDERRP
crc_table ER 0000006A                                  @ECRC_TABLE
rdkafka_txnmgr:
          SD 0000006B 00016530 00001040            07  @@INIT@
rd_kafka_txn_set_fatal_error
          LD          00005118          00000002   00  RD_KAFKA_TXN_SET_FATAL_ERROR
rd_kafka_txn_set_abortable_error0
          LD          00005448          00000002   00  RD_KAFKA_TXN_SET_ABORTABLE_ERROR0
rd_kafka_txn_idemp_state_change
          LD          00005C50          00000002   00  RD_KAFKA_TXN_IDEMP_STATE_CHANGE
rd_kafka_txn_schedule_register_partitions
          LD          00009338          00000002   00  RD_KAFKA_TXN_SCHEDULE_REGISTER_PARTITIONS
rd_kafka_init_transactions
          LD          0000AB48          00000002   00  RD_KAFKA_INIT_TRANSACTIONS
rd_kafka_begin_transaction
          LD          0000B090          00000002   00  RD_KAFKA_BEGIN_TRANSACTION
rd_kafka_send_offsets_to_transaction
          LD          0000D840          00000002   00  RD_KAFKA_SEND_OFFSETS_TO_TRANSACTION
rd_kafka_commit_transaction
          LD          0000F528          00000002   00  RD_KAFKA_COMMIT_TRANSACTION
rd_kafka_abort_transaction
                                              External Symbol Dictionary                                                   Page    7 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          LD          00010570          00000002   00  RD_KAFKA_ABORT_TRANSACTION
rd_kafka_txn_coord_query
          LD          000134D8          00000002   00  RD_KAFKA_TXN_COORD_QUERY
rd_kafka_txn_coord_set
          LD          00013A18          00000002   00  RD_KAFKA_TXN_COORD_SET
rd_kafka_txn_coord_monitor_cb
          LD          00013DD0          00000002   00  RD_KAFKA_TXN_COORD_MONITOR_CB
rd_kafka_txns_term
          LD          00014140          00000002   00  RD_KAFKA_TXNS_TERM
rd_kafka_txns_init
          LD          00014460          00000002   00  RD_KAFKA_TXNS_INIT
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:38 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DE3E7D5D4C7D9'
00000000                00000000 00014658     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816DA3A795948799'
                                              18 write    ALIAS C'write'
                                              19          EXTRN write
                                              20 rd_kafka_topic_partition_list_get_err ALIAS X'99846D92818692816DA396978*
                                                                9836D978199A389A38996956D9389A2A36D8785A36D859999'
                                              21          EXTRN rd_kafka_topic_partition_list_get_err
                                              22 rd_kafka_set_fatal_error0 ALIAS X'99846D92818692816DA285A36D8681A381936*
                                                                D8599999699F0'
                                              23          EXTRN rd_kafka_set_fatal_error0
                                              24 rd_buf_write ALIAS X'99846D82A4866DA69989A385'
                                              25          EXTRN rd_buf_write
                                              26 fprintf  ALIAS C'fprintf'
                                              27          EXTRN fprintf
                                              28 rd_kafka_$Add$Partitions$To$Txn$Request ALIAS X'99846D92818692816DC1848*
                                                                4D78199A389A3899695A2E396E3A795D98598A485A2A3'
                                              29          EXTRN rd_kafka_$Add$Partitions$To$Txn$Request
                                              30 rd_kafka_broker_persistent_connection_add ALIAS X'99846D92818692816D829*
                                                                9969285996D978599A289A2A38595A36D839695958583A38996956D8*
                                                                18484'
                                              31          EXTRN rd_kafka_broker_persistent_connection_add
                                              32 rd_kafka_$Add$Offsets$To$Txn$Request ALIAS X'99846D92818692816DC18484D6*
                                                                8686A285A3A2E396E3A795D98598A485A2A3'
                                              33          EXTRN rd_kafka_$Add$Offsets$To$Txn$Request
                                              34 rd_kafka_op_destroy ALIAS X'99846D92818692816D96976D8485A2A39996A8'
                                              35          EXTRN rd_kafka_op_destroy
                                              36 rd_kafka_broker_persistent_connection_del ALIAS X'99846D92818692816D829*
                                                                9969285996D978599A289A2A38595A36D839695958583A38996956D8*
                                                                48593'
                                              37          EXTRN rd_kafka_broker_persistent_connection_del
                                              38 rd_kafka_$End$Txn$Request ALIAS X'99846D92818692816DC59584E3A795D98598A*
                                                                485A2A3'
                                              39          EXTRN rd_kafka_$End$Txn$Request
                                              40 rd_kafka_broker_monitor_add ALIAS X'99846D92818692816D8299969285996D949*
                                                                69589A396996D818484'
                                              41          EXTRN rd_kafka_broker_monitor_add
                                              42 rd_kafka_op_new0 ALIAS X'99846D92818692816D96976D9585A6F0'
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              43          EXTRN rd_kafka_op_new0
                                              44 rd_kafka_broker_monitor_del ALIAS X'99846D92818692816D8299969285996D949*
                                                                69589A396996D848593'
                                              45          EXTRN rd_kafka_broker_monitor_del
                                              46 rd_kafka_outq_len ALIAS X'99846D92818692816D96A4A3986D938595'
                                              47          EXTRN rd_kafka_outq_len
                                              48 rd_kafka_op_new_cb ALIAS X'99846D92818692816D96976D9585A66D8382'
                                              49          EXTRN rd_kafka_op_new_cb
                                              50 rd_kafka_error_new_v ALIAS X'99846D92818692816D85999996996D9585A66DA5'
                                              51          EXTRN rd_kafka_error_new_v
                                              52 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              53          EXTRN rd_kafka_op_reply
                                              54 rd_kafka_error_set_fatal ALIAS X'99846D92818692816D85999996996DA285A36D*
                                                                8681A38193'
                                              55          EXTRN rd_kafka_error_set_fatal
                                              56 rd_kafka_error_set_retriable ALIAS X'99846D92818692816D85999996996DA285*
                                                                A36D9985A3998981829385'
                                              57          EXTRN rd_kafka_error_set_retriable
                                              58 pthread_mutex_init ALIAS C'@@PT3MI'
                                              59          EXTRN pthread_mutex_init
                                              60 rd_kafka_error_set_txn_requires_abort ALIAS X'99846D92818692816D8599999*
                                                                6996DA285A36DA3A7956D998598A4899985A26D81829699A3'
                                              61          EXTRN rd_kafka_error_set_txn_requires_abort
                                              62 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              63          EXTRN pthread_mutex_lock
                                              64 rd_kafka_op_req0 ALIAS X'99846D92818692816D96976D998598F0'
                                              65          EXTRN rd_kafka_op_req0
                                              66 rd_kafka_error_new_fatal ALIAS X'99846D92818692816D85999996996D9585A66D*
                                                                8681A38193'
                                              67          EXTRN rd_kafka_error_new_fatal
                                              68 rd_kafka_error_new_retriable ALIAS X'99846D92818692816D85999996996D9585*
                                                                A66D9985A3998981829385'
                                              69          EXTRN rd_kafka_error_new_retriable
                                              70 rd_kafka_op_req ALIAS X'99846D92818692816D96976D998598'
                                              71          EXTRN rd_kafka_op_req
                                              72 rd_kafka_error_new_txn_requires_abort ALIAS X'99846D92818692816D8599999*
                                                                6996D9585A66DA3A7956D998598A4899985A26D81829699A3'
                                              73          EXTRN rd_kafka_error_new_txn_requires_abort
                                              74 rd_kafka_metadata_refresh_brokers ALIAS X'99846D92818692816D9485A381848*
                                                                1A3816D9985869985A2886D829996928599A2'
                                              75          EXTRN rd_kafka_metadata_refresh_brokers
                                              76 rd_kafka_toppar_destroy_final ALIAS X'99846D92818692816DA396979781996D8*
                                                                485A2A39996A86D8689958193'
                                              77          EXTRN rd_kafka_toppar_destroy_final
                                              78 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              79          EXTRN pthread_mutex_unlock
                                              80 crc_table ALIAS X'8399836DA381829385'
                                              81 crc_table DXD   0F
                                              82 rd_kafka_op_throttle_time ALIAS X'99846D92818692816D96976DA3889996A3A39*
                                                                3856DA3899485'
                                              83          EXTRN rd_kafka_op_throttle_time
                                              84 rd_kafka_consumer_group_metadata_dup ALIAS X'99846D92818692816D839695A2*
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                A49485996D879996A4976D9485A3818481A3816D84A497'
                                              85          EXTRN rd_kafka_consumer_group_metadata_dup
                                              86 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              87          EXTRN rd_kafka_err2str
                                              88 rd_kafka_err2name ALIAS X'99846D92818692816D859999F295819485'
                                              89          EXTRN rd_kafka_err2name
                                              90 rd_slice_read ALIAS X'99846DA2938983856D99858184'
                                              91          EXTRN rd_slice_read
                                              92 rd_kafka_q_new0 ALIAS X'99846D92818692816D986D9585A6F0'
                                              93          EXTRN rd_kafka_q_new0
                                              94 rd_slice_read_uvarint ALIAS X'99846DA2938983856D998581846DA4A581998995A*
                                                                3'
                                              95          EXTRN rd_slice_read_uvarint
                                              96 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              97          EXTRN rd_kafka_q_destroy_final
                                              98 rd_kafka_fatal_error ALIAS X'99846D92818692816D8681A381936D8599999699'
                                              99          EXTRN rd_kafka_fatal_error
                                             100 rd_kafka_toppar_get0 ALIAS X'99846D92818692816DA396979781996D8785A3F0'
                                             101          EXTRN rd_kafka_toppar_get0
                                             102 rd_kafka_error_code ALIAS X'99846D92818692816D85999996996D83968485'
                                             103          EXTRN rd_kafka_error_code
                                             104 rd_kafka_error_string ALIAS X'99846D92818692816D85999996996DA2A39989958*
                                                                7'
                                             105          EXTRN rd_kafka_error_string
                                             106 snprintf ALIAS C'snprintf'
                                             107          EXTRN snprintf
                                             108 rd_slice_ensure_contig ALIAS X'99846DA2938983856D8595A2A499856D839695A3*
                                                                8987'
                                             109          EXTRN rd_slice_ensure_contig
                                             110 strdup   ALIAS C'strdup'
                                             111          EXTRN strdup
                                             112 rd_kafka_error_txn_requires_abort ALIAS X'99846D92818692816D85999996996*
                                                                DA3A7956D998598A4899985A26D81829699A3'
                                             113          EXTRN rd_kafka_error_txn_requires_abort
                                             114 vsnprintf ALIAS C'VSNPRNT@'
                                             115          EXTRN vsnprintf
                                             116 rd_kafka_error_destroy ALIAS X'99846D92818692816D85999996996D8485A2A399*
                                                                96A8'
                                             117          EXTRN rd_kafka_error_destroy
                                             118 rd_kafka_error_new ALIAS X'99846D92818692816D85999996996D9585A6'
                                             119          EXTRN rd_kafka_error_new
                                             120 rd_kafka_topic_partition_list_destroy ALIAS X'99846D92818692816DA396978*
                                                                9836D978199A389A38996956D9389A2A36D8485A2A39996A8'
                                             121          EXTRN rd_kafka_topic_partition_list_destroy
                                             122 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                             123          EXTRN rd_kafka_q_purge0
                                             124 rd_kafka_idemp_set_state ALIAS X'99846D92818692816D89848594976DA285A36D*
                                                                A2A381A385'
                                             125          EXTRN rd_kafka_idemp_set_state
                                             126 __assert ALIAS C'@@ASSERT'
                                             127          EXTRN __assert
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             128 rd_kafka_coord_cache_evict ALIAS X'99846D92818692816D83969699846D838183*
                                                                88856D85A58983A3'
                                             129          EXTRN rd_kafka_coord_cache_evict
                                             130 rd_kafka_broker_$Api$Version_supported ALIAS X'99846D92818692816D829996*
                                                                9285996DC19789E58599A28996956DA2A497979699A38584'
                                             131          EXTRN rd_kafka_broker_$Api$Version_supported
                                             132 rd_kafka_broker_find_by_nodeid0_fl ALIAS X'99846D92818692816D8299969285*
                                                                996D868995846D82A86D959684858984F06D8693'
                                             133          EXTRN rd_kafka_broker_find_by_nodeid0_fl
                                             134 rd_kafka_idemp_pid_fsm ALIAS X'99846D92818692816D89848594976D9789846D86*
                                                                A294'
                                             135          EXTRN rd_kafka_idemp_pid_fsm
                                             136 mtx_init ALIAS X'94A3A76D899589A3'
                                             137          EXTRN mtx_init
                                             138 rd_kafka_coord_req ALIAS X'99846D92818692816D83969699846D998598'
                                             139          EXTRN rd_kafka_coord_req
                                             140 mtx_destroy ALIAS X'94A3A76D8485A2A39996A8'
                                             141          EXTRN mtx_destroy
                                             142 mtx_lock ALIAS X'94A3A76D93968392'
                                             143          EXTRN mtx_lock
                                             144 gettimeofday ALIAS C'GETTFD@Y'
                                             145          EXTRN gettimeofday
                                             146 rd_kafka_idemp_broker_any ALIAS X'99846D92818692816D89848594976D8299969*
                                                                285996D8195A8'
                                             147          EXTRN rd_kafka_idemp_broker_any
                                             148 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                             149          EXTRN mtx_unlock
                                             150 rd_kafka_idemp_check_error ALIAS X'99846D92818692816D89848594976D838885*
                                                                83926D8599999699'
                                             151          EXTRN rd_kafka_idemp_check_error
                                             152 rd_kafka_idemp_start ALIAS X'99846D92818692816D89848594976DA2A38199A3'
                                             153          EXTRN rd_kafka_idemp_start
                                             154 cnd_signal ALIAS X'8395846DA28987958193'
                                             155          EXTRN cnd_signal
                                             156 rd_kafka_timer_stop ALIAS X'99846D92818692816DA3899485996DA2A39697'
                                             157          EXTRN rd_kafka_timer_stop
                                             158 rd_kafka_lwtopic_destroy ALIAS X'99846D92818692816D93A6A3969789836D8485*
                                                                A2A39996A8'
                                             159          EXTRN rd_kafka_lwtopic_destroy
                                             160 rd_kafka_buf_read_topic_partitions ALIAS X'99846D92818692816D82A4866D99*
                                                                8581846DA3969789836D978199A389A3899695A2'
                                             161          EXTRN rd_kafka_buf_read_topic_partitions
                                             162 rd_kafka_timer_start0 ALIAS X'99846D92818692816DA3899485996DA2A38199A3F*
                                                                0'
                                             163          EXTRN rd_kafka_timer_start0
                                             164 rd_kafka_buf_write_topic_partitions ALIAS X'99846D92818692816D82A4866DA*
                                                                69989A3856DA3969789836D978199A389A3899695A2'
                                             165          EXTRN rd_kafka_buf_write_topic_partitions
                                             166 rd_kafka_$Find$Coordinator$Request ALIAS X'99846D92818692816DC6899584C3*
                                                                96969984899581A39699D98598A485A2A3'
                                             167          EXTRN rd_kafka_$Find$Coordinator$Request
                                             168 rd_kafka_broker_destroy_final ALIAS X'99846D92818692816D8299969285996D8*
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                485A2A39996A86D8689958193'
                                             169          EXTRN rd_kafka_broker_destroy_final
                                             170 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                             171          EXTRN rd_kafka_buf_destroy_final
                                             172 rd_kafka_broker_add_logical ALIAS X'99846D92818692816D8299969285996D818*
                                                                4846D93968789838193'
                                             173          EXTRN rd_kafka_broker_add_logical
                                             174 rd_kafka_topic_destroy_final ALIAS X'99846D92818692816DA3969789836D8485*
                                                                A2A39996A86D8689958193'
                                             175          EXTRN rd_kafka_topic_destroy_final
                                             176 rd_kafka_broker_set_nodename ALIAS X'99846D92818692816D8299969285996DA2*
                                                                85A36D9596848595819485'
                                             177          EXTRN rd_kafka_broker_set_nodename
                                             178 rd_kafka_buf_new_request0 ALIAS X'99846D92818692816D82A4866D9585A66D998*
                                                                598A485A2A3F0'
                                             179          EXTRN rd_kafka_buf_new_request0
                                             180 rd_kafka_topic_partition_list_sort_by_topic ALIAS X'99846D92818692816DA*
                                                                3969789836D978199A389A38996956D9389A2A36DA29699A36D82A86*
                                                                DA396978983'
                                             181          EXTRN rd_kafka_topic_partition_list_sort_by_topic
                                             182 rd_kafka_topic_find0_fl ALIAS X'99846D92818692816DA3969789836D86899584F*
                                                                06D8693'
                                             183          EXTRN rd_kafka_topic_find0_fl
                                             184 rd_kafka_broker_buf_enq_replyq ALIAS X'99846D92818692816D8299969285996D*
                                                                82A4866D8595986D99859793A898'
                                             185          EXTRN rd_kafka_broker_buf_enq_replyq
                                             186 rd_kafka_buf_retry ALIAS X'99846D92818692816D82A4866D9985A399A8'
                                             187          EXTRN rd_kafka_buf_retry
                                             188 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                             189          EXTRN rd_kafka_crash
                                             190 rwlock_rdlock ALIAS X'99A6939683926D998493968392'
                                             191          EXTRN rwlock_rdlock
                                             192 rd_kafka_broker_name ALIAS X'99846D92818692816D8299969285996D95819485'
                                             193          EXTRN rd_kafka_broker_name
                                             194 rwlock_wrlock ALIAS X'99A6939683926DA69993968392'
                                             195          EXTRN rwlock_wrlock
                                             196 rd_kafka_all_brokers_wakeup ALIAS X'99846D92818692816D8193936D829996928*
                                                                599A26DA6819285A497'
                                             197          EXTRN rd_kafka_all_brokers_wakeup
                                             198 rwlock_rdunlock ALIAS X'99A6939683926D9984A49593968392'
                                             199          EXTRN rwlock_rdunlock
                                             200 rd_kafka_topic_partition_list_str ALIAS X'99846D92818692816DA3969789836*
                                                                D978199A389A38996956D9389A2A36DA2A399'
                                             201          EXTRN rd_kafka_topic_partition_list_str
                                             202 rwlock_wrunlock ALIAS X'99A6939683926DA699A49593968392'
                                             203          EXTRN rwlock_wrunlock
                                             204 __stderrp ALIAS C'@@STDERP'
                                             205 __stderrp DXD   0F
                                             206 calloc   ALIAS C'calloc'
                                             207          EXTRN calloc
                                             208 rd_kafka_flush ALIAS X'99846D92818692816D8693A4A288'
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             209          EXTRN rd_kafka_flush
                                             210 rd_kafka_purge ALIAS X'99846D92818692816D97A4998785'
                                             211          EXTRN rd_kafka_purge
                                             212 free     ALIAS C'free'
                                             213          EXTRN free
                                             214 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                             215          EXTRN rd_kafka_log0
                                             216 rd_kafka_topic_partition_list_match ALIAS X'99846D92818692816DA39697898*
                                                                36D978199A389A38996956D9389A2A36D9481A38388'
                                             217          EXTRN rd_kafka_topic_partition_list_match
                                             218 *
                                             219 *
                                             220 *
                                             221 * ....... start of ebcdic_2_utf8
00000000                                     222 @LNAME338 DS   0H
00000000 0000000D                            223          DC    X'0000000D'
00000004 8582838489836DF2                    224          DC    C'ebcdic_2_utf8'
00000011 00                                  225          DC    X'00'
                                             226 ebcdic_2_utf8 DCCPRLG CINDEX=338,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME338
                                             227          macro
                                             228          dccextrn &m
                                             229          gblc    &$dccext(1000)
                                             230          gbla    &$dccexti
                                             231          lcla    &i
                                             232 &$dccext(&$dccexti+1) setc    '&m'
                                             233 &i       seta    1
                                             234 .loop    aif    (&i gt &$dccexti).around
                                             235          aif    ('&$dccext(&i)' eq '&m').getout
                                             236 &i       seta    &i+1
                                             237          ago     .loop
                                             238 .around  anop
                                             239 &$dccexti seta &$dccexti+1
                                             240          extrn  &m
                                             241 .getout  anop
                                             242          mend
00000018                                     243+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              244+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  245+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            246+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    247+         dc ad(@PER_338)                                                02-DCCCA
00000028 00000000000000B0                    248+         dc ad(176)                                                     02-DCCCA
00000030 0000000000000000                    249+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    250+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  251+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  252+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  253+         dc al1(3)                                                      02-DCCCA
00000043 08                                  254+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  255+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              256+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    257+         dc ad(@LNAME338)                                               02-DCCCA
00000050                                     258+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000050 0000000000000018                    259+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    260+         dc ad(0)                                                       02-DCCCA
00000060                                     261+         ds    0d                                                       01-DCCPR
00000060                                     262+ebcdic_2_utf8 ds 0d                                                     01-DCCPR
00000060                                     263+@REGION_338_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008    264+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    265+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    266+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           267+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    268+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B0               000000B0    269+         aghi  14,176              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    270+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    271+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     272+@PER_338 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    273+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    274+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           275+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           276+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             277+         using @REGION_338_1,12                                         01-DCCPR
                                             278          DCCPRV REG=9      ; Get PRV from DVT
0000009E E390 B008 0004          00000008    279+         LG 9,8(0,11)                                                   01-DCCPR
000000A4 B904 0031                           280          LGR   3,1         ; ptr to parm area
                                             281 * ******* End of Prologue
                                             282 * *
                                             283 * ***       const unsigned char* outstart = out;
000000A8 E340 3000 0004          00000000    284          LG    4,0(0,3)    ; out
000000AE B904 00F4                           285          LGR   15,4
000000B2 E310 3008 0004          00000008    286          LG    1,8(0,3)    ; outlen
000000B8 E350 3010 0004          00000010    287          LG    5,16(0,3)   ; in
000000BE B904 0025                           288          LGR   2,5
000000C2 E330 3018 0004          00000018    289          LG    3,24(0,3)   ; inlen
                                             290 * ***       const unsigned char* base = in;
                                             291 * ***       const unsigned char* processed = in;
000000C8 B904 0065                           292          LGR   6,5         ; processed
                                             293 * ***       const unsigned char* inend = in + (*inlen);
000000CC E370 3000 0004          00000000    294          LG    7,0(0,3)    ; inlen
000000D2 4177 5000               00000000    295          LA    7,0(7,5)
                                             296 * ***       const unsigned char* outend = out + (*outlen);
000000D6 E380 1000 0004          00000000    297          LG    8,0(0,1)    ; outlen
000000DC 4188 4000               00000000    298          LA    8,0(8,4)
                                             299 * ***       unsigned char c;
                                             300 * ***
                                             301 * ***       while ((in < inend) && ((out - outstart) < *outlen)) {
000000E0 47F0 C104               00000164    302          B     @L6
000000E8                                     303          DS    0D
000000E8 000000B0                            304 @FRAMESIZE_338 DC F'176'
000000EC 00000000
000000F0 00000000000000FF                    305 @lit_338_2 DC  FD'255' 0x00000000000000ff
000000F8 00000000                            306 @lit_338_1 DC  Q(@@STATIC)
000000FC                                     307 @L5      DS    0H
                                             308 * ***           c = *in++;
000000FC B904 00A2                           309          LGR   10,2
                                                                                                                           Page   15 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000100 4120 2001               00000001    310          LA    2,1(0,2)
00000104 43A0 A000               00000000    311          IC    10,0(0,10)
00000108 42A0 D0A8               000000A8    312          STC   10,168(0,13) ; c
                                             313 * ***           if (c > 0xFF)
0000010C 18BA                                314          LR    11,10
0000010E C0BB 0000 00FF                      315          NILF  11,X'000000FF'
00000114 A7BE 00FF               000000FF    316          CHI   11,255
00000118 47D0 C0D8               00000138    317          BNH   @L8
                                             318 * ***           {
                                             319 * ***               *outlen = out - outstart;
0000011C B909 00F4                           320          SGR   15,4
00000120 E3F0 1000 0024          00000000    321          STG   15,0(0,1)   ; outlen
                                             322 * ***               *inlen = processed - base;
00000126 B909 0065                           323          SGR   6,5
0000012A E360 3000 0024          00000000    324          STG   6,0(0,3)    ; inlen
                                             325 * ***               return(-1);
00000130 A7F9 FFFF               0000FFFF    326          LGHI  15,-1       ; -1
00000134 47F0 C136               00000196    327          B     @ret_lab_338
                                             328 * ***           }
00000138                                     329 @L8      DS    0H
                                             330 * ***
                                             331 * ***           if (out >= outend)
00000138 B920 00F8                           332          CGR   15,8
0000013C 47B0 C11E               0000017E    333          BNL   @L3
                                             334 * ***               break;
00000140                                     335 @L9      DS    0H
                                             336 * ***
                                             337 * ***           *out++ = E2U[c];
00000140 B904 006F                           338          LGR   6,15
00000144 41F0 F001               00000001    339          LA    15,1(0,15)
00000148 E3B0 C098 0014          000000F8    340          LGF   11,@lit_338_1
0000014E 41BB 9000               00000000    341          LA    11,0(11,9)
00000152 E3A0 C090 0080          000000F0    342          NG    10,@lit_338_2
00000158 43AA B000               00000000    343          IC    10,0(10,11)
0000015C 42A0 6000               00000000    344          STC   10,0(0,6)
                                             345 * ***           processed = (unsigned char*)in;
00000160 B904 0062                           346          LGR   6,2         ; processed
                                             347 * ***
                                             348 * ***       }
00000164                                     349 @L6      DS    0H
00000164 B920 0027                           350          CGR   2,7
00000168 47B0 C11E               0000017E    351          BNL   @L3
0000016C B904 00AF                           352          LGR   10,15
00000170 B909 00A4                           353          SGR   10,4
00000174 E3A0 1000 0021          00000000    354          CLG   10,0(0,1)
0000017A 4740 C09C               000000FC    355          BL    @L5
0000017E                                     356 @L3      DS    0H
                                             357 * ***
                                             358 * ***       *outlen = out - outstart;
0000017E B909 00F4                           359          SGR   15,4
00000182 E3F0 1000 0024          00000000    360          STG   15,0(0,1)   ; outlen
                                             361 * ***       *inlen = processed - base;
                                                                                                                           Page   16 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000188 B909 0065                           362          SGR   6,5
0000018C E360 3000 0024          00000000    363          STG   6,0(0,3)    ; inlen
                                             364 * ***       return(0);
00000192 A7F9 0000               00000000    365          LGHI  15,0        ; 0
                                             366 * ***   }
00000196                                     367 @ret_lab_338 DS 0H
                                             368 * * **** Start of Epilogue
                                             369          DCCEPIL
00000196                                     370+         ds 0h                                                          01-DCCEP
                                             371+* Epilog
00000196 D707 D088 D088 00000088 00000088    372+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000019C E3D0 D080 0004          00000080    373+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000001A2 E3C0 D090 0004          00000090    374+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000001A8 E3B0 C018 0004          00000018    375+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000001AE E3C0 B010 0021          00000010    376+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000001B4 E3E0 D008 0004          00000008    377+         lg  14,8(0,13)          load up return address                 01-DCCEP
000001BA EB1C D020 0004          00000020    378+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000001C0 078E                                379+         bcr 8,14                if same dsab, just return              01-DCCEP
000001C2 E3F0 D010 0024          00000010    380+         stg 15,16(0,13)         save return code                       01-DCCEP
000001C8 E300 D018 0024          00000018    381+         stg 0,24(0,13)          save more return code                  01-DCCEP
000001CE E3F0 D090 0004          00000090    382+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000001D4 E3F0 F018 0004          00000018    383+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000001DA 47F0 F040               00000040    384+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             385+* End of Epilog
                                             386 * * **** End of Epilogue
                                             387          DROP  12
                                             388 *
                                             389 *   DSECT for automatic variables in "ebcdic_2_utf8"
                                             390 *      (FUNCTION #338)
                                             391 *
00000000                00000000 000000A9    392 @AUTO#ebcdic_2_utf8 DSECT
00000000                                     393          DS    XL168
000000A8                                     394 ebcdic_2_utf8#c#0 DS 1CL1  ; c
                                             395 *
000001DE                00000000 00014658    396 @CODE    CSECT
                                             397 *
                                             398 *
                                             399 *
                                             400 * ....... start of utf8_2_ebcdic
000001DE                                     401 @LNAME339 DS   0H
000001DE 0000000D                            402          DC    X'0000000D'
000001E2 A4A386F86DF26D85                    403          DC    C'utf8_2_ebcdic'
000001EF 00                                  404          DC    X'00'
                                             405 utf8_2_ebcdic DCCPRLG CINDEX=339,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME339
                                             406          macro
                                             407          dccextrn &m
                                             408          gblc    &$dccext(1000)
                                             409          gbla    &$dccexti
                                             410          lcla    &i
                                             411 &$dccext(&$dccexti+1) setc    '&m'
                                             412 &i       seta    1
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             413 .loop    aif    (&i gt &$dccexti).around
                                             414          aif    ('&$dccext(&i)' eq '&m').getout
                                             415 &i       seta    &i+1
                                             416          ago     .loop
                                             417 .around  anop
                                             418 &$dccexti seta &$dccexti+1
                                             419          extrn  &m
                                             420 .getout  anop
                                             421          mend
000001F0                                     422+$eye0006    ds    0d                                                    02-DCCCA
000001F0 C4C3C3                              423+         dc cl3'DCC'                                                    02-DCCCA
000001F3 01                                  424+         dc xl1'01' format one                                          02-DCCCA
000001F4 00000000                            425+         dc a(0)                                                        02-DCCCA
000001F8 0000000000000262                    426+         dc ad(@PER_339)                                                02-DCCCA
00000200 00000000000000B0                    427+         dc ad(176)                                                     02-DCCCA
00000208 0000000000000000                    428+         dc ad(0)                                                       02-DCCCA
00000210 0000000000001000                    429+         dc ad(4096)                                                    02-DCCCA
00000218 20                                  430+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000219 03                                  431+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000021A 03                                  432+         dc al1(3)                                                      02-DCCCA
0000021B 08                                  433+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000021C 00                                  434+         dc bl.8'00000000'                                              02-DCCCA
0000021D 000000                              435+         dc al3(0)                                                      02-DCCCA
00000220 00000000000001DE                    436+         dc ad(@LNAME339)                                               02-DCCCA
00000228                                     437+         ds 0d                                                          02-DCCCA
00000228 00000000000001F0                    438+         dc ad($eye0006)                                                02-DCCCA
00000230 0000000000000000                    439+         dc ad(0)                                                       02-DCCCA
00000238                                     440+         ds    0d                                                       01-DCCPR
00000238                                     441+utf8_2_ebcdic ds 0d                                                     01-DCCPR
00000238                                     442+@REGION_339_1 ds 0h                                                     01-DCCPR
00000238 EBEC D008 0024          00000008    443+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000023E E3E0 D088 0004          00000088    444+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000244 E3C0 D090 0004          00000090    445+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000024A B904 002E                           446+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000024E E3B0 C018 0004          00000018    447+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000254 A7EB 00B0               000000B0    448+         aghi  14,176              increase by frame size               01-DCCPR
00000258 E3E0 C020 0021          00000020    449+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000025E 4720 B020               00000020    450+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000262                                     451+@PER_339 ds    0h                                                       01-DCCPR
00000262 EBDE 2080 0024          00000080    452+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000268 E3C0 2090 0024          00000090    453+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000026E B904 00D2                           454+         lgr   13,2                set real frame pointer               01-DCCPR
00000272 B904 00CF                           455+         lgr   12,15               set base reg                         01-DCCPR
                        00000238             456+         using @REGION_339_1,12                                         01-DCCPR
                                             457          DCCPRV REG=9      ; Get PRV from DVT
00000276 E390 B008 0004          00000008    458+         LG 9,8(0,11)                                                   01-DCCPR
0000027C B904 0031                           459          LGR   3,1         ; ptr to parm area
                                             460 * ******* End of Prologue
                                             461 * *
                                             462 * ***       const unsigned char* outstart = out;
00000280 E3F0 3008 0004          00000008    463          LG    15,8(0,3)   ; outlen
00000286 E340 3010 0004          00000010    464          LG    4,16(0,3)   ; in
                                                                                                                           Page   18 
  Active Usings: @REGION_339_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000028C B904 0014                           465          LGR   1,4
00000290 E320 3018 0004          00000018    466          LG    2,24(0,3)   ; inlen
00000296 E330 3000 0004          00000000    467          LG    3,0(0,3)    ; out
0000029C B904 0083                           468          LGR   8,3
                                             469 * ***       const unsigned char* base = in;
                                             470 * ***       const unsigned char* processed = in;
000002A0 B904 0054                           471          LGR   5,4         ; processed
                                             472 * ***       const unsigned char* inend = in + (*inlen);
000002A4 E360 2000 0004          00000000    473          LG    6,0(0,2)    ; inlen
000002AA 4166 4000               00000000    474          LA    6,0(6,4)
                                             475 * ***       const unsigned char* outend = out + (*outlen);
000002AE E370 F000 0004          00000000    476          LG    7,0(0,15)   ; outlen
000002B4 4177 3000               00000000    477          LA    7,0(7,3)
                                             478 * ***       unsigned char c;
                                             479 * ***
                                             480 * ***       while ((in < inend) && ((out - outstart) < *outlen)) {
000002B8 47F0 C104               0000033C    481          B     @L13
000002C0                                     482          DS    0D
000002C0 000000B0                            483 @FRAMESIZE_339 DC F'176'
000002C4 00000000
000002C8 00000000000000FF                    484 @lit_339_7 DC  FD'255' 0x00000000000000ff
000002D0 00000000                            485 @lit_339_6 DC  Q(@@STATIC)
000002D4                                     486 @L12     DS    0H
                                             487 * ***           c = *in++;
000002D4 B904 00A1                           488          LGR   10,1
000002D8 4110 1001               00000001    489          LA    1,1(0,1)
000002DC 43A0 A000               00000000    490          IC    10,0(0,10)
000002E0 42A0 D0A8               000000A8    491          STC   10,168(0,13) ; c
                                             492 * ***           if (c > 0xFF)
000002E4 18BA                                493          LR    11,10
000002E6 C0BB 0000 00FF                      494          NILF  11,X'000000FF'
000002EC A7BE 00FF               000000FF    495          CHI   11,255
000002F0 47D0 C0D8               00000310    496          BNH   @L15
                                             497 * ***           {
                                             498 * ***               *outlen = out - outstart;
000002F4 B909 0083                           499          SGR   8,3
000002F8 E380 F000 0024          00000000    500          STG   8,0(0,15)   ; outlen
                                             501 * ***               *inlen = processed - base;
000002FE B909 0054                           502          SGR   5,4
00000302 E350 2000 0024          00000000    503          STG   5,0(0,2)    ; inlen
                                             504 * ***               return(-1);
00000308 A7F9 FFFF               0000FFFF    505          LGHI  15,-1       ; -1
0000030C 47F0 C136               0000036E    506          B     @ret_lab_339
                                             507 * ***           }
00000310                                     508 @L15     DS    0H
                                             509 * ***
                                             510 * ***           if (out >= outend)
00000310 B920 0087                           511          CGR   8,7
00000314 47B0 C11E               00000356    512          BNL   @L10
                                             513 * ***               break;
00000318                                     514 @L16     DS    0H
                                             515 * ***
                                                                                                                           Page   19 
  Active Usings: @REGION_339_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             516 * ***           *out++ = U2E[c];
00000318 B904 0058                           517          LGR   5,8
0000031C 4180 8001               00000001    518          LA    8,1(0,8)
00000320 E3B0 C098 0014          000002D0    519          LGF   11,@lit_339_6
00000326 41BB 9000               00000000    520          LA    11,0(11,9)
0000032A E3A0 C090 0080          000002C8    521          NG    10,@lit_339_7
00000330 43AA B100               00000100    522          IC    10,256(10,11)
00000334 42A0 5000               00000000    523          STC   10,0(0,5)
                                             524 * ***           processed = (unsigned char*)in;
00000338 B904 0051                           525          LGR   5,1         ; processed
                                             526 * ***       }
0000033C                                     527 @L13     DS    0H
0000033C B920 0016                           528          CGR   1,6
00000340 47B0 C11E               00000356    529          BNL   @L10
00000344 B904 00A8                           530          LGR   10,8
00000348 B909 00A3                           531          SGR   10,3
0000034C E3A0 F000 0021          00000000    532          CLG   10,0(0,15)
00000352 4740 C09C               000002D4    533          BL    @L12
00000356                                     534 @L10     DS    0H
                                             535 * ***
                                             536 * ***       *outlen = out - outstart;
00000356 B909 0083                           537          SGR   8,3
0000035A E380 F000 0024          00000000    538          STG   8,0(0,15)   ; outlen
                                             539 * ***       *inlen = processed - base;
00000360 B909 0054                           540          SGR   5,4
00000364 E350 2000 0024          00000000    541          STG   5,0(0,2)    ; inlen
                                             542 * ***       return(0);
0000036A A7F9 0000               00000000    543          LGHI  15,0        ; 0
                                             544 * ***   }
0000036E                                     545 @ret_lab_339 DS 0H
                                             546 * * **** Start of Epilogue
                                             547          DCCEPIL
0000036E                                     548+         ds 0h                                                          01-DCCEP
                                             549+* Epilog
0000036E D707 D088 D088 00000088 00000088    550+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000374 E3D0 D080 0004          00000080    551+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000037A E3C0 D090 0004          00000090    552+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000380 E3B0 C018 0004          00000018    553+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000386 E3C0 B010 0021          00000010    554+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000038C E3E0 D008 0004          00000008    555+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000392 EB1C D020 0004          00000020    556+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000398 078E                                557+         bcr 8,14                if same dsab, just return              01-DCCEP
0000039A E3F0 D010 0024          00000010    558+         stg 15,16(0,13)         save return code                       01-DCCEP
000003A0 E300 D018 0024          00000018    559+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003A6 E3F0 D090 0004          00000090    560+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003AC E3F0 F018 0004          00000018    561+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003B2 47F0 F040               00000040    562+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             563+* End of Epilog
                                             564 * * **** End of Epilogue
                                             565          DROP  12
                                             566 *
                                             567 *   DSECT for automatic variables in "utf8_2_ebcdic"
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             568 *      (FUNCTION #339)
                                             569 *
00000000                00000000 000000A9    570 @AUTO#utf8_2_ebcdic DSECT
00000000                                     571          DS    XL168
000000A8                                     572 utf8_2_ebcdic#c#0 DS 1CL1  ; c
                                             573 *
000003B6                00000000 00014658    574 @CODE    CSECT
                                             575 *
                                             576 *
                                             577 *
                                             578 * ....... start of rd_atomic32_init
000003B6                                     579 @LNAME732 DS   0H
000003B6 00000010                            580          DC    X'00000010'
000003BA 99846D81A3969489                    581          DC    C'rd_atomic32_init'
000003CA 00                                  582          DC    X'00'
                                             583 rd_atomic32_init DCCPRLG CINDEX=732,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME732
                                             584          macro
                                             585          dccextrn &m
                                             586          gblc    &$dccext(1000)
                                             587          gbla    &$dccexti
                                             588          lcla    &i
                                             589 &$dccext(&$dccexti+1) setc    '&m'
                                             590 &i       seta    1
                                             591 .loop    aif    (&i gt &$dccexti).around
                                             592          aif    ('&$dccext(&i)' eq '&m').getout
                                             593 &i       seta    &i+1
                                             594          ago     .loop
                                             595 .around  anop
                                             596 &$dccexti seta &$dccexti+1
                                             597          extrn  &m
                                             598 .getout  anop
                                             599          mend
000003D0                                     600+$eye0010    ds    0d                                                    02-DCCCA
000003D0 C4C3C3                              601+         dc cl3'DCC'                                                    02-DCCCA
000003D3 01                                  602+         dc xl1'01' format one                                          02-DCCCA
000003D4 00000000                            603+         dc a(0)                                                        02-DCCCA
000003D8 0000000000000442                    604+         dc ad(@PER_732)                                                02-DCCCA
000003E0 00000000000000B8                    605+         dc ad(184)                                                     02-DCCCA
000003E8 0000000000000000                    606+         dc ad(0)                                                       02-DCCCA
000003F0 0000000000001000                    607+         dc ad(4096)                                                    02-DCCCA
000003F8 20                                  608+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000003F9 03                                  609+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000003FA 03                                  610+         dc al1(3)                                                      02-DCCCA
000003FB 08                                  611+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000003FC 00                                  612+         dc bl.8'00000000'                                              02-DCCCA
000003FD 000000                              613+         dc al3(0)                                                      02-DCCCA
00000400 00000000000003B6                    614+         dc ad(@LNAME732)                                               02-DCCCA
00000408                                     615+         ds 0d                                                          02-DCCCA
00000408 00000000000003D0                    616+         dc ad($eye0010)                                                02-DCCCA
00000410 0000000000000000                    617+         dc ad(0)                                                       02-DCCCA
00000418                                     618+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000418                                     619+rd_atomic32_init ds 0d                                                  01-DCCPR
00000418                                     620+@REGION_732_1 ds 0h                                                     01-DCCPR
00000418 EBEC D008 0024          00000008    621+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000041E E3E0 D088 0004          00000088    622+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000424 E3C0 D090 0004          00000090    623+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000042A B904 002E                           624+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000042E E3B0 C018 0004          00000018    625+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000434 A7EB 00B8               000000B8    626+         aghi  14,184              increase by frame size               01-DCCPR
00000438 E3E0 C020 0021          00000020    627+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000043E 4720 B020               00000020    628+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000442                                     629+@PER_732 ds    0h                                                       01-DCCPR
00000442 EBDE 2080 0024          00000080    630+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000448 E3C0 2090 0024          00000090    631+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000044E B904 00D2                           632+         lgr   13,2                set real frame pointer               01-DCCPR
00000452 B904 00CF                           633+         lgr   12,15               set base reg                         01-DCCPR
                        00000418             634+         using @REGION_732_1,12                                         01-DCCPR
                                             635 * ******* End of Prologue
                                             636 * *
                                             637 * ***      ra->val = v;
00000456 E3F0 1000 0004          00000000    638          LG    15,0(0,1)   ; ra
0000045C 5810 100C               0000000C    639          L     1,12(0,1)   ; v
00000460 5010 F000               00000000    640          ST    1,0(0,15)   ; ra
                                             641 * ***
                                             642 * ***      pthread_mutex_init(&ra->lock, 0);
00000464 41F0 F008               00000008    643          LA    15,8(0,15)
00000468 E3F0 D0A8 0024          000000A8    644          STG   15,168(0,13)
0000046E D707 D0B0 D0B0 000000B0 000000B0    645          XC    176(8,13),176(13)
00000474 4110 D0A8               000000A8    646          LA    1,168(0,13)
00000478 E3F0 C0B8 0004          000004D0    647          LG    15,@lit_732_10 ; pthread_mutex_init
0000047E                                     648 @@gen_label8 DS    0H
0000047E 05EF                                649          BALR  14,15
00000480                                     650 @@gen_label9 DS    0H
                                             651 * ***   # 79 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             652 * ***   }
00000480                                     653 @ret_lab_732 DS 0H
                                             654 * * **** Start of Epilogue
                                             655          DCCEPIL
00000480                                     656+         ds 0h                                                          01-DCCEP
                                             657+* Epilog
00000480 D707 D088 D088 00000088 00000088    658+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000486 E3D0 D080 0004          00000080    659+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000048C E3C0 D090 0004          00000090    660+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000492 E3B0 C018 0004          00000018    661+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000498 E3C0 B010 0021          00000010    662+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000049E E3E0 D008 0004          00000008    663+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004A4 EB1C D020 0004          00000020    664+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004AA 078E                                665+         bcr 8,14                if same dsab, just return              01-DCCEP
000004AC E3F0 D010 0024          00000010    666+         stg 15,16(0,13)         save return code                       01-DCCEP
000004B2 E300 D018 0024          00000018    667+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004B8 E3F0 D090 0004          00000090    668+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000004BE E3F0 F018 0004          00000018    669+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004C4 47F0 F040               00000040    670+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   22 
  Active Usings: @REGION_732_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             671+* End of Epilog
                                             672 * * **** End of Epilogue
000004C8                                     673          DS    0D
000004C8 000000B8                            674 @FRAMESIZE_732 DC F'184'
000004CC 00000000
000004D0 0000000000000000                    675 @lit_732_10 DC AD(pthread_mutex_init)
                                             676          DROP  12
                                             677 *
                                             678 *   DSECT for automatic variables in "rd_atomic32_init"
                                             679 *      (FUNCTION #732)
                                             680 *
00000000                00000000 000000A8    681 @AUTO#rd_atomic32_init DSECT
00000000                                     682          DS    XL168
                                             683 *
000004D8                00000000 00014658    684 @CODE    CSECT
                                             685 *
                                             686 *
                                             687 *
                                             688 * ....... start of rd_atomic32_add
000004D8                                     689 @LNAME733 DS   0H
000004D8 0000000F                            690          DC    X'0000000F'
000004DC 99846D81A3969489                    691          DC    C'rd_atomic32_add'
000004EB 00                                  692          DC    X'00'
                                             693 rd_atomic32_add DCCPRLG CINDEX=733,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME733
                                             694          macro
                                             695          dccextrn &m
                                             696          gblc    &$dccext(1000)
                                             697          gbla    &$dccexti
                                             698          lcla    &i
                                             699 &$dccext(&$dccexti+1) setc    '&m'
                                             700 &i       seta    1
                                             701 .loop    aif    (&i gt &$dccexti).around
                                             702          aif    ('&$dccext(&i)' eq '&m').getout
                                             703 &i       seta    &i+1
                                             704          ago     .loop
                                             705 .around  anop
                                             706 &$dccexti seta &$dccexti+1
                                             707          extrn  &m
                                             708 .getout  anop
                                             709          mend
000004F0                                     710+$eye0013    ds    0d                                                    02-DCCCA
000004F0 C4C3C3                              711+         dc cl3'DCC'                                                    02-DCCCA
000004F3 01                                  712+         dc xl1'01' format one                                          02-DCCCA
000004F4 00000000                            713+         dc a(0)                                                        02-DCCCA
000004F8 0000000000000562                    714+         dc ad(@PER_733)                                                02-DCCCA
00000500 00000000000000B8                    715+         dc ad(184)                                                     02-DCCCA
00000508 0000000000000000                    716+         dc ad(0)                                                       02-DCCCA
00000510 0000000000001000                    717+         dc ad(4096)                                                    02-DCCCA
00000518 20                                  718+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000519 03                                  719+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000051A 03                                  720+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000051B 08                                  721+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000051C 00                                  722+         dc bl.8'00000000'                                              02-DCCCA
0000051D 000000                              723+         dc al3(0)                                                      02-DCCCA
00000520 00000000000004D8                    724+         dc ad(@LNAME733)                                               02-DCCCA
00000528                                     725+         ds 0d                                                          02-DCCCA
00000528 00000000000004F0                    726+         dc ad($eye0013)                                                02-DCCCA
00000530 0000000000000000                    727+         dc ad(0)                                                       02-DCCCA
00000538                                     728+         ds    0d                                                       01-DCCPR
00000538                                     729+rd_atomic32_add ds 0d                                                   01-DCCPR
00000538                                     730+@REGION_733_1 ds 0h                                                     01-DCCPR
00000538 EBEC D008 0024          00000008    731+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000053E E3E0 D088 0004          00000088    732+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000544 E3C0 D090 0004          00000090    733+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000054A B904 002E                           734+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000054E E3B0 C018 0004          00000018    735+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000554 A7EB 00B8               000000B8    736+         aghi  14,184              increase by frame size               01-DCCPR
00000558 E3E0 C020 0021          00000020    737+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000055E 4720 B020               00000020    738+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000562                                     739+@PER_733 ds    0h                                                       01-DCCPR
00000562 EBDE 2080 0024          00000080    740+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000568 E3C0 2090 0024          00000090    741+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000056E B904 00D2                           742+         lgr   13,2                set real frame pointer               01-DCCPR
00000572 B904 00CF                           743+         lgr   12,15               set base reg                         01-DCCPR
                        00000538             744+         using @REGION_733_1,12                                         01-DCCPR
00000576 B904 0031                           745          LGR   3,1         ; ptr to parm area
                                             746 * ******* End of Prologue
                                             747 * *
0000057A E320 3000 0004          00000000    748          LG    2,0(0,3)    ; ra
                                             749 * ***
                                             750 * ***      int32_t r;
                                             751 * ***      pthread_mutex_lock(&ra->lock);
00000580 41F0 2008               00000008    752          LA    15,8(0,2)
00000584 E3F0 D0B0 0024          000000B0    753          STG   15,176(0,13)
0000058A 4110 D0B0               000000B0    754          LA    1,176(0,13)
0000058E E3F0 C0D8 0004          00000610    755          LG    15,@lit_733_12 ; pthread_mutex_lock
00000594                                     756 @@gen_label10 DS    0H
00000594 05EF                                757          BALR  14,15
00000596                                     758 @@gen_label11 DS    0H
                                             759 * ***      ra->val += v;
00000596 58F0 2000               00000000    760          L     15,0(0,2)
0000059A 5AF0 300C               0000000C    761          A     15,12(0,3)
0000059E 50F0 2000               00000000    762          ST    15,0(0,2)
                                             763 * ***      r = ra->val;
000005A2 183F                                764          LR    3,15        ; ra
                                             765 * ***      pthread_mutex_unlock(&ra->lock);
000005A4 41F0 2008               00000008    766          LA    15,8(0,2)
000005A8 E3F0 D0B0 0024          000000B0    767          STG   15,176(0,13)
000005AE 4110 D0B0               000000B0    768          LA    1,176(0,13)
000005B2 E3F0 C0E0 0004          00000618    769          LG    15,@lit_733_13 ; pthread_mutex_unlock
000005B8                                     770 @@gen_label12 DS    0H
000005B8 05EF                                771          BALR  14,15
000005BA                                     772 @@gen_label13 DS    0H
                                                                                                                           Page   24 
  Active Usings: @REGION_733_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             773 * ***      return r;
000005BA B914 00F3                           774          LGFR  15,3
                                             775 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             776 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             777 * ***
                                             778 * ***   }
                                             779 * * **** Start of Epilogue
                                             780          DCCEPIL
000005BE                                     781+         ds 0h                                                          01-DCCEP
                                             782+* Epilog
000005BE D707 D088 D088 00000088 00000088    783+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000005C4 E3D0 D080 0004          00000080    784+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000005CA E3C0 D090 0004          00000090    785+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000005D0 E3B0 C018 0004          00000018    786+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000005D6 E3C0 B010 0021          00000010    787+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000005DC E3E0 D008 0004          00000008    788+         lg  14,8(0,13)          load up return address                 01-DCCEP
000005E2 EB1C D020 0004          00000020    789+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000005E8 078E                                790+         bcr 8,14                if same dsab, just return              01-DCCEP
000005EA E3F0 D010 0024          00000010    791+         stg 15,16(0,13)         save return code                       01-DCCEP
000005F0 E300 D018 0024          00000018    792+         stg 0,24(0,13)          save more return code                  01-DCCEP
000005F6 E3F0 D090 0004          00000090    793+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000005FC E3F0 F018 0004          00000018    794+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000602 47F0 F040               00000040    795+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             796+* End of Epilog
                                             797 * * **** End of Epilogue
00000608                                     798          DS    0D
00000608 000000B8                            799 @FRAMESIZE_733 DC F'184'
0000060C 00000000
00000610 0000000000000000                    800 @lit_733_12 DC AD(pthread_mutex_lock)
00000618 0000000000000000                    801 @lit_733_13 DC AD(pthread_mutex_unlock)
                                             802          DROP  12
                                             803 *
                                             804 *   DSECT for automatic variables in "rd_atomic32_add"
                                             805 *      (FUNCTION #733)
                                             806 *
00000000                00000000 000000AC    807 @AUTO#rd_atomic32_add DSECT
00000000                                     808          DS    XL168
000000A8                                     809 rd_atomic32_add#r#0 DS 1F  ; r
                                             810 *
00000620                00000000 00014658    811 @CODE    CSECT
                                             812 *
                                             813 *
                                             814 *
                                             815 * ....... start of rd_atomic32_sub
00000620                                     816 @LNAME734 DS   0H
00000620 0000000F                            817          DC    X'0000000F'
00000624 99846D81A3969489                    818          DC    C'rd_atomic32_sub'
00000633 00                                  819          DC    X'00'
                                             820 rd_atomic32_sub DCCPRLG CINDEX=734,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME734
                                             821          macro
                                             822          dccextrn &m
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             823          gblc    &$dccext(1000)
                                             824          gbla    &$dccexti
                                             825          lcla    &i
                                             826 &$dccext(&$dccexti+1) setc    '&m'
                                             827 &i       seta    1
                                             828 .loop    aif    (&i gt &$dccexti).around
                                             829          aif    ('&$dccext(&i)' eq '&m').getout
                                             830 &i       seta    &i+1
                                             831          ago     .loop
                                             832 .around  anop
                                             833 &$dccexti seta &$dccexti+1
                                             834          extrn  &m
                                             835 .getout  anop
                                             836          mend
00000638                                     837+$eye0016    ds    0d                                                    02-DCCCA
00000638 C4C3C3                              838+         dc cl3'DCC'                                                    02-DCCCA
0000063B 01                                  839+         dc xl1'01' format one                                          02-DCCCA
0000063C 00000000                            840+         dc a(0)                                                        02-DCCCA
00000640 00000000000006AA                    841+         dc ad(@PER_734)                                                02-DCCCA
00000648 00000000000000B8                    842+         dc ad(184)                                                     02-DCCCA
00000650 0000000000000000                    843+         dc ad(0)                                                       02-DCCCA
00000658 0000000000001000                    844+         dc ad(4096)                                                    02-DCCCA
00000660 20                                  845+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000661 03                                  846+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000662 03                                  847+         dc al1(3)                                                      02-DCCCA
00000663 08                                  848+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000664 00                                  849+         dc bl.8'00000000'                                              02-DCCCA
00000665 000000                              850+         dc al3(0)                                                      02-DCCCA
00000668 0000000000000620                    851+         dc ad(@LNAME734)                                               02-DCCCA
00000670                                     852+         ds 0d                                                          02-DCCCA
00000670 0000000000000638                    853+         dc ad($eye0016)                                                02-DCCCA
00000678 0000000000000000                    854+         dc ad(0)                                                       02-DCCCA
00000680                                     855+         ds    0d                                                       01-DCCPR
00000680                                     856+rd_atomic32_sub ds 0d                                                   01-DCCPR
00000680                                     857+@REGION_734_1 ds 0h                                                     01-DCCPR
00000680 EBEC D008 0024          00000008    858+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000686 E3E0 D088 0004          00000088    859+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000068C E3C0 D090 0004          00000090    860+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000692 B904 002E                           861+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000696 E3B0 C018 0004          00000018    862+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000069C A7EB 00B8               000000B8    863+         aghi  14,184              increase by frame size               01-DCCPR
000006A0 E3E0 C020 0021          00000020    864+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000006A6 4720 B020               00000020    865+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000006AA                                     866+@PER_734 ds    0h                                                       01-DCCPR
000006AA EBDE 2080 0024          00000080    867+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000006B0 E3C0 2090 0024          00000090    868+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000006B6 B904 00D2                           869+         lgr   13,2                set real frame pointer               01-DCCPR
000006BA B904 00CF                           870+         lgr   12,15               set base reg                         01-DCCPR
                        00000680             871+         using @REGION_734_1,12                                         01-DCCPR
000006BE B904 0031                           872          LGR   3,1         ; ptr to parm area
                                             873 * ******* End of Prologue
                                             874 * *
                                                                                                                           Page   26 
  Active Usings: @REGION_734_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000006C2 E320 3000 0004          00000000    875          LG    2,0(0,3)    ; ra
                                             876 * ***
                                             877 * ***      int32_t r;
                                             878 * ***      pthread_mutex_lock(&ra->lock);
000006C8 41F0 2008               00000008    879          LA    15,8(0,2)
000006CC E3F0 D0B0 0024          000000B0    880          STG   15,176(0,13)
000006D2 4110 D0B0               000000B0    881          LA    1,176(0,13)
000006D6 E3F0 C0D8 0004          00000758    882          LG    15,@lit_734_15 ; pthread_mutex_lock
000006DC                                     883 @@gen_label14 DS    0H
000006DC 05EF                                884          BALR  14,15
000006DE                                     885 @@gen_label15 DS    0H
                                             886 * ***      ra->val -= v;
000006DE 58F0 2000               00000000    887          L     15,0(0,2)
000006E2 5BF0 300C               0000000C    888          S     15,12(0,3)
000006E6 50F0 2000               00000000    889          ST    15,0(0,2)
                                             890 * ***      r = ra->val;
000006EA 183F                                891          LR    3,15        ; ra
                                             892 * ***      pthread_mutex_unlock(&ra->lock);
000006EC 41F0 2008               00000008    893          LA    15,8(0,2)
000006F0 E3F0 D0B0 0024          000000B0    894          STG   15,176(0,13)
000006F6 4110 D0B0               000000B0    895          LA    1,176(0,13)
000006FA E3F0 C0E0 0004          00000760    896          LG    15,@lit_734_16 ; pthread_mutex_unlock
00000700                                     897 @@gen_label16 DS    0H
00000700 05EF                                898          BALR  14,15
00000702                                     899 @@gen_label17 DS    0H
                                             900 * ***      return r;
00000702 B914 00F3                           901          LGFR  15,3
                                             902 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             903 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             904 * ***
                                             905 * ***   }
                                             906 * * **** Start of Epilogue
                                             907          DCCEPIL
00000706                                     908+         ds 0h                                                          01-DCCEP
                                             909+* Epilog
00000706 D707 D088 D088 00000088 00000088    910+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000070C E3D0 D080 0004          00000080    911+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000712 E3C0 D090 0004          00000090    912+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000718 E3B0 C018 0004          00000018    913+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000071E E3C0 B010 0021          00000010    914+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000724 E3E0 D008 0004          00000008    915+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000072A EB1C D020 0004          00000020    916+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000730 078E                                917+         bcr 8,14                if same dsab, just return              01-DCCEP
00000732 E3F0 D010 0024          00000010    918+         stg 15,16(0,13)         save return code                       01-DCCEP
00000738 E300 D018 0024          00000018    919+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000073E E3F0 D090 0004          00000090    920+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000744 E3F0 F018 0004          00000018    921+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000074A 47F0 F040               00000040    922+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             923+* End of Epilog
                                             924 * * **** End of Epilogue
00000750                                     925          DS    0D
00000750 000000B8                            926 @FRAMESIZE_734 DC F'184'
                                                                                                                           Page   27 
  Active Usings: @REGION_734_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000754 00000000
00000758 0000000000000000                    927 @lit_734_15 DC AD(pthread_mutex_lock)
00000760 0000000000000000                    928 @lit_734_16 DC AD(pthread_mutex_unlock)
                                             929          DROP  12
                                             930 *
                                             931 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             932 *      (FUNCTION #734)
                                             933 *
00000000                00000000 000000AC    934 @AUTO#rd_atomic32_sub DSECT
00000000                                     935          DS    XL168
000000A8                                     936 rd_atomic32_sub#r#0 DS 1F  ; r
                                             937 *
00000768                00000000 00014658    938 @CODE    CSECT
                                             939 *
                                             940 *
                                             941 *
                                             942 * ....... start of rd_atomic32_set
00000768                                     943 @LNAME736 DS   0H
00000768 0000000F                            944          DC    X'0000000F'
0000076C 99846D81A3969489                    945          DC    C'rd_atomic32_set'
0000077B 00                                  946          DC    X'00'
                                             947 rd_atomic32_set DCCPRLG CINDEX=736,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME736
                                             948          macro
                                             949          dccextrn &m
                                             950          gblc    &$dccext(1000)
                                             951          gbla    &$dccexti
                                             952          lcla    &i
                                             953 &$dccext(&$dccexti+1) setc    '&m'
                                             954 &i       seta    1
                                             955 .loop    aif    (&i gt &$dccexti).around
                                             956          aif    ('&$dccext(&i)' eq '&m').getout
                                             957 &i       seta    &i+1
                                             958          ago     .loop
                                             959 .around  anop
                                             960 &$dccexti seta &$dccexti+1
                                             961          extrn  &m
                                             962 .getout  anop
                                             963          mend
00000780                                     964+$eye0019    ds    0d                                                    02-DCCCA
00000780 C4C3C3                              965+         dc cl3'DCC'                                                    02-DCCCA
00000783 01                                  966+         dc xl1'01' format one                                          02-DCCCA
00000784 00000000                            967+         dc a(0)                                                        02-DCCCA
00000788 00000000000007F2                    968+         dc ad(@PER_736)                                                02-DCCCA
00000790 00000000000000B8                    969+         dc ad(184)                                                     02-DCCCA
00000798 0000000000000000                    970+         dc ad(0)                                                       02-DCCCA
000007A0 0000000000001000                    971+         dc ad(4096)                                                    02-DCCCA
000007A8 20                                  972+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007A9 03                                  973+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007AA 03                                  974+         dc al1(3)                                                      02-DCCCA
000007AB 08                                  975+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007AC 00                                  976+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000007AD 000000                              977+         dc al3(0)                                                      02-DCCCA
000007B0 0000000000000768                    978+         dc ad(@LNAME736)                                               02-DCCCA
000007B8                                     979+         ds 0d                                                          02-DCCCA
000007B8 0000000000000780                    980+         dc ad($eye0019)                                                02-DCCCA
000007C0 0000000000000000                    981+         dc ad(0)                                                       02-DCCCA
000007C8                                     982+         ds    0d                                                       01-DCCPR
000007C8                                     983+rd_atomic32_set ds 0d                                                   01-DCCPR
000007C8                                     984+@REGION_736_1 ds 0h                                                     01-DCCPR
000007C8 EBEC D008 0024          00000008    985+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000007CE E3E0 D088 0004          00000088    986+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000007D4 E3C0 D090 0004          00000090    987+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000007DA B904 002E                           988+         lgr   2,14                copy addr of our savearea            01-DCCPR
000007DE E3B0 C018 0004          00000018    989+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000007E4 A7EB 00B8               000000B8    990+         aghi  14,184              increase by frame size               01-DCCPR
000007E8 E3E0 C020 0021          00000020    991+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000007EE 4720 B020               00000020    992+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000007F2                                     993+@PER_736 ds    0h                                                       01-DCCPR
000007F2 EBDE 2080 0024          00000080    994+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000007F8 E3C0 2090 0024          00000090    995+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000007FE B904 00D2                           996+         lgr   13,2                set real frame pointer               01-DCCPR
00000802 B904 00CF                           997+         lgr   12,15               set base reg                         01-DCCPR
                        000007C8             998+         using @REGION_736_1,12                                         01-DCCPR
00000806 B904 0031                           999          LGR   3,1         ; ptr to parm area
                                            1000 * ******* End of Prologue
                                            1001 * *
0000080A E320 3000 0004          00000000   1002          LG    2,0(0,3)    ; ra
                                            1003 * ***
                                            1004 * ***      int32_t r;
                                            1005 * ***      pthread_mutex_lock(&ra->lock);
00000810 41F0 2008               00000008   1006          LA    15,8(0,2)
00000814 E3F0 D0B0 0024          000000B0   1007          STG   15,176(0,13)
0000081A 4110 D0B0               000000B0   1008          LA    1,176(0,13)
0000081E E3F0 C0D0 0004          00000898   1009          LG    15,@lit_736_18 ; pthread_mutex_lock
00000824                                    1010 @@gen_label18 DS    0H
00000824 05EF                               1011          BALR  14,15
00000826                                    1012 @@gen_label19 DS    0H
                                            1013 * ***      r = ra->val = v;
00000826 5830 300C               0000000C   1014          L     3,12(0,3)   ; v
0000082A 5030 2000               00000000   1015          ST    3,0(0,2)
                                            1016 * ***      pthread_mutex_unlock(&ra->lock);
0000082E 41F0 2008               00000008   1017          LA    15,8(0,2)
00000832 E3F0 D0B0 0024          000000B0   1018          STG   15,176(0,13)
00000838 4110 D0B0               000000B0   1019          LA    1,176(0,13)
0000083C E3F0 C0D8 0004          000008A0   1020          LG    15,@lit_736_19 ; pthread_mutex_unlock
00000842                                    1021 @@gen_label20 DS    0H
00000842 05EF                               1022          BALR  14,15
00000844                                    1023 @@gen_label21 DS    0H
                                            1024 * ***      return r;
00000844 B914 00F3                          1025          LGFR  15,3
                                            1026 * ***   # 178 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                            1027 * ***           __atomic_store_n(&ra->val, v, 6);
                                            1028 * ***           return v;
                                                                                                                           Page   29 
  Active Usings: @REGION_736_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1029 * ***   # 186 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                            1030 * ***   }
                                            1031 * * **** Start of Epilogue
                                            1032          DCCEPIL
00000848                                    1033+         ds 0h                                                          01-DCCEP
                                            1034+* Epilog
00000848 D707 D088 D088 00000088 00000088   1035+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000084E E3D0 D080 0004          00000080   1036+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000854 E3C0 D090 0004          00000090   1037+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000085A E3B0 C018 0004          00000018   1038+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000860 E3C0 B010 0021          00000010   1039+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000866 E3E0 D008 0004          00000008   1040+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000086C EB1C D020 0004          00000020   1041+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000872 078E                               1042+         bcr 8,14                if same dsab, just return              01-DCCEP
00000874 E3F0 D010 0024          00000010   1043+         stg 15,16(0,13)         save return code                       01-DCCEP
0000087A E300 D018 0024          00000018   1044+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000880 E3F0 D090 0004          00000090   1045+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000886 E3F0 F018 0004          00000018   1046+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000088C 47F0 F040               00000040   1047+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1048+* End of Epilog
                                            1049 * * **** End of Epilogue
00000890                                    1050          DS    0D
00000890 000000B8                           1051 @FRAMESIZE_736 DC F'184'
00000894 00000000
00000898 0000000000000000                   1052 @lit_736_18 DC AD(pthread_mutex_lock)
000008A0 0000000000000000                   1053 @lit_736_19 DC AD(pthread_mutex_unlock)
                                            1054          DROP  12
                                            1055 *
                                            1056 *   DSECT for automatic variables in "rd_atomic32_set"
                                            1057 *      (FUNCTION #736)
                                            1058 *
00000000                00000000 000000AC   1059 @AUTO#rd_atomic32_set DSECT
00000000                                    1060          DS    XL168
000000A8                                    1061 rd_atomic32_set#r#0 DS 1F  ; r
                                            1062 *
000008A8                00000000 00014658   1063 @CODE    CSECT
                                            1064 *
                                            1065 *
                                            1066 *
                                            1067 * ....... start of rd_atomic64_init
000008A8                                    1068 @LNAME737 DS   0H
000008A8 00000010                           1069          DC    X'00000010'
000008AC 99846D81A3969489                   1070          DC    C'rd_atomic64_init'
000008BC 00                                 1071          DC    X'00'
                                            1072 rd_atomic64_init DCCPRLG CINDEX=737,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME737
                                            1073          macro
                                            1074          dccextrn &m
                                            1075          gblc    &$dccext(1000)
                                            1076          gbla    &$dccexti
                                            1077          lcla    &i
                                            1078 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1079 &i       seta    1
                                            1080 .loop    aif    (&i gt &$dccexti).around
                                            1081          aif    ('&$dccext(&i)' eq '&m').getout
                                            1082 &i       seta    &i+1
                                            1083          ago     .loop
                                            1084 .around  anop
                                            1085 &$dccexti seta &$dccexti+1
                                            1086          extrn  &m
                                            1087 .getout  anop
                                            1088          mend
000008C0                                    1089+$eye0022    ds    0d                                                    02-DCCCA
000008C0 C4C3C3                             1090+         dc cl3'DCC'                                                    02-DCCCA
000008C3 01                                 1091+         dc xl1'01' format one                                          02-DCCCA
000008C4 00000000                           1092+         dc a(0)                                                        02-DCCCA
000008C8 0000000000000932                   1093+         dc ad(@PER_737)                                                02-DCCCA
000008D0 00000000000000B8                   1094+         dc ad(184)                                                     02-DCCCA
000008D8 0000000000000000                   1095+         dc ad(0)                                                       02-DCCCA
000008E0 0000000000001000                   1096+         dc ad(4096)                                                    02-DCCCA
000008E8 20                                 1097+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000008E9 03                                 1098+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000008EA 03                                 1099+         dc al1(3)                                                      02-DCCCA
000008EB 08                                 1100+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000008EC 00                                 1101+         dc bl.8'00000000'                                              02-DCCCA
000008ED 000000                             1102+         dc al3(0)                                                      02-DCCCA
000008F0 00000000000008A8                   1103+         dc ad(@LNAME737)                                               02-DCCCA
000008F8                                    1104+         ds 0d                                                          02-DCCCA
000008F8 00000000000008C0                   1105+         dc ad($eye0022)                                                02-DCCCA
00000900 0000000000000000                   1106+         dc ad(0)                                                       02-DCCCA
00000908                                    1107+         ds    0d                                                       01-DCCPR
00000908                                    1108+rd_atomic64_init ds 0d                                                  01-DCCPR
00000908                                    1109+@REGION_737_1 ds 0h                                                     01-DCCPR
00000908 EBEC D008 0024          00000008   1110+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000090E E3E0 D088 0004          00000088   1111+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000914 E3C0 D090 0004          00000090   1112+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000091A B904 002E                          1113+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000091E E3B0 C018 0004          00000018   1114+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000924 A7EB 00B8               000000B8   1115+         aghi  14,184              increase by frame size               01-DCCPR
00000928 E3E0 C020 0021          00000020   1116+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000092E 4720 B020               00000020   1117+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000932                                    1118+@PER_737 ds    0h                                                       01-DCCPR
00000932 EBDE 2080 0024          00000080   1119+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000938 E3C0 2090 0024          00000090   1120+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000093E B904 00D2                          1121+         lgr   13,2                set real frame pointer               01-DCCPR
00000942 B904 00CF                          1122+         lgr   12,15               set base reg                         01-DCCPR
                        00000908            1123+         using @REGION_737_1,12                                         01-DCCPR
                                            1124 * ******* End of Prologue
                                            1125 * *
                                            1126 * ***      ra->val = v;
00000946 E3F0 1000 0004          00000000   1127          LG    15,0(0,1)   ; ra
0000094C E310 1008 0004          00000008   1128          LG    1,8(0,1)    ; v
00000952 E310 F000 0024          00000000   1129          STG   1,0(0,15)   ; ra
                                            1130 * ***
                                                                                                                           Page   31 
  Active Usings: @REGION_737_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1131 * ***      pthread_mutex_init(&ra->lock, 0);
00000958 41F0 F008               00000008   1132          LA    15,8(0,15)
0000095C E3F0 D0A8 0024          000000A8   1133          STG   15,168(0,13)
00000962 D707 D0B0 D0B0 000000B0 000000B0   1134          XC    176(8,13),176(13)
00000968 4110 D0A8               000000A8   1135          LA    1,168(0,13)
0000096C E3F0 C0C0 0004          000009C8   1136          LG    15,@lit_737_21 ; pthread_mutex_init
00000972                                    1137 @@gen_label22 DS    0H
00000972 05EF                               1138          BALR  14,15
00000974                                    1139 @@gen_label23 DS    0H
                                            1140 * ***   # 199 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                            1141 * ***   }
00000974                                    1142 @ret_lab_737 DS 0H
                                            1143 * * **** Start of Epilogue
                                            1144          DCCEPIL
00000974                                    1145+         ds 0h                                                          01-DCCEP
                                            1146+* Epilog
00000974 D707 D088 D088 00000088 00000088   1147+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000097A E3D0 D080 0004          00000080   1148+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000980 E3C0 D090 0004          00000090   1149+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000986 E3B0 C018 0004          00000018   1150+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000098C E3C0 B010 0021          00000010   1151+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000992 E3E0 D008 0004          00000008   1152+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000998 EB1C D020 0004          00000020   1153+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000099E 078E                               1154+         bcr 8,14                if same dsab, just return              01-DCCEP
000009A0 E3F0 D010 0024          00000010   1155+         stg 15,16(0,13)         save return code                       01-DCCEP
000009A6 E300 D018 0024          00000018   1156+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009AC E3F0 D090 0004          00000090   1157+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009B2 E3F0 F018 0004          00000018   1158+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009B8 47F0 F040               00000040   1159+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1160+* End of Epilog
                                            1161 * * **** End of Epilogue
000009C0                                    1162          DS    0D
000009C0 000000B8                           1163 @FRAMESIZE_737 DC F'184'
000009C4 00000000
000009C8 0000000000000000                   1164 @lit_737_21 DC AD(pthread_mutex_init)
                                            1165          DROP  12
                                            1166 *
                                            1167 *   DSECT for automatic variables in "rd_atomic64_init"
                                            1168 *      (FUNCTION #737)
                                            1169 *
00000000                00000000 000000A8   1170 @AUTO#rd_atomic64_init DSECT
00000000                                    1171          DS    XL168
                                            1172 *
000009D0                00000000 00014658   1173 @CODE    CSECT
                                            1174 *
                                            1175 *
                                            1176 *
                                            1177 * ....... start of rd_atomic64_get
000009D0                                    1178 @LNAME740 DS   0H
000009D0 0000000F                           1179          DC    X'0000000F'
000009D4 99846D81A3969489                   1180          DC    C'rd_atomic64_get'
000009E3 00                                 1181          DC    X'00'
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1182 rd_atomic64_get DCCPRLG CINDEX=740,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME740
                                            1183          macro
                                            1184          dccextrn &m
                                            1185          gblc    &$dccext(1000)
                                            1186          gbla    &$dccexti
                                            1187          lcla    &i
                                            1188 &$dccext(&$dccexti+1) setc    '&m'
                                            1189 &i       seta    1
                                            1190 .loop    aif    (&i gt &$dccexti).around
                                            1191          aif    ('&$dccext(&i)' eq '&m').getout
                                            1192 &i       seta    &i+1
                                            1193          ago     .loop
                                            1194 .around  anop
                                            1195 &$dccexti seta &$dccexti+1
                                            1196          extrn  &m
                                            1197 .getout  anop
                                            1198          mend
000009E8                                    1199+$eye0025    ds    0d                                                    02-DCCCA
000009E8 C4C3C3                             1200+         dc cl3'DCC'                                                    02-DCCCA
000009EB 01                                 1201+         dc xl1'01' format one                                          02-DCCCA
000009EC 00000000                           1202+         dc a(0)                                                        02-DCCCA
000009F0 0000000000000A5A                   1203+         dc ad(@PER_740)                                                02-DCCCA
000009F8 00000000000000B8                   1204+         dc ad(184)                                                     02-DCCCA
00000A00 0000000000000000                   1205+         dc ad(0)                                                       02-DCCCA
00000A08 0000000000001000                   1206+         dc ad(4096)                                                    02-DCCCA
00000A10 20                                 1207+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A11 03                                 1208+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A12 03                                 1209+         dc al1(3)                                                      02-DCCCA
00000A13 08                                 1210+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A14 00                                 1211+         dc bl.8'00000000'                                              02-DCCCA
00000A15 000000                             1212+         dc al3(0)                                                      02-DCCCA
00000A18 00000000000009D0                   1213+         dc ad(@LNAME740)                                               02-DCCCA
00000A20                                    1214+         ds 0d                                                          02-DCCCA
00000A20 00000000000009E8                   1215+         dc ad($eye0025)                                                02-DCCCA
00000A28 0000000000000000                   1216+         dc ad(0)                                                       02-DCCCA
00000A30                                    1217+         ds    0d                                                       01-DCCPR
00000A30                                    1218+rd_atomic64_get ds 0d                                                   01-DCCPR
00000A30                                    1219+@REGION_740_1 ds 0h                                                     01-DCCPR
00000A30 EBEC D008 0024          00000008   1220+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A36 E3E0 D088 0004          00000088   1221+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A3C E3C0 D090 0004          00000090   1222+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000A42 B904 002E                          1223+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000A46 E3B0 C018 0004          00000018   1224+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A4C A7EB 00B8               000000B8   1225+         aghi  14,184              increase by frame size               01-DCCPR
00000A50 E3E0 C020 0021          00000020   1226+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A56 4720 B020               00000020   1227+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A5A                                    1228+@PER_740 ds    0h                                                       01-DCCPR
00000A5A EBDE 2080 0024          00000080   1229+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A60 E3C0 2090 0024          00000090   1230+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A66 B904 00D2                          1231+         lgr   13,2                set real frame pointer               01-DCCPR
00000A6A B904 00CF                          1232+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   33 
  Active Usings: @REGION_740_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        00000A30            1233+         using @REGION_740_1,12                                         01-DCCPR
                                            1234 * ******* End of Prologue
                                            1235 * *
00000A6E E320 1000 0004          00000000   1236          LG    2,0(0,1)    ; ra
                                            1237 * ***
                                            1238 * ***      int64_t r;
                                            1239 * ***      pthread_mutex_lock(&ra->lock);
00000A74 41F0 2008               00000008   1240          LA    15,8(0,2)
00000A78 E3F0 D0B0 0024          000000B0   1241          STG   15,176(0,13)
00000A7E 4110 D0B0               000000B0   1242          LA    1,176(0,13)
00000A82 E3F0 C0D0 0004          00000B00   1243          LG    15,@lit_740_23 ; pthread_mutex_lock
00000A88                                    1244 @@gen_label24 DS    0H
00000A88 05EF                               1245          BALR  14,15
00000A8A                                    1246 @@gen_label25 DS    0H
                                            1247 * ***      r = ra->val;
00000A8A E330 2000 0004          00000000   1248          LG    3,0(0,2)    ; ra
                                            1249 * ***      pthread_mutex_unlock(&ra->lock);
00000A90 41F0 2008               00000008   1250          LA    15,8(0,2)
00000A94 E3F0 D0B0 0024          000000B0   1251          STG   15,176(0,13)
00000A9A 4110 D0B0               000000B0   1252          LA    1,176(0,13)
00000A9E E3F0 C0D8 0004          00000B08   1253          LG    15,@lit_740_24 ; pthread_mutex_unlock
00000AA4                                    1254 @@gen_label26 DS    0H
00000AA4 05EF                               1255          BALR  14,15
00000AA6                                    1256 @@gen_label27 DS    0H
                                            1257 * ***      return r;
00000AA6 B904 00F3                          1258          LGR   15,3
                                            1259 * ***   # 277 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                            1260 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                            1261 * ***
                                            1262 * ***   }
                                            1263 * * **** Start of Epilogue
                                            1264          DCCEPIL
00000AAA                                    1265+         ds 0h                                                          01-DCCEP
                                            1266+* Epilog
00000AAA D707 D088 D088 00000088 00000088   1267+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000AB0 E3D0 D080 0004          00000080   1268+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000AB6 E3C0 D090 0004          00000090   1269+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000ABC E3B0 C018 0004          00000018   1270+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000AC2 E3C0 B010 0021          00000010   1271+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000AC8 E3E0 D008 0004          00000008   1272+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000ACE EB1C D020 0004          00000020   1273+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000AD4 078E                               1274+         bcr 8,14                if same dsab, just return              01-DCCEP
00000AD6 E3F0 D010 0024          00000010   1275+         stg 15,16(0,13)         save return code                       01-DCCEP
00000ADC E300 D018 0024          00000018   1276+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000AE2 E3F0 D090 0004          00000090   1277+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000AE8 E3F0 F018 0004          00000018   1278+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000AEE 47F0 F040               00000040   1279+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1280+* End of Epilog
                                            1281 * * **** End of Epilogue
00000AF8                                    1282          DS    0D
00000AF8 000000B8                           1283 @FRAMESIZE_740 DC F'184'
00000AFC 00000000
                                                                                                                           Page   34 
  Active Usings: @REGION_740_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000B00 0000000000000000                   1284 @lit_740_23 DC AD(pthread_mutex_lock)
00000B08 0000000000000000                   1285 @lit_740_24 DC AD(pthread_mutex_unlock)
                                            1286          DROP  12
                                            1287 *
                                            1288 *   DSECT for automatic variables in "rd_atomic64_get"
                                            1289 *      (FUNCTION #740)
                                            1290 *
00000000                00000000 000000B0   1291 @AUTO#rd_atomic64_get DSECT
00000000                                    1292          DS    XL168
000000A8                                    1293 rd_atomic64_get#r#0 DS 8XL1 ; r
                                            1294 *
00000B10                00000000 00014658   1295 @CODE    CSECT
                                            1296 *
                                            1297 *
                                            1298 *
                                            1299 * ....... start of rd_atomic64_set
00000B10                                    1300 @LNAME741 DS   0H
00000B10 0000000F                           1301          DC    X'0000000F'
00000B14 99846D81A3969489                   1302          DC    C'rd_atomic64_set'
00000B23 00                                 1303          DC    X'00'
                                            1304 rd_atomic64_set DCCPRLG CINDEX=741,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME741
                                            1305          macro
                                            1306          dccextrn &m
                                            1307          gblc    &$dccext(1000)
                                            1308          gbla    &$dccexti
                                            1309          lcla    &i
                                            1310 &$dccext(&$dccexti+1) setc    '&m'
                                            1311 &i       seta    1
                                            1312 .loop    aif    (&i gt &$dccexti).around
                                            1313          aif    ('&$dccext(&i)' eq '&m').getout
                                            1314 &i       seta    &i+1
                                            1315          ago     .loop
                                            1316 .around  anop
                                            1317 &$dccexti seta &$dccexti+1
                                            1318          extrn  &m
                                            1319 .getout  anop
                                            1320          mend
00000B28                                    1321+$eye0028    ds    0d                                                    02-DCCCA
00000B28 C4C3C3                             1322+         dc cl3'DCC'                                                    02-DCCCA
00000B2B 01                                 1323+         dc xl1'01' format one                                          02-DCCCA
00000B2C 00000000                           1324+         dc a(0)                                                        02-DCCCA
00000B30 0000000000000B9A                   1325+         dc ad(@PER_741)                                                02-DCCCA
00000B38 00000000000000B8                   1326+         dc ad(184)                                                     02-DCCCA
00000B40 0000000000000000                   1327+         dc ad(0)                                                       02-DCCCA
00000B48 0000000000001000                   1328+         dc ad(4096)                                                    02-DCCCA
00000B50 20                                 1329+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B51 03                                 1330+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B52 03                                 1331+         dc al1(3)                                                      02-DCCCA
00000B53 08                                 1332+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B54 00                                 1333+         dc bl.8'00000000'                                              02-DCCCA
00000B55 000000                             1334+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000B58 0000000000000B10                   1335+         dc ad(@LNAME741)                                               02-DCCCA
00000B60                                    1336+         ds 0d                                                          02-DCCCA
00000B60 0000000000000B28                   1337+         dc ad($eye0028)                                                02-DCCCA
00000B68 0000000000000000                   1338+         dc ad(0)                                                       02-DCCCA
00000B70                                    1339+         ds    0d                                                       01-DCCPR
00000B70                                    1340+rd_atomic64_set ds 0d                                                   01-DCCPR
00000B70                                    1341+@REGION_741_1 ds 0h                                                     01-DCCPR
00000B70 EBEC D008 0024          00000008   1342+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B76 E3E0 D088 0004          00000088   1343+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B7C E3C0 D090 0004          00000090   1344+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B82 B904 002E                          1345+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B86 E3B0 C018 0004          00000018   1346+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B8C A7EB 00B8               000000B8   1347+         aghi  14,184              increase by frame size               01-DCCPR
00000B90 E3E0 C020 0021          00000020   1348+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B96 4720 B020               00000020   1349+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B9A                                    1350+@PER_741 ds    0h                                                       01-DCCPR
00000B9A EBDE 2080 0024          00000080   1351+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BA0 E3C0 2090 0024          00000090   1352+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BA6 B904 00D2                          1353+         lgr   13,2                set real frame pointer               01-DCCPR
00000BAA B904 00CF                          1354+         lgr   12,15               set base reg                         01-DCCPR
                        00000B70            1355+         using @REGION_741_1,12                                         01-DCCPR
00000BAE B904 0031                          1356          LGR   3,1         ; ptr to parm area
                                            1357 * ******* End of Prologue
                                            1358 * *
00000BB2 E320 3000 0004          00000000   1359          LG    2,0(0,3)    ; ra
                                            1360 * ***
                                            1361 * ***      int64_t r;
                                            1362 * ***      pthread_mutex_lock(&ra->lock);
00000BB8 41F0 2008               00000008   1363          LA    15,8(0,2)
00000BBC E3F0 D0B0 0024          000000B0   1364          STG   15,176(0,13)
00000BC2 4110 D0B0               000000B0   1365          LA    1,176(0,13)
00000BC6 E3F0 C0D8 0004          00000C48   1366          LG    15,@lit_741_26 ; pthread_mutex_lock
00000BCC                                    1367 @@gen_label28 DS    0H
00000BCC 05EF                               1368          BALR  14,15
00000BCE                                    1369 @@gen_label29 DS    0H
                                            1370 * ***      ra->val = v;
00000BCE E3F0 3008 0004          00000008   1371          LG    15,8(0,3)   ; v
00000BD4 E3F0 2000 0024          00000000   1372          STG   15,0(0,2)   ; ra
                                            1373 * ***      r = ra->val;
00000BDA B904 003F                          1374          LGR   3,15        ; ra
                                            1375 * ***      pthread_mutex_unlock(&ra->lock);
00000BDE 41F0 2008               00000008   1376          LA    15,8(0,2)
00000BE2 E3F0 D0B0 0024          000000B0   1377          STG   15,176(0,13)
00000BE8 4110 D0B0               000000B0   1378          LA    1,176(0,13)
00000BEC E3F0 C0E0 0004          00000C50   1379          LG    15,@lit_741_27 ; pthread_mutex_unlock
00000BF2                                    1380 @@gen_label30 DS    0H
00000BF2 05EF                               1381          BALR  14,15
00000BF4                                    1382 @@gen_label31 DS    0H
                                            1383 * ***      return r;
00000BF4 B904 00F3                          1384          LGR   15,3
                                            1385 * ***   # 301 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                            1386 * ***           __atomic_store_n(&ra->val, v, 6);
                                                                                                                           Page   36 
  Active Usings: @REGION_741_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1387 * ***           return v;
                                            1388 * ***   # 309 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                            1389 * ***   }
                                            1390 * * **** Start of Epilogue
                                            1391          DCCEPIL
00000BF8                                    1392+         ds 0h                                                          01-DCCEP
                                            1393+* Epilog
00000BF8 D707 D088 D088 00000088 00000088   1394+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BFE E3D0 D080 0004          00000080   1395+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C04 E3C0 D090 0004          00000090   1396+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C0A E3B0 C018 0004          00000018   1397+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C10 E3C0 B010 0021          00000010   1398+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C16 E3E0 D008 0004          00000008   1399+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C1C EB1C D020 0004          00000020   1400+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000C22 078E                               1401+         bcr 8,14                if same dsab, just return              01-DCCEP
00000C24 E3F0 D010 0024          00000010   1402+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C2A E300 D018 0024          00000018   1403+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000C30 E3F0 D090 0004          00000090   1404+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C36 E3F0 F018 0004          00000018   1405+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C3C 47F0 F040               00000040   1406+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1407+* End of Epilog
                                            1408 * * **** End of Epilogue
00000C40                                    1409          DS    0D
00000C40 000000B8                           1410 @FRAMESIZE_741 DC F'184'
00000C44 00000000
00000C48 0000000000000000                   1411 @lit_741_26 DC AD(pthread_mutex_lock)
00000C50 0000000000000000                   1412 @lit_741_27 DC AD(pthread_mutex_unlock)
                                            1413          DROP  12
                                            1414 *
                                            1415 *   DSECT for automatic variables in "rd_atomic64_set"
                                            1416 *      (FUNCTION #741)
                                            1417 *
00000000                00000000 000000B0   1418 @AUTO#rd_atomic64_set DSECT
00000000                                    1419          DS    XL168
000000A8                                    1420 rd_atomic64_set#r#0 DS 8XL1 ; r
                                            1421 *
00000C58                00000000 00014658   1422 @CODE    CSECT
                                            1423 *
                                            1424 *
                                            1425 *
                                            1426 * ....... start of rd_free
00000C58                                    1427 @LNAME754 DS   0H
00000C58 00000007                           1428          DC    X'00000007'
00000C5C 99846D86998585                     1429          DC    C'rd_free'
00000C63 00                                 1430          DC    X'00'
                                            1431 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                            1432          macro
                                            1433          dccextrn &m
                                            1434          gblc    &$dccext(1000)
                                            1435          gbla    &$dccexti
                                            1436          lcla    &i
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1437 &$dccext(&$dccexti+1) setc    '&m'
                                            1438 &i       seta    1
                                            1439 .loop    aif    (&i gt &$dccexti).around
                                            1440          aif    ('&$dccext(&i)' eq '&m').getout
                                            1441 &i       seta    &i+1
                                            1442          ago     .loop
                                            1443 .around  anop
                                            1444 &$dccexti seta &$dccexti+1
                                            1445          extrn  &m
                                            1446 .getout  anop
                                            1447          mend
00000C68                                    1448+$eye0031    ds    0d                                                    02-DCCCA
00000C68 C4C3C3                             1449+         dc cl3'DCC'                                                    02-DCCCA
00000C6B 01                                 1450+         dc xl1'01' format one                                          02-DCCCA
00000C6C 00000000                           1451+         dc a(0)                                                        02-DCCCA
00000C70 0000000000000CDA                   1452+         dc ad(@PER_754)                                                02-DCCCA
00000C78 00000000000000B0                   1453+         dc ad(176)                                                     02-DCCCA
00000C80 0000000000000000                   1454+         dc ad(0)                                                       02-DCCCA
00000C88 0000000000001000                   1455+         dc ad(4096)                                                    02-DCCCA
00000C90 20                                 1456+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C91 03                                 1457+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C92 03                                 1458+         dc al1(3)                                                      02-DCCCA
00000C93 08                                 1459+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C94 00                                 1460+         dc bl.8'00000000'                                              02-DCCCA
00000C95 000000                             1461+         dc al3(0)                                                      02-DCCCA
00000C98 0000000000000C58                   1462+         dc ad(@LNAME754)                                               02-DCCCA
00000CA0                                    1463+         ds 0d                                                          02-DCCCA
00000CA0 0000000000000C68                   1464+         dc ad($eye0031)                                                02-DCCCA
00000CA8 0000000000000000                   1465+         dc ad(0)                                                       02-DCCCA
00000CB0                                    1466+         ds    0d                                                       01-DCCPR
00000CB0                                    1467+rd_free  ds    0d                                                       01-DCCPR
00000CB0                                    1468+@REGION_754_1 ds 0h                                                     01-DCCPR
00000CB0 EBEC D008 0024          00000008   1469+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000CB6 E3E0 D088 0004          00000088   1470+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000CBC E3C0 D090 0004          00000090   1471+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000CC2 B904 002E                          1472+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000CC6 E3B0 C018 0004          00000018   1473+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000CCC A7EB 00B0               000000B0   1474+         aghi  14,176              increase by frame size               01-DCCPR
00000CD0 E3E0 C020 0021          00000020   1475+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000CD6 4720 B020               00000020   1476+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000CDA                                    1477+@PER_754 ds    0h                                                       01-DCCPR
00000CDA EBDE 2080 0024          00000080   1478+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000CE0 E3C0 2090 0024          00000090   1479+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000CE6 B904 00D2                          1480+         lgr   13,2                set real frame pointer               01-DCCPR
00000CEA B904 00CF                          1481+         lgr   12,15               set base reg                         01-DCCPR
                        00000CB0            1482+         using @REGION_754_1,12                                         01-DCCPR
                                            1483 * ******* End of Prologue
                                            1484 * *
                                            1485 * ***      free(ptr);
00000CEE E3F0 1000 0004          00000000   1486          LG    15,0(0,1)   ; ptr
00000CF4 E3F0 D0A8 0024          000000A8   1487          STG   15,168(0,13)
00000CFA 4110 D0A8               000000A8   1488          LA    1,168(0,13)
                                                                                                                           Page   38 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000CFE E3F0 C0A8 0004          00000D58   1489          LG    15,@lit_754_29 ; free
00000D04                                    1490 @@gen_label32 DS    0H
00000D04 05EF                               1491          BALR  14,15
00000D06                                    1492 @@gen_label33 DS    0H
                                            1493 * ***   }
00000D06                                    1494 @ret_lab_754 DS 0H
                                            1495 * * **** Start of Epilogue
                                            1496          DCCEPIL
00000D06                                    1497+         ds 0h                                                          01-DCCEP
                                            1498+* Epilog
00000D06 D707 D088 D088 00000088 00000088   1499+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000D0C E3D0 D080 0004          00000080   1500+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000D12 E3C0 D090 0004          00000090   1501+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000D18 E3B0 C018 0004          00000018   1502+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000D1E E3C0 B010 0021          00000010   1503+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000D24 E3E0 D008 0004          00000008   1504+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000D2A EB1C D020 0004          00000020   1505+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000D30 078E                               1506+         bcr 8,14                if same dsab, just return              01-DCCEP
00000D32 E3F0 D010 0024          00000010   1507+         stg 15,16(0,13)         save return code                       01-DCCEP
00000D38 E300 D018 0024          00000018   1508+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000D3E E3F0 D090 0004          00000090   1509+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D44 E3F0 F018 0004          00000018   1510+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D4A 47F0 F040               00000040   1511+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1512+* End of Epilog
                                            1513 * * **** End of Epilogue
00000D50                                    1514          DS    0D
00000D50 000000B0                           1515 @FRAMESIZE_754 DC F'176'
00000D54 00000000
00000D58 0000000000000000                   1516 @lit_754_29 DC AD(free)
                                            1517          DROP  12
                                            1518 *
                                            1519 *   DSECT for automatic variables in "rd_free"
                                            1520 *      (FUNCTION #754)
                                            1521 *
00000000                00000000 000000A8   1522 @AUTO#rd_free DSECT
00000000                                    1523          DS    XL168
                                            1524 *
00000D60                00000000 00014658   1525 @CODE    CSECT
                                            1526 *
                                            1527 *
                                            1528 *
                                            1529 * ....... start of rd_strdup
00000D60                                    1530 @LNAME755 DS   0H
00000D60 00000009                           1531          DC    X'00000009'
00000D64 99846DA2A39984A4                   1532          DC    C'rd_strdup'
00000D6D 00                                 1533          DC    X'00'
                                            1534 rd_strdup DCCPRLG CINDEX=755,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME755
                                            1535          macro
                                            1536          dccextrn &m
                                            1537          gblc    &$dccext(1000)
                                            1538          gbla    &$dccexti
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1539          lcla    &i
                                            1540 &$dccext(&$dccexti+1) setc    '&m'
                                            1541 &i       seta    1
                                            1542 .loop    aif    (&i gt &$dccexti).around
                                            1543          aif    ('&$dccext(&i)' eq '&m').getout
                                            1544 &i       seta    &i+1
                                            1545          ago     .loop
                                            1546 .around  anop
                                            1547 &$dccexti seta &$dccexti+1
                                            1548          extrn  &m
                                            1549 .getout  anop
                                            1550          mend
00000D70                                    1551+$eye0034    ds    0d                                                    02-DCCCA
00000D70 C4C3C3                             1552+         dc cl3'DCC'                                                    02-DCCCA
00000D73 01                                 1553+         dc xl1'01' format one                                          02-DCCCA
00000D74 00000000                           1554+         dc a(0)                                                        02-DCCCA
00000D78 0000000000000DE2                   1555+         dc ad(@PER_755)                                                02-DCCCA
00000D80 00000000000000D0                   1556+         dc ad(208)                                                     02-DCCCA
00000D88 0000000000000000                   1557+         dc ad(0)                                                       02-DCCCA
00000D90 0000000000001000                   1558+         dc ad(4096)                                                    02-DCCCA
00000D98 20                                 1559+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D99 03                                 1560+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D9A 03                                 1561+         dc al1(3)                                                      02-DCCCA
00000D9B 08                                 1562+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D9C 00                                 1563+         dc bl.8'00000000'                                              02-DCCCA
00000D9D 000000                             1564+         dc al3(0)                                                      02-DCCCA
00000DA0 0000000000000D60                   1565+         dc ad(@LNAME755)                                               02-DCCCA
00000DA8                                    1566+         ds 0d                                                          02-DCCCA
00000DA8 0000000000000D70                   1567+         dc ad($eye0034)                                                02-DCCCA
00000DB0 0000000000000000                   1568+         dc ad(0)                                                       02-DCCCA
00000DB8                                    1569+         ds    0d                                                       01-DCCPR
00000DB8                                    1570+rd_strdup ds   0d                                                       01-DCCPR
00000DB8                                    1571+@REGION_755_1 ds 0h                                                     01-DCCPR
00000DB8 EBEC D008 0024          00000008   1572+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DBE E3E0 D088 0004          00000088   1573+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000DC4 E3C0 D090 0004          00000090   1574+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DCA B904 002E                          1575+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DCE E3B0 C018 0004          00000018   1576+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DD4 A7EB 00D0               000000D0   1577+         aghi  14,208              increase by frame size               01-DCCPR
00000DD8 E3E0 C020 0021          00000020   1578+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DDE 4720 B020               00000020   1579+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DE2                                    1580+@PER_755 ds    0h                                                       01-DCCPR
00000DE2 EBDE 2080 0024          00000080   1581+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DE8 E3C0 2090 0024          00000090   1582+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DEE B904 00D2                          1583+         lgr   13,2                set real frame pointer               01-DCCPR
00000DF2 B904 00CF                          1584+         lgr   12,15               set base reg                         01-DCCPR
                        00000DB8            1585+         using @REGION_755_1,12                                         01-DCCPR
                                            1586 * ******* End of Prologue
                                            1587 * *
                                            1588 * ***
                                            1589 * ***      char *n = strdup(s);
00000DF6 E3F0 1000 0004          00000000   1590          LG    15,0(0,1)   ; s
                                                                                                                           Page   40 
  Active Usings: @REGION_755_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000DFC E3F0 D0B0 0024          000000B0   1591          STG   15,176(0,13)
00000E02 4110 D0B0               000000B0   1592          LA    1,176(0,13)
00000E06 E3F0 C0F0 0004          00000EA8   1593          LG    15,@lit_755_31 ; strdup
00000E0C                                    1594 @@gen_label34 DS    0H
00000E0C 05EF                               1595          BALR  14,15
00000E0E                                    1596 @@gen_label35 DS    0H
00000E0E B904 002F                          1597          LGR   2,15
                                            1598 * ***
                                            1599 * ***
                                            1600 * ***
                                            1601 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                            1602 * ka\\src\\rd.h", 148, "n"));
00000E12 B902 00F2                          1603          LTGR  15,2
00000E16 4770 C09A               00000E52   1604          BNZ   @L38
00000E1A                                    1605 @L37     DS    0H
00000E1A E3F0 C108 0004          00000EC0   1606          LG    15,@lit_755_32
00000E20 41F0 F020               00000020   1607          LA    15,32(0,15)
00000E24 E3F0 D0B0 0024          000000B0   1608          STG   15,176(0,13)
00000E2A E3F0 C100 0004          00000EB8   1609          LG    15,@lit_755_33
00000E30 E3F0 D0B8 0024          000000B8   1610          STG   15,184(0,13)
00000E36 E548 D0C0 0094          000000C0   1611          MVGHI 192(13),148
00000E3C 41F0 F020               00000020   1612          LA    15,32(0,15)
00000E40 E3F0 D0C8 0024          000000C8   1613          STG   15,200(0,13)
00000E46 4110 D0B0               000000B0   1614          LA    1,176(0,13)
00000E4A E3F0 C0F8 0004          00000EB0   1615          LG    15,@lit_755_34 ; __assert
00000E50                                    1616 @@gen_label37 DS    0H
00000E50 05EF                               1617          BALR  14,15
00000E52                                    1618 @@gen_label38 DS    0H
00000E52                                    1619 @L38     DS    0H
                                            1620 * ***      return n;
00000E52 B904 00F2                          1621          LGR   15,2
                                            1622 * ***   }
                                            1623 * * **** Start of Epilogue
                                            1624          DCCEPIL
00000E56                                    1625+         ds 0h                                                          01-DCCEP
                                            1626+* Epilog
00000E56 D707 D088 D088 00000088 00000088   1627+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E5C E3D0 D080 0004          00000080   1628+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E62 E3C0 D090 0004          00000090   1629+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E68 E3B0 C018 0004          00000018   1630+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E6E E3C0 B010 0021          00000010   1631+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E74 E3E0 D008 0004          00000008   1632+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E7A EB1C D020 0004          00000020   1633+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E80 078E                               1634+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E82 E3F0 D010 0024          00000010   1635+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E88 E300 D018 0024          00000018   1636+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E8E E3F0 D090 0004          00000090   1637+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E94 E3F0 F018 0004          00000018   1638+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E9A 47F0 F040               00000040   1639+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1640+* End of Epilog
                                            1641 * * **** End of Epilogue
00000EA0                                    1642          DS    0D
                                                                                                                           Page   41 
  Active Usings: @REGION_755_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000EA0 000000D0                           1643 @FRAMESIZE_755 DC F'208'
00000EA4 00000000
00000EA8 0000000000000000                   1644 @lit_755_31 DC AD(strdup)
00000EB0 0000000000000000                   1645 @lit_755_34 DC AD(__assert)
00000EB8 0000000000014A98                   1646 @lit_755_33 DC AD(@strings@)
00000EC0 0000000000014658                   1647 @lit_755_32 DC AD(@DATA)
                                            1648          DROP  12
                                            1649 *
                                            1650 *   DSECT for automatic variables in "rd_strdup"
                                            1651 *      (FUNCTION #755)
                                            1652 *
00000000                00000000 000000A8   1653 @AUTO#rd_strdup DSECT
00000000                                    1654          DS    XL168
                                            1655 *
00000EC8                00000000 00014658   1656 @CODE    CSECT
                                            1657 *
                                            1658 *
                                            1659 *
                                            1660 * ....... start of rd_refcnt_sub0
00000EC8                                    1661 @LNAME758 DS   0H
00000EC8 0000000E                           1662          DC    X'0000000E'
00000ECC 99846D9985868395                   1663          DC    C'rd_refcnt_sub0'
00000EDA 00                                 1664          DC    X'00'
                                            1665 rd_refcnt_sub0 DCCPRLG CINDEX=758,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME758
                                            1666          macro
                                            1667          dccextrn &m
                                            1668          gblc    &$dccext(1000)
                                            1669          gbla    &$dccexti
                                            1670          lcla    &i
                                            1671 &$dccext(&$dccexti+1) setc    '&m'
                                            1672 &i       seta    1
                                            1673 .loop    aif    (&i gt &$dccexti).around
                                            1674          aif    ('&$dccext(&i)' eq '&m').getout
                                            1675 &i       seta    &i+1
                                            1676          ago     .loop
                                            1677 .around  anop
                                            1678 &$dccexti seta &$dccexti+1
                                            1679          extrn  &m
                                            1680 .getout  anop
                                            1681          mend
00000EE0                                    1682+$eye0037    ds    0d                                                    02-DCCCA
00000EE0 C4C3C3                             1683+         dc cl3'DCC'                                                    02-DCCCA
00000EE3 01                                 1684+         dc xl1'01' format one                                          02-DCCCA
00000EE4 00000000                           1685+         dc a(0)                                                        02-DCCCA
00000EE8 0000000000000F52                   1686+         dc ad(@PER_758)                                                02-DCCCA
00000EF0 00000000000000D0                   1687+         dc ad(208)                                                     02-DCCCA
00000EF8 0000000000000000                   1688+         dc ad(0)                                                       02-DCCCA
00000F00 0000000000001000                   1689+         dc ad(4096)                                                    02-DCCCA
00000F08 20                                 1690+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F09 03                                 1691+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F0A 03                                 1692+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F0B 08                                 1693+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F0C 00                                 1694+         dc bl.8'00000000'                                              02-DCCCA
00000F0D 000000                             1695+         dc al3(0)                                                      02-DCCCA
00000F10 0000000000000EC8                   1696+         dc ad(@LNAME758)                                               02-DCCCA
00000F18                                    1697+         ds 0d                                                          02-DCCCA
00000F18 0000000000000EE0                   1698+         dc ad($eye0037)                                                02-DCCCA
00000F20 0000000000000000                   1699+         dc ad(0)                                                       02-DCCCA
00000F28                                    1700+         ds    0d                                                       01-DCCPR
00000F28                                    1701+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000F28                                    1702+@REGION_758_1 ds 0h                                                     01-DCCPR
00000F28 EBEC D008 0024          00000008   1703+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F2E E3E0 D088 0004          00000088   1704+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F34 E3C0 D090 0004          00000090   1705+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F3A B904 002E                          1706+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F3E E3B0 C018 0004          00000018   1707+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F44 A7EB 00D0               000000D0   1708+         aghi  14,208              increase by frame size               01-DCCPR
00000F48 E3E0 C020 0021          00000020   1709+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F4E 4720 B020               00000020   1710+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F52                                    1711+@PER_758 ds    0h                                                       01-DCCPR
00000F52 EBDE 2080 0024          00000080   1712+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F58 E3C0 2090 0024          00000090   1713+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F5E B904 00D2                          1714+         lgr   13,2                set real frame pointer               01-DCCPR
00000F62 B904 00CF                          1715+         lgr   12,15               set base reg                         01-DCCPR
                        00000F28            1716+         using @REGION_758_1,12                                         01-DCCPR
                                            1717 * ******* End of Prologue
                                            1718 * *
                                            1719 * ***           int r;
                                            1720 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                            1721 * ***           r = rd_atomic32_sub(R, 1);
00000F66 E3F0 1000 0004          00000000   1722          LG    15,0(0,1)   ; R
00000F6C E3F0 D0B0 0024          000000B0   1723          STG   15,176(0,13)
00000F72 E548 D0B8 0001          000000B8   1724          MVGHI 184(13),1
00000F78 4110 D0B0               000000B0   1725          LA    1,176(0,13)
00000F7C E3F0 C100 0004          00001028   1726          LG    15,@lit_758_36 ; rd_atomic32_sub
00000F82                                    1727 @@gen_label39 DS    0H
00000F82 05EF                               1728          BALR  14,15
00000F84                                    1729 @@gen_label40 DS    0H
00000F84 122F                               1730          LTR   2,15
                                            1731 * ***
                                            1732 * ***           if (r < 0)
00000F86 47B0 C0A6               00000FCE   1733          BNL   @L41
                                            1734 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                            1735 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                            1736 * zero\""));
00000F8A E3F0 C108 0004          00001030   1737          LG    15,@lit_758_37
00000F90 4110 F022               00000022   1738          LA    1,34(0,15)
00000F94 9500 1000      00000000 00000000   1739          CLI   0(1),0
00000F98 4780 C0A6               00000FCE   1740          BE    @L41
00000F9C                                    1741 @L42     DS    0H
00000F9C E310 C118 0004          00001040   1742          LG    1,@lit_758_38
00000FA2 4110 1036               00000036   1743          LA    1,54(0,1)
00000FA6 E310 D0B0 0024          000000B0   1744          STG   1,176(0,13)
                                                                                                                           Page   43 
  Active Usings: @REGION_758_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000FAC E3F0 D0B8 0024          000000B8   1745          STG   15,184(0,13)
00000FB2 E548 D0C0 014F          000000C0   1746          MVGHI 192(13),335
00000FB8 41F0 F032               00000032   1747          LA    15,50(0,15)
00000FBC E3F0 D0C8 0024          000000C8   1748          STG   15,200(0,13)
00000FC2 4110 D0B0               000000B0   1749          LA    1,176(0,13)
00000FC6 E3F0 C110 0004          00001038   1750          LG    15,@lit_758_39 ; __assert
00000FCC                                    1751 @@gen_label43 DS    0H
00000FCC 05EF                               1752          BALR  14,15
00000FCE                                    1753 @@gen_label44 DS    0H
00000FCE                                    1754 @L43     DS    0H
00000FCE                                    1755 @L41     DS    0H
                                            1756 * ***           return r;
00000FCE B914 00F2                          1757          LGFR  15,2
                                            1758 * ***   }
                                            1759 * * **** Start of Epilogue
                                            1760          DCCEPIL
00000FD2                                    1761+         ds 0h                                                          01-DCCEP
                                            1762+* Epilog
00000FD2 D707 D088 D088 00000088 00000088   1763+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000FD8 E3D0 D080 0004          00000080   1764+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000FDE E3C0 D090 0004          00000090   1765+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000FE4 E3B0 C018 0004          00000018   1766+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000FEA E3C0 B010 0021          00000010   1767+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000FF0 E3E0 D008 0004          00000008   1768+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000FF6 EB1C D020 0004          00000020   1769+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000FFC 078E                               1770+         bcr 8,14                if same dsab, just return              01-DCCEP
00000FFE E3F0 D010 0024          00000010   1771+         stg 15,16(0,13)         save return code                       01-DCCEP
00001004 E300 D018 0024          00000018   1772+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000100A E3F0 D090 0004          00000090   1773+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001010 E3F0 F018 0004          00000018   1774+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001016 47F0 F040               00000040   1775+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1776+* End of Epilog
                                            1777 * * **** End of Epilogue
00001020                                    1778          DS    0D
00001020 000000D0                           1779 @FRAMESIZE_758 DC F'208'
00001024 00000000
00001028 0000000000000680                   1780 @lit_758_36 DC AD(rd_atomic32_sub)
00001030 0000000000014A98                   1781 @lit_758_37 DC AD(@strings@)
00001038 0000000000000000                   1782 @lit_758_39 DC AD(__assert)
00001040 0000000000014658                   1783 @lit_758_38 DC AD(@DATA)
                                            1784          DROP  12
                                            1785 *
                                            1786 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                            1787 *      (FUNCTION #758)
                                            1788 *
00000000                00000000 000000AC   1789 @AUTO#rd_refcnt_sub0 DSECT
00000000                                    1790          DS    XL168
000000A8                                    1791 rd_refcnt_sub0#r#0 DS 1F   ; r
                                            1792 *
00001048                00000000 00014658   1793 @CODE    CSECT
                                            1794 *
                                            1795 *
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1796 *
                                            1797 * ....... start of rd_clock
00001048                                    1798 @LNAME1088 DS  0H
00001048 00000008                           1799          DC    X'00000008'
0000104C 99846D8393968392                   1800          DC    C'rd_clock'
00001054 00                                 1801          DC    X'00'
                                            1802 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                            1803          macro
                                            1804          dccextrn &m
                                            1805          gblc    &$dccext(1000)
                                            1806          gbla    &$dccexti
                                            1807          lcla    &i
                                            1808 &$dccext(&$dccexti+1) setc    '&m'
                                            1809 &i       seta    1
                                            1810 .loop    aif    (&i gt &$dccexti).around
                                            1811          aif    ('&$dccext(&i)' eq '&m').getout
                                            1812 &i       seta    &i+1
                                            1813          ago     .loop
                                            1814 .around  anop
                                            1815 &$dccexti seta &$dccexti+1
                                            1816          extrn  &m
                                            1817 .getout  anop
                                            1818          mend
00001058                                    1819+$eye0040    ds    0d                                                    02-DCCCA
00001058 C4C3C3                             1820+         dc cl3'DCC'                                                    02-DCCCA
0000105B 01                                 1821+         dc xl1'01' format one                                          02-DCCCA
0000105C 00000000                           1822+         dc a(0)                                                        02-DCCCA
00001060 00000000000010CA                   1823+         dc ad(@PER_1088)                                               02-DCCCA
00001068 00000000000000C8                   1824+         dc ad(200)                                                     02-DCCCA
00001070 0000000000000000                   1825+         dc ad(0)                                                       02-DCCCA
00001078 0000000000001000                   1826+         dc ad(4096)                                                    02-DCCCA
00001080 20                                 1827+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001081 03                                 1828+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001082 03                                 1829+         dc al1(3)                                                      02-DCCCA
00001083 08                                 1830+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001084 00                                 1831+         dc bl.8'00000000'                                              02-DCCCA
00001085 000000                             1832+         dc al3(0)                                                      02-DCCCA
00001088 0000000000001048                   1833+         dc ad(@LNAME1088)                                              02-DCCCA
00001090                                    1834+         ds 0d                                                          02-DCCCA
00001090 0000000000001058                   1835+         dc ad($eye0040)                                                02-DCCCA
00001098 0000000000000000                   1836+         dc ad(0)                                                       02-DCCCA
000010A0                                    1837+         ds    0d                                                       01-DCCPR
000010A0                                    1838+rd_clock ds    0d                                                       01-DCCPR
000010A0                                    1839+@REGION_1088_1 ds 0h                                                    01-DCCPR
000010A0 EBEC D008 0024          00000008   1840+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010A6 E3E0 D088 0004          00000088   1841+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010AC E3C0 D090 0004          00000090   1842+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010B2 B904 002E                          1843+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010B6 E3B0 C018 0004          00000018   1844+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000010BC A7EB 00C8               000000C8   1845+         aghi  14,200              increase by frame size               01-DCCPR
000010C0 E3E0 C020 0021          00000020   1846+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000010C6 4720 B020               00000020   1847+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010CA                                    1848+@PER_1088 ds   0h                                                       01-DCCPR
000010CA EBDE 2080 0024          00000080   1849+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000010D0 E3C0 2090 0024          00000090   1850+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000010D6 B904 00D2                          1851+         lgr   13,2                set real frame pointer               01-DCCPR
000010DA B904 00CF                          1852+         lgr   12,15               set base reg                         01-DCCPR
                        000010A0            1853+         using @REGION_1088_1,12                                        01-DCCPR
                                            1854 * ******* End of Prologue
                                            1855 * *
                                            1856 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1857 * ***       struct timeval tv;
                                            1858 * ***       gettimeofday(&tv, ((void *)0));
000010DE 41F0 D0A8               000000A8   1859          LA    15,168(0,13)
000010E2 E3F0 D0B8 0024          000000B8   1860          STG   15,184(0,13)
000010E8 D707 D0C0 D0C0 000000C0 000000C0   1861          XC    192(8,13),192(13)
000010EE 4110 D0B8               000000B8   1862          LA    1,184(0,13)
000010F2 E3F0 C0C0 0004          00001160   1863          LG    15,@lit_1088_41 ; gettimeofday
000010F8                                    1864 @@gen_label45 DS    0H
000010F8 05EF                               1865          BALR  14,15
000010FA                                    1866 @@gen_label46 DS    0H
                                            1867 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                            1868 * usec;
000010FA E3F0 D0A8 0004          000000A8   1869          LG    15,168(0,13)
00001100 C2F0 000F 4240                     1870          MSGFI 15,X'000F4240'
00001106 E310 D0B0 0004          000000B0   1871          LG    1,176(0,13) ; offset of tv_usec in timeval
0000110C B90A 00F1                          1872          ALGR  15,1
                                            1873 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1874 * ***   }
                                            1875 * * **** Start of Epilogue
                                            1876          DCCEPIL
00001110                                    1877+         ds 0h                                                          01-DCCEP
                                            1878+* Epilog
00001110 D707 D088 D088 00000088 00000088   1879+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001116 E3D0 D080 0004          00000080   1880+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000111C E3C0 D090 0004          00000090   1881+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001122 E3B0 C018 0004          00000018   1882+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001128 E3C0 B010 0021          00000010   1883+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000112E E3E0 D008 0004          00000008   1884+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001134 EB1C D020 0004          00000020   1885+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000113A 078E                               1886+         bcr 8,14                if same dsab, just return              01-DCCEP
0000113C E3F0 D010 0024          00000010   1887+         stg 15,16(0,13)         save return code                       01-DCCEP
00001142 E300 D018 0024          00000018   1888+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001148 E3F0 D090 0004          00000090   1889+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000114E E3F0 F018 0004          00000018   1890+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001154 47F0 F040               00000040   1891+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1892+* End of Epilog
                                            1893 * * **** End of Epilogue
00001158                                    1894          DS    0D
00001158 000000C8                           1895 @FRAMESIZE_1088 DC F'200'
0000115C 00000000
00001160 0000000000000000                   1896 @lit_1088_41 DC AD(gettimeofday)
                                            1897          DROP  12
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1898 *
                                            1899 *   DSECT for automatic variables in "rd_clock"
                                            1900 *      (FUNCTION #1088)
                                            1901 *
00000000                00000000 000000B8   1902 @AUTO#rd_clock DSECT
00000000                                    1903          DS    XL168
000000A8                                    1904 rd_clock#tv#0 DS 16XL1     ; tv
                                            1905 *
00001168                00000000 00014658   1906 @CODE    CSECT
                                            1907 *
                                            1908 *
                                            1909 *
                                            1910 * ....... start of rd_timeout_ms
00001168                                    1911 @LNAME1092 DS  0H
00001168 0000000D                           1912          DC    X'0000000D'
0000116C 99846DA389948596                   1913          DC    C'rd_timeout_ms'
00001179 00                                 1914          DC    X'00'
                                            1915 rd_timeout_ms DCCPRLG CINDEX=1092,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1092
                                            1916          macro
                                            1917          dccextrn &m
                                            1918          gblc    &$dccext(1000)
                                            1919          gbla    &$dccexti
                                            1920          lcla    &i
                                            1921 &$dccext(&$dccexti+1) setc    '&m'
                                            1922 &i       seta    1
                                            1923 .loop    aif    (&i gt &$dccexti).around
                                            1924          aif    ('&$dccext(&i)' eq '&m').getout
                                            1925 &i       seta    &i+1
                                            1926          ago     .loop
                                            1927 .around  anop
                                            1928 &$dccexti seta &$dccexti+1
                                            1929          extrn  &m
                                            1930 .getout  anop
                                            1931          mend
00001180                                    1932+$eye0043    ds    0d                                                    02-DCCCA
00001180 C4C3C3                             1933+         dc cl3'DCC'                                                    02-DCCCA
00001183 01                                 1934+         dc xl1'01' format one                                          02-DCCCA
00001184 00000000                           1935+         dc a(0)                                                        02-DCCCA
00001188 0000000000000000                   1936+         dc ad(0)                                                       02-DCCCA
00001190 00000000000000A8                   1937+         dc ad(168)                                                     02-DCCCA
00001198 0000000000000000                   1938+         dc ad(0)                                                       02-DCCCA
000011A0 0000000000001000                   1939+         dc ad(4096)                                                    02-DCCCA
000011A8 20                                 1940+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000011A9 03                                 1941+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000011AA 03                                 1942+         dc al1(3)                                                      02-DCCCA
000011AB 08                                 1943+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000011AC 00                                 1944+         dc bl.8'00000000'                                              02-DCCCA
000011AD 000000                             1945+         dc al3(0)                                                      02-DCCCA
000011B0 0000000000001168                   1946+         dc ad(@LNAME1092)                                              02-DCCCA
000011B8                                    1947+         ds 0d                                                          02-DCCCA
000011B8 0000000000001180                   1948+         dc ad($eye0043)                                                02-DCCCA
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000011C0 0000000000000000                   1949+         dc ad(0)                                                       02-DCCCA
000011C8                                    1950+         ds    0d                                                       01-DCCPR
000011C8                                    1951+rd_timeout_ms ds 0d                                                     01-DCCPR
000011C8                                    1952+@REGION_1092_1 ds 0h                                                    01-DCCPR
000011C8 EBEC D008 0024          00000008   1953+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000011CE B904 00CF                          1954+         lgr   12,15               set base reg                         01-DCCPR
                        000011C8            1955+         using @REGION_1092_1,12                                        01-DCCPR
                                            1956 * ******* End of Prologue
                                            1957 * *
                                            1958 * ***           if (timeout_us <= 0)
000011D2 E3F0 1000 0004          00000000   1959          LG    15,0(0,1)   ; timeout_us
000011D8 B902 001F                          1960          LTGR  1,15
000011DC 4720 C024               000011EC   1961          BH    @L46
                                            1962 * ***                   return (int)timeout_us;
000011E0 B914 00FF                          1963          LGFR  15,15
000011E4 47F0 C036               000011FE   1964          B     @ret_lab_1092
000011E8                                    1965          DS    0D
000011E8 000003E8                           1966 @lit_1092_43 DC F'1000' 0x000003e8
                                            1967 * ***           else
000011EC                                    1968 @L46     DS    0H
                                            1969 * ***
                                            1970 * ***
                                            1971 * ***
                                            1972 * ***                   return (int)((timeout_us + 999) / 1000);
000011EC A7FB 03E7               000003E7   1973          AGHI  15,999
000011F0 B904 003F                          1974          LGR   3,15
000011F4 E320 C020 001D          000011E8   1975          DSGF  2,@lit_1092_43
000011FA B914 00F3                          1976          LGFR  15,3
                                            1977 * ***   }
000011FE                                    1978 @ret_lab_1092 DS 0H
                                            1979 * * **** Start of Epilogue
                                            1980          DCCEPIL
000011FE                                    1981+         ds 0h                                                          01-DCCEP
                                            1982+* Epilog
                                            1983+* Epilog
000011FE E3E0 D008 0004          00000008   1984+         lg    14,8(,13) restore the reg                                01-DCCEP
00001204 EB1C D020 0004          00000020   1985+         lmg   1,12,32(13)                                              01-DCCEP
0000120A 07FE                               1986+         br   14                                                        01-DCCEP
                                            1987+* End of Epilog
                                            1988 * * **** End of Epilogue
                                            1989          DROP  12
                                            1990 *
                                            1991 *   DSECT for automatic variables in "rd_timeout_ms"
                                            1992 *      (FUNCTION #1092)
                                            1993 *
00000000                00000000 000000A8   1994 @AUTO#rd_timeout_ms DSECT
00000000                                    1995          DS    XL168
                                            1996 *
0000120C                00000000 00014658   1997 @CODE    CSECT
                                            1998 *
                                            1999 *
                                            2000 *
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2001 * ....... start of rd_timeout_init
0000120C                                    2002 @LNAME1093 DS  0H
0000120C 0000000F                           2003          DC    X'0000000F'
00001210 99846DA389948596                   2004          DC    C'rd_timeout_init'
0000121F 00                                 2005          DC    X'00'
                                            2006 rd_timeout_init DCCPRLG CINDEX=1093,BASER=12,FRAME=168,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1093
                                            2007          macro
                                            2008          dccextrn &m
                                            2009          gblc    &$dccext(1000)
                                            2010          gbla    &$dccexti
                                            2011          lcla    &i
                                            2012 &$dccext(&$dccexti+1) setc    '&m'
                                            2013 &i       seta    1
                                            2014 .loop    aif    (&i gt &$dccexti).around
                                            2015          aif    ('&$dccext(&i)' eq '&m').getout
                                            2016 &i       seta    &i+1
                                            2017          ago     .loop
                                            2018 .around  anop
                                            2019 &$dccexti seta &$dccexti+1
                                            2020          extrn  &m
                                            2021 .getout  anop
                                            2022          mend
00001220                                    2023+$eye0046    ds    0d                                                    02-DCCCA
00001220 C4C3C3                             2024+         dc cl3'DCC'                                                    02-DCCCA
00001223 01                                 2025+         dc xl1'01' format one                                          02-DCCCA
00001224 00000000                           2026+         dc a(0)                                                        02-DCCCA
00001228 0000000000001292                   2027+         dc ad(@PER_1093)                                               02-DCCCA
00001230 00000000000000A8                   2028+         dc ad(168)                                                     02-DCCCA
00001238 0000000000000000                   2029+         dc ad(0)                                                       02-DCCCA
00001240 0000000000001000                   2030+         dc ad(4096)                                                    02-DCCCA
00001248 20                                 2031+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001249 03                                 2032+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000124A 03                                 2033+         dc al1(3)                                                      02-DCCCA
0000124B 08                                 2034+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000124C 00                                 2035+         dc bl.8'00000000'                                              02-DCCCA
0000124D 000000                             2036+         dc al3(0)                                                      02-DCCCA
00001250 000000000000120C                   2037+         dc ad(@LNAME1093)                                              02-DCCCA
00001258                                    2038+         ds 0d                                                          02-DCCCA
00001258 0000000000001220                   2039+         dc ad($eye0046)                                                02-DCCCA
00001260 0000000000000000                   2040+         dc ad(0)                                                       02-DCCCA
00001268                                    2041+         ds    0d                                                       01-DCCPR
00001268                                    2042+rd_timeout_init ds 0d                                                   01-DCCPR
00001268                                    2043+@REGION_1093_1 ds 0h                                                    01-DCCPR
00001268 EBEC D008 0024          00000008   2044+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000126E E3E0 D088 0004          00000088   2045+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001274 E3C0 D090 0004          00000090   2046+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000127A B904 002E                          2047+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000127E E3B0 C018 0004          00000018   2048+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001284 A7EB 00A8               000000A8   2049+         aghi  14,168              increase by frame size               01-DCCPR
00001288 E3E0 C020 0021          00000020   2050+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000128E 4720 B020               00000020   2051+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001292                                    2052+@PER_1093 ds   0h                                                       01-DCCPR
00001292 EBDE 2080 0024          00000080   2053+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001298 E3C0 2090 0024          00000090   2054+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000129E B904 00D2                          2055+         lgr   13,2                set real frame pointer               01-DCCPR
000012A2 B904 00CF                          2056+         lgr   12,15               set base reg                         01-DCCPR
                        00001268            2057+         using @REGION_1093_1,12                                        01-DCCPR
                                            2058 * ******* End of Prologue
                                            2059 * *
                                            2060 * ***      if (timeout_ms == -1 ||
000012A6 5820 1004               00000004   2061          L     2,4(0,1)    ; timeout_ms
000012AA A72E FFFF               0000FFFF   2062          CHI   2,-1
000012AE 4780 C050               000012B8   2063          BE    @L49
                                            2064 * ***          timeout_ms == 0)
000012B2 1222                               2065          LTR   2,2
000012B4 4770 C068               000012D0   2066          BNE   @L48
000012B8                                    2067 @L49     DS    0H
                                            2068 * ***         return timeout_ms;
000012B8 B914 00F2                          2069          LGFR  15,2
000012BC 47F0 C078               000012E0   2070          B     @ret_lab_1093
000012C0                                    2071          DS    0D
000012C0 000000A8                           2072 @FRAMESIZE_1093 DC F'168'
000012C4 00000000
000012C8 00000000000010A0                   2073 @lit_1093_44 DC AD(rd_clock)
000012D0                                    2074 @L48     DS    0H
                                            2075 * ***
                                            2076 * ***      return rd_clock() + (timeout_ms * 1000);
000012D0 E3F0 C060 0004          000012C8   2077          LG    15,@lit_1093_44 ; rd_clock
000012D6                                    2078 @@gen_label50 DS    0H
000012D6 05EF                               2079          BALR  14,15
000012D8                                    2080 @@gen_label51 DS    0H
000012D8 A72C 03E8               000003E8   2081          MHI   2,1000
000012DC B918 00F2                          2082          AGFR  15,2
                                            2083 * ***   }
000012E0                                    2084 @ret_lab_1093 DS 0H
                                            2085 * * **** Start of Epilogue
                                            2086          DCCEPIL
000012E0                                    2087+         ds 0h                                                          01-DCCEP
                                            2088+* Epilog
000012E0 D707 D088 D088 00000088 00000088   2089+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012E6 E3D0 D080 0004          00000080   2090+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012EC E3C0 D090 0004          00000090   2091+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012F2 E3B0 C018 0004          00000018   2092+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012F8 E3C0 B010 0021          00000010   2093+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012FE E3E0 D008 0004          00000008   2094+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001304 EB1C D020 0004          00000020   2095+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000130A 078E                               2096+         bcr 8,14                if same dsab, just return              01-DCCEP
0000130C E3F0 D010 0024          00000010   2097+         stg 15,16(0,13)         save return code                       01-DCCEP
00001312 E300 D018 0024          00000018   2098+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001318 E3F0 D090 0004          00000090   2099+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000131E E3F0 F018 0004          00000018   2100+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001324 47F0 F040               00000040   2101+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2102+* End of Epilog
                                                                                                                           Page   50 
  Active Usings: @REGION_1093_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2103 * * **** End of Epilogue
                                            2104          DROP  12
                                            2105 *
                                            2106 *   DSECT for automatic variables in "rd_timeout_init"
                                            2107 *      (FUNCTION #1093)
                                            2108 *
00000000                00000000 000000A8   2109 @AUTO#rd_timeout_init DSECT
00000000                                    2110          DS    XL168
                                            2111 *
00001328                00000000 00014658   2112 @CODE    CSECT
                                            2113 *
                                            2114 *
                                            2115 *
                                            2116 * ....... start of rd_timeout_remains_us
00001328                                    2117 @LNAME1096 DS  0H
00001328 00000015                           2118          DC    X'00000015'
0000132C 99846DA389948596                   2119          DC    C'rd_timeout_remains_us'
00001341 00                                 2120          DC    X'00'
                                            2121 rd_timeout_remains_us DCCPRLG CINDEX=1096,BASER=12,FRAME=176,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1096
                                            2122          macro
                                            2123          dccextrn &m
                                            2124          gblc    &$dccext(1000)
                                            2125          gbla    &$dccexti
                                            2126          lcla    &i
                                            2127 &$dccext(&$dccexti+1) setc    '&m'
                                            2128 &i       seta    1
                                            2129 .loop    aif    (&i gt &$dccexti).around
                                            2130          aif    ('&$dccext(&i)' eq '&m').getout
                                            2131 &i       seta    &i+1
                                            2132          ago     .loop
                                            2133 .around  anop
                                            2134 &$dccexti seta &$dccexti+1
                                            2135          extrn  &m
                                            2136 .getout  anop
                                            2137          mend
00001348                                    2138+$eye0049    ds    0d                                                    02-DCCCA
00001348 C4C3C3                             2139+         dc cl3'DCC'                                                    02-DCCCA
0000134B 01                                 2140+         dc xl1'01' format one                                          02-DCCCA
0000134C 00000000                           2141+         dc a(0)                                                        02-DCCCA
00001350 00000000000013BA                   2142+         dc ad(@PER_1096)                                               02-DCCCA
00001358 00000000000000B0                   2143+         dc ad(176)                                                     02-DCCCA
00001360 0000000000000000                   2144+         dc ad(0)                                                       02-DCCCA
00001368 0000000000001000                   2145+         dc ad(4096)                                                    02-DCCCA
00001370 20                                 2146+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001371 03                                 2147+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001372 03                                 2148+         dc al1(3)                                                      02-DCCCA
00001373 08                                 2149+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001374 00                                 2150+         dc bl.8'00000000'                                              02-DCCCA
00001375 000000                             2151+         dc al3(0)                                                      02-DCCCA
00001378 0000000000001328                   2152+         dc ad(@LNAME1096)                                              02-DCCCA
00001380                                    2153+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001380 0000000000001348                   2154+         dc ad($eye0049)                                                02-DCCCA
00001388 0000000000000000                   2155+         dc ad(0)                                                       02-DCCCA
00001390                                    2156+         ds    0d                                                       01-DCCPR
00001390                                    2157+rd_timeout_remains_us ds 0d                                             01-DCCPR
00001390                                    2158+@REGION_1096_1 ds 0h                                                    01-DCCPR
00001390 EBEC D008 0024          00000008   2159+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001396 E3E0 D088 0004          00000088   2160+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000139C E3C0 D090 0004          00000090   2161+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000013A2 B904 002E                          2162+         lgr   2,14                copy addr of our savearea            01-DCCPR
000013A6 E3B0 C018 0004          00000018   2163+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000013AC A7EB 00B0               000000B0   2164+         aghi  14,176              increase by frame size               01-DCCPR
000013B0 E3E0 C020 0021          00000020   2165+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000013B6 4720 B020               00000020   2166+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000013BA                                    2167+@PER_1096 ds   0h                                                       01-DCCPR
000013BA EBDE 2080 0024          00000080   2168+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000013C0 E3C0 2090 0024          00000090   2169+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000013C6 B904 00D2                          2170+         lgr   13,2                set real frame pointer               01-DCCPR
000013CA B904 00CF                          2171+         lgr   12,15               set base reg                         01-DCCPR
                        00001390            2172+         using @REGION_1096_1,12                                        01-DCCPR
                                            2173 * ******* End of Prologue
                                            2174 * *
000013CE E320 1000 0004          00000000   2175          LG    2,0(0,1)    ; abs_timeout
                                            2176 * ***           rd_ts_t timeout_us;
                                            2177 * ***
                                            2178 * ***           if (abs_timeout == -1 ||
000013D4 A72F FFFF               0000FFFF   2179          CGHI  2,-1
000013D8 4780 C054               000013E4   2180          BE    @L59
                                            2181 * ***               abs_timeout == 0)
000013DC B902 0012                          2182          LTGR  1,2
000013E0 4770 C070               00001400   2183          BNE   @L58
000013E4                                    2184 @L59     DS    0H
                                            2185 * ***                   return (rd_ts_t)abs_timeout;
000013E4 B904 00F2                          2186          LGR   15,2
000013E8 47F0 C090               00001420   2187          B     @ret_lab_1096
000013F0                                    2188          DS    0D
000013F0 000000B0                           2189 @FRAMESIZE_1096 DC F'176'
000013F4 00000000
000013F8 00000000000010A0                   2190 @lit_1096_46 DC AD(rd_clock)
00001400                                    2191 @L58     DS    0H
                                            2192 * ***
                                            2193 * ***           timeout_us = abs_timeout - rd_clock();
00001400 E3F0 C068 0004          000013F8   2194          LG    15,@lit_1096_46 ; rd_clock
00001406                                    2195 @@gen_label54 DS    0H
00001406 05EF                               2196          BALR  14,15
00001408                                    2197 @@gen_label55 DS    0H
00001408 B909 002F                          2198          SGR   2,15
                                            2199 * ***           if (timeout_us <= 0)
0000140C B902 0012                          2200          LTGR  1,2
00001410 4720 C08C               0000141C   2201          BH    @L60
                                            2202 * ***                   return 0;
00001414 A7F9 0000               00000000   2203          LGHI  15,0        ; 0
00001418 47F0 C090               00001420   2204          B     @ret_lab_1096
                                                                                                                           Page   52 
  Active Usings: @REGION_1096_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2205 * ***           else
0000141C                                    2206 @L60     DS    0H
                                            2207 * ***                   return timeout_us;
0000141C B904 00F2                          2208          LGR   15,2
                                            2209 * ***   }
00001420                                    2210 @ret_lab_1096 DS 0H
                                            2211 * * **** Start of Epilogue
                                            2212          DCCEPIL
00001420                                    2213+         ds 0h                                                          01-DCCEP
                                            2214+* Epilog
00001420 D707 D088 D088 00000088 00000088   2215+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001426 E3D0 D080 0004          00000080   2216+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000142C E3C0 D090 0004          00000090   2217+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001432 E3B0 C018 0004          00000018   2218+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001438 E3C0 B010 0021          00000010   2219+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000143E E3E0 D008 0004          00000008   2220+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001444 EB1C D020 0004          00000020   2221+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000144A 078E                               2222+         bcr 8,14                if same dsab, just return              01-DCCEP
0000144C E3F0 D010 0024          00000010   2223+         stg 15,16(0,13)         save return code                       01-DCCEP
00001452 E300 D018 0024          00000018   2224+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001458 E3F0 D090 0004          00000090   2225+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000145E E3F0 F018 0004          00000018   2226+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001464 47F0 F040               00000040   2227+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2228+* End of Epilog
                                            2229 * * **** End of Epilogue
                                            2230          DROP  12
                                            2231 *
                                            2232 *   DSECT for automatic variables in "rd_timeout_remains_us"
                                            2233 *      (FUNCTION #1096)
                                            2234 *
00000000                00000000 000000B0   2235 @AUTO#rd_timeout_remains_us DSECT
00000000                                    2236          DS    XL168
000000A8                                    2237 rd_timeout_remains_us#timeout_us#0 DS 8XL1 ; timeout_us
                                            2238 *
00001468                00000000 00014658   2239 @CODE    CSECT
                                            2240 *
                                            2241 *
                                            2242 *
                                            2243 * ....... start of rd_timeout_remains
00001468                                    2244 @LNAME1097 DS  0H
00001468 00000012                           2245          DC    X'00000012'
0000146C 99846DA389948596                   2246          DC    C'rd_timeout_remains'
0000147E 00                                 2247          DC    X'00'
                                            2248 rd_timeout_remains DCCPRLG CINDEX=1097,BASER=12,FRAME=176,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1097
                                            2249          macro
                                            2250          dccextrn &m
                                            2251          gblc    &$dccext(1000)
                                            2252          gbla    &$dccexti
                                            2253          lcla    &i
                                            2254 &$dccext(&$dccexti+1) setc    '&m'
                                            2255 &i       seta    1
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2256 .loop    aif    (&i gt &$dccexti).around
                                            2257          aif    ('&$dccext(&i)' eq '&m').getout
                                            2258 &i       seta    &i+1
                                            2259          ago     .loop
                                            2260 .around  anop
                                            2261 &$dccexti seta &$dccexti+1
                                            2262          extrn  &m
                                            2263 .getout  anop
                                            2264          mend
00001480                                    2265+$eye0052    ds    0d                                                    02-DCCCA
00001480 C4C3C3                             2266+         dc cl3'DCC'                                                    02-DCCCA
00001483 01                                 2267+         dc xl1'01' format one                                          02-DCCCA
00001484 00000000                           2268+         dc a(0)                                                        02-DCCCA
00001488 00000000000014F2                   2269+         dc ad(@PER_1097)                                               02-DCCCA
00001490 00000000000000B0                   2270+         dc ad(176)                                                     02-DCCCA
00001498 0000000000000000                   2271+         dc ad(0)                                                       02-DCCCA
000014A0 0000000000001000                   2272+         dc ad(4096)                                                    02-DCCCA
000014A8 20                                 2273+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014A9 03                                 2274+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014AA 03                                 2275+         dc al1(3)                                                      02-DCCCA
000014AB 08                                 2276+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014AC 00                                 2277+         dc bl.8'00000000'                                              02-DCCCA
000014AD 000000                             2278+         dc al3(0)                                                      02-DCCCA
000014B0 0000000000001468                   2279+         dc ad(@LNAME1097)                                              02-DCCCA
000014B8                                    2280+         ds 0d                                                          02-DCCCA
000014B8 0000000000001480                   2281+         dc ad($eye0052)                                                02-DCCCA
000014C0 0000000000000000                   2282+         dc ad(0)                                                       02-DCCCA
000014C8                                    2283+         ds    0d                                                       01-DCCPR
000014C8                                    2284+rd_timeout_remains ds 0d                                                01-DCCPR
000014C8                                    2285+@REGION_1097_1 ds 0h                                                    01-DCCPR
000014C8 EBEC D008 0024          00000008   2286+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000014CE E3E0 D088 0004          00000088   2287+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000014D4 E3C0 D090 0004          00000090   2288+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000014DA B904 002E                          2289+         lgr   2,14                copy addr of our savearea            01-DCCPR
000014DE E3B0 C018 0004          00000018   2290+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000014E4 A7EB 00B0               000000B0   2291+         aghi  14,176              increase by frame size               01-DCCPR
000014E8 E3E0 C020 0021          00000020   2292+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000014EE 4720 B020               00000020   2293+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000014F2                                    2294+@PER_1097 ds   0h                                                       01-DCCPR
000014F2 EBDE 2080 0024          00000080   2295+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000014F8 E3C0 2090 0024          00000090   2296+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000014FE B904 00D2                          2297+         lgr   13,2                set real frame pointer               01-DCCPR
00001502 B904 00CF                          2298+         lgr   12,15               set base reg                         01-DCCPR
                        000014C8            2299+         using @REGION_1097_1,12                                        01-DCCPR
                                            2300 * ******* End of Prologue
                                            2301 * *
                                            2302 * ***           return rd_timeout_ms(rd_timeout_remains_us(abs_timeout\
                                            2303 * ));
00001506 E3F0 1000 0004          00000000   2304          LG    15,0(0,1)   ; abs_timeout
0000150C E3F0 D0A8 0024          000000A8   2305          STG   15,168(0,13)
00001512 4110 D0A8               000000A8   2306          LA    1,168(0,13)
00001516 E3F0 C0C0 0004          00001588   2307          LG    15,@lit_1097_49 ; rd_timeout_remains_us
                                                                                                                           Page   54 
  Active Usings: @REGION_1097_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000151C                                    2308 @@gen_label57 DS    0H
0000151C 05EF                               2309          BALR  14,15
0000151E                                    2310 @@gen_label58 DS    0H
0000151E E3F0 D0A8 0024          000000A8   2311          STG   15,168(0,13)
00001524 4110 D0A8               000000A8   2312          LA    1,168(0,13)
00001528 E3F0 C0C8 0004          00001590   2313          LG    15,@lit_1097_50 ; rd_timeout_ms
0000152E                                    2314 @@gen_label59 DS    0H
0000152E 05EF                               2315          BALR  14,15
00001530                                    2316 @@gen_label60 DS    0H
00001530 B914 00FF                          2317          LGFR  15,15
                                            2318 * ***   }
                                            2319 * * **** Start of Epilogue
                                            2320          DCCEPIL
00001534                                    2321+         ds 0h                                                          01-DCCEP
                                            2322+* Epilog
00001534 D707 D088 D088 00000088 00000088   2323+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000153A E3D0 D080 0004          00000080   2324+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001540 E3C0 D090 0004          00000090   2325+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001546 E3B0 C018 0004          00000018   2326+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000154C E3C0 B010 0021          00000010   2327+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001552 E3E0 D008 0004          00000008   2328+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001558 EB1C D020 0004          00000020   2329+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000155E 078E                               2330+         bcr 8,14                if same dsab, just return              01-DCCEP
00001560 E3F0 D010 0024          00000010   2331+         stg 15,16(0,13)         save return code                       01-DCCEP
00001566 E300 D018 0024          00000018   2332+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000156C E3F0 D090 0004          00000090   2333+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001572 E3F0 F018 0004          00000018   2334+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001578 47F0 F040               00000040   2335+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2336+* End of Epilog
                                            2337 * * **** End of Epilogue
00001580                                    2338          DS    0D
00001580 000000B0                           2339 @FRAMESIZE_1097 DC F'176'
00001584 00000000
00001588 0000000000001390                   2340 @lit_1097_49 DC AD(rd_timeout_remains_us)
00001590 00000000000011C8                   2341 @lit_1097_50 DC AD(rd_timeout_ms)
                                            2342          DROP  12
                                            2343 *
                                            2344 *   DSECT for automatic variables in "rd_timeout_remains"
                                            2345 *      (FUNCTION #1097)
                                            2346 *
00000000                00000000 000000A8   2347 @AUTO#rd_timeout_remains DSECT
00000000                                    2348          DS    XL168
                                            2349 *
00001598                00000000 00014658   2350 @CODE    CSECT
                                            2351 *
                                            2352 *
                                            2353 *
                                            2354 * ....... start of rd_timeout_remains_limit0
00001598                                    2355 @LNAME1098 DS  0H
00001598 00000019                           2356          DC    X'00000019'
0000159C 99846DA389948596                   2357          DC    C'rd_timeout_remains_limit0'
000015B5 00                                 2358          DC    X'00'
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2359 rd_timeout_remains_limit0 DCCPRLG CINDEX=1098,BASER=12,FRAME=168,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1098
                                            2360          macro
                                            2361          dccextrn &m
                                            2362          gblc    &$dccext(1000)
                                            2363          gbla    &$dccexti
                                            2364          lcla    &i
                                            2365 &$dccext(&$dccexti+1) setc    '&m'
                                            2366 &i       seta    1
                                            2367 .loop    aif    (&i gt &$dccexti).around
                                            2368          aif    ('&$dccext(&i)' eq '&m').getout
                                            2369 &i       seta    &i+1
                                            2370          ago     .loop
                                            2371 .around  anop
                                            2372 &$dccexti seta &$dccexti+1
                                            2373          extrn  &m
                                            2374 .getout  anop
                                            2375          mend
000015B8                                    2376+$eye0055    ds    0d                                                    02-DCCCA
000015B8 C4C3C3                             2377+         dc cl3'DCC'                                                    02-DCCCA
000015BB 01                                 2378+         dc xl1'01' format one                                          02-DCCCA
000015BC 00000000                           2379+         dc a(0)                                                        02-DCCCA
000015C0 0000000000000000                   2380+         dc ad(0)                                                       02-DCCCA
000015C8 00000000000000A8                   2381+         dc ad(168)                                                     02-DCCCA
000015D0 0000000000000000                   2382+         dc ad(0)                                                       02-DCCCA
000015D8 0000000000001000                   2383+         dc ad(4096)                                                    02-DCCCA
000015E0 20                                 2384+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000015E1 03                                 2385+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000015E2 03                                 2386+         dc al1(3)                                                      02-DCCCA
000015E3 08                                 2387+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000015E4 00                                 2388+         dc bl.8'00000000'                                              02-DCCCA
000015E5 000000                             2389+         dc al3(0)                                                      02-DCCCA
000015E8 0000000000001598                   2390+         dc ad(@LNAME1098)                                              02-DCCCA
000015F0                                    2391+         ds 0d                                                          02-DCCCA
000015F0 00000000000015B8                   2392+         dc ad($eye0055)                                                02-DCCCA
000015F8 0000000000000000                   2393+         dc ad(0)                                                       02-DCCCA
00001600                                    2394+         ds    0d                                                       01-DCCPR
00001600                                    2395+rd_timeout_remains_limit0 ds 0d                                         01-DCCPR
00001600                                    2396+@REGION_1098_1 ds 0h                                                    01-DCCPR
00001600 EBEC D008 0024          00000008   2397+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001606 B904 00CF                          2398+         lgr   12,15               set base reg                         01-DCCPR
                        00001600            2399+         using @REGION_1098_1,12                                        01-DCCPR
                                            2400 * ******* End of Prologue
                                            2401 * *
                                            2402 * ***      if (remains_ms == -1 || remains_ms > limit_ms)
0000160A 58F0 1004               00000004   2403          L     15,4(0,1)   ; remains_ms
0000160E A7FE FFFF               0000FFFF   2404          CHI   15,-1
00001612 4780 C01E               0000161E   2405          BE    @L63
00001616 59F0 100C               0000000C   2406          C     15,12(0,1)
0000161A 47D0 C028               00001628   2407          BNH   @L62
0000161E                                    2408 @L63     DS    0H
                                            2409 * ***         return limit_ms;
                                                                                                                           Page   56 
  Active Usings: @REGION_1098_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000161E E3F0 100C 0014          0000000C   2410          LGF   15,12(0,1)  ; limit_ms
00001624 47F0 C02C               0000162C   2411          B     @ret_lab_1098
                                            2412 * ***      else
00001628                                    2413 @L62     DS    0H
                                            2414 * ***         return remains_ms;
00001628 B914 00FF                          2415          LGFR  15,15
                                            2416 * ***   }
0000162C                                    2417 @ret_lab_1098 DS 0H
                                            2418 * * **** Start of Epilogue
                                            2419          DCCEPIL
0000162C                                    2420+         ds 0h                                                          01-DCCEP
                                            2421+* Epilog
                                            2422+* Epilog
0000162C E3E0 D008 0004          00000008   2423+         lg    14,8(,13) restore the reg                                01-DCCEP
00001632 EB1C D020 0004          00000020   2424+         lmg   1,12,32(13)                                              01-DCCEP
00001638 07FE                               2425+         br   14                                                        01-DCCEP
                                            2426+* End of Epilog
                                            2427 * * **** End of Epilogue
                                            2428          DROP  12
                                            2429 *
                                            2430 *   DSECT for automatic variables in "rd_timeout_remains_limit0"
                                            2431 *      (FUNCTION #1098)
                                            2432 *
00000000                00000000 000000A8   2433 @AUTO#rd_timeout_remains_limit0 DSECT
00000000                                    2434          DS    XL168
                                            2435 *
0000163A                00000000 00014658   2436 @CODE    CSECT
                                            2437 *
                                            2438 *
                                            2439 *
                                            2440 * ....... start of rd_timeout_expired
0000163A                                    2441 @LNAME1100 DS  0H
0000163A 00000012                           2442          DC    X'00000012'
0000163E 99846DA389948596                   2443          DC    C'rd_timeout_expired'
00001650 00                                 2444          DC    X'00'
                                            2445 rd_timeout_expired DCCPRLG CINDEX=1100,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1100
                                            2446          macro
                                            2447          dccextrn &m
                                            2448          gblc    &$dccext(1000)
                                            2449          gbla    &$dccexti
                                            2450          lcla    &i
                                            2451 &$dccext(&$dccexti+1) setc    '&m'
                                            2452 &i       seta    1
                                            2453 .loop    aif    (&i gt &$dccexti).around
                                            2454          aif    ('&$dccext(&i)' eq '&m').getout
                                            2455 &i       seta    &i+1
                                            2456          ago     .loop
                                            2457 .around  anop
                                            2458 &$dccexti seta &$dccexti+1
                                            2459          extrn  &m
                                            2460 .getout  anop
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2461          mend
00001658                                    2462+$eye0058    ds    0d                                                    02-DCCCA
00001658 C4C3C3                             2463+         dc cl3'DCC'                                                    02-DCCCA
0000165B 01                                 2464+         dc xl1'01' format one                                          02-DCCCA
0000165C 00000000                           2465+         dc a(0)                                                        02-DCCCA
00001660 0000000000000000                   2466+         dc ad(0)                                                       02-DCCCA
00001668 00000000000000A8                   2467+         dc ad(168)                                                     02-DCCCA
00001670 0000000000000000                   2468+         dc ad(0)                                                       02-DCCCA
00001678 0000000000001000                   2469+         dc ad(4096)                                                    02-DCCCA
00001680 20                                 2470+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001681 03                                 2471+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001682 03                                 2472+         dc al1(3)                                                      02-DCCCA
00001683 08                                 2473+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001684 00                                 2474+         dc bl.8'00000000'                                              02-DCCCA
00001685 000000                             2475+         dc al3(0)                                                      02-DCCCA
00001688 000000000000163A                   2476+         dc ad(@LNAME1100)                                              02-DCCCA
00001690                                    2477+         ds 0d                                                          02-DCCCA
00001690 0000000000001658                   2478+         dc ad($eye0058)                                                02-DCCCA
00001698 0000000000000000                   2479+         dc ad(0)                                                       02-DCCCA
000016A0                                    2480+         ds    0d                                                       01-DCCPR
000016A0                                    2481+rd_timeout_expired ds 0d                                                01-DCCPR
000016A0                                    2482+@REGION_1100_1 ds 0h                                                    01-DCCPR
000016A0 EBEC D008 0024          00000008   2483+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2484 * ******* End of Prologue
                                            2485 * *
                                            2486 * ***      return timeout_ms == 0;
000016A6 A7F8 0000               00000000   2487          LHI   15,0        ; 0
000016AA 57F0 1004               00000004   2488          X     15,4(0,1)
000016AE 10FF                               2489          LPR   15,15
000016B0 A7FA FFFF               0000FFFF   2490          AHI   15,-1
000016B4 88F0 001F               0000001F   2491          SRL   15,31(0)
000016B8 B914 00FF                          2492          LGFR  15,15
                                            2493 * ***   }
                                            2494 * * **** Start of Epilogue
                                            2495          DCCEPIL
000016BC                                    2496+         ds 0h                                                          01-DCCEP
                                            2497+* Epilog
                                            2498+* Epilog
000016BC E3E0 D008 0004          00000008   2499+         lg    14,8(,13) restore the reg                                01-DCCEP
000016C2 EB1C D020 0004          00000020   2500+         lmg   1,12,32(13)                                              01-DCCEP
000016C8 07FE                               2501+         br   14                                                        01-DCCEP
                                            2502+* End of Epilog
                                            2503 * * **** End of Epilogue
                                            2504 *
                                            2505 *   DSECT for automatic variables in "rd_timeout_expired"
                                            2506 *      (FUNCTION #1100)
                                            2507 *
00000000                00000000 000000A8   2508 @AUTO#rd_timeout_expired DSECT
00000000                                    2509          DS    XL168
                                            2510 *
000016CA                00000000 00014658   2511 @CODE    CSECT
                                            2512 *
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2513 *
                                            2514 *
                                            2515 * ....... start of rd_slice_abs_offset
000016CA                                    2516 @LNAME1286 DS  0H
000016CA 00000013                           2517          DC    X'00000013'
000016CE 99846DA293898385                   2518          DC    C'rd_slice_abs_offset'
000016E1 00                                 2519          DC    X'00'
                                            2520 rd_slice_abs_offset DCCPRLG CINDEX=1286,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1286
                                            2521          macro
                                            2522          dccextrn &m
                                            2523          gblc    &$dccext(1000)
                                            2524          gbla    &$dccexti
                                            2525          lcla    &i
                                            2526 &$dccext(&$dccexti+1) setc    '&m'
                                            2527 &i       seta    1
                                            2528 .loop    aif    (&i gt &$dccexti).around
                                            2529          aif    ('&$dccext(&i)' eq '&m').getout
                                            2530 &i       seta    &i+1
                                            2531          ago     .loop
                                            2532 .around  anop
                                            2533 &$dccexti seta &$dccexti+1
                                            2534          extrn  &m
                                            2535 .getout  anop
                                            2536          mend
000016E8                                    2537+$eye0061    ds    0d                                                    02-DCCCA
000016E8 C4C3C3                             2538+         dc cl3'DCC'                                                    02-DCCCA
000016EB 01                                 2539+         dc xl1'01' format one                                          02-DCCCA
000016EC 00000000                           2540+         dc a(0)                                                        02-DCCCA
000016F0 0000000000000000                   2541+         dc ad(0)                                                       02-DCCCA
000016F8 00000000000000A8                   2542+         dc ad(168)                                                     02-DCCCA
00001700 0000000000000000                   2543+         dc ad(0)                                                       02-DCCCA
00001708 0000000000001000                   2544+         dc ad(4096)                                                    02-DCCCA
00001710 20                                 2545+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001711 03                                 2546+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001712 03                                 2547+         dc al1(3)                                                      02-DCCCA
00001713 08                                 2548+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001714 00                                 2549+         dc bl.8'00000000'                                              02-DCCCA
00001715 000000                             2550+         dc al3(0)                                                      02-DCCCA
00001718 00000000000016CA                   2551+         dc ad(@LNAME1286)                                              02-DCCCA
00001720                                    2552+         ds 0d                                                          02-DCCCA
00001720 00000000000016E8                   2553+         dc ad($eye0061)                                                02-DCCCA
00001728 0000000000000000                   2554+         dc ad(0)                                                       02-DCCCA
00001730                                    2555+         ds    0d                                                       01-DCCPR
00001730                                    2556+rd_slice_abs_offset ds 0d                                               01-DCCPR
00001730                                    2557+@REGION_1286_1 ds 0h                                                    01-DCCPR
00001730 EBEC D008 0024          00000008   2558+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001736 B904 00CF                          2559+         lgr   12,15               set base reg                         01-DCCPR
                        00001730            2560+         using @REGION_1286_1,12                                        01-DCCPR
                                            2561 * ******* End of Prologue
                                            2562 * *
                                            2563 * ***           if (((!slice->seg)))
                                                                                                                           Page   59 
  Active Usings: @REGION_1286_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000173A E3F0 1000 0004          00000000   2564          LG    15,0(0,1)   ; slice
00001740 E310 F008 0002          00000008   2565          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00001746 4770 C024               00001754   2566          BNZ   @L102
                                            2567 * ***                   return slice->end;
0000174A E3F0 F020 0004          00000020   2568          LG    15,32(0,15) ; offset of end in rd_slice_s
00001750 47F0 C03A               0000176A   2569          B     @ret_lab_1286
00001754                                    2570 @L102    DS    0H
                                            2571 * ***
                                            2572 * ***           return slice->seg->seg_absof + slice->rof;
00001754 E310 F008 0004          00000008   2573          LG    1,8(0,15)   ; offset of seg in rd_slice_s
0000175A E310 1028 0004          00000028   2574          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00001760 E310 F010 000A          00000010   2575          ALG   1,16(0,15)
00001766 B904 00F1                          2576          LGR   15,1
                                            2577 * ***   }
0000176A                                    2578 @ret_lab_1286 DS 0H
                                            2579 * * **** Start of Epilogue
                                            2580          DCCEPIL
0000176A                                    2581+         ds 0h                                                          01-DCCEP
                                            2582+* Epilog
                                            2583+* Epilog
0000176A E3E0 D008 0004          00000008   2584+         lg    14,8(,13) restore the reg                                01-DCCEP
00001770 EB1C D020 0004          00000020   2585+         lmg   1,12,32(13)                                              01-DCCEP
00001776 07FE                               2586+         br   14                                                        01-DCCEP
                                            2587+* End of Epilog
                                            2588 * * **** End of Epilogue
                                            2589          DROP  12
                                            2590 *
                                            2591 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                            2592 *      (FUNCTION #1286)
                                            2593 *
00000000                00000000 000000A8   2594 @AUTO#rd_slice_abs_offset DSECT
00000000                                    2595          DS    XL168
                                            2596 *
00001778                00000000 00014658   2597 @CODE    CSECT
                                            2598 *
                                            2599 *
                                            2600 *
                                            2601 * ....... start of rd_slice_offset
00001778                                    2602 @LNAME1287 DS  0H
00001778 0000000F                           2603          DC    X'0000000F'
0000177C 99846DA293898385                   2604          DC    C'rd_slice_offset'
0000178B 00                                 2605          DC    X'00'
                                            2606 rd_slice_offset DCCPRLG CINDEX=1287,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1287
                                            2607          macro
                                            2608          dccextrn &m
                                            2609          gblc    &$dccext(1000)
                                            2610          gbla    &$dccexti
                                            2611          lcla    &i
                                            2612 &$dccext(&$dccexti+1) setc    '&m'
                                            2613 &i       seta    1
                                            2614 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2615          aif    ('&$dccext(&i)' eq '&m').getout
                                            2616 &i       seta    &i+1
                                            2617          ago     .loop
                                            2618 .around  anop
                                            2619 &$dccexti seta &$dccexti+1
                                            2620          extrn  &m
                                            2621 .getout  anop
                                            2622          mend
00001790                                    2623+$eye0064    ds    0d                                                    02-DCCCA
00001790 C4C3C3                             2624+         dc cl3'DCC'                                                    02-DCCCA
00001793 01                                 2625+         dc xl1'01' format one                                          02-DCCCA
00001794 00000000                           2626+         dc a(0)                                                        02-DCCCA
00001798 0000000000000000                   2627+         dc ad(0)                                                       02-DCCCA
000017A0 00000000000000A8                   2628+         dc ad(168)                                                     02-DCCCA
000017A8 0000000000000000                   2629+         dc ad(0)                                                       02-DCCCA
000017B0 0000000000001000                   2630+         dc ad(4096)                                                    02-DCCCA
000017B8 20                                 2631+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000017B9 03                                 2632+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000017BA 03                                 2633+         dc al1(3)                                                      02-DCCCA
000017BB 08                                 2634+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000017BC 00                                 2635+         dc bl.8'00000000'                                              02-DCCCA
000017BD 000000                             2636+         dc al3(0)                                                      02-DCCCA
000017C0 0000000000001778                   2637+         dc ad(@LNAME1287)                                              02-DCCCA
000017C8                                    2638+         ds 0d                                                          02-DCCCA
000017C8 0000000000001790                   2639+         dc ad($eye0064)                                                02-DCCCA
000017D0 0000000000000000                   2640+         dc ad(0)                                                       02-DCCCA
000017D8                                    2641+         ds    0d                                                       01-DCCPR
000017D8                                    2642+rd_slice_offset ds 0d                                                   01-DCCPR
000017D8                                    2643+@REGION_1287_1 ds 0h                                                    01-DCCPR
000017D8 EBEC D008 0024          00000008   2644+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000017DE B904 00CF                          2645+         lgr   12,15               set base reg                         01-DCCPR
                        000017D8            2646+         using @REGION_1287_1,12                                        01-DCCPR
                                            2647 * ******* End of Prologue
                                            2648 * *
                                            2649 * ***           if (((!slice->seg)))
000017E2 E3F0 1000 0004          00000000   2650          LG    15,0(0,1)   ; slice
000017E8 E310 F008 0002          00000008   2651          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
000017EE 4770 C02E               00001806   2652          BNZ   @L103
                                            2653 * ***                   return ((slice)->end - (slice)->start);
000017F2 E310 F020 0004          00000020   2654          LG    1,32(0,15)  ; offset of end in rd_slice_s
000017F8 E310 F018 000B          00000018   2655          SLG   1,24(0,15)
000017FE B904 00F1                          2656          LGR   15,1
00001802 47F0 C04A               00001822   2657          B     @ret_lab_1287
00001806                                    2658 @L103    DS    0H
                                            2659 * ***
                                            2660 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                            2661 * tart;
00001806 E310 F008 0004          00000008   2662          LG    1,8(0,15)   ; offset of seg in rd_slice_s
0000180C E310 1028 0004          00000028   2663          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00001812 E310 F010 000A          00000010   2664          ALG   1,16(0,15)
00001818 E310 F018 000B          00000018   2665          SLG   1,24(0,15)
0000181E B904 00F1                          2666          LGR   15,1
                                                                                                                           Page   61 
  Active Usings: @REGION_1287_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2667 * ***   }
00001822                                    2668 @ret_lab_1287 DS 0H
                                            2669 * * **** Start of Epilogue
                                            2670          DCCEPIL
00001822                                    2671+         ds 0h                                                          01-DCCEP
                                            2672+* Epilog
                                            2673+* Epilog
00001822 E3E0 D008 0004          00000008   2674+         lg    14,8(,13) restore the reg                                01-DCCEP
00001828 EB1C D020 0004          00000020   2675+         lmg   1,12,32(13)                                              01-DCCEP
0000182E 07FE                               2676+         br   14                                                        01-DCCEP
                                            2677+* End of Epilog
                                            2678 * * **** End of Epilogue
                                            2679          DROP  12
                                            2680 *
                                            2681 *   DSECT for automatic variables in "rd_slice_offset"
                                            2682 *      (FUNCTION #1287)
                                            2683 *
00000000                00000000 000000A8   2684 @AUTO#rd_slice_offset DSECT
00000000                                    2685          DS    XL168
                                            2686 *
00001830                00000000 00014658   2687 @CODE    CSECT
                                            2688 *
                                            2689 *
                                            2690 *
                                            2691 * ....... start of rd_uvarint_enc_u64
00001830                                    2692 @LNAME1308 DS  0H
00001830 00000012                           2693          DC    X'00000012'
00001834 99846DA4A5819989                   2694          DC    C'rd_uvarint_enc_u64'
00001846 00                                 2695          DC    X'00'
                                            2696 rd_uvarint_enc_u64 DCCPRLG CINDEX=1308,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1308
                                            2697          macro
                                            2698          dccextrn &m
                                            2699          gblc    &$dccext(1000)
                                            2700          gbla    &$dccexti
                                            2701          lcla    &i
                                            2702 &$dccext(&$dccexti+1) setc    '&m'
                                            2703 &i       seta    1
                                            2704 .loop    aif    (&i gt &$dccexti).around
                                            2705          aif    ('&$dccext(&i)' eq '&m').getout
                                            2706 &i       seta    &i+1
                                            2707          ago     .loop
                                            2708 .around  anop
                                            2709 &$dccexti seta &$dccexti+1
                                            2710          extrn  &m
                                            2711 .getout  anop
                                            2712          mend
00001848                                    2713+$eye0067    ds    0d                                                    02-DCCCA
00001848 C4C3C3                             2714+         dc cl3'DCC'                                                    02-DCCCA
0000184B 01                                 2715+         dc xl1'01' format one                                          02-DCCCA
0000184C 00000000                           2716+         dc a(0)                                                        02-DCCCA
00001850 0000000000000000                   2717+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001858 00000000000000B0                   2718+         dc ad(176)                                                     02-DCCCA
00001860 0000000000000000                   2719+         dc ad(0)                                                       02-DCCCA
00001868 0000000000001000                   2720+         dc ad(4096)                                                    02-DCCCA
00001870 20                                 2721+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001871 03                                 2722+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001872 03                                 2723+         dc al1(3)                                                      02-DCCCA
00001873 08                                 2724+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001874 00                                 2725+         dc bl.8'00000000'                                              02-DCCCA
00001875 000000                             2726+         dc al3(0)                                                      02-DCCCA
00001878 0000000000001830                   2727+         dc ad(@LNAME1308)                                              02-DCCCA
00001880                                    2728+         ds 0d                                                          02-DCCCA
00001880 0000000000001848                   2729+         dc ad($eye0067)                                                02-DCCCA
00001888 0000000000000000                   2730+         dc ad(0)                                                       02-DCCCA
00001890                                    2731+         ds    0d                                                       01-DCCPR
00001890                                    2732+rd_uvarint_enc_u64 ds 0d                                                01-DCCPR
00001890                                    2733+@REGION_1308_1 ds 0h                                                    01-DCCPR
00001890 EBEC D008 0024          00000008   2734+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001896 B904 00CF                          2735+         lgr   12,15               set base reg                         01-DCCPR
                        00001890            2736+         using @REGION_1308_1,12                                        01-DCCPR
0000189A B904 0021                          2737          LGR   2,1         ; ptr to parm area
                                            2738 * ******* End of Prologue
                                            2739 * *
                                            2740 * ***           size_t of = 0;
0000189E E3F0 2010 0004          00000010   2741          LG    15,16(0,2)  ; num
000018A4 A719 0000               00000000   2742          LGHI  1,0         ; 0
                                            2743 * ***
                                            2744 * ***           do {
000018A8                                    2745 @L105    DS    0H
                                            2746 * ***                   if (((of >= dstsize)))
000018A8 E310 2008 0021          00000008   2747          CLG   1,8(0,2)
000018AE 4740 C038               000018C8   2748          BL    @L108
                                            2749 * ***                           return 0;
000018B2 A7F9 0000               00000000   2750          LGHI  15,0        ; 0
000018B6 47F0 C084               00001914   2751          B     @ret_lab_1308
000018C0                                    2752          DS    0D
000018C0 000000000000007F                   2753 @lit_1308_55 DC FD'127' 0x000000000000007f
000018C8                                    2754 @L108    DS    0H
                                            2755 * ***
                                            2756 * ***                   dst[of++] = (num & 0x7f) | (num > 0x7f ? 0x80 \
                                            2757 * : 0);
000018C8 E330 2000 0004          00000000   2758          LG    3,0(0,2)    ; dst
000018CE B904 0041                          2759          LGR   4,1
000018D2 A71B 0001               00000001   2760          AGHI  1,1
000018D6 B904 005F                          2761          LGR   5,15
000018DA E350 C030 0080          000018C0   2762          NG    5,@lit_1308_55
000018E0 C2FE 0000 007F                     2763          CLGFI 15,X'0000007F'
000018E6 47D0 C062               000018F2   2764          BNH   @L109
000018EA A768 0080               00000080   2765          LHI   6,128       ; 128
000018EE 47F0 C066               000018F6   2766          B     @L110
000018F2                                    2767 @L109    DS    0H
000018F2 A768 0000               00000000   2768          LHI   6,0         ; 0
000018F6                                    2769 @L110    DS    0H
                                                                                                                           Page   63 
  Active Usings: @REGION_1308_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000018F6 B914 0066                          2770          LGFR  6,6
000018FA B981 0056                          2771          OGR   5,6
000018FE 4254 3000               00000000   2772          STC   5,0(4,3)
                                            2773 * ***                   num >>= 7;
00001902 EBFF 0007 000C          00000007   2774          SRLG  15,15,7(0)
                                            2775 * ***           } while (num);
00001908 B902 003F                          2776          LTGR  3,15
0000190C 4770 C018               000018A8   2777          BNZ   @L105
                                            2778 * ***
                                            2779 * ***           return of;
00001910 B904 00F1                          2780          LGR   15,1
                                            2781 * ***   }
00001914                                    2782 @ret_lab_1308 DS 0H
                                            2783 * * **** Start of Epilogue
                                            2784          DCCEPIL
00001914                                    2785+         ds 0h                                                          01-DCCEP
                                            2786+* Epilog
                                            2787+* Epilog
00001914 E3E0 D008 0004          00000008   2788+         lg    14,8(,13) restore the reg                                01-DCCEP
0000191A EB1C D020 0004          00000020   2789+         lmg   1,12,32(13)                                              01-DCCEP
00001920 07FE                               2790+         br   14                                                        01-DCCEP
                                            2791+* End of Epilog
                                            2792 * * **** End of Epilogue
                                            2793          DROP  12
                                            2794 *
                                            2795 *   DSECT for automatic variables in "rd_uvarint_enc_u64"
                                            2796 *      (FUNCTION #1308)
                                            2797 *
00000000                00000000 000000B0   2798 @AUTO#rd_uvarint_enc_u64 DSECT
00000000                                    2799          DS    XL168
000000A8                                    2800 rd_uvarint_enc_u64#of#0 DS 8XL1 ; of
                                            2801 *
00001922                00000000 00014658   2802 @CODE    CSECT
                                            2803 *
                                            2804 *
                                            2805 *
                                            2806 * ....... start of rd_kafka_ApiKey2str
00001922                                    2807 @LNAME1314 DS  0H
00001922 00000013                           2808          DC    X'00000013'
00001926 99846D9281869281                   2809          DC    C'rd_kafka_ApiKey2str'
00001939 00                                 2810          DC    X'00'
                                            2811 rd_kafka_$Api$Key2str DCCPRLG CINDEX=1314,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1314
                                            2812          macro
                                            2813          dccextrn &m
                                            2814          gblc    &$dccext(1000)
                                            2815          gbla    &$dccexti
                                            2816          lcla    &i
                                            2817 &$dccext(&$dccexti+1) setc    '&m'
                                            2818 &i       seta    1
                                            2819 .loop    aif    (&i gt &$dccexti).around
                                            2820          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2821 &i       seta    &i+1
                                            2822          ago     .loop
                                            2823 .around  anop
                                            2824 &$dccexti seta &$dccexti+1
                                            2825          extrn  &m
                                            2826 .getout  anop
                                            2827          mend
00001940                                    2828+$eye0070    ds    0d                                                    02-DCCCA
00001940 C4C3C3                             2829+         dc cl3'DCC'                                                    02-DCCCA
00001943 01                                 2830+         dc xl1'01' format one                                          02-DCCCA
00001944 00000000                           2831+         dc a(0)                                                        02-DCCCA
00001948 00000000000019B2                   2832+         dc ad(@PER_1314)                                               02-DCCCA
00001950 00000000000000C8                   2833+         dc ad(200)                                                     02-DCCCA
00001958 0000000000000000                   2834+         dc ad(0)                                                       02-DCCCA
00001960 0000000000001000                   2835+         dc ad(4096)                                                    02-DCCCA
00001968 20                                 2836+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001969 03                                 2837+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000196A 03                                 2838+         dc al1(3)                                                      02-DCCCA
0000196B 08                                 2839+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000196C 00                                 2840+         dc bl.8'00000000'                                              02-DCCCA
0000196D 000000                             2841+         dc al3(0)                                                      02-DCCCA
00001970 0000000000001922                   2842+         dc ad(@LNAME1314)                                              02-DCCCA
00001978                                    2843+         ds 0d                                                          02-DCCCA
00001978 0000000000001940                   2844+         dc ad($eye0070)                                                02-DCCCA
00001980 0000000000000000                   2845+         dc ad(0)                                                       02-DCCCA
00001988                                    2846+         ds    0d                                                       01-DCCPR
00001988                                    2847+rd_kafka_$Api$Key2str ds 0d                                             01-DCCPR
00001988                                    2848+@REGION_1314_1 ds 0h                                                    01-DCCPR
00001988 EBEC D008 0024          00000008   2849+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000198E E3E0 D088 0004          00000088   2850+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001994 E3C0 D090 0004          00000090   2851+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000199A B904 002E                          2852+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000199E E3B0 C018 0004          00000018   2853+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000019A4 A7EB 00C8               000000C8   2854+         aghi  14,200              increase by frame size               01-DCCPR
000019A8 E3E0 C020 0021          00000020   2855+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000019AE 4720 B020               00000020   2856+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000019B2                                    2857+@PER_1314 ds   0h                                                       01-DCCPR
000019B2 EBDE 2080 0024          00000080   2858+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000019B8 E3C0 2090 0024          00000090   2859+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000019BE B904 00D2                          2860+         lgr   13,2                set real frame pointer               01-DCCPR
000019C2 B904 00CF                          2861+         lgr   12,15               set base reg                         01-DCCPR
                        00001988            2862+         using @REGION_1314_1,12                                        01-DCCPR
                                            2863          DCCPRV REG=15     ; Get PRV from DVT
000019C6 E3F0 B008 0004          00000008   2864+         LG 15,8(0,11)                                                  01-DCCPR
                                            2865 * ******* End of Prologue
                                            2866 * *
                                            2867 * ***           static const char *names[] = {
                                            2868 * ***                   [0] = "Produce",
                                            2869 * ***                   [1] = "Fetch",
                                            2870 * ***                   [2] = "Offset",
                                            2871 * ***                   [3] = "Metadata",
                                            2872 * ***                   [4] = "LeaderAndIsr",
                                                                                                                           Page   65 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2873 * ***                   [5] = "StopReplica",
                                            2874 * ***                   [6] = "UpdateMetadata",
                                            2875 * ***                   [7] = "ControlledShutdown",
                                            2876 * ***                   [8] = "OffsetCommit",
                                            2877 * ***                   [9] = "OffsetFetch",
                                            2878 * ***                   [10] = "FindCoordinator",
                                            2879 * ***                   [11] = "JoinGroup",
                                            2880 * ***                   [12] = "Heartbeat",
                                            2881 * ***                   [13] = "LeaveGroup",
                                            2882 * ***                   [14] = "SyncGroup",
                                            2883 * ***                   [15] = "DescribeGroups",
                                            2884 * ***                   [16] = "ListGroups",
                                            2885 * ***                   [17] = "SaslHandshake",
                                            2886 * ***                   [18] = "ApiVersion",
                                            2887 * ***                   [19] = "CreateTopics",
                                            2888 * ***                   [20] = "DeleteTopics",
                                            2889 * ***                   [21] = "DeleteRecords",
                                            2890 * ***                   [22] = "InitProducerId",
                                            2891 * ***                   [23] = "OffsetForLeaderEpoch",
                                            2892 * ***                   [24] = "AddPartitionsToTxn",
                                            2893 * ***                   [25] = "AddOffsetsToTxn",
                                            2894 * ***                   [26] = "EndTxn",
                                            2895 * ***                   [27] = "WriteTxnMarkers",
                                            2896 * ***                   [28] = "TxnOffsetCommit",
                                            2897 * ***                   [29] = "DescribeAcls",
                                            2898 * ***                   [30] = "CreateAcls",
                                            2899 * ***                   [31] = "DeleteAcls",
                                            2900 * ***                   [32] = "DescribeConfigs",
                                            2901 * ***                   [33] = "AlterConfigs",
                                            2902 * ***                   [34] = "AlterReplicaLogDirs",
                                            2903 * ***                   [35] = "DescribeLogDirs",
                                            2904 * ***                   [36] = "SaslAuthenticate",
                                            2905 * ***                   [37] = "CreatePartitions",
                                            2906 * ***                   [38] = "CreateDelegationToken",
                                            2907 * ***                   [39] = "RenewDelegationToken",
                                            2908 * ***                   [40] = "ExpireDelegationToken",
                                            2909 * ***                   [41] = "DescribeDelegationToken",
                                            2910 * ***                   [42] = "DeleteGroups",
                                            2911 * ***                   [43] = "ElectLeadersRequest",
                                            2912 * ***                   [44] =
                                            2913 * ***                   "IncrementalAlterConfigsRequest",
                                            2914 * ***                   [45] =
                                            2915 * ***                   "AlterPartitionReassignmentsRequest",
                                            2916 * ***                   [46] =
                                            2917 * ***                   "ListPartitionReassignmentsRequest",
                                            2918 * ***                   [47] = "OffsetDeleteRequest",
                                            2919 * ***                   [48] =
                                            2920 * ***                   "DescribeClientQuotasRequest",
                                            2921 * ***                   [49] =
                                            2922 * ***                   "AlterClientQuotasRequest",
                                            2923 * ***                   [50] =
                                            2924 * ***                   "DescribeUserScramCredentialsRequest",
                                                                                                                           Page   66 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2925 * ***                   [51] =
                                            2926 * ***                   "AlterUserScramCredentialsRequest",
                                            2927 * ***                   [52] = "VoteRequest",
                                            2928 * ***                   [53] = "BeginQuorumEpochRequest",
                                            2929 * ***                   [54] = "EndQuorumEpochRequest",
                                            2930 * ***                   [55] = "DescribeQuorumRequest",
                                            2931 * ***                   [56] = "AlterIsrRequest",
                                            2932 * ***                   [57] = "UpdateFeaturesRequest",
                                            2933 * ***                   [58] = "EnvelopeRequest",
                                            2934 * ***           };
                                            2935 * ***           static  char ret[64];
                                            2936 * ***
                                            2937 * ***           if (ApiKey < 0 || ApiKey >= (int)(sizeof((names)) / si\
                                            2938 * zeof(*(names))) ||
000019CC 4820 1006               00000006   2939          LH    2,6(0,1)    ; ApiKey
000019D0 1222                               2940          LTR   2,2
000019D2 4740 C07A               00001A02   2941          BL    @L119
000019D6 4820 1006               00000006   2942          LH    2,6(0,1)    ; ApiKey
000019DA A72E 003B               0000003B   2943          CHI   2,59
000019DE 47B0 C07A               00001A02   2944          BNL   @L119
000019E2                                    2945 @L117    DS    0H
                                            2946 * ***               !names[ApiKey]) {
000019E2 E320 1006 0015          00000006   2947          LGH   2,6(0,1)    ; ApiKey
000019E8 E330 C0CC 0014          00001A54   2948          LGF   3,@lit_1314_58
000019EE 4133 F000               00000000   2949          LA    3,0(3,15)
000019F2 EB22 0003 000D          00000003   2950          SLLG  2,2,3(0)    ; *0x8
000019F8 E322 3220 0002          00000220   2951          LTG   2,544(2,3)
000019FE 4770 C0E0               00001A68   2952          BNZ   @L118
00001A02                                    2953 @L119    DS    0H
                                            2954 * ***                   snprintf(ret, sizeof(ret), "Unknown-%hd?", Api\
                                            2955 * Key);
00001A02 E320 C0CC 0014          00001A54   2956          LGF   2,@lit_1314_58
00001A08 4122 F000               00000000   2957          LA    2,0(2,15)
00001A0C 41F0 23F8               000003F8   2958          LA    15,1016(0,2)
00001A10 E3F0 D0A8 0024          000000A8   2959          STG   15,168(0,13)
00001A16 E548 D0B0 0040          000000B0   2960          MVGHI 176(13),64
00001A1C E3F0 C0D8 0004          00001A60   2961          LG    15,@lit_1314_60
00001A22 41F0 F046               00000046   2962          LA    15,70(0,15)
00001A26 E3F0 D0B8 0024          000000B8   2963          STG   15,184(0,13)
00001A2C 48F0 1006               00000006   2964          LH    15,6(0,1)   ; ApiKey
00001A30 B914 00FF                          2965          LGFR  15,15
00001A34 E3F0 D0C0 0024          000000C0   2966          STG   15,192(0,13)
00001A3A 4110 D0A8               000000A8   2967          LA    1,168(0,13)
00001A3E E3F0 C0D0 0004          00001A58   2968          LG    15,@lit_1314_61 ; snprintf
00001A44                                    2969 @@gen_label71 DS    0H
00001A44 05EF                               2970          BALR  14,15
00001A46                                    2971 @@gen_label72 DS    0H
                                            2972 * ***                   return ret;
00001A46 41F0 23F8               000003F8   2973          LA    15,1016(0,2)
00001A4A 47F0 C0F2               00001A7A   2974          B     @ret_lab_1314
00001A50                                    2975          DS    0D
00001A50 000000C8                           2976 @FRAMESIZE_1314 DC F'200'
                                                                                                                           Page   67 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001A54 00000000                           2977 @lit_1314_58 DC Q(@@STATIC)
00001A58 0000000000000000                   2978 @lit_1314_61 DC AD(snprintf)
00001A60 0000000000014A98                   2979 @lit_1314_60 DC AD(@strings@)
                                            2980 * ***           }
00001A68                                    2981 @L118    DS    0H
                                            2982 * ***
                                            2983 * ***           return names[ApiKey];
00001A68 E3F0 1006 0015          00000006   2984          LGH   15,6(0,1)   ; ApiKey
00001A6E EBFF 0003 000D          00000003   2985          SLLG  15,15,3(0)  ; *0x8
00001A74 E3FF 3220 0004          00000220   2986          LG    15,544(15,3)
                                            2987 * ***   }
00001A7A                                    2988 @ret_lab_1314 DS 0H
                                            2989 * * **** Start of Epilogue
                                            2990          DCCEPIL
00001A7A                                    2991+         ds 0h                                                          01-DCCEP
                                            2992+* Epilog
00001A7A D707 D088 D088 00000088 00000088   2993+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A80 E3D0 D080 0004          00000080   2994+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A86 E3C0 D090 0004          00000090   2995+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A8C E3B0 C018 0004          00000018   2996+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A92 E3C0 B010 0021          00000010   2997+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A98 E3E0 D008 0004          00000008   2998+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A9E EB1C D020 0004          00000020   2999+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001AA4 078E                               3000+         bcr 8,14                if same dsab, just return              01-DCCEP
00001AA6 E3F0 D010 0024          00000010   3001+         stg 15,16(0,13)         save return code                       01-DCCEP
00001AAC E300 D018 0024          00000018   3002+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001AB2 E3F0 D090 0004          00000090   3003+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001AB8 E3F0 F018 0004          00000018   3004+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001ABE 47F0 F040               00000040   3005+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3006+* End of Epilog
                                            3007 * * **** End of Epilogue
                                            3008          DROP  12
                                            3009 *
                                            3010 *   DSECT for automatic variables in "rd_kafka_ApiKey2str"
                                            3011 *      (FUNCTION #1314)
                                            3012 *
00000000                00000000 000000A8   3013 @AUTO#rd_kafka_$Api$Key2str DSECT
00000000                                    3014          DS    XL168
                                            3015 *
00001AC2                00000000 00014658   3016 @CODE    CSECT
                                            3017 *
                                            3018 *
                                            3019 *
                                            3020 * ....... start of rd_kafka_pid_reset
00001AC2                                    3021 @LNAME1331 DS  0H
00001AC2 00000012                           3022          DC    X'00000012'
00001AC6 99846D9281869281                   3023          DC    C'rd_kafka_pid_reset'
00001AD8 00                                 3024          DC    X'00'
                                            3025 rd_kafka_pid_reset DCCPRLG CINDEX=1331,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1331
                                            3026          macro
                                            3027          dccextrn &m
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3028          gblc    &$dccext(1000)
                                            3029          gbla    &$dccexti
                                            3030          lcla    &i
                                            3031 &$dccext(&$dccexti+1) setc    '&m'
                                            3032 &i       seta    1
                                            3033 .loop    aif    (&i gt &$dccexti).around
                                            3034          aif    ('&$dccext(&i)' eq '&m').getout
                                            3035 &i       seta    &i+1
                                            3036          ago     .loop
                                            3037 .around  anop
                                            3038 &$dccexti seta &$dccexti+1
                                            3039          extrn  &m
                                            3040 .getout  anop
                                            3041          mend
00001AE0                                    3042+$eye0074    ds    0d                                                    02-DCCCA
00001AE0 C4C3C3                             3043+         dc cl3'DCC'                                                    02-DCCCA
00001AE3 01                                 3044+         dc xl1'01' format one                                          02-DCCCA
00001AE4 00000000                           3045+         dc a(0)                                                        02-DCCCA
00001AE8 0000000000000000                   3046+         dc ad(0)                                                       02-DCCCA
00001AF0 00000000000000A8                   3047+         dc ad(168)                                                     02-DCCCA
00001AF8 0000000000000000                   3048+         dc ad(0)                                                       02-DCCCA
00001B00 0000000000001000                   3049+         dc ad(4096)                                                    02-DCCCA
00001B08 20                                 3050+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B09 03                                 3051+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B0A 03                                 3052+         dc al1(3)                                                      02-DCCCA
00001B0B 08                                 3053+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B0C 00                                 3054+         dc bl.8'00000000'                                              02-DCCCA
00001B0D 000000                             3055+         dc al3(0)                                                      02-DCCCA
00001B10 0000000000001AC2                   3056+         dc ad(@LNAME1331)                                              02-DCCCA
00001B18                                    3057+         ds 0d                                                          02-DCCCA
00001B18 0000000000001AE0                   3058+         dc ad($eye0074)                                                02-DCCCA
00001B20 0000000000000000                   3059+         dc ad(0)                                                       02-DCCCA
00001B28                                    3060+         ds    0d                                                       01-DCCPR
00001B28                                    3061+rd_kafka_pid_reset ds 0d                                                01-DCCPR
00001B28                                    3062+@REGION_1331_1 ds 0h                                                    01-DCCPR
00001B28 EBEC D008 0024          00000008   3063+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3064 * ******* End of Prologue
                                            3065 * *
                                            3066 * ***           pid->id = -1;
00001B2E E3F0 1000 0004          00000000   3067          LG    15,0(0,1)   ; pid
00001B34 E548 F000 FFFF          00000000   3068          MVGHI 0(15),-1    ; pid
                                            3069 * ***           pid->epoch = -1;
00001B3A E544 F008 FFFF          00000008   3070          MVHHI 8(15),-1    ; offset of epoch in rd_kafka_pid_s
                                            3071 * ***   }
00001B40                                    3072 @ret_lab_1331 DS 0H
                                            3073 * * **** Start of Epilogue
                                            3074          DCCEPIL
00001B40                                    3075+         ds 0h                                                          01-DCCEP
                                            3076+* Epilog
                                            3077+* Epilog
00001B40 E3E0 D008 0004          00000008   3078+         lg    14,8(,13) restore the reg                                01-DCCEP
00001B46 EB1C D020 0004          00000020   3079+         lmg   1,12,32(13)                                              01-DCCEP
                                                                                                                           Page   69 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B4C 07FE                               3080+         br   14                                                        01-DCCEP
                                            3081+* End of Epilog
                                            3082 * * **** End of Epilogue
                                            3083 *
                                            3084 *   DSECT for automatic variables in "rd_kafka_pid_reset"
                                            3085 *      (FUNCTION #1331)
                                            3086 *
00000000                00000000 000000A8   3087 @AUTO#rd_kafka_pid_reset DSECT
00000000                                    3088          DS    XL168
                                            3089 *
00001B4E                00000000 00014658   3090 @CODE    CSECT
                                            3091 *
                                            3092 *
                                            3093 *
                                            3094 * ....... start of rd_strlcpy
00001B4E                                    3095 @LNAME1384 DS  0H
00001B4E 0000000A                           3096          DC    X'0000000A'
00001B52 99846DA2A3999383                   3097          DC    C'rd_strlcpy'
00001B5C 00                                 3098          DC    X'00'
                                            3099 rd_strlcpy DCCPRLG CINDEX=1384,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1384
                                            3100          macro
                                            3101          dccextrn &m
                                            3102          gblc    &$dccext(1000)
                                            3103          gbla    &$dccexti
                                            3104          lcla    &i
                                            3105 &$dccext(&$dccexti+1) setc    '&m'
                                            3106 &i       seta    1
                                            3107 .loop    aif    (&i gt &$dccexti).around
                                            3108          aif    ('&$dccext(&i)' eq '&m').getout
                                            3109 &i       seta    &i+1
                                            3110          ago     .loop
                                            3111 .around  anop
                                            3112 &$dccexti seta &$dccexti+1
                                            3113          extrn  &m
                                            3114 .getout  anop
                                            3115          mend
00001B60                                    3116+$eye0077    ds    0d                                                    02-DCCCA
00001B60 C4C3C3                             3117+         dc cl3'DCC'                                                    02-DCCCA
00001B63 01                                 3118+         dc xl1'01' format one                                          02-DCCCA
00001B64 00000000                           3119+         dc a(0)                                                        02-DCCCA
00001B68 0000000000000000                   3120+         dc ad(0)                                                       02-DCCCA
00001B70 00000000000000B0                   3121+         dc ad(176)                                                     02-DCCCA
00001B78 0000000000000000                   3122+         dc ad(0)                                                       02-DCCCA
00001B80 0000000000001000                   3123+         dc ad(4096)                                                    02-DCCCA
00001B88 20                                 3124+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B89 03                                 3125+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B8A 03                                 3126+         dc al1(3)                                                      02-DCCCA
00001B8B 08                                 3127+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B8C 00                                 3128+         dc bl.8'00000000'                                              02-DCCCA
00001B8D 000000                             3129+         dc al3(0)                                                      02-DCCCA
00001B90 0000000000001B4E                   3130+         dc ad(@LNAME1384)                                              02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B98                                    3131+         ds 0d                                                          02-DCCCA
00001B98 0000000000001B60                   3132+         dc ad($eye0077)                                                02-DCCCA
00001BA0 0000000000000000                   3133+         dc ad(0)                                                       02-DCCCA
00001BA8                                    3134+         ds    0d                                                       01-DCCPR
00001BA8                                    3135+rd_strlcpy ds  0d                                                       01-DCCPR
00001BA8                                    3136+@REGION_1384_1 ds 0h                                                    01-DCCPR
00001BA8 EBEC D008 0024          00000008   3137+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001BAE B904 00CF                          3138+         lgr   12,15               set base reg                         01-DCCPR
                        00001BA8            3139+         using @REGION_1384_1,12                                        01-DCCPR
                                            3140 * ******* End of Prologue
                                            3141 * *
00001BB2 E3F0 1010 0004          00000010   3142          LG    15,16(0,1)  ; dstsize
                                            3143 * ***
                                            3144 * ***
                                            3145 * ***
                                            3146 * ***           if (((dstsize > 0))) {
00001BB8 C2FE 0000 0000                     3147          CLGFI 15,X'00000000'
00001BBE 47D0 C0A6               00001C4E   3148          BNH   @ret_lab_1384
                                            3149 * ***                   size_t srclen = __strlen(src);
00001BC2 E320 1008 0004          00000008   3150          LG    2,8(0,1)
00001BC8 B904 0032                          3151          LGR   3,2
00001BCC A709 0000               00000000   3152          LGHI  0,0
00001BD0                                    3153 @@gen_label74 DS 0H
00001BD0 B25E 0002                          3154          SRST  0,2
00001BD4 4710 C028               00001BD0   3155          BC  1,@@gen_label74
00001BD8 B90B 0003                          3156          SLGR  0,3
                                            3157 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            3158 * clen) : (dstsize-1));
00001BDC B904 002F                          3159          LGR   2,15
00001BE0 A72B FFFF               0000FFFF   3160          AGHI  2,-1
00001BE4 B921 0002                          3161          CLGR  0,2
00001BE8 47B0 C056               00001BFE   3162          BNL   @L252
00001BEC B904 00F0                          3163          LGR   15,0
00001BF0 47F0 C05A               00001C02   3164          B     @L253
00001BF8                                    3165          DS    0D
00001BF8 D200 4000 3000 00000000 00000000   3166 @lit_1384_63          MVC 0(1,4),0(3)
00001BFE                                    3167 @L252    DS    0H
00001BFE A7FB FFFF               0000FFFF   3168          AGHI  15,-1
00001C02                                    3169 @L253    DS    0H
                                            3170 * ***                   __memcpy(dst,src,copylen);
00001C02 E330 1008 0004          00000008   3171          LG    3,8(0,1)
00001C08 E340 1000 0004          00000000   3172          LG    4,0(0,1)
00001C0E B902 002F                          3173          LTGR  2,15
00001C12 4780 C098               00001C40   3174          BZ    @@gen_label78
00001C16 A72B FFFF               0000FFFF   3175          AGHI  2,-1
00001C1A EB52 0008 000A          00000008   3176          SRAG  5,2,8(0)
00001C20 B902 0055                          3177          LTGR  5,5
00001C24 4780 C094               00001C3C   3178          BZ    @@gen_label77
00001C28                                    3179 @@gen_label76 DS 0H
00001C28 D2FF 4000 3000 00000000 00000000   3180          MVC   0(256,4),0(3)
00001C2E 4140 4100               00000100   3181          LA    4,256(0,4)
00001C32 4130 3100               00000100   3182          LA    3,256(0,3)
                                                                                                                           Page   71 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001C36 E350 C080 0046          00001C28   3183          BCTG  5,@@gen_label76
00001C3C                                    3184 @@gen_label77 DS 0H
00001C3C 4420 C050               00001BF8   3185          EX    2,@lit_1384_63
00001C40                                    3186 @@gen_label78 DS 0H
                                            3187 * ***                   dst[copylen] = '\0';
00001C40 E310 1000 0004          00000000   3188          LG    1,0(0,1)    ; dst
00001C46 41FF 1000               00000000   3189          LA    15,0(15,1)
00001C4A 9200 F000      00000000 00000000   3190          MVI   0(15),0
                                            3191 * ***           }
00001C4E                                    3192 @L251    DS    0H
                                            3193 * ***
                                            3194 * ***   }
00001C4E                                    3195 @ret_lab_1384 DS 0H
                                            3196 * * **** Start of Epilogue
                                            3197          DCCEPIL
00001C4E                                    3198+         ds 0h                                                          01-DCCEP
                                            3199+* Epilog
                                            3200+* Epilog
00001C4E E3E0 D008 0004          00000008   3201+         lg    14,8(,13) restore the reg                                01-DCCEP
00001C54 EB1C D020 0004          00000020   3202+         lmg   1,12,32(13)                                              01-DCCEP
00001C5A 07FE                               3203+         br   14                                                        01-DCCEP
                                            3204+* End of Epilog
                                            3205 * * **** End of Epilogue
                                            3206          DROP  12
                                            3207 *
                                            3208 *   DSECT for automatic variables in "rd_strlcpy"
                                            3209 *      (FUNCTION #1384)
                                            3210 *
00000000                00000000 000000B0   3211 @AUTO#rd_strlcpy DSECT
00000000                                    3212          DS    XL168
000000A8                                    3213 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   3214          ORG   @AUTO#rd_strlcpy+168
000000A8                                    3215 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            3216 *
00001C5C                00000000 00014658   3217 @CODE    CSECT
                                            3218 *
                                            3219 *
                                            3220 *
                                            3221 * ....... start of rd_kafka_q_ready
00001C5C                                    3222 @LNAME1424 DS  0H
00001C5C 00000010                           3223          DC    X'00000010'
00001C60 99846D9281869281                   3224          DC    C'rd_kafka_q_ready'
00001C70 00                                 3225          DC    X'00'
                                            3226 rd_kafka_q_ready DCCPRLG CINDEX=1424,BASER=0,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1424
                                            3227          macro
                                            3228          dccextrn &m
                                            3229          gblc    &$dccext(1000)
                                            3230          gbla    &$dccexti
                                            3231          lcla    &i
                                            3232 &$dccext(&$dccexti+1) setc    '&m'
                                            3233 &i       seta    1
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3234 .loop    aif    (&i gt &$dccexti).around
                                            3235          aif    ('&$dccext(&i)' eq '&m').getout
                                            3236 &i       seta    &i+1
                                            3237          ago     .loop
                                            3238 .around  anop
                                            3239 &$dccexti seta &$dccexti+1
                                            3240          extrn  &m
                                            3241 .getout  anop
                                            3242          mend
00001C78                                    3243+$eye0080    ds    0d                                                    02-DCCCA
00001C78 C4C3C3                             3244+         dc cl3'DCC'                                                    02-DCCCA
00001C7B 01                                 3245+         dc xl1'01' format one                                          02-DCCCA
00001C7C 00000000                           3246+         dc a(0)                                                        02-DCCCA
00001C80 0000000000000000                   3247+         dc ad(0)                                                       02-DCCCA
00001C88 00000000000000A8                   3248+         dc ad(168)                                                     02-DCCCA
00001C90 0000000000000000                   3249+         dc ad(0)                                                       02-DCCCA
00001C98 0000000000001000                   3250+         dc ad(4096)                                                    02-DCCCA
00001CA0 20                                 3251+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001CA1 03                                 3252+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CA2 03                                 3253+         dc al1(3)                                                      02-DCCCA
00001CA3 08                                 3254+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CA4 00                                 3255+         dc bl.8'00000000'                                              02-DCCCA
00001CA5 000000                             3256+         dc al3(0)                                                      02-DCCCA
00001CA8 0000000000001C5C                   3257+         dc ad(@LNAME1424)                                              02-DCCCA
00001CB0                                    3258+         ds 0d                                                          02-DCCCA
00001CB0 0000000000001C78                   3259+         dc ad($eye0080)                                                02-DCCCA
00001CB8 0000000000000000                   3260+         dc ad(0)                                                       02-DCCCA
00001CC0                                    3261+         ds    0d                                                       01-DCCPR
00001CC0                                    3262+rd_kafka_q_ready ds 0d                                                  01-DCCPR
00001CC0                                    3263+@REGION_1424_1 ds 0h                                                    01-DCCPR
00001CC0 EBEC D008 0024          00000008   3264+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3265 * ******* End of Prologue
                                            3266 * *
                                            3267 * ***      return rkq->rkq_flags & 0x2;
00001CC6 E3F0 1000 0004          00000000   3268          LG    15,0(0,1)   ; rkq
00001CCC 58F0 F084               00000084   3269          L     15,132(0,15) ; offset of rkq_flags in rd_kafka_q_s
00001CD0 C0FB 0000 0002                     3270          NILF  15,X'00000002'
00001CD6 B914 00FF                          3271          LGFR  15,15
                                            3272 * ***   }
                                            3273 * * **** Start of Epilogue
                                            3274          DCCEPIL
00001CDA                                    3275+         ds 0h                                                          01-DCCEP
                                            3276+* Epilog
                                            3277+* Epilog
00001CDA E3E0 D008 0004          00000008   3278+         lg    14,8(,13) restore the reg                                01-DCCEP
00001CE0 EB1C D020 0004          00000020   3279+         lmg   1,12,32(13)                                              01-DCCEP
00001CE6 07FE                               3280+         br   14                                                        01-DCCEP
                                            3281+* End of Epilog
                                            3282 * * **** End of Epilogue
                                            3283 *
                                            3284 *   DSECT for automatic variables in "rd_kafka_q_ready"
                                            3285 *      (FUNCTION #1424)
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3286 *
00000000                00000000 000000A8   3287 @AUTO#rd_kafka_q_ready DSECT
00000000                                    3288          DS    XL168
                                            3289 *
00001CE8                00000000 00014658   3290 @CODE    CSECT
                                            3291 *
                                            3292 *
                                            3293 *
                                            3294 * ....... start of rd_kafka_q_keep
00001CE8                                    3295 @LNAME1428 DS  0H
00001CE8 0000000F                           3296          DC    X'0000000F'
00001CEC 99846D9281869281                   3297          DC    C'rd_kafka_q_keep'
00001CFB 00                                 3298          DC    X'00'
                                            3299 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                            3300          macro
                                            3301          dccextrn &m
                                            3302          gblc    &$dccext(1000)
                                            3303          gbla    &$dccexti
                                            3304          lcla    &i
                                            3305 &$dccext(&$dccexti+1) setc    '&m'
                                            3306 &i       seta    1
                                            3307 .loop    aif    (&i gt &$dccexti).around
                                            3308          aif    ('&$dccext(&i)' eq '&m').getout
                                            3309 &i       seta    &i+1
                                            3310          ago     .loop
                                            3311 .around  anop
                                            3312 &$dccexti seta &$dccexti+1
                                            3313          extrn  &m
                                            3314 .getout  anop
                                            3315          mend
00001D00                                    3316+$eye0083    ds    0d                                                    02-DCCCA
00001D00 C4C3C3                             3317+         dc cl3'DCC'                                                    02-DCCCA
00001D03 01                                 3318+         dc xl1'01' format one                                          02-DCCCA
00001D04 00000000                           3319+         dc a(0)                                                        02-DCCCA
00001D08 0000000000001D72                   3320+         dc ad(@PER_1428)                                               02-DCCCA
00001D10 00000000000000B0                   3321+         dc ad(176)                                                     02-DCCCA
00001D18 0000000000000000                   3322+         dc ad(0)                                                       02-DCCCA
00001D20 0000000000001000                   3323+         dc ad(4096)                                                    02-DCCCA
00001D28 20                                 3324+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001D29 03                                 3325+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001D2A 03                                 3326+         dc al1(3)                                                      02-DCCCA
00001D2B 08                                 3327+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001D2C 00                                 3328+         dc bl.8'00000000'                                              02-DCCCA
00001D2D 000000                             3329+         dc al3(0)                                                      02-DCCCA
00001D30 0000000000001CE8                   3330+         dc ad(@LNAME1428)                                              02-DCCCA
00001D38                                    3331+         ds 0d                                                          02-DCCCA
00001D38 0000000000001D00                   3332+         dc ad($eye0083)                                                02-DCCCA
00001D40 0000000000000000                   3333+         dc ad(0)                                                       02-DCCCA
00001D48                                    3334+         ds    0d                                                       01-DCCPR
00001D48                                    3335+rd_kafka_q_keep ds 0d                                                   01-DCCPR
00001D48                                    3336+@REGION_1428_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001D48 EBEC D008 0024          00000008   3337+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001D4E E3E0 D088 0004          00000088   3338+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001D54 E3C0 D090 0004          00000090   3339+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001D5A B904 002E                          3340+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001D5E E3B0 C018 0004          00000018   3341+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001D64 A7EB 00B0               000000B0   3342+         aghi  14,176              increase by frame size               01-DCCPR
00001D68 E3E0 C020 0021          00000020   3343+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001D6E 4720 B020               00000020   3344+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001D72                                    3345+@PER_1428 ds   0h                                                       01-DCCPR
00001D72 EBDE 2080 0024          00000080   3346+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001D78 E3C0 2090 0024          00000090   3347+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001D7E B904 00D2                          3348+         lgr   13,2                set real frame pointer               01-DCCPR
00001D82 B904 00CF                          3349+         lgr   12,15               set base reg                         01-DCCPR
                        00001D48            3350+         using @REGION_1428_1,12                                        01-DCCPR
                                            3351 * ******* End of Prologue
                                            3352 * *
                                            3353 * ***           mtx_lock(&rkq->rkq_lock);
00001D86 E320 1000 0004          00000000   3354          LG    2,0(0,1)    ; rkq
00001D8C E320 D0A8 0024          000000A8   3355          STG   2,168(0,13)
00001D92 4110 D0A8               000000A8   3356          LA    1,168(0,13)
00001D96 E3F0 C0C8 0004          00001E10   3357          LG    15,@lit_1428_64 ; mtx_lock
00001D9C                                    3358 @@gen_label79 DS    0H
00001D9C 05EF                               3359          BALR  14,15
00001D9E                                    3360 @@gen_label80 DS    0H
                                            3361 * ***           rkq->rkq_refcnt++;
00001D9E 58F0 2080               00000080   3362          L     15,128(0,2)
00001DA2 A7FA 0001               00000001   3363          AHI   15,1
00001DA6 50F0 2080               00000080   3364          ST    15,128(0,2)
                                            3365 * ***           mtx_unlock(&rkq->rkq_lock);
00001DAA E320 D0A8 0024          000000A8   3366          STG   2,168(0,13)
00001DB0 4110 D0A8               000000A8   3367          LA    1,168(0,13)
00001DB4 E3F0 C0D0 0004          00001E18   3368          LG    15,@lit_1428_65 ; mtx_unlock
00001DBA                                    3369 @@gen_label81 DS    0H
00001DBA 05EF                               3370          BALR  14,15
00001DBC                                    3371 @@gen_label82 DS    0H
                                            3372 * ***      return rkq;
00001DBC B904 00F2                          3373          LGR   15,2
                                            3374 * ***   }
                                            3375 * * **** Start of Epilogue
                                            3376          DCCEPIL
00001DC0                                    3377+         ds 0h                                                          01-DCCEP
                                            3378+* Epilog
00001DC0 D707 D088 D088 00000088 00000088   3379+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DC6 E3D0 D080 0004          00000080   3380+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DCC E3C0 D090 0004          00000090   3381+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001DD2 E3B0 C018 0004          00000018   3382+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001DD8 E3C0 B010 0021          00000010   3383+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001DDE E3E0 D008 0004          00000008   3384+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001DE4 EB1C D020 0004          00000020   3385+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001DEA 078E                               3386+         bcr 8,14                if same dsab, just return              01-DCCEP
00001DEC E3F0 D010 0024          00000010   3387+         stg 15,16(0,13)         save return code                       01-DCCEP
00001DF2 E300 D018 0024          00000018   3388+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   75 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001DF8 E3F0 D090 0004          00000090   3389+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001DFE E3F0 F018 0004          00000018   3390+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E04 47F0 F040               00000040   3391+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3392+* End of Epilog
                                            3393 * * **** End of Epilogue
00001E08                                    3394          DS    0D
00001E08 000000B0                           3395 @FRAMESIZE_1428 DC F'176'
00001E0C 00000000
00001E10 0000000000000000                   3396 @lit_1428_64 DC AD(mtx_lock)
00001E18 0000000000000000                   3397 @lit_1428_65 DC AD(mtx_unlock)
                                            3398          DROP  12
                                            3399 *
                                            3400 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                            3401 *      (FUNCTION #1428)
                                            3402 *
00000000                00000000 000000A8   3403 @AUTO#rd_kafka_q_keep DSECT
00000000                                    3404          DS    XL168
                                            3405 *
00001E20                00000000 00014658   3406 @CODE    CSECT
                                            3407 *
                                            3408 *
                                            3409 *
                                            3410 * ....... start of rd_kafka_q_disable0
00001E20                                    3411 @LNAME1432 DS  0H
00001E20 00000013                           3412          DC    X'00000013'
00001E24 99846D9281869281                   3413          DC    C'rd_kafka_q_disable0'
00001E37 00                                 3414          DC    X'00'
                                            3415 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                            3416          macro
                                            3417          dccextrn &m
                                            3418          gblc    &$dccext(1000)
                                            3419          gbla    &$dccexti
                                            3420          lcla    &i
                                            3421 &$dccext(&$dccexti+1) setc    '&m'
                                            3422 &i       seta    1
                                            3423 .loop    aif    (&i gt &$dccexti).around
                                            3424          aif    ('&$dccext(&i)' eq '&m').getout
                                            3425 &i       seta    &i+1
                                            3426          ago     .loop
                                            3427 .around  anop
                                            3428 &$dccexti seta &$dccexti+1
                                            3429          extrn  &m
                                            3430 .getout  anop
                                            3431          mend
00001E38                                    3432+$eye0086    ds    0d                                                    02-DCCCA
00001E38 C4C3C3                             3433+         dc cl3'DCC'                                                    02-DCCCA
00001E3B 01                                 3434+         dc xl1'01' format one                                          02-DCCCA
00001E3C 00000000                           3435+         dc a(0)                                                        02-DCCCA
00001E40 0000000000001EAA                   3436+         dc ad(@PER_1432)                                               02-DCCCA
00001E48 00000000000000B0                   3437+         dc ad(176)                                                     02-DCCCA
00001E50 0000000000000000                   3438+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   76 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001E58 0000000000001000                   3439+         dc ad(4096)                                                    02-DCCCA
00001E60 20                                 3440+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E61 03                                 3441+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E62 03                                 3442+         dc al1(3)                                                      02-DCCCA
00001E63 08                                 3443+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E64 00                                 3444+         dc bl.8'00000000'                                              02-DCCCA
00001E65 000000                             3445+         dc al3(0)                                                      02-DCCCA
00001E68 0000000000001E20                   3446+         dc ad(@LNAME1432)                                              02-DCCCA
00001E70                                    3447+         ds 0d                                                          02-DCCCA
00001E70 0000000000001E38                   3448+         dc ad($eye0086)                                                02-DCCCA
00001E78 0000000000000000                   3449+         dc ad(0)                                                       02-DCCCA
00001E80                                    3450+         ds    0d                                                       01-DCCPR
00001E80                                    3451+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
00001E80                                    3452+@REGION_1432_1 ds 0h                                                    01-DCCPR
00001E80 EBEC D008 0024          00000008   3453+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E86 E3E0 D088 0004          00000088   3454+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001E8C E3C0 D090 0004          00000090   3455+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E92 B904 002E                          3456+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E96 E3B0 C018 0004          00000018   3457+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E9C A7EB 00B0               000000B0   3458+         aghi  14,176              increase by frame size               01-DCCPR
00001EA0 E3E0 C020 0021          00000020   3459+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001EA6 4720 B020               00000020   3460+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001EAA                                    3461+@PER_1432 ds   0h                                                       01-DCCPR
00001EAA EBDE 2080 0024          00000080   3462+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001EB0 E3C0 2090 0024          00000090   3463+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001EB6 B904 00D2                          3464+         lgr   13,2                set real frame pointer               01-DCCPR
00001EBA B904 00CF                          3465+         lgr   12,15               set base reg                         01-DCCPR
                        00001E80            3466+         using @REGION_1432_1,12                                        01-DCCPR
                                            3467 * ******* End of Prologue
                                            3468 * *
                                            3469 * ***           if (do_lock)
00001EBE E320 1000 0004          00000000   3470          LG    2,0(0,1)    ; rkq
00001EC4 E330 100C 0012          0000000C   3471          LT    3,12(0,1)   ; do_lock
00001ECA 4780 C060               00001EE0   3472          BZ    @L256
                                            3473 * ***                   mtx_lock(&rkq->rkq_lock);
00001ECE E320 D0A8 0024          000000A8   3474          STG   2,168(0,13)
00001ED4 4110 D0A8               000000A8   3475          LA    1,168(0,13)
00001ED8 E3F0 C0D8 0004          00001F58   3476          LG    15,@lit_1432_67 ; mtx_lock
00001EDE                                    3477 @@gen_label84 DS    0H
00001EDE 05EF                               3478          BALR  14,15
00001EE0                                    3479 @@gen_label85 DS    0H
00001EE0                                    3480 @L256    DS    0H
                                            3481 * ***           rkq->rkq_flags &= ~0x2;
00001EE0 58F0 2084               00000084   3482          L     15,132(0,2)
00001EE4 A5F7 FFFD               0000FFFD   3483          NILL  15,65533
00001EE8 50F0 2084               00000084   3484          ST    15,132(0,2)
                                            3485 * ***           if (do_lock)
00001EEC 1233                               3486          LTR   3,3
00001EEE 4780 C084               00001F04   3487          BZ    @ret_lab_1432
                                            3488 * ***                   mtx_unlock(&rkq->rkq_lock);
00001EF2 E320 D0A8 0024          000000A8   3489          STG   2,168(0,13)
00001EF8 4110 D0A8               000000A8   3490          LA    1,168(0,13)
                                                                                                                           Page   77 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001EFC E3F0 C0E0 0004          00001F60   3491          LG    15,@lit_1432_68 ; mtx_unlock
00001F02                                    3492 @@gen_label87 DS    0H
00001F02 05EF                               3493          BALR  14,15
00001F04                                    3494 @@gen_label88 DS    0H
00001F04                                    3495 @L257    DS    0H
                                            3496 * ***   }
00001F04                                    3497 @ret_lab_1432 DS 0H
                                            3498 * * **** Start of Epilogue
                                            3499          DCCEPIL
00001F04                                    3500+         ds 0h                                                          01-DCCEP
                                            3501+* Epilog
00001F04 D707 D088 D088 00000088 00000088   3502+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001F0A E3D0 D080 0004          00000080   3503+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F10 E3C0 D090 0004          00000090   3504+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F16 E3B0 C018 0004          00000018   3505+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001F1C E3C0 B010 0021          00000010   3506+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F22 E3E0 D008 0004          00000008   3507+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F28 EB1C D020 0004          00000020   3508+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F2E 078E                               3509+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F30 E3F0 D010 0024          00000010   3510+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F36 E300 D018 0024          00000018   3511+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F3C E3F0 D090 0004          00000090   3512+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F42 E3F0 F018 0004          00000018   3513+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F48 47F0 F040               00000040   3514+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3515+* End of Epilog
                                            3516 * * **** End of Epilogue
00001F50                                    3517          DS    0D
00001F50 000000B0                           3518 @FRAMESIZE_1432 DC F'176'
00001F54 00000000
00001F58 0000000000000000                   3519 @lit_1432_67 DC AD(mtx_lock)
00001F60 0000000000000000                   3520 @lit_1432_68 DC AD(mtx_unlock)
                                            3521          DROP  12
                                            3522 *
                                            3523 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            3524 *      (FUNCTION #1432)
                                            3525 *
00000000                00000000 000000A8   3526 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    3527          DS    XL168
                                            3528 *
00001F68                00000000 00014658   3529 @CODE    CSECT
                                            3530 *
                                            3531 *
                                            3532 *
                                            3533 * ....... start of rd_kafka_q_destroy0
00001F68                                    3534 @LNAME1435 DS  0H
00001F68 00000013                           3535          DC    X'00000013'
00001F6C 99846D9281869281                   3536          DC    C'rd_kafka_q_destroy0'
00001F7F 00                                 3537          DC    X'00'
                                            3538 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                            3539          macro
                                            3540          dccextrn &m
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3541          gblc    &$dccext(1000)
                                            3542          gbla    &$dccexti
                                            3543          lcla    &i
                                            3544 &$dccext(&$dccexti+1) setc    '&m'
                                            3545 &i       seta    1
                                            3546 .loop    aif    (&i gt &$dccexti).around
                                            3547          aif    ('&$dccext(&i)' eq '&m').getout
                                            3548 &i       seta    &i+1
                                            3549          ago     .loop
                                            3550 .around  anop
                                            3551 &$dccexti seta &$dccexti+1
                                            3552          extrn  &m
                                            3553 .getout  anop
                                            3554          mend
00001F80                                    3555+$eye0089    ds    0d                                                    02-DCCCA
00001F80 C4C3C3                             3556+         dc cl3'DCC'                                                    02-DCCCA
00001F83 01                                 3557+         dc xl1'01' format one                                          02-DCCCA
00001F84 00000000                           3558+         dc a(0)                                                        02-DCCCA
00001F88 0000000000001FF2                   3559+         dc ad(@PER_1435)                                               02-DCCCA
00001F90 00000000000000D8                   3560+         dc ad(216)                                                     02-DCCCA
00001F98 0000000000000000                   3561+         dc ad(0)                                                       02-DCCCA
00001FA0 0000000000001000                   3562+         dc ad(4096)                                                    02-DCCCA
00001FA8 20                                 3563+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FA9 03                                 3564+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FAA 03                                 3565+         dc al1(3)                                                      02-DCCCA
00001FAB 08                                 3566+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FAC 00                                 3567+         dc bl.8'00000000'                                              02-DCCCA
00001FAD 000000                             3568+         dc al3(0)                                                      02-DCCCA
00001FB0 0000000000001F68                   3569+         dc ad(@LNAME1435)                                              02-DCCCA
00001FB8                                    3570+         ds 0d                                                          02-DCCCA
00001FB8 0000000000001F80                   3571+         dc ad($eye0089)                                                02-DCCCA
00001FC0 0000000000000000                   3572+         dc ad(0)                                                       02-DCCCA
00001FC8                                    3573+         ds    0d                                                       01-DCCPR
00001FC8                                    3574+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00001FC8                                    3575+@REGION_1435_1 ds 0h                                                    01-DCCPR
00001FC8 EBEC D008 0024          00000008   3576+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FCE E3E0 D088 0004          00000088   3577+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FD4 E3C0 D090 0004          00000090   3578+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001FDA B904 002E                          3579+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001FDE E3B0 C018 0004          00000018   3580+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001FE4 A7EB 00D8               000000D8   3581+         aghi  14,216              increase by frame size               01-DCCPR
00001FE8 E3E0 C020 0021          00000020   3582+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001FEE 4720 B020               00000020   3583+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001FF2                                    3584+@PER_1435 ds   0h                                                       01-DCCPR
00001FF2 EBDE 2080 0024          00000080   3585+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001FF8 E3C0 2090 0024          00000090   3586+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001FFE B904 00D2                          3587+         lgr   13,2                set real frame pointer               01-DCCPR
00002002 B904 00CF                          3588+         lgr   12,15               set base reg                         01-DCCPR
                        00001FC8            3589+         using @REGION_1435_1,12                                        01-DCCPR
                                            3590 * ******* End of Prologue
                                            3591 * *
                                            3592 * ***           int do_delete = 0;
                                                                                                                           Page   79 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002006 E320 1000 0004          00000000   3593          LG    2,0(0,1)    ; rkq
                                            3594 * ***
                                            3595 * ***           if (disable) {
0000200C E3F0 100C 0012          0000000C   3596          LT    15,12(0,1)  ; disable
00002012 4780 C07E               00002046   3597          BZ    @L258
                                            3598 * ***
                                            3599 * ***
                                            3600 * ***
                                            3601 * ***
                                            3602 * ***                   rd_kafka_q_disable0(rkq, 1);
00002016 E320 D0B0 0024          000000B0   3603          STG   2,176(0,13)
0000201C E548 D0B8 0001          000000B8   3604          MVGHI 184(13),1
00002022 4110 D0B0               000000B0   3605          LA    1,176(0,13)
00002026 E3F0 C170 0004          00002138   3606          LG    15,@lit_1435_71 ; rd_kafka_q_disable0
0000202C                                    3607 @@gen_label90 DS    0H
0000202C 05EF                               3608          BALR  14,15
0000202E                                    3609 @@gen_label91 DS    0H
                                            3610 * ***                   rd_kafka_q_purge0(rkq, 1);
0000202E E320 D0B0 0024          000000B0   3611          STG   2,176(0,13)
00002034 E548 D0B8 0001          000000B8   3612          MVGHI 184(13),1
0000203A 4110 D0B0               000000B0   3613          LA    1,176(0,13)
0000203E E3F0 C178 0004          00002140   3614          LG    15,@lit_1435_72 ; rd_kafka_q_purge0
00002044                                    3615 @@gen_label92 DS    0H
00002044 05EF                               3616          BALR  14,15
00002046                                    3617 @@gen_label93 DS    0H
                                            3618 * ***           }
00002046                                    3619 @L258    DS    0H
                                            3620 * ***
                                            3621 * ***           mtx_lock(&rkq->rkq_lock);
00002046 E320 D0B0 0024          000000B0   3622          STG   2,176(0,13)
0000204C 4110 D0B0               000000B0   3623          LA    1,176(0,13)
00002050 E3F0 C180 0004          00002148   3624          LG    15,@lit_1435_73 ; mtx_lock
00002056                                    3625 @@gen_label94 DS    0H
00002056 05EF                               3626          BALR  14,15
00002058                                    3627 @@gen_label95 DS    0H
                                            3628 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            3629 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            3630 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
00002058                                    3631 @L259    DS    0H
00002058 E55C 2080 0000          00000080   3632          CHSI  128(2),0
0000205E 4720 C0DC               000020A4   3633          BH    @L262
00002062 E3F0 C198 0004          00002160   3634          LG    15,@lit_1435_74
00002068 4110 F054               00000054   3635          LA    1,84(0,15)
0000206C E310 D0B0 0024          000000B0   3636          STG   1,176(0,13)
00002072 E548 D0B8 00D3          000000B8   3637          MVGHI 184(13),211
00002078 E310 C190 0004          00002158   3638          LG    1,@lit_1435_75
0000207E 4110 1072               00000072   3639          LA    1,114(0,1)
00002082 E310 D0C0 0024          000000C0   3640          STG   1,192(0,13)
00002088 D707 D0C8 D0C8 000000C8 000000C8   3641          XC    200(8,13),200(13)
0000208E 41F0 F080               00000080   3642          LA    15,128(0,15)
00002092 E3F0 D0D0 0024          000000D0   3643          STG   15,208(0,13)
00002098 4110 D0B0               000000B0   3644          LA    1,176(0,13)
                                                                                                                           Page   80 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000209C E3F0 C188 0004          00002150   3645          LG    15,@lit_1435_76 ; rd_kafka_crash
000020A2                                    3646 @@gen_label97 DS    0H
000020A2 05EF                               3647          BALR  14,15
000020A4                                    3648 @@gen_label98 DS    0H
000020A4                                    3649 @L262    DS    0H
                                            3650 * ***           do_delete = !--rkq->rkq_refcnt;
000020A4 58F0 2080               00000080   3651          L     15,128(0,2)
000020A8 A7FA FFFF               0000FFFF   3652          AHI   15,-1
000020AC 50F0 2080               00000080   3653          ST    15,128(0,2)
000020B0 103F                               3654          LPR   3,15
000020B2 A73A FFFF               0000FFFF   3655          AHI   3,-1
000020B6 8830 001F               0000001F   3656          SRL   3,31(0)
                                            3657 * ***           mtx_unlock(&rkq->rkq_lock);
000020BA E320 D0B0 0024          000000B0   3658          STG   2,176(0,13)
000020C0 4110 D0B0               000000B0   3659          LA    1,176(0,13)
000020C4 E3F0 C1A0 0004          00002168   3660          LG    15,@lit_1435_77 ; mtx_unlock
000020CA                                    3661 @@gen_label99 DS    0H
000020CA 05EF                               3662          BALR  14,15
000020CC                                    3663 @@gen_label100 DS    0H
                                            3664 * ***
                                            3665 * ***           if (((do_delete)))
000020CC 1233                               3666          LTR   3,3
000020CE 4780 C11C               000020E4   3667          BZ    @L263
                                            3668 * ***                   rd_kafka_q_destroy_final(rkq);
000020D2 E320 D0B0 0024          000000B0   3669          STG   2,176(0,13)
000020D8 4110 D0B0               000000B0   3670          LA    1,176(0,13)
000020DC E3F0 C1A8 0004          00002170   3671          LG    15,@lit_1435_78 ; rd_kafka_q_destroy_final
000020E2                                    3672 @@gen_label102 DS    0H
000020E2 05EF                               3673          BALR  14,15
000020E4                                    3674 @@gen_label103 DS    0H
000020E4                                    3675 @L263    DS    0H
                                            3676 * ***   }
000020E4                                    3677 @ret_lab_1435 DS 0H
                                            3678 * * **** Start of Epilogue
                                            3679          DCCEPIL
000020E4                                    3680+         ds 0h                                                          01-DCCEP
                                            3681+* Epilog
000020E4 D707 D088 D088 00000088 00000088   3682+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000020EA E3D0 D080 0004          00000080   3683+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020F0 E3C0 D090 0004          00000090   3684+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020F6 E3B0 C018 0004          00000018   3685+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020FC E3C0 B010 0021          00000010   3686+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002102 E3E0 D008 0004          00000008   3687+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002108 EB1C D020 0004          00000020   3688+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000210E 078E                               3689+         bcr 8,14                if same dsab, just return              01-DCCEP
00002110 E3F0 D010 0024          00000010   3690+         stg 15,16(0,13)         save return code                       01-DCCEP
00002116 E300 D018 0024          00000018   3691+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000211C E3F0 D090 0004          00000090   3692+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002122 E3F0 F018 0004          00000018   3693+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002128 47F0 F040               00000040   3694+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3695+* End of Epilog
                                            3696 * * **** End of Epilogue
                                                                                                                           Page   81 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002130                                    3697          DS    0D
00002130 000000D8                           3698 @FRAMESIZE_1435 DC F'216'
00002134 00000000
00002138 0000000000001E80                   3699 @lit_1435_71 DC AD(rd_kafka_q_disable0)
00002140 0000000000000000                   3700 @lit_1435_72 DC AD(rd_kafka_q_purge0)
00002148 0000000000000000                   3701 @lit_1435_73 DC AD(mtx_lock)
00002150 0000000000000000                   3702 @lit_1435_76 DC AD(rd_kafka_crash)
00002158 0000000000014658                   3703 @lit_1435_75 DC AD(@DATA)
00002160 0000000000014A98                   3704 @lit_1435_74 DC AD(@strings@)
00002168 0000000000000000                   3705 @lit_1435_77 DC AD(mtx_unlock)
00002170 0000000000000000                   3706 @lit_1435_78 DC AD(rd_kafka_q_destroy_final)
                                            3707          DROP  12
                                            3708 *
                                            3709 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            3710 *      (FUNCTION #1435)
                                            3711 *
00000000                00000000 000000AC   3712 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    3713          DS    XL168
000000A8                                    3714 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            3715 *
00002178                00000000 00014658   3716 @CODE    CSECT
                                            3717 *
                                            3718 *
                                            3719 *
                                            3720 * ....... start of rd_kafka_q_destroy_owner
00002178                                    3721 @LNAME1436 DS  0H
00002178 00000018                           3722          DC    X'00000018'
0000217C 99846D9281869281                   3723          DC    C'rd_kafka_q_destroy_owner'
00002194 00                                 3724          DC    X'00'
                                            3725 rd_kafka_q_destroy_owner DCCPRLG CINDEX=1436,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1436
                                            3726          macro
                                            3727          dccextrn &m
                                            3728          gblc    &$dccext(1000)
                                            3729          gbla    &$dccexti
                                            3730          lcla    &i
                                            3731 &$dccext(&$dccexti+1) setc    '&m'
                                            3732 &i       seta    1
                                            3733 .loop    aif    (&i gt &$dccexti).around
                                            3734          aif    ('&$dccext(&i)' eq '&m').getout
                                            3735 &i       seta    &i+1
                                            3736          ago     .loop
                                            3737 .around  anop
                                            3738 &$dccexti seta &$dccexti+1
                                            3739          extrn  &m
                                            3740 .getout  anop
                                            3741          mend
00002198                                    3742+$eye0092    ds    0d                                                    02-DCCCA
00002198 C4C3C3                             3743+         dc cl3'DCC'                                                    02-DCCCA
0000219B 01                                 3744+         dc xl1'01' format one                                          02-DCCCA
0000219C 00000000                           3745+         dc a(0)                                                        02-DCCCA
000021A0 000000000000220A                   3746+         dc ad(@PER_1436)                                               02-DCCCA
                                                                                                                           Page   82 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000021A8 00000000000000B8                   3747+         dc ad(184)                                                     02-DCCCA
000021B0 0000000000000000                   3748+         dc ad(0)                                                       02-DCCCA
000021B8 0000000000001000                   3749+         dc ad(4096)                                                    02-DCCCA
000021C0 20                                 3750+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000021C1 03                                 3751+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000021C2 03                                 3752+         dc al1(3)                                                      02-DCCCA
000021C3 08                                 3753+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000021C4 00                                 3754+         dc bl.8'00000000'                                              02-DCCCA
000021C5 000000                             3755+         dc al3(0)                                                      02-DCCCA
000021C8 0000000000002178                   3756+         dc ad(@LNAME1436)                                              02-DCCCA
000021D0                                    3757+         ds 0d                                                          02-DCCCA
000021D0 0000000000002198                   3758+         dc ad($eye0092)                                                02-DCCCA
000021D8 0000000000000000                   3759+         dc ad(0)                                                       02-DCCCA
000021E0                                    3760+         ds    0d                                                       01-DCCPR
000021E0                                    3761+rd_kafka_q_destroy_owner ds 0d                                          01-DCCPR
000021E0                                    3762+@REGION_1436_1 ds 0h                                                    01-DCCPR
000021E0 EBEC D008 0024          00000008   3763+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000021E6 E3E0 D088 0004          00000088   3764+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000021EC E3C0 D090 0004          00000090   3765+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000021F2 B904 002E                          3766+         lgr   2,14                copy addr of our savearea            01-DCCPR
000021F6 E3B0 C018 0004          00000018   3767+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000021FC A7EB 00B8               000000B8   3768+         aghi  14,184              increase by frame size               01-DCCPR
00002200 E3E0 C020 0021          00000020   3769+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002206 4720 B020               00000020   3770+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000220A                                    3771+@PER_1436 ds   0h                                                       01-DCCPR
0000220A EBDE 2080 0024          00000080   3772+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002210 E3C0 2090 0024          00000090   3773+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002216 B904 00D2                          3774+         lgr   13,2                set real frame pointer               01-DCCPR
0000221A B904 00CF                          3775+         lgr   12,15               set base reg                         01-DCCPR
                        000021E0            3776+         using @REGION_1436_1,12                                        01-DCCPR
                                            3777 * ******* End of Prologue
                                            3778 * *
                                            3779 * ***           rd_kafka_q_destroy0(rkq, 1);
0000221E E3F0 1000 0004          00000000   3780          LG    15,0(0,1)   ; rkq
00002224 E3F0 D0A8 0024          000000A8   3781          STG   15,168(0,13)
0000222A E548 D0B0 0001          000000B0   3782          MVGHI 176(13),1
00002230 4110 D0A8               000000A8   3783          LA    1,168(0,13)
00002234 E3F0 C0B0 0004          00002290   3784          LG    15,@lit_1436_80 ; rd_kafka_q_destroy0
0000223A                                    3785 @@gen_label104 DS    0H
0000223A 05EF                               3786          BALR  14,15
0000223C                                    3787 @@gen_label105 DS    0H
                                            3788 * ***   }
0000223C                                    3789 @ret_lab_1436 DS 0H
                                            3790 * * **** Start of Epilogue
                                            3791          DCCEPIL
0000223C                                    3792+         ds 0h                                                          01-DCCEP
                                            3793+* Epilog
0000223C D707 D088 D088 00000088 00000088   3794+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002242 E3D0 D080 0004          00000080   3795+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002248 E3C0 D090 0004          00000090   3796+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000224E E3B0 C018 0004          00000018   3797+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002254 E3C0 B010 0021          00000010   3798+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   83 
  Active Usings: @REGION_1436_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000225A E3E0 D008 0004          00000008   3799+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002260 EB1C D020 0004          00000020   3800+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002266 078E                               3801+         bcr 8,14                if same dsab, just return              01-DCCEP
00002268 E3F0 D010 0024          00000010   3802+         stg 15,16(0,13)         save return code                       01-DCCEP
0000226E E300 D018 0024          00000018   3803+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002274 E3F0 D090 0004          00000090   3804+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000227A E3F0 F018 0004          00000018   3805+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002280 47F0 F040               00000040   3806+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3807+* End of Epilog
                                            3808 * * **** End of Epilogue
00002288                                    3809          DS    0D
00002288 000000B8                           3810 @FRAMESIZE_1436 DC F'184'
0000228C 00000000
00002290 0000000000001FC8                   3811 @lit_1436_80 DC AD(rd_kafka_q_destroy0)
                                            3812          DROP  12
                                            3813 *
                                            3814 *   DSECT for automatic variables in "rd_kafka_q_destroy_owner"
                                            3815 *      (FUNCTION #1436)
                                            3816 *
00000000                00000000 000000A8   3817 @AUTO#rd_kafka_q_destroy_owner DSECT
00000000                                    3818          DS    XL168
                                            3819 *
00002298                00000000 00014658   3820 @CODE    CSECT
                                            3821 *
                                            3822 *
                                            3823 *
                                            3824 * ....... start of rd_kafka_q_fwd_get
00002298                                    3825 @LNAME1439 DS  0H
00002298 00000012                           3826          DC    X'00000012'
0000229C 99846D9281869281                   3827          DC    C'rd_kafka_q_fwd_get'
000022AE 00                                 3828          DC    X'00'
                                            3829 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                            3830          macro
                                            3831          dccextrn &m
                                            3832          gblc    &$dccext(1000)
                                            3833          gbla    &$dccexti
                                            3834          lcla    &i
                                            3835 &$dccext(&$dccexti+1) setc    '&m'
                                            3836 &i       seta    1
                                            3837 .loop    aif    (&i gt &$dccexti).around
                                            3838          aif    ('&$dccext(&i)' eq '&m').getout
                                            3839 &i       seta    &i+1
                                            3840          ago     .loop
                                            3841 .around  anop
                                            3842 &$dccexti seta &$dccexti+1
                                            3843          extrn  &m
                                            3844 .getout  anop
                                            3845          mend
000022B0                                    3846+$eye0095    ds    0d                                                    02-DCCCA
000022B0 C4C3C3                             3847+         dc cl3'DCC'                                                    02-DCCCA
000022B3 01                                 3848+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000022B4 00000000                           3849+         dc a(0)                                                        02-DCCCA
000022B8 0000000000002322                   3850+         dc ad(@PER_1439)                                               02-DCCCA
000022C0 00000000000000B8                   3851+         dc ad(184)                                                     02-DCCCA
000022C8 0000000000000000                   3852+         dc ad(0)                                                       02-DCCCA
000022D0 0000000000001000                   3853+         dc ad(4096)                                                    02-DCCCA
000022D8 20                                 3854+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000022D9 03                                 3855+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000022DA 03                                 3856+         dc al1(3)                                                      02-DCCCA
000022DB 08                                 3857+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000022DC 00                                 3858+         dc bl.8'00000000'                                              02-DCCCA
000022DD 000000                             3859+         dc al3(0)                                                      02-DCCCA
000022E0 0000000000002298                   3860+         dc ad(@LNAME1439)                                              02-DCCCA
000022E8                                    3861+         ds 0d                                                          02-DCCCA
000022E8 00000000000022B0                   3862+         dc ad($eye0095)                                                02-DCCCA
000022F0 0000000000000000                   3863+         dc ad(0)                                                       02-DCCCA
000022F8                                    3864+         ds    0d                                                       01-DCCPR
000022F8                                    3865+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
000022F8                                    3866+@REGION_1439_1 ds 0h                                                    01-DCCPR
000022F8 EBEC D008 0024          00000008   3867+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000022FE E3E0 D088 0004          00000088   3868+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002304 E3C0 D090 0004          00000090   3869+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000230A B904 002E                          3870+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000230E E3B0 C018 0004          00000018   3871+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002314 A7EB 00B8               000000B8   3872+         aghi  14,184              increase by frame size               01-DCCPR
00002318 E3E0 C020 0021          00000020   3873+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000231E 4720 B020               00000020   3874+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002322                                    3875+@PER_1439 ds   0h                                                       01-DCCPR
00002322 EBDE 2080 0024          00000080   3876+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002328 E3C0 2090 0024          00000090   3877+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000232E B904 00D2                          3878+         lgr   13,2                set real frame pointer               01-DCCPR
00002332 B904 00CF                          3879+         lgr   12,15               set base reg                         01-DCCPR
                        000022F8            3880+         using @REGION_1439_1,12                                        01-DCCPR
                                            3881 * ******* End of Prologue
                                            3882 * *
00002336 E320 1000 0004          00000000   3883          LG    2,0(0,1)    ; rkq
                                            3884 * ***           rd_kafka_q_t *fwdq;
                                            3885 * ***           if (do_lock)
0000233C E340 100C 0012          0000000C   3886          LT    4,12(0,1)   ; do_lock
00002342 4780 C060               00002358   3887          BZ    @L270
                                            3888 * ***                   mtx_lock(&rkq->rkq_lock);
00002346 E320 D0B0 0024          000000B0   3889          STG   2,176(0,13)
0000234C 4110 D0B0               000000B0   3890          LA    1,176(0,13)
00002350 E3F0 C0F0 0004          000023E8   3891          LG    15,@lit_1439_82 ; mtx_lock
00002356                                    3892 @@gen_label107 DS    0H
00002356 05EF                               3893          BALR  14,15
00002358                                    3894 @@gen_label108 DS    0H
00002358                                    3895 @L270    DS    0H
                                            3896 * ***
                                            3897 * ***           if ((fwdq = rkq->rkq_fwdq))
00002358 E330 2058 0004          00000058   3898          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
0000235E B902 00F3                          3899          LTGR  15,3
00002362 4780 C080               00002378   3900          BZ    @L271
                                                                                                                           Page   85 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3901 * ***                   rd_kafka_q_keep(fwdq);
00002366 E330 D0B0 0024          000000B0   3902          STG   3,176(0,13)
0000236C 4110 D0B0               000000B0   3903          LA    1,176(0,13)
00002370 E3F0 C0F8 0004          000023F0   3904          LG    15,@lit_1439_83 ; rd_kafka_q_keep
00002376                                    3905 @@gen_label110 DS    0H
00002376 05EF                               3906          BALR  14,15
00002378                                    3907 @@gen_label111 DS    0H
00002378                                    3908 @L271    DS    0H
                                            3909 * ***
                                            3910 * ***           if (do_lock)
00002378 1244                               3911          LTR   4,4
0000237A 4780 C098               00002390   3912          BZ    @L272
                                            3913 * ***                   mtx_unlock(&rkq->rkq_lock);
0000237E E320 D0B0 0024          000000B0   3914          STG   2,176(0,13)
00002384 4110 D0B0               000000B0   3915          LA    1,176(0,13)
00002388 E3F0 C100 0004          000023F8   3916          LG    15,@lit_1439_84 ; mtx_unlock
0000238E                                    3917 @@gen_label113 DS    0H
0000238E 05EF                               3918          BALR  14,15
00002390                                    3919 @@gen_label114 DS    0H
00002390                                    3920 @L272    DS    0H
                                            3921 * ***
                                            3922 * ***           return fwdq;
00002390 B904 00F3                          3923          LGR   15,3
                                            3924 * ***   }
                                            3925 * * **** Start of Epilogue
                                            3926          DCCEPIL
00002394                                    3927+         ds 0h                                                          01-DCCEP
                                            3928+* Epilog
00002394 D707 D088 D088 00000088 00000088   3929+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000239A E3D0 D080 0004          00000080   3930+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000023A0 E3C0 D090 0004          00000090   3931+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000023A6 E3B0 C018 0004          00000018   3932+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000023AC E3C0 B010 0021          00000010   3933+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000023B2 E3E0 D008 0004          00000008   3934+         lg  14,8(0,13)          load up return address                 01-DCCEP
000023B8 EB1C D020 0004          00000020   3935+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000023BE 078E                               3936+         bcr 8,14                if same dsab, just return              01-DCCEP
000023C0 E3F0 D010 0024          00000010   3937+         stg 15,16(0,13)         save return code                       01-DCCEP
000023C6 E300 D018 0024          00000018   3938+         stg 0,24(0,13)          save more return code                  01-DCCEP
000023CC E3F0 D090 0004          00000090   3939+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000023D2 E3F0 F018 0004          00000018   3940+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000023D8 47F0 F040               00000040   3941+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3942+* End of Epilog
                                            3943 * * **** End of Epilogue
000023E0                                    3944          DS    0D
000023E0 000000B8                           3945 @FRAMESIZE_1439 DC F'184'
000023E4 00000000
000023E8 0000000000000000                   3946 @lit_1439_82 DC AD(mtx_lock)
000023F0 0000000000001D48                   3947 @lit_1439_83 DC AD(rd_kafka_q_keep)
000023F8 0000000000000000                   3948 @lit_1439_84 DC AD(mtx_unlock)
                                            3949          DROP  12
                                            3950 *
                                            3951 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3952 *      (FUNCTION #1439)
                                            3953 *
00000000                00000000 000000A8   3954 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    3955          DS    XL168
                                            3956 *
00002400                00000000 00014658   3957 @CODE    CSECT
                                            3958 *
                                            3959 *
                                            3960 *
                                            3961 * ....... start of rd_kafka_q_io_event
00002400                                    3962 @LNAME1441 DS  0H
00002400 00000013                           3963          DC    X'00000013'
00002404 99846D9281869281                   3964          DC    C'rd_kafka_q_io_event'
00002417 00                                 3965          DC    X'00'
                                            3966 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            3967          macro
                                            3968          dccextrn &m
                                            3969          gblc    &$dccext(1000)
                                            3970          gbla    &$dccexti
                                            3971          lcla    &i
                                            3972 &$dccext(&$dccexti+1) setc    '&m'
                                            3973 &i       seta    1
                                            3974 .loop    aif    (&i gt &$dccexti).around
                                            3975          aif    ('&$dccext(&i)' eq '&m').getout
                                            3976 &i       seta    &i+1
                                            3977          ago     .loop
                                            3978 .around  anop
                                            3979 &$dccexti seta &$dccexti+1
                                            3980          extrn  &m
                                            3981 .getout  anop
                                            3982          mend
00002418                                    3983+$eye0098    ds    0d                                                    02-DCCCA
00002418 C4C3C3                             3984+         dc cl3'DCC'                                                    02-DCCCA
0000241B 01                                 3985+         dc xl1'01' format one                                          02-DCCCA
0000241C 00000000                           3986+         dc a(0)                                                        02-DCCCA
00002420 000000000000248A                   3987+         dc ad(@PER_1441)                                               02-DCCCA
00002428 00000000000000C0                   3988+         dc ad(192)                                                     02-DCCCA
00002430 0000000000000000                   3989+         dc ad(0)                                                       02-DCCCA
00002438 0000000000001000                   3990+         dc ad(4096)                                                    02-DCCCA
00002440 20                                 3991+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002441 03                                 3992+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002442 03                                 3993+         dc al1(3)                                                      02-DCCCA
00002443 08                                 3994+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002444 00                                 3995+         dc bl.8'00000000'                                              02-DCCCA
00002445 000000                             3996+         dc al3(0)                                                      02-DCCCA
00002448 0000000000002400                   3997+         dc ad(@LNAME1441)                                              02-DCCCA
00002450                                    3998+         ds 0d                                                          02-DCCCA
00002450 0000000000002418                   3999+         dc ad($eye0098)                                                02-DCCCA
00002458 0000000000000000                   4000+         dc ad(0)                                                       02-DCCCA
00002460                                    4001+         ds    0d                                                       01-DCCPR
00002460                                    4002+rd_kafka_q_io_event ds 0d                                               01-DCCPR
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002460                                    4003+@REGION_1441_1 ds 0h                                                    01-DCCPR
00002460 EBEC D008 0024          00000008   4004+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002466 E3E0 D088 0004          00000088   4005+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000246C E3C0 D090 0004          00000090   4006+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002472 B904 002E                          4007+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002476 E3B0 C018 0004          00000018   4008+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000247C A7EB 00C0               000000C0   4009+         aghi  14,192              increase by frame size               01-DCCPR
00002480 E3E0 C020 0021          00000020   4010+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002486 4720 B020               00000020   4011+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000248A                                    4012+@PER_1441 ds   0h                                                       01-DCCPR
0000248A EBDE 2080 0024          00000080   4013+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002490 E3C0 2090 0024          00000090   4014+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002496 B904 00D2                          4015+         lgr   13,2                set real frame pointer               01-DCCPR
0000249A B904 00CF                          4016+         lgr   12,15               set base reg                         01-DCCPR
                        00002460            4017+         using @REGION_1441_1,12                                        01-DCCPR
                                            4018 * ******* End of Prologue
                                            4019 * *
0000249E E3F0 1000 0004          00000000   4020          LG    15,0(0,1)   ; rkq
                                            4021 * ***
                                            4022 * ***      if (((!rkq->rkq_qio)))
000024A4 E310 F090 0002          00000090   4023          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000024AA 4780 C102               00002562   4024          BZ    @ret_lab_1441
                                            4025 * ***         return;
000024AE                                    4026 @L275    DS    0H
                                            4027 * ***
                                            4028 * ***           if (rkq->rkq_qio->event_cb) {
000024AE E310 F090 0004          00000090   4029          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000024B4 E310 1020 0002          00000020   4030          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
000024BA 4780 C0A8               00002508   4031          BZ    @L276
                                            4032 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            4033 * ***                                          rkq->rkq_qio->event_cb_\
                                            4034 * opaque);
000024BE E310 F088 0004          00000088   4035          LG    1,136(0,15)
000024C4 E310 D0A8 0024          000000A8   4036          STG   1,168(0,13)
000024CA E310 F090 0004          00000090   4037          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000024D0 E310 1028 0004          00000028   4038          LG    1,40(0,1)
000024D6 E310 D0B0 0024          000000B0   4039          STG   1,176(0,13)
000024DC E3F0 F090 0004          00000090   4040          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000024E2 E3F0 F020 0004          00000020   4041          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
000024E8 4110 D0A8               000000A8   4042          LA    1,168(0,13)
000024EC                                    4043 @@gen_label117 DS    0H
000024EC 05EF                               4044          BALR  14,15
000024EE                                    4045 @@gen_label118 DS    0H
                                            4046 * ***                   return;
000024EE 47F0 C102               00002562   4047          B     @ret_lab_1441
000024F8                                    4048          DS    0D
000024F8 000000C0                           4049 @FRAMESIZE_1441 DC F'192'
000024FC 00000000
00002500 0000000000000000                   4050 @lit_1441_86 DC AD(write)
                                            4051 * ***           }
00002508                                    4052 @L276    DS    0H
                                            4053 * ***
                                                                                                                           Page   88 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4054 * ***
                                            4055 * ***
                                            4056 * ***
                                            4057 * ***
                                            4058 * ***
                                            4059 * ***           if (rkq->rkq_qio->sent)
00002508 E310 F090 0004          00000090   4060          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000250E 9500 1018      00000018 00000000   4061          CLI   24(1),0
00002512 4770 C102               00002562   4062          BNE   @ret_lab_1441
                                            4063 * ***                   return;
00002516                                    4064 @L277    DS    0H
                                            4065 * ***
                                            4066 * ***           rkq->rkq_qio->sent = 1;
00002516 E310 F090 0004          00000090   4067          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000251C 9201 1018      00000018 00000001   4068          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            4069 * ***
                                            4070 * ***
                                            4071 * ***
                                            4072 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            4073 * rkq->rkq_qio->size) == -1)
00002520 E310 F090 0004          00000090   4074          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00002526 E310 1000 0014          00000000   4075          LGF   1,0(0,1)
0000252C E310 D0A8 0024          000000A8   4076          STG   1,168(0,13)
00002532 E310 F090 0004          00000090   4077          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00002538 E310 1008 0004          00000008   4078          LG    1,8(0,1)
0000253E E310 D0B0 0024          000000B0   4079          STG   1,176(0,13)
00002544 E3F0 F090 0004          00000090   4080          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000254A E3F0 F014 0014          00000014   4081          LGF   15,20(0,15)
00002550 E3F0 D0B8 0024          000000B8   4082          STG   15,184(0,13)
00002556 4110 D0A8               000000A8   4083          LA    1,168(0,13)
0000255A E3F0 C0A0 0004          00002500   4084          LG    15,@lit_1441_86 ; write
00002560                                    4085 @@gen_label120 DS    0H
00002560 05EF                               4086          BALR  14,15
00002562                                    4087 @@gen_label121 DS    0H
                                            4088 * ***
                                            4089 * ***                   ;
00002562                                    4090 @L278    DS    0H
                                            4091 * ***   }
00002562                                    4092 @ret_lab_1441 DS 0H
                                            4093 * * **** Start of Epilogue
                                            4094          DCCEPIL
00002562                                    4095+         ds 0h                                                          01-DCCEP
                                            4096+* Epilog
00002562 D707 D088 D088 00000088 00000088   4097+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002568 E3D0 D080 0004          00000080   4098+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000256E E3C0 D090 0004          00000090   4099+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002574 E3B0 C018 0004          00000018   4100+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000257A E3C0 B010 0021          00000010   4101+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002580 E3E0 D008 0004          00000008   4102+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002586 EB1C D020 0004          00000020   4103+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000258C 078E                               4104+         bcr 8,14                if same dsab, just return              01-DCCEP
0000258E E3F0 D010 0024          00000010   4105+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page   89 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002594 E300 D018 0024          00000018   4106+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000259A E3F0 D090 0004          00000090   4107+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000025A0 E3F0 F018 0004          00000018   4108+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000025A6 47F0 F040               00000040   4109+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4110+* End of Epilog
                                            4111 * * **** End of Epilogue
                                            4112          DROP  12
                                            4113 *
                                            4114 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            4115 *      (FUNCTION #1441)
                                            4116 *
00000000                00000000 000000A8   4117 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    4118          DS    XL168
                                            4119 *
000025AA                00000000 00014658   4120 @CODE    CSECT
                                            4121 *
                                            4122 *
                                            4123 *
                                            4124 * ....... start of rd_kafka_op_cmp_prio
000025AA                                    4125 @LNAME1442 DS  0H
000025AA 00000014                           4126          DC    X'00000014'
000025AE 99846D9281869281                   4127          DC    C'rd_kafka_op_cmp_prio'
000025C2 00                                 4128          DC    X'00'
                                            4129 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            4130          macro
                                            4131          dccextrn &m
                                            4132          gblc    &$dccext(1000)
                                            4133          gbla    &$dccexti
                                            4134          lcla    &i
                                            4135 &$dccext(&$dccexti+1) setc    '&m'
                                            4136 &i       seta    1
                                            4137 .loop    aif    (&i gt &$dccexti).around
                                            4138          aif    ('&$dccext(&i)' eq '&m').getout
                                            4139 &i       seta    &i+1
                                            4140          ago     .loop
                                            4141 .around  anop
                                            4142 &$dccexti seta &$dccexti+1
                                            4143          extrn  &m
                                            4144 .getout  anop
                                            4145          mend
000025C8                                    4146+$eye0101    ds    0d                                                    02-DCCCA
000025C8 C4C3C3                             4147+         dc cl3'DCC'                                                    02-DCCCA
000025CB 01                                 4148+         dc xl1'01' format one                                          02-DCCCA
000025CC 00000000                           4149+         dc a(0)                                                        02-DCCCA
000025D0 0000000000000000                   4150+         dc ad(0)                                                       02-DCCCA
000025D8 00000000000000B0                   4151+         dc ad(176)                                                     02-DCCCA
000025E0 0000000000000000                   4152+         dc ad(0)                                                       02-DCCCA
000025E8 0000000000001000                   4153+         dc ad(4096)                                                    02-DCCCA
000025F0 20                                 4154+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000025F1 03                                 4155+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000025F2 03                                 4156+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000025F3 08                                 4157+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000025F4 00                                 4158+         dc bl.8'00000000'                                              02-DCCCA
000025F5 000000                             4159+         dc al3(0)                                                      02-DCCCA
000025F8 00000000000025AA                   4160+         dc ad(@LNAME1442)                                              02-DCCCA
00002600                                    4161+         ds 0d                                                          02-DCCCA
00002600 00000000000025C8                   4162+         dc ad($eye0101)                                                02-DCCCA
00002608 0000000000000000                   4163+         dc ad(0)                                                       02-DCCCA
00002610                                    4164+         ds    0d                                                       01-DCCPR
00002610                                    4165+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
00002610                                    4166+@REGION_1442_1 ds 0h                                                    01-DCCPR
00002610 EBEC D008 0024          00000008   4167+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002616 B904 00CF                          4168+         lgr   12,15               set base reg                         01-DCCPR
                        00002610            4169+         using @REGION_1442_1,12                                        01-DCCPR
                                            4170 * ******* End of Prologue
                                            4171 * *
                                            4172 * ***           const rd_kafka_op_t *a = _a, *b = _b;
0000261A E3F0 1000 0004          00000000   4173          LG    15,0(0,1)   ; _a
00002620 E310 1008 0004          00000008   4174          LG    1,8(0,1)    ; _b
                                            4175 * ***
                                            4176 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            4177 * >rko_prio) > (a->rko_prio)));
00002626 5820 1034               00000034   4178          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
0000262A 5920 F034               00000034   4179          C     2,52(0,15)
0000262E 47B0 C02A               0000263A   4180          BNL   @L279
00002632 A7F8 FFFF               0000FFFF   4181          LHI   15,-1       ; -1
00002636 47F0 C042               00002652   4182          B     @L280
0000263A                                    4183 @L279    DS    0H
0000263A 5810 1034               00000034   4184          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
0000263E 5910 F034               00000034   4185          C     1,52(0,15)
00002642 47D0 C03E               0000264E   4186          BNH   @@gen_label123
00002646 A7F8 0001               00000001   4187          LHI   15,1
0000264A 47F0 C042               00002652   4188          B     @@gen_label124
0000264E                                    4189 @@gen_label123 DS 0H
0000264E A7F8 0000               00000000   4190          LHI   15,0
00002652                                    4191 @@gen_label124 DS 0H
00002652                                    4192 @L280    DS    0H
00002652 B914 00FF                          4193          LGFR  15,15
                                            4194 * ***   }
                                            4195 * * **** Start of Epilogue
                                            4196          DCCEPIL
00002656                                    4197+         ds 0h                                                          01-DCCEP
                                            4198+* Epilog
                                            4199+* Epilog
00002656 E3E0 D008 0004          00000008   4200+         lg    14,8(,13) restore the reg                                01-DCCEP
0000265C EB1C D020 0004          00000020   4201+         lmg   1,12,32(13)                                              01-DCCEP
00002662 07FE                               4202+         br   14                                                        01-DCCEP
                                            4203+* End of Epilog
                                            4204 * * **** End of Epilogue
                                            4205          DROP  12
                                            4206 *
                                            4207 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            4208 *      (FUNCTION #1442)
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4209 *
00000000                00000000 000000A8   4210 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    4211          DS    XL168
                                            4212 *
00002664                00000000 00014658   4213 @CODE    CSECT
                                            4214 *
                                            4215 *
                                            4216 *
                                            4217 * ....... start of rd_kafka_q_enq0
00002664                                    4218 @LNAME1444 DS  0H
00002664 0000000F                           4219          DC    X'0000000F'
00002668 99846D9281869281                   4220          DC    C'rd_kafka_q_enq0'
00002677 00                                 4221          DC    X'00'
                                            4222 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                            4223          macro
                                            4224          dccextrn &m
                                            4225          gblc    &$dccext(1000)
                                            4226          gbla    &$dccexti
                                            4227          lcla    &i
                                            4228 &$dccext(&$dccexti+1) setc    '&m'
                                            4229 &i       seta    1
                                            4230 .loop    aif    (&i gt &$dccexti).around
                                            4231          aif    ('&$dccext(&i)' eq '&m').getout
                                            4232 &i       seta    &i+1
                                            4233          ago     .loop
                                            4234 .around  anop
                                            4235 &$dccexti seta &$dccexti+1
                                            4236          extrn  &m
                                            4237 .getout  anop
                                            4238          mend
00002678                                    4239+$eye0104    ds    0d                                                    02-DCCCA
00002678 C4C3C3                             4240+         dc cl3'DCC'                                                    02-DCCCA
0000267B 01                                 4241+         dc xl1'01' format one                                          02-DCCCA
0000267C 00000000                           4242+         dc a(0)                                                        02-DCCCA
00002680 00000000000026EA                   4243+         dc ad(@PER_1444)                                               02-DCCCA
00002688 00000000000000C0                   4244+         dc ad(192)                                                     02-DCCCA
00002690 0000000000000000                   4245+         dc ad(0)                                                       02-DCCCA
00002698 0000000000001000                   4246+         dc ad(4096)                                                    02-DCCCA
000026A0 20                                 4247+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026A1 03                                 4248+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026A2 03                                 4249+         dc al1(3)                                                      02-DCCCA
000026A3 08                                 4250+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026A4 00                                 4251+         dc bl.8'00000000'                                              02-DCCCA
000026A5 000000                             4252+         dc al3(0)                                                      02-DCCCA
000026A8 0000000000002664                   4253+         dc ad(@LNAME1444)                                              02-DCCCA
000026B0                                    4254+         ds 0d                                                          02-DCCCA
000026B0 0000000000002678                   4255+         dc ad($eye0104)                                                02-DCCCA
000026B8 0000000000000000                   4256+         dc ad(0)                                                       02-DCCCA
000026C0                                    4257+         ds    0d                                                       01-DCCPR
000026C0                                    4258+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
000026C0                                    4259+@REGION_1444_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000026C0 EBEC D008 0024          00000008   4260+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000026C6 E3E0 D088 0004          00000088   4261+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000026CC E3C0 D090 0004          00000090   4262+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000026D2 B904 002E                          4263+         lgr   2,14                copy addr of our savearea            01-DCCPR
000026D6 E3B0 C018 0004          00000018   4264+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000026DC A7EB 00C0               000000C0   4265+         aghi  14,192              increase by frame size               01-DCCPR
000026E0 E3E0 C020 0021          00000020   4266+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000026E6 4720 B020               00000020   4267+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000026EA                                    4268+@PER_1444 ds   0h                                                       01-DCCPR
000026EA EBDE 2080 0024          00000080   4269+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000026F0 E3C0 2090 0024          00000090   4270+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000026F6 B904 00D2                          4271+         lgr   13,2                set real frame pointer               01-DCCPR
000026FA B904 00CF                          4272+         lgr   12,15               set base reg                         01-DCCPR
                        000026C0            4273+         using @REGION_1444_1,12                                        01-DCCPR
                                            4274 * ******* End of Prologue
                                            4275 * *
                                            4276 * ***       if (((!rko->rko_prio)))
000026FE EB34 1000 0004          00000000   4277          LMG   3,4,0(1)    ; rkq
00002704 E3F0 4034 0012          00000034   4278          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
0000270A 4770 C090               00002750   4279          BNZ   @L288
                                            4280 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            4281 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            4282 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                            4283 * } while ( 0);
0000270E                                    4284 @L289    DS    0H
0000270E A7F9 0000               00000000   4285          LGHI  15,0        ; 0
00002712 E3F0 4000 0024          00000000   4286          STG   15,0(0,4)   ; rko
00002718 E3F0 3068 0004          00000068   4287          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
0000271E E3F0 4008 0024          00000008   4288          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00002724 E3F0 3068 0004          00000068   4289          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
0000272A E340 F000 0024          00000000   4290          STG   4,0(0,15)
00002730 E340 3068 0024          00000068   4291          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            4292 * ***       else if (at_head)
00002736 47F0 C1C2               00002882   4293          B     @L292
00002740                                    4294          DS    0D
00002740 000000C0                           4295 @FRAMESIZE_1444 DC F'192'
00002744 00000000
00002748 0000000000002610                   4296 @lit_1444_90 DC AD(rd_kafka_op_cmp_prio)
00002750                                    4297 @L288    DS    0H
00002750 E3F0 1014 0012          00000014   4298          LT    15,20(0,1)  ; at_head
00002756 4780 C0D8               00002798   4299          BZ    @L300
                                            4300 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            4301 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            4302 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            4303 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            4304 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
0000275A                                    4305 @L294    DS    0H
0000275A E3F0 3060 0004          00000060   4306          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00002760 E3F0 4000 0024          00000000   4307          STG   15,0(0,4)
00002766 B902 00FF                          4308          LTGR  15,15
0000276A 4780 C0BE               0000277E   4309          BE    @L297
0000276E E3F0 3060 0004          00000060   4310          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
                                                                                                                           Page   93 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002774 E340 F008 0024          00000008   4311          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
0000277A 47F0 C0C4               00002784   4312          B     @L298
0000277E                                    4313 @L297    DS    0H
0000277E E340 3068 0024          00000068   4314          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00002784                                    4315 @L298    DS    0H
00002784 E340 3060 0024          00000060   4316          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
0000278A 41F0 3060               00000060   4317          LA    15,96(0,3)
0000278E E3F0 4008 0024          00000008   4318          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            4319 * ***       else
00002794 47F0 C1C2               00002882   4320          B     @L292
                                            4321 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            4322 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            4323 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            4324 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            4325 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            4326 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            4327 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            4328 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            4329 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            4330 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            4331 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            4332 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            4333 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                            4334 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            4335 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            4336 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            4337 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            4338 * } } while(0);
00002798                                    4339 @L300    DS    0H
00002798 E3F0 3060 0002          00000060   4340          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000279E 4770 C120               000027E0   4341          BNE   @L303
000027A2                                    4342 @L304    DS    0H
000027A2 E3F0 3060 0004          00000060   4343          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000027A8 E3F0 4000 0024          00000000   4344          STG   15,0(0,4)
000027AE B902 00FF                          4345          LTGR  15,15
000027B2 4780 C106               000027C6   4346          BE    @L307
000027B6 E3F0 3060 0004          00000060   4347          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000027BC E340 F008 0024          00000008   4348          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
000027C2 47F0 C10C               000027CC   4349          B     @L308
000027C6                                    4350 @L307    DS    0H
000027C6 E340 3068 0024          00000068   4351          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
000027CC                                    4352 @L308    DS    0H
000027CC E340 3060 0024          00000060   4353          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000027D2 41F0 3060               00000060   4354          LA    15,96(0,3)
000027D6 E3F0 4008 0024          00000008   4355          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000027DC 47F0 C1C2               00002882   4356          B     @L309
000027E0                                    4357 @L303    DS    0H
000027E0 E320 3060 0004          00000060   4358          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000027E6 47F0 C1BA               0000287A   4359          B     @L311
000027EA                                    4360 @L310    DS    0H
000027EA E340 D0B0 0024          000000B0   4361          STG   4,176(0,13)
000027F0 E320 D0B8 0024          000000B8   4362          STG   2,184(0,13)
                                                                                                                           Page   94 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000027F6 4110 D0B0               000000B0   4363          LA    1,176(0,13)
000027FA E3F0 C088 0004          00002748   4364          LG    15,@lit_1444_90 ; rd_kafka_op_cmp_prio
00002800                                    4365 @@gen_label130 DS    0H
00002800 05EF                               4366          BALR  14,15
00002802                                    4367 @@gen_label131 DS    0H
00002802 12FF                               4368          LTR   15,15
00002804 47B0 C170               00002830   4369          BNL   @L314
00002808                                    4370 @L315    DS    0H
00002808 E3F0 2008 0004          00000008   4371          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
0000280E E3F0 4008 0024          00000008   4372          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00002814 E320 4000 0024          00000000   4373          STG   2,0(0,4)    ; rko
0000281A E3F0 2008 0004          00000008   4374          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00002820 E340 F000 0024          00000000   4375          STG   4,0(0,15)
00002826 E340 2008 0024          00000008   4376          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
0000282C 47F0 C1C2               00002882   4377          B     @L312
00002830                                    4378 @L314    DS    0H
00002830 E3F0 2000 0002          00000000   4379          LTG   15,0(0,2)   ; _tmp
00002836 4770 C1B4               00002874   4380          BNZ   @L318
0000283A                                    4381 @L319    DS    0H
0000283A E3F0 2000 0004          00000000   4382          LG    15,0(0,2)   ; _tmp
00002840 E3F0 4000 0024          00000000   4383          STG   15,0(0,4)
00002846 B902 00FF                          4384          LTGR  15,15
0000284A 4780 C19E               0000285E   4385          BE    @L322
0000284E E3F0 4000 0004          00000000   4386          LG    15,0(0,4)   ; rko
00002854 E340 F008 0024          00000008   4387          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
0000285A 47F0 C1A4               00002864   4388          B     @L323
0000285E                                    4389 @L322    DS    0H
0000285E E340 3068 0024          00000068   4390          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00002864                                    4391 @L323    DS    0H
00002864 E340 2000 0024          00000000   4392          STG   4,0(0,2)    ; _tmp
0000286A E320 4008 0024          00000008   4393          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00002870 47F0 C1C2               00002882   4394          B     @L312
00002874                                    4395 @L318    DS    0H
00002874 E320 2000 0004          00000000   4396          LG    2,0(0,2)    ; _tmp
0000287A                                    4397 @L311    DS    0H
0000287A B902 00F2                          4398          LTGR  15,2
0000287E 4770 C12A               000027EA   4399          BNE   @L310
00002882                                    4400 @L312    DS    0H
00002882                                    4401 @L309    DS    0H
                                            4402 * ***
                                            4403 * ***       rkq->rkq_qlen++;
00002882                                    4404 @L299    DS    0H
00002882                                    4405 @L292    DS    0H
00002882 58F0 3070               00000070   4406          L     15,112(0,3)
00002886 A7FA 0001               00000001   4407          AHI   15,1
0000288A 50F0 3070               00000070   4408          ST    15,112(0,3)
                                            4409 * ***       rkq->rkq_qsize += rko->rko_len;
0000288E E3F0 3078 0004          00000078   4410          LG    15,120(0,3)
00002894 E3F0 4030 0018          00000030   4411          AGF   15,48(0,4)
0000289A E3F0 3078 0024          00000078   4412          STG   15,120(0,3)
                                            4413 * ***   }
000028A0                                    4414 @ret_lab_1444 DS 0H
                                                                                                                           Page   95 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4415 * * **** Start of Epilogue
                                            4416          DCCEPIL
000028A0                                    4417+         ds 0h                                                          01-DCCEP
                                            4418+* Epilog
000028A0 D707 D088 D088 00000088 00000088   4419+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000028A6 E3D0 D080 0004          00000080   4420+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000028AC E3C0 D090 0004          00000090   4421+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000028B2 E3B0 C018 0004          00000018   4422+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000028B8 E3C0 B010 0021          00000010   4423+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000028BE E3E0 D008 0004          00000008   4424+         lg  14,8(0,13)          load up return address                 01-DCCEP
000028C4 EB1C D020 0004          00000020   4425+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000028CA 078E                               4426+         bcr 8,14                if same dsab, just return              01-DCCEP
000028CC E3F0 D010 0024          00000010   4427+         stg 15,16(0,13)         save return code                       01-DCCEP
000028D2 E300 D018 0024          00000018   4428+         stg 0,24(0,13)          save more return code                  01-DCCEP
000028D8 E3F0 D090 0004          00000090   4429+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000028DE E3F0 F018 0004          00000018   4430+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000028E4 47F0 F040               00000040   4431+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4432+* End of Epilog
                                            4433 * * **** End of Epilogue
                                            4434          DROP  12
                                            4435 *
                                            4436 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            4437 *      (FUNCTION #1444)
                                            4438 *
00000000                00000000 000000A8   4439 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    4440          DS    XL168
                                            4441 *
000028E8                00000000 00014658   4442 @CODE    CSECT
                                            4443 *
                                            4444 *
                                            4445 *
                                            4446 * ....... start of rd_kafka_q_enq1
000028E8                                    4447 @LNAME1445 DS  0H
000028E8 0000000F                           4448          DC    X'0000000F'
000028EC 99846D9281869281                   4449          DC    C'rd_kafka_q_enq1'
000028FB 00                                 4450          DC    X'00'
                                            4451 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            4452          macro
                                            4453          dccextrn &m
                                            4454          gblc    &$dccext(1000)
                                            4455          gbla    &$dccexti
                                            4456          lcla    &i
                                            4457 &$dccext(&$dccexti+1) setc    '&m'
                                            4458 &i       seta    1
                                            4459 .loop    aif    (&i gt &$dccexti).around
                                            4460          aif    ('&$dccext(&i)' eq '&m').getout
                                            4461 &i       seta    &i+1
                                            4462          ago     .loop
                                            4463 .around  anop
                                            4464 &$dccexti seta &$dccexti+1
                                            4465          extrn  &m
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4466 .getout  anop
                                            4467          mend
00002900                                    4468+$eye0107    ds    0d                                                    02-DCCCA
00002900 C4C3C3                             4469+         dc cl3'DCC'                                                    02-DCCCA
00002903 01                                 4470+         dc xl1'01' format one                                          02-DCCCA
00002904 00000000                           4471+         dc a(0)                                                        02-DCCCA
00002908 0000000000002972                   4472+         dc ad(@PER_1445)                                               02-DCCCA
00002910 00000000000000D8                   4473+         dc ad(216)                                                     02-DCCCA
00002918 0000000000000000                   4474+         dc ad(0)                                                       02-DCCCA
00002920 0000000000001000                   4475+         dc ad(4096)                                                    02-DCCCA
00002928 20                                 4476+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002929 03                                 4477+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000292A 03                                 4478+         dc al1(3)                                                      02-DCCCA
0000292B 08                                 4479+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000292C 00                                 4480+         dc bl.8'00000000'                                              02-DCCCA
0000292D 000000                             4481+         dc al3(0)                                                      02-DCCCA
00002930 00000000000028E8                   4482+         dc ad(@LNAME1445)                                              02-DCCCA
00002938                                    4483+         ds 0d                                                          02-DCCCA
00002938 0000000000002900                   4484+         dc ad($eye0107)                                                02-DCCCA
00002940 0000000000000000                   4485+         dc ad(0)                                                       02-DCCCA
00002948                                    4486+         ds    0d                                                       01-DCCPR
00002948                                    4487+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00002948                                    4488+@REGION_1445_1 ds 0h                                                    01-DCCPR
00002948 EBEC D008 0024          00000008   4489+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000294E E3E0 D088 0004          00000088   4490+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002954 E3C0 D090 0004          00000090   4491+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000295A B904 002E                          4492+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000295E E3B0 C018 0004          00000018   4493+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002964 A7EB 00D8               000000D8   4494+         aghi  14,216              increase by frame size               01-DCCPR
00002968 E3E0 C020 0021          00000020   4495+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000296E 4720 B020               00000020   4496+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002972                                    4497+@PER_1445 ds   0h                                                       01-DCCPR
00002972 EBDE 2080 0024          00000080   4498+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002978 E3C0 2090 0024          00000090   4499+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000297E B904 00D2                          4500+         lgr   13,2                set real frame pointer               01-DCCPR
00002982 B904 00CF                          4501+         lgr   12,15               set base reg                         01-DCCPR
                        00002948            4502+         using @REGION_1445_1,12                                        01-DCCPR
00002986 B904 0071                          4503          LGR   7,1         ; ptr to parm area
                                            4504 * ******* End of Prologue
                                            4505 * *
0000298A EB24 7000 0004          00000000   4506          LMG   2,4,0(7)    ; rkq
00002990 E350 7024 0012          00000024   4507          LT    5,36(0,7)   ; do_lock
                                            4508 * ***           rd_kafka_q_t *fwdq;
                                            4509 * ***
                                            4510 * ***           if (do_lock)
00002996 4780 C064               000029AC   4511          BZ    @L325
                                            4512 * ***                   mtx_lock(&rkq->rkq_lock);
0000299A E320 D0B0 0024          000000B0   4513          STG   2,176(0,13)
000029A0 4110 D0B0               000000B0   4514          LA    1,176(0,13)
000029A4 E3F0 C0B0 0004          000029F8   4515          LG    15,@lit_1445_92 ; mtx_lock
000029AA                                    4516 @@gen_label137 DS    0H
000029AA 05EF                               4517          BALR  14,15
                                                                                                                           Page   97 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000029AC                                    4518 @@gen_label138 DS    0H
000029AC                                    4519 @L324    DS    0H
                                            4520 * ***
                                            4521 * ***           do {} while (0);
000029AC                                    4522 @L325    DS    0H
                                            4523 * ***
                                            4524 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
000029AC 9102 2087      00000087 00000002   4525          TM    135(2),2
000029B0 4770 C0F8               00002A40   4526          BNZ   @L328
                                            4527 * ***
                                            4528 * ***                   if (do_lock)
000029B4 1255                               4529          LTR   5,5
000029B6 4780 C084               000029CC   4530          BZ    @L329
                                            4531 * ***                           mtx_unlock(&rkq->rkq_lock);
000029BA E320 D0B0 0024          000000B0   4532          STG   2,176(0,13)
000029C0 4110 D0B0               000000B0   4533          LA    1,176(0,13)
000029C4 E3F0 C0B8 0004          00002A00   4534          LG    15,@lit_1445_93 ; mtx_unlock
000029CA                                    4535 @@gen_label141 DS    0H
000029CA 05EF                               4536          BALR  14,15
000029CC                                    4537 @@gen_label142 DS    0H
000029CC                                    4538 @L329    DS    0H
                                            4539 * ***
                                            4540 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                            4541 * R__DESTROY);
000029CC E330 D0B0 0024          000000B0   4542          STG   3,176(0,13)
000029D2 E548 D0B8 FF3B          000000B8   4543          MVGHI 184(13),-197
000029D8 4110 D0B0               000000B0   4544          LA    1,176(0,13)
000029DC E3F0 C0C0 0004          00002A08   4545          LG    15,@lit_1445_94 ; rd_kafka_op_reply
000029E2                                    4546 @@gen_label143 DS    0H
000029E2 05EF                               4547          BALR  14,15
000029E4                                    4548 @@gen_label144 DS    0H
000029E4 B914 00FF                          4549          LGFR  15,15
000029E8 47F0 C212               00002B5A   4550          B     @ret_lab_1445
000029F0                                    4551          DS    0D
000029F0 000000D8                           4552 @FRAMESIZE_1445 DC F'216'
000029F4 00000000
000029F8 0000000000000000                   4553 @lit_1445_92 DC AD(mtx_lock)
00002A00 0000000000000000                   4554 @lit_1445_93 DC AD(mtx_unlock)
00002A08 0000000000000000                   4555 @lit_1445_94 DC AD(rd_kafka_op_reply)
00002A10 00000000000022F8                   4556 @lit_1445_95 DC AD(rd_kafka_q_fwd_get)
00002A18 00000000000026C0                   4557 @lit_1445_96 DC AD(rd_kafka_q_enq0)
00002A20 0000000000000000                   4558 @lit_1445_97 DC AD(cnd_signal)
00002A28 0000000000002460                   4559 @lit_1445_98 DC AD(rd_kafka_q_io_event)
00002A30 0000000000002948                   4560 @lit_1445_101 DC AD(rd_kafka_q_enq1)
00002A38 0000000000001FC8                   4561 @lit_1445_102 DC AD(rd_kafka_q_destroy0)
                                            4562 * ***           }
00002A40                                    4563 @L328    DS    0H
                                            4564 * ***
                                            4565 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00002A40 E320 D0B0 0024          000000B0   4566          STG   2,176(0,13)
00002A46 D707 D0B8 D0B8 000000B8 000000B8   4567          XC    184(8,13),184(13)
00002A4C 4110 D0B0               000000B0   4568          LA    1,176(0,13)
                                                                                                                           Page   98 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002A50 E3F0 C0C8 0004          00002A10   4569          LG    15,@lit_1445_95 ; rd_kafka_q_fwd_get
00002A56                                    4570 @@gen_label145 DS    0H
00002A56 05EF                               4571          BALR  14,15
00002A58                                    4572 @@gen_label146 DS    0H
00002A58 B904 006F                          4573          LGR   6,15
00002A5C B902 00F6                          4574          LTGR  15,6
00002A60 4770 C1B4               00002AFC   4575          BNZ   @L330
                                            4576 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            4577 * {
00002A64 E3F0 3050 0002          00000050   4578          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
00002A6A 4770 C148               00002A90   4579          BNZ   @L331
00002A6E E3F0 4098 0002          00000098   4580          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00002A74 4780 C148               00002A90   4581          BZ    @L331
                                            4582 * ***
                                            4583 * ***
                                            4584 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            4585 * ;
00002A78 E3F0 4098 0004          00000098   4586          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00002A7E E3F0 3050 0024          00000050   4587          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            4588 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            4589 * q_opaque;
00002A84 E3F0 40A0 0004          000000A0   4590          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
00002A8A E3F0 3058 0024          00000058   4591          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            4592 * ***                   }
00002A90                                    4593 @L331    DS    0H
                                            4594 * ***
                                            4595 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
00002A90 EB23 D0B0 0024          000000B0   4596          STMG  2,3,176(13)
00002A96 E3F0 701C 0014          0000001C   4597          LGF   15,28(0,7)  ; at_head
00002A9C E3F0 D0C0 0024          000000C0   4598          STG   15,192(0,13)
00002AA2 4110 D0B0               000000B0   4599          LA    1,176(0,13)
00002AA6 E3F0 C0D0 0004          00002A18   4600          LG    15,@lit_1445_96 ; rd_kafka_q_enq0
00002AAC                                    4601 @@gen_label150 DS    0H
00002AAC 05EF                               4602          BALR  14,15
00002AAE                                    4603 @@gen_label151 DS    0H
                                            4604 * ***                   cnd_signal(&rkq->rkq_cond);
00002AAE 41F0 2028               00000028   4605          LA    15,40(0,2)
00002AB2 E3F0 D0B0 0024          000000B0   4606          STG   15,176(0,13)
00002AB8 4110 D0B0               000000B0   4607          LA    1,176(0,13)
00002ABC E3F0 C0D8 0004          00002A20   4608          LG    15,@lit_1445_97 ; cnd_signal
00002AC2                                    4609 @@gen_label152 DS    0H
00002AC2 05EF                               4610          BALR  14,15
00002AC4                                    4611 @@gen_label153 DS    0H
                                            4612 * ***                   if (rkq->rkq_qlen == 1)
00002AC4 E55C 2070 0001          00000070   4613          CHSI  112(2),1
00002ACA 4770 C198               00002AE0   4614          BNE   @L332
                                            4615 * ***                           rd_kafka_q_io_event(rkq);
00002ACE E320 D0B0 0024          000000B0   4616          STG   2,176(0,13)
00002AD4 4110 D0B0               000000B0   4617          LA    1,176(0,13)
00002AD8 E3F0 C0E0 0004          00002A28   4618          LG    15,@lit_1445_98 ; rd_kafka_q_io_event
00002ADE                                    4619 @@gen_label155 DS    0H
                                                                                                                           Page   99 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002ADE 05EF                               4620          BALR  14,15
00002AE0                                    4621 @@gen_label156 DS    0H
00002AE0                                    4622 @L332    DS    0H
                                            4623 * ***
                                            4624 * ***                   if (do_lock)
00002AE0 1255                               4625          LTR   5,5
00002AE2 4780 C20E               00002B56   4626          BZ    @L334
                                            4627 * ***                           mtx_unlock(&rkq->rkq_lock);
00002AE6 E320 D0B0 0024          000000B0   4628          STG   2,176(0,13)
00002AEC 4110 D0B0               000000B0   4629          LA    1,176(0,13)
00002AF0 E3F0 C0B8 0004          00002A00   4630          LG    15,@lit_1445_93 ; mtx_unlock
00002AF6                                    4631 @@gen_label158 DS    0H
00002AF6 05EF                               4632          BALR  14,15
00002AF8                                    4633 @@gen_label159 DS    0H
00002AF8                                    4634 @L333    DS    0H
                                            4635 * ***           } else {
00002AF8 47F0 C20E               00002B56   4636          B     @L334
00002AFC                                    4637 @L330    DS    0H
                                            4638 * ***                   if (do_lock)
00002AFC 1255                               4639          LTR   5,5
00002AFE 4780 C1CC               00002B14   4640          BZ    @L335
                                            4641 * ***                           mtx_unlock(&rkq->rkq_lock);
00002B02 E320 D0B0 0024          000000B0   4642          STG   2,176(0,13)
00002B08 4110 D0B0               000000B0   4643          LA    1,176(0,13)
00002B0C E3F0 C0B8 0004          00002A00   4644          LG    15,@lit_1445_93 ; mtx_unlock
00002B12                                    4645 @@gen_label161 DS    0H
00002B12 05EF                               4646          BALR  14,15
00002B14                                    4647 @@gen_label162 DS    0H
00002B14                                    4648 @L335    DS    0H
                                            4649 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            4650 * , 1);
00002B14 E360 D0B0 0024          000000B0   4651          STG   6,176(0,13)
00002B1A EB34 D0B8 0024          000000B8   4652          STMG  3,4,184(13)
00002B20 E3F0 701C 0014          0000001C   4653          LGF   15,28(0,7)  ; at_head
00002B26 E3F0 D0C8 0024          000000C8   4654          STG   15,200(0,13)
00002B2C E548 D0D0 0001          000000D0   4655          MVGHI 208(13),1
00002B32 4110 D0B0               000000B0   4656          LA    1,176(0,13)
00002B36 E3F0 C0E8 0004          00002A30   4657          LG    15,@lit_1445_101 ; rd_kafka_q_enq1
00002B3C                                    4658 @@gen_label163 DS    0H
00002B3C 05EF                               4659          BALR  14,15
00002B3E                                    4660 @@gen_label164 DS    0H
                                            4661 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00002B3E E360 D0B0 0024          000000B0   4662          STG   6,176(0,13)
00002B44 D707 D0B8 D0B8 000000B8 000000B8   4663          XC    184(8,13),184(13)
00002B4A 4110 D0B0               000000B0   4664          LA    1,176(0,13)
00002B4E E3F0 C0F0 0004          00002A38   4665          LG    15,@lit_1445_102 ; rd_kafka_q_destroy0
00002B54                                    4666 @@gen_label165 DS    0H
00002B54 05EF                               4667          BALR  14,15
00002B56                                    4668 @@gen_label166 DS    0H
                                            4669 * ***           }
00002B56                                    4670 @L334    DS    0H
                                            4671 * ***
                                                                                                                           Page  100 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4672 * ***           return 1;
00002B56 A7F9 0001               00000001   4673          LGHI  15,1        ; 1
                                            4674 * ***   }
00002B5A                                    4675 @ret_lab_1445 DS 0H
                                            4676 * * **** Start of Epilogue
                                            4677          DCCEPIL
00002B5A                                    4678+         ds 0h                                                          01-DCCEP
                                            4679+* Epilog
00002B5A D707 D088 D088 00000088 00000088   4680+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002B60 E3D0 D080 0004          00000080   4681+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002B66 E3C0 D090 0004          00000090   4682+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002B6C E3B0 C018 0004          00000018   4683+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002B72 E3C0 B010 0021          00000010   4684+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002B78 E3E0 D008 0004          00000008   4685+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002B7E EB1C D020 0004          00000020   4686+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002B84 078E                               4687+         bcr 8,14                if same dsab, just return              01-DCCEP
00002B86 E3F0 D010 0024          00000010   4688+         stg 15,16(0,13)         save return code                       01-DCCEP
00002B8C E300 D018 0024          00000018   4689+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002B92 E3F0 D090 0004          00000090   4690+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002B98 E3F0 F018 0004          00000018   4691+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002B9E 47F0 F040               00000040   4692+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4693+* End of Epilog
                                            4694 * * **** End of Epilogue
                                            4695          DROP  12
                                            4696 *
                                            4697 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            4698 *      (FUNCTION #1445)
                                            4699 *
00000000                00000000 000000A8   4700 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    4701          DS    XL168
                                            4702 *
00002BA2                00000000 00014658   4703 @CODE    CSECT
                                            4704 *
                                            4705 *
                                            4706 *
                                            4707 * ....... start of rd_kafka_q_enq
00002BA2                                    4708 @LNAME1446 DS  0H
00002BA2 0000000E                           4709          DC    X'0000000E'
00002BA6 99846D9281869281                   4710          DC    C'rd_kafka_q_enq'
00002BB4 00                                 4711          DC    X'00'
                                            4712 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            4713          macro
                                            4714          dccextrn &m
                                            4715          gblc    &$dccext(1000)
                                            4716          gbla    &$dccexti
                                            4717          lcla    &i
                                            4718 &$dccext(&$dccexti+1) setc    '&m'
                                            4719 &i       seta    1
                                            4720 .loop    aif    (&i gt &$dccexti).around
                                            4721          aif    ('&$dccext(&i)' eq '&m').getout
                                            4722 &i       seta    &i+1
                                                                                                                           Page  101 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4723          ago     .loop
                                            4724 .around  anop
                                            4725 &$dccexti seta &$dccexti+1
                                            4726          extrn  &m
                                            4727 .getout  anop
                                            4728          mend
00002BB8                                    4729+$eye0110    ds    0d                                                    02-DCCCA
00002BB8 C4C3C3                             4730+         dc cl3'DCC'                                                    02-DCCCA
00002BBB 01                                 4731+         dc xl1'01' format one                                          02-DCCCA
00002BBC 00000000                           4732+         dc a(0)                                                        02-DCCCA
00002BC0 0000000000002C2A                   4733+         dc ad(@PER_1446)                                               02-DCCCA
00002BC8 00000000000000D0                   4734+         dc ad(208)                                                     02-DCCCA
00002BD0 0000000000000000                   4735+         dc ad(0)                                                       02-DCCCA
00002BD8 0000000000001000                   4736+         dc ad(4096)                                                    02-DCCCA
00002BE0 20                                 4737+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002BE1 03                                 4738+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002BE2 03                                 4739+         dc al1(3)                                                      02-DCCCA
00002BE3 08                                 4740+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002BE4 00                                 4741+         dc bl.8'00000000'                                              02-DCCCA
00002BE5 000000                             4742+         dc al3(0)                                                      02-DCCCA
00002BE8 0000000000002BA2                   4743+         dc ad(@LNAME1446)                                              02-DCCCA
00002BF0                                    4744+         ds 0d                                                          02-DCCCA
00002BF0 0000000000002BB8                   4745+         dc ad($eye0110)                                                02-DCCCA
00002BF8 0000000000000000                   4746+         dc ad(0)                                                       02-DCCCA
00002C00                                    4747+         ds    0d                                                       01-DCCPR
00002C00                                    4748+rd_kafka_q_enq ds 0d                                                    01-DCCPR
00002C00                                    4749+@REGION_1446_1 ds 0h                                                    01-DCCPR
00002C00 EBEC D008 0024          00000008   4750+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C06 E3E0 D088 0004          00000088   4751+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C0C E3C0 D090 0004          00000090   4752+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C12 B904 002E                          4753+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C16 E3B0 C018 0004          00000018   4754+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C1C A7EB 00D0               000000D0   4755+         aghi  14,208              increase by frame size               01-DCCPR
00002C20 E3E0 C020 0021          00000020   4756+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002C26 4720 B020               00000020   4757+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002C2A                                    4758+@PER_1446 ds   0h                                                       01-DCCPR
00002C2A EBDE 2080 0024          00000080   4759+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002C30 E3C0 2090 0024          00000090   4760+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002C36 B904 00D2                          4761+         lgr   13,2                set real frame pointer               01-DCCPR
00002C3A B904 00CF                          4762+         lgr   12,15               set base reg                         01-DCCPR
                        00002C00            4763+         using @REGION_1446_1,12                                        01-DCCPR
                                            4764 * ******* End of Prologue
                                            4765 * *
                                            4766 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
00002C3E E3F0 1000 0004          00000000   4767          LG    15,0(0,1)   ; rkq
00002C44 E3F0 D0A8 0024          000000A8   4768          STG   15,168(0,13)
00002C4A E3F0 1008 0004          00000008   4769          LG    15,8(0,1)   ; rko
00002C50 E3F0 D0B0 0024          000000B0   4770          STG   15,176(0,13)
00002C56 E3F0 1000 0004          00000000   4771          LG    15,0(0,1)   ; rkq
00002C5C E3F0 D0B8 0024          000000B8   4772          STG   15,184(0,13)
00002C62 D707 D0C0 D0C0 000000C0 000000C0   4773          XC    192(8,13),192(13)
00002C68 E548 D0C8 0001          000000C8   4774          MVGHI 200(13),1
                                                                                                                           Page  102 
  Active Usings: @REGION_1446_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C6E 4110 D0A8               000000A8   4775          LA    1,168(0,13)
00002C72 E3F0 C0D0 0004          00002CD0   4776          LG    15,@lit_1446_105 ; rd_kafka_q_enq1
00002C78                                    4777 @@gen_label167 DS    0H
00002C78 05EF                               4778          BALR  14,15
00002C7A                                    4779 @@gen_label168 DS    0H
00002C7A B914 00FF                          4780          LGFR  15,15
                                            4781 * ***   }
                                            4782 * * **** Start of Epilogue
                                            4783          DCCEPIL
00002C7E                                    4784+         ds 0h                                                          01-DCCEP
                                            4785+* Epilog
00002C7E D707 D088 D088 00000088 00000088   4786+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002C84 E3D0 D080 0004          00000080   4787+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C8A E3C0 D090 0004          00000090   4788+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C90 E3B0 C018 0004          00000018   4789+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002C96 E3C0 B010 0021          00000010   4790+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002C9C E3E0 D008 0004          00000008   4791+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002CA2 EB1C D020 0004          00000020   4792+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002CA8 078E                               4793+         bcr 8,14                if same dsab, just return              01-DCCEP
00002CAA E3F0 D010 0024          00000010   4794+         stg 15,16(0,13)         save return code                       01-DCCEP
00002CB0 E300 D018 0024          00000018   4795+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002CB6 E3F0 D090 0004          00000090   4796+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002CBC E3F0 F018 0004          00000018   4797+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002CC2 47F0 F040               00000040   4798+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4799+* End of Epilog
                                            4800 * * **** End of Epilogue
00002CC8                                    4801          DS    0D
00002CC8 000000D0                           4802 @FRAMESIZE_1446 DC F'208'
00002CCC 00000000
00002CD0 0000000000002948                   4803 @lit_1446_105 DC AD(rd_kafka_q_enq1)
                                            4804          DROP  12
                                            4805 *
                                            4806 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            4807 *      (FUNCTION #1446)
                                            4808 *
00000000                00000000 000000A8   4809 @AUTO#rd_kafka_q_enq DSECT
00000000                                    4810          DS    XL168
                                            4811 *
00002CD8                00000000 00014658   4812 @CODE    CSECT
                                            4813 *
                                            4814 *
                                            4815 *
                                            4816 * ....... start of rd_kafka_replyq_make
00002CD8                                    4817 @LNAME1454 DS  0H
00002CD8 00000014                           4818          DC    X'00000014'
00002CDC 99846D9281869281                   4819          DC    C'rd_kafka_replyq_make'
00002CF0 00                                 4820          DC    X'00'
                                            4821 rd_kafka_replyq_make DCCPRLG CINDEX=1454,BASER=12,FRAME=192,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1454
                                            4822          macro
                                            4823          dccextrn &m
                                            4824          gblc    &$dccext(1000)
                                                                                                                           Page  103 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4825          gbla    &$dccexti
                                            4826          lcla    &i
                                            4827 &$dccext(&$dccexti+1) setc    '&m'
                                            4828 &i       seta    1
                                            4829 .loop    aif    (&i gt &$dccexti).around
                                            4830          aif    ('&$dccext(&i)' eq '&m').getout
                                            4831 &i       seta    &i+1
                                            4832          ago     .loop
                                            4833 .around  anop
                                            4834 &$dccexti seta &$dccexti+1
                                            4835          extrn  &m
                                            4836 .getout  anop
                                            4837          mend
00002CF8                                    4838+$eye0113    ds    0d                                                    02-DCCCA
00002CF8 C4C3C3                             4839+         dc cl3'DCC'                                                    02-DCCCA
00002CFB 01                                 4840+         dc xl1'01' format one                                          02-DCCCA
00002CFC 00000000                           4841+         dc a(0)                                                        02-DCCCA
00002D00 0000000000002D6A                   4842+         dc ad(@PER_1454)                                               02-DCCCA
00002D08 00000000000000C0                   4843+         dc ad(192)                                                     02-DCCCA
00002D10 0000000000000000                   4844+         dc ad(0)                                                       02-DCCCA
00002D18 0000000000001000                   4845+         dc ad(4096)                                                    02-DCCCA
00002D20 20                                 4846+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002D21 03                                 4847+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002D22 03                                 4848+         dc al1(3)                                                      02-DCCCA
00002D23 08                                 4849+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002D24 00                                 4850+         dc bl.8'00000000'                                              02-DCCCA
00002D25 000000                             4851+         dc al3(0)                                                      02-DCCCA
00002D28 0000000000002CD8                   4852+         dc ad(@LNAME1454)                                              02-DCCCA
00002D30                                    4853+         ds 0d                                                          02-DCCCA
00002D30 0000000000002CF8                   4854+         dc ad($eye0113)                                                02-DCCCA
00002D38 0000000000000000                   4855+         dc ad(0)                                                       02-DCCCA
00002D40                                    4856+         ds    0d                                                       01-DCCPR
00002D40                                    4857+rd_kafka_replyq_make ds 0d                                              01-DCCPR
00002D40                                    4858+@REGION_1454_1 ds 0h                                                    01-DCCPR
00002D40 EBEC D008 0024          00000008   4859+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002D46 E3E0 D088 0004          00000088   4860+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002D4C E3C0 D090 0004          00000090   4861+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002D52 B904 002E                          4862+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002D56 E3B0 C018 0004          00000018   4863+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002D5C A7EB 00C0               000000C0   4864+         aghi  14,192              increase by frame size               01-DCCPR
00002D60 E3E0 C020 0021          00000020   4865+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002D66 4720 B020               00000020   4866+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002D6A                                    4867+@PER_1454 ds   0h                                                       01-DCCPR
00002D6A EBDE 2080 0024          00000080   4868+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002D70 E3C0 2090 0024          00000090   4869+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002D76 B904 00D2                          4870+         lgr   13,2                set real frame pointer               01-DCCPR
00002D7A B904 00CF                          4871+         lgr   12,15               set base reg                         01-DCCPR
                        00002D40            4872+         using @REGION_1454_1,12                                        01-DCCPR
00002D7E B904 0021                          4873          LGR   2,1         ; ptr to parm area
                                            4874 * ******* End of Prologue
                                            4875 * *
00002D82 E330 2000 0004          00000000   4876          LG    3,0(0,2)
                                                                                                                           Page  104 
  Active Usings: @REGION_1454_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4877 * ***           rd_kafka_replyq_t replyq = {};
                                            4878 * setting 16 bytes to 0x00
00002D88 D70F D0A8 D0A8 000000A8 000000A8   4879          XC    168(16,13),168(13)
                                            4880 * ***
                                            4881 * ***           if (rkq) {
00002D8E E3F0 2008 0004          00000008   4882          LG    15,8(0,2)   ; rkq
00002D94 B902 001F                          4883          LTGR  1,15
00002D98 4780 C07C               00002DBC   4884          BZ    @L438
                                            4885 * ***                   replyq.q = rd_kafka_q_keep(rkq);
00002D9C E3F0 D0B8 0024          000000B8   4886          STG   15,184(0,13)
00002DA2 4110 D0B8               000000B8   4887          LA    1,184(0,13)
00002DA6 E3F0 C0D8 0004          00002E18   4888          LG    15,@lit_1454_107 ; rd_kafka_q_keep
00002DAC                                    4889 @@gen_label170 DS    0H
00002DAC 05EF                               4890          BALR  14,15
00002DAE                                    4891 @@gen_label171 DS    0H
00002DAE E3F0 D0A8 0024          000000A8   4892          STG   15,168(0,13)
                                            4893 * ***                   replyq.version = version;
00002DB4 58F0 2014               00000014   4894          L     15,20(0,2)  ; version
00002DB8 50F0 D0B0               000000B0   4895          ST    15,176(0,13) ; offset of version in rd_kafka_replyq_s
                                            4896 * ***
                                            4897 * ***
                                            4898 * ***
                                            4899 * ***           }
00002DBC                                    4900 @L438    DS    0H
                                            4901 * ***
                                            4902 * ***           return replyq;
00002DBC D20F 3000 D0A8 00000000 000000A8   4903          MVC   0(16,3),168(13)
                                            4904 * ***   }
                                            4905 * * **** Start of Epilogue
                                            4906          DCCEPIL
00002DC2                                    4907+         ds 0h                                                          01-DCCEP
                                            4908+* Epilog
00002DC2 D707 D088 D088 00000088 00000088   4909+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002DC8 E3D0 D080 0004          00000080   4910+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002DCE E3C0 D090 0004          00000090   4911+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002DD4 E3B0 C018 0004          00000018   4912+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002DDA E3C0 B010 0021          00000010   4913+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002DE0 E3E0 D008 0004          00000008   4914+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002DE6 EB1C D020 0004          00000020   4915+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002DEC 078E                               4916+         bcr 8,14                if same dsab, just return              01-DCCEP
00002DEE E3F0 D010 0024          00000010   4917+         stg 15,16(0,13)         save return code                       01-DCCEP
00002DF4 E300 D018 0024          00000018   4918+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002DFA E3F0 D090 0004          00000090   4919+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E00 E3F0 F018 0004          00000018   4920+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E06 47F0 F040               00000040   4921+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4922+* End of Epilog
                                            4923 * * **** End of Epilogue
00002E10                                    4924          DS    0D
00002E10 000000C0                           4925 @FRAMESIZE_1454 DC F'192'
00002E14 00000000
00002E18 0000000000001D48                   4926 @lit_1454_107 DC AD(rd_kafka_q_keep)
                                            4927          DROP  12
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4928 *
                                            4929 *   DSECT for automatic variables in "rd_kafka_replyq_make"
                                            4930 *      (FUNCTION #1454)
                                            4931 *
00000000                00000000 000000B8   4932 @AUTO#rd_kafka_replyq_make DSECT
00000000                                    4933          DS    XL168
000000A8                                    4934 rd_kafka_replyq_make#replyq#0 DS 16XL1 ; replyq
                                            4935 *
00002E20                00000000 00014658   4936 @CODE    CSECT
                                            4937 *
                                            4938 *
                                            4939 *
                                            4940 * ....... start of rd_crc32_update
00002E20                                    4941 @LNAME1485 DS  0H
00002E20 0000000F                           4942          DC    X'0000000F'
00002E24 99846D839983F3F2                   4943          DC    C'rd_crc32_update'
00002E33 00                                 4944          DC    X'00'
                                            4945 rd_crc32_update DCCPRLG CINDEX=1485,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1485
                                            4946          macro
                                            4947          dccextrn &m
                                            4948          gblc    &$dccext(1000)
                                            4949          gbla    &$dccexti
                                            4950          lcla    &i
                                            4951 &$dccext(&$dccexti+1) setc    '&m'
                                            4952 &i       seta    1
                                            4953 .loop    aif    (&i gt &$dccexti).around
                                            4954          aif    ('&$dccext(&i)' eq '&m').getout
                                            4955 &i       seta    &i+1
                                            4956          ago     .loop
                                            4957 .around  anop
                                            4958 &$dccexti seta &$dccexti+1
                                            4959          extrn  &m
                                            4960 .getout  anop
                                            4961          mend
00002E38                                    4962+$eye0116    ds    0d                                                    02-DCCCA
00002E38 C4C3C3                             4963+         dc cl3'DCC'                                                    02-DCCCA
00002E3B 01                                 4964+         dc xl1'01' format one                                          02-DCCCA
00002E3C 00000000                           4965+         dc a(0)                                                        02-DCCCA
00002E40 0000000000002EAA                   4966+         dc ad(@PER_1485)                                               02-DCCCA
00002E48 00000000000000B0                   4967+         dc ad(176)                                                     02-DCCCA
00002E50 0000000000000000                   4968+         dc ad(0)                                                       02-DCCCA
00002E58 0000000000001000                   4969+         dc ad(4096)                                                    02-DCCCA
00002E60 20                                 4970+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002E61 03                                 4971+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002E62 03                                 4972+         dc al1(3)                                                      02-DCCCA
00002E63 08                                 4973+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002E64 00                                 4974+         dc bl.8'00000000'                                              02-DCCCA
00002E65 000000                             4975+         dc al3(0)                                                      02-DCCCA
00002E68 0000000000002E20                   4976+         dc ad(@LNAME1485)                                              02-DCCCA
00002E70                                    4977+         ds 0d                                                          02-DCCCA
00002E70 0000000000002E38                   4978+         dc ad($eye0116)                                                02-DCCCA
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002E78 0000000000000000                   4979+         dc ad(0)                                                       02-DCCCA
00002E80                                    4980+         ds    0d                                                       01-DCCPR
00002E80                                    4981+rd_crc32_update ds 0d                                                   01-DCCPR
00002E80                                    4982+@REGION_1485_1 ds 0h                                                    01-DCCPR
00002E80 EBEC D008 0024          00000008   4983+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002E86 E3E0 D088 0004          00000088   4984+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002E8C E3C0 D090 0004          00000090   4985+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002E92 B904 002E                          4986+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002E96 E3B0 C018 0004          00000018   4987+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002E9C A7EB 00B0               000000B0   4988+         aghi  14,176              increase by frame size               01-DCCPR
00002EA0 E3E0 C020 0021          00000020   4989+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002EA6 4720 B020               00000020   4990+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002EAA                                    4991+@PER_1485 ds   0h                                                       01-DCCPR
00002EAA EBDE 2080 0024          00000080   4992+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002EB0 E3C0 2090 0024          00000090   4993+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002EB6 B904 00D2                          4994+         lgr   13,2                set real frame pointer               01-DCCPR
00002EBA B904 00CF                          4995+         lgr   12,15               set base reg                         01-DCCPR
                        00002E80            4996+         using @REGION_1485_1,12                                        01-DCCPR
                                            4997          DCCPRV REG=2      ; Get PRV from DVT
00002EBE E320 B008 0004          00000008   4998+         LG 2,8(0,11)                                                   01-DCCPR
00002EC4 B904 0031                          4999          LGR   3,1         ; ptr to parm area
                                            5000 * ******* End of Prologue
                                            5001 * *
00002EC8 58F0 3004               00000004   5002          L     15,4(0,3)   ; crc
00002ECC E310 3008 0004          00000008   5003          LG    1,8(0,3)    ; data
                                            5004 * ***
                                            5005 * ***
                                            5006 * ***
                                            5007 * ***
                                            5008 * ***       unsigned int tbl_idx;
                                            5009 * ***
                                            5010 * ***       while (data_len--) {
00002ED2 47F0 C090               00002F10   5011          B     @L483
00002ED8                                    5012          DS    0D
00002ED8 000000B0                           5013 @FRAMESIZE_1485 DC F'176'
00002EDC 00000000                           5014 @lit_1485_109 DC Q(crc_table)
00002EE0                                    5015 @L482    DS    0H
                                            5016 * ***           tbl_idx = (crc ^ *data) & 0xff;
00002EE0 E340 1000 0094          00000000   5017          LLC   4,0(0,1)
00002EE6 185F                               5018          LR    5,15
00002EE8 1754                               5019          XR    5,4
00002EEA C05B 0000 00FF                     5020          NILF  5,X'000000FF'
                                            5021 * ***           crc = (crc_table[tbl_idx] ^ (crc >> 8)) & 0xffffffff;
00002EF0 B916 0045                          5022          LLGFR 4,5
00002EF4 E350 C05C 0016          00002EDC   5023          LLGF  5,@lit_1485_109 ; crc_table
00002EFA EB44 0002 000D          00000002   5024          SLLG  4,4,2(0)    ; *0x4
00002F00 4145 4000               00000000   5025          LA    4,0(5,4)
00002F04 88F0 0008               00000008   5026          SRL   15,8(0)
00002F08 57F4 2000               00000000   5027          X     15,0(4,2)
                                            5028 * ***
                                            5029 * ***           data++;
00002F0C 4110 1001               00000001   5030          LA    1,1(0,1)
                                                                                                                           Page  107 
  Active Usings: @REGION_1485_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5031 * ***       }
00002F10                                    5032 @L483    DS    0H
00002F10 E340 3010 0004          00000010   5033          LG    4,16(0,3)   ; data_len
00002F16 B904 0054                          5034          LGR   5,4
00002F1A A75B FFFF               0000FFFF   5035          AGHI  5,-1
00002F1E E350 3010 0024          00000010   5036          STG   5,16(0,3)   ; data_len
00002F24 B902 0044                          5037          LTGR  4,4
00002F28 4770 C060               00002EE0   5038          BNZ   @L482
                                            5039 * ***       return crc & 0xffffffff;
00002F2C B916 00FF                          5040          LLGFR 15,15
                                            5041 * ***
                                            5042 * ***   }
                                            5043 * * **** Start of Epilogue
                                            5044          DCCEPIL
00002F30                                    5045+         ds 0h                                                          01-DCCEP
                                            5046+* Epilog
00002F30 D707 D088 D088 00000088 00000088   5047+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F36 E3D0 D080 0004          00000080   5048+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F3C E3C0 D090 0004          00000090   5049+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F42 E3B0 C018 0004          00000018   5050+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F48 E3C0 B010 0021          00000010   5051+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F4E E3E0 D008 0004          00000008   5052+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002F54 EB1C D020 0004          00000020   5053+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002F5A 078E                               5054+         bcr 8,14                if same dsab, just return              01-DCCEP
00002F5C E3F0 D010 0024          00000010   5055+         stg 15,16(0,13)         save return code                       01-DCCEP
00002F62 E300 D018 0024          00000018   5056+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002F68 E3F0 D090 0004          00000090   5057+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002F6E E3F0 F018 0004          00000018   5058+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002F74 47F0 F040               00000040   5059+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5060+* End of Epilog
                                            5061 * * **** End of Epilogue
                                            5062          DROP  12
                                            5063 *
                                            5064 *   DSECT for automatic variables in "rd_crc32_update"
                                            5065 *      (FUNCTION #1485)
                                            5066 *
00000000                00000000 000000AC   5067 @AUTO#rd_crc32_update DSECT
00000000                                    5068          DS    XL168
000000A8                                    5069 rd_crc32_update#tbl_idx#0 DS 1F ; tbl_idx
                                            5070 *
00002F78                00000000 00014658   5071 @CODE    CSECT
                                            5072 *
                                            5073 *
                                            5074 *
                                            5075 * ....... start of rd_kafka_buf_ApiVersion_set
00002F78                                    5076 @LNAME1516 DS  0H
00002F78 0000001B                           5077          DC    X'0000001B'
00002F7C 99846D9281869281                   5078          DC    C'rd_kafka_buf_ApiVersion_set'
00002F97 00                                 5079          DC    X'00'
                                            5080 rd_kafka_buf_$Api$Version_set DCCPRLG CINDEX=1516,BASER=0,FRAME=168,SAV*
                                                                EAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1516
                                            5081          macro
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5082          dccextrn &m
                                            5083          gblc    &$dccext(1000)
                                            5084          gbla    &$dccexti
                                            5085          lcla    &i
                                            5086 &$dccext(&$dccexti+1) setc    '&m'
                                            5087 &i       seta    1
                                            5088 .loop    aif    (&i gt &$dccexti).around
                                            5089          aif    ('&$dccext(&i)' eq '&m').getout
                                            5090 &i       seta    &i+1
                                            5091          ago     .loop
                                            5092 .around  anop
                                            5093 &$dccexti seta &$dccexti+1
                                            5094          extrn  &m
                                            5095 .getout  anop
                                            5096          mend
00002F98                                    5097+$eye0120    ds    0d                                                    02-DCCCA
00002F98 C4C3C3                             5098+         dc cl3'DCC'                                                    02-DCCCA
00002F9B 01                                 5099+         dc xl1'01' format one                                          02-DCCCA
00002F9C 00000000                           5100+         dc a(0)                                                        02-DCCCA
00002FA0 0000000000000000                   5101+         dc ad(0)                                                       02-DCCCA
00002FA8 00000000000000A8                   5102+         dc ad(168)                                                     02-DCCCA
00002FB0 0000000000000000                   5103+         dc ad(0)                                                       02-DCCCA
00002FB8 0000000000001000                   5104+         dc ad(4096)                                                    02-DCCCA
00002FC0 20                                 5105+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002FC1 03                                 5106+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002FC2 03                                 5107+         dc al1(3)                                                      02-DCCCA
00002FC3 08                                 5108+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002FC4 00                                 5109+         dc bl.8'00000000'                                              02-DCCCA
00002FC5 000000                             5110+         dc al3(0)                                                      02-DCCCA
00002FC8 0000000000002F78                   5111+         dc ad(@LNAME1516)                                              02-DCCCA
00002FD0                                    5112+         ds 0d                                                          02-DCCCA
00002FD0 0000000000002F98                   5113+         dc ad($eye0120)                                                02-DCCCA
00002FD8 0000000000000000                   5114+         dc ad(0)                                                       02-DCCCA
00002FE0                                    5115+         ds    0d                                                       01-DCCPR
00002FE0                                    5116+rd_kafka_buf_$Api$Version_set ds 0d                                     01-DCCPR
00002FE0                                    5117+@REGION_1516_1 ds 0h                                                    01-DCCPR
00002FE0 EBEC D008 0024          00000008   5118+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            5119 * ******* End of Prologue
                                            5120 * *
                                            5121 * ***       rkbuf->rkbuf_reqhdr.ApiVersion = version;
00002FE6 E3F0 1000 0004          00000000   5122          LG    15,0(0,1)   ; rkbuf
00002FEC D201 F0BA 100E 000000BA 0000000E   5123          MVC   186(2,15),14(1)
                                            5124 * ***       rkbuf->rkbuf_features = features;
00002FF2 5810 1014               00000014   5125          L     1,20(0,1)   ; features
00002FF6 5010 F148               00000148   5126          ST    1,328(0,15) ; offset of rkbuf_features in rd_kafka_buf_s
                                            5127 * ***   }
00002FFA                                    5128 @ret_lab_1516 DS 0H
                                            5129 * * **** Start of Epilogue
                                            5130          DCCEPIL
00002FFA                                    5131+         ds 0h                                                          01-DCCEP
                                            5132+* Epilog
                                            5133+* Epilog
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002FFA E3E0 D008 0004          00000008   5134+         lg    14,8(,13) restore the reg                                01-DCCEP
00003000 EB1C D020 0004          00000020   5135+         lmg   1,12,32(13)                                              01-DCCEP
00003006 07FE                               5136+         br   14                                                        01-DCCEP
                                            5137+* End of Epilog
                                            5138 * * **** End of Epilogue
                                            5139 *
                                            5140 *   DSECT for automatic variables in "rd_kafka_buf_ApiVersion_set"
                                            5141 *      (FUNCTION #1516)
                                            5142 *
00000000                00000000 000000A8   5143 @AUTO#rd_kafka_buf_$Api$Version_set DSECT
00000000                                    5144          DS    XL168
                                            5145 *
00003008                00000000 00014658   5146 @CODE    CSECT
                                            5147 *
                                            5148 *
                                            5149 *
                                            5150 * ....... start of rd_kafka_buf_write
00003008                                    5151 @LNAME1517 DS  0H
00003008 00000012                           5152          DC    X'00000012'
0000300C 99846D9281869281                   5153          DC    C'rd_kafka_buf_write'
0000301E 00                                 5154          DC    X'00'
                                            5155 rd_kafka_buf_write DCCPRLG CINDEX=1517,BASER=12,FRAME=200,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1517
                                            5156          macro
                                            5157          dccextrn &m
                                            5158          gblc    &$dccext(1000)
                                            5159          gbla    &$dccexti
                                            5160          lcla    &i
                                            5161 &$dccext(&$dccexti+1) setc    '&m'
                                            5162 &i       seta    1
                                            5163 .loop    aif    (&i gt &$dccexti).around
                                            5164          aif    ('&$dccext(&i)' eq '&m').getout
                                            5165 &i       seta    &i+1
                                            5166          ago     .loop
                                            5167 .around  anop
                                            5168 &$dccexti seta &$dccexti+1
                                            5169          extrn  &m
                                            5170 .getout  anop
                                            5171          mend
00003020                                    5172+$eye0123    ds    0d                                                    02-DCCCA
00003020 C4C3C3                             5173+         dc cl3'DCC'                                                    02-DCCCA
00003023 01                                 5174+         dc xl1'01' format one                                          02-DCCCA
00003024 00000000                           5175+         dc a(0)                                                        02-DCCCA
00003028 0000000000003092                   5176+         dc ad(@PER_1517)                                               02-DCCCA
00003030 00000000000000C8                   5177+         dc ad(200)                                                     02-DCCCA
00003038 0000000000000000                   5178+         dc ad(0)                                                       02-DCCCA
00003040 0000000000001000                   5179+         dc ad(4096)                                                    02-DCCCA
00003048 20                                 5180+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003049 03                                 5181+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000304A 03                                 5182+         dc al1(3)                                                      02-DCCCA
0000304B 08                                 5183+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000304C 00                                 5184+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  110 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000304D 000000                             5185+         dc al3(0)                                                      02-DCCCA
00003050 0000000000003008                   5186+         dc ad(@LNAME1517)                                              02-DCCCA
00003058                                    5187+         ds 0d                                                          02-DCCCA
00003058 0000000000003020                   5188+         dc ad($eye0123)                                                02-DCCCA
00003060 0000000000000000                   5189+         dc ad(0)                                                       02-DCCCA
00003068                                    5190+         ds    0d                                                       01-DCCPR
00003068                                    5191+rd_kafka_buf_write ds 0d                                                01-DCCPR
00003068                                    5192+@REGION_1517_1 ds 0h                                                    01-DCCPR
00003068 EBEC D008 0024          00000008   5193+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000306E E3E0 D088 0004          00000088   5194+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003074 E3C0 D090 0004          00000090   5195+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000307A B904 002E                          5196+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000307E E3B0 C018 0004          00000018   5197+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003084 A7EB 00C8               000000C8   5198+         aghi  14,200              increase by frame size               01-DCCPR
00003088 E3E0 C020 0021          00000020   5199+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000308E 4720 B020               00000020   5200+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003092                                    5201+@PER_1517 ds   0h                                                       01-DCCPR
00003092 EBDE 2080 0024          00000080   5202+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003098 E3C0 2090 0024          00000090   5203+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000309E B904 00D2                          5204+         lgr   13,2                set real frame pointer               01-DCCPR
000030A2 B904 00CF                          5205+         lgr   12,15               set base reg                         01-DCCPR
                        00003068            5206+         using @REGION_1517_1,12                                        01-DCCPR
000030A6 B904 0041                          5207          LGR   4,1         ; ptr to parm area
                                            5208 * ******* End of Prologue
                                            5209 * *
000030AA E320 4000 0004          00000000   5210          LG    2,0(0,4)    ; rkbuf
                                            5211 * ***       size_t r;
                                            5212 * ***
                                            5213 * ***       r = rd_buf_write(&rkbuf->rkbuf_buf, data, len);
000030B0 41F0 2028               00000028   5214          LA    15,40(0,2)
000030B4 E3F0 D0B0 0024          000000B0   5215          STG   15,176(0,13)
000030BA E3F0 4008 0004          00000008   5216          LG    15,8(0,4)   ; data
000030C0 E3F0 D0B8 0024          000000B8   5217          STG   15,184(0,13)
000030C6 E3F0 4010 0004          00000010   5218          LG    15,16(0,4)  ; len
000030CC E3F0 D0C0 0024          000000C0   5219          STG   15,192(0,13)
000030D2 4110 D0B0               000000B0   5220          LA    1,176(0,13)
000030D6 E3F0 C110 0004          00003178   5221          LG    15,@lit_1517_111 ; rd_buf_write
000030DC                                    5222 @@gen_label173 DS    0H
000030DC 05EF                               5223          BALR  14,15
000030DE                                    5224 @@gen_label174 DS    0H
000030DE B904 003F                          5225          LGR   3,15
                                            5226 * ***
                                            5227 * ***       if (rkbuf->rkbuf_flags & 0x4)
000030E2 9104 2023      00000023 00000004   5228          TM    35(2),4
000030E6 4780 C0B6               0000311E   5229          BZ    @L492
                                            5230 * ***           rkbuf->rkbuf_crc = rd_crc32_update(rkbuf->rkbuf_crc, d\
                                            5231 * ata, len);
000030EA E3F0 20B0 0016          000000B0   5232          LLGF  15,176(0,2)
000030F0 E3F0 D0B0 0024          000000B0   5233          STG   15,176(0,13)
000030F6 E3F0 4008 0004          00000008   5234          LG    15,8(0,4)   ; data
000030FC E3F0 D0B8 0024          000000B8   5235          STG   15,184(0,13)
00003102 E3F0 4010 0004          00000010   5236          LG    15,16(0,4)  ; len
                                                                                                                           Page  111 
  Active Usings: @REGION_1517_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003108 E3F0 D0C0 0024          000000C0   5237          STG   15,192(0,13)
0000310E 4110 D0B0               000000B0   5238          LA    1,176(0,13)
00003112 E3F0 C118 0004          00003180   5239          LG    15,@lit_1517_112 ; rd_crc32_update
00003118                                    5240 @@gen_label176 DS    0H
00003118 05EF                               5241          BALR  14,15
0000311A                                    5242 @@gen_label177 DS    0H
0000311A 50F0 20B0               000000B0   5243          ST    15,176(0,2)
0000311E                                    5244 @L492    DS    0H
                                            5245 * ***
                                            5246 * ***       return r;
0000311E B904 00F3                          5247          LGR   15,3
                                            5248 * ***   }
                                            5249 * * **** Start of Epilogue
                                            5250          DCCEPIL
00003122                                    5251+         ds 0h                                                          01-DCCEP
                                            5252+* Epilog
00003122 D707 D088 D088 00000088 00000088   5253+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003128 E3D0 D080 0004          00000080   5254+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000312E E3C0 D090 0004          00000090   5255+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003134 E3B0 C018 0004          00000018   5256+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000313A E3C0 B010 0021          00000010   5257+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003140 E3E0 D008 0004          00000008   5258+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003146 EB1C D020 0004          00000020   5259+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000314C 078E                               5260+         bcr 8,14                if same dsab, just return              01-DCCEP
0000314E E3F0 D010 0024          00000010   5261+         stg 15,16(0,13)         save return code                       01-DCCEP
00003154 E300 D018 0024          00000018   5262+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000315A E3F0 D090 0004          00000090   5263+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003160 E3F0 F018 0004          00000018   5264+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003166 47F0 F040               00000040   5265+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5266+* End of Epilog
                                            5267 * * **** End of Epilogue
00003170                                    5268          DS    0D
00003170 000000C8                           5269 @FRAMESIZE_1517 DC F'200'
00003174 00000000
00003178 0000000000000000                   5270 @lit_1517_111 DC AD(rd_buf_write)
00003180 0000000000002E80                   5271 @lit_1517_112 DC AD(rd_crc32_update)
                                            5272          DROP  12
                                            5273 *
                                            5274 *   DSECT for automatic variables in "rd_kafka_buf_write"
                                            5275 *      (FUNCTION #1517)
                                            5276 *
00000000                00000000 000000B0   5277 @AUTO#rd_kafka_buf_write DSECT
00000000                                    5278          DS    XL168
000000A8                                    5279 rd_kafka_buf_write#r#0 DS 8XL1 ; r
                                            5280 *
00003188                00000000 00014658   5281 @CODE    CSECT
                                            5282 *
                                            5283 *
                                            5284 *
                                            5285 * ....... start of rd_kafka_buf_write_i16
00003188                                    5286 @LNAME1521 DS  0H
00003188 00000016                           5287          DC    X'00000016'
                                                                                                                           Page  112 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000318C 99846D9281869281                   5288          DC    C'rd_kafka_buf_write_i16'
000031A2 00                                 5289          DC    X'00'
                                            5290 rd_kafka_buf_write_i16 DCCPRLG CINDEX=1521,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1521
                                            5291          macro
                                            5292          dccextrn &m
                                            5293          gblc    &$dccext(1000)
                                            5294          gbla    &$dccexti
                                            5295          lcla    &i
                                            5296 &$dccext(&$dccexti+1) setc    '&m'
                                            5297 &i       seta    1
                                            5298 .loop    aif    (&i gt &$dccexti).around
                                            5299          aif    ('&$dccext(&i)' eq '&m').getout
                                            5300 &i       seta    &i+1
                                            5301          ago     .loop
                                            5302 .around  anop
                                            5303 &$dccexti seta &$dccexti+1
                                            5304          extrn  &m
                                            5305 .getout  anop
                                            5306          mend
000031A8                                    5307+$eye0126    ds    0d                                                    02-DCCCA
000031A8 C4C3C3                             5308+         dc cl3'DCC'                                                    02-DCCCA
000031AB 01                                 5309+         dc xl1'01' format one                                          02-DCCCA
000031AC 00000000                           5310+         dc a(0)                                                        02-DCCCA
000031B0 000000000000321A                   5311+         dc ad(@PER_1521)                                               02-DCCCA
000031B8 00000000000000C0                   5312+         dc ad(192)                                                     02-DCCCA
000031C0 0000000000000000                   5313+         dc ad(0)                                                       02-DCCCA
000031C8 0000000000001000                   5314+         dc ad(4096)                                                    02-DCCCA
000031D0 20                                 5315+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000031D1 03                                 5316+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000031D2 03                                 5317+         dc al1(3)                                                      02-DCCCA
000031D3 08                                 5318+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000031D4 00                                 5319+         dc bl.8'00000000'                                              02-DCCCA
000031D5 000000                             5320+         dc al3(0)                                                      02-DCCCA
000031D8 0000000000003188                   5321+         dc ad(@LNAME1521)                                              02-DCCCA
000031E0                                    5322+         ds 0d                                                          02-DCCCA
000031E0 00000000000031A8                   5323+         dc ad($eye0126)                                                02-DCCCA
000031E8 0000000000000000                   5324+         dc ad(0)                                                       02-DCCCA
000031F0                                    5325+         ds    0d                                                       01-DCCPR
000031F0                                    5326+rd_kafka_buf_write_i16 ds 0d                                            01-DCCPR
000031F0                                    5327+@REGION_1521_1 ds 0h                                                    01-DCCPR
000031F0 EBEC D008 0024          00000008   5328+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000031F6 E3E0 D088 0004          00000088   5329+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000031FC E3C0 D090 0004          00000090   5330+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003202 B904 002E                          5331+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003206 E3B0 C018 0004          00000018   5332+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000320C A7EB 00C0               000000C0   5333+         aghi  14,192              increase by frame size               01-DCCPR
00003210 E3E0 C020 0021          00000020   5334+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003216 4720 B020               00000020   5335+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000321A                                    5336+@PER_1521 ds   0h                                                       01-DCCPR
0000321A EBDE 2080 0024          00000080   5337+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003220 E3C0 2090 0024          00000090   5338+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  113 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003226 B904 00D2                          5339+         lgr   13,2                set real frame pointer               01-DCCPR
0000322A B904 00CF                          5340+         lgr   12,15               set base reg                         01-DCCPR
                        000031F0            5341+         using @REGION_1521_1,12                                        01-DCCPR
                                            5342 * ******* End of Prologue
                                            5343 * *
                                            5344 * ***       v = (v);
0000322E 48F0 100E               0000000E   5345          LH    15,14(0,1)  ; v
00003232 40F0 100E               0000000E   5346          STH   15,14(0,1)  ; v
                                            5347 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
00003236 E3F0 1000 0004          00000000   5348          LG    15,0(0,1)   ; rkbuf
0000323C E3F0 D0A8 0024          000000A8   5349          STG   15,168(0,13)
00003242 41F0 100E               0000000E   5350          LA    15,14(0,1)
00003246 E3F0 D0B0 0024          000000B0   5351          STG   15,176(0,13)
0000324C E548 D0B8 0002          000000B8   5352          MVGHI 184(13),2
00003252 4110 D0A8               000000A8   5353          LA    1,168(0,13)
00003256 E3F0 C0C0 0004          000032B0   5354          LG    15,@lit_1521_114 ; rd_kafka_buf_write
0000325C                                    5355 @@gen_label178 DS    0H
0000325C 05EF                               5356          BALR  14,15
0000325E                                    5357 @@gen_label179 DS    0H
                                            5358 * ***   }
                                            5359 * * **** Start of Epilogue
                                            5360          DCCEPIL
0000325E                                    5361+         ds 0h                                                          01-DCCEP
                                            5362+* Epilog
0000325E D707 D088 D088 00000088 00000088   5363+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003264 E3D0 D080 0004          00000080   5364+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000326A E3C0 D090 0004          00000090   5365+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003270 E3B0 C018 0004          00000018   5366+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003276 E3C0 B010 0021          00000010   5367+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000327C E3E0 D008 0004          00000008   5368+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003282 EB1C D020 0004          00000020   5369+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003288 078E                               5370+         bcr 8,14                if same dsab, just return              01-DCCEP
0000328A E3F0 D010 0024          00000010   5371+         stg 15,16(0,13)         save return code                       01-DCCEP
00003290 E300 D018 0024          00000018   5372+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003296 E3F0 D090 0004          00000090   5373+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000329C E3F0 F018 0004          00000018   5374+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000032A2 47F0 F040               00000040   5375+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5376+* End of Epilog
                                            5377 * * **** End of Epilogue
000032A8                                    5378          DS    0D
000032A8 000000C0                           5379 @FRAMESIZE_1521 DC F'192'
000032AC 00000000
000032B0 0000000000003068                   5380 @lit_1521_114 DC AD(rd_kafka_buf_write)
                                            5381          DROP  12
                                            5382 *
                                            5383 *   DSECT for automatic variables in "rd_kafka_buf_write_i16"
                                            5384 *      (FUNCTION #1521)
                                            5385 *
00000000                00000000 000000A8   5386 @AUTO#rd_kafka_buf_write_i16 DSECT
00000000                                    5387          DS    XL168
                                            5388 *
000032B8                00000000 00014658   5389 @CODE    CSECT
                                                                                                                           Page  114 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5390 *
                                            5391 *
                                            5392 *
                                            5393 * ....... start of rd_kafka_buf_write_i32
000032B8                                    5394 @LNAME1523 DS  0H
000032B8 00000016                           5395          DC    X'00000016'
000032BC 99846D9281869281                   5396          DC    C'rd_kafka_buf_write_i32'
000032D2 00                                 5397          DC    X'00'
                                            5398 rd_kafka_buf_write_i32 DCCPRLG CINDEX=1523,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1523
                                            5399          macro
                                            5400          dccextrn &m
                                            5401          gblc    &$dccext(1000)
                                            5402          gbla    &$dccexti
                                            5403          lcla    &i
                                            5404 &$dccext(&$dccexti+1) setc    '&m'
                                            5405 &i       seta    1
                                            5406 .loop    aif    (&i gt &$dccexti).around
                                            5407          aif    ('&$dccext(&i)' eq '&m').getout
                                            5408 &i       seta    &i+1
                                            5409          ago     .loop
                                            5410 .around  anop
                                            5411 &$dccexti seta &$dccexti+1
                                            5412          extrn  &m
                                            5413 .getout  anop
                                            5414          mend
000032D8                                    5415+$eye0129    ds    0d                                                    02-DCCCA
000032D8 C4C3C3                             5416+         dc cl3'DCC'                                                    02-DCCCA
000032DB 01                                 5417+         dc xl1'01' format one                                          02-DCCCA
000032DC 00000000                           5418+         dc a(0)                                                        02-DCCCA
000032E0 000000000000334A                   5419+         dc ad(@PER_1523)                                               02-DCCCA
000032E8 00000000000000C0                   5420+         dc ad(192)                                                     02-DCCCA
000032F0 0000000000000000                   5421+         dc ad(0)                                                       02-DCCCA
000032F8 0000000000001000                   5422+         dc ad(4096)                                                    02-DCCCA
00003300 20                                 5423+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003301 03                                 5424+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003302 03                                 5425+         dc al1(3)                                                      02-DCCCA
00003303 08                                 5426+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003304 00                                 5427+         dc bl.8'00000000'                                              02-DCCCA
00003305 000000                             5428+         dc al3(0)                                                      02-DCCCA
00003308 00000000000032B8                   5429+         dc ad(@LNAME1523)                                              02-DCCCA
00003310                                    5430+         ds 0d                                                          02-DCCCA
00003310 00000000000032D8                   5431+         dc ad($eye0129)                                                02-DCCCA
00003318 0000000000000000                   5432+         dc ad(0)                                                       02-DCCCA
00003320                                    5433+         ds    0d                                                       01-DCCPR
00003320                                    5434+rd_kafka_buf_write_i32 ds 0d                                            01-DCCPR
00003320                                    5435+@REGION_1523_1 ds 0h                                                    01-DCCPR
00003320 EBEC D008 0024          00000008   5436+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003326 E3E0 D088 0004          00000088   5437+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000332C E3C0 D090 0004          00000090   5438+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003332 B904 002E                          5439+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003336 E3B0 C018 0004          00000018   5440+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  115 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000333C A7EB 00C0               000000C0   5441+         aghi  14,192              increase by frame size               01-DCCPR
00003340 E3E0 C020 0021          00000020   5442+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003346 4720 B020               00000020   5443+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000334A                                    5444+@PER_1523 ds   0h                                                       01-DCCPR
0000334A EBDE 2080 0024          00000080   5445+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003350 E3C0 2090 0024          00000090   5446+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003356 B904 00D2                          5447+         lgr   13,2                set real frame pointer               01-DCCPR
0000335A B904 00CF                          5448+         lgr   12,15               set base reg                         01-DCCPR
                        00003320            5449+         using @REGION_1523_1,12                                        01-DCCPR
                                            5450 * ******* End of Prologue
                                            5451 * *
                                            5452 * ***       v = (int32_t)(v);
0000335E 58F0 100C               0000000C   5453          L     15,12(0,1)  ; v
                                            5454 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
00003362 E3F0 1000 0004          00000000   5455          LG    15,0(0,1)   ; rkbuf
00003368 E3F0 D0A8 0024          000000A8   5456          STG   15,168(0,13)
0000336E 41F0 100C               0000000C   5457          LA    15,12(0,1)
00003372 E3F0 D0B0 0024          000000B0   5458          STG   15,176(0,13)
00003378 E548 D0B8 0004          000000B8   5459          MVGHI 184(13),4
0000337E 4110 D0A8               000000A8   5460          LA    1,168(0,13)
00003382 E3F0 C0C0 0004          000033E0   5461          LG    15,@lit_1523_116 ; rd_kafka_buf_write
00003388                                    5462 @@gen_label180 DS    0H
00003388 05EF                               5463          BALR  14,15
0000338A                                    5464 @@gen_label181 DS    0H
                                            5465 * ***   }
                                            5466 * * **** Start of Epilogue
                                            5467          DCCEPIL
0000338A                                    5468+         ds 0h                                                          01-DCCEP
                                            5469+* Epilog
0000338A D707 D088 D088 00000088 00000088   5470+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003390 E3D0 D080 0004          00000080   5471+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003396 E3C0 D090 0004          00000090   5472+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000339C E3B0 C018 0004          00000018   5473+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000033A2 E3C0 B010 0021          00000010   5474+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000033A8 E3E0 D008 0004          00000008   5475+         lg  14,8(0,13)          load up return address                 01-DCCEP
000033AE EB1C D020 0004          00000020   5476+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000033B4 078E                               5477+         bcr 8,14                if same dsab, just return              01-DCCEP
000033B6 E3F0 D010 0024          00000010   5478+         stg 15,16(0,13)         save return code                       01-DCCEP
000033BC E300 D018 0024          00000018   5479+         stg 0,24(0,13)          save more return code                  01-DCCEP
000033C2 E3F0 D090 0004          00000090   5480+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000033C8 E3F0 F018 0004          00000018   5481+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000033CE 47F0 F040               00000040   5482+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5483+* End of Epilog
                                            5484 * * **** End of Epilogue
000033D8                                    5485          DS    0D
000033D8 000000C0                           5486 @FRAMESIZE_1523 DC F'192'
000033DC 00000000
000033E0 0000000000003068                   5487 @lit_1523_116 DC AD(rd_kafka_buf_write)
                                            5488          DROP  12
                                            5489 *
                                            5490 *   DSECT for automatic variables in "rd_kafka_buf_write_i32"
                                            5491 *      (FUNCTION #1523)
                                                                                                                           Page  116 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5492 *
00000000                00000000 000000A8   5493 @AUTO#rd_kafka_buf_write_i32 DSECT
00000000                                    5494          DS    XL168
                                            5495 *
000033E8                00000000 00014658   5496 @CODE    CSECT
                                            5497 *
                                            5498 *
                                            5499 *
                                            5500 * ....... start of rd_kafka_buf_write_i64
000033E8                                    5501 @LNAME1527 DS  0H
000033E8 00000016                           5502          DC    X'00000016'
000033EC 99846D9281869281                   5503          DC    C'rd_kafka_buf_write_i64'
00003402 00                                 5504          DC    X'00'
                                            5505 rd_kafka_buf_write_i64 DCCPRLG CINDEX=1527,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1527
                                            5506          macro
                                            5507          dccextrn &m
                                            5508          gblc    &$dccext(1000)
                                            5509          gbla    &$dccexti
                                            5510          lcla    &i
                                            5511 &$dccext(&$dccexti+1) setc    '&m'
                                            5512 &i       seta    1
                                            5513 .loop    aif    (&i gt &$dccexti).around
                                            5514          aif    ('&$dccext(&i)' eq '&m').getout
                                            5515 &i       seta    &i+1
                                            5516          ago     .loop
                                            5517 .around  anop
                                            5518 &$dccexti seta &$dccexti+1
                                            5519          extrn  &m
                                            5520 .getout  anop
                                            5521          mend
00003408                                    5522+$eye0132    ds    0d                                                    02-DCCCA
00003408 C4C3C3                             5523+         dc cl3'DCC'                                                    02-DCCCA
0000340B 01                                 5524+         dc xl1'01' format one                                          02-DCCCA
0000340C 00000000                           5525+         dc a(0)                                                        02-DCCCA
00003410 000000000000347A                   5526+         dc ad(@PER_1527)                                               02-DCCCA
00003418 00000000000000C0                   5527+         dc ad(192)                                                     02-DCCCA
00003420 0000000000000000                   5528+         dc ad(0)                                                       02-DCCCA
00003428 0000000000001000                   5529+         dc ad(4096)                                                    02-DCCCA
00003430 20                                 5530+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003431 03                                 5531+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003432 03                                 5532+         dc al1(3)                                                      02-DCCCA
00003433 08                                 5533+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003434 00                                 5534+         dc bl.8'00000000'                                              02-DCCCA
00003435 000000                             5535+         dc al3(0)                                                      02-DCCCA
00003438 00000000000033E8                   5536+         dc ad(@LNAME1527)                                              02-DCCCA
00003440                                    5537+         ds 0d                                                          02-DCCCA
00003440 0000000000003408                   5538+         dc ad($eye0132)                                                02-DCCCA
00003448 0000000000000000                   5539+         dc ad(0)                                                       02-DCCCA
00003450                                    5540+         ds    0d                                                       01-DCCPR
00003450                                    5541+rd_kafka_buf_write_i64 ds 0d                                            01-DCCPR
00003450                                    5542+@REGION_1527_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page  117 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003450 EBEC D008 0024          00000008   5543+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003456 E3E0 D088 0004          00000088   5544+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000345C E3C0 D090 0004          00000090   5545+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003462 B904 002E                          5546+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003466 E3B0 C018 0004          00000018   5547+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000346C A7EB 00C0               000000C0   5548+         aghi  14,192              increase by frame size               01-DCCPR
00003470 E3E0 C020 0021          00000020   5549+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003476 4720 B020               00000020   5550+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000347A                                    5551+@PER_1527 ds   0h                                                       01-DCCPR
0000347A EBDE 2080 0024          00000080   5552+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003480 E3C0 2090 0024          00000090   5553+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003486 B904 00D2                          5554+         lgr   13,2                set real frame pointer               01-DCCPR
0000348A B904 00CF                          5555+         lgr   12,15               set base reg                         01-DCCPR
                        00003450            5556+         using @REGION_1527_1,12                                        01-DCCPR
                                            5557 * ******* End of Prologue
                                            5558 * *
                                            5559 * ***       v = (v);
0000348E E3F0 1008 0004          00000008   5560          LG    15,8(0,1)   ; v
                                            5561 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
00003494 E3F0 1000 0004          00000000   5562          LG    15,0(0,1)   ; rkbuf
0000349A E3F0 D0A8 0024          000000A8   5563          STG   15,168(0,13)
000034A0 41F0 1008               00000008   5564          LA    15,8(0,1)
000034A4 E3F0 D0B0 0024          000000B0   5565          STG   15,176(0,13)
000034AA E548 D0B8 0008          000000B8   5566          MVGHI 184(13),8
000034B0 4110 D0A8               000000A8   5567          LA    1,168(0,13)
000034B4 E3F0 C0C0 0004          00003510   5568          LG    15,@lit_1527_118 ; rd_kafka_buf_write
000034BA                                    5569 @@gen_label182 DS    0H
000034BA 05EF                               5570          BALR  14,15
000034BC                                    5571 @@gen_label183 DS    0H
                                            5572 * ***   }
                                            5573 * * **** Start of Epilogue
                                            5574          DCCEPIL
000034BC                                    5575+         ds 0h                                                          01-DCCEP
                                            5576+* Epilog
000034BC D707 D088 D088 00000088 00000088   5577+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000034C2 E3D0 D080 0004          00000080   5578+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000034C8 E3C0 D090 0004          00000090   5579+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000034CE E3B0 C018 0004          00000018   5580+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000034D4 E3C0 B010 0021          00000010   5581+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000034DA E3E0 D008 0004          00000008   5582+         lg  14,8(0,13)          load up return address                 01-DCCEP
000034E0 EB1C D020 0004          00000020   5583+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000034E6 078E                               5584+         bcr 8,14                if same dsab, just return              01-DCCEP
000034E8 E3F0 D010 0024          00000010   5585+         stg 15,16(0,13)         save return code                       01-DCCEP
000034EE E300 D018 0024          00000018   5586+         stg 0,24(0,13)          save more return code                  01-DCCEP
000034F4 E3F0 D090 0004          00000090   5587+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000034FA E3F0 F018 0004          00000018   5588+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003500 47F0 F040               00000040   5589+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5590+* End of Epilog
                                            5591 * * **** End of Epilogue
00003508                                    5592          DS    0D
00003508 000000C0                           5593 @FRAMESIZE_1527 DC F'192'
0000350C 00000000
                                                                                                                           Page  118 
  Active Usings: @REGION_1527_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003510 0000000000003068                   5594 @lit_1527_118 DC AD(rd_kafka_buf_write)
                                            5595          DROP  12
                                            5596 *
                                            5597 *   DSECT for automatic variables in "rd_kafka_buf_write_i64"
                                            5598 *      (FUNCTION #1527)
                                            5599 *
00000000                00000000 000000A8   5600 @AUTO#rd_kafka_buf_write_i64 DSECT
00000000                                    5601          DS    XL168
                                            5602 *
00003518                00000000 00014658   5603 @CODE    CSECT
                                            5604 *
                                            5605 *
                                            5606 *
                                            5607 * ....... start of rd_kafka_buf_write_uvarint
00003518                                    5608 @LNAME1530 DS  0H
00003518 0000001A                           5609          DC    X'0000001A'
0000351C 99846D9281869281                   5610          DC    C'rd_kafka_buf_write_uvarint'
00003536 00                                 5611          DC    X'00'
                                            5612 rd_kafka_buf_write_uvarint DCCPRLG CINDEX=1530,BASER=12,FRAME=208,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1530
                                            5613          macro
                                            5614          dccextrn &m
                                            5615          gblc    &$dccext(1000)
                                            5616          gbla    &$dccexti
                                            5617          lcla    &i
                                            5618 &$dccext(&$dccexti+1) setc    '&m'
                                            5619 &i       seta    1
                                            5620 .loop    aif    (&i gt &$dccexti).around
                                            5621          aif    ('&$dccext(&i)' eq '&m').getout
                                            5622 &i       seta    &i+1
                                            5623          ago     .loop
                                            5624 .around  anop
                                            5625 &$dccexti seta &$dccexti+1
                                            5626          extrn  &m
                                            5627 .getout  anop
                                            5628          mend
00003538                                    5629+$eye0135    ds    0d                                                    02-DCCCA
00003538 C4C3C3                             5630+         dc cl3'DCC'                                                    02-DCCCA
0000353B 01                                 5631+         dc xl1'01' format one                                          02-DCCCA
0000353C 00000000                           5632+         dc a(0)                                                        02-DCCCA
00003540 00000000000035AA                   5633+         dc ad(@PER_1530)                                               02-DCCCA
00003548 00000000000000D0                   5634+         dc ad(208)                                                     02-DCCCA
00003550 0000000000000000                   5635+         dc ad(0)                                                       02-DCCCA
00003558 0000000000001000                   5636+         dc ad(4096)                                                    02-DCCCA
00003560 20                                 5637+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003561 03                                 5638+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003562 03                                 5639+         dc al1(3)                                                      02-DCCCA
00003563 08                                 5640+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003564 00                                 5641+         dc bl.8'00000000'                                              02-DCCCA
00003565 000000                             5642+         dc al3(0)                                                      02-DCCCA
00003568 0000000000003518                   5643+         dc ad(@LNAME1530)                                              02-DCCCA
00003570                                    5644+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  119 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003570 0000000000003538                   5645+         dc ad($eye0135)                                                02-DCCCA
00003578 0000000000000000                   5646+         dc ad(0)                                                       02-DCCCA
00003580                                    5647+         ds    0d                                                       01-DCCPR
00003580                                    5648+rd_kafka_buf_write_uvarint ds 0d                                        01-DCCPR
00003580                                    5649+@REGION_1530_1 ds 0h                                                    01-DCCPR
00003580 EBEC D008 0024          00000008   5650+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003586 E3E0 D088 0004          00000088   5651+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000358C E3C0 D090 0004          00000090   5652+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003592 B904 002E                          5653+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003596 E3B0 C018 0004          00000018   5654+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000359C A7EB 00D0               000000D0   5655+         aghi  14,208              increase by frame size               01-DCCPR
000035A0 E3E0 C020 0021          00000020   5656+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000035A6 4720 B020               00000020   5657+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000035AA                                    5658+@PER_1530 ds   0h                                                       01-DCCPR
000035AA EBDE 2080 0024          00000080   5659+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000035B0 E3C0 2090 0024          00000090   5660+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000035B6 B904 00D2                          5661+         lgr   13,2                set real frame pointer               01-DCCPR
000035BA B904 00CF                          5662+         lgr   12,15               set base reg                         01-DCCPR
                        00003580            5663+         using @REGION_1530_1,12                                        01-DCCPR
000035BE B904 0021                          5664          LGR   2,1         ; ptr to parm area
                                            5665 * ******* End of Prologue
                                            5666 * *
                                            5667 * ***       char varint[(sizeof(v) + 1 + (sizeof(v)/7))];
                                            5668 * ***       size_t sz;
                                            5669 * ***
                                            5670 * ***       sz = rd_uvarint_enc_u64(varint, sizeof(varint), v);
000035C2 41F0 D0A8               000000A8   5671          LA    15,168(0,13)
000035C6 E3F0 D0B8 0024          000000B8   5672          STG   15,184(0,13)
000035CC E548 D0C0 000A          000000C0   5673          MVGHI 192(13),10
000035D2 E3F0 2008 0004          00000008   5674          LG    15,8(0,2)   ; v
000035D8 E3F0 D0C8 0024          000000C8   5675          STG   15,200(0,13)
000035DE 4110 D0B8               000000B8   5676          LA    1,184(0,13)
000035E2 E3F0 C0E8 0004          00003668   5677          LG    15,@lit_1530_120 ; rd_uvarint_enc_u64
000035E8                                    5678 @@gen_label184 DS    0H
000035E8 05EF                               5679          BALR  14,15
000035EA                                    5680 @@gen_label185 DS    0H
                                            5681 * ***
                                            5682 * ***       return rd_kafka_buf_write(rkbuf, varint, sz);
000035EA E310 2000 0004          00000000   5683          LG    1,0(0,2)    ; rkbuf
000035F0 E310 D0B8 0024          000000B8   5684          STG   1,184(0,13)
000035F6 4110 D0A8               000000A8   5685          LA    1,168(0,13)
000035FA E310 D0C0 0024          000000C0   5686          STG   1,192(0,13)
00003600 E3F0 D0C8 0024          000000C8   5687          STG   15,200(0,13)
00003606 4110 D0B8               000000B8   5688          LA    1,184(0,13)
0000360A E3F0 C0F0 0004          00003670   5689          LG    15,@lit_1530_121 ; rd_kafka_buf_write
00003610                                    5690 @@gen_label186 DS    0H
00003610 05EF                               5691          BALR  14,15
00003612                                    5692 @@gen_label187 DS    0H
                                            5693 * ***   }
                                            5694 * * **** Start of Epilogue
                                            5695          DCCEPIL
00003612                                    5696+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  120 
  Active Usings: @REGION_1530_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5697+* Epilog
00003612 D707 D088 D088 00000088 00000088   5698+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003618 E3D0 D080 0004          00000080   5699+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000361E E3C0 D090 0004          00000090   5700+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003624 E3B0 C018 0004          00000018   5701+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000362A E3C0 B010 0021          00000010   5702+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003630 E3E0 D008 0004          00000008   5703+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003636 EB1C D020 0004          00000020   5704+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000363C 078E                               5705+         bcr 8,14                if same dsab, just return              01-DCCEP
0000363E E3F0 D010 0024          00000010   5706+         stg 15,16(0,13)         save return code                       01-DCCEP
00003644 E300 D018 0024          00000018   5707+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000364A E3F0 D090 0004          00000090   5708+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003650 E3F0 F018 0004          00000018   5709+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003656 47F0 F040               00000040   5710+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5711+* End of Epilog
                                            5712 * * **** End of Epilogue
00003660                                    5713          DS    0D
00003660 000000D0                           5714 @FRAMESIZE_1530 DC F'208'
00003664 00000000
00003668 0000000000001890                   5715 @lit_1530_120 DC AD(rd_uvarint_enc_u64)
00003670 0000000000003068                   5716 @lit_1530_121 DC AD(rd_kafka_buf_write)
                                            5717          DROP  12
                                            5718 *
                                            5719 *   DSECT for automatic variables in "rd_kafka_buf_write_uvarint"
                                            5720 *      (FUNCTION #1530)
                                            5721 *
00000000                00000000 000000B2   5722 @AUTO#rd_kafka_buf_write_uvarint DSECT
00000000                                    5723          DS    XL168
000000A8                                    5724 rd_kafka_buf_write_uvarint#sz#0 DS 8XL1 ; sz
000000B0                000000B0 000000A8   5725          ORG   @AUTO#rd_kafka_buf_write_uvarint+168
000000A8                                    5726 rd_kafka_buf_write_uvarint#varint#0 DS 10XL1 ; varint
                                            5727 *
00003678                00000000 00014658   5728 @CODE    CSECT
                                            5729 *
                                            5730 *
                                            5731 *
                                            5732 * ....... start of rd_kafka_buf_write_str
00003678                                    5733 @LNAME1532 DS  0H
00003678 00000016                           5734          DC    X'00000016'
0000367C 99846D9281869281                   5735          DC    C'rd_kafka_buf_write_str'
00003692 00                                 5736          DC    X'00'
                                            5737 rd_kafka_buf_write_str DCCPRLG CINDEX=1532,BASER=12,FRAME=216,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1532
                                            5738          macro
                                            5739          dccextrn &m
                                            5740          gblc    &$dccext(1000)
                                            5741          gbla    &$dccexti
                                            5742          lcla    &i
                                            5743 &$dccext(&$dccexti+1) setc    '&m'
                                            5744 &i       seta    1
                                            5745 .loop    aif    (&i gt &$dccexti).around
                                            5746          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5747 &i       seta    &i+1
                                            5748          ago     .loop
                                            5749 .around  anop
                                            5750 &$dccexti seta &$dccexti+1
                                            5751          extrn  &m
                                            5752 .getout  anop
                                            5753          mend
00003698                                    5754+$eye0138    ds    0d                                                    02-DCCCA
00003698 C4C3C3                             5755+         dc cl3'DCC'                                                    02-DCCCA
0000369B 01                                 5756+         dc xl1'01' format one                                          02-DCCCA
0000369C 00000000                           5757+         dc a(0)                                                        02-DCCCA
000036A0 000000000000370A                   5758+         dc ad(@PER_1532)                                               02-DCCCA
000036A8 00000000000000D8                   5759+         dc ad(216)                                                     02-DCCCA
000036B0 0000000000000000                   5760+         dc ad(0)                                                       02-DCCCA
000036B8 0000000000001000                   5761+         dc ad(4096)                                                    02-DCCCA
000036C0 20                                 5762+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000036C1 03                                 5763+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000036C2 03                                 5764+         dc al1(3)                                                      02-DCCCA
000036C3 08                                 5765+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000036C4 00                                 5766+         dc bl.8'00000000'                                              02-DCCCA
000036C5 000000                             5767+         dc al3(0)                                                      02-DCCCA
000036C8 0000000000003678                   5768+         dc ad(@LNAME1532)                                              02-DCCCA
000036D0                                    5769+         ds 0d                                                          02-DCCCA
000036D0 0000000000003698                   5770+         dc ad($eye0138)                                                02-DCCCA
000036D8 0000000000000000                   5771+         dc ad(0)                                                       02-DCCCA
000036E0                                    5772+         ds    0d                                                       01-DCCPR
000036E0                                    5773+rd_kafka_buf_write_str ds 0d                                            01-DCCPR
000036E0                                    5774+@REGION_1532_1 ds 0h                                                    01-DCCPR
000036E0 EBEC D008 0024          00000008   5775+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000036E6 E3E0 D088 0004          00000088   5776+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000036EC E3C0 D090 0004          00000090   5777+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000036F2 B904 002E                          5778+         lgr   2,14                copy addr of our savearea            01-DCCPR
000036F6 E3B0 C018 0004          00000018   5779+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000036FC A7EB 00D8               000000D8   5780+         aghi  14,216              increase by frame size               01-DCCPR
00003700 E3E0 C020 0021          00000020   5781+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003706 4720 B020               00000020   5782+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000370A                                    5783+@PER_1532 ds   0h                                                       01-DCCPR
0000370A EBDE 2080 0024          00000080   5784+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003710 E3C0 2090 0024          00000090   5785+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003716 B904 00D2                          5786+         lgr   13,2                set real frame pointer               01-DCCPR
0000371A B904 00CF                          5787+         lgr   12,15               set base reg                         01-DCCPR
                        000036E0            5788+         using @REGION_1532_1,12                                        01-DCCPR
                                            5789 * ******* End of Prologue
                                            5790 * *
0000371E EB45 1000 0004          00000000   5791          LMG   4,5,0(1)    ; rkbuf
00003724 E320 1010 0004          00000010   5792          LG    2,16(0,1)   ; len
                                            5793 * ***       size_t r;
                                            5794 * ***
                                            5795 * ***
                                            5796 * ***       size_t ulen;
                                            5797 * ***       size_t alen;
                                            5798 * ***       alen = ((len == -1) ? __strlen(str) : len);
                                                                                                                           Page  122 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000372A A72F FFFF               0000FFFF   5799          CGHI  2,-1
0000372E 4770 C0A8               00003788   5800          BNE   @L515
00003732 B904 00F5                          5801          LGR   15,5
00003736 A709 0000               00000000   5802          LGHI  0,0
0000373A                                    5803 @@gen_label189 DS 0H
0000373A B25E 000F                          5804          SRST  0,15
0000373E 4710 C05A               0000373A   5805          BC  1,@@gen_label189
00003742 B90B 0005                          5806          SLGR  0,5
00003746 47F0 C0AC               0000378C   5807          B     @L516
00003750                                    5808          DS    0D
00003750 000000D8                           5809 @FRAMESIZE_1532 DC F'216'
00003754 00000000
00003758 0000000000000000                   5810 @lit_1532_123 DC AD(calloc)
00003760 0000000000000060                   5811 @lit_1532_124 DC AD(ebcdic_2_utf8)
00003768 00000000000031F0                   5812 @lit_1532_125 DC AD(rd_kafka_buf_write_i16)
00003770 0000000000003068                   5813 @lit_1532_126 DC AD(rd_kafka_buf_write)
00003778 0000000000000000                   5814 @lit_1532_127 DC AD(free)
00003780 0000000000003580                   5815 @lit_1532_129 DC AD(rd_kafka_buf_write_uvarint)
00003788                                    5816 @L515    DS    0H
00003788 B904 0002                          5817          LGR   0,2
0000378C                                    5818 @L516    DS    0H
0000378C E300 D0B0 0024          000000B0   5819          STG   0,176(0,13) ; alen
                                            5820 * ***       ulen = alen;
00003792 E300 D0A8 0024          000000A8   5821          STG   0,168(0,13) ; ulen
                                            5822 * ***       char* cbuf = calloc(1, ulen);
00003798 E548 D0B8 0001          000000B8   5823          MVGHI 184(13),1
0000379E E300 D0C0 0024          000000C0   5824          STG   0,192(0,13)
000037A4 4110 D0B8               000000B8   5825          LA    1,184(0,13)
000037A8 E3F0 C078 0004          00003758   5826          LG    15,@lit_1532_123 ; calloc
000037AE                                    5827 @@gen_label190 DS    0H
000037AE 05EF                               5828          BALR  14,15
000037B0                                    5829 @@gen_label191 DS    0H
000037B0 B904 006F                          5830          LGR   6,15
                                            5831 * ***       ebcdic_2_utf8(cbuf, &ulen, str, &alen);
000037B4 E360 D0B8 0024          000000B8   5832          STG   6,184(0,13)
000037BA 41F0 D0A8               000000A8   5833          LA    15,168(0,13)
000037BE E3F0 D0C0 0024          000000C0   5834          STG   15,192(0,13)
000037C4 E350 D0C8 0024          000000C8   5835          STG   5,200(0,13)
000037CA 41F0 D0B0               000000B0   5836          LA    15,176(0,13)
000037CE E3F0 D0D0 0024          000000D0   5837          STG   15,208(0,13)
000037D4 4110 D0B8               000000B8   5838          LA    1,184(0,13)
000037D8 E3F0 C080 0004          00003760   5839          LG    15,@lit_1532_124 ; ebcdic_2_utf8
000037DE                                    5840 @@gen_label192 DS    0H
000037DE 05EF                               5841          BALR  14,15
000037E0                                    5842 @@gen_label193 DS    0H
                                            5843 * ***
                                            5844 * ***
                                            5845 * ***       if (!(rkbuf->rkbuf_flags & 0x40)) {
000037E0 9140 4023      00000023 00000040   5846          TM    35(4),64
000037E4 4770 C16E               0000384E   5847          BNZ   @L517
                                            5848 * ***
                                            5849 * ***
                                                                                                                           Page  123 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5850 * ***           len = ulen;
000037E8 E320 D0A8 0004          000000A8   5851          LG    2,168(0,13) ; ulen
                                            5852 * ***   # 1219 "C:\asgkafka\librdkafka\src\rdkafka_buf.h"
                                            5853 * ***           r = rd_kafka_buf_write_i16(rkbuf, (int16_t)len);
000037EE E340 D0B8 0024          000000B8   5854          STG   4,184(0,13)
000037F4 B907 00F2                          5855          LGHR  15,2
000037F8 E3F0 D0C0 0024          000000C0   5856          STG   15,192(0,13)
000037FE 4110 D0B8               000000B8   5857          LA    1,184(0,13)
00003802 E3F0 C088 0004          00003768   5858          LG    15,@lit_1532_125 ; rd_kafka_buf_write_i16
00003808                                    5859 @@gen_label195 DS    0H
00003808 05EF                               5860          BALR  14,15
0000380A                                    5861 @@gen_label196 DS    0H
0000380A B904 003F                          5862          LGR   3,15        ; r
                                            5863 * ***           if (str)
0000380E B902 00F5                          5864          LTGR  15,5
00003812 4780 C154               00003834   5865          BZ    @L518
                                            5866 * ***
                                            5867 * ***               rd_kafka_buf_write(rkbuf, cbuf, len);
00003816 E340 D0B8 0024          000000B8   5868          STG   4,184(0,13)
0000381C E360 D0C0 0024          000000C0   5869          STG   6,192(0,13)
00003822 E320 D0C8 0024          000000C8   5870          STG   2,200(0,13)
00003828 4110 D0B8               000000B8   5871          LA    1,184(0,13)
0000382C E3F0 C090 0004          00003770   5872          LG    15,@lit_1532_126 ; rd_kafka_buf_write
00003832                                    5873 @@gen_label198 DS    0H
00003832 05EF                               5874          BALR  14,15
00003834                                    5875 @@gen_label199 DS    0H
00003834                                    5876 @L518    DS    0H
                                            5877 * ***           free(cbuf);
00003834 E360 D0B8 0024          000000B8   5878          STG   6,184(0,13)
0000383A 4110 D0B8               000000B8   5879          LA    1,184(0,13)
0000383E E3F0 C098 0004          00003778   5880          LG    15,@lit_1532_127 ; free
00003844                                    5881 @@gen_label200 DS    0H
00003844 05EF                               5882          BALR  14,15
00003846                                    5883 @@gen_label201 DS    0H
                                            5884 * ***
                                            5885 * ***
                                            5886 * ***
                                            5887 * ***           return r;
00003846 B904 00F3                          5888          LGR   15,3
0000384A 47F0 C1FC               000038DC   5889          B     @ret_lab_1532
                                            5890 * ***       }
0000384E                                    5891 @L517    DS    0H
                                            5892 * ***
                                            5893 * ***
                                            5894 * ***
                                            5895 * ***
                                            5896 * ***
                                            5897 * ***
                                            5898 * ***       if (!str)
0000384E B902 00F5                          5899          LTGR  15,5
00003852 4770 C17E               0000385E   5900          BNZ   @L519
                                            5901 * ***           len = 0;
                                                                                                                           Page  124 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003856 A729 0000               00000000   5902          LGHI  2,0         ; 0
0000385A 47F0 C19E               0000387E   5903          B     @L520
                                            5904 * ***       else if (len == (size_t)-1)
0000385E                                    5905 @L519    DS    0H
0000385E A72F FFFF               0000FFFF   5906          CGHI  2,-1
00003862 4770 C194               00003874   5907          BNE   @L521
                                            5908 * ***       {
                                            5909 * ***
                                            5910 * ***           len = ulen + 1;
00003866 E320 D0A8 0004          000000A8   5911          LG    2,168(0,13) ; ulen
0000386C A72B 0001               00000001   5912          AGHI  2,1
                                            5913 * ***
                                            5914 * ***
                                            5915 * ***
                                            5916 * ***       }
00003870 47F0 C19E               0000387E   5917          B     @L520
                                            5918 * ***       else
00003874                                    5919 @L521    DS    0H
                                            5920 * ***       {
                                            5921 * ***
                                            5922 * ***           len = ulen + 1;
00003874 E320 D0A8 0004          000000A8   5923          LG    2,168(0,13) ; ulen
0000387A A72B 0001               00000001   5924          AGHI  2,1
                                            5925 * ***
                                            5926 * ***
                                            5927 * ***
                                            5928 * ***       }
0000387E                                    5929 @L522    DS    0H
                                            5930 * ***
                                            5931 * ***       r = rd_kafka_buf_write_uvarint(rkbuf, (uint64_t)len);
0000387E                                    5932 @L520    DS    0H
0000387E E340 D0B8 0024          000000B8   5933          STG   4,184(0,13)
00003884 E320 D0C0 0024          000000C0   5934          STG   2,192(0,13)
0000388A 4110 D0B8               000000B8   5935          LA    1,184(0,13)
0000388E E3F0 C0A0 0004          00003780   5936          LG    15,@lit_1532_129 ; rd_kafka_buf_write_uvarint
00003894                                    5937 @@gen_label204 DS    0H
00003894 05EF                               5938          BALR  14,15
00003896                                    5939 @@gen_label205 DS    0H
00003896 B904 003F                          5940          LGR   3,15        ; r
                                            5941 * ***       if (len > 1)
0000389A C22E 0000 0001                     5942          CLGFI 2,X'00000001'
000038A0 47D0 C1E6               000038C6   5943          BNH   @L523
                                            5944 * ***
                                            5945 * ***           rd_kafka_buf_write(rkbuf, cbuf, len - 1);
000038A4 E340 D0B8 0024          000000B8   5946          STG   4,184(0,13)
000038AA E360 D0C0 0024          000000C0   5947          STG   6,192(0,13)
000038B0 A72B FFFF               0000FFFF   5948          AGHI  2,-1
000038B4 E320 D0C8 0024          000000C8   5949          STG   2,200(0,13)
000038BA 4110 D0B8               000000B8   5950          LA    1,184(0,13)
000038BE E3F0 C090 0004          00003770   5951          LG    15,@lit_1532_126 ; rd_kafka_buf_write
000038C4                                    5952 @@gen_label207 DS    0H
000038C4 05EF                               5953          BALR  14,15
                                                                                                                           Page  125 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000038C6                                    5954 @@gen_label208 DS    0H
000038C6                                    5955 @L523    DS    0H
                                            5956 * ***       free(cbuf);
000038C6 E360 D0B8 0024          000000B8   5957          STG   6,184(0,13)
000038CC 4110 D0B8               000000B8   5958          LA    1,184(0,13)
000038D0 E3F0 C098 0004          00003778   5959          LG    15,@lit_1532_127 ; free
000038D6                                    5960 @@gen_label209 DS    0H
000038D6 05EF                               5961          BALR  14,15
000038D8                                    5962 @@gen_label210 DS    0H
                                            5963 * ***
                                            5964 * ***
                                            5965 * ***
                                            5966 * ***       return r;
000038D8 B904 00F3                          5967          LGR   15,3
                                            5968 * ***   }
000038DC                                    5969 @ret_lab_1532 DS 0H
                                            5970 * * **** Start of Epilogue
                                            5971          DCCEPIL
000038DC                                    5972+         ds 0h                                                          01-DCCEP
                                            5973+* Epilog
000038DC D707 D088 D088 00000088 00000088   5974+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000038E2 E3D0 D080 0004          00000080   5975+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000038E8 E3C0 D090 0004          00000090   5976+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000038EE E3B0 C018 0004          00000018   5977+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000038F4 E3C0 B010 0021          00000010   5978+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000038FA E3E0 D008 0004          00000008   5979+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003900 EB1C D020 0004          00000020   5980+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003906 078E                               5981+         bcr 8,14                if same dsab, just return              01-DCCEP
00003908 E3F0 D010 0024          00000010   5982+         stg 15,16(0,13)         save return code                       01-DCCEP
0000390E E300 D018 0024          00000018   5983+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003914 E3F0 D090 0004          00000090   5984+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000391A E3F0 F018 0004          00000018   5985+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003920 47F0 F040               00000040   5986+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5987+* End of Epilog
                                            5988 * * **** End of Epilogue
                                            5989          DROP  12
                                            5990 *
                                            5991 *   DSECT for automatic variables in "rd_kafka_buf_write_str"
                                            5992 *      (FUNCTION #1532)
                                            5993 *
00000000                00000000 000000B8   5994 @AUTO#rd_kafka_buf_write_str DSECT
00000000                                    5995          DS    XL168
000000A8                                    5996 rd_kafka_buf_write_str#ulen#0 DS 8XL1 ; ulen
000000B0                000000B0 000000A8   5997          ORG   @AUTO#rd_kafka_buf_write_str+168
000000A8                                    5998 rd_kafka_buf_write_str#r#0 DS 8XL1 ; r
000000B0                000000B0 000000B0   5999          ORG   @AUTO#rd_kafka_buf_write_str+176
000000B0                                    6000 rd_kafka_buf_write_str#alen#0 DS 8XL1 ; alen
                                            6001 *
00003924                00000000 00014658   6002 @CODE    CSECT
                                            6003 *
                                            6004 *
                                            6005 *
                                                                                                                           Page  126 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6006 * ....... start of rd_kafka_rkt_is_lw
00003924                                    6007 @LNAME1670 DS  0H
00003924 00000012                           6008          DC    X'00000012'
00003928 99846D9281869281                   6009          DC    C'rd_kafka_rkt_is_lw'
0000393A 00                                 6010          DC    X'00'
                                            6011 rd_kafka_rkt_is_lw DCCPRLG CINDEX=1670,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1670
                                            6012          macro
                                            6013          dccextrn &m
                                            6014          gblc    &$dccext(1000)
                                            6015          gbla    &$dccexti
                                            6016          lcla    &i
                                            6017 &$dccext(&$dccexti+1) setc    '&m'
                                            6018 &i       seta    1
                                            6019 .loop    aif    (&i gt &$dccexti).around
                                            6020          aif    ('&$dccext(&i)' eq '&m').getout
                                            6021 &i       seta    &i+1
                                            6022          ago     .loop
                                            6023 .around  anop
                                            6024 &$dccexti seta &$dccexti+1
                                            6025          extrn  &m
                                            6026 .getout  anop
                                            6027          mend
00003940                                    6028+$eye0141    ds    0d                                                    02-DCCCA
00003940 C4C3C3                             6029+         dc cl3'DCC'                                                    02-DCCCA
00003943 01                                 6030+         dc xl1'01' format one                                          02-DCCCA
00003944 00000000                           6031+         dc a(0)                                                        02-DCCCA
00003948 0000000000000000                   6032+         dc ad(0)                                                       02-DCCCA
00003950 00000000000000B0                   6033+         dc ad(176)                                                     02-DCCCA
00003958 0000000000000000                   6034+         dc ad(0)                                                       02-DCCCA
00003960 0000000000001000                   6035+         dc ad(4096)                                                    02-DCCCA
00003968 20                                 6036+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003969 03                                 6037+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000396A 03                                 6038+         dc al1(3)                                                      02-DCCCA
0000396B 08                                 6039+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000396C 00                                 6040+         dc bl.8'00000000'                                              02-DCCCA
0000396D 000000                             6041+         dc al3(0)                                                      02-DCCCA
00003970 0000000000003924                   6042+         dc ad(@LNAME1670)                                              02-DCCCA
00003978                                    6043+         ds 0d                                                          02-DCCCA
00003978 0000000000003940                   6044+         dc ad($eye0141)                                                02-DCCCA
00003980 0000000000000000                   6045+         dc ad(0)                                                       02-DCCCA
00003988                                    6046+         ds    0d                                                       01-DCCPR
00003988                                    6047+rd_kafka_rkt_is_lw ds 0d                                                01-DCCPR
00003988                                    6048+@REGION_1670_1 ds 0h                                                    01-DCCPR
00003988 EBEC D008 0024          00000008   6049+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000398E B904 00CF                          6050+         lgr   12,15               set base reg                         01-DCCPR
                        00003988            6051+         using @REGION_1670_1,12                                        01-DCCPR
                                            6052 * ******* End of Prologue
                                            6053 * *
                                            6054 * ***           const rd_kafka_lwtopic_t *lrkt = ((const rd_kafka_lwto\
                                            6055 * pic_t *)app_rkt);
00003992 E3F0 1000 0004          00000000   6056          LG    15,0(0,1)   ; app_rkt
                                                                                                                           Page  127 
  Active Usings: @REGION_1670_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6057 * ***           return !__memcmp(lrkt->lrkt_magic,"LRKT",4);
00003998 E310 C058 0004          000039E0   6058          LG    1,@lit_1670_133
0000399E 4110 109C               0000009C   6059          LA    1,156(0,1)
000039A2 D503 F000 1000 00000000 00000000   6060          CLC   0(4,15),0(1)
000039A8 A7F9 0001               00000001   6061          LGHI  15,1
000039AC 4720 C034               000039BC   6062          BH    @@gen_label211
000039B0 4780 C030               000039B8   6063          BE    @@gen_label212
000039B4 A7FB FFFF               0000FFFF   6064          AGHI  15,-1
000039B8                                    6065 @@gen_label212 DS 0H
000039B8 A7FB FFFF               0000FFFF   6066          AGHI  15,-1
000039BC                                    6067 @@gen_label211 DS 0H
000039BC 10FF                               6068          LPR   15,15
000039BE A7FA FFFF               0000FFFF   6069          AHI   15,-1
000039C2 88F0 001F               0000001F   6070          SRL   15,31(0)
000039C6 E3F0 C060 0080          000039E8   6071          NG    15,@lit_1670_134
                                            6072 * ***   }
                                            6073 * * **** Start of Epilogue
                                            6074          DCCEPIL
000039CC                                    6075+         ds 0h                                                          01-DCCEP
                                            6076+* Epilog
                                            6077+* Epilog
000039CC E3E0 D008 0004          00000008   6078+         lg    14,8(,13) restore the reg                                01-DCCEP
000039D2 EB1C D020 0004          00000020   6079+         lmg   1,12,32(13)                                              01-DCCEP
000039D8 07FE                               6080+         br   14                                                        01-DCCEP
                                            6081+* End of Epilog
                                            6082 * * **** End of Epilogue
000039E0                                    6083          DS    0D
000039E0 0000000000014A98                   6084 @lit_1670_133 DC AD(@strings@)
000039E8 00000000000000FF                   6085 @lit_1670_134 DC FD'255' 0x00000000000000ff
                                            6086          DROP  12
                                            6087 *
                                            6088 *   DSECT for automatic variables in "rd_kafka_rkt_is_lw"
                                            6089 *      (FUNCTION #1670)
                                            6090 *
00000000                00000000 000000A8   6091 @AUTO#rd_kafka_rkt_is_lw DSECT
00000000                                    6092          DS    XL168
                                            6093 *
000039F0                00000000 00014658   6094 @CODE    CSECT
                                            6095 *
                                            6096 *
                                            6097 *
                                            6098 * ....... start of rd_kafka_rkt_get_lw
000039F0                                    6099 @LNAME1671 DS  0H
000039F0 00000013                           6100          DC    X'00000013'
000039F4 99846D9281869281                   6101          DC    C'rd_kafka_rkt_get_lw'
00003A07 00                                 6102          DC    X'00'
                                            6103 rd_kafka_rkt_get_lw DCCPRLG CINDEX=1671,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1671
                                            6104          macro
                                            6105          dccextrn &m
                                            6106          gblc    &$dccext(1000)
                                            6107          gbla    &$dccexti
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6108          lcla    &i
                                            6109 &$dccext(&$dccexti+1) setc    '&m'
                                            6110 &i       seta    1
                                            6111 .loop    aif    (&i gt &$dccexti).around
                                            6112          aif    ('&$dccext(&i)' eq '&m').getout
                                            6113 &i       seta    &i+1
                                            6114          ago     .loop
                                            6115 .around  anop
                                            6116 &$dccexti seta &$dccexti+1
                                            6117          extrn  &m
                                            6118 .getout  anop
                                            6119          mend
00003A08                                    6120+$eye0144    ds    0d                                                    02-DCCCA
00003A08 C4C3C3                             6121+         dc cl3'DCC'                                                    02-DCCCA
00003A0B 01                                 6122+         dc xl1'01' format one                                          02-DCCCA
00003A0C 00000000                           6123+         dc a(0)                                                        02-DCCCA
00003A10 0000000000003A7A                   6124+         dc ad(@PER_1671)                                               02-DCCCA
00003A18 00000000000000B0                   6125+         dc ad(176)                                                     02-DCCCA
00003A20 0000000000000000                   6126+         dc ad(0)                                                       02-DCCCA
00003A28 0000000000001000                   6127+         dc ad(4096)                                                    02-DCCCA
00003A30 20                                 6128+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A31 03                                 6129+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A32 03                                 6130+         dc al1(3)                                                      02-DCCCA
00003A33 08                                 6131+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A34 00                                 6132+         dc bl.8'00000000'                                              02-DCCCA
00003A35 000000                             6133+         dc al3(0)                                                      02-DCCCA
00003A38 00000000000039F0                   6134+         dc ad(@LNAME1671)                                              02-DCCCA
00003A40                                    6135+         ds 0d                                                          02-DCCCA
00003A40 0000000000003A08                   6136+         dc ad($eye0144)                                                02-DCCCA
00003A48 0000000000000000                   6137+         dc ad(0)                                                       02-DCCCA
00003A50                                    6138+         ds    0d                                                       01-DCCPR
00003A50                                    6139+rd_kafka_rkt_get_lw ds 0d                                               01-DCCPR
00003A50                                    6140+@REGION_1671_1 ds 0h                                                    01-DCCPR
00003A50 EBEC D008 0024          00000008   6141+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003A56 E3E0 D088 0004          00000088   6142+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003A5C E3C0 D090 0004          00000090   6143+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003A62 B904 002E                          6144+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003A66 E3B0 C018 0004          00000018   6145+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003A6C A7EB 00B0               000000B0   6146+         aghi  14,176              increase by frame size               01-DCCPR
00003A70 E3E0 C020 0021          00000020   6147+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003A76 4720 B020               00000020   6148+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003A7A                                    6149+@PER_1671 ds   0h                                                       01-DCCPR
00003A7A EBDE 2080 0024          00000080   6150+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003A80 E3C0 2090 0024          00000090   6151+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003A86 B904 00D2                          6152+         lgr   13,2                set real frame pointer               01-DCCPR
00003A8A B904 00CF                          6153+         lgr   12,15               set base reg                         01-DCCPR
                        00003A50            6154+         using @REGION_1671_1,12                                        01-DCCPR
00003A8E B904 0021                          6155          LGR   2,1         ; ptr to parm area
                                            6156 * ******* End of Prologue
                                            6157 * *
                                            6158 * ***           if (rd_kafka_rkt_is_lw(rkt))
00003A92 E3F0 2000 0004          00000000   6159          LG    15,0(0,2)   ; rkt
                                                                                                                           Page  129 
  Active Usings: @REGION_1671_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A98 E3F0 D0A8 0024          000000A8   6160          STG   15,168(0,13)
00003A9E 4110 D0A8               000000A8   6161          LA    1,168(0,13)
00003AA2 E3F0 C078 0004          00003AC8   6162          LG    15,@lit_1671_135 ; rd_kafka_rkt_is_lw
00003AA8                                    6163 @@gen_label213 DS    0H
00003AA8 05EF                               6164          BALR  14,15
00003AAA                                    6165 @@gen_label214 DS    0H
00003AAA C0FB 0000 00FF                     6166          NILF  15,X'000000FF'
00003AB0 12FF                               6167          LTR   15,15
00003AB2 4780 C080               00003AD0   6168          BZ    @L555
                                            6169 * ***                   return ((rd_kafka_lwtopic_t *)rkt);
00003AB6 E3F0 2000 0004          00000000   6170          LG    15,0(0,2)   ; rkt
00003ABC 47F0 C084               00003AD4   6171          B     @ret_lab_1671
00003AC0                                    6172          DS    0D
00003AC0 000000B0                           6173 @FRAMESIZE_1671 DC F'176'
00003AC4 00000000
00003AC8 0000000000003988                   6174 @lit_1671_135 DC AD(rd_kafka_rkt_is_lw)
00003AD0                                    6175 @L555    DS    0H
                                            6176 * ***           return ((void *)0);
00003AD0 A7F9 0000               00000000   6177          LGHI  15,0        ; 0
                                            6178 * ***   }
00003AD4                                    6179 @ret_lab_1671 DS 0H
                                            6180 * * **** Start of Epilogue
                                            6181          DCCEPIL
00003AD4                                    6182+         ds 0h                                                          01-DCCEP
                                            6183+* Epilog
00003AD4 D707 D088 D088 00000088 00000088   6184+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003ADA E3D0 D080 0004          00000080   6185+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003AE0 E3C0 D090 0004          00000090   6186+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003AE6 E3B0 C018 0004          00000018   6187+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003AEC E3C0 B010 0021          00000010   6188+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003AF2 E3E0 D008 0004          00000008   6189+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003AF8 EB1C D020 0004          00000020   6190+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003AFE 078E                               6191+         bcr 8,14                if same dsab, just return              01-DCCEP
00003B00 E3F0 D010 0024          00000010   6192+         stg 15,16(0,13)         save return code                       01-DCCEP
00003B06 E300 D018 0024          00000018   6193+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003B0C E3F0 D090 0004          00000090   6194+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003B12 E3F0 F018 0004          00000018   6195+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003B18 47F0 F040               00000040   6196+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6197+* End of Epilog
                                            6198 * * **** End of Epilogue
                                            6199          DROP  12
                                            6200 *
                                            6201 *   DSECT for automatic variables in "rd_kafka_rkt_get_lw"
                                            6202 *      (FUNCTION #1671)
                                            6203 *
00000000                00000000 000000A8   6204 @AUTO#rd_kafka_rkt_get_lw DSECT
00000000                                    6205          DS    XL168
                                            6206 *
00003B1C                00000000 00014658   6207 @CODE    CSECT
                                            6208 *
                                            6209 *
                                            6210 *
                                                                                                                           Page  130 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6211 * ....... start of rd_kafka_topic_destroy0
00003B1C                                    6212 @LNAME1678 DS  0H
00003B1C 00000017                           6213          DC    X'00000017'
00003B20 99846D9281869281                   6214          DC    C'rd_kafka_topic_destroy0'
00003B37 00                                 6215          DC    X'00'
                                            6216 rd_kafka_topic_destroy0 DCCPRLG CINDEX=1678,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1678
                                            6217          macro
                                            6218          dccextrn &m
                                            6219          gblc    &$dccext(1000)
                                            6220          gbla    &$dccexti
                                            6221          lcla    &i
                                            6222 &$dccext(&$dccexti+1) setc    '&m'
                                            6223 &i       seta    1
                                            6224 .loop    aif    (&i gt &$dccexti).around
                                            6225          aif    ('&$dccext(&i)' eq '&m').getout
                                            6226 &i       seta    &i+1
                                            6227          ago     .loop
                                            6228 .around  anop
                                            6229 &$dccexti seta &$dccexti+1
                                            6230          extrn  &m
                                            6231 .getout  anop
                                            6232          mend
00003B38                                    6233+$eye0147    ds    0d                                                    02-DCCCA
00003B38 C4C3C3                             6234+         dc cl3'DCC'                                                    02-DCCCA
00003B3B 01                                 6235+         dc xl1'01' format one                                          02-DCCCA
00003B3C 00000000                           6236+         dc a(0)                                                        02-DCCCA
00003B40 0000000000003BAA                   6237+         dc ad(@PER_1678)                                               02-DCCCA
00003B48 00000000000000B8                   6238+         dc ad(184)                                                     02-DCCCA
00003B50 0000000000000000                   6239+         dc ad(0)                                                       02-DCCCA
00003B58 0000000000001000                   6240+         dc ad(4096)                                                    02-DCCCA
00003B60 20                                 6241+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003B61 03                                 6242+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003B62 03                                 6243+         dc al1(3)                                                      02-DCCCA
00003B63 08                                 6244+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003B64 00                                 6245+         dc bl.8'00000000'                                              02-DCCCA
00003B65 000000                             6246+         dc al3(0)                                                      02-DCCCA
00003B68 0000000000003B1C                   6247+         dc ad(@LNAME1678)                                              02-DCCCA
00003B70                                    6248+         ds 0d                                                          02-DCCCA
00003B70 0000000000003B38                   6249+         dc ad($eye0147)                                                02-DCCCA
00003B78 0000000000000000                   6250+         dc ad(0)                                                       02-DCCCA
00003B80                                    6251+         ds    0d                                                       01-DCCPR
00003B80                                    6252+rd_kafka_topic_destroy0 ds 0d                                           01-DCCPR
00003B80                                    6253+@REGION_1678_1 ds 0h                                                    01-DCCPR
00003B80 EBEC D008 0024          00000008   6254+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003B86 E3E0 D088 0004          00000088   6255+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003B8C E3C0 D090 0004          00000090   6256+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003B92 B904 002E                          6257+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003B96 E3B0 C018 0004          00000018   6258+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003B9C A7EB 00B8               000000B8   6259+         aghi  14,184              increase by frame size               01-DCCPR
00003BA0 E3E0 C020 0021          00000020   6260+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003BA6 4720 B020               00000020   6261+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003BAA                                    6262+@PER_1678 ds   0h                                                       01-DCCPR
00003BAA EBDE 2080 0024          00000080   6263+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003BB0 E3C0 2090 0024          00000090   6264+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003BB6 B904 00D2                          6265+         lgr   13,2                set real frame pointer               01-DCCPR
00003BBA B904 00CF                          6266+         lgr   12,15               set base reg                         01-DCCPR
                        00003B80            6267+         using @REGION_1678_1,12                                        01-DCCPR
                                            6268 * ******* End of Prologue
                                            6269 * *
00003BBE E320 1000 0004          00000000   6270          LG    2,0(0,1)    ; rkt
                                            6271 * ***           rd_kafka_lwtopic_t *lrkt;
                                            6272 * ***           if ((((lrkt = rd_kafka_rkt_get_lw(rkt)) != ((void *)0)\
                                            6273 * )))
00003BC4 E320 D0B0 0024          000000B0   6274          STG   2,176(0,13)
00003BCA 4110 D0B0               000000B0   6275          LA    1,176(0,13)
00003BCE E3F0 C080 0004          00003C00   6276          LG    15,@lit_1678_138 ; rd_kafka_rkt_get_lw
00003BD4                                    6277 @@gen_label216 DS    0H
00003BD4 05EF                               6278          BALR  14,15
00003BD6                                    6279 @@gen_label217 DS    0H
00003BD6 B902 001F                          6280          LTGR  1,15
00003BDA 4780 C0A0               00003C20   6281          BE    @L558
                                            6282 * ***                   rd_kafka_lwtopic_destroy(lrkt);
00003BDE E3F0 D0B0 0024          000000B0   6283          STG   15,176(0,13)
00003BE4 4110 D0B0               000000B0   6284          LA    1,176(0,13)
00003BE8 E3F0 C088 0004          00003C08   6285          LG    15,@lit_1678_139 ; rd_kafka_lwtopic_destroy
00003BEE                                    6286 @@gen_label219 DS    0H
00003BEE 05EF                               6287          BALR  14,15
00003BF0                                    6288 @@gen_label220 DS    0H
00003BF0 47F0 C0CE               00003C4E   6289          B     @L559
00003BF8                                    6290          DS    0D
00003BF8 000000B8                           6291 @FRAMESIZE_1678 DC F'184'
00003BFC 00000000
00003C00 0000000000003A50                   6292 @lit_1678_138 DC AD(rd_kafka_rkt_get_lw)
00003C08 0000000000000000                   6293 @lit_1678_139 DC AD(rd_kafka_lwtopic_destroy)
00003C10 0000000000000F28                   6294 @lit_1678_140 DC AD(rd_refcnt_sub0)
00003C18 0000000000000000                   6295 @lit_1678_141 DC AD(rd_kafka_topic_destroy_final)
                                            6296 * ***           else if (((rd_refcnt_sub0(&rkt->rkt_refcnt) == 0)))
00003C20                                    6297 @L558    DS    0H
00003C20 41F0 2018               00000018   6298          LA    15,24(0,2)
00003C24 E3F0 D0B0 0024          000000B0   6299          STG   15,176(0,13)
00003C2A 4110 D0B0               000000B0   6300          LA    1,176(0,13)
00003C2E E3F0 C090 0004          00003C10   6301          LG    15,@lit_1678_140 ; rd_refcnt_sub0
00003C34                                    6302 @@gen_label221 DS    0H
00003C34 05EF                               6303          BALR  14,15
00003C36                                    6304 @@gen_label222 DS    0H
00003C36 12FF                               6305          LTR   15,15
00003C38 4770 C0CE               00003C4E   6306          BNE   @L559
                                            6307 * ***                   rd_kafka_topic_destroy_final(rkt);
00003C3C E320 D0B0 0024          000000B0   6308          STG   2,176(0,13)
00003C42 4110 D0B0               000000B0   6309          LA    1,176(0,13)
00003C46 E3F0 C098 0004          00003C18   6310          LG    15,@lit_1678_141 ; rd_kafka_topic_destroy_final
00003C4C                                    6311 @@gen_label224 DS    0H
00003C4C 05EF                               6312          BALR  14,15
                                                                                                                           Page  132 
  Active Usings: @REGION_1678_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003C4E                                    6313 @@gen_label225 DS    0H
00003C4E                                    6314 @L560    DS    0H
                                            6315 * ***   }
00003C4E                                    6316 @L559    DS    0H
00003C4E                                    6317 @ret_lab_1678 DS 0H
                                            6318 * * **** Start of Epilogue
                                            6319          DCCEPIL
00003C4E                                    6320+         ds 0h                                                          01-DCCEP
                                            6321+* Epilog
00003C4E D707 D088 D088 00000088 00000088   6322+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C54 E3D0 D080 0004          00000080   6323+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003C5A E3C0 D090 0004          00000090   6324+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C60 E3B0 C018 0004          00000018   6325+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C66 E3C0 B010 0021          00000010   6326+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C6C E3E0 D008 0004          00000008   6327+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C72 EB1C D020 0004          00000020   6328+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C78 078E                               6329+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C7A E3F0 D010 0024          00000010   6330+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C80 E300 D018 0024          00000018   6331+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C86 E3F0 D090 0004          00000090   6332+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C8C E3F0 F018 0004          00000018   6333+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C92 47F0 F040               00000040   6334+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6335+* End of Epilog
                                            6336 * * **** End of Epilogue
                                            6337          DROP  12
                                            6338 *
                                            6339 *   DSECT for automatic variables in "rd_kafka_topic_destroy0"
                                            6340 *      (FUNCTION #1678)
                                            6341 *
00000000                00000000 000000A8   6342 @AUTO#rd_kafka_topic_destroy0 DSECT
00000000                                    6343          DS    XL168
                                            6344 *
00003C96                00000000 00014658   6345 @CODE    CSECT
                                            6346 *
                                            6347 *
                                            6348 *
                                            6349 * ....... start of rd_kafka_broker_get_state
00003C96                                    6350 @LNAME1726 DS  0H
00003C96 00000019                           6351          DC    X'00000019'
00003C9A 99846D9281869281                   6352          DC    C'rd_kafka_broker_get_state'
00003CB3 00                                 6353          DC    X'00'
                                            6354 rd_kafka_broker_get_state DCCPRLG CINDEX=1726,BASER=12,FRAME=184,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1726
                                            6355          macro
                                            6356          dccextrn &m
                                            6357          gblc    &$dccext(1000)
                                            6358          gbla    &$dccexti
                                            6359          lcla    &i
                                            6360 &$dccext(&$dccexti+1) setc    '&m'
                                            6361 &i       seta    1
                                            6362 .loop    aif    (&i gt &$dccexti).around
                                            6363          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  133 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6364 &i       seta    &i+1
                                            6365          ago     .loop
                                            6366 .around  anop
                                            6367 &$dccexti seta &$dccexti+1
                                            6368          extrn  &m
                                            6369 .getout  anop
                                            6370          mend
00003CB8                                    6371+$eye0150    ds    0d                                                    02-DCCCA
00003CB8 C4C3C3                             6372+         dc cl3'DCC'                                                    02-DCCCA
00003CBB 01                                 6373+         dc xl1'01' format one                                          02-DCCCA
00003CBC 00000000                           6374+         dc a(0)                                                        02-DCCCA
00003CC0 0000000000003D2A                   6375+         dc ad(@PER_1726)                                               02-DCCCA
00003CC8 00000000000000B8                   6376+         dc ad(184)                                                     02-DCCCA
00003CD0 0000000000000000                   6377+         dc ad(0)                                                       02-DCCCA
00003CD8 0000000000001000                   6378+         dc ad(4096)                                                    02-DCCCA
00003CE0 20                                 6379+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003CE1 03                                 6380+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003CE2 03                                 6381+         dc al1(3)                                                      02-DCCCA
00003CE3 08                                 6382+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003CE4 00                                 6383+         dc bl.8'00000000'                                              02-DCCCA
00003CE5 000000                             6384+         dc al3(0)                                                      02-DCCCA
00003CE8 0000000000003C96                   6385+         dc ad(@LNAME1726)                                              02-DCCCA
00003CF0                                    6386+         ds 0d                                                          02-DCCCA
00003CF0 0000000000003CB8                   6387+         dc ad($eye0150)                                                02-DCCCA
00003CF8 0000000000000000                   6388+         dc ad(0)                                                       02-DCCCA
00003D00                                    6389+         ds    0d                                                       01-DCCPR
00003D00                                    6390+rd_kafka_broker_get_state ds 0d                                         01-DCCPR
00003D00                                    6391+@REGION_1726_1 ds 0h                                                    01-DCCPR
00003D00 EBEC D008 0024          00000008   6392+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003D06 E3E0 D088 0004          00000088   6393+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003D0C E3C0 D090 0004          00000090   6394+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003D12 B904 002E                          6395+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003D16 E3B0 C018 0004          00000018   6396+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003D1C A7EB 00B8               000000B8   6397+         aghi  14,184              increase by frame size               01-DCCPR
00003D20 E3E0 C020 0021          00000020   6398+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003D26 4720 B020               00000020   6399+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003D2A                                    6400+@PER_1726 ds   0h                                                       01-DCCPR
00003D2A EBDE 2080 0024          00000080   6401+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003D30 E3C0 2090 0024          00000090   6402+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003D36 B904 00D2                          6403+         lgr   13,2                set real frame pointer               01-DCCPR
00003D3A B904 00CF                          6404+         lgr   12,15               set base reg                         01-DCCPR
                        00003D00            6405+         using @REGION_1726_1,12                                        01-DCCPR
                                            6406 * ******* End of Prologue
                                            6407 * *
00003D3E E320 1000 0004          00000000   6408          LG    2,0(0,1)    ; rkb
                                            6409 * ***           rd_kafka_broker_state_t state;
                                            6410 * ***           mtx_lock(&(rkb)->rkb_lock);
00003D44 41F0 2048               00000048   6411          LA    15,72(0,2)
00003D48 E3F0 D0B0 0024          000000B0   6412          STG   15,176(0,13)
00003D4E 4110 D0B0               000000B0   6413          LA    1,176(0,13)
00003D52 E3F0 C0C8 0004          00003DC8   6414          LG    15,@lit_1726_143 ; mtx_lock
00003D58                                    6415 @@gen_label226 DS    0H
                                                                                                                           Page  134 
  Active Usings: @REGION_1726_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003D58 05EF                               6416          BALR  14,15
00003D5A                                    6417 @@gen_label227 DS    0H
                                            6418 * ***           state = rkb->rkb_state;
00003D5A 5830 20C4               000000C4   6419          L     3,196(0,2)  ; offset of rkb_state in rd_kafka_broker_s
                                            6420 * ***           mtx_unlock(&(rkb)->rkb_lock);
00003D5E 41F0 2048               00000048   6421          LA    15,72(0,2)
00003D62 E3F0 D0B0 0024          000000B0   6422          STG   15,176(0,13)
00003D68 4110 D0B0               000000B0   6423          LA    1,176(0,13)
00003D6C E3F0 C0D0 0004          00003DD0   6424          LG    15,@lit_1726_144 ; mtx_unlock
00003D72                                    6425 @@gen_label228 DS    0H
00003D72 05EF                               6426          BALR  14,15
00003D74                                    6427 @@gen_label229 DS    0H
                                            6428 * ***           return state;
00003D74 B914 00F3                          6429          LGFR  15,3
                                            6430 * ***   }
                                            6431 * * **** Start of Epilogue
                                            6432          DCCEPIL
00003D78                                    6433+         ds 0h                                                          01-DCCEP
                                            6434+* Epilog
00003D78 D707 D088 D088 00000088 00000088   6435+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003D7E E3D0 D080 0004          00000080   6436+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003D84 E3C0 D090 0004          00000090   6437+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003D8A E3B0 C018 0004          00000018   6438+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D90 E3C0 B010 0021          00000010   6439+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003D96 E3E0 D008 0004          00000008   6440+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003D9C EB1C D020 0004          00000020   6441+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003DA2 078E                               6442+         bcr 8,14                if same dsab, just return              01-DCCEP
00003DA4 E3F0 D010 0024          00000010   6443+         stg 15,16(0,13)         save return code                       01-DCCEP
00003DAA E300 D018 0024          00000018   6444+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003DB0 E3F0 D090 0004          00000090   6445+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003DB6 E3F0 F018 0004          00000018   6446+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003DBC 47F0 F040               00000040   6447+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6448+* End of Epilog
                                            6449 * * **** End of Epilogue
00003DC0                                    6450          DS    0D
00003DC0 000000B8                           6451 @FRAMESIZE_1726 DC F'184'
00003DC4 00000000
00003DC8 0000000000000000                   6452 @lit_1726_143 DC AD(mtx_lock)
00003DD0 0000000000000000                   6453 @lit_1726_144 DC AD(mtx_unlock)
                                            6454          DROP  12
                                            6455 *
                                            6456 *   DSECT for automatic variables in "rd_kafka_broker_get_state"
                                            6457 *      (FUNCTION #1726)
                                            6458 *
00000000                00000000 000000AC   6459 @AUTO#rd_kafka_broker_get_state DSECT
00000000                                    6460          DS    XL168
000000A8                                    6461 rd_kafka_broker_get_state#state#0 DS 1F ; state
                                            6462 *
00003DD8                00000000 00014658   6463 @CODE    CSECT
                                            6464 *
                                            6465 *
                                            6466 *
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6467 * ....... start of rd_kafka_broker_is_up
00003DD8                                    6468 @LNAME1727 DS  0H
00003DD8 00000015                           6469          DC    X'00000015'
00003DDC 99846D9281869281                   6470          DC    C'rd_kafka_broker_is_up'
00003DF1 00                                 6471          DC    X'00'
                                            6472 rd_kafka_broker_is_up DCCPRLG CINDEX=1727,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1727
                                            6473          macro
                                            6474          dccextrn &m
                                            6475          gblc    &$dccext(1000)
                                            6476          gbla    &$dccexti
                                            6477          lcla    &i
                                            6478 &$dccext(&$dccexti+1) setc    '&m'
                                            6479 &i       seta    1
                                            6480 .loop    aif    (&i gt &$dccexti).around
                                            6481          aif    ('&$dccext(&i)' eq '&m').getout
                                            6482 &i       seta    &i+1
                                            6483          ago     .loop
                                            6484 .around  anop
                                            6485 &$dccexti seta &$dccexti+1
                                            6486          extrn  &m
                                            6487 .getout  anop
                                            6488          mend
00003DF8                                    6489+$eye0153    ds    0d                                                    02-DCCCA
00003DF8 C4C3C3                             6490+         dc cl3'DCC'                                                    02-DCCCA
00003DFB 01                                 6491+         dc xl1'01' format one                                          02-DCCCA
00003DFC 00000000                           6492+         dc a(0)                                                        02-DCCCA
00003E00 0000000000003E6A                   6493+         dc ad(@PER_1727)                                               02-DCCCA
00003E08 00000000000000B8                   6494+         dc ad(184)                                                     02-DCCCA
00003E10 0000000000000000                   6495+         dc ad(0)                                                       02-DCCCA
00003E18 0000000000001000                   6496+         dc ad(4096)                                                    02-DCCCA
00003E20 20                                 6497+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003E21 03                                 6498+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003E22 03                                 6499+         dc al1(3)                                                      02-DCCCA
00003E23 08                                 6500+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003E24 00                                 6501+         dc bl.8'00000000'                                              02-DCCCA
00003E25 000000                             6502+         dc al3(0)                                                      02-DCCCA
00003E28 0000000000003DD8                   6503+         dc ad(@LNAME1727)                                              02-DCCCA
00003E30                                    6504+         ds 0d                                                          02-DCCCA
00003E30 0000000000003DF8                   6505+         dc ad($eye0153)                                                02-DCCCA
00003E38 0000000000000000                   6506+         dc ad(0)                                                       02-DCCCA
00003E40                                    6507+         ds    0d                                                       01-DCCPR
00003E40                                    6508+rd_kafka_broker_is_up ds 0d                                             01-DCCPR
00003E40                                    6509+@REGION_1727_1 ds 0h                                                    01-DCCPR
00003E40 EBEC D008 0024          00000008   6510+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003E46 E3E0 D088 0004          00000088   6511+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003E4C E3C0 D090 0004          00000090   6512+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003E52 B904 002E                          6513+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003E56 E3B0 C018 0004          00000018   6514+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003E5C A7EB 00B8               000000B8   6515+         aghi  14,184              increase by frame size               01-DCCPR
00003E60 E3E0 C020 0021          00000020   6516+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003E66 4720 B020               00000020   6517+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  136 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003E6A                                    6518+@PER_1727 ds   0h                                                       01-DCCPR
00003E6A EBDE 2080 0024          00000080   6519+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003E70 E3C0 2090 0024          00000090   6520+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003E76 B904 00D2                          6521+         lgr   13,2                set real frame pointer               01-DCCPR
00003E7A B904 00CF                          6522+         lgr   12,15               set base reg                         01-DCCPR
                        00003E40            6523+         using @REGION_1727_1,12                                        01-DCCPR
                                            6524 * ******* End of Prologue
                                            6525 * *
                                            6526 * ***           rd_kafka_broker_state_t state = rd_kafka_broker_get_st\
                                            6527 * ate(rkb);
00003E7E E3F0 1000 0004          00000000   6528          LG    15,0(0,1)   ; rkb
00003E84 E3F0 D0B0 0024          000000B0   6529          STG   15,176(0,13)
00003E8A 4110 D0B0               000000B0   6530          LA    1,176(0,13)
00003E8E E3F0 C078 0004          00003EB8   6531          LG    15,@lit_1727_146 ; rd_kafka_broker_get_state
00003E94                                    6532 @@gen_label230 DS    0H
00003E94 05EF                               6533          BALR  14,15
00003E96                                    6534 @@gen_label231 DS    0H
                                            6535 * ***           return ((state) == RD_KAFKA_BROKER_STATE_UP || (state)\
                                            6536 *  == RD_KAFKA_BROKER_STATE_UPDATE);
00003E96 A7FE 0006               00000006   6537          CHI   15,6
00003E9A 4780 C066               00003EA6   6538          BE    @L567
00003E9E A7FE 0007               00000007   6539          CHI   15,7
00003EA2 4770 C088               00003EC8   6540          BNE   @L569
00003EA6                                    6541 @L567    DS    0H
00003EA6 A7F8 0001               00000001   6542          LHI   15,1        ; 1
00003EAA 47F0 C08C               00003ECC   6543          B     @L568
00003EB0                                    6544          DS    0D
00003EB0 000000B8                           6545 @FRAMESIZE_1727 DC F'184'
00003EB4 00000000
00003EB8 0000000000003D00                   6546 @lit_1727_146 DC AD(rd_kafka_broker_get_state)
00003EC0 00000000000000FF                   6547 @lit_1727_149 DC FD'255' 0x00000000000000ff
00003EC8                                    6548 @L569    DS    0H
00003EC8 A7F8 0000               00000000   6549          LHI   15,0        ; 0
00003ECC                                    6550 @L568    DS    0H
00003ECC E3F0 C080 0080          00003EC0   6551          NG    15,@lit_1727_149
                                            6552 * ***   }
                                            6553 * * **** Start of Epilogue
                                            6554          DCCEPIL
00003ED2                                    6555+         ds 0h                                                          01-DCCEP
                                            6556+* Epilog
00003ED2 D707 D088 D088 00000088 00000088   6557+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003ED8 E3D0 D080 0004          00000080   6558+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003EDE E3C0 D090 0004          00000090   6559+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003EE4 E3B0 C018 0004          00000018   6560+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003EEA E3C0 B010 0021          00000010   6561+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003EF0 E3E0 D008 0004          00000008   6562+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003EF6 EB1C D020 0004          00000020   6563+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003EFC 078E                               6564+         bcr 8,14                if same dsab, just return              01-DCCEP
00003EFE E3F0 D010 0024          00000010   6565+         stg 15,16(0,13)         save return code                       01-DCCEP
00003F04 E300 D018 0024          00000018   6566+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003F0A E3F0 D090 0004          00000090   6567+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003F10 E3F0 F018 0004          00000018   6568+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  137 
  Active Usings: @REGION_1727_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003F16 47F0 F040               00000040   6569+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6570+* End of Epilog
                                            6571 * * **** End of Epilogue
                                            6572          DROP  12
                                            6573 *
                                            6574 *   DSECT for automatic variables in "rd_kafka_broker_is_up"
                                            6575 *      (FUNCTION #1727)
                                            6576 *
00000000                00000000 000000AC   6577 @AUTO#rd_kafka_broker_is_up DSECT
00000000                                    6578          DS    XL168
000000A8                                    6579 rd_kafka_broker_is_up#state#0 DS 1F ; state
                                            6580 *
00003F1A                00000000 00014658   6581 @CODE    CSECT
                                            6582 *
                                            6583 *
                                            6584 *
                                            6585 * ....... start of rd_kafka_topic_partition_match_valid_offset
00003F1A                                    6586 @LNAME1853 DS  0H
00003F1A 0000002B                           6587          DC    X'0000002B'
00003F1E 99846D9281869281                   6588          DC    C'rd_kafka_topic_partition_match_v'
00003F3E 819389846D968686                   6589          DC    C'alid_offset'
00003F49 00                                 6590          DC    X'00'
                                            6591 rd_kafka_topic_partition_match_valid_offset DCCPRLG CINDEX=1853,BASER=1*
                                                                2,FRAME=176,SAVEAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@L*
                                                                NAME1853
                                            6592          macro
                                            6593          dccextrn &m
                                            6594          gblc    &$dccext(1000)
                                            6595          gbla    &$dccexti
                                            6596          lcla    &i
                                            6597 &$dccext(&$dccexti+1) setc    '&m'
                                            6598 &i       seta    1
                                            6599 .loop    aif    (&i gt &$dccexti).around
                                            6600          aif    ('&$dccext(&i)' eq '&m').getout
                                            6601 &i       seta    &i+1
                                            6602          ago     .loop
                                            6603 .around  anop
                                            6604 &$dccexti seta &$dccexti+1
                                            6605          extrn  &m
                                            6606 .getout  anop
                                            6607          mend
00003F50                                    6608+$eye0156    ds    0d                                                    02-DCCCA
00003F50 C4C3C3                             6609+         dc cl3'DCC'                                                    02-DCCCA
00003F53 01                                 6610+         dc xl1'01' format one                                          02-DCCCA
00003F54 00000000                           6611+         dc a(0)                                                        02-DCCCA
00003F58 0000000000000000                   6612+         dc ad(0)                                                       02-DCCCA
00003F60 00000000000000B0                   6613+         dc ad(176)                                                     02-DCCCA
00003F68 0000000000000000                   6614+         dc ad(0)                                                       02-DCCCA
00003F70 0000000000001000                   6615+         dc ad(4096)                                                    02-DCCCA
00003F78 20                                 6616+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003F79 03                                 6617+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003F7A 03                                 6618+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  138 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003F7B 08                                 6619+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003F7C 00                                 6620+         dc bl.8'00000000'                                              02-DCCCA
00003F7D 000000                             6621+         dc al3(0)                                                      02-DCCCA
00003F80 0000000000003F1A                   6622+         dc ad(@LNAME1853)                                              02-DCCCA
00003F88                                    6623+         ds 0d                                                          02-DCCCA
00003F88 0000000000003F50                   6624+         dc ad($eye0156)                                                02-DCCCA
00003F90 0000000000000000                   6625+         dc ad(0)                                                       02-DCCCA
00003F98                                    6626+         ds    0d                                                       01-DCCPR
00003F98                                    6627+rd_kafka_topic_partition_match_valid_offset ds 0d                       01-DCCPR
00003F98                                    6628+@REGION_1853_1 ds 0h                                                    01-DCCPR
00003F98 EBEC D008 0024          00000008   6629+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003F9E B904 00CF                          6630+         lgr   12,15               set base reg                         01-DCCPR
                        00003F98            6631+         using @REGION_1853_1,12                                        01-DCCPR
                                            6632 * ******* End of Prologue
                                            6633 * *
                                            6634 * ***           const rd_kafka_topic_partition_t *rktpar = elem;
00003FA2 E3F0 1000 0004          00000000   6635          LG    15,0(0,1)   ; elem
                                            6636 * ***           return rktpar->offset >= 0;
00003FA8 E558 F010 0000          00000010   6637          CGHSI 16(15),0
00003FAE 4740 C022               00003FBA   6638          BL    @@gen_label234
00003FB2 A7F8 0001               00000001   6639          LHI   15,1
00003FB6 47F0 C026               00003FBE   6640          B     @@gen_label235
00003FBA                                    6641 @@gen_label234 DS 0H
00003FBA A7F8 0000               00000000   6642          LHI   15,0
00003FBE                                    6643 @@gen_label235 DS 0H
00003FBE B914 00FF                          6644          LGFR  15,15
                                            6645 * ***   }
                                            6646 * * **** Start of Epilogue
                                            6647          DCCEPIL
00003FC2                                    6648+         ds 0h                                                          01-DCCEP
                                            6649+* Epilog
                                            6650+* Epilog
00003FC2 E3E0 D008 0004          00000008   6651+         lg    14,8(,13) restore the reg                                01-DCCEP
00003FC8 EB1C D020 0004          00000020   6652+         lmg   1,12,32(13)                                              01-DCCEP
00003FCE 07FE                               6653+         br   14                                                        01-DCCEP
                                            6654+* End of Epilog
                                            6655 * * **** End of Epilogue
                                            6656          DROP  12
                                            6657 *
                                            6658 *   DSECT for automatic variables in "rd_kafka_topic_partition_match_v
                                            6659 *           alid_offset"
                                            6660 *      (FUNCTION #1853)
                                            6661 *
00000000                00000000 000000A8   6662 @AUTO#rd_kafka_topic_partition_match_valid_offset DSECT
00000000                                    6663          DS    XL168
                                            6664 *
00003FD0                00000000 00014658   6665 @CODE    CSECT
                                            6666 *
                                            6667 *
                                            6668 *
                                            6669 * ....... start of rd_kafka_toppar_topic_cmp
00003FD0                                    6670 @LNAME1873 DS  0H
                                                                                                                           Page  139 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003FD0 00000019                           6671          DC    X'00000019'
00003FD4 99846D9281869281                   6672          DC    C'rd_kafka_toppar_topic_cmp'
00003FED 00                                 6673          DC    X'00'
                                            6674 rd_kafka_toppar_topic_cmp DCCPRLG CINDEX=1873,BASER=12,FRAME=176,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1873
                                            6675          macro
                                            6676          dccextrn &m
                                            6677          gblc    &$dccext(1000)
                                            6678          gbla    &$dccexti
                                            6679          lcla    &i
                                            6680 &$dccext(&$dccexti+1) setc    '&m'
                                            6681 &i       seta    1
                                            6682 .loop    aif    (&i gt &$dccexti).around
                                            6683          aif    ('&$dccext(&i)' eq '&m').getout
                                            6684 &i       seta    &i+1
                                            6685          ago     .loop
                                            6686 .around  anop
                                            6687 &$dccexti seta &$dccexti+1
                                            6688          extrn  &m
                                            6689 .getout  anop
                                            6690          mend
00003FF0                                    6691+$eye0159    ds    0d                                                    02-DCCCA
00003FF0 C4C3C3                             6692+         dc cl3'DCC'                                                    02-DCCCA
00003FF3 01                                 6693+         dc xl1'01' format one                                          02-DCCCA
00003FF4 00000000                           6694+         dc a(0)                                                        02-DCCCA
00003FF8 0000000000000000                   6695+         dc ad(0)                                                       02-DCCCA
00004000 00000000000000B0                   6696+         dc ad(176)                                                     02-DCCCA
00004008 0000000000000000                   6697+         dc ad(0)                                                       02-DCCCA
00004010 0000000000001000                   6698+         dc ad(4096)                                                    02-DCCCA
00004018 20                                 6699+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004019 03                                 6700+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000401A 03                                 6701+         dc al1(3)                                                      02-DCCCA
0000401B 08                                 6702+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000401C 00                                 6703+         dc bl.8'00000000'                                              02-DCCCA
0000401D 000000                             6704+         dc al3(0)                                                      02-DCCCA
00004020 0000000000003FD0                   6705+         dc ad(@LNAME1873)                                              02-DCCCA
00004028                                    6706+         ds 0d                                                          02-DCCCA
00004028 0000000000003FF0                   6707+         dc ad($eye0159)                                                02-DCCCA
00004030 0000000000000000                   6708+         dc ad(0)                                                       02-DCCCA
00004038                                    6709+         ds    0d                                                       01-DCCPR
00004038                                    6710+rd_kafka_toppar_topic_cmp ds 0d                                         01-DCCPR
00004038                                    6711+@REGION_1873_1 ds 0h                                                    01-DCCPR
00004038 EBEC D008 0024          00000008   6712+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000403E B904 00CF                          6713+         lgr   12,15               set base reg                         01-DCCPR
                        00004038            6714+         using @REGION_1873_1,12                                        01-DCCPR
                                            6715 * ******* End of Prologue
                                            6716 * *
                                            6717 * ***           const rd_kafka_toppar_t *a = _a, *b = _b;
00004042 E3F0 1000 0004          00000000   6718          LG    15,0(0,1)   ; _a
00004048 E310 1008 0004          00000008   6719          LG    1,8(0,1)    ; _b
                                            6720 * ***           return __strcmp(a->rktp_rkt->rkt_topic->str,b->rktp_rk\
                                            6721 * t->rkt_topic->str);
                                                                                                                           Page  140 
  Active Usings: @REGION_1873_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000404E E3F0 F060 0004          00000060   6722          LG    15,96(0,15) ; offset of rktp_rkt in rd_kafka_toppar_s
00004054 E3F0 F080 0004          00000080   6723          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000405A E310 1060 0004          00000060   6724          LG    1,96(0,1)   ; offset of rktp_rkt in rd_kafka_toppar_s
00004060 E310 1080 0004          00000080   6725          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00004066 E3F0 F008 0004          00000008   6726          LG    15,8(0,15)
0000406C E310 1008 0004          00000008   6727          LG    1,8(0,1)
00004072 4100 0000               00000000   6728          LA    0,0(0,0)
00004076 A729 0000               00000000   6729          LGHI  2,0
0000407A                                    6730 @@gen_label236 DS 0H
0000407A B25D 00F1                          6731          CLST  15,1
0000407E 4710 C042               0000407A   6732          BC  1,@@gen_label236
00004082 4780 C05E               00004096   6733          BE    @@gen_label237
00004086 E320 F000 0090          00000000   6734          LLGC  2,0(0,15)
0000408C E3F0 1000 0090          00000000   6735          LLGC  15,0(0,1)
00004092 B90B 002F                          6736          SLGR  2,15
00004096                                    6737 @@gen_label237 DS 0H
00004096 B914 00F2                          6738          LGFR  15,2
                                            6739 * ***
                                            6740 * ***   }
                                            6741 * * **** Start of Epilogue
                                            6742          DCCEPIL
0000409A                                    6743+         ds 0h                                                          01-DCCEP
                                            6744+* Epilog
                                            6745+* Epilog
0000409A E3E0 D008 0004          00000008   6746+         lg    14,8(,13) restore the reg                                01-DCCEP
000040A0 EB1C D020 0004          00000020   6747+         lmg   1,12,32(13)                                              01-DCCEP
000040A6 07FE                               6748+         br   14                                                        01-DCCEP
                                            6749+* End of Epilog
                                            6750 * * **** End of Epilogue
                                            6751          DROP  12
                                            6752 *
                                            6753 *   DSECT for automatic variables in "rd_kafka_toppar_topic_cmp"
                                            6754 *      (FUNCTION #1873)
                                            6755 *
00000000                00000000 000000A8   6756 @AUTO#rd_kafka_toppar_topic_cmp DSECT
00000000                                    6757          DS    XL168
                                            6758 *
000040A8                00000000 00014658   6759 @CODE    CSECT
                                            6760 *
                                            6761 *
                                            6762 *
                                            6763 * ....... start of rd_kafka_idemp_state2str
000040A8                                    6764 @LNAME1892 DS  0H
000040A8 00000018                           6765          DC    X'00000018'
000040AC 99846D9281869281                   6766          DC    C'rd_kafka_idemp_state2str'
000040C4 00                                 6767          DC    X'00'
                                            6768 rd_kafka_idemp_state2str DCCPRLG CINDEX=1892,BASER=12,FRAME=168,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1892
                                            6769          macro
                                            6770          dccextrn &m
                                            6771          gblc    &$dccext(1000)
                                            6772          gbla    &$dccexti
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6773          lcla    &i
                                            6774 &$dccext(&$dccexti+1) setc    '&m'
                                            6775 &i       seta    1
                                            6776 .loop    aif    (&i gt &$dccexti).around
                                            6777          aif    ('&$dccext(&i)' eq '&m').getout
                                            6778 &i       seta    &i+1
                                            6779          ago     .loop
                                            6780 .around  anop
                                            6781 &$dccexti seta &$dccexti+1
                                            6782          extrn  &m
                                            6783 .getout  anop
                                            6784          mend
000040C8                                    6785+$eye0162    ds    0d                                                    02-DCCCA
000040C8 C4C3C3                             6786+         dc cl3'DCC'                                                    02-DCCCA
000040CB 01                                 6787+         dc xl1'01' format one                                          02-DCCCA
000040CC 00000000                           6788+         dc a(0)                                                        02-DCCCA
000040D0 000000000000413A                   6789+         dc ad(@PER_1892)                                               02-DCCCA
000040D8 00000000000000A8                   6790+         dc ad(168)                                                     02-DCCCA
000040E0 0000000000000000                   6791+         dc ad(0)                                                       02-DCCCA
000040E8 0000000000001000                   6792+         dc ad(4096)                                                    02-DCCCA
000040F0 20                                 6793+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000040F1 03                                 6794+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000040F2 03                                 6795+         dc al1(3)                                                      02-DCCCA
000040F3 08                                 6796+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000040F4 00                                 6797+         dc bl.8'00000000'                                              02-DCCCA
000040F5 000000                             6798+         dc al3(0)                                                      02-DCCCA
000040F8 00000000000040A8                   6799+         dc ad(@LNAME1892)                                              02-DCCCA
00004100                                    6800+         ds 0d                                                          02-DCCCA
00004100 00000000000040C8                   6801+         dc ad($eye0162)                                                02-DCCCA
00004108 0000000000000000                   6802+         dc ad(0)                                                       02-DCCCA
00004110                                    6803+         ds    0d                                                       01-DCCPR
00004110                                    6804+rd_kafka_idemp_state2str ds 0d                                          01-DCCPR
00004110                                    6805+@REGION_1892_1 ds 0h                                                    01-DCCPR
00004110 EBEC D008 0024          00000008   6806+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004116 E3E0 D088 0004          00000088   6807+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000411C E3C0 D090 0004          00000090   6808+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004122 B904 002E                          6809+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004126 E3B0 C018 0004          00000018   6810+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000412C A7EB 00A8               000000A8   6811+         aghi  14,168              increase by frame size               01-DCCPR
00004130 E3E0 C020 0021          00000020   6812+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004136 4720 B020               00000020   6813+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000413A                                    6814+@PER_1892 ds   0h                                                       01-DCCPR
0000413A EBDE 2080 0024          00000080   6815+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004140 E3C0 2090 0024          00000090   6816+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004146 B904 00D2                          6817+         lgr   13,2                set real frame pointer               01-DCCPR
0000414A B904 00CF                          6818+         lgr   12,15               set base reg                         01-DCCPR
                        00004110            6819+         using @REGION_1892_1,12                                        01-DCCPR
                                            6820          DCCPRV REG=15     ; Get PRV from DVT
0000414E E3F0 B008 0004          00000008   6821+         LG 15,8(0,11)                                                  01-DCCPR
                                            6822 * ******* End of Prologue
                                            6823 * *
                                            6824 * ***           static const char *names[] = {
                                                                                                                           Page  142 
  Active Usings: @REGION_1892_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6825 * ***                   "Init",
                                            6826 * ***                   "Terminate",
                                            6827 * ***                   "FatalError",
                                            6828 * ***                   "RequestPID",
                                            6829 * ***                   "WaitTransport",
                                            6830 * ***                   "WaitPID",
                                            6831 * ***                   "Assigned",
                                            6832 * ***                   "DrainReset",
                                            6833 * ***                   "DrainBump"
                                            6834 * ***           return names[state];
00004154 E310 1004 0014          00000004   6835          LGF   1,4(0,1)    ; state
0000415A E320 C0AC 0014          000041BC   6836          LGF   2,@lit_1892_151
00004160 41F2 F000               00000000   6837          LA    15,0(2,15)
00004164 EB11 0003 000D          00000003   6838          SLLG  1,1,3(0)    ; *0x8
0000416A E3F1 F630 0004          00000630   6839          LG    15,1584(1,15)
                                            6840 * ***   }
                                            6841 * * **** Start of Epilogue
                                            6842          DCCEPIL
00004170                                    6843+         ds 0h                                                          01-DCCEP
                                            6844+* Epilog
00004170 D707 D088 D088 00000088 00000088   6845+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004176 E3D0 D080 0004          00000080   6846+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000417C E3C0 D090 0004          00000090   6847+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004182 E3B0 C018 0004          00000018   6848+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004188 E3C0 B010 0021          00000010   6849+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000418E E3E0 D008 0004          00000008   6850+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004194 EB1C D020 0004          00000020   6851+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000419A 078E                               6852+         bcr 8,14                if same dsab, just return              01-DCCEP
0000419C E3F0 D010 0024          00000010   6853+         stg 15,16(0,13)         save return code                       01-DCCEP
000041A2 E300 D018 0024          00000018   6854+         stg 0,24(0,13)          save more return code                  01-DCCEP
000041A8 E3F0 D090 0004          00000090   6855+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000041AE E3F0 F018 0004          00000018   6856+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000041B4 47F0 F040               00000040   6857+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6858+* End of Epilog
                                            6859 * * **** End of Epilogue
000041B8                                    6860          DS    0D
000041B8 000000A8                           6861 @FRAMESIZE_1892 DC F'168'
000041BC 00000000                           6862 @lit_1892_151 DC Q(@@STATIC)
                                            6863          DROP  12
                                            6864 *
                                            6865 *   DSECT for automatic variables in "rd_kafka_idemp_state2str"
                                            6866 *      (FUNCTION #1892)
                                            6867 *
00000000                00000000 000000A8   6868 @AUTO#rd_kafka_idemp_state2str DSECT
00000000                                    6869          DS    XL168
                                            6870 *
000041C0                00000000 00014658   6871 @CODE    CSECT
                                            6872 *
                                            6873 *
                                            6874 *
                                            6875 * ....... start of rd_kafka_txn_state2str
000041C0                                    6876 @LNAME1893 DS  0H
                                                                                                                           Page  143 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000041C0 00000016                           6877          DC    X'00000016'
000041C4 99846D9281869281                   6878          DC    C'rd_kafka_txn_state2str'
000041DA 00                                 6879          DC    X'00'
                                            6880 rd_kafka_txn_state2str DCCPRLG CINDEX=1893,BASER=12,FRAME=168,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1893
                                            6881          macro
                                            6882          dccextrn &m
                                            6883          gblc    &$dccext(1000)
                                            6884          gbla    &$dccexti
                                            6885          lcla    &i
                                            6886 &$dccext(&$dccexti+1) setc    '&m'
                                            6887 &i       seta    1
                                            6888 .loop    aif    (&i gt &$dccexti).around
                                            6889          aif    ('&$dccext(&i)' eq '&m').getout
                                            6890 &i       seta    &i+1
                                            6891          ago     .loop
                                            6892 .around  anop
                                            6893 &$dccexti seta &$dccexti+1
                                            6894          extrn  &m
                                            6895 .getout  anop
                                            6896          mend
000041E0                                    6897+$eye0166    ds    0d                                                    02-DCCCA
000041E0 C4C3C3                             6898+         dc cl3'DCC'                                                    02-DCCCA
000041E3 01                                 6899+         dc xl1'01' format one                                          02-DCCCA
000041E4 00000000                           6900+         dc a(0)                                                        02-DCCCA
000041E8 0000000000004252                   6901+         dc ad(@PER_1893)                                               02-DCCCA
000041F0 00000000000000A8                   6902+         dc ad(168)                                                     02-DCCCA
000041F8 0000000000000000                   6903+         dc ad(0)                                                       02-DCCCA
00004200 0000000000001000                   6904+         dc ad(4096)                                                    02-DCCCA
00004208 20                                 6905+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004209 03                                 6906+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000420A 03                                 6907+         dc al1(3)                                                      02-DCCCA
0000420B 08                                 6908+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000420C 00                                 6909+         dc bl.8'00000000'                                              02-DCCCA
0000420D 000000                             6910+         dc al3(0)                                                      02-DCCCA
00004210 00000000000041C0                   6911+         dc ad(@LNAME1893)                                              02-DCCCA
00004218                                    6912+         ds 0d                                                          02-DCCCA
00004218 00000000000041E0                   6913+         dc ad($eye0166)                                                02-DCCCA
00004220 0000000000000000                   6914+         dc ad(0)                                                       02-DCCCA
00004228                                    6915+         ds    0d                                                       01-DCCPR
00004228                                    6916+rd_kafka_txn_state2str ds 0d                                            01-DCCPR
00004228                                    6917+@REGION_1893_1 ds 0h                                                    01-DCCPR
00004228 EBEC D008 0024          00000008   6918+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000422E E3E0 D088 0004          00000088   6919+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004234 E3C0 D090 0004          00000090   6920+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000423A B904 002E                          6921+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000423E E3B0 C018 0004          00000018   6922+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004244 A7EB 00A8               000000A8   6923+         aghi  14,168              increase by frame size               01-DCCPR
00004248 E3E0 C020 0021          00000020   6924+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000424E 4720 B020               00000020   6925+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004252                                    6926+@PER_1893 ds   0h                                                       01-DCCPR
00004252 EBDE 2080 0024          00000080   6927+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004258 E3C0 2090 0024          00000090   6928+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000425E B904 00D2                          6929+         lgr   13,2                set real frame pointer               01-DCCPR
00004262 B904 00CF                          6930+         lgr   12,15               set base reg                         01-DCCPR
                        00004228            6931+         using @REGION_1893_1,12                                        01-DCCPR
                                            6932          DCCPRV REG=15     ; Get PRV from DVT
00004266 E3F0 B008 0004          00000008   6933+         LG 15,8(0,11)                                                  01-DCCPR
                                            6934 * ******* End of Prologue
                                            6935 * *
                                            6936 * ***           static const char *names[] = {
                                            6937 * ***                   "Init",
                                            6938 * ***                   "WaitPID",
                                            6939 * ***                   "ReadyNotAcked",
                                            6940 * ***                   "Ready",
                                            6941 * ***                   "InTransaction",
                                            6942 * ***                   "BeginCommit",
                                            6943 * ***                   "CommittingTransaction",
                                            6944 * ***                   "CommitNotAcked",
                                            6945 * ***                   "AbortingTransaction",
                                            6946 * ***                   "AbortedNotAcked",
                                            6947 * ***                   "AbortableError",
                                            6948 * ***                   "FatalError"
                                            6949 * ***           return names[state];
0000426C E310 1004 0014          00000004   6950          LGF   1,4(0,1)    ; state
00004272 E320 C0AC 0014          000042D4   6951          LGF   2,@lit_1893_153
00004278 41F2 F000               00000000   6952          LA    15,0(2,15)
0000427C EB11 0003 000D          00000003   6953          SLLG  1,1,3(0)    ; *0x8
00004282 E3F1 F678 0004          00000678   6954          LG    15,1656(1,15)
                                            6955 * ***   }
                                            6956 * * **** Start of Epilogue
                                            6957          DCCEPIL
00004288                                    6958+         ds 0h                                                          01-DCCEP
                                            6959+* Epilog
00004288 D707 D088 D088 00000088 00000088   6960+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000428E E3D0 D080 0004          00000080   6961+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004294 E3C0 D090 0004          00000090   6962+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000429A E3B0 C018 0004          00000018   6963+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000042A0 E3C0 B010 0021          00000010   6964+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000042A6 E3E0 D008 0004          00000008   6965+         lg  14,8(0,13)          load up return address                 01-DCCEP
000042AC EB1C D020 0004          00000020   6966+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000042B2 078E                               6967+         bcr 8,14                if same dsab, just return              01-DCCEP
000042B4 E3F0 D010 0024          00000010   6968+         stg 15,16(0,13)         save return code                       01-DCCEP
000042BA E300 D018 0024          00000018   6969+         stg 0,24(0,13)          save more return code                  01-DCCEP
000042C0 E3F0 D090 0004          00000090   6970+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000042C6 E3F0 F018 0004          00000018   6971+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000042CC 47F0 F040               00000040   6972+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6973+* End of Epilog
                                            6974 * * **** End of Epilogue
000042D0                                    6975          DS    0D
000042D0 000000A8                           6976 @FRAMESIZE_1893 DC F'168'
000042D4 00000000                           6977 @lit_1893_153 DC Q(@@STATIC)
                                            6978          DROP  12
                                            6979 *
                                                                                                                           Page  145 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6980 *   DSECT for automatic variables in "rd_kafka_txn_state2str"
                                            6981 *      (FUNCTION #1893)
                                            6982 *
00000000                00000000 000000A8   6983 @AUTO#rd_kafka_txn_state2str DSECT
00000000                                    6984          DS    XL168
                                            6985 *
000042D8                00000000 00014658   6986 @CODE    CSECT
                                            6987 *
                                            6988 *
                                            6989 *
                                            6990 * ....... start of rd_kafka_idemp_get_pid0
000042D8                                    6991 @LNAME1929 DS  0H
000042D8 00000017                           6992          DC    X'00000017'
000042DC 99846D9281869281                   6993          DC    C'rd_kafka_idemp_get_pid0'
000042F3 00                                 6994          DC    X'00'
                                            6995 rd_kafka_idemp_get_pid0 DCCPRLG CINDEX=1929,BASER=12,FRAME=192,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1929
                                            6996          macro
                                            6997          dccextrn &m
                                            6998          gblc    &$dccext(1000)
                                            6999          gbla    &$dccexti
                                            7000          lcla    &i
                                            7001 &$dccext(&$dccexti+1) setc    '&m'
                                            7002 &i       seta    1
                                            7003 .loop    aif    (&i gt &$dccexti).around
                                            7004          aif    ('&$dccext(&i)' eq '&m').getout
                                            7005 &i       seta    &i+1
                                            7006          ago     .loop
                                            7007 .around  anop
                                            7008 &$dccexti seta &$dccexti+1
                                            7009          extrn  &m
                                            7010 .getout  anop
                                            7011          mend
000042F8                                    7012+$eye0170    ds    0d                                                    02-DCCCA
000042F8 C4C3C3                             7013+         dc cl3'DCC'                                                    02-DCCCA
000042FB 01                                 7014+         dc xl1'01' format one                                          02-DCCCA
000042FC 00000000                           7015+         dc a(0)                                                        02-DCCCA
00004300 000000000000436A                   7016+         dc ad(@PER_1929)                                               02-DCCCA
00004308 00000000000000C0                   7017+         dc ad(192)                                                     02-DCCCA
00004310 0000000000000000                   7018+         dc ad(0)                                                       02-DCCCA
00004318 0000000000001000                   7019+         dc ad(4096)                                                    02-DCCCA
00004320 20                                 7020+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004321 03                                 7021+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004322 03                                 7022+         dc al1(3)                                                      02-DCCCA
00004323 08                                 7023+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004324 00                                 7024+         dc bl.8'00000000'                                              02-DCCCA
00004325 000000                             7025+         dc al3(0)                                                      02-DCCCA
00004328 00000000000042D8                   7026+         dc ad(@LNAME1929)                                              02-DCCCA
00004330                                    7027+         ds 0d                                                          02-DCCCA
00004330 00000000000042F8                   7028+         dc ad($eye0170)                                                02-DCCCA
00004338 0000000000000000                   7029+         dc ad(0)                                                       02-DCCCA
00004340                                    7030+         ds    0d                                                       01-DCCPR
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004340                                    7031+rd_kafka_idemp_get_pid0 ds 0d                                           01-DCCPR
00004340                                    7032+@REGION_1929_1 ds 0h                                                    01-DCCPR
00004340 EBEC D008 0024          00000008   7033+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004346 E3E0 D088 0004          00000088   7034+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000434C E3C0 D090 0004          00000090   7035+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004352 B904 002E                          7036+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004356 E3B0 C018 0004          00000018   7037+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000435C A7EB 00C0               000000C0   7038+         aghi  14,192              increase by frame size               01-DCCPR
00004360 E3E0 C020 0021          00000020   7039+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004366 4720 B020               00000020   7040+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000436A                                    7041+@PER_1929 ds   0h                                                       01-DCCPR
0000436A EBDE 2080 0024          00000080   7042+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004370 E3C0 2090 0024          00000090   7043+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004376 B904 00D2                          7044+         lgr   13,2                set real frame pointer               01-DCCPR
0000437A B904 00CF                          7045+         lgr   12,15               set base reg                         01-DCCPR
                        00004340            7046+         using @REGION_1929_1,12                                        01-DCCPR
0000437E B904 0031                          7047          LGR   3,1         ; ptr to parm area
                                            7048 * ******* End of Prologue
                                            7049 * *
00004382 E340 3000 0004          00000000   7050          LG    4,0(0,3)
00004388 E320 3008 0004          00000008   7051          LG    2,8(0,3)    ; rk
                                            7052 * ***           rd_kafka_pid_t pid;
                                            7053 * ***
                                            7054 * ***           if (do_lock)
0000438E 9500 3017      00000017 00000000   7055          CLI   23(3),0
00004392 4780 C06C               000043AC   7056          BE    @L671
                                            7057 * ***                   rwlock_rdlock(&(rk)->rk_lock);
00004396 41F0 29A0               000009A0   7058          LA    15,2464(0,2)
0000439A E3F0 D0B8 0024          000000B8   7059          STG   15,184(0,13)
000043A0 4110 D0B8               000000B8   7060          LA    1,184(0,13)
000043A4 E3F0 C088 0004          000043C8   7061          LG    15,@lit_1929_155 ; rwlock_rdlock
000043AA                                    7062 @@gen_label239 DS    0H
000043AA 05EF                               7063          BALR  14,15
000043AC                                    7064 @@gen_label240 DS    0H
000043AC                                    7065 @L671    DS    0H
                                            7066 * ***           if (((rk->rk_eos.idemp_state == RD_KAFKA_IDEMP_STATE_A\
                                            7067 * SSIGNED)))
000043AC E55C 2C70 0006          00000C70   7068          CHSI  3184(2),6
000043B2 4770 C0A0               000043E0   7069          BNE   @L672
                                            7070 * ***                   pid = rk->rk_eos.pid;
000043B6 D20F D0A8 2C80 000000A8 00000C80   7071          MVC   168(16,13),3200(2)
000043BC 47F0 C0B6               000043F6   7072          B     @L673
000043C0                                    7073          DS    0D
000043C0 000000C0                           7074 @FRAMESIZE_1929 DC F'192'
000043C4 00000000
000043C8 0000000000000000                   7075 @lit_1929_155 DC AD(rwlock_rdlock)
000043D0 0000000000001B28                   7076 @lit_1929_156 DC AD(rd_kafka_pid_reset)
000043D8 0000000000000000                   7077 @lit_1929_157 DC AD(rwlock_rdunlock)
                                            7078 * ***           else
000043E0                                    7079 @L672    DS    0H
                                            7080 * ***                   rd_kafka_pid_reset(&pid);
000043E0 41F0 D0A8               000000A8   7081          LA    15,168(0,13)
                                                                                                                           Page  147 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000043E4 E3F0 D0B8 0024          000000B8   7082          STG   15,184(0,13)
000043EA 4110 D0B8               000000B8   7083          LA    1,184(0,13)
000043EE E3F0 C090 0004          000043D0   7084          LG    15,@lit_1929_156 ; rd_kafka_pid_reset
000043F4                                    7085 @@gen_label242 DS    0H
000043F4 05EF                               7086          BALR  14,15
000043F6                                    7087 @@gen_label243 DS    0H
000043F6                                    7088 @L673    DS    0H
                                            7089 * ***           if (do_lock)
000043F6 9500 3017      00000017 00000000   7090          CLI   23(3),0
000043FA 4780 C0D4               00004414   7091          BE    @L674
                                            7092 * ***                   rwlock_rdunlock(&(rk)->rk_lock);
000043FE 41F0 29A0               000009A0   7093          LA    15,2464(0,2)
00004402 E3F0 D0B8 0024          000000B8   7094          STG   15,184(0,13)
00004408 4110 D0B8               000000B8   7095          LA    1,184(0,13)
0000440C E3F0 C098 0004          000043D8   7096          LG    15,@lit_1929_157 ; rwlock_rdunlock
00004412                                    7097 @@gen_label245 DS    0H
00004412 05EF                               7098          BALR  14,15
00004414                                    7099 @@gen_label246 DS    0H
00004414                                    7100 @L674    DS    0H
                                            7101 * ***
                                            7102 * ***           return pid;
00004414 D20F 4000 D0A8 00000000 000000A8   7103          MVC   0(16,4),168(13)
                                            7104 * ***   }
                                            7105 * * **** Start of Epilogue
                                            7106          DCCEPIL
0000441A                                    7107+         ds 0h                                                          01-DCCEP
                                            7108+* Epilog
0000441A D707 D088 D088 00000088 00000088   7109+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004420 E3D0 D080 0004          00000080   7110+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004426 E3C0 D090 0004          00000090   7111+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000442C E3B0 C018 0004          00000018   7112+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004432 E3C0 B010 0021          00000010   7113+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004438 E3E0 D008 0004          00000008   7114+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000443E EB1C D020 0004          00000020   7115+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004444 078E                               7116+         bcr 8,14                if same dsab, just return              01-DCCEP
00004446 E3F0 D010 0024          00000010   7117+         stg 15,16(0,13)         save return code                       01-DCCEP
0000444C E300 D018 0024          00000018   7118+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004452 E3F0 D090 0004          00000090   7119+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004458 E3F0 F018 0004          00000018   7120+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000445E 47F0 F040               00000040   7121+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7122+* End of Epilog
                                            7123 * * **** End of Epilogue
                                            7124          DROP  12
                                            7125 *
                                            7126 *   DSECT for automatic variables in "rd_kafka_idemp_get_pid0"
                                            7127 *      (FUNCTION #1929)
                                            7128 *
00000000                00000000 000000B8   7129 @AUTO#rd_kafka_idemp_get_pid0 DSECT
00000000                                    7130          DS    XL168
000000A8                                    7131 rd_kafka_idemp_get_pid0#pid#0 DS 16XL1 ; pid
                                            7132 *
00004462                00000000 00014658   7133 @CODE    CSECT
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7134 *
                                            7135 *
                                            7136 *
                                            7137 * ....... start of rd_kafka_txn_normalize_err
00004462                                    7138 @LNAME1998 DS  0H
00004462 0000001A                           7139          DC    X'0000001A'
00004466 99846D9281869281                   7140          DC    C'rd_kafka_txn_normalize_err'
00004480 00                                 7141          DC    X'00'
                                            7142 rd_kafka_txn_normalize_err DCCPRLG CINDEX=1998,BASER=12,FRAME=168,SAVEA*
                                                                REA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1998
                                            7143          macro
                                            7144          dccextrn &m
                                            7145          gblc    &$dccext(1000)
                                            7146          gbla    &$dccexti
                                            7147          lcla    &i
                                            7148 &$dccext(&$dccexti+1) setc    '&m'
                                            7149 &i       seta    1
                                            7150 .loop    aif    (&i gt &$dccexti).around
                                            7151          aif    ('&$dccext(&i)' eq '&m').getout
                                            7152 &i       seta    &i+1
                                            7153          ago     .loop
                                            7154 .around  anop
                                            7155 &$dccexti seta &$dccexti+1
                                            7156          extrn  &m
                                            7157 .getout  anop
                                            7158          mend
00004488                                    7159+$eye0173    ds    0d                                                    02-DCCCA
00004488 C4C3C3                             7160+         dc cl3'DCC'                                                    02-DCCCA
0000448B 01                                 7161+         dc xl1'01' format one                                          02-DCCCA
0000448C 00000000                           7162+         dc a(0)                                                        02-DCCCA
00004490 0000000000000000                   7163+         dc ad(0)                                                       02-DCCCA
00004498 00000000000000A8                   7164+         dc ad(168)                                                     02-DCCCA
000044A0 0000000000000000                   7165+         dc ad(0)                                                       02-DCCCA
000044A8 0000000000001000                   7166+         dc ad(4096)                                                    02-DCCCA
000044B0 20                                 7167+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000044B1 03                                 7168+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000044B2 03                                 7169+         dc al1(3)                                                      02-DCCCA
000044B3 08                                 7170+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000044B4 00                                 7171+         dc bl.8'00000000'                                              02-DCCCA
000044B5 000000                             7172+         dc al3(0)                                                      02-DCCCA
000044B8 0000000000004462                   7173+         dc ad(@LNAME1998)                                              02-DCCCA
000044C0                                    7174+         ds 0d                                                          02-DCCCA
000044C0 0000000000004488                   7175+         dc ad($eye0173)                                                02-DCCCA
000044C8 0000000000000000                   7176+         dc ad(0)                                                       02-DCCCA
000044D0                                    7177+         ds    0d                                                       01-DCCPR
000044D0                                    7178+rd_kafka_txn_normalize_err ds 0d                                        01-DCCPR
000044D0                                    7179+@REGION_1998_1 ds 0h                                                    01-DCCPR
000044D0 EBEC D008 0024          00000008   7180+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000044D6 B904 00CF                          7181+         lgr   12,15               set base reg                         01-DCCPR
                        000044D0            7182+         using @REGION_1998_1,12                                        01-DCCPR
                                            7183 * ******* End of Prologue
                                            7184 * *
                                                                                                                           Page  149 
  Active Usings: @REGION_1998_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7185 * ***
                                            7186 * ***           switch (err)
000044DA 47F0 C020               000044F0   7187          B     @L675
                                            7188 * ***           {
                                            7189 * ***           case RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH:
                                            7190 * ***           case RD_KAFKA_RESP_ERR_PRODUCER_FENCED:
000044DE                                    7191 @L678    DS    0H
                                            7192 * ***                   return RD_KAFKA_RESP_ERR__FENCED;
000044DE A7F9 FF70               0000FF70   7193          LGHI  15,-144     ; -144
000044E2 47F0 C040               00004510   7194          B     @ret_lab_1998
                                            7195 * ***           default:
                                            7196 * ***                   return err;
000044E6                                    7197 @L679    DS    0H
000044E6 E3F0 1004 0014          00000004   7198          LGF   15,4(0,1)   ; err
000044EC 47F0 C040               00004510   7199          B     @ret_lab_1998
                                            7200 * ***           }
000044F0                                    7201 @L675    DS    0H
000044F0 58F0 1004               00000004   7202          L     15,4(0,1)   ; err
000044F4 A7FE 002F               0000002F   7203          CHI   15,47
000044F8 4740 C016               000044E6   7204          BL    @L679
000044FC A7FE 002F               0000002F   7205          CHI   15,47
00004500 4780 C00E               000044DE   7206          BE    @L678
00004504 A7FE 005A               0000005A   7207          CHI   15,90
00004508 4780 C00E               000044DE   7208          BE    @L678
0000450C 47F0 C016               000044E6   7209          B     @L679
                                            7210 * ***   }
00004510                                    7211 @ret_lab_1998 DS 0H
                                            7212 * * **** Start of Epilogue
                                            7213          DCCEPIL
00004510                                    7214+         ds 0h                                                          01-DCCEP
                                            7215+* Epilog
                                            7216+* Epilog
00004510 E3E0 D008 0004          00000008   7217+         lg    14,8(,13) restore the reg                                01-DCCEP
00004516 EB1C D020 0004          00000020   7218+         lmg   1,12,32(13)                                              01-DCCEP
0000451C 07FE                               7219+         br   14                                                        01-DCCEP
                                            7220+* End of Epilog
                                            7221 * * **** End of Epilogue
                                            7222          DROP  12
                                            7223 *
                                            7224 *   DSECT for automatic variables in "rd_kafka_txn_normalize_err"
                                            7225 *      (FUNCTION #1998)
                                            7226 *
00000000                00000000 000000A8   7227 @AUTO#rd_kafka_txn_normalize_err DSECT
00000000                                    7228          DS    XL168
                                            7229 *
0000451E                00000000 00014658   7230 @CODE    CSECT
                                            7231 *
                                            7232 *
                                            7233 *
                                            7234 * ....... start of rd_kafka_ensure_transactional
0000451E                                    7235 @LNAME1999 DS  0H
0000451E 0000001D                           7236          DC    X'0000001D'
                                                                                                                           Page  150 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004522 99846D9281869281                   7237          DC    C'rd_kafka_ensure_transactional'
0000453F 00                                 7238          DC    X'00'
                                            7239 rd_kafka_ensure_transactional DCCPRLG CINDEX=1999,BASER=12,FRAME=184,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1999
                                            7240          macro
                                            7241          dccextrn &m
                                            7242          gblc    &$dccext(1000)
                                            7243          gbla    &$dccexti
                                            7244          lcla    &i
                                            7245 &$dccext(&$dccexti+1) setc    '&m'
                                            7246 &i       seta    1
                                            7247 .loop    aif    (&i gt &$dccexti).around
                                            7248          aif    ('&$dccext(&i)' eq '&m').getout
                                            7249 &i       seta    &i+1
                                            7250          ago     .loop
                                            7251 .around  anop
                                            7252 &$dccexti seta &$dccexti+1
                                            7253          extrn  &m
                                            7254 .getout  anop
                                            7255          mend
00004540                                    7256+$eye0176    ds    0d                                                    02-DCCCA
00004540 C4C3C3                             7257+         dc cl3'DCC'                                                    02-DCCCA
00004543 01                                 7258+         dc xl1'01' format one                                          02-DCCCA
00004544 00000000                           7259+         dc a(0)                                                        02-DCCCA
00004548 00000000000045B2                   7260+         dc ad(@PER_1999)                                               02-DCCCA
00004550 00000000000000B8                   7261+         dc ad(184)                                                     02-DCCCA
00004558 0000000000000000                   7262+         dc ad(0)                                                       02-DCCCA
00004560 0000000000001000                   7263+         dc ad(4096)                                                    02-DCCCA
00004568 20                                 7264+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004569 03                                 7265+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000456A 03                                 7266+         dc al1(3)                                                      02-DCCCA
0000456B 08                                 7267+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000456C 00                                 7268+         dc bl.8'00000000'                                              02-DCCCA
0000456D 000000                             7269+         dc al3(0)                                                      02-DCCCA
00004570 000000000000451E                   7270+         dc ad(@LNAME1999)                                              02-DCCCA
00004578                                    7271+         ds 0d                                                          02-DCCCA
00004578 0000000000004540                   7272+         dc ad($eye0176)                                                02-DCCCA
00004580 0000000000000000                   7273+         dc ad(0)                                                       02-DCCCA
00004588                                    7274+         ds    0d                                                       01-DCCPR
00004588                                    7275+rd_kafka_ensure_transactional ds 0d                                     01-DCCPR
00004588                                    7276+@REGION_1999_1 ds 0h                                                    01-DCCPR
00004588 EBEC D008 0024          00000008   7277+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000458E E3E0 D088 0004          00000088   7278+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004594 E3C0 D090 0004          00000090   7279+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000459A B904 002E                          7280+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000459E E3B0 C018 0004          00000018   7281+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000045A4 A7EB 00B8               000000B8   7282+         aghi  14,184              increase by frame size               01-DCCPR
000045A8 E3E0 C020 0021          00000020   7283+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000045AE 4720 B020               00000020   7284+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000045B2                                    7285+@PER_1999 ds   0h                                                       01-DCCPR
000045B2 EBDE 2080 0024          00000080   7286+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000045B8 E3C0 2090 0024          00000090   7287+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  151 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000045BE B904 00D2                          7288+         lgr   13,2                set real frame pointer               01-DCCPR
000045C2 B904 00CF                          7289+         lgr   12,15               set base reg                         01-DCCPR
                        00004588            7290+         using @REGION_1999_1,12                                        01-DCCPR
                                            7291 * ******* End of Prologue
                                            7292 * *
                                            7293 * ***           if (((rk->rk_type != RD_KAFKA_PRODUCER)))
000045C6 E3F0 1000 0004          00000000   7294          LG    15,0(0,1)   ; rk
000045CC E55C F9D8 0000          000009D8   7295          CHSI  2520(15),0
000045D2 4780 C090               00004618   7296          BE    @L680
                                            7297 * ***                   return rd_kafka_error_new(
                                            7298 * ***                           RD_KAFKA_RESP_ERR__INVALID_ARG,
                                            7299 * ***                           "The Transactional API can only be use\
                                            7300 * d "
000045D6 E548 D0A8 FF46          000000A8   7301          MVGHI 168(13),-186
                                            7302 * ***                           "on producer instances");
000045DC E3F0 C088 0004          00004610   7303          LG    15,@lit_1999_160
000045E2 41F0 F0A2               000000A2   7304          LA    15,162(0,15)
000045E6 E3F0 D0B0 0024          000000B0   7305          STG   15,176(0,13)
000045EC 4110 D0A8               000000A8   7306          LA    1,168(0,13)
000045F0 E3F0 C080 0004          00004608   7307          LG    15,@lit_1999_161 ; rd_kafka_error_new
000045F6                                    7308 @@gen_label248 DS    0H
000045F6 05EF                               7309          BALR  14,15
000045F8                                    7310 @@gen_label249 DS    0H
000045F8 47F0 C0C4               0000464C   7311          B     @ret_lab_1999
00004600                                    7312          DS    0D
00004600 000000B8                           7313 @FRAMESIZE_1999 DC F'184'
00004604 00000000
00004608 0000000000000000                   7314 @lit_1999_161 DC AD(rd_kafka_error_new)
00004610 0000000000014A98                   7315 @lit_1999_160 DC AD(@strings@)
00004618                                    7316 @L680    DS    0H
                                            7317 * ***
                                            7318 * ***           if (((!rk->rk_conf.eos.transactional_id)))
00004618 E3F0 F7E8 0002          000007E8   7319          LTG   15,2024(0,15) ; offset of transactional_id in 0000105
0000461E 4770 C0C0               00004648   7320          BNZ   @L681
                                            7321 * ***                   return rd_kafka_error_new(
                                            7322 * ***                           RD_KAFKA_RESP_ERR__NOT_CONFIGURED,
                                            7323 * ***                           "The Transactional API requires "
00004622 E548 D0A8 FF6F          000000A8   7324          MVGHI 168(13),-145
                                            7325 * ***                           "transactional.id to be configured");
00004628 E3F0 C088 0004          00004610   7326          LG    15,@lit_1999_160
0000462E 41F0 F0E0               000000E0   7327          LA    15,224(0,15)
00004632 E3F0 D0B0 0024          000000B0   7328          STG   15,176(0,13)
00004638 4110 D0A8               000000A8   7329          LA    1,168(0,13)
0000463C E3F0 C080 0004          00004608   7330          LG    15,@lit_1999_161 ; rd_kafka_error_new
00004642                                    7331 @@gen_label251 DS    0H
00004642 05EF                               7332          BALR  14,15
00004644                                    7333 @@gen_label252 DS    0H
00004644 47F0 C0C4               0000464C   7334          B     @ret_lab_1999
00004648                                    7335 @L681    DS    0H
                                            7336 * ***
                                            7337 * ***           return ((void *)0);
00004648 A7F9 0000               00000000   7338          LGHI  15,0        ; 0
                                                                                                                           Page  152 
  Active Usings: @REGION_1999_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7339 * ***   }
0000464C                                    7340 @ret_lab_1999 DS 0H
                                            7341 * * **** Start of Epilogue
                                            7342          DCCEPIL
0000464C                                    7343+         ds 0h                                                          01-DCCEP
                                            7344+* Epilog
0000464C D707 D088 D088 00000088 00000088   7345+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004652 E3D0 D080 0004          00000080   7346+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004658 E3C0 D090 0004          00000090   7347+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000465E E3B0 C018 0004          00000018   7348+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004664 E3C0 B010 0021          00000010   7349+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000466A E3E0 D008 0004          00000008   7350+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004670 EB1C D020 0004          00000020   7351+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004676 078E                               7352+         bcr 8,14                if same dsab, just return              01-DCCEP
00004678 E3F0 D010 0024          00000010   7353+         stg 15,16(0,13)         save return code                       01-DCCEP
0000467E E300 D018 0024          00000018   7354+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004684 E3F0 D090 0004          00000090   7355+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000468A E3F0 F018 0004          00000018   7356+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004690 47F0 F040               00000040   7357+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7358+* End of Epilog
                                            7359 * * **** End of Epilogue
                                            7360          DROP  12
                                            7361 *
                                            7362 *   DSECT for automatic variables in "rd_kafka_ensure_transactional"
                                            7363 *      (FUNCTION #1999)
                                            7364 *
00000000                00000000 000000A8   7365 @AUTO#rd_kafka_ensure_transactional DSECT
00000000                                    7366          DS    XL168
                                            7367 *
00004694                00000000 00014658   7368 @CODE    CSECT
                                            7369 *
                                            7370 *
                                            7371 *
                                            7372 * ....... start of rd_kafka_txn_require_states0
00004694                                    7373 @LNAME2000 DS  0H
00004694 0000001C                           7374          DC    X'0000001C'
00004698 99846D9281869281                   7375          DC    C'rd_kafka_txn_require_states0'
000046B4 00                                 7376          DC    X'00'
                                            7377 rd_kafka_txn_require_states0 DCCPRLG CINDEX=2000,BASER=12,FRAME=200,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2000
                                            7378          macro
                                            7379          dccextrn &m
                                            7380          gblc    &$dccext(1000)
                                            7381          gbla    &$dccexti
                                            7382          lcla    &i
                                            7383 &$dccext(&$dccexti+1) setc    '&m'
                                            7384 &i       seta    1
                                            7385 .loop    aif    (&i gt &$dccexti).around
                                            7386          aif    ('&$dccext(&i)' eq '&m').getout
                                            7387 &i       seta    &i+1
                                            7388          ago     .loop
                                            7389 .around  anop
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7390 &$dccexti seta &$dccexti+1
                                            7391          extrn  &m
                                            7392 .getout  anop
                                            7393          mend
000046B8                                    7394+$eye0179    ds    0d                                                    02-DCCCA
000046B8 C4C3C3                             7395+         dc cl3'DCC'                                                    02-DCCCA
000046BB 01                                 7396+         dc xl1'01' format one                                          02-DCCCA
000046BC 00000000                           7397+         dc a(0)                                                        02-DCCCA
000046C0 000000000000472A                   7398+         dc ad(@PER_2000)                                               02-DCCCA
000046C8 00000000000000C8                   7399+         dc ad(200)                                                     02-DCCCA
000046D0 0000000000000000                   7400+         dc ad(0)                                                       02-DCCCA
000046D8 0000000000001000                   7401+         dc ad(4096)                                                    02-DCCCA
000046E0 20                                 7402+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000046E1 03                                 7403+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000046E2 03                                 7404+         dc al1(3)                                                      02-DCCCA
000046E3 08                                 7405+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000046E4 00                                 7406+         dc bl.8'00000000'                                              02-DCCCA
000046E5 000000                             7407+         dc al3(0)                                                      02-DCCCA
000046E8 0000000000004694                   7408+         dc ad(@LNAME2000)                                              02-DCCCA
000046F0                                    7409+         ds 0d                                                          02-DCCCA
000046F0 00000000000046B8                   7410+         dc ad($eye0179)                                                02-DCCCA
000046F8 0000000000000000                   7411+         dc ad(0)                                                       02-DCCCA
00004700                                    7412+         ds    0d                                                       01-DCCPR
00004700                                    7413+rd_kafka_txn_require_states0 ds 0d                                      01-DCCPR
00004700                                    7414+@REGION_2000_1 ds 0h                                                    01-DCCPR
00004700 EBEC D008 0024          00000008   7415+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004706 E3E0 D088 0004          00000088   7416+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000470C E3C0 D090 0004          00000090   7417+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004712 B904 002E                          7418+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004716 E3B0 C018 0004          00000018   7419+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000471C A7EB 00C8               000000C8   7420+         aghi  14,200              increase by frame size               01-DCCPR
00004720 E3E0 C020 0021          00000020   7421+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004726 4720 B020               00000020   7422+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000472A                                    7423+@PER_2000 ds   0h                                                       01-DCCPR
0000472A EBDE 2080 0024          00000080   7424+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004730 E3C0 2090 0024          00000090   7425+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004736 B904 00D2                          7426+         lgr   13,2                set real frame pointer               01-DCCPR
0000473A B904 00CF                          7427+         lgr   12,15               set base reg                         01-DCCPR
                        00004700            7428+         using @REGION_2000_1,12                                        01-DCCPR
0000473E B904 0041                          7429          LGR   4,1         ; ptr to parm area
                                            7430 * ******* End of Prologue
                                            7431 * *
00004742 E330 4000 0004          00000000   7432          LG    3,0(0,4)    ; rk
                                            7433 * ***           rd_kafka_error_t *error;
                                            7434 * ***           size_t i;
                                            7435 * ***
                                            7436 * ***           if ((((error = rd_kafka_ensure_transactional(rk)) != (\
                                            7437 * (void *)0))))
00004748 E330 D0B0 0024          000000B0   7438          STG   3,176(0,13)
0000474E 4110 D0B0               000000B0   7439          LA    1,176(0,13)
00004752 E3F0 C078 0004          00004778   7440          LG    15,@lit_2000_166 ; rd_kafka_ensure_transactional
00004758                                    7441 @@gen_label253 DS    0H
                                                                                                                           Page  154 
  Active Usings: @REGION_2000_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004758 05EF                               7442          BALR  14,15
0000475A                                    7443 @@gen_label254 DS    0H
0000475A B902 002F                          7444          LTGR  2,15        ; error
0000475E 4780 C0A8               000047A8   7445          BE    @L682
                                            7446 * ***                   return error;
00004762 B904 00F2                          7447          LGR   15,2
00004766 47F0 C1D4               000048D4   7448          B     @ret_lab_2000
00004770                                    7449          DS    0D
00004770 000000C8                           7450 @FRAMESIZE_2000 DC F'200'
00004774 00000000
00004778 0000000000004588                   7451 @lit_2000_166 DC AD(rd_kafka_ensure_transactional)
00004780 0000000000000000                   7452 @lit_2000_170 DC AD(rd_kafka_error_new_fatal)
00004788 0000000000014A98                   7453 @lit_2000_169 DC AD(@strings@)
00004790 0000000000000000                   7454 @lit_2000_172 DC AD(rd_kafka_error_new)
00004798 0000000000000000                   7455 @lit_2000_173 DC AD(rd_kafka_error_set_txn_requires_abort)
000047A0 0000000000004228                   7456 @lit_2000_174 DC AD(rd_kafka_txn_state2str)
000047A8                                    7457 @L682    DS    0H
                                            7458 * ***
                                            7459 * ***           for (i = 0 ; (int)states[i] != -1 ; i++)
000047A8 A7F9 0000               00000000   7460          LGHI  15,0        ; 0
000047AC 47F0 C0D4               000047D4   7461          B     @L684
000047B0                                    7462 @L683    DS    0H
                                            7463 * ***                   if (rk->rk_eos.txn_state == states[i])
000047B0 5810 3D38               00000D38   7464          L     1,3384(0,3) ; offset of txn_state in 0000146
000047B4 E320 4008 0004          00000008   7465          LG    2,8(0,4)    ; states
000047BA EB5F 0002 000D          00000002   7466          SLLG  5,15,2(0)   ; *0x4
000047C0 5915 2000               00000000   7467          C     1,0(5,2)
000047C4 4770 C0D0               000047D0   7468          BNE   @L687
                                            7469 * ***                           return ((void *)0);
000047C8 A7F9 0000               00000000   7470          LGHI  15,0        ; 0
000047CC 47F0 C1D4               000048D4   7471          B     @ret_lab_2000
000047D0                                    7472 @L687    DS    0H
                                            7473 * ***
                                            7474 * ***
                                            7475 * ***
                                            7476 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_FATAL_E\
                                            7477 * RROR)
000047D0 A7FB 0001               00000001   7478          AGHI  15,1
000047D4                                    7479 @L684    DS    0H
000047D4 E310 4008 0004          00000008   7480          LG    1,8(0,4)    ; states
000047DA EB2F 0002 000D          00000002   7481          SLLG  2,15,2(0)   ; *0x4
000047E0 4112 1000               00000000   7482          LA    1,0(2,1)
000047E4 E55C 1000 FFFF          00000000   7483          CHSI  0(1),-1
000047EA 4770 C0B0               000047B0   7484          BNE   @L683
000047EE E55C 3D38 000B          00000D38   7485          CHSI  3384(3),11
000047F4 4770 C134               00004834   7486          BNE   @L688
                                            7487 * ***                   error = rd_kafka_error_new_fatal(rk->rk_eos.tx\
                                            7488 * n_err,
                                            7489 * ***                                                    "%s", rk->rk_\
                                            7490 * eos.txn_errstr);
000047F8 E3F0 3ED8 0014          00000ED8   7491          LGF   15,3800(0,3)
000047FE E3F0 D0B0 0024          000000B0   7492          STG   15,176(0,13)
                                                                                                                           Page  155 
  Active Usings: @REGION_2000_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004804 E3F0 C088 0004          00004788   7493          LG    15,@lit_2000_169
0000480A 41F0 F122               00000122   7494          LA    15,290(0,15)
0000480E E3F0 D0B8 0024          000000B8   7495          STG   15,184(0,13)
00004814 E3F0 3EE0 0004          00000EE0   7496          LG    15,3808(0,3)
0000481A E3F0 D0C0 0024          000000C0   7497          STG   15,192(0,13)
00004820 4110 D0B0               000000B0   7498          LA    1,176(0,13)
00004824 E3F0 C080 0004          00004780   7499          LG    15,@lit_2000_170 ; rd_kafka_error_new_fatal
0000482A                                    7500 @@gen_label259 DS    0H
0000482A 05EF                               7501          BALR  14,15
0000482C                                    7502 @@gen_label260 DS    0H
0000482C B904 002F                          7503          LGR   2,15        ; error
00004830 47F0 C1D0               000048D0   7504          B     @L689
                                            7505 * ***           else if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_AB\
                                            7506 * ORTABLE_ERROR) {
00004834                                    7507 @L688    DS    0H
00004834 E55C 3D38 000A          00000D38   7508          CHSI  3384(3),10
0000483A 4770 C18C               0000488C   7509          BNE   @L690
                                            7510 * ***                   error = rd_kafka_error_new(rk->rk_eos.txn_err,
                                            7511 * ***                                              "%s", rk->rk_eos.tx\
                                            7512 * n_errstr);
0000483E E3F0 3ED8 0014          00000ED8   7513          LGF   15,3800(0,3)
00004844 E3F0 D0B0 0024          000000B0   7514          STG   15,176(0,13)
0000484A E3F0 C088 0004          00004788   7515          LG    15,@lit_2000_169
00004850 41F0 F122               00000122   7516          LA    15,290(0,15)
00004854 E3F0 D0B8 0024          000000B8   7517          STG   15,184(0,13)
0000485A E3F0 3EE0 0004          00000EE0   7518          LG    15,3808(0,3)
00004860 E3F0 D0C0 0024          000000C0   7519          STG   15,192(0,13)
00004866 4110 D0B0               000000B0   7520          LA    1,176(0,13)
0000486A E3F0 C090 0004          00004790   7521          LG    15,@lit_2000_172 ; rd_kafka_error_new
00004870                                    7522 @@gen_label262 DS    0H
00004870 05EF                               7523          BALR  14,15
00004872                                    7524 @@gen_label263 DS    0H
00004872 B904 002F                          7525          LGR   2,15        ; error
                                            7526 * ***                   rd_kafka_error_set_txn_requires_abort(error);
00004876 E3F0 D0B0 0024          000000B0   7527          STG   15,176(0,13)
0000487C 4110 D0B0               000000B0   7528          LA    1,176(0,13)
00004880 E3F0 C098 0004          00004798   7529          LG    15,@lit_2000_173 ; rd_kafka_error_set_txn_requires_abort
00004886                                    7530 @@gen_label264 DS    0H
00004886 05EF                               7531          BALR  14,15
00004888                                    7532 @@gen_label265 DS    0H
                                            7533 * ***           } else
00004888 47F0 C1D0               000048D0   7534          B     @L689
0000488C                                    7535 @L690    DS    0H
                                            7536 * ***                   error = rd_kafka_error_new(
                                            7537 * ***                           RD_KAFKA_RESP_ERR__STATE,
                                            7538 * ***                           "Operation not valid in state %s",
                                            7539 * ***                           rd_kafka_txn_state2str(rk->rk_eos.txn_\
                                            7540 * state));
0000488C E3F0 3D38 0014          00000D38   7541          LGF   15,3384(0,3)
00004892 E3F0 D0B0 0024          000000B0   7542          STG   15,176(0,13)
00004898 4110 D0B0               000000B0   7543          LA    1,176(0,13)
0000489C E3F0 C0A0 0004          000047A0   7544          LG    15,@lit_2000_174 ; rd_kafka_txn_state2str
                                                                                                                           Page  156 
  Active Usings: @REGION_2000_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000048A2                                    7545 @@gen_label266 DS    0H
000048A2 05EF                               7546          BALR  14,15
000048A4                                    7547 @@gen_label267 DS    0H
000048A4 E548 D0B0 FF54          000000B0   7548          MVGHI 176(13),-172
000048AA E310 C088 0004          00004788   7549          LG    1,@lit_2000_169
000048B0 4110 1126               00000126   7550          LA    1,294(0,1)
000048B4 E310 D0B8 0024          000000B8   7551          STG   1,184(0,13)
000048BA E3F0 D0C0 0024          000000C0   7552          STG   15,192(0,13)
000048C0 4110 D0B0               000000B0   7553          LA    1,176(0,13)
000048C4 E3F0 C090 0004          00004790   7554          LG    15,@lit_2000_172 ; rd_kafka_error_new
000048CA                                    7555 @@gen_label268 DS    0H
000048CA 05EF                               7556          BALR  14,15
000048CC                                    7557 @@gen_label269 DS    0H
000048CC B904 002F                          7558          LGR   2,15        ; error
000048D0                                    7559 @L691    DS    0H
                                            7560 * ***
                                            7561 * ***
                                            7562 * ***           return error;
000048D0                                    7563 @L689    DS    0H
000048D0 B904 00F2                          7564          LGR   15,2
                                            7565 * ***   }
000048D4                                    7566 @ret_lab_2000 DS 0H
                                            7567 * * **** Start of Epilogue
                                            7568          DCCEPIL
000048D4                                    7569+         ds 0h                                                          01-DCCEP
                                            7570+* Epilog
000048D4 D707 D088 D088 00000088 00000088   7571+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000048DA E3D0 D080 0004          00000080   7572+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000048E0 E3C0 D090 0004          00000090   7573+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000048E6 E3B0 C018 0004          00000018   7574+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000048EC E3C0 B010 0021          00000010   7575+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000048F2 E3E0 D008 0004          00000008   7576+         lg  14,8(0,13)          load up return address                 01-DCCEP
000048F8 EB1C D020 0004          00000020   7577+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000048FE 078E                               7578+         bcr 8,14                if same dsab, just return              01-DCCEP
00004900 E3F0 D010 0024          00000010   7579+         stg 15,16(0,13)         save return code                       01-DCCEP
00004906 E300 D018 0024          00000018   7580+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000490C E3F0 D090 0004          00000090   7581+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004912 E3F0 F018 0004          00000018   7582+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004918 47F0 F040               00000040   7583+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7584+* End of Epilog
                                            7585 * * **** End of Epilogue
                                            7586          DROP  12
                                            7587 *
                                            7588 *   DSECT for automatic variables in "rd_kafka_txn_require_states0"
                                            7589 *      (FUNCTION #2000)
                                            7590 *
00000000                00000000 000000B0   7591 @AUTO#rd_kafka_txn_require_states0 DSECT
00000000                                    7592          DS    XL168
000000A8                                    7593 rd_kafka_txn_require_states0#i#0 DS 8XL1 ; i
                                            7594 *
0000491C                00000000 00014658   7595 @CODE    CSECT
                                            7596 *
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7597 *
                                            7598 *
                                            7599 * ....... start of rd_kafka_txn_state_transition_is_valid
0000491C                                    7600 @LNAME2001 DS  0H
0000491C 00000026                           7601          DC    X'00000026'
00004920 99846D9281869281                   7602          DC    C'rd_kafka_txn_state_transition_is'
00004940 6DA581938984                       7603          DC    C'_valid'
00004946 00                                 7604          DC    X'00'
                                            7605 rd_kafka_txn_state_transition_is_valid DCCPRLG CINDEX=2001,BASER=12,FRA*
                                                                ME=200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2001
                                            7606          macro
                                            7607          dccextrn &m
                                            7608          gblc    &$dccext(1000)
                                            7609          gbla    &$dccexti
                                            7610          lcla    &i
                                            7611 &$dccext(&$dccexti+1) setc    '&m'
                                            7612 &i       seta    1
                                            7613 .loop    aif    (&i gt &$dccexti).around
                                            7614          aif    ('&$dccext(&i)' eq '&m').getout
                                            7615 &i       seta    &i+1
                                            7616          ago     .loop
                                            7617 .around  anop
                                            7618 &$dccexti seta &$dccexti+1
                                            7619          extrn  &m
                                            7620 .getout  anop
                                            7621          mend
00004948                                    7622+$eye0182    ds    0d                                                    02-DCCCA
00004948 C4C3C3                             7623+         dc cl3'DCC'                                                    02-DCCCA
0000494B 01                                 7624+         dc xl1'01' format one                                          02-DCCCA
0000494C 00000000                           7625+         dc a(0)                                                        02-DCCCA
00004950 00000000000049BA                   7626+         dc ad(@PER_2001)                                               02-DCCCA
00004958 00000000000000C8                   7627+         dc ad(200)                                                     02-DCCCA
00004960 0000000000000000                   7628+         dc ad(0)                                                       02-DCCCA
00004968 0000000000001000                   7629+         dc ad(4096)                                                    02-DCCCA
00004970 20                                 7630+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004971 03                                 7631+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004972 03                                 7632+         dc al1(3)                                                      02-DCCCA
00004973 08                                 7633+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004974 00                                 7634+         dc bl.8'00000000'                                              02-DCCCA
00004975 000000                             7635+         dc al3(0)                                                      02-DCCCA
00004978 000000000000491C                   7636+         dc ad(@LNAME2001)                                              02-DCCCA
00004980                                    7637+         ds 0d                                                          02-DCCCA
00004980 0000000000004948                   7638+         dc ad($eye0182)                                                02-DCCCA
00004988 0000000000000000                   7639+         dc ad(0)                                                       02-DCCCA
00004990                                    7640+         ds    0d                                                       01-DCCPR
00004990                                    7641+rd_kafka_txn_state_transition_is_valid ds 0d                            01-DCCPR
00004990                                    7642+@REGION_2001_1 ds 0h                                                    01-DCCPR
00004990 EBEC D008 0024          00000008   7643+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004996 E3E0 D088 0004          00000088   7644+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000499C E3C0 D090 0004          00000090   7645+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000049A2 B904 002E                          7646+         lgr   2,14                copy addr of our savearea            01-DCCPR
000049A6 E3B0 C018 0004          00000018   7647+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000049AC A7EB 00C8               000000C8   7648+         aghi  14,200              increase by frame size               01-DCCPR
000049B0 E3E0 C020 0021          00000020   7649+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000049B6 4720 B020               00000020   7650+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000049BA                                    7651+@PER_2001 ds   0h                                                       01-DCCPR
000049BA EBDE 2080 0024          00000080   7652+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000049C0 E3C0 2090 0024          00000090   7653+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000049C6 B904 00D2                          7654+         lgr   13,2                set real frame pointer               01-DCCPR
000049CA B904 00CF                          7655+         lgr   12,15               set base reg                         01-DCCPR
                        00004990            7656+         using @REGION_2001_1,12                                        01-DCCPR
                                            7657          DCCPRV REG=3      ; Get PRV from DVT
000049CE E330 B008 0004          00000008   7658+         LG 3,8(0,11)                                                   01-DCCPR
000049D4 B904 0041                          7659          LGR   4,1         ; ptr to parm area
                                            7660 * ******* End of Prologue
                                            7661 * *
000049D8 5820 4004               00000004   7662          L     2,4(0,4)    ; curr
                                            7663 * ***
                                            7664 * ***           *ignore = 0;
000049DC E3F0 4010 0004          00000010   7665          LG    15,16(0,4)  ; ignore
000049E2 9200 F000      00000000 00000000   7666          MVI   0(15),0     ; ignore
                                            7667 * ***
                                            7668 * ***           switch (new_state)
000049E6 47F0 C31C               00004CAC   7669          B     @L692
000049F0                                    7670          DS    0D
000049F0 000000C8                           7671 @FRAMESIZE_2001 DC F'200'
000049F4 00000000
000049F8 00000000000000FF                   7672 @lit_2001_179 DC FD'255' 0x00000000000000ff
00004A00 0000000000000000                   7673 @lit_2001_202 DC AD(fprintf)
00004A08 0000000000014658                   7674 @lit_2001_201 DC AD(@DATA)
00004A10 0000000000014A98                   7675 @lit_2001_200 DC AD(@strings@)
00004A18 00000000                           7676 @lit_2001_199 DC Q(__stderrp)
00004A1C 00000000
00004A20 0000000000004228                   7677 @lit_2001_203 DC AD(rd_kafka_txn_state2str)
00004A28 0000000000000000                   7678 @lit_2001_209 DC AD(__assert)
                                            7679 * ***           {
                                            7680 * ***           case RD_KAFKA_TXN_STATE_INIT:
00004A30                                    7681 @L694    DS    0H
                                            7682 * ***
                                            7683 * ***
                                            7684 * ***                   return 0;
00004A30 A7F9 0000               00000000   7685          LGHI  15,0        ; 0
00004A34 47F0 C3A8               00004D38   7686          B     @ret_lab_2001
                                            7687 * ***
                                            7688 * ***           case RD_KAFKA_TXN_STATE_WAIT_PID:
00004A38                                    7689 @L695    DS    0H
                                            7690 * ***                   return curr == RD_KAFKA_TXN_STATE_INIT;
00004A38 10F2                               7691          LPR   15,2
00004A3A A7FA FFFF               0000FFFF   7692          AHI   15,-1
00004A3E 88F0 001F               0000001F   7693          SRL   15,31(0)
00004A42 E3F0 C068 0080          000049F8   7694          NG    15,@lit_2001_179
00004A48 47F0 C3A8               00004D38   7695          B     @ret_lab_2001
                                            7696 * ***
                                            7697 * ***           case RD_KAFKA_TXN_STATE_READY_NOT_ACKED:
                                                                                                                           Page  159 
  Active Usings: @REGION_2001_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004A4C                                    7698 @L696    DS    0H
                                            7699 * ***                   return curr == RD_KAFKA_TXN_STATE_WAIT_PID;
00004A4C C027 0000 0001                     7700          XILF  2,X'00000001'
00004A52 10F2                               7701          LPR   15,2
00004A54 A7FA FFFF               0000FFFF   7702          AHI   15,-1
00004A58 88F0 001F               0000001F   7703          SRL   15,31(0)
00004A5C E3F0 C068 0080          000049F8   7704          NG    15,@lit_2001_179
00004A62 47F0 C3A8               00004D38   7705          B     @ret_lab_2001
                                            7706 * ***
                                            7707 * ***           case RD_KAFKA_TXN_STATE_READY:
00004A66                                    7708 @L697    DS    0H
                                            7709 * ***                   return curr == RD_KAFKA_TXN_STATE_READY_NOT_AC\
                                            7710 * KED ||
00004A66 A72E 0002               00000002   7711          CHI   2,2
00004A6A 4780 C0EE               00004A7E   7712          BE    @L699
                                            7713 * ***                           curr == RD_KAFKA_TXN_STATE_COMMIT_NOT_\
                                            7714 * ACKED ||
00004A6E A72E 0007               00000007   7715          CHI   2,7
00004A72 4780 C0EE               00004A7E   7716          BE    @L699
00004A76                                    7717 @L698    DS    0H
                                            7718 * ***                           curr == RD_KAFKA_TXN_STATE_ABORT_NOT_A\
                                            7719 * CKED;
00004A76 A72E 0009               00000009   7720          CHI   2,9
00004A7A 4770 C0F6               00004A86   7721          BNE   @L701
00004A7E                                    7722 @L699    DS    0H
00004A7E A7F8 0001               00000001   7723          LHI   15,1        ; 1
00004A82 47F0 C0FA               00004A8A   7724          B     @L700
00004A86                                    7725 @L701    DS    0H
00004A86 A7F8 0000               00000000   7726          LHI   15,0        ; 0
00004A8A                                    7727 @L700    DS    0H
00004A8A E3F0 C068 0080          000049F8   7728          NG    15,@lit_2001_179
00004A90 47F0 C3A8               00004D38   7729          B     @ret_lab_2001
                                            7730 * ***
                                            7731 * ***           case RD_KAFKA_TXN_STATE_IN_TRANSACTION:
00004A94                                    7732 @L702    DS    0H
                                            7733 * ***                   return curr == RD_KAFKA_TXN_STATE_READY;
00004A94 C027 0000 0003                     7734          XILF  2,X'00000003'
00004A9A 10F2                               7735          LPR   15,2
00004A9C A7FA FFFF               0000FFFF   7736          AHI   15,-1
00004AA0 88F0 001F               0000001F   7737          SRL   15,31(0)
00004AA4 E3F0 C068 0080          000049F8   7738          NG    15,@lit_2001_179
00004AAA 47F0 C3A8               00004D38   7739          B     @ret_lab_2001
                                            7740 * ***
                                            7741 * ***           case RD_KAFKA_TXN_STATE_BEGIN_COMMIT:
00004AAE                                    7742 @L703    DS    0H
                                            7743 * ***                   return curr == RD_KAFKA_TXN_STATE_IN_TRANSACTI\
                                            7744 * ON;
00004AAE C027 0000 0004                     7745          XILF  2,X'00000004'
00004AB4 10F2                               7746          LPR   15,2
00004AB6 A7FA FFFF               0000FFFF   7747          AHI   15,-1
00004ABA 88F0 001F               0000001F   7748          SRL   15,31(0)
00004ABE E3F0 C068 0080          000049F8   7749          NG    15,@lit_2001_179
                                                                                                                           Page  160 
  Active Usings: @REGION_2001_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004AC4 47F0 C3A8               00004D38   7750          B     @ret_lab_2001
                                            7751 * ***
                                            7752 * ***           case RD_KAFKA_TXN_STATE_COMMITTING_TRANSACTION:
00004AC8                                    7753 @L704    DS    0H
                                            7754 * ***                   return curr == RD_KAFKA_TXN_STATE_BEGIN_COMMIT\
                                            7755 * ;
00004AC8 C027 0000 0005                     7756          XILF  2,X'00000005'
00004ACE 10F2                               7757          LPR   15,2
00004AD0 A7FA FFFF               0000FFFF   7758          AHI   15,-1
00004AD4 88F0 001F               0000001F   7759          SRL   15,31(0)
00004AD8 E3F0 C068 0080          000049F8   7760          NG    15,@lit_2001_179
00004ADE 47F0 C3A8               00004D38   7761          B     @ret_lab_2001
                                            7762 * ***
                                            7763 * ***           case RD_KAFKA_TXN_STATE_COMMIT_NOT_ACKED:
00004AE2                                    7764 @L705    DS    0H
                                            7765 * ***                   return curr == RD_KAFKA_TXN_STATE_BEGIN_COMMIT\
                                            7766 *  ||
00004AE2 A72E 0005               00000005   7767          CHI   2,5
00004AE6 4780 C162               00004AF2   7768          BE    @L706
                                            7769 * ***                           curr == RD_KAFKA_TXN_STATE_COMMITTING_\
                                            7770 * TRANSACTION;
00004AEA A72E 0006               00000006   7771          CHI   2,6
00004AEE 4770 C16A               00004AFA   7772          BNE   @L708
00004AF2                                    7773 @L706    DS    0H
00004AF2 A7F8 0001               00000001   7774          LHI   15,1        ; 1
00004AF6 47F0 C16E               00004AFE   7775          B     @L707
00004AFA                                    7776 @L708    DS    0H
00004AFA A7F8 0000               00000000   7777          LHI   15,0        ; 0
00004AFE                                    7778 @L707    DS    0H
00004AFE E3F0 C068 0080          000049F8   7779          NG    15,@lit_2001_179
00004B04 47F0 C3A8               00004D38   7780          B     @ret_lab_2001
                                            7781 * ***
                                            7782 * ***           case RD_KAFKA_TXN_STATE_ABORTING_TRANSACTION:
00004B08                                    7783 @L709    DS    0H
                                            7784 * ***                   return curr == RD_KAFKA_TXN_STATE_IN_TRANSACTI\
                                            7785 * ON ||
00004B08 A72E 0004               00000004   7786          CHI   2,4
00004B0C 4780 C188               00004B18   7787          BE    @L710
                                            7788 * ***                           curr == RD_KAFKA_TXN_STATE_ABORTABLE_E\
                                            7789 * RROR;
00004B10 A72E 000A               0000000A   7790          CHI   2,10
00004B14 4770 C190               00004B20   7791          BNE   @L712
00004B18                                    7792 @L710    DS    0H
00004B18 A7F8 0001               00000001   7793          LHI   15,1        ; 1
00004B1C 47F0 C194               00004B24   7794          B     @L711
00004B20                                    7795 @L712    DS    0H
00004B20 A7F8 0000               00000000   7796          LHI   15,0        ; 0
00004B24                                    7797 @L711    DS    0H
00004B24 E3F0 C068 0080          000049F8   7798          NG    15,@lit_2001_179
00004B2A 47F0 C3A8               00004D38   7799          B     @ret_lab_2001
                                            7800 * ***
                                            7801 * ***           case RD_KAFKA_TXN_STATE_ABORT_NOT_ACKED:
                                                                                                                           Page  161 
  Active Usings: @REGION_2001_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B2E                                    7802 @L713    DS    0H
                                            7803 * ***                   return curr == RD_KAFKA_TXN_STATE_ABORTING_TRA\
                                            7804 * NSACTION;
00004B2E C027 0000 0008                     7805          XILF  2,X'00000008'
00004B34 10F2                               7806          LPR   15,2
00004B36 A7FA FFFF               0000FFFF   7807          AHI   15,-1
00004B3A 88F0 001F               0000001F   7808          SRL   15,31(0)
00004B3E E3F0 C068 0080          000049F8   7809          NG    15,@lit_2001_179
00004B44 47F0 C3A8               00004D38   7810          B     @ret_lab_2001
                                            7811 * ***
                                            7812 * ***           case RD_KAFKA_TXN_STATE_ABORTABLE_ERROR:
00004B48                                    7813 @L714    DS    0H
                                            7814 * ***                   if (curr == RD_KAFKA_TXN_STATE_ABORTING_TRANSA\
                                            7815 * CTION ||
00004B48 A72E 0008               00000008   7816          CHI   2,8
00004B4C 4780 C1C8               00004B58   7817          BE    @L716
                                            7818 * ***                       curr == RD_KAFKA_TXN_STATE_FATAL_ERROR) {
00004B50 A72E 000B               0000000B   7819          CHI   2,11
00004B54 4770 C1DA               00004B6A   7820          BNE   @L715
00004B58                                    7821 @L716    DS    0H
                                            7822 * ***
                                            7823 * ***
                                            7824 * ***                           *ignore = 1;
00004B58 E3F0 4010 0004          00000010   7825          LG    15,16(0,4)  ; ignore
00004B5E 9201 F000      00000000 00000001   7826          MVI   0(15),1     ; ignore
                                            7827 * ***                           return 1;
00004B62 A7F9 0001               00000001   7828          LGHI  15,1        ; 1
00004B66 47F0 C3A8               00004D38   7829          B     @ret_lab_2001
                                            7830 * ***                   }
00004B6A                                    7831 @L715    DS    0H
                                            7832 * ***
                                            7833 * ***                   return curr == RD_KAFKA_TXN_STATE_IN_TRANSACTI\
                                            7834 * ON ||
00004B6A A72E 0004               00000004   7835          CHI   2,4
00004B6E 4780 C1F2               00004B82   7836          BE    @L718
                                            7837 * ***                           curr == RD_KAFKA_TXN_STATE_BEGIN_COMMI\
                                            7838 * T ||
00004B72 A72E 0005               00000005   7839          CHI   2,5
00004B76 4780 C1F2               00004B82   7840          BE    @L718
00004B7A                                    7841 @L717    DS    0H
                                            7842 * ***                           curr == RD_KAFKA_TXN_STATE_COMMITTING_\
                                            7843 * TRANSACTION;
00004B7A A72E 0006               00000006   7844          CHI   2,6
00004B7E 4770 C1FA               00004B8A   7845          BNE   @L720
00004B82                                    7846 @L718    DS    0H
00004B82 A7F8 0001               00000001   7847          LHI   15,1        ; 1
00004B86 47F0 C1FE               00004B8E   7848          B     @L719
00004B8A                                    7849 @L720    DS    0H
00004B8A A7F8 0000               00000000   7850          LHI   15,0        ; 0
00004B8E                                    7851 @L719    DS    0H
00004B8E E3F0 C068 0080          000049F8   7852          NG    15,@lit_2001_179
00004B94 47F0 C3A8               00004D38   7853          B     @ret_lab_2001
                                                                                                                           Page  162 
  Active Usings: @REGION_2001_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7854 * ***
                                            7855 * ***           case RD_KAFKA_TXN_STATE_FATAL_ERROR:
00004B98                                    7856 @L721    DS    0H
                                            7857 * ***
                                            7858 * ***                   return 1;
00004B98 A7F9 0001               00000001   7859          LGHI  15,1        ; 1
00004B9C 47F0 C3A8               00004D38   7860          B     @ret_lab_2001
                                            7861 * ***
                                            7862 * ***           default:
                                            7863 * ***                   do { fprintf(__stderrp, "INTERNAL ERROR: librd\
                                            7864 * kafka %s:%d: ", __FUNCTION__, 211); fprintf(__stderrp, "Invalid txn \
                                            7865 * state transition: %s -> %s", rd_kafka_txn_state2str(curr), rd_kafka_\
                                            7866 * txn_state2str(new_state)); fprintf(__stderrp, "\n"); ((!*"INTERNAL E\
                                            7867 * RROR IN LIBRDKAFKA") ? (void)0 : __assert(__func__, "C:\\asgkafka\\l\
                                            7868 * ibrdkafka\\src\\rdkafka_txnmgr.c", 211, "!*\"INTERNAL ERROR IN LIBRD\
                                            7869 * KAFKA\"")); } while (0);
00004BA0                                    7870 @L723    DS    0H
00004BA0 E350 C088 0016          00004A18   7871          LLGF  5,@lit_2001_199 ; __stderrp
00004BA6 E3F5 3000 0004          00000000   7872          LG    15,0(5,3)   ; __stderrp
00004BAC E3F0 D0A8 0024          000000A8   7873          STG   15,168(0,13)
00004BB2 E360 C080 0004          00004A10   7874          LG    6,@lit_2001_200
00004BB8 41F0 6146               00000146   7875          LA    15,326(0,6)
00004BBC E3F0 D0B0 0024          000000B0   7876          STG   15,176(0,13)
00004BC2 E370 C078 0004          00004A08   7877          LG    7,@lit_2001_201
00004BC8 41F0 71C2               000001C2   7878          LA    15,450(0,7)
00004BCC E3F0 D0B8 0024          000000B8   7879          STG   15,184(0,13)
00004BD2 E548 D0C0 00D3          000000C0   7880          MVGHI 192(13),211
00004BD8 4110 D0A8               000000A8   7881          LA    1,168(0,13)
00004BDC E380 C070 0004          00004A00   7882          LG    8,@lit_2001_202 ; fprintf
00004BE2 B904 00F8                          7883          LGR   15,8
00004BE6                                    7884 @@gen_label282 DS    0H
00004BE6 05EF                               7885          BALR  14,15
00004BE8                                    7886 @@gen_label283 DS    0H
00004BE8 B914 00F2                          7887          LGFR  15,2
00004BEC E3F0 D0A8 0024          000000A8   7888          STG   15,168(0,13)
00004BF2 4110 D0A8               000000A8   7889          LA    1,168(0,13)
00004BF6 E320 C090 0004          00004A20   7890          LG    2,@lit_2001_203 ; rd_kafka_txn_state2str
00004BFC B904 00F2                          7891          LGR   15,2
00004C00                                    7892 @@gen_label284 DS    0H
00004C00 05EF                               7893          BALR  14,15
00004C02                                    7894 @@gen_label285 DS    0H
00004C02 B904 009F                          7895          LGR   9,15
00004C06 E3F0 400C 0014          0000000C   7896          LGF   15,12(0,4)  ; new_state
00004C0C E3F0 D0A8 0024          000000A8   7897          STG   15,168(0,13)
00004C12 4110 D0A8               000000A8   7898          LA    1,168(0,13)
00004C16 B904 00F2                          7899          LGR   15,2
00004C1A                                    7900 @@gen_label286 DS    0H
00004C1A 05EF                               7901          BALR  14,15
00004C1C                                    7902 @@gen_label287 DS    0H
00004C1C E315 3000 0004          00000000   7903          LG    1,0(5,3)    ; __stderrp
00004C22 E310 D0A8 0024          000000A8   7904          STG   1,168(0,13)
00004C28 4110 616A               0000016A   7905          LA    1,362(0,6)
                                                                                                                           Page  163 
  Active Usings: @REGION_2001_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004C2C E310 D0B0 0024          000000B0   7906          STG   1,176(0,13)
00004C32 E390 D0B8 0024          000000B8   7907          STG   9,184(0,13)
00004C38 E3F0 D0C0 0024          000000C0   7908          STG   15,192(0,13)
00004C3E 4110 D0A8               000000A8   7909          LA    1,168(0,13)
00004C42 B904 00F8                          7910          LGR   15,8
00004C46                                    7911 @@gen_label288 DS    0H
00004C46 05EF                               7912          BALR  14,15
00004C48                                    7913 @@gen_label289 DS    0H
00004C48 E3F5 3000 0004          00000000   7914          LG    15,0(5,3)   ; __stderrp
00004C4E E3F0 D0A8 0024          000000A8   7915          STG   15,168(0,13)
00004C54 41F0 6192               00000192   7916          LA    15,402(0,6)
00004C58 E3F0 D0B0 0024          000000B0   7917          STG   15,176(0,13)
00004C5E 4110 D0A8               000000A8   7918          LA    1,168(0,13)
00004C62 B904 00F8                          7919          LGR   15,8
00004C66                                    7920 @@gen_label290 DS    0H
00004C66 05EF                               7921          BALR  14,15
00004C68                                    7922 @@gen_label291 DS    0H
00004C68 41F0 6194               00000194   7923          LA    15,404(0,6)
00004C6C 9500 F000      00000000 00000000   7924          CLI   0(15),0
00004C70 4780 C314               00004CA4   7925          BE    @L727
00004C74                                    7926 @L726    DS    0H
00004C74 41F0 71C2               000001C2   7927          LA    15,450(0,7)
00004C78 E3F0 D0A8 0024          000000A8   7928          STG   15,168(0,13)
00004C7E 41F0 61B2               000001B2   7929          LA    15,434(0,6)
00004C82 E3F0 D0B0 0024          000000B0   7930          STG   15,176(0,13)
00004C88 E548 D0B8 00D3          000000B8   7931          MVGHI 184(13),211
00004C8E 41F0 61DE               000001DE   7932          LA    15,478(0,6)
00004C92 E3F0 D0C0 0024          000000C0   7933          STG   15,192(0,13)
00004C98 4110 D0A8               000000A8   7934          LA    1,168(0,13)
00004C9C E3F0 C098 0004          00004A28   7935          LG    15,@lit_2001_209 ; __assert
00004CA2                                    7936 @@gen_label293 DS    0H
00004CA2 05EF                               7937          BALR  14,15
00004CA4                                    7938 @@gen_label294 DS    0H
00004CA4                                    7939 @L727    DS    0H
                                            7940 * ***
                                            7941 * ***
                                            7942 * ***                   return 0;
00004CA4 A7F9 0000               00000000   7943          LGHI  15,0        ; 0
00004CA8 47F0 C3A8               00004D38   7944          B     @ret_lab_2001
                                            7945 * ***           }
00004CAC                                    7946 @L692    DS    0H
00004CAC 58F0 400C               0000000C   7947          L     15,12(0,4)  ; new_state
00004CB0 C2FF 0000 000B                     7948          CLFI  15,X'0000000B'
00004CB6 4720 C210               00004BA0   7949          BH    @L723
00004CBA B914 00FF                          7950          LGFR  15,15
00004CBE 4110 C348               00004CD8   7951          LA    1,@@gen_label295
00004CC2 EBFF 0003 000D          00000003   7952          SLLG  15,15,3(0)
00004CC8 E3F1 F000 0004          00000000   7953          LG    15,0(1,15)
00004CCE 47FF C000               00000000   7954          B     0(15,12)
00004CD8                                    7955 @@gen_label295 DS    0D
00004CD8 00000000000000A0                   7956          DC AD(@L694-@REGION_2001_1)
00004CE0 00000000000000A8                   7957          DC AD(@L695-@REGION_2001_1)
                                                                                                                           Page  164 
  Active Usings: @REGION_2001_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004CE8 00000000000000BC                   7958          DC AD(@L696-@REGION_2001_1)
00004CF0 00000000000000D6                   7959          DC AD(@L697-@REGION_2001_1)
00004CF8 0000000000000104                   7960          DC AD(@L702-@REGION_2001_1)
00004D00 000000000000011E                   7961          DC AD(@L703-@REGION_2001_1)
00004D08 0000000000000138                   7962          DC AD(@L704-@REGION_2001_1)
00004D10 0000000000000152                   7963          DC AD(@L705-@REGION_2001_1)
00004D18 0000000000000178                   7964          DC AD(@L709-@REGION_2001_1)
00004D20 000000000000019E                   7965          DC AD(@L713-@REGION_2001_1)
00004D28 00000000000001B8                   7966          DC AD(@L714-@REGION_2001_1)
00004D30 0000000000000208                   7967          DC AD(@L721-@REGION_2001_1)
                                            7968 * ***   }
00004D38                                    7969 @ret_lab_2001 DS 0H
                                            7970 * * **** Start of Epilogue
                                            7971          DCCEPIL
00004D38                                    7972+         ds 0h                                                          01-DCCEP
                                            7973+* Epilog
00004D38 D707 D088 D088 00000088 00000088   7974+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D3E E3D0 D080 0004          00000080   7975+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D44 E3C0 D090 0004          00000090   7976+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004D4A E3B0 C018 0004          00000018   7977+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004D50 E3C0 B010 0021          00000010   7978+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004D56 E3E0 D008 0004          00000008   7979+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004D5C EB1C D020 0004          00000020   7980+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004D62 078E                               7981+         bcr 8,14                if same dsab, just return              01-DCCEP
00004D64 E3F0 D010 0024          00000010   7982+         stg 15,16(0,13)         save return code                       01-DCCEP
00004D6A E300 D018 0024          00000018   7983+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004D70 E3F0 D090 0004          00000090   7984+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004D76 E3F0 F018 0004          00000018   7985+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004D7C 47F0 F040               00000040   7986+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7987+* End of Epilog
                                            7988 * * **** End of Epilogue
                                            7989          DROP  12
                                            7990 *
                                            7991 *   DSECT for automatic variables in "rd_kafka_txn_state_transition_is
                                            7992 *           _valid"
                                            7993 *      (FUNCTION #2001)
                                            7994 *
00000000                00000000 000000A8   7995 @AUTO#rd_kafka_txn_state_transition_is_valid DSECT
00000000                                    7996          DS    XL168
                                            7997 *
00004D80                00000000 00014658   7998 @CODE    CSECT
                                            7999 *
                                            8000 *
                                            8001 *
                                            8002 * ....... start of rd_kafka_txn_set_state
00004D80                                    8003 @LNAME2002 DS  0H
00004D80 00000016                           8004          DC    X'00000016'
00004D84 99846D9281869281                   8005          DC    C'rd_kafka_txn_set_state'
00004D9A 00                                 8006          DC    X'00'
                                            8007 rd_kafka_txn_set_state DCCPRLG CINDEX=2002,BASER=12,FRAME=248,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME2002
                                            8008          macro
                                                                                                                           Page  165 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8009          dccextrn &m
                                            8010          gblc    &$dccext(1000)
                                            8011          gbla    &$dccexti
                                            8012          lcla    &i
                                            8013 &$dccext(&$dccexti+1) setc    '&m'
                                            8014 &i       seta    1
                                            8015 .loop    aif    (&i gt &$dccexti).around
                                            8016          aif    ('&$dccext(&i)' eq '&m').getout
                                            8017 &i       seta    &i+1
                                            8018          ago     .loop
                                            8019 .around  anop
                                            8020 &$dccexti seta &$dccexti+1
                                            8021          extrn  &m
                                            8022 .getout  anop
                                            8023          mend
00004DA0                                    8024+$eye0186    ds    0d                                                    02-DCCCA
00004DA0 C4C3C3                             8025+         dc cl3'DCC'                                                    02-DCCCA
00004DA3 01                                 8026+         dc xl1'01' format one                                          02-DCCCA
00004DA4 00000000                           8027+         dc a(0)                                                        02-DCCCA
00004DA8 0000000000004E12                   8028+         dc ad(@PER_2002)                                               02-DCCCA
00004DB0 00000000000000F8                   8029+         dc ad(248)                                                     02-DCCCA
00004DB8 0000000000000000                   8030+         dc ad(0)                                                       02-DCCCA
00004DC0 0000000000001000                   8031+         dc ad(4096)                                                    02-DCCCA
00004DC8 20                                 8032+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004DC9 03                                 8033+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004DCA 03                                 8034+         dc al1(3)                                                      02-DCCCA
00004DCB 08                                 8035+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004DCC 00                                 8036+         dc bl.8'00000000'                                              02-DCCCA
00004DCD 000000                             8037+         dc al3(0)                                                      02-DCCCA
00004DD0 0000000000004D80                   8038+         dc ad(@LNAME2002)                                              02-DCCCA
00004DD8                                    8039+         ds 0d                                                          02-DCCCA
00004DD8 0000000000004DA0                   8040+         dc ad($eye0186)                                                02-DCCCA
00004DE0 0000000000000000                   8041+         dc ad(0)                                                       02-DCCCA
00004DE8                                    8042+         ds    0d                                                       01-DCCPR
00004DE8                                    8043+rd_kafka_txn_set_state ds 0d                                            01-DCCPR
00004DE8                                    8044+@REGION_2002_1 ds 0h                                                    01-DCCPR
00004DE8 EBEC D008 0024          00000008   8045+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004DEE E3E0 D088 0004          00000088   8046+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004DF4 E3C0 D090 0004          00000090   8047+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004DFA B904 002E                          8048+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004DFE E3B0 C018 0004          00000018   8049+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004E04 A7EB 00F8               000000F8   8050+         aghi  14,248              increase by frame size               01-DCCPR
00004E08 E3E0 C020 0021          00000020   8051+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004E0E 4720 B020               00000020   8052+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004E12                                    8053+@PER_2002 ds   0h                                                       01-DCCPR
00004E12 EBDE 2080 0024          00000080   8054+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004E18 E3C0 2090 0024          00000090   8055+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004E1E B904 00D2                          8056+         lgr   13,2                set real frame pointer               01-DCCPR
00004E22 B904 00CF                          8057+         lgr   12,15               set base reg                         01-DCCPR
                        00004DE8            8058+         using @REGION_2002_1,12                                        01-DCCPR
                                            8059 * ******* End of Prologue
                                            8060 * *
                                                                                                                           Page  166 
  Active Usings: @REGION_2002_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004E26 E320 1000 0004          00000000   8061          LG    2,0(0,1)    ; rk
00004E2C 5830 100C               0000000C   8062          L     3,12(0,1)   ; new_state
                                            8063 * ***           rd_bool_t ignore;
                                            8064 * ***
                                            8065 * ***           if (rk->rk_eos.txn_state == new_state)
00004E30 5930 2D38               00000D38   8066          C     3,3384(0,2)
00004E34 4780 C27A               00005062   8067          BE    @ret_lab_2002
                                            8068 * ***                   return;
00004E38                                    8069 @L728    DS    0H
                                            8070 * ***
                                            8071 * ***
                                            8072 * ***           if (!rd_kafka_txn_state_transition_is_valid(rk->rk_eos\
                                            8073 * .txn_state,
                                            8074 * ***                                                       new_state,\
                                            8075 *  &ignore)) {
00004E38 E3F0 2D38 0014          00000D38   8076          LGF   15,3384(0,2)
00004E3E E3F0 D0B0 0024          000000B0   8077          STG   15,176(0,13)
00004E44 B914 00F3                          8078          LGFR  15,3
00004E48 E3F0 D0B8 0024          000000B8   8079          STG   15,184(0,13)
00004E4E 41F0 D0A8               000000A8   8080          LA    15,168(0,13)
00004E52 E3F0 D0C0 0024          000000C0   8081          STG   15,192(0,13)
00004E58 4110 D0B0               000000B0   8082          LA    1,176(0,13)
00004E5C E3F0 C160 0004          00004F48   8083          LG    15,@lit_2002_213 ; rd_kafka_txn_state_transition_is_vali*
                                                                d
00004E62                                    8084 @@gen_label297 DS    0H
00004E62 05EF                               8085          BALR  14,15
00004E64                                    8086 @@gen_label298 DS    0H
00004E64 C0FB 0000 00FF                     8087          NILF  15,X'000000FF'
00004E6A 12FF                               8088          LTR   15,15
00004E6C 4770 C14C               00004F34   8089          BNZ   @L729
                                            8090 * ***                   rd_kafka_log0(&rk->rk_conf, rk, ((void *)0), 2\
                                            8091 * , 0x0, "TXNSTATE", "BUG: Invalid transaction state transition " "att\
                                            8092 * empted: %s -> %s", rd_kafka_txn_state2str(rk->rk_eos.txn_state), rd_\
                                            8093 * kafka_txn_state2str(new_state));
00004E70 E3F0 2D38 0014          00000D38   8094          LGF   15,3384(0,2)
00004E76 E3F0 D0B0 0024          000000B0   8095          STG   15,176(0,13)
00004E7C 4110 D0B0               000000B0   8096          LA    1,176(0,13)
00004E80 E340 C168 0004          00004F50   8097          LG    4,@lit_2002_214 ; rd_kafka_txn_state2str
00004E86 B904 00F4                          8098          LGR   15,4
00004E8A                                    8099 @@gen_label300 DS    0H
00004E8A 05EF                               8100          BALR  14,15
00004E8C                                    8101 @@gen_label301 DS    0H
00004E8C B904 005F                          8102          LGR   5,15
00004E90 B914 00F3                          8103          LGFR  15,3
00004E94 E3F0 D0B0 0024          000000B0   8104          STG   15,176(0,13)
00004E9A 4110 D0B0               000000B0   8105          LA    1,176(0,13)
00004E9E B904 00F4                          8106          LGR   15,4
00004EA2                                    8107 @@gen_label302 DS    0H
00004EA2 05EF                               8108          BALR  14,15
00004EA4                                    8109 @@gen_label303 DS    0H
00004EA4 4110 2210               00000210   8110          LA    1,528(0,2)
00004EA8 EB12 D0B0 0024          000000B0   8111          STMG  1,2,176(13)
                                                                                                                           Page  167 
  Active Usings: @REGION_2002_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004EAE D707 D0C0 D0C0 000000C0 000000C0   8112          XC    192(8,13),192(13)
00004EB4 E548 D0C8 0002          000000C8   8113          MVGHI 200(13),2
00004EBA D707 D0D0 D0D0 000000D0 000000D0   8114          XC    208(8,13),208(13)
00004EC0 E340 C178 0004          00004F60   8115          LG    4,@lit_2002_216
00004EC6 4110 4200               00000200   8116          LA    1,512(0,4)
00004ECA E310 D0D8 0024          000000D8   8117          STG   1,216(0,13)
00004ED0 4110 420A               0000020A   8118          LA    1,522(0,4)
00004ED4 E310 D0E0 0024          000000E0   8119          STG   1,224(0,13)
00004EDA E350 D0E8 0024          000000E8   8120          STG   5,232(0,13)
00004EE0 E3F0 D0F0 0024          000000F0   8121          STG   15,240(0,13)
00004EE6 4110 D0B0               000000B0   8122          LA    1,176(0,13)
00004EEA E3F0 C170 0004          00004F58   8123          LG    15,@lit_2002_217 ; rd_kafka_log0
00004EF0                                    8124 @@gen_label304 DS    0H
00004EF0 05EF                               8125          BALR  14,15
00004EF2                                    8126 @@gen_label305 DS    0H
                                            8127 * ***
                                            8128 * ***
                                            8129 * ***
                                            8130 * ***
                                            8131 * ***
                                            8132 * ***                   ((!*"BUG: Invalid transaction state transition\
                                            8133 * ") ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rd\
                                            8134 * kafka_txnmgr.c", 244, "!*\"BUG: Invalid transaction state transition\
                                            8135 * \""));
00004EF2 41F0 4248               00000248   8136          LA    15,584(0,4)
00004EF6 9500 F000      00000000 00000000   8137          CLI   0(15),0
00004EFA 4780 C14C               00004F34   8138          BE    @L729
00004EFE                                    8139 @L730    DS    0H
00004EFE E3F0 C188 0004          00004F70   8140          LG    15,@lit_2002_218
00004F04 41F0 F1EA               000001EA   8141          LA    15,490(0,15)
00004F08 E3F0 D0B0 0024          000000B0   8142          STG   15,176(0,13)
00004F0E 41F0 41B2               000001B2   8143          LA    15,434(0,4)
00004F12 E3F0 D0B8 0024          000000B8   8144          STG   15,184(0,13)
00004F18 E548 D0C0 00F4          000000C0   8145          MVGHI 192(13),244
00004F1E 41F0 4272               00000272   8146          LA    15,626(0,4)
00004F22 E3F0 D0C8 0024          000000C8   8147          STG   15,200(0,13)
00004F28 4110 D0B0               000000B0   8148          LA    1,176(0,13)
00004F2C E3F0 C180 0004          00004F68   8149          LG    15,@lit_2002_219 ; __assert
00004F32                                    8150 @@gen_label307 DS    0H
00004F32 05EF                               8151          BALR  14,15
00004F34                                    8152 @@gen_label308 DS    0H
00004F34                                    8153 @L731    DS    0H
                                            8154 * ***           }
00004F34                                    8155 @L729    DS    0H
                                            8156 * ***
                                            8157 * ***           if (ignore) {
00004F34 9500 D0A8      000000A8 00000000   8158          CLI   168(13),0
00004F38 4780 C198               00004F80   8159          BE    @L733
                                            8160 * ***
                                            8161 * ***                   return;
00004F3C 47F0 C27A               00005062   8162          B     @ret_lab_2002
00004F40                                    8163          DS    0D
                                                                                                                           Page  168 
  Active Usings: @REGION_2002_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004F40 000000F8                           8164 @FRAMESIZE_2002 DC F'248'
00004F44 00000000
00004F48 0000000000004990                   8165 @lit_2002_213 DC AD(rd_kafka_txn_state_transition_is_valid)
00004F50 0000000000004228                   8166 @lit_2002_214 DC AD(rd_kafka_txn_state2str)
00004F58 0000000000000000                   8167 @lit_2002_217 DC AD(rd_kafka_log0)
00004F60 0000000000014A98                   8168 @lit_2002_216 DC AD(@strings@)
00004F68 0000000000000000                   8169 @lit_2002_219 DC AD(__assert)
00004F70 0000000000014658                   8170 @lit_2002_218 DC AD(@DATA)
00004F78 00000000000007C8                   8171 @lit_2002_225 DC AD(rd_atomic32_set)
                                            8172 * ***           }
                                            8173 * ***
                                            8174 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                            8175 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNSTATE","Transactio\
                                            8176 * n state change %s -> %s", rd_kafka_txn_state2str(rk->rk_eos.txn_stat\
                                            8177 * e), rd_kafka_txn_state2str(new_state)); } while (0);
00004F80                                    8178 @L733    DS    0H
00004F80 9180 2322      00000322 00000080   8179          TM    802(2),128
00004F84 4780 C228               00005010   8180          BZ    @L736
00004F88 E3F0 2D38 0014          00000D38   8181          LGF   15,3384(0,2)
00004F8E E3F0 D0B0 0024          000000B0   8182          STG   15,176(0,13)
00004F94 4110 D0B0               000000B0   8183          LA    1,176(0,13)
00004F98 E340 C168 0004          00004F50   8184          LG    4,@lit_2002_214 ; rd_kafka_txn_state2str
00004F9E B904 00F4                          8185          LGR   15,4
00004FA2                                    8186 @@gen_label311 DS    0H
00004FA2 05EF                               8187          BALR  14,15
00004FA4                                    8188 @@gen_label312 DS    0H
00004FA4 B904 005F                          8189          LGR   5,15
00004FA8 B914 00F3                          8190          LGFR  15,3
00004FAC E3F0 D0B0 0024          000000B0   8191          STG   15,176(0,13)
00004FB2 4110 D0B0               000000B0   8192          LA    1,176(0,13)
00004FB6 B904 00F4                          8193          LGR   15,4
00004FBA                                    8194 @@gen_label313 DS    0H
00004FBA 05EF                               8195          BALR  14,15
00004FBC                                    8196 @@gen_label314 DS    0H
00004FBC 4110 2210               00000210   8197          LA    1,528(0,2)
00004FC0 EB12 D0B0 0024          000000B0   8198          STMG  1,2,176(13)
00004FC6 D707 D0C0 D0C0 000000C0 000000C0   8199          XC    192(8,13),192(13)
00004FCC E548 D0C8 0007          000000C8   8200          MVGHI 200(13),7
00004FD2 C01F 0000 8000                     8201          LLILF 1,X'00008000' ; 32768
00004FD8 E310 D0D0 0024          000000D0   8202          STG   1,208(0,13)
00004FDE E310 C178 0004          00004F60   8203          LG    1,@lit_2002_216
00004FE4 4140 1200               00000200   8204          LA    4,512(0,1)
00004FE8 E340 D0D8 0024          000000D8   8205          STG   4,216(0,13)
00004FEE 4110 12A0               000002A0   8206          LA    1,672(0,1)
00004FF2 E310 D0E0 0024          000000E0   8207          STG   1,224(0,13)
00004FF8 E350 D0E8 0024          000000E8   8208          STG   5,232(0,13)
00004FFE E3F0 D0F0 0024          000000F0   8209          STG   15,240(0,13)
00005004 4110 D0B0               000000B0   8210          LA    1,176(0,13)
00005008 E3F0 C170 0004          00004F58   8211          LG    15,@lit_2002_217 ; rd_kafka_log0
0000500E                                    8212 @@gen_label315 DS    0H
0000500E 05EF                               8213          BALR  14,15
00005010                                    8214 @@gen_label316 DS    0H
                                                                                                                           Page  169 
  Active Usings: @REGION_2002_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005010                                    8215 @L736    DS    0H
                                            8216 * ***
                                            8217 * ***
                                            8218 * ***
                                            8219 * ***
                                            8220 * ***
                                            8221 * ***
                                            8222 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_IN_TRAN\
                                            8223 * SACTION)
00005010 E55C 2D38 0004          00000D38   8224          CHSI  3384(2),4
00005016 4770 C252               0000503A   8225          BNE   @L737
                                            8226 * ***                   rd_atomic32_set(&rk->rk_eos.txn_may_enq, 0);
0000501A 41F0 2D00               00000D00   8227          LA    15,3328(0,2)
0000501E E3F0 D0B0 0024          000000B0   8228          STG   15,176(0,13)
00005024 D707 D0B8 D0B8 000000B8 000000B8   8229          XC    184(8,13),184(13)
0000502A 4110 D0B0               000000B0   8230          LA    1,176(0,13)
0000502E E3F0 C190 0004          00004F78   8231          LG    15,@lit_2002_225 ; rd_atomic32_set
00005034                                    8232 @@gen_label318 DS    0H
00005034 05EF                               8233          BALR  14,15
00005036                                    8234 @@gen_label319 DS    0H
00005036 47F0 C276               0000505E   8235          B     @L738
                                            8236 * ***           else if (new_state == RD_KAFKA_TXN_STATE_IN_TRANSACTIO\
                                            8237 * N)
0000503A                                    8238 @L737    DS    0H
0000503A A73E 0004               00000004   8239          CHI   3,4
0000503E 4770 C276               0000505E   8240          BNE   @L738
                                            8241 * ***                   rd_atomic32_set(&rk->rk_eos.txn_may_enq, 1);
00005042 41F0 2D00               00000D00   8242          LA    15,3328(0,2)
00005046 E3F0 D0B0 0024          000000B0   8243          STG   15,176(0,13)
0000504C E548 D0B8 0001          000000B8   8244          MVGHI 184(13),1
00005052 4110 D0B0               000000B0   8245          LA    1,176(0,13)
00005056 E3F0 C190 0004          00004F78   8246          LG    15,@lit_2002_225 ; rd_atomic32_set
0000505C                                    8247 @@gen_label321 DS    0H
0000505C 05EF                               8248          BALR  14,15
0000505E                                    8249 @@gen_label322 DS    0H
0000505E                                    8250 @L739    DS    0H
                                            8251 * ***
                                            8252 * ***           rk->rk_eos.txn_state = new_state;
0000505E                                    8253 @L738    DS    0H
0000505E 5030 2D38               00000D38   8254          ST    3,3384(0,2) ; offset of txn_state in 0000146
                                            8255 * ***   }
00005062                                    8256 @ret_lab_2002 DS 0H
                                            8257 * * **** Start of Epilogue
                                            8258          DCCEPIL
00005062                                    8259+         ds 0h                                                          01-DCCEP
                                            8260+* Epilog
00005062 D707 D088 D088 00000088 00000088   8261+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005068 E3D0 D080 0004          00000080   8262+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000506E E3C0 D090 0004          00000090   8263+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005074 E3B0 C018 0004          00000018   8264+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000507A E3C0 B010 0021          00000010   8265+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005080 E3E0 D008 0004          00000008   8266+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page  170 
  Active Usings: @REGION_2002_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005086 EB1C D020 0004          00000020   8267+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000508C 078E                               8268+         bcr 8,14                if same dsab, just return              01-DCCEP
0000508E E3F0 D010 0024          00000010   8269+         stg 15,16(0,13)         save return code                       01-DCCEP
00005094 E300 D018 0024          00000018   8270+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000509A E3F0 D090 0004          00000090   8271+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000050A0 E3F0 F018 0004          00000018   8272+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000050A6 47F0 F040               00000040   8273+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8274+* End of Epilog
                                            8275 * * **** End of Epilogue
                                            8276          DROP  12
                                            8277 *
                                            8278 *   DSECT for automatic variables in "rd_kafka_txn_set_state"
                                            8279 *      (FUNCTION #2002)
                                            8280 *
00000000                00000000 000000A9   8281 @AUTO#rd_kafka_txn_set_state DSECT
00000000                                    8282          DS    XL168
000000A8                                    8283 rd_kafka_txn_set_state#ignore#0 DS 1CL1 ; ignore
                                            8284 *
000050AA                00000000 00014658   8285 @CODE    CSECT
                                            8286 *
                                            8287 *
                                            8288 *
                                            8289 * ....... start of rd_kafka_txn_set_fatal_error
                                            8290 rd_kafka_txn_set_fatal_error ALIAS X'99846D92818692816DA3A7956DA285A36D*
                                                                8681A381936D8599999699'
000050AA                                    8291 @LNAME1924 DS  0H
000050AA 0000001C                           8292          DC    X'0000001C'
000050AE 99846D9281869281                   8293          DC    C'rd_kafka_txn_set_fatal_error'
000050CA 00                                 8294          DC    X'00'
                                            8295 rd_kafka_txn_set_fatal_error DCCPRLG CINDEX=1924,BASER=12,FRAME=752,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1924
                                            8296          macro
                                            8297          dccextrn &m
                                            8298          gblc    &$dccext(1000)
                                            8299          gbla    &$dccexti
                                            8300          lcla    &i
                                            8301 &$dccext(&$dccexti+1) setc    '&m'
                                            8302 &i       seta    1
                                            8303 .loop    aif    (&i gt &$dccexti).around
                                            8304          aif    ('&$dccext(&i)' eq '&m').getout
                                            8305 &i       seta    &i+1
                                            8306          ago     .loop
                                            8307 .around  anop
                                            8308 &$dccexti seta &$dccexti+1
                                            8309          extrn  &m
                                            8310 .getout  anop
                                            8311          mend
000050D0                                    8312+$eye0189    ds    0d                                                    02-DCCCA
000050D0 C4C3C3                             8313+         dc cl3'DCC'                                                    02-DCCCA
000050D3 01                                 8314+         dc xl1'01' format one                                          02-DCCCA
000050D4 00000000                           8315+         dc a(0)                                                        02-DCCCA
000050D8 0000000000005142                   8316+         dc ad(@PER_1924)                                               02-DCCCA
                                                                                                                           Page  171 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000050E0 00000000000002F0                   8317+         dc ad(752)                                                     02-DCCCA
000050E8 0000000000000000                   8318+         dc ad(0)                                                       02-DCCCA
000050F0 0000000000001000                   8319+         dc ad(4096)                                                    02-DCCCA
000050F8 20                                 8320+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000050F9 03                                 8321+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000050FA 03                                 8322+         dc al1(3)                                                      02-DCCCA
000050FB 08                                 8323+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000050FC 00                                 8324+         dc bl.8'00000000'                                              02-DCCCA
000050FD 000000                             8325+         dc al3(0)                                                      02-DCCCA
00005100 00000000000050AA                   8326+         dc ad(@LNAME1924)                                              02-DCCCA
00005108                                    8327+         ds 0d                                                          02-DCCCA
00005108 00000000000050D0                   8328+         dc ad($eye0189)                                                02-DCCCA
00005110 0000000000000000                   8329+         dc ad(0)                                                       02-DCCCA
00005118                                    8330+         ds    0d                                                       01-DCCPR
                                            8331+         entry rd_kafka_txn_set_fatal_error                             01-DCCPR
00005118                                    8332+rd_kafka_txn_set_fatal_error ds 0d                                      01-DCCPR
00005118                                    8333+@REGION_1924_1 ds 0h                                                    01-DCCPR
00005118 EBEC D008 0024          00000008   8334+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000511E E3E0 D088 0004          00000088   8335+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005124 E3C0 D090 0004          00000090   8336+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000512A B904 002E                          8337+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000512E E3B0 C018 0004          00000018   8338+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005134 A7EB 02F0               000002F0   8339+         aghi  14,752              increase by frame size               01-DCCPR
00005138 E3E0 C020 0021          00000020   8340+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000513E 4720 B020               00000020   8341+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005142                                    8342+@PER_1924 ds   0h                                                       01-DCCPR
00005142 EBDE 2080 0024          00000080   8343+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005148 E3C0 2090 0024          00000090   8344+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000514E B904 00D2                          8345+         lgr   13,2                set real frame pointer               01-DCCPR
00005152 B904 00CF                          8346+         lgr   12,15               set base reg                         01-DCCPR
                        00005118            8347+         using @REGION_1924_1,12                                        01-DCCPR
00005156 B904 0041                          8348          LGR   4,1         ; ptr to parm area
                                            8349 * ******* End of Prologue
                                            8350 * *
                                            8351 * ***           char errstr[512];
0000515A E320 4000 0004          00000000   8352          LG    2,0(0,4)    ; rk
00005160 5830 4014               00000014   8353          L     3,20(0,4)   ; err
                                            8354 * ***           va_list ap;
                                            8355 * ***
                                            8356 * ***           ((ap) = (va_list)&(fmt) + ((__builtin_classify_type(fm\
                                            8357 * t) == 1 || __builtin_classify_type(fmt) == 2 || __builtin_classify_t\
                                            8358 * ype(fmt) == 4) ? sizeof(fmt) : (((sizeof(fmt) + sizeof(long) - 1) & \
                                            8359 * ~(sizeof(long) -1)))));
00005164 41F0 4020               00000020   8360          LA    15,32(0,4)
                                            8361 * ***           vsnprintf(errstr, sizeof(errstr), fmt, ap);
00005168 4110 D0A8               000000A8   8362          LA    1,168(0,13)
0000516C E310 D2A8 0024          000002A8   8363          STG   1,680(0,13)
00005172 E548 D2B0 0200          000002B0   8364          MVGHI 688(13),512
00005178 E310 4018 0004          00000018   8365          LG    1,24(0,4)   ; fmt
0000517E E310 D2B8 0024          000002B8   8366          STG   1,696(0,13)
00005184 E3F0 D2C0 0024          000002C0   8367          STG   15,704(0,13)
0000518A 4110 D2A8               000002A8   8368          LA    1,680(0,13)
                                                                                                                           Page  172 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000518E E3F0 C260 0004          00005378   8369          LG    15,@lit_1924_228 ; vsnprintf
00005194                                    8370 @@gen_label323 DS    0H
00005194 05EF                               8371          BALR  14,15
00005196                                    8372 @@gen_label324 DS    0H
                                            8373 * ***           ;
                                            8374 * ***
                                            8375 * ***           rd_kafka_log0(&rk->rk_conf, rk, ((void *)0), 1, 0x0, "\
                                            8376 * TXNERR", "Fatal transaction error: %s (%s)", errstr, rd_kafka_err2na\
                                            8377 * me(err));
00005196 B914 00F3                          8378          LGFR  15,3
0000519A E3F0 D2A8 0024          000002A8   8379          STG   15,680(0,13)
000051A0 4110 D2A8               000002A8   8380          LA    1,680(0,13)
000051A4 E3F0 C268 0004          00005380   8381          LG    15,@lit_1924_229 ; rd_kafka_err2name
000051AA                                    8382 @@gen_label325 DS    0H
000051AA 05EF                               8383          BALR  14,15
000051AC                                    8384 @@gen_label326 DS    0H
000051AC 4110 2210               00000210   8385          LA    1,528(0,2)
000051B0 EB12 D2A8 0024          000002A8   8386          STMG  1,2,680(13)
000051B6 D707 D2B8 D2B8 000002B8 000002B8   8387          XC    696(8,13),696(13)
000051BC E548 D2C0 0001          000002C0   8388          MVGHI 704(13),1
000051C2 D707 D2C8 D2C8 000002C8 000002C8   8389          XC    712(8,13),712(13)
000051C8 E350 C278 0004          00005390   8390          LG    5,@lit_1924_230
000051CE 4110 52C2               000002C2   8391          LA    1,706(0,5)
000051D2 E310 D2D0 0024          000002D0   8392          STG   1,720(0,13)
000051D8 4110 52CA               000002CA   8393          LA    1,714(0,5)
000051DC E310 D2D8 0024          000002D8   8394          STG   1,728(0,13)
000051E2 4110 D0A8               000000A8   8395          LA    1,168(0,13)
000051E6 E310 D2E0 0024          000002E0   8396          STG   1,736(0,13)
000051EC E3F0 D2E8 0024          000002E8   8397          STG   15,744(0,13)
000051F2 4110 D2A8               000002A8   8398          LA    1,680(0,13)
000051F6 E3F0 C270 0004          00005388   8399          LG    15,@lit_1924_231 ; rd_kafka_log0
000051FC                                    8400 @@gen_label327 DS    0H
000051FC 05EF                               8401          BALR  14,15
000051FE                                    8402 @@gen_label328 DS    0H
                                            8403 * ***
                                            8404 * ***
                                            8405 * ***
                                            8406 * ***           if (do_lock)
000051FE E340 400C 0012          0000000C   8407          LT    4,12(0,4)   ; do_lock
00005204 4780 C106               0000521E   8408          BZ    @L740
                                            8409 * ***                   rwlock_wrlock(&(rk)->rk_lock);
00005208 41F0 29A0               000009A0   8410          LA    15,2464(0,2)
0000520C E3F0 D2A8 0024          000002A8   8411          STG   15,680(0,13)
00005212 4110 D2A8               000002A8   8412          LA    1,680(0,13)
00005216 E3F0 C280 0004          00005398   8413          LG    15,@lit_1924_232 ; rwlock_wrlock
0000521C                                    8414 @@gen_label330 DS    0H
0000521C 05EF                               8415          BALR  14,15
0000521E                                    8416 @@gen_label331 DS    0H
0000521E                                    8417 @L740    DS    0H
                                            8418 * ***           rd_kafka_set_fatal_error0(rk, RD_DONT_LOCK, err, "%s",\
                                            8419 *  errstr);
0000521E E320 D2A8 0024          000002A8   8420          STG   2,680(0,13)
                                                                                                                           Page  173 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005224 D707 D2B0 D2B0 000002B0 000002B0   8421          XC    688(8,13),688(13)
0000522A B914 00F3                          8422          LGFR  15,3
0000522E E3F0 D2B8 0024          000002B8   8423          STG   15,696(0,13)
00005234 41F0 5122               00000122   8424          LA    15,290(0,5)
00005238 E3F0 D2C0 0024          000002C0   8425          STG   15,704(0,13)
0000523E 41F0 D0A8               000000A8   8426          LA    15,168(0,13)
00005242 E3F0 D2C8 0024          000002C8   8427          STG   15,712(0,13)
00005248 4110 D2A8               000002A8   8428          LA    1,680(0,13)
0000524C E3F0 C288 0004          000053A0   8429          LG    15,@lit_1924_233 ; rd_kafka_set_fatal_error0
00005252                                    8430 @@gen_label332 DS    0H
00005252 05EF                               8431          BALR  14,15
00005254                                    8432 @@gen_label333 DS    0H
                                            8433 * ***
                                            8434 * ***           rk->rk_eos.txn_err = err;
00005254 5030 2ED8               00000ED8   8435          ST    3,3800(0,2) ; offset of txn_err in 0000146
                                            8436 * ***           if (rk->rk_eos.txn_errstr)
00005258 E3F0 2EE0 0002          00000EE0   8437          LTG   15,3808(0,2) ; offset of txn_errstr in 0000146
0000525E 4780 C162               0000527A   8438          BZ    @L741
                                            8439 * ***                   rd_free(rk->rk_eos.txn_errstr);
00005262 E3F0 2EE0 0004          00000EE0   8440          LG    15,3808(0,2)
00005268 E3F0 D2A8 0024          000002A8   8441          STG   15,680(0,13)
0000526E 4110 D2A8               000002A8   8442          LA    1,680(0,13)
00005272 E3F0 C290 0004          000053A8   8443          LG    15,@lit_1924_234 ; rd_free
00005278                                    8444 @@gen_label335 DS    0H
00005278 05EF                               8445          BALR  14,15
0000527A                                    8446 @@gen_label336 DS    0H
0000527A                                    8447 @L741    DS    0H
                                            8448 * ***           rk->rk_eos.txn_errstr = rd_strdup(errstr);
0000527A 41F0 D0A8               000000A8   8449          LA    15,168(0,13)
0000527E E3F0 D2A8 0024          000002A8   8450          STG   15,680(0,13)
00005284 4110 D2A8               000002A8   8451          LA    1,680(0,13)
00005288 E3F0 C298 0004          000053B0   8452          LG    15,@lit_1924_235 ; rd_strdup
0000528E                                    8453 @@gen_label337 DS    0H
0000528E 05EF                               8454          BALR  14,15
00005290                                    8455 @@gen_label338 DS    0H
00005290 E3F0 2EE0 0024          00000EE0   8456          STG   15,3808(0,2)
                                            8457 * ***
                                            8458 * ***           if (rk->rk_eos.txn_init_rkq) {
00005296 E3F0 2E08 0002          00000E08   8459          LTG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
0000529C 4780 C1DA               000052F2   8460          BZ    @L742
                                            8461 * ***
                                            8462 * ***
                                            8463 * ***                   rd_kafka_txn_curr_api_reply_error(
                                            8464 * ***                           rk->rk_eos.txn_init_rkq,
                                            8465 * ***                           rd_kafka_error_new_fatal(err, "%s", er\
                                            8466 * rstr));
000052A0 B914 00F3                          8467          LGFR  15,3
000052A4 E3F0 D2A8 0024          000002A8   8468          STG   15,680(0,13)
000052AA 41F0 5122               00000122   8469          LA    15,290(0,5)
000052AE E3F0 D2B0 0024          000002B0   8470          STG   15,688(0,13)
000052B4 41F0 D0A8               000000A8   8471          LA    15,168(0,13)
000052B8 E3F0 D2B8 0024          000002B8   8472          STG   15,696(0,13)
                                                                                                                           Page  174 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000052BE 4110 D2A8               000002A8   8473          LA    1,680(0,13)
000052C2 E3F0 C2A0 0004          000053B8   8474          LG    15,@lit_1924_236 ; rd_kafka_error_new_fatal
000052C8                                    8475 @@gen_label340 DS    0H
000052C8 05EF                               8476          BALR  14,15
000052CA                                    8477 @@gen_label341 DS    0H
000052CA E310 2E08 0004          00000E08   8478          LG    1,3592(0,2)
000052D0 E310 D2A8 0024          000002A8   8479          STG   1,680(0,13)
000052D6 E3F0 D2B0 0024          000002B0   8480          STG   15,688(0,13)
000052DC 4110 D2A8               000002A8   8481          LA    1,680(0,13)
000052E0 E3F0 C2A8 0004          000053C0   8482          LG    15,@lit_1924_237 ; rd_kafka_txn_curr_api_reply_error
000052E6                                    8483 @@gen_label342 DS    0H
000052E6 05EF                               8484          BALR  14,15
000052E8                                    8485 @@gen_label343 DS    0H
                                            8486 * ***                   rk->rk_eos.txn_init_rkq = ((void *)0);
000052E8 A7F9 0000               00000000   8487          LGHI  15,0        ; 0
000052EC E3F0 2E08 0024          00000E08   8488          STG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
                                            8489 * ***           }
000052F2                                    8490 @L742    DS    0H
                                            8491 * ***
                                            8492 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_FATAL_ER\
                                            8493 * ROR);
000052F2 E320 D2A8 0024          000002A8   8494          STG   2,680(0,13)
000052F8 E548 D2B0 000B          000002B0   8495          MVGHI 688(13),11
000052FE 4110 D2A8               000002A8   8496          LA    1,680(0,13)
00005302 E3F0 C2B0 0004          000053C8   8497          LG    15,@lit_1924_239 ; rd_kafka_txn_set_state
00005308                                    8498 @@gen_label344 DS    0H
00005308 05EF                               8499          BALR  14,15
0000530A                                    8500 @@gen_label345 DS    0H
                                            8501 * ***
                                            8502 * ***           if (do_lock)
0000530A 1244                               8503          LTR   4,4
0000530C 4780 C20E               00005326   8504          BZ    @L743
                                            8505 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
00005310 41F0 29A0               000009A0   8506          LA    15,2464(0,2)
00005314 E3F0 D2A8 0024          000002A8   8507          STG   15,680(0,13)
0000531A 4110 D2A8               000002A8   8508          LA    1,680(0,13)
0000531E E3F0 C2B8 0004          000053D0   8509          LG    15,@lit_1924_240 ; rwlock_wrunlock
00005324                                    8510 @@gen_label347 DS    0H
00005324 05EF                               8511          BALR  14,15
00005326                                    8512 @@gen_label348 DS    0H
00005326                                    8513 @L743    DS    0H
                                            8514 * ***   }
00005326                                    8515 @ret_lab_1924 DS 0H
                                            8516 * * **** Start of Epilogue
                                            8517          DCCEPIL
00005326                                    8518+         ds 0h                                                          01-DCCEP
                                            8519+* Epilog
00005326 D707 D088 D088 00000088 00000088   8520+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000532C E3D0 D080 0004          00000080   8521+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005332 E3C0 D090 0004          00000090   8522+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005338 E3B0 C018 0004          00000018   8523+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000533E E3C0 B010 0021          00000010   8524+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  175 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005344 E3E0 D008 0004          00000008   8525+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000534A EB1C D020 0004          00000020   8526+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005350 078E                               8527+         bcr 8,14                if same dsab, just return              01-DCCEP
00005352 E3F0 D010 0024          00000010   8528+         stg 15,16(0,13)         save return code                       01-DCCEP
00005358 E300 D018 0024          00000018   8529+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000535E E3F0 D090 0004          00000090   8530+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005364 E3F0 F018 0004          00000018   8531+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000536A 47F0 F040               00000040   8532+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8533+* End of Epilog
                                            8534 * * **** End of Epilogue
00005370                                    8535          DS    0D
00005370 000002F0                           8536 @FRAMESIZE_1924 DC F'752'
00005374 00000000
00005378 0000000000000000                   8537 @lit_1924_228 DC AD(vsnprintf)
00005380 0000000000000000                   8538 @lit_1924_229 DC AD(rd_kafka_err2name)
00005388 0000000000000000                   8539 @lit_1924_231 DC AD(rd_kafka_log0)
00005390 0000000000014A98                   8540 @lit_1924_230 DC AD(@strings@)
00005398 0000000000000000                   8541 @lit_1924_232 DC AD(rwlock_wrlock)
000053A0 0000000000000000                   8542 @lit_1924_233 DC AD(rd_kafka_set_fatal_error0)
000053A8 0000000000000CB0                   8543 @lit_1924_234 DC AD(rd_free)
000053B0 0000000000000DB8                   8544 @lit_1924_235 DC AD(rd_strdup)
000053B8 0000000000000000                   8545 @lit_1924_236 DC AD(rd_kafka_error_new_fatal)
000053C0 00000000000058A0                   8546 @lit_1924_237 DC AD(rd_kafka_txn_curr_api_reply_error)
000053C8 0000000000004DE8                   8547 @lit_1924_239 DC AD(rd_kafka_txn_set_state)
000053D0 0000000000000000                   8548 @lit_1924_240 DC AD(rwlock_wrunlock)
                                            8549          DROP  12
                                            8550 *
                                            8551 *   DSECT for automatic variables in "rd_kafka_txn_set_fatal_error"
                                            8552 *      (FUNCTION #1924)
                                            8553 *
00000000                00000000 000002A8   8554 @AUTO#rd_kafka_txn_set_fatal_error DSECT
00000000                                    8555          DS    XL168
000000A8                                    8556 rd_kafka_txn_set_fatal_error#errstr#0 DS 512XL1 ; errstr
                                            8557 *
000053D8                00000000 00014658   8558 @CODE    CSECT
                                            8559 *
                                            8560 *
                                            8561 *
                                            8562 * ....... start of rd_kafka_txn_set_abortable_error0
                                            8563 rd_kafka_txn_set_abortable_error0 ALIAS X'99846D92818692816DA3A7956DA28*
                                                                5A36D81829699A3818293856D8599999699F0'
000053D8                                    8564 @LNAME1923 DS  0H
000053D8 00000021                           8565          DC    X'00000021'
000053DC 99846D9281869281                   8566          DC    C'rd_kafka_txn_set_abortable_error'
000053FC F0                                 8567          DC    C'0'
000053FD 00                                 8568          DC    X'00'
                                            8569 rd_kafka_txn_set_abortable_error0 DCCPRLG CINDEX=1923,BASER=12,FRAME=76*
                                                                8,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1923
                                            8570          macro
                                            8571          dccextrn &m
                                            8572          gblc    &$dccext(1000)
                                            8573          gbla    &$dccexti
                                                                                                                           Page  176 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8574          lcla    &i
                                            8575 &$dccext(&$dccexti+1) setc    '&m'
                                            8576 &i       seta    1
                                            8577 .loop    aif    (&i gt &$dccexti).around
                                            8578          aif    ('&$dccext(&i)' eq '&m').getout
                                            8579 &i       seta    &i+1
                                            8580          ago     .loop
                                            8581 .around  anop
                                            8582 &$dccexti seta &$dccexti+1
                                            8583          extrn  &m
                                            8584 .getout  anop
                                            8585          mend
00005400                                    8586+$eye0192    ds    0d                                                    02-DCCCA
00005400 C4C3C3                             8587+         dc cl3'DCC'                                                    02-DCCCA
00005403 01                                 8588+         dc xl1'01' format one                                          02-DCCCA
00005404 00000000                           8589+         dc a(0)                                                        02-DCCCA
00005408 0000000000005472                   8590+         dc ad(@PER_1923)                                               02-DCCCA
00005410 0000000000000300                   8591+         dc ad(768)                                                     02-DCCCA
00005418 0000000000000000                   8592+         dc ad(0)                                                       02-DCCCA
00005420 0000000000001000                   8593+         dc ad(4096)                                                    02-DCCCA
00005428 20                                 8594+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005429 03                                 8595+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000542A 03                                 8596+         dc al1(3)                                                      02-DCCCA
0000542B 08                                 8597+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000542C 00                                 8598+         dc bl.8'00000000'                                              02-DCCCA
0000542D 000000                             8599+         dc al3(0)                                                      02-DCCCA
00005430 00000000000053D8                   8600+         dc ad(@LNAME1923)                                              02-DCCCA
00005438                                    8601+         ds 0d                                                          02-DCCCA
00005438 0000000000005400                   8602+         dc ad($eye0192)                                                02-DCCCA
00005440 0000000000000000                   8603+         dc ad(0)                                                       02-DCCCA
00005448                                    8604+         ds    0d                                                       01-DCCPR
                                            8605+         entry rd_kafka_txn_set_abortable_error0                        01-DCCPR
00005448                                    8606+rd_kafka_txn_set_abortable_error0 ds 0d                                 01-DCCPR
00005448                                    8607+@REGION_1923_1 ds 0h                                                    01-DCCPR
00005448 EBEC D008 0024          00000008   8608+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000544E E3E0 D088 0004          00000088   8609+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005454 E3C0 D090 0004          00000090   8610+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000545A B904 002E                          8611+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000545E E3B0 C018 0004          00000018   8612+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005464 A7EB 0300               00000300   8613+         aghi  14,768              increase by frame size               01-DCCPR
00005468 E3E0 C020 0021          00000020   8614+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000546E 4720 B020               00000020   8615+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005472                                    8616+@PER_1923 ds   0h                                                       01-DCCPR
00005472 EBDE 2080 0024          00000080   8617+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005478 E3C0 2090 0024          00000090   8618+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000547E B904 00D2                          8619+         lgr   13,2                set real frame pointer               01-DCCPR
00005482 B904 00CF                          8620+         lgr   12,15               set base reg                         01-DCCPR
                        00005448            8621+         using @REGION_1923_1,12                                        01-DCCPR
00005486 B904 0041                          8622          LGR   4,1         ; ptr to parm area
                                            8623 * ******* End of Prologue
                                            8624 * *
                                            8625 * ***           char errstr[512];
                                                                                                                           Page  177 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000548A E320 4000 0004          00000000   8626          LG    2,0(0,4)    ; rk
00005490 5830 400C               0000000C   8627          L     3,12(0,4)   ; err
                                            8628 * ***           va_list ap;
                                            8629 * ***
                                            8630 * ***           if (rd_kafka_fatal_error(rk, ((void *)0), 0)) {
00005494 E320 D2A8 0024          000002A8   8631          STG   2,680(0,13)
0000549A D70F D2B0 D2B0 000002B0 000002B0   8632          XC    688(16,13),688(13)
000054A0 4110 D2A8               000002A8   8633          LA    1,680(0,13)
000054A4 E3F0 C0E8 0004          00005530   8634          LG    15,@lit_1923_242 ; rd_kafka_fatal_error
000054AA                                    8635 @@gen_label349 DS    0H
000054AA 05EF                               8636          BALR  14,15
000054AC                                    8637 @@gen_label350 DS    0H
000054AC 12FF                               8638          LTR   15,15
000054AE 4780 C148               00005590   8639          BZ    @L744
                                            8640 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                            8641 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "FATAL","Not p\
                                            8642 * ropagating abortable transactional " "error (%s) " "since previous f\
                                            8643 * atal error already raised", rd_kafka_err2name(err)); } while (0);
000054B2                                    8644 @L745    DS    0H
000054B2 9180 2322      00000322 00000080   8645          TM    802(2),128
000054B6 4780 C39C               000057E4   8646          BZ    @ret_lab_1923
000054BA B914 00F3                          8647          LGFR  15,3
000054BE E3F0 D2A8 0024          000002A8   8648          STG   15,680(0,13)
000054C4 4110 D2A8               000002A8   8649          LA    1,680(0,13)
000054C8 E3F0 C0F0 0004          00005538   8650          LG    15,@lit_1923_243 ; rd_kafka_err2name
000054CE                                    8651 @@gen_label353 DS    0H
000054CE 05EF                               8652          BALR  14,15
000054D0                                    8653 @@gen_label354 DS    0H
000054D0 4110 2210               00000210   8654          LA    1,528(0,2)
000054D4 EB12 D2A8 0024          000002A8   8655          STMG  1,2,680(13)
000054DA D707 D2B8 D2B8 000002B8 000002B8   8656          XC    696(8,13),696(13)
000054E0 E548 D2C0 0007          000002C0   8657          MVGHI 704(13),7
000054E6 C01F 0000 8000                     8658          LLILF 1,X'00008000' ; 32768
000054EC E310 D2C8 0024          000002C8   8659          STG   1,712(0,13)
000054F2 E310 C100 0004          00005548   8660          LG    1,@lit_1923_245
000054F8 4120 12EC               000002EC   8661          LA    2,748(0,1)
000054FC E320 D2D0 0024          000002D0   8662          STG   2,720(0,13)
00005502 4110 12F2               000002F2   8663          LA    1,754(0,1)
00005506 E310 D2D8 0024          000002D8   8664          STG   1,728(0,13)
0000550C E3F0 D2E0 0024          000002E0   8665          STG   15,736(0,13)
00005512 4110 D2A8               000002A8   8666          LA    1,680(0,13)
00005516 E3F0 C0F8 0004          00005540   8667          LG    15,@lit_1923_246 ; rd_kafka_log0
0000551C                                    8668 @@gen_label355 DS    0H
0000551C 05EF                               8669          BALR  14,15
0000551E                                    8670 @@gen_label356 DS    0H
0000551E                                    8671 @L748    DS    0H
                                            8672 * ***
                                            8673 * ***
                                            8674 * ***
                                            8675 * ***
                                            8676 * ***                   return;
0000551E 47F0 C39C               000057E4   8677          B     @ret_lab_1923
                                                                                                                           Page  178 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005528                                    8678          DS    0D
00005528 00000300                           8679 @FRAMESIZE_1923 DC F'768'
0000552C 00000000
00005530 0000000000000000                   8680 @lit_1923_242 DC AD(rd_kafka_fatal_error)
00005538 0000000000000000                   8681 @lit_1923_243 DC AD(rd_kafka_err2name)
00005540 0000000000000000                   8682 @lit_1923_246 DC AD(rd_kafka_log0)
00005548 0000000000014A98                   8683 @lit_1923_245 DC AD(@strings@)
00005550 0000000000000000                   8684 @lit_1923_247 DC AD(vsnprintf)
00005558 0000000000000000                   8685 @lit_1923_248 DC AD(rwlock_wrlock)
00005560 0000000000000000                   8686 @lit_1923_254 DC AD(rwlock_wrunlock)
00005568 0000000000000CB0                   8687 @lit_1923_255 DC AD(rd_free)
00005570 0000000000000DB8                   8688 @lit_1923_256 DC AD(rd_strdup)
00005578 0000000000004228                   8689 @lit_1923_257 DC AD(rd_kafka_txn_state2str)
00005580 0000000000004DE8                   8690 @lit_1923_263 DC AD(rd_kafka_txn_set_state)
00005588 0000000000000000                   8691 @lit_1923_265 DC AD(rd_kafka_purge)
                                            8692 * ***           }
00005590                                    8693 @L744    DS    0H
                                            8694 * ***
                                            8695 * ***           ((ap) = (va_list)&(fmt) + ((__builtin_classify_type(fm\
                                            8696 * t) == 1 || __builtin_classify_type(fmt) == 2 || __builtin_classify_t\
                                            8697 * ype(fmt) == 4) ? sizeof(fmt) : (((sizeof(fmt) + sizeof(long) - 1) & \
                                            8698 * ~(sizeof(long) -1)))));
00005590 41F0 4020               00000020   8699          LA    15,32(0,4)
                                            8700 * ***           vsnprintf(errstr, sizeof(errstr), fmt, ap);
00005594 4110 D0A8               000000A8   8701          LA    1,168(0,13)
00005598 E310 D2A8 0024          000002A8   8702          STG   1,680(0,13)
0000559E E548 D2B0 0200          000002B0   8703          MVGHI 688(13),512
000055A4 E310 4018 0004          00000018   8704          LG    1,24(0,4)   ; fmt
000055AA E310 D2B8 0024          000002B8   8705          STG   1,696(0,13)
000055B0 E3F0 D2C0 0024          000002C0   8706          STG   15,704(0,13)
000055B6 4110 D2A8               000002A8   8707          LA    1,680(0,13)
000055BA E3F0 C108 0004          00005550   8708          LG    15,@lit_1923_247 ; vsnprintf
000055C0                                    8709 @@gen_label357 DS    0H
000055C0 05EF                               8710          BALR  14,15
000055C2                                    8711 @@gen_label358 DS    0H
                                            8712 * ***           ;
                                            8713 * ***
                                            8714 * ***           rwlock_wrlock(&(rk)->rk_lock);
000055C2 41F0 29A0               000009A0   8715          LA    15,2464(0,2)
000055C6 E3F0 D2A8 0024          000002A8   8716          STG   15,680(0,13)
000055CC 4110 D2A8               000002A8   8717          LA    1,680(0,13)
000055D0 E3F0 C110 0004          00005558   8718          LG    15,@lit_1923_248 ; rwlock_wrlock
000055D6                                    8719 @@gen_label359 DS    0H
000055D6 05EF                               8720          BALR  14,15
000055D8                                    8721 @@gen_label360 DS    0H
                                            8722 * ***
                                            8723 * ***           if (requires_epoch_bump)
000055D8 9500 4017      00000017 00000000   8724          CLI   23(4),0
000055DC 4780 C1A0               000055E8   8725          BE    @L749
                                            8726 * ***                   rk->rk_eos.txn_requires_epoch_bump = requires_\
                                            8727 * epoch_bump;
000055E0 43F0 4017               00000017   8728          IC    15,23(0,4)  ; requires_epoch_bump
                                                                                                                           Page  179 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000055E4 42F0 2D80               00000D80   8729          STC   15,3456(0,2) ; offset of txn_requires_epoch_bump in 0000*
                                                                146
000055E8                                    8730 @L749    DS    0H
                                            8731 * ***
                                            8732 * ***           if (rk->rk_eos.txn_err) {
000055E8 E3F0 2ED8 0012          00000ED8   8733          LT    15,3800(0,2) ; offset of txn_err in 0000146
000055EE 4780 C25E               000056A6   8734          BZ    @L750
                                            8735 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                            8736 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNERR","Igno\
                                            8737 * ring sub-sequent abortable transaction " "error: %s (%s): " "previou\
                                            8738 * s error (%s) already raised", errstr, rd_kafka_err2name(err), rd_kaf\
                                            8739 * ka_err2name(rk->rk_eos.txn_err)); } while (0);
000055F2                                    8740 @L751    DS    0H
000055F2 9180 2322      00000322 00000080   8741          TM    802(2),128
000055F6 4780 C244               0000568C   8742          BZ    @L754
000055FA B914 00F3                          8743          LGFR  15,3
000055FE E3F0 D2A8 0024          000002A8   8744          STG   15,680(0,13)
00005604 4110 D2A8               000002A8   8745          LA    1,680(0,13)
00005608 E330 C0F0 0004          00005538   8746          LG    3,@lit_1923_243 ; rd_kafka_err2name
0000560E B904 00F3                          8747          LGR   15,3
00005612                                    8748 @@gen_label364 DS    0H
00005612 05EF                               8749          BALR  14,15
00005614                                    8750 @@gen_label365 DS    0H
00005614 B904 004F                          8751          LGR   4,15
00005618 E3F0 2ED8 0014          00000ED8   8752          LGF   15,3800(0,2)
0000561E E3F0 D2A8 0024          000002A8   8753          STG   15,680(0,13)
00005624 4110 D2A8               000002A8   8754          LA    1,680(0,13)
00005628 B904 00F3                          8755          LGR   15,3
0000562C                                    8756 @@gen_label366 DS    0H
0000562C 05EF                               8757          BALR  14,15
0000562E                                    8758 @@gen_label367 DS    0H
0000562E 4110 2210               00000210   8759          LA    1,528(0,2)
00005632 EB12 D2A8 0024          000002A8   8760          STMG  1,2,680(13)
00005638 D707 D2B8 D2B8 000002B8 000002B8   8761          XC    696(8,13),696(13)
0000563E E548 D2C0 0007          000002C0   8762          MVGHI 704(13),7
00005644 C01F 0000 8000                     8763          LLILF 1,X'00008000' ; 32768
0000564A E310 D2C8 0024          000002C8   8764          STG   1,712(0,13)
00005650 E310 C100 0004          00005548   8765          LG    1,@lit_1923_245
00005656 4130 12C2               000002C2   8766          LA    3,706(0,1)
0000565A E330 D2D0 0024          000002D0   8767          STG   3,720(0,13)
00005660 4110 1350               00000350   8768          LA    1,848(0,1)
00005664 E310 D2D8 0024          000002D8   8769          STG   1,728(0,13)
0000566A 4110 D0A8               000000A8   8770          LA    1,168(0,13)
0000566E E310 D2E0 0024          000002E0   8771          STG   1,736(0,13)
00005674 E340 D2E8 0024          000002E8   8772          STG   4,744(0,13)
0000567A E3F0 D2F0 0024          000002F0   8773          STG   15,752(0,13)
00005680 4110 D2A8               000002A8   8774          LA    1,680(0,13)
00005684 E3F0 C0F8 0004          00005540   8775          LG    15,@lit_1923_246 ; rd_kafka_log0
0000568A                                    8776 @@gen_label368 DS    0H
0000568A 05EF                               8777          BALR  14,15
0000568C                                    8778 @@gen_label369 DS    0H
0000568C                                    8779 @L754    DS    0H
                                                                                                                           Page  180 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8780 * ***   # 357 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                            8781 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000568C 41F0 29A0               000009A0   8782          LA    15,2464(0,2)
00005690 E3F0 D2A8 0024          000002A8   8783          STG   15,680(0,13)
00005696 4110 D2A8               000002A8   8784          LA    1,680(0,13)
0000569A E3F0 C118 0004          00005560   8785          LG    15,@lit_1923_254 ; rwlock_wrunlock
000056A0                                    8786 @@gen_label370 DS    0H
000056A0 05EF                               8787          BALR  14,15
000056A2                                    8788 @@gen_label371 DS    0H
                                            8789 * ***                   return;
000056A2 47F0 C39C               000057E4   8790          B     @ret_lab_1923
                                            8791 * ***           }
000056A6                                    8792 @L750    DS    0H
                                            8793 * ***
                                            8794 * ***           rk->rk_eos.txn_err = err;
000056A6 5030 2ED8               00000ED8   8795          ST    3,3800(0,2) ; offset of txn_err in 0000146
                                            8796 * ***           if (rk->rk_eos.txn_errstr)
000056AA E3F0 2EE0 0002          00000EE0   8797          LTG   15,3808(0,2) ; offset of txn_errstr in 0000146
000056B0 4780 C284               000056CC   8798          BZ    @L755
                                            8799 * ***                   rd_free(rk->rk_eos.txn_errstr);
000056B4 E3F0 2EE0 0004          00000EE0   8800          LG    15,3808(0,2)
000056BA E3F0 D2A8 0024          000002A8   8801          STG   15,680(0,13)
000056C0 4110 D2A8               000002A8   8802          LA    1,680(0,13)
000056C4 E3F0 C120 0004          00005568   8803          LG    15,@lit_1923_255 ; rd_free
000056CA                                    8804 @@gen_label373 DS    0H
000056CA 05EF                               8805          BALR  14,15
000056CC                                    8806 @@gen_label374 DS    0H
000056CC                                    8807 @L755    DS    0H
                                            8808 * ***           rk->rk_eos.txn_errstr = rd_strdup(errstr);
000056CC 41F0 D0A8               000000A8   8809          LA    15,168(0,13)
000056D0 E3F0 D2A8 0024          000002A8   8810          STG   15,680(0,13)
000056D6 4110 D2A8               000002A8   8811          LA    1,680(0,13)
000056DA E3F0 C128 0004          00005570   8812          LG    15,@lit_1923_256 ; rd_strdup
000056E0                                    8813 @@gen_label375 DS    0H
000056E0 05EF                               8814          BALR  14,15
000056E2                                    8815 @@gen_label376 DS    0H
000056E2 E3F0 2EE0 0024          00000EE0   8816          STG   15,3808(0,2)
                                            8817 * ***
                                            8818 * ***           rd_kafka_log0(&rk->rk_conf, rk, ((void *)0), 3, 0x0, "\
                                            8819 * TXNERR", "Current transaction failed in state %s: %s (%s%s)", rd_kaf\
                                            8820 * ka_txn_state2str(rk->rk_eos.txn_state), errstr, rd_kafka_err2name(er\
                                            8821 * r), requires_epoch_bump ? ", requires epoch bump" : "");
000056E8 E3F0 2D38 0014          00000D38   8822          LGF   15,3384(0,2)
000056EE E3F0 D2A8 0024          000002A8   8823          STG   15,680(0,13)
000056F4 4110 D2A8               000002A8   8824          LA    1,680(0,13)
000056F8 E3F0 C130 0004          00005578   8825          LG    15,@lit_1923_257 ; rd_kafka_txn_state2str
000056FE                                    8826 @@gen_label377 DS    0H
000056FE 05EF                               8827          BALR  14,15
00005700                                    8828 @@gen_label378 DS    0H
00005700 B904 005F                          8829          LGR   5,15
00005704 B914 00F3                          8830          LGFR  15,3
00005708 E3F0 D2A8 0024          000002A8   8831          STG   15,680(0,13)
                                                                                                                           Page  181 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000570E 4110 D2A8               000002A8   8832          LA    1,680(0,13)
00005712 E3F0 C0F0 0004          00005538   8833          LG    15,@lit_1923_243 ; rd_kafka_err2name
00005718                                    8834 @@gen_label379 DS    0H
00005718 05EF                               8835          BALR  14,15
0000571A                                    8836 @@gen_label380 DS    0H
0000571A 9500 4017      00000017 00000000   8837          CLI   23(4),0
0000571E 4780 C2E8               00005730   8838          BE    @L756
00005722 E310 C100 0004          00005548   8839          LG    1,@lit_1923_245
00005728 4110 13AE               000003AE   8840          LA    1,942(0,1)
0000572C 47F0 C2F2               0000573A   8841          B     @L757
00005730                                    8842 @L756    DS    0H
00005730 E310 C100 0004          00005548   8843          LG    1,@lit_1923_245
00005736 4110 13C4               000003C4   8844          LA    1,964(0,1)
0000573A                                    8845 @L757    DS    0H
0000573A 4130 2210               00000210   8846          LA    3,528(0,2)
0000573E E330 D2A8 0024          000002A8   8847          STG   3,680(0,13)
00005744 E320 D2B0 0024          000002B0   8848          STG   2,688(0,13)
0000574A D707 D2B8 D2B8 000002B8 000002B8   8849          XC    696(8,13),696(13)
00005750 E548 D2C0 0003          000002C0   8850          MVGHI 704(13),3
00005756 D707 D2C8 D2C8 000002C8 000002C8   8851          XC    712(8,13),712(13)
0000575C E330 C100 0004          00005548   8852          LG    3,@lit_1923_245
00005762 4140 32C2               000002C2   8853          LA    4,706(0,3)
00005766 E340 D2D0 0024          000002D0   8854          STG   4,720(0,13)
0000576C 4130 33C6               000003C6   8855          LA    3,966(0,3)
00005770 E330 D2D8 0024          000002D8   8856          STG   3,728(0,13)
00005776 E350 D2E0 0024          000002E0   8857          STG   5,736(0,13)
0000577C 4130 D0A8               000000A8   8858          LA    3,168(0,13)
00005780 E330 D2E8 0024          000002E8   8859          STG   3,744(0,13)
00005786 E3F0 D2F0 0024          000002F0   8860          STG   15,752(0,13)
0000578C E310 D2F8 0024          000002F8   8861          STG   1,760(0,13)
00005792 4110 D2A8               000002A8   8862          LA    1,680(0,13)
00005796 E3F0 C0F8 0004          00005540   8863          LG    15,@lit_1923_246 ; rd_kafka_log0
0000579C                                    8864 @@gen_label382 DS    0H
0000579C 05EF                               8865          BALR  14,15
0000579E                                    8866 @@gen_label383 DS    0H
                                            8867 * ***
                                            8868 * ***
                                            8869 * ***
                                            8870 * ***
                                            8871 * ***
                                            8872 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_ABORTABL\
                                            8873 * E_ERROR);
0000579E E320 D2A8 0024          000002A8   8874          STG   2,680(0,13)
000057A4 E548 D2B0 000A          000002B0   8875          MVGHI 688(13),10
000057AA 4110 D2A8               000002A8   8876          LA    1,680(0,13)
000057AE E3F0 C138 0004          00005580   8877          LG    15,@lit_1923_263 ; rd_kafka_txn_set_state
000057B4                                    8878 @@gen_label384 DS    0H
000057B4 05EF                               8879          BALR  14,15
000057B6                                    8880 @@gen_label385 DS    0H
                                            8881 * ***           rwlock_wrunlock(&(rk)->rk_lock);
000057B6 41F0 29A0               000009A0   8882          LA    15,2464(0,2)
000057BA E3F0 D2A8 0024          000002A8   8883          STG   15,680(0,13)
                                                                                                                           Page  182 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000057C0 4110 D2A8               000002A8   8884          LA    1,680(0,13)
000057C4 E3F0 C118 0004          00005560   8885          LG    15,@lit_1923_254 ; rwlock_wrunlock
000057CA                                    8886 @@gen_label386 DS    0H
000057CA 05EF                               8887          BALR  14,15
000057CC                                    8888 @@gen_label387 DS    0H
                                            8889 * ***
                                            8890 * ***
                                            8891 * ***           rd_kafka_purge(rk,
                                            8892 * ***                          0x1 |
000057CC E320 D2A8 0024          000002A8   8893          STG   2,680(0,13)
                                            8894 * ***                          0x100 |
                                            8895 * ***                          0x4);
000057D2 E548 D2B0 0105          000002B0   8896          MVGHI 688(13),261
000057D8 4110 D2A8               000002A8   8897          LA    1,680(0,13)
000057DC E3F0 C140 0004          00005588   8898          LG    15,@lit_1923_265 ; rd_kafka_purge
000057E2                                    8899 @@gen_label388 DS    0H
000057E2 05EF                               8900          BALR  14,15
000057E4                                    8901 @@gen_label389 DS    0H
                                            8902 * ***
                                            8903 * ***   }
000057E4                                    8904 @ret_lab_1923 DS 0H
                                            8905 * * **** Start of Epilogue
                                            8906          DCCEPIL
000057E4                                    8907+         ds 0h                                                          01-DCCEP
                                            8908+* Epilog
000057E4 D707 D088 D088 00000088 00000088   8909+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000057EA E3D0 D080 0004          00000080   8910+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000057F0 E3C0 D090 0004          00000090   8911+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000057F6 E3B0 C018 0004          00000018   8912+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000057FC E3C0 B010 0021          00000010   8913+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005802 E3E0 D008 0004          00000008   8914+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005808 EB1C D020 0004          00000020   8915+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000580E 078E                               8916+         bcr 8,14                if same dsab, just return              01-DCCEP
00005810 E3F0 D010 0024          00000010   8917+         stg 15,16(0,13)         save return code                       01-DCCEP
00005816 E300 D018 0024          00000018   8918+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000581C E3F0 D090 0004          00000090   8919+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005822 E3F0 F018 0004          00000018   8920+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005828 47F0 F040               00000040   8921+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8922+* End of Epilog
                                            8923 * * **** End of Epilogue
                                            8924          DROP  12
                                            8925 *
                                            8926 *   DSECT for automatic variables in "rd_kafka_txn_set_abortable_error
                                            8927 *           0"
                                            8928 *      (FUNCTION #1923)
                                            8929 *
00000000                00000000 000002A8   8930 @AUTO#rd_kafka_txn_set_abortable_error0 DSECT
00000000                                    8931          DS    XL168
000000A8                                    8932 rd_kafka_txn_set_abortable_error0#errstr#0 DS 512XL1 ; errstr
                                            8933 *
0000582C                00000000 00014658   8934 @CODE    CSECT
                                            8935 *
                                                                                                                           Page  183 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8936 *
                                            8937 *
                                            8938 * ....... start of rd_kafka_txn_curr_api_reply_error
0000582C                                    8939 @LNAME1996 DS  0H
0000582C 00000021                           8940          DC    X'00000021'
00005830 99846D9281869281                   8941          DC    C'rd_kafka_txn_curr_api_reply_erro'
00005850 99                                 8942          DC    C'r'
00005851 00                                 8943          DC    X'00'
                                            8944 rd_kafka_txn_curr_api_reply_error DCCPRLG CINDEX=1996,BASER=12,FRAME=19*
                                                                2,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1996
                                            8945          macro
                                            8946          dccextrn &m
                                            8947          gblc    &$dccext(1000)
                                            8948          gbla    &$dccexti
                                            8949          lcla    &i
                                            8950 &$dccext(&$dccexti+1) setc    '&m'
                                            8951 &i       seta    1
                                            8952 .loop    aif    (&i gt &$dccexti).around
                                            8953          aif    ('&$dccext(&i)' eq '&m').getout
                                            8954 &i       seta    &i+1
                                            8955          ago     .loop
                                            8956 .around  anop
                                            8957 &$dccexti seta &$dccexti+1
                                            8958          extrn  &m
                                            8959 .getout  anop
                                            8960          mend
00005858                                    8961+$eye0195    ds    0d                                                    02-DCCCA
00005858 C4C3C3                             8962+         dc cl3'DCC'                                                    02-DCCCA
0000585B 01                                 8963+         dc xl1'01' format one                                          02-DCCCA
0000585C 00000000                           8964+         dc a(0)                                                        02-DCCCA
00005860 00000000000058CA                   8965+         dc ad(@PER_1996)                                               02-DCCCA
00005868 00000000000000C0                   8966+         dc ad(192)                                                     02-DCCCA
00005870 0000000000000000                   8967+         dc ad(0)                                                       02-DCCCA
00005878 0000000000001000                   8968+         dc ad(4096)                                                    02-DCCCA
00005880 20                                 8969+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005881 03                                 8970+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005882 03                                 8971+         dc al1(3)                                                      02-DCCCA
00005883 08                                 8972+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005884 00                                 8973+         dc bl.8'00000000'                                              02-DCCCA
00005885 000000                             8974+         dc al3(0)                                                      02-DCCCA
00005888 000000000000582C                   8975+         dc ad(@LNAME1996)                                              02-DCCCA
00005890                                    8976+         ds 0d                                                          02-DCCCA
00005890 0000000000005858                   8977+         dc ad($eye0195)                                                02-DCCCA
00005898 0000000000000000                   8978+         dc ad(0)                                                       02-DCCCA
000058A0                                    8979+         ds    0d                                                       01-DCCPR
000058A0                                    8980+rd_kafka_txn_curr_api_reply_error ds 0d                                 01-DCCPR
000058A0                                    8981+@REGION_1996_1 ds 0h                                                    01-DCCPR
000058A0 EBEC D008 0024          00000008   8982+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000058A6 E3E0 D088 0004          00000088   8983+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000058AC E3C0 D090 0004          00000090   8984+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000058B2 B904 002E                          8985+         lgr   2,14                copy addr of our savearea            01-DCCPR
000058B6 E3B0 C018 0004          00000018   8986+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  184 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000058BC A7EB 00C0               000000C0   8987+         aghi  14,192              increase by frame size               01-DCCPR
000058C0 E3E0 C020 0021          00000020   8988+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000058C6 4720 B020               00000020   8989+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000058CA                                    8990+@PER_1996 ds   0h                                                       01-DCCPR
000058CA EBDE 2080 0024          00000080   8991+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000058D0 E3C0 2090 0024          00000090   8992+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000058D6 B904 00D2                          8993+         lgr   13,2                set real frame pointer               01-DCCPR
000058DA B904 00CF                          8994+         lgr   12,15               set base reg                         01-DCCPR
                        000058A0            8995+         using @REGION_1996_1,12                                        01-DCCPR
                                            8996 * ******* End of Prologue
                                            8997 * *
000058DE EB23 1000 0004          00000000   8998          LMG   2,3,0(1)    ; rkq
                                            8999 * ***           rd_kafka_op_t *rko;
                                            9000 * ***
                                            9001 * ***           if (!rkq) {
000058E4 B902 00F2                          9002          LTGR  15,2
000058E8 4770 C0A0               00005940   9003          BNZ   @L758
                                            9004 * ***                   if (error)
000058EC B902 00F3                          9005          LTGR  15,3
000058F0 4780 C116               000059B6   9006          BZ    @ret_lab_1996
                                            9007 * ***                           rd_kafka_error_destroy(error);
000058F4 E330 D0B0 0024          000000B0   9008          STG   3,176(0,13)
000058FA 4110 D0B0               000000B0   9009          LA    1,176(0,13)
000058FE E3F0 C078 0004          00005918   9010          LG    15,@lit_1996_267 ; rd_kafka_error_destroy
00005904                                    9011 @@gen_label392 DS    0H
00005904 05EF                               9012          BALR  14,15
00005906                                    9013 @@gen_label393 DS    0H
00005906                                    9014 @L759    DS    0H
                                            9015 * ***                   return;
00005906 47F0 C116               000059B6   9016          B     @ret_lab_1996
00005910                                    9017          DS    0D
00005910 000000C0                           9018 @FRAMESIZE_1996 DC F'192'
00005914 00000000
00005918 0000000000000000                   9019 @lit_1996_267 DC AD(rd_kafka_error_destroy)
00005920 0000000000000000                   9020 @lit_1996_269 DC AD(rd_kafka_op_new0)
00005928 0000000000000000                   9021 @lit_1996_270 DC AD(rd_kafka_error_code)
00005930 0000000000002C00                   9022 @lit_1996_271 DC AD(rd_kafka_q_enq)
00005938 0000000000001FC8                   9023 @lit_1996_272 DC AD(rd_kafka_q_destroy0)
                                            9024 * ***           }
00005940                                    9025 @L758    DS    0H
                                            9026 * ***
                                            9027 * ***           rko = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_TXN|(i\
                                            9028 * nt)(1 << 30));
00005940 D707 D0B0 D0B0 000000B0 000000B0   9029          XC    176(8,13),176(13)
00005946 C0FF 4000 002F                     9030          LLILF 15,X'4000002F' ; 1073741871
0000594C E3F0 D0B8 0024          000000B8   9031          STG   15,184(0,13)
00005952 4110 D0B0               000000B0   9032          LA    1,176(0,13)
00005956 E3F0 C080 0004          00005920   9033          LG    15,@lit_1996_269 ; rd_kafka_op_new0
0000595C                                    9034 @@gen_label394 DS    0H
0000595C 05EF                               9035          BALR  14,15
0000595E                                    9036 @@gen_label395 DS    0H
0000595E B904 004F                          9037          LGR   4,15
                                                                                                                           Page  185 
  Active Usings: @REGION_1996_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9038 * ***
                                            9039 * ***           if (error) {
00005962 B902 00F3                          9040          LTGR  15,3
00005966 4780 C0E6               00005986   9041          BZ    @L760
                                            9042 * ***                   rko->rko_error = error;
0000596A E330 4028 0024          00000028   9043          STG   3,40(0,4)   ; offset of rko_error in rd_kafka_op_s
                                            9044 * ***                   rko->rko_err = rd_kafka_error_code(error);
00005970 E330 D0B0 0024          000000B0   9045          STG   3,176(0,13)
00005976 4110 D0B0               000000B0   9046          LA    1,176(0,13)
0000597A E3F0 C088 0004          00005928   9047          LG    15,@lit_1996_270 ; rd_kafka_error_code
00005980                                    9048 @@gen_label397 DS    0H
00005980 05EF                               9049          BALR  14,15
00005982                                    9050 @@gen_label398 DS    0H
00005982 50F0 4020               00000020   9051          ST    15,32(0,4)
                                            9052 * ***           }
00005986                                    9053 @L760    DS    0H
                                            9054 * ***
                                            9055 * ***           rd_kafka_q_enq(rkq, rko);
00005986 E320 D0B0 0024          000000B0   9056          STG   2,176(0,13)
0000598C E340 D0B8 0024          000000B8   9057          STG   4,184(0,13)
00005992 4110 D0B0               000000B0   9058          LA    1,176(0,13)
00005996 E3F0 C090 0004          00005930   9059          LG    15,@lit_1996_271 ; rd_kafka_q_enq
0000599C                                    9060 @@gen_label399 DS    0H
0000599C 05EF                               9061          BALR  14,15
0000599E                                    9062 @@gen_label400 DS    0H
                                            9063 * ***
                                            9064 * ***           rd_kafka_q_destroy0(rkq, 0 );
0000599E E320 D0B0 0024          000000B0   9065          STG   2,176(0,13)
000059A4 D707 D0B8 D0B8 000000B8 000000B8   9066          XC    184(8,13),184(13)
000059AA 4110 D0B0               000000B0   9067          LA    1,176(0,13)
000059AE E3F0 C098 0004          00005938   9068          LG    15,@lit_1996_272 ; rd_kafka_q_destroy0
000059B4                                    9069 @@gen_label401 DS    0H
000059B4 05EF                               9070          BALR  14,15
000059B6                                    9071 @@gen_label402 DS    0H
                                            9072 * ***   }
000059B6                                    9073 @ret_lab_1996 DS 0H
                                            9074 * * **** Start of Epilogue
                                            9075          DCCEPIL
000059B6                                    9076+         ds 0h                                                          01-DCCEP
                                            9077+* Epilog
000059B6 D707 D088 D088 00000088 00000088   9078+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000059BC E3D0 D080 0004          00000080   9079+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000059C2 E3C0 D090 0004          00000090   9080+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000059C8 E3B0 C018 0004          00000018   9081+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000059CE E3C0 B010 0021          00000010   9082+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000059D4 E3E0 D008 0004          00000008   9083+         lg  14,8(0,13)          load up return address                 01-DCCEP
000059DA EB1C D020 0004          00000020   9084+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000059E0 078E                               9085+         bcr 8,14                if same dsab, just return              01-DCCEP
000059E2 E3F0 D010 0024          00000010   9086+         stg 15,16(0,13)         save return code                       01-DCCEP
000059E8 E300 D018 0024          00000018   9087+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059EE E3F0 D090 0004          00000090   9088+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059F4 E3F0 F018 0004          00000018   9089+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  186 
  Active Usings: @REGION_1996_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000059FA 47F0 F040               00000040   9090+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9091+* End of Epilog
                                            9092 * * **** End of Epilogue
                                            9093          DROP  12
                                            9094 *
                                            9095 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_reply_erro
                                            9096 *           r"
                                            9097 *      (FUNCTION #1996)
                                            9098 *
00000000                00000000 000000A8   9099 @AUTO#rd_kafka_txn_curr_api_reply_error DSECT
00000000                                    9100          DS    XL168
                                            9101 *
000059FE                00000000 00014658   9102 @CODE    CSECT
                                            9103 *
                                            9104 *
                                            9105 *
                                            9106 * ....... start of rd_kafka_txn_curr_api_reply
000059FE                                    9107 @LNAME2003 DS  0H
000059FE 0000001B                           9108          DC    X'0000001B'
00005A02 99846D9281869281                   9109          DC    C'rd_kafka_txn_curr_api_reply'
00005A1D 00                                 9110          DC    X'00'
                                            9111 rd_kafka_txn_curr_api_reply DCCPRLG CINDEX=2003,BASER=12,FRAME=200,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2003
                                            9112          macro
                                            9113          dccextrn &m
                                            9114          gblc    &$dccext(1000)
                                            9115          gbla    &$dccexti
                                            9116          lcla    &i
                                            9117 &$dccext(&$dccexti+1) setc    '&m'
                                            9118 &i       seta    1
                                            9119 .loop    aif    (&i gt &$dccexti).around
                                            9120          aif    ('&$dccext(&i)' eq '&m').getout
                                            9121 &i       seta    &i+1
                                            9122          ago     .loop
                                            9123 .around  anop
                                            9124 &$dccexti seta &$dccexti+1
                                            9125          extrn  &m
                                            9126 .getout  anop
                                            9127          mend
00005A20                                    9128+$eye0198    ds    0d                                                    02-DCCCA
00005A20 C4C3C3                             9129+         dc cl3'DCC'                                                    02-DCCCA
00005A23 01                                 9130+         dc xl1'01' format one                                          02-DCCCA
00005A24 00000000                           9131+         dc a(0)                                                        02-DCCCA
00005A28 0000000000005A92                   9132+         dc ad(@PER_2003)                                               02-DCCCA
00005A30 00000000000000C8                   9133+         dc ad(200)                                                     02-DCCCA
00005A38 0000000000000000                   9134+         dc ad(0)                                                       02-DCCCA
00005A40 0000000000001000                   9135+         dc ad(4096)                                                    02-DCCCA
00005A48 20                                 9136+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005A49 03                                 9137+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005A4A 03                                 9138+         dc al1(3)                                                      02-DCCCA
00005A4B 08                                 9139+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005A4C 00                                 9140+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  187 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005A4D 000000                             9141+         dc al3(0)                                                      02-DCCCA
00005A50 00000000000059FE                   9142+         dc ad(@LNAME2003)                                              02-DCCCA
00005A58                                    9143+         ds 0d                                                          02-DCCCA
00005A58 0000000000005A20                   9144+         dc ad($eye0198)                                                02-DCCCA
00005A60 0000000000000000                   9145+         dc ad(0)                                                       02-DCCCA
00005A68                                    9146+         ds    0d                                                       01-DCCPR
00005A68                                    9147+rd_kafka_txn_curr_api_reply ds 0d                                       01-DCCPR
00005A68                                    9148+@REGION_2003_1 ds 0h                                                    01-DCCPR
00005A68 EBEC D008 0024          00000008   9149+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005A6E E3E0 D088 0004          00000088   9150+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005A74 E3C0 D090 0004          00000090   9151+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005A7A B904 002E                          9152+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005A7E E3B0 C018 0004          00000018   9153+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005A84 A7EB 00C8               000000C8   9154+         aghi  14,200              increase by frame size               01-DCCPR
00005A88 E3E0 C020 0021          00000020   9155+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005A8E 4720 B020               00000020   9156+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005A92                                    9157+@PER_2003 ds   0h                                                       01-DCCPR
00005A92 EBDE 2080 0024          00000080   9158+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005A98 E3C0 2090 0024          00000090   9159+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005A9E B904 00D2                          9160+         lgr   13,2                set real frame pointer               01-DCCPR
00005AA2 B904 00CF                          9161+         lgr   12,15               set base reg                         01-DCCPR
                        00005A68            9162+         using @REGION_2003_1,12                                        01-DCCPR
00005AA6 B904 0041                          9163          LGR   4,1         ; ptr to parm area
                                            9164 * ******* End of Prologue
                                            9165 * *
                                            9166 * ***           rd_kafka_error_t *error = ((void *)0);
00005AAA 5830 400C               0000000C   9167          L     3,12(0,4)   ; actions
00005AAE A729 0000               00000000   9168          LGHI  2,0         ; 0
                                            9169 * ***
                                            9170 * ***           if (err) {
00005AB2 E3F0 4014 0012          00000014   9171          LT    15,20(0,4)  ; err
00005AB8 4780 C110               00005B78   9172          BZ    @L761
                                            9173 * ***                   va_list ap;
                                            9174 * ***                   ((ap) = (va_list)&(errstr_fmt) + ((__builtin_c\
                                            9175 * lassify_type(errstr_fmt) == 1 || __builtin_classify_type(errstr_fmt)\
                                            9176 *  == 2 || __builtin_classify_type(errstr_fmt) == 4) ? sizeof(errstr_f\
                                            9177 * mt) : (((sizeof(errstr_fmt) + sizeof(long) - 1) & ~(sizeof(long) -1)\
                                            9178 * ))));
00005ABC 4110 4020               00000020   9179          LA    1,32(0,4)
                                            9180 * ***                   error = rd_kafka_error_new_v(err, errstr_fmt, \
                                            9181 * ap);
00005AC0 B914 00FF                          9182          LGFR  15,15
00005AC4 E3F0 D0B0 0024          000000B0   9183          STG   15,176(0,13)
00005ACA E3F0 4018 0004          00000018   9184          LG    15,24(0,4)  ; errstr_fmt
00005AD0 E3F0 D0B8 0024          000000B8   9185          STG   15,184(0,13)
00005AD6 E310 D0C0 0024          000000C0   9186          STG   1,192(0,13)
00005ADC 4110 D0B0               000000B0   9187          LA    1,176(0,13)
00005AE0 E3F0 C0B0 0004          00005B18   9188          LG    15,@lit_2003_275 ; rd_kafka_error_new_v
00005AE6                                    9189 @@gen_label404 DS    0H
00005AE6 05EF                               9190          BALR  14,15
00005AE8                                    9191 @@gen_label405 DS    0H
00005AE8 B904 002F                          9192          LGR   2,15        ; error
                                                                                                                           Page  188 
  Active Usings: @REGION_2003_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9193 * ***                   ;
                                            9194 * ***
                                            9195 * ***                   if (actions & 0x200)
00005AEC 18F3                               9196          LR    15,3
00005AEE C0FB 0000 0200                     9197          NILF  15,X'00000200'
00005AF4 12FF                               9198          LTR   15,15
00005AF6 4780 C0D8               00005B40   9199          BZ    @L762
                                            9200 * ***                           rd_kafka_error_set_fatal(error);
00005AFA E320 D0B0 0024          000000B0   9201          STG   2,176(0,13)
00005B00 4110 D0B0               000000B0   9202          LA    1,176(0,13)
00005B04 E3F0 C0B8 0004          00005B20   9203          LG    15,@lit_2003_276 ; rd_kafka_error_set_fatal
00005B0A                                    9204 @@gen_label407 DS    0H
00005B0A 05EF                               9205          BALR  14,15
00005B0C                                    9206 @@gen_label408 DS    0H
00005B0C 47F0 C110               00005B78   9207          B     @L763
00005B10                                    9208          DS    0D
00005B10 000000C8                           9209 @FRAMESIZE_2003 DC F'200'
00005B14 00000000
00005B18 0000000000000000                   9210 @lit_2003_275 DC AD(rd_kafka_error_new_v)
00005B20 0000000000000000                   9211 @lit_2003_276 DC AD(rd_kafka_error_set_fatal)
00005B28 0000000000000000                   9212 @lit_2003_277 DC AD(rd_kafka_error_set_txn_requires_abort)
00005B30 0000000000000000                   9213 @lit_2003_278 DC AD(rd_kafka_error_set_retriable)
00005B38 00000000000058A0                   9214 @lit_2003_279 DC AD(rd_kafka_txn_curr_api_reply_error)
                                            9215 * ***                   else if (actions & 0x1)
00005B40                                    9216 @L762    DS    0H
00005B40 A731 0001               00000001   9217          TML   3,1
00005B44 4780 C0F6               00005B5E   9218          BZ    @L764
                                            9219 * ***                           rd_kafka_error_set_txn_requires_abort(\
                                            9220 * error);
00005B48 E320 D0B0 0024          000000B0   9221          STG   2,176(0,13)
00005B4E 4110 D0B0               000000B0   9222          LA    1,176(0,13)
00005B52 E3F0 C0C0 0004          00005B28   9223          LG    15,@lit_2003_277 ; rd_kafka_error_set_txn_requires_abort
00005B58                                    9224 @@gen_label410 DS    0H
00005B58 05EF                               9225          BALR  14,15
00005B5A                                    9226 @@gen_label411 DS    0H
00005B5A 47F0 C110               00005B78   9227          B     @L763
                                            9228 * ***                   else if (actions & 0x8)
00005B5E                                    9229 @L764    DS    0H
00005B5E A731 0008               00000008   9230          TML   3,8
00005B62 4780 C110               00005B78   9231          BZ    @L763
                                            9232 * ***                           rd_kafka_error_set_retriable(error);
00005B66 E320 D0B0 0024          000000B0   9233          STG   2,176(0,13)
00005B6C 4110 D0B0               000000B0   9234          LA    1,176(0,13)
00005B70 E3F0 C0C8 0004          00005B30   9235          LG    15,@lit_2003_278 ; rd_kafka_error_set_retriable
00005B76                                    9236 @@gen_label413 DS    0H
00005B76 05EF                               9237          BALR  14,15
00005B78                                    9238 @@gen_label414 DS    0H
00005B78                                    9239 @L766    DS    0H
                                            9240 * ***           }
00005B78                                    9241 @L765    DS    0H
00005B78                                    9242 @L763    DS    0H
00005B78                                    9243 @L761    DS    0H
                                                                                                                           Page  189 
  Active Usings: @REGION_2003_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9244 * ***
                                            9245 * ***           rd_kafka_txn_curr_api_reply_error(rkq, error);
00005B78 E3F0 4000 0004          00000000   9246          LG    15,0(0,4)   ; rkq
00005B7E E3F0 D0B0 0024          000000B0   9247          STG   15,176(0,13)
00005B84 E320 D0B8 0024          000000B8   9248          STG   2,184(0,13)
00005B8A 4110 D0B0               000000B0   9249          LA    1,176(0,13)
00005B8E E3F0 C0D0 0004          00005B38   9250          LG    15,@lit_2003_279 ; rd_kafka_txn_curr_api_reply_error
00005B94                                    9251 @@gen_label415 DS    0H
00005B94 05EF                               9252          BALR  14,15
00005B96                                    9253 @@gen_label416 DS    0H
                                            9254 * ***   }
00005B96                                    9255 @ret_lab_2003 DS 0H
                                            9256 * * **** Start of Epilogue
                                            9257          DCCEPIL
00005B96                                    9258+         ds 0h                                                          01-DCCEP
                                            9259+* Epilog
00005B96 D707 D088 D088 00000088 00000088   9260+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005B9C E3D0 D080 0004          00000080   9261+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005BA2 E3C0 D090 0004          00000090   9262+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005BA8 E3B0 C018 0004          00000018   9263+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005BAE E3C0 B010 0021          00000010   9264+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005BB4 E3E0 D008 0004          00000008   9265+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005BBA EB1C D020 0004          00000020   9266+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005BC0 078E                               9267+         bcr 8,14                if same dsab, just return              01-DCCEP
00005BC2 E3F0 D010 0024          00000010   9268+         stg 15,16(0,13)         save return code                       01-DCCEP
00005BC8 E300 D018 0024          00000018   9269+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005BCE E3F0 D090 0004          00000090   9270+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005BD4 E3F0 F018 0004          00000018   9271+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005BDA 47F0 F040               00000040   9272+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9273+* End of Epilog
                                            9274 * * **** End of Epilogue
                                            9275          DROP  12
                                            9276 *
                                            9277 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_reply"
                                            9278 *      (FUNCTION #2003)
                                            9279 *
00000000                00000000 000000A8   9280 @AUTO#rd_kafka_txn_curr_api_reply DSECT
00000000                                    9281          DS    XL168
                                            9282 *
00005BDE                00000000 00014658   9283 @CODE    CSECT
                                            9284 *
                                            9285 *
                                            9286 *
                                            9287 * ....... start of rd_kafka_txn_idemp_state_change
                                            9288 rd_kafka_txn_idemp_state_change ALIAS X'99846D92818692816DA3A7956D89848*
                                                                594976DA2A381A3856D838881958785'
00005BDE                                    9289 @LNAME1922 DS  0H
00005BDE 0000001F                           9290          DC    X'0000001F'
00005BE2 99846D9281869281                   9291          DC    C'rd_kafka_txn_idemp_state_change'
00005C01 00                                 9292          DC    X'00'
                                            9293 rd_kafka_txn_idemp_state_change DCCPRLG CINDEX=1922,BASER=12,FRAME=208,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1922
                                                                                                                           Page  190 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9294          macro
                                            9295          dccextrn &m
                                            9296          gblc    &$dccext(1000)
                                            9297          gbla    &$dccexti
                                            9298          lcla    &i
                                            9299 &$dccext(&$dccexti+1) setc    '&m'
                                            9300 &i       seta    1
                                            9301 .loop    aif    (&i gt &$dccexti).around
                                            9302          aif    ('&$dccext(&i)' eq '&m').getout
                                            9303 &i       seta    &i+1
                                            9304          ago     .loop
                                            9305 .around  anop
                                            9306 &$dccexti seta &$dccexti+1
                                            9307          extrn  &m
                                            9308 .getout  anop
                                            9309          mend
00005C08                                    9310+$eye0201    ds    0d                                                    02-DCCCA
00005C08 C4C3C3                             9311+         dc cl3'DCC'                                                    02-DCCCA
00005C0B 01                                 9312+         dc xl1'01' format one                                          02-DCCCA
00005C0C 00000000                           9313+         dc a(0)                                                        02-DCCCA
00005C10 0000000000005C7A                   9314+         dc ad(@PER_1922)                                               02-DCCCA
00005C18 00000000000000D0                   9315+         dc ad(208)                                                     02-DCCCA
00005C20 0000000000000000                   9316+         dc ad(0)                                                       02-DCCCA
00005C28 0000000000001000                   9317+         dc ad(4096)                                                    02-DCCCA
00005C30 20                                 9318+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005C31 03                                 9319+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005C32 03                                 9320+         dc al1(3)                                                      02-DCCCA
00005C33 08                                 9321+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005C34 00                                 9322+         dc bl.8'00000000'                                              02-DCCCA
00005C35 000000                             9323+         dc al3(0)                                                      02-DCCCA
00005C38 0000000000005BDE                   9324+         dc ad(@LNAME1922)                                              02-DCCCA
00005C40                                    9325+         ds 0d                                                          02-DCCCA
00005C40 0000000000005C08                   9326+         dc ad($eye0201)                                                02-DCCCA
00005C48 0000000000000000                   9327+         dc ad(0)                                                       02-DCCCA
00005C50                                    9328+         ds    0d                                                       01-DCCPR
                                            9329+         entry rd_kafka_txn_idemp_state_change                          01-DCCPR
00005C50                                    9330+rd_kafka_txn_idemp_state_change ds 0d                                   01-DCCPR
00005C50                                    9331+@REGION_1922_1 ds 0h                                                    01-DCCPR
00005C50 EBEC D008 0024          00000008   9332+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005C56 E3E0 D088 0004          00000088   9333+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005C5C E3C0 D090 0004          00000090   9334+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005C62 B904 002E                          9335+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005C66 E3B0 C018 0004          00000018   9336+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005C6C A7EB 00D0               000000D0   9337+         aghi  14,208              increase by frame size               01-DCCPR
00005C70 E3E0 C020 0021          00000020   9338+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005C76 4720 B020               00000020   9339+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005C7A                                    9340+@PER_1922 ds   0h                                                       01-DCCPR
00005C7A EBDE 2080 0024          00000080   9341+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005C80 E3C0 2090 0024          00000090   9342+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005C86 B904 00D2                          9343+         lgr   13,2                set real frame pointer               01-DCCPR
00005C8A B904 00CF                          9344+         lgr   12,15               set base reg                         01-DCCPR
                        00005C50            9345+         using @REGION_1922_1,12                                        01-DCCPR
                                                                                                                           Page  191 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9346 * ******* End of Prologue
                                            9347 * *
                                            9348 * ***           rd_bool_t reply_assigned = 0;
00005C8E E320 1000 0004          00000000   9349          LG    2,0(0,1)    ; rk
00005C94 58F0 100C               0000000C   9350          L     15,12(0,1)  ; idemp_state
00005C98 9200 D0A8      000000A8 00000000   9351          MVI   168(13),0   ; reply_assigned
                                            9352 * ***
                                            9353 * ***           if (idemp_state == RD_KAFKA_IDEMP_STATE_ASSIGNED &&
00005C9C A7FE 0006               00000006   9354          CHI   15,6
00005CA0 4770 C0B0               00005D00   9355          BNE   @L767
                                            9356 * ***               rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_WAIT_PI\
                                            9357 * D) {
00005CA4 E55C 2D38 0001          00000D38   9358          CHSI  3384(2),1
00005CAA 4770 C0B0               00005D00   9359          BNE   @L767
                                            9360 * ***
                                            9361 * ***                   do {} while (0);
00005CAE                                    9362 @L768    DS    0H
                                            9363 * ***                   rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_\
                                            9364 * READY_NOT_ACKED);
00005CAE E320 D0B0 0024          000000B0   9365          STG   2,176(0,13)
00005CB4 E548 D0B8 0002          000000B8   9366          MVGHI 184(13),2
00005CBA 4110 D0B0               000000B0   9367          LA    1,176(0,13)
00005CBE E3F0 C088 0004          00005CD8   9368          LG    15,@lit_1922_281 ; rd_kafka_txn_set_state
00005CC4                                    9369 @@gen_label419 DS    0H
00005CC4 05EF                               9370          BALR  14,15
00005CC6                                    9371 @@gen_label420 DS    0H
                                            9372 * ***                   reply_assigned = 1;
00005CC6 9201 D0A8      000000A8 00000001   9373          MVI   168(13),1   ; reply_assigned
                                            9374 * ***
                                            9375 * ***           } else if (idemp_state == RD_KAFKA_IDEMP_STATE_ASSIGNE\
                                            9376 * D &&
00005CCA 47F0 C19E               00005DEE   9377          B     @L771
00005CD0                                    9378          DS    0D
00005CD0 000000D0                           9379 @FRAMESIZE_1922 DC F'208'
00005CD4 00000000
00005CD8 0000000000004DE8                   9380 @lit_1922_281 DC AD(rd_kafka_txn_set_state)
00005CE0 0000000000014A98                   9381 @lit_1922_285 DC AD(@strings@)
00005CE8 0000000000000000                   9382 @lit_1922_287 DC AD(rd_kafka_error_new_fatal)
00005CF0 00000000000058A0                   9383 @lit_1922_288 DC AD(rd_kafka_txn_curr_api_reply_error)
00005CF8 0000000000005A68                   9384 @lit_1922_290 DC AD(rd_kafka_txn_curr_api_reply)
00005D00                                    9385 @L767    DS    0H
00005D00 A7FE 0006               00000006   9386          CHI   15,6
00005D04 4770 C0E2               00005D32   9387          BNE   @L772
                                            9388 * ***                      rk->rk_eos.txn_state ==
                                            9389 * ***                      RD_KAFKA_TXN_STATE_ABORTING_TRANSACTION) {
00005D08 E55C 2D38 0008          00000D38   9390          CHSI  3384(2),8
00005D0E 4770 C0E2               00005D32   9391          BNE   @L772
                                            9392 * ***
                                            9393 * ***
                                            9394 * ***                   rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_\
                                            9395 * ABORT_NOT_ACKED);
00005D12 E320 D0B0 0024          000000B0   9396          STG   2,176(0,13)
                                                                                                                           Page  192 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005D18 E548 D0B8 0009          000000B8   9397          MVGHI 184(13),9
00005D1E 4110 D0B0               000000B0   9398          LA    1,176(0,13)
00005D22 E3F0 C088 0004          00005CD8   9399          LG    15,@lit_1922_281 ; rd_kafka_txn_set_state
00005D28                                    9400 @@gen_label423 DS    0H
00005D28 05EF                               9401          BALR  14,15
00005D2A                                    9402 @@gen_label424 DS    0H
                                            9403 * ***                   reply_assigned = 1;
00005D2A 9201 D0A8      000000A8 00000001   9404          MVI   168(13),1   ; reply_assigned
                                            9405 * ***
                                            9406 * ***           } else if (idemp_state == RD_KAFKA_IDEMP_STATE_FATAL_E\
                                            9407 * RROR &&
00005D2E 47F0 C19E               00005DEE   9408          B     @L771
00005D32                                    9409 @L772    DS    0H
00005D32 A7FE 0002               00000002   9410          CHI   15,2
00005D36 4770 C19E               00005DEE   9411          BNE   @L771
                                            9412 * ***                      rk->rk_eos.txn_state != RD_KAFKA_TXN_STATE_\
                                            9413 * FATAL_ERROR) {
00005D3A E55C 2D38 000B          00000D38   9414          CHSI  3384(2),11
00005D40 4780 C19E               00005DEE   9415          BE    @L771
                                            9416 * ***
                                            9417 * ***
                                            9418 * ***                   rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_\
                                            9419 * FATAL_ERROR);
00005D44 E320 D0B0 0024          000000B0   9420          STG   2,176(0,13)
00005D4A E548 D0B8 000B          000000B8   9421          MVGHI 184(13),11
00005D50 4110 D0B0               000000B0   9422          LA    1,176(0,13)
00005D54 E3F0 C088 0004          00005CD8   9423          LG    15,@lit_1922_281 ; rd_kafka_txn_set_state
00005D5A                                    9424 @@gen_label427 DS    0H
00005D5A 05EF                               9425          BALR  14,15
00005D5C                                    9426 @@gen_label428 DS    0H
                                            9427 * ***                   if (rk->rk_eos.txn_init_rkq) {
00005D5C E3F0 2E08 0002          00000E08   9428          LTG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
00005D62 4780 C19E               00005DEE   9429          BZ    @L771
                                            9430 * ***
                                            9431 * ***
                                            9432 * ***
                                            9433 * ***                           rd_kafka_txn_curr_api_reply_error(
                                            9434 * ***                                   rk->rk_eos.txn_init_rkq,
                                            9435 * ***                                   rd_kafka_error_new_fatal(
                                            9436 * ***                                           rk->rk_eos.txn_err ?
                                            9437 * ***                                           "Fatal error raised by\
                                            9438 *  "
                                            9439 * ***                                           rk->rk_eos.txn_errstr \
                                            9440 * ?
00005D66 E3F0 2ED8 0012          00000ED8   9441          LT    15,3800(0,2) ; offset of txn_err in 0000146
00005D6C 4780 C128               00005D78   9442          BZ    @L776
                                            9443 * ***                                           rk->rk_eos.txn_err :
00005D70 58F0 2ED8               00000ED8   9444          L     15,3800(0,2) ; offset of txn_err in 0000146
00005D74 47F0 C12C               00005D7C   9445          B     @L777
00005D78                                    9446 @L776    DS    0H
                                            9447 * ***                                           RD_KAFKA_RESP_ERR__FAT\
                                            9448 * AL,
                                                                                                                           Page  193 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005D78 A7F8 FF6A               0000FF6A   9449          LHI   15,-150     ; -150
00005D7C                                    9450 @L777    DS    0H
00005D7C E310 2EE0 0002          00000EE0   9451          LTG   1,3808(0,2) ; offset of txn_errstr in 0000146
00005D82 4780 C140               00005D90   9452          BZ    @L778
                                            9453 * ***                                           rk->rk_eos.txn_errstr \
                                            9454 * :
00005D86 E310 2EE0 0004          00000EE0   9455          LG    1,3808(0,2) ; offset of txn_errstr in 0000146
00005D8C 47F0 C14A               00005D9A   9456          B     @L779
00005D90                                    9457 @L778    DS    0H
                                            9458 * ***                                           "see previous logs"));
00005D90 E310 C090 0004          00005CE0   9459          LG    1,@lit_1922_285
00005D96 4110 13F8               000003F8   9460          LA    1,1016(0,1)
00005D9A                                    9461 @L779    DS    0H
00005D9A B914 00FF                          9462          LGFR  15,15
00005D9E E3F0 D0B0 0024          000000B0   9463          STG   15,176(0,13)
                                            9464 * ***                                           "idempotent producer w\
                                            9465 * hile "
                                            9466 * ***                                           "retrieving PID: %s",
00005DA4 E3F0 C090 0004          00005CE0   9467          LG    15,@lit_1922_285
00005DAA 41F0 F40A               0000040A   9468          LA    15,1034(0,15)
00005DAE E3F0 D0B8 0024          000000B8   9469          STG   15,184(0,13)
00005DB4 E310 D0C0 0024          000000C0   9470          STG   1,192(0,13)
00005DBA 4110 D0B0               000000B0   9471          LA    1,176(0,13)
00005DBE E3F0 C098 0004          00005CE8   9472          LG    15,@lit_1922_287 ; rd_kafka_error_new_fatal
00005DC4                                    9473 @@gen_label432 DS    0H
00005DC4 05EF                               9474          BALR  14,15
00005DC6                                    9475 @@gen_label433 DS    0H
00005DC6 E310 2E08 0004          00000E08   9476          LG    1,3592(0,2)
00005DCC E310 D0B0 0024          000000B0   9477          STG   1,176(0,13)
00005DD2 E3F0 D0B8 0024          000000B8   9478          STG   15,184(0,13)
00005DD8 4110 D0B0               000000B0   9479          LA    1,176(0,13)
00005DDC E3F0 C0A0 0004          00005CF0   9480          LG    15,@lit_1922_288 ; rd_kafka_txn_curr_api_reply_error
00005DE2                                    9481 @@gen_label434 DS    0H
00005DE2 05EF                               9482          BALR  14,15
00005DE4                                    9483 @@gen_label435 DS    0H
                                            9484 * ***                           rk->rk_eos.txn_init_rkq = ((void *)0);
00005DE4 A7F9 0000               00000000   9485          LGHI  15,0        ; 0
00005DE8 E3F0 2E08 0024          00000E08   9486          STG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
                                            9487 * ***                   }
00005DEE                                    9488 @L775    DS    0H
                                            9489 * ***           }
00005DEE                                    9490 @L774    DS    0H
                                            9491 * ***
                                            9492 * ***           if (reply_assigned && rk->rk_eos.txn_init_rkq) {
00005DEE                                    9493 @L773    DS    0H
00005DEE                                    9494 @L771    DS    0H
00005DEE 9500 D0A8      000000A8 00000000   9495          CLI   168(13),0
00005DF2 4780 C1D8               00005E28   9496          BE    @L780
00005DF6 E3F0 2E08 0002          00000E08   9497          LTG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
00005DFC 4780 C1D8               00005E28   9498          BZ    @L780
                                            9499 * ***
                                            9500 * ***
                                                                                                                           Page  194 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9501 * ***
                                            9502 * ***                   rd_kafka_txn_curr_api_reply(rk->rk_eos.txn_ini\
                                            9503 * t_rkq, 0,
                                            9504 * ***                                               RD_KAFKA_RESP_ERR_\
                                            9505 * NO_ERROR,
                                            9506 * ***                                               ((void *)0));
00005E00 E3F0 2E08 0004          00000E08   9507          LG    15,3592(0,2)
00005E06 E3F0 D0B0 0024          000000B0   9508          STG   15,176(0,13)
00005E0C D717 D0B8 D0B8 000000B8 000000B8   9509          XC    184(24,13),184(13)
00005E12 4110 D0B0               000000B0   9510          LA    1,176(0,13)
00005E16 E3F0 C0A8 0004          00005CF8   9511          LG    15,@lit_1922_290 ; rd_kafka_txn_curr_api_reply
00005E1C                                    9512 @@gen_label438 DS    0H
00005E1C 05EF                               9513          BALR  14,15
00005E1E                                    9514 @@gen_label439 DS    0H
                                            9515 * ***                   rk->rk_eos.txn_init_rkq = ((void *)0);
00005E1E A7F9 0000               00000000   9516          LGHI  15,0        ; 0
00005E22 E3F0 2E08 0024          00000E08   9517          STG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
                                            9518 * ***           }
00005E28                                    9519 @L780    DS    0H
                                            9520 * ***
                                            9521 * ***
                                            9522 * ***   }
00005E28                                    9523 @ret_lab_1922 DS 0H
                                            9524 * * **** Start of Epilogue
                                            9525          DCCEPIL
00005E28                                    9526+         ds 0h                                                          01-DCCEP
                                            9527+* Epilog
00005E28 D707 D088 D088 00000088 00000088   9528+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005E2E E3D0 D080 0004          00000080   9529+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005E34 E3C0 D090 0004          00000090   9530+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005E3A E3B0 C018 0004          00000018   9531+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005E40 E3C0 B010 0021          00000010   9532+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005E46 E3E0 D008 0004          00000008   9533+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005E4C EB1C D020 0004          00000020   9534+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005E52 078E                               9535+         bcr 8,14                if same dsab, just return              01-DCCEP
00005E54 E3F0 D010 0024          00000010   9536+         stg 15,16(0,13)         save return code                       01-DCCEP
00005E5A E300 D018 0024          00000018   9537+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005E60 E3F0 D090 0004          00000090   9538+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005E66 E3F0 F018 0004          00000018   9539+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005E6C 47F0 F040               00000040   9540+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9541+* End of Epilog
                                            9542 * * **** End of Epilogue
                                            9543          DROP  12
                                            9544 *
                                            9545 *   DSECT for automatic variables in "rd_kafka_txn_idemp_state_change"
                                            9546 *      (FUNCTION #1922)
                                            9547 *
00000000                00000000 000000A9   9548 @AUTO#rd_kafka_txn_idemp_state_change DSECT
00000000                                    9549          DS    XL168
000000A8                                    9550 rd_kafka_txn_idemp_state_change#reply_assigned#0 DS 1CL1 ; reply_assign*
                                                                ed
                                            9551 *
                                                                                                                           Page  195 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005E70                00000000 00014658   9552 @CODE    CSECT
                                            9553 *
                                            9554 *
                                            9555 *
                                            9556 * ....... start of rd_kafka_txn_partition_registered
00005E70                                    9557 @LNAME2004 DS  0H
00005E70 00000021                           9558          DC    X'00000021'
00005E74 99846D9281869281                   9559          DC    C'rd_kafka_txn_partition_registere'
00005E94 84                                 9560          DC    C'd'
00005E95 00                                 9561          DC    X'00'
                                            9562 rd_kafka_txn_partition_registered DCCPRLG CINDEX=2004,BASER=12,FRAME=25*
                                                                6,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2004
                                            9563          macro
                                            9564          dccextrn &m
                                            9565          gblc    &$dccext(1000)
                                            9566          gbla    &$dccexti
                                            9567          lcla    &i
                                            9568 &$dccext(&$dccexti+1) setc    '&m'
                                            9569 &i       seta    1
                                            9570 .loop    aif    (&i gt &$dccexti).around
                                            9571          aif    ('&$dccext(&i)' eq '&m').getout
                                            9572 &i       seta    &i+1
                                            9573          ago     .loop
                                            9574 .around  anop
                                            9575 &$dccexti seta &$dccexti+1
                                            9576          extrn  &m
                                            9577 .getout  anop
                                            9578          mend
00005E98                                    9579+$eye0204    ds    0d                                                    02-DCCCA
00005E98 C4C3C3                             9580+         dc cl3'DCC'                                                    02-DCCCA
00005E9B 01                                 9581+         dc xl1'01' format one                                          02-DCCCA
00005E9C 00000000                           9582+         dc a(0)                                                        02-DCCCA
00005EA0 0000000000005F0A                   9583+         dc ad(@PER_2004)                                               02-DCCCA
00005EA8 0000000000000100                   9584+         dc ad(256)                                                     02-DCCCA
00005EB0 0000000000000000                   9585+         dc ad(0)                                                       02-DCCCA
00005EB8 0000000000001000                   9586+         dc ad(4096)                                                    02-DCCCA
00005EC0 20                                 9587+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005EC1 03                                 9588+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005EC2 03                                 9589+         dc al1(3)                                                      02-DCCCA
00005EC3 08                                 9590+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005EC4 00                                 9591+         dc bl.8'00000000'                                              02-DCCCA
00005EC5 000000                             9592+         dc al3(0)                                                      02-DCCCA
00005EC8 0000000000005E70                   9593+         dc ad(@LNAME2004)                                              02-DCCCA
00005ED0                                    9594+         ds 0d                                                          02-DCCCA
00005ED0 0000000000005E98                   9595+         dc ad($eye0204)                                                02-DCCCA
00005ED8 0000000000000000                   9596+         dc ad(0)                                                       02-DCCCA
00005EE0                                    9597+         ds    0d                                                       01-DCCPR
00005EE0                                    9598+rd_kafka_txn_partition_registered ds 0d                                 01-DCCPR
00005EE0                                    9599+@REGION_2004_1 ds 0h                                                    01-DCCPR
00005EE0 EBEC D008 0024          00000008   9600+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005EE6 E3E0 D088 0004          00000088   9601+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005EEC E3C0 D090 0004          00000090   9602+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005EF2 B904 002E                          9603+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005EF6 E3B0 C018 0004          00000018   9604+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005EFC A7EB 0100               00000100   9605+         aghi  14,256              increase by frame size               01-DCCPR
00005F00 E3E0 C020 0021          00000020   9606+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005F06 4720 B020               00000020   9607+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005F0A                                    9608+@PER_2004 ds   0h                                                       01-DCCPR
00005F0A EBDE 2080 0024          00000080   9609+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005F10 E3C0 2090 0024          00000090   9610+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005F16 B904 00D2                          9611+         lgr   13,2                set real frame pointer               01-DCCPR
00005F1A B904 00CF                          9612+         lgr   12,15               set base reg                         01-DCCPR
                        00005EE0            9613+         using @REGION_2004_1,12                                        01-DCCPR
                                            9614 * ******* End of Prologue
                                            9615 * *
                                            9616 * ***           rd_kafka_t *rk = rktp->rktp_rkt->rkt_rk;
00005F1E E320 1000 0004          00000000   9617          LG    2,0(0,1)    ; rktp
00005F24 E3F0 2060 0004          00000060   9618          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005F2A E330 F148 0004          00000148   9619          LG    3,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
                                            9620 * ***
                                            9621 * ***           mtx_lock(&(rktp)->rktp_lock);
00005F30 41F0 20C0               000000C0   9622          LA    15,192(0,2)
00005F34 E3F0 D0B0 0024          000000B0   9623          STG   15,176(0,13)
00005F3A 4110 D0B0               000000B0   9624          LA    1,176(0,13)
00005F3E E3F0 C0A8 0004          00005F88   9625          LG    15,@lit_2004_293 ; mtx_lock
00005F44                                    9626 @@gen_label440 DS    0H
00005F44 05EF                               9627          BALR  14,15
00005F46                                    9628 @@gen_label441 DS    0H
                                            9629 * ***
                                            9630 * ***           if (((!(rktp->rktp_flags & 0x100)))) {
00005F46 9101 22B2      000002B2 00000001   9631          TM    690(2),1
00005F4A 4770 C17E               0000605E   9632          BNZ   @L788
                                            9633 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000|0x80)\
                                            9634 * ))) rd_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000|0x80), "ADD\
                                            9635 * PARTS","\"%.*s\" [%" "d" "] is not in pending " "list but returned i\
                                            9636 * n AddPartitionsToTxn " "response: ignoring", (int)((rktp->rktp_rkt->\
                                            9637 * rkt_topic)->len == -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp\
                                            9638 * ->rktp_rkt->rkt_topic)->str, rktp->rktp_partition); } while (0);
00005F4E                                    9639 @L782    DS    0H
00005F4E 58F0 3320               00000320   9640          L     15,800(0,3)
00005F52 C0FB 0000 8080                     9641          NILF  15,X'00008080'
00005F58 12FF                               9642          LTR   15,15
00005F5A 4780 C164               00006044   9643          BZ    @L785
00005F5E E3F0 2060 0004          00000060   9644          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005F64 E3F0 F080 0004          00000080   9645          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005F6A E55C F000 FFFF          00000000   9646          CHSI  0(15),-1
00005F70 4770 C0D8               00005FB8   9647          BNE   @L786
00005F74 A7F8 0000               00000000   9648          LHI   15,0        ; 0
00005F78 47F0 C0E8               00005FC8   9649          B     @L787
00005F80                                    9650          DS    0D
00005F80 00000100                           9651 @FRAMESIZE_2004 DC F'256'
00005F84 00000000
00005F88 0000000000000000                   9652 @lit_2004_293 DC AD(mtx_lock)
00005F90 0000000000000000                   9653 @lit_2004_297 DC AD(rd_kafka_log0)
                                                                                                                           Page  197 
  Active Usings: @REGION_2004_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005F98 0000000000014A98                   9654 @lit_2004_296 DC AD(@strings@)
00005FA0 0000000000000000                   9655 @lit_2004_298 DC AD(mtx_unlock)
00005FA8 0000000000000000                   9656 @lit_2004_305 DC AD(__assert)
00005FB0 0000000000014658                   9657 @lit_2004_303 DC AD(@DATA)
00005FB8                                    9658 @L786    DS    0H
00005FB8 E3F0 2060 0004          00000060   9659          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005FBE E3F0 F080 0004          00000080   9660          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005FC4 58F0 F000               00000000   9661          L     15,0(0,15)
00005FC8                                    9662 @L787    DS    0H
00005FC8 4110 3210               00000210   9663          LA    1,528(0,3)
00005FCC E310 D0B0 0024          000000B0   9664          STG   1,176(0,13)
00005FD2 E330 D0B8 0024          000000B8   9665          STG   3,184(0,13)
00005FD8 D707 D0C0 D0C0 000000C0 000000C0   9666          XC    192(8,13),192(13)
00005FDE E548 D0C8 0007          000000C8   9667          MVGHI 200(13),7
00005FE4 C01F 0000 8080                     9668          LLILF 1,X'00008080' ; 32896
00005FEA E310 D0D0 0024          000000D0   9669          STG   1,208(0,13)
00005FF0 E310 C0B8 0004          00005F98   9670          LG    1,@lit_2004_296
00005FF6 4130 144E               0000044E   9671          LA    3,1102(0,1)
00005FFA E330 D0D8 0024          000000D8   9672          STG   3,216(0,13)
00006000 4110 1458               00000458   9673          LA    1,1112(0,1)
00006004 E310 D0E0 0024          000000E0   9674          STG   1,224(0,13)
0000600A B914 00FF                          9675          LGFR  15,15
0000600E E3F0 D0E8 0024          000000E8   9676          STG   15,232(0,13)
00006014 E3F0 2060 0004          00000060   9677          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000601A E3F0 F080 0004          00000080   9678          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00006020 E3F0 F008 0004          00000008   9679          LG    15,8(0,15)
00006026 E3F0 D0F0 0024          000000F0   9680          STG   15,240(0,13)
0000602C E3F0 2068 0014          00000068   9681          LGF   15,104(0,2)
00006032 E3F0 D0F8 0024          000000F8   9682          STG   15,248(0,13)
00006038 4110 D0B0               000000B0   9683          LA    1,176(0,13)
0000603C E3F0 C0B0 0004          00005F90   9684          LG    15,@lit_2004_297 ; rd_kafka_log0
00006042                                    9685 @@gen_label445 DS    0H
00006042 05EF                               9686          BALR  14,15
00006044                                    9687 @@gen_label446 DS    0H
00006044                                    9688 @L785    DS    0H
                                            9689 * ***   # 551 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                            9690 * ***                   mtx_unlock(&(rktp)->rktp_lock);
00006044 41F0 20C0               000000C0   9691          LA    15,192(0,2)
00006048 E3F0 D0B0 0024          000000B0   9692          STG   15,176(0,13)
0000604E 4110 D0B0               000000B0   9693          LA    1,176(0,13)
00006052 E3F0 C0C0 0004          00005FA0   9694          LG    15,@lit_2004_298 ; mtx_unlock
00006058                                    9695 @@gen_label447 DS    0H
00006058 05EF                               9696          BALR  14,15
0000605A                                    9697 @@gen_label448 DS    0H
                                            9698 * ***                   return;
0000605A 47F0 C342               00006222   9699          B     @ret_lab_2004
                                            9700 * ***           }
                                            9701 * ***
                                            9702 * ***           do { if ((((rk)->rk_conf.debug & (0x8000|0x4)))) rd_ka\
                                            9703 * fka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000|0x4), "ADDPARTS","%.\
                                            9704 * *s [%" "d" "] registered with transaction", (int)((rktp->rktp_rkt->r\
                                            9705 * kt_topic)->len == -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp-\
                                                                                                                           Page  198 
  Active Usings: @REGION_2004_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9706 * >rktp_rkt->rkt_topic)->str, rktp->rktp_partition); } while (0);
0000605E                                    9707 @L788    DS    0H
0000605E 58F0 3320               00000320   9708          L     15,800(0,3)
00006062 C0FB 0000 8004                     9709          NILF  15,X'00008004'
00006068 12FF                               9710          LTR   15,15
0000606A 4780 C238               00006118   9711          BZ    @L791
0000606E E3F0 2060 0004          00000060   9712          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006074 E3F0 F080 0004          00000080   9713          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000607A E55C F000 FFFF          00000000   9714          CHSI  0(15),-1
00006080 4770 C1AC               0000608C   9715          BNE   @L792
00006084 A7F8 0000               00000000   9716          LHI   15,0        ; 0
00006088 47F0 C1BC               0000609C   9717          B     @L793
0000608C                                    9718 @L792    DS    0H
0000608C E3F0 2060 0004          00000060   9719          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006092 E3F0 F080 0004          00000080   9720          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00006098 58F0 F000               00000000   9721          L     15,0(0,15)
0000609C                                    9722 @L793    DS    0H
0000609C 4110 3210               00000210   9723          LA    1,528(0,3)
000060A0 E310 D0B0 0024          000000B0   9724          STG   1,176(0,13)
000060A6 E330 D0B8 0024          000000B8   9725          STG   3,184(0,13)
000060AC D707 D0C0 D0C0 000000C0 000000C0   9726          XC    192(8,13),192(13)
000060B2 E548 D0C8 0007          000000C8   9727          MVGHI 200(13),7
000060B8 C01F 0000 8004                     9728          LLILF 1,X'00008004' ; 32772
000060BE E310 D0D0 0024          000000D0   9729          STG   1,208(0,13)
000060C4 E310 C0B8 0004          00005F98   9730          LG    1,@lit_2004_296
000060CA 4140 144E               0000044E   9731          LA    4,1102(0,1)
000060CE E340 D0D8 0024          000000D8   9732          STG   4,216(0,13)
000060D4 4110 14B2               000004B2   9733          LA    1,1202(0,1)
000060D8 E310 D0E0 0024          000000E0   9734          STG   1,224(0,13)
000060DE B914 00FF                          9735          LGFR  15,15
000060E2 E3F0 D0E8 0024          000000E8   9736          STG   15,232(0,13)
000060E8 E3F0 2060 0004          00000060   9737          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000060EE E3F0 F080 0004          00000080   9738          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000060F4 E3F0 F008 0004          00000008   9739          LG    15,8(0,15)
000060FA E3F0 D0F0 0024          000000F0   9740          STG   15,240(0,13)
00006100 E3F0 2068 0014          00000068   9741          LGF   15,104(0,2)
00006106 E3F0 D0F8 0024          000000F8   9742          STG   15,248(0,13)
0000610C 4110 D0B0               000000B0   9743          LA    1,176(0,13)
00006110 E3F0 C0B0 0004          00005F90   9744          LG    15,@lit_2004_297 ; rd_kafka_log0
00006116                                    9745 @@gen_label451 DS    0H
00006116 05EF                               9746          BALR  14,15
00006118                                    9747 @@gen_label452 DS    0H
00006118                                    9748 @L791    DS    0H
                                            9749 * ***
                                            9750 * ***
                                            9751 * ***
                                            9752 * ***
                                            9753 * ***           (((rktp->rktp_flags & (0x100| 0x200)) == 0x100) ? (voi\
                                            9754 * d)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_txn\
                                            9755 * mgr.c", 560, "(rktp->rktp_flags & (0x100| 0x200)) == 0x100"));
00006118 58F0 22B0               000002B0   9756          L     15,688(0,2) ; offset of rktp_flags in rd_kafka_toppar_s
0000611C C0FB 0000 0300                     9757          NILF  15,X'00000300'
                                                                                                                           Page  199 
  Active Usings: @REGION_2004_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006122 A7FE 0100               00000100   9758          CHI   15,256
00006126 4780 C286               00006166   9759          BE    @L795
0000612A                                    9760 @L794    DS    0H
0000612A E3F0 C0D0 0004          00005FB0   9761          LG    15,@lit_2004_303
00006130 41F0 F202               00000202   9762          LA    15,514(0,15)
00006134 E3F0 D0B0 0024          000000B0   9763          STG   15,176(0,13)
0000613A E3F0 C0B8 0004          00005F98   9764          LG    15,@lit_2004_296
00006140 4110 F1B2               000001B2   9765          LA    1,434(0,15)
00006144 E310 D0B8 0024          000000B8   9766          STG   1,184(0,13)
0000614A E548 D0C0 0230          000000C0   9767          MVGHI 192(13),560
00006150 41F0 F4D8               000004D8   9768          LA    15,1240(0,15)
00006154 E3F0 D0C8 0024          000000C8   9769          STG   15,200(0,13)
0000615A 4110 D0B0               000000B0   9770          LA    1,176(0,13)
0000615E E3F0 C0C8 0004          00005FA8   9771          LG    15,@lit_2004_305 ; __assert
00006164                                    9772 @@gen_label454 DS    0H
00006164 05EF                               9773          BALR  14,15
00006166                                    9774 @@gen_label455 DS    0H
00006166                                    9775 @L795    DS    0H
                                            9776 * ***
                                            9777 * ***
                                            9778 * ***
                                            9779 * ***           rktp->rktp_flags = (rktp->rktp_flags & ~0x100) |
                                            9780 * ***                   0x200;
00006166 58F0 22B0               000002B0   9781          L     15,688(0,2) ; offset of rktp_flags in rd_kafka_toppar_s
0000616A A5F7 FEFF               0000FEFF   9782          NILL  15,65279
0000616E A5FB 0200               00000200   9783          OILL  15,512
00006172 50F0 22B0               000002B0   9784          ST    15,688(0,2) ; offset of rktp_flags in rd_kafka_toppar_s
                                            9785 * ***
                                            9786 * ***           mtx_unlock(&(rktp)->rktp_lock);
00006176 41F0 20C0               000000C0   9787          LA    15,192(0,2)
0000617A E3F0 D0B0 0024          000000B0   9788          STG   15,176(0,13)
00006180 4110 D0B0               000000B0   9789          LA    1,176(0,13)
00006184 E3F0 C0C0 0004          00005FA0   9790          LG    15,@lit_2004_298 ; mtx_unlock
0000618A                                    9791 @@gen_label456 DS    0H
0000618A 05EF                               9792          BALR  14,15
0000618C                                    9793 @@gen_label457 DS    0H
                                            9794 * ***
                                            9795 * ***           mtx_lock(&rk->rk_eos.txn_pending_lock);
0000618C 41F0 3E50               00000E50   9796          LA    15,3664(0,3)
00006190 E3F0 D0B0 0024          000000B0   9797          STG   15,176(0,13)
00006196 4110 D0B0               000000B0   9798          LA    1,176(0,13)
0000619A E3F0 C0A8 0004          00005F88   9799          LG    15,@lit_2004_293 ; mtx_lock
000061A0                                    9800 @@gen_label458 DS    0H
000061A0 05EF                               9801          BALR  14,15
000061A2                                    9802 @@gen_label459 DS    0H
                                            9803 * ***           do {   if (((rktp)->rktp_txnlink .tqe_next) != (((void\
                                            9804 *  *)0))) (rktp)->rktp_txnlink .tqe_next->rktp_txnlink .tqe_prev = (rk\
                                            9805 * tp)->rktp_txnlink .tqe_prev; else (&rk->rk_eos.txn_waitresp_rktps)->\
                                            9806 * tqh_last = (rktp)->rktp_txnlink .tqe_prev; *(rktp)->rktp_txnlink .tq\
                                            9807 * e_prev = (rktp)->rktp_txnlink .tqe_next; ; } while ( 0);
000061A2                                    9808 @L796    DS    0H
000061A2 E3F0 2050 0002          00000050   9809          LTG   15,80(0,2)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                                                                           Page  200 
  Active Usings: @REGION_2004_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                s
000061A8 4780 C2E2               000061C2   9810          BE    @L799
000061AC E3F0 2050 0004          00000050   9811          LG    15,80(0,2)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000061B2 E310 2058 0004          00000058   9812          LG    1,88(0,2)   ; offset of tqe_prev in 0000134
000061B8 E310 F058 0024          00000058   9813          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
000061BE 47F0 C2EE               000061CE   9814          B     @L800
000061C2                                    9815 @L799    DS    0H
000061C2 E3F0 2058 0004          00000058   9816          LG    15,88(0,2)  ; offset of tqe_prev in 0000134
000061C8 E3F0 3E90 0024          00000E90   9817          STG   15,3728(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
000061CE                                    9818 @L800    DS    0H
000061CE E3F0 2058 0004          00000058   9819          LG    15,88(0,2)  ; offset of tqe_prev in 0000134
000061D4 E310 2050 0004          00000050   9820          LG    1,80(0,2)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000061DA E310 F000 0024          00000000   9821          STG   1,0(0,15)
                                            9822 * ***           mtx_unlock(&rk->rk_eos.txn_pending_lock);
000061E0 41F0 3E50               00000E50   9823          LA    15,3664(0,3)
000061E4 E3F0 D0B0 0024          000000B0   9824          STG   15,176(0,13)
000061EA 4110 D0B0               000000B0   9825          LA    1,176(0,13)
000061EE E3F0 C0C0 0004          00005FA0   9826          LG    15,@lit_2004_298 ; mtx_unlock
000061F4                                    9827 @@gen_label461 DS    0H
000061F4 05EF                               9828          BALR  14,15
000061F6                                    9829 @@gen_label462 DS    0H
                                            9830 * ***
                                            9831 * ***
                                            9832 * ***
                                            9833 * ***           do {  (rktp)->rktp_txnlink .tqe_next = (((void *)0)); \
                                            9834 * (rktp)->rktp_txnlink .tqe_prev = (&rk->rk_eos.txn_rktps)->tqh_last; \
                                            9835 * *(&rk->rk_eos.txn_rktps)->tqh_last = (rktp); (&rk->rk_eos.txn_rktps)\
                                            9836 * ->tqh_last = &(rktp)->rktp_txnlink .tqe_next; } while ( 0);
000061F6                                    9837 @L801    DS    0H
000061F6 A7F9 0000               00000000   9838          LGHI  15,0        ; 0
000061FA E3F0 2050 0024          00000050   9839          STG   15,80(0,2)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
00006200 E3F0 3EA0 0004          00000EA0   9840          LG    15,3744(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00006206 E3F0 2058 0024          00000058   9841          STG   15,88(0,2)  ; offset of tqe_prev in 0000134
0000620C E3F0 3EA0 0004          00000EA0   9842          LG    15,3744(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00006212 E320 F000 0024          00000000   9843          STG   2,0(0,15)
00006218 41F0 2050               00000050   9844          LA    15,80(0,2)
0000621C E3F0 3EA0 0024          00000EA0   9845          STG   15,3744(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
                                            9846 * ***   }
00006222                                    9847 @ret_lab_2004 DS 0H
                                            9848 * * **** Start of Epilogue
                                            9849          DCCEPIL
00006222                                    9850+         ds 0h                                                          01-DCCEP
                                            9851+* Epilog
00006222 D707 D088 D088 00000088 00000088   9852+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006228 E3D0 D080 0004          00000080   9853+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  201 
  Active Usings: @REGION_2004_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000622E E3C0 D090 0004          00000090   9854+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006234 E3B0 C018 0004          00000018   9855+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000623A E3C0 B010 0021          00000010   9856+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006240 E3E0 D008 0004          00000008   9857+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006246 EB1C D020 0004          00000020   9858+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000624C 078E                               9859+         bcr 8,14                if same dsab, just return              01-DCCEP
0000624E E3F0 D010 0024          00000010   9860+         stg 15,16(0,13)         save return code                       01-DCCEP
00006254 E300 D018 0024          00000018   9861+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000625A E3F0 D090 0004          00000090   9862+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006260 E3F0 F018 0004          00000018   9863+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006266 47F0 F040               00000040   9864+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9865+* End of Epilog
                                            9866 * * **** End of Epilogue
                                            9867          DROP  12
                                            9868 *
                                            9869 *   DSECT for automatic variables in "rd_kafka_txn_partition_registere
                                            9870 *           d"
                                            9871 *      (FUNCTION #2004)
                                            9872 *
00000000                00000000 000000A8   9873 @AUTO#rd_kafka_txn_partition_registered DSECT
00000000                                    9874          DS    XL168
                                            9875 *
0000626A                00000000 00014658   9876 @CODE    CSECT
                                            9877 *
                                            9878 *
                                            9879 *
                                            9880 * ....... start of rd_kafka_txn_handle_AddPartitionsToTxn
0000626A                                    9881 @LNAME2005 DS  0H
0000626A 00000026                           9882          DC    X'00000026'
0000626E 99846D9281869281                   9883          DC    C'rd_kafka_txn_handle_AddPartition'
0000628E A2E396E3A795                       9884          DC    C'sToTxn'
00006294 00                                 9885          DC    X'00'
                                            9886 rd_kafka_txn_handle_$Add$Partitions$To$Txn DCCPRLG CINDEX=2005,BASER=12*
                                                                ,FRAME=912,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2005
                                            9887          macro
                                            9888          dccextrn &m
                                            9889          gblc    &$dccext(1000)
                                            9890          gbla    &$dccexti
                                            9891          lcla    &i
                                            9892 &$dccext(&$dccexti+1) setc    '&m'
                                            9893 &i       seta    1
                                            9894 .loop    aif    (&i gt &$dccexti).around
                                            9895          aif    ('&$dccext(&i)' eq '&m').getout
                                            9896 &i       seta    &i+1
                                            9897          ago     .loop
                                            9898 .around  anop
                                            9899 &$dccexti seta &$dccexti+1
                                            9900          extrn  &m
                                            9901 .getout  anop
                                            9902          mend
00006298                                    9903+$eye0207    ds    0d                                                    02-DCCCA
00006298 C4C3C3                             9904+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000629B 01                                 9905+         dc xl1'01' format one                                          02-DCCCA
0000629C 00000000                           9906+         dc a(0)                                                        02-DCCCA
000062A0 000000000000630A                   9907+         dc ad(@PER_2005)                                               02-DCCCA
000062A8 0000000000000390                   9908+         dc ad(912)                                                     02-DCCCA
000062B0 0000000000000000                   9909+         dc ad(0)                                                       02-DCCCA
000062B8 0000000000001000                   9910+         dc ad(4096)                                                    02-DCCCA
000062C0 20                                 9911+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000062C1 03                                 9912+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000062C2 03                                 9913+         dc al1(3)                                                      02-DCCCA
000062C3 08                                 9914+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000062C4 00                                 9915+         dc bl.8'00000000'                                              02-DCCCA
000062C5 000000                             9916+         dc al3(0)                                                      02-DCCCA
000062C8 000000000000626A                   9917+         dc ad(@LNAME2005)                                              02-DCCCA
000062D0                                    9918+         ds 0d                                                          02-DCCCA
000062D0 0000000000006298                   9919+         dc ad($eye0207)                                                02-DCCCA
000062D8 0000000000000000                   9920+         dc ad(0)                                                       02-DCCCA
000062E0                                    9921+         ds    0d                                                       01-DCCPR
000062E0                                    9922+rd_kafka_txn_handle_$Add$Partitions$To$Txn ds 0d                        01-DCCPR
000062E0                                    9923+@REGION_2005_1 ds 0h                                                    01-DCCPR
000062E0 EBEC D008 0024          00000008   9924+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000062E6 E3E0 D088 0004          00000088   9925+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000062EC E3C0 D090 0004          00000090   9926+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000062F2 B904 002E                          9927+         lgr   2,14                copy addr of our savearea            01-DCCPR
000062F6 E3B0 C018 0004          00000018   9928+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000062FC A7EB 0390               00000390   9929+         aghi  14,912              increase by frame size               01-DCCPR
00006300 E3E0 C020 0021          00000020   9930+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006306 4720 B020               00000020   9931+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000630A                                    9932+@PER_2005 ds   0h                                                       01-DCCPR
0000630A EBDE 2080 0024          00000080   9933+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006310 E3C0 2090 0024          00000090   9934+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006316 B904 00D2                          9935+         lgr   13,2                set real frame pointer               01-DCCPR
0000631A B904 00CF                          9936+         lgr   12,15               set base reg                         01-DCCPR
                        000062E0            9937+         using @REGION_2005_1,12                                        01-DCCPR
0000631E B904 00A1                          9938          LGR   10,1
                                            9939 * ******* End of Prologue
                                            9940 * *
                                            9941 * ***           const int log_decode_errors = 3;
00006322 EB34 A000 0004          00000000   9942          LMG   3,4,0(10)   ; rk
00006328 5850 A014               00000014   9943          L     5,20(0,10)  ; err
0000632C E320 A018 0004          00000018   9944          LG    2,24(0,10)  ; rkbuf
                                            9945 * ***           int32_t TopicCnt;
                                            9946 * ***           int actions = 0;
00006332 A778 0000               00000000   9947          LHI   7,0         ; 0
                                            9948 * ***           int retry_backoff_ms = 500;
00006336 A7F8 01F4               000001F4   9949          LHI   15,500      ; 500
0000633A 50F0 D380               00000380   9950          ST    15,896(0,13) ; spill
                                            9951 * ***           rd_kafka_resp_err_t reset_coord_err = RD_KAFKA_RESP_ER\
                                            9952 * R_NO_ERROR;
0000633E 18B7                               9953          LR    11,7        ; reset_coord_err
                                            9954 * ***
                                            9955 * ***           if (err)
00006340 1255                               9956          LTR   5,5
                                                                                                                           Page  203 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006342 4780 C070               00006350   9957          BZ    *+14  Around region break
00006346 E3C0 C1F4 001A          000064D4   9958          ALGF  12,@lit_region_diff_2005_1_4
                                            9959          DROP  12
                        00007F34            9960          USING @REGION_2005_4,12
0000634C 47F0 C680               000085B4   9961          B     @_done@2005@0
                                            9962          DROP  12
                        000062E0            9963          USING @REGION_2005_1,12
                                            9964 * ***                   goto done;
00006350                                    9965 @L804    DS    0H
                                            9966 * ***
                                            9967 * ***           rwlock_rdlock(&(rk)->rk_lock);
00006350 41F0 39A0               000009A0   9968          LA    15,2464(0,3)
00006354 E3F0 D2F8 0024          000002F8   9969          STG   15,760(0,13)
0000635A 4110 D2F8               000002F8   9970          LA    1,760(0,13)
0000635E E3F0 C1F8 0004          000064D8   9971          LG    15,@lit_2005_315 ; rwlock_rdlock
00006364                                    9972 @@gen_label464 DS    0H
00006364 05EF                               9973          BALR  14,15
00006366                                    9974 @@gen_label465 DS    0H
                                            9975 * ***           ((rk->rk_eos.txn_state != RD_KAFKA_TXN_STATE_COMMITTIN\
                                            9976 * G_TRANSACTION) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdka\
                                            9977 * fka\\src\\rdkafka_txnmgr.c", 602, "rk->rk_eos.txn_state != RD_KAFKA_\
                                            9978 * TXN_STATE_COMMITTING_TRANSACTION"));
00006366 E55C 3D38 0006          00000D38   9979          CHSI  3384(3),6
0000636C 4770 C0CC               000063AC   9980          BNE   @L806
00006370                                    9981 @L805    DS    0H
00006370 E3F0 C210 0004          000064F0   9982          LG    15,@lit_2005_316
00006376 41F0 F224               00000224   9983          LA    15,548(0,15)
0000637A E3F0 D2F8 0024          000002F8   9984          STG   15,760(0,13)
00006380 E3F0 C208 0004          000064E8   9985          LG    15,@lit_2005_317
00006386 4110 F1B2               000001B2   9986          LA    1,434(0,15)
0000638A E310 D300 0024          00000300   9987          STG   1,768(0,13)
00006390 E548 D308 025A          00000308   9988          MVGHI 776(13),602
00006396 41F0 F506               00000506   9989          LA    15,1286(0,15)
0000639A E3F0 D310 0024          00000310   9990          STG   15,784(0,13)
000063A0 4110 D2F8               000002F8   9991          LA    1,760(0,13)
000063A4 E3F0 C200 0004          000064E0   9992          LG    15,@lit_2005_318 ; __assert
000063AA                                    9993 @@gen_label467 DS    0H
000063AA 05EF                               9994          BALR  14,15
000063AC                                    9995 @@gen_label468 DS    0H
000063AC                                    9996 @L806    DS    0H
                                            9997 * ***
                                            9998 * ***
                                            9999 * ***           if (rk->rk_eos.txn_state != RD_KAFKA_TXN_STATE_IN_TRAN\
                                           10000 * SACTION &&
000063AC E55C 3D38 0004          00000D38  10001          CHSI  3384(3),4
000063B2 4780 C290               00006570  10002          BE    @L807
                                           10003 * ***               rk->rk_eos.txn_state != RD_KAFKA_TXN_STATE_BEGIN_C\
                                           10004 * OMMIT) {
000063B6 E55C 3D38 0005          00000D38  10005          CHSI  3384(3),5
000063BC 4780 C290               00006570  10006          BE    @L807
                                           10007 * ***
                                           10008 * ***                   do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x8\
                                                                                                                           Page  204 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           10009 * 000)))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock\
                                           10010 * ); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unl\
                                           10011 * ock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf\
                                           10012 * , (rkb)->rkb_rk, _logname, 7, (0x8000), "ADDPARTS", "Ignoring outdat\
                                           10013 * ed AddPartitionsToTxn response in " "state %s", rd_kafka_txn_state2s\
                                           10014 * tr(rk->rk_eos.txn_state)); } while (0); } } while (0);
000063C0                                   10015 @L808    DS    0H
000063C0 E3F0 4FD0 0004          00000FD0  10016          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
000063C6 9180 F322      00000322 00000080  10017          TM    802(15),128
000063CA 4780 C1C6               000064A6  10018          BZ    @L811
000063CE                                   10019 @L812    DS    0H
000063CE A729 1638               00001638  10020          LGHI  2,5688      ; 5688
000063D2 41F2 4000               00000000  10021          LA    15,0(2,4)
000063D6 E3F0 D2F8 0024          000002F8  10022          STG   15,760(0,13)
000063DC 4110 D2F8               000002F8  10023          LA    1,760(0,13)
000063E0 E3F0 C218 0004          000064F8  10024          LG    15,@lit_2005_320 ; mtx_lock
000063E6                                   10025 @@gen_label472 DS    0H
000063E6 05EF                              10026          BALR  14,15
000063E8                                   10027 @@gen_label473 DS    0H
000063E8 41F0 D0E4               000000E4  10028          LA    15,228(0,13)
000063EC E3F0 D2F8 0024          000002F8  10029          STG   15,760(0,13)
000063F2 A7F9 1630               00001630  10030          LGHI  15,5680     ; 5680
000063F6 E3FF 4000 0004          00000000  10031          LG    15,0(15,4)
000063FC E3F0 D300 0024          00000300  10032          STG   15,768(0,13)
00006402 E548 D308 0100          00000308  10033          MVGHI 776(13),256
00006408 4110 D2F8               000002F8  10034          LA    1,760(0,13)
0000640C E3F0 C220 0004          00006500  10035          LG    15,@lit_2005_322 ; rd_strlcpy
00006412                                   10036 @@gen_label474 DS    0H
00006412 05EF                              10037          BALR  14,15
00006414                                   10038 @@gen_label475 DS    0H
00006414 41F2 4000               00000000  10039          LA    15,0(2,4)
00006418 E3F0 D2F8 0024          000002F8  10040          STG   15,760(0,13)
0000641E 4110 D2F8               000002F8  10041          LA    1,760(0,13)
00006422 E3F0 C228 0004          00006508  10042          LG    15,@lit_2005_324 ; mtx_unlock
00006428                                   10043 @@gen_label476 DS    0H
00006428 05EF                              10044          BALR  14,15
0000642A                                   10045 @@gen_label477 DS    0H
0000642A E3F0 3D38 0014          00000D38  10046          LGF   15,3384(0,3)
00006430 E3F0 D2F8 0024          000002F8  10047          STG   15,760(0,13)
00006436 4110 D2F8               000002F8  10048          LA    1,760(0,13)
0000643A E3F0 C230 0004          00006510  10049          LG    15,@lit_2005_325 ; rd_kafka_txn_state2str
00006440                                   10050 @@gen_label478 DS    0H
00006440 05EF                              10051          BALR  14,15
00006442                                   10052 @@gen_label479 DS    0H
00006442 E310 4FD0 0004          00000FD0  10053          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00006448 4110 1210               00000210  10054          LA    1,528(0,1)
0000644C E310 D2F8 0024          000002F8  10055          STG   1,760(0,13)
00006452 E310 4FD0 0004          00000FD0  10056          LG    1,4048(0,4)
00006458 E310 D300 0024          00000300  10057          STG   1,768(0,13)
0000645E 4110 D0E4               000000E4  10058          LA    1,228(0,13)
00006462 E310 D308 0024          00000308  10059          STG   1,776(0,13)
00006468 E548 D310 0007          00000310  10060          MVGHI 784(13),7
                                                                                                                           Page  205 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000646E C01F 0000 8000                    10061          LLILF 1,X'00008000' ; 32768
00006474 E310 D318 0024          00000318  10062          STG   1,792(0,13)
0000647A E310 C208 0004          000064E8  10063          LG    1,@lit_2005_317
00006480 4120 144E               0000044E  10064          LA    2,1102(0,1)
00006484 E320 D320 0024          00000320  10065          STG   2,800(0,13)
0000648A 4110 1548               00000548  10066          LA    1,1352(0,1)
0000648E E310 D328 0024          00000328  10067          STG   1,808(0,13)
00006494 E3F0 D330 0024          00000330  10068          STG   15,816(0,13)
0000649A 4110 D2F8               000002F8  10069          LA    1,760(0,13)
0000649E E3F0 C238 0004          00006518  10070          LG    15,@lit_2005_328 ; rd_kafka_log0
000064A4                                   10071 @@gen_label480 DS    0H
000064A4 05EF                              10072          BALR  14,15
000064A6                                   10073 @@gen_label481 DS    0H
000064A6                                   10074 @L811    DS    0H
                                           10075 * ***
                                           10076 * ***
                                           10077 * ***
                                           10078 * ***                   rwlock_rdunlock(&(rk)->rk_lock);
000064A6 41F0 39A0               000009A0  10079          LA    15,2464(0,3)
000064AA E3F0 D2F8 0024          000002F8  10080          STG   15,760(0,13)
000064B0 4110 D2F8               000002F8  10081          LA    1,760(0,13)
000064B4 E3F0 C240 0004          00006520  10082          LG    15,@lit_2005_329 ; rwlock_rdunlock
000064BA                                   10083 @@gen_label482 DS    0H
000064BA 05EF                              10084          BALR  14,15
000064BC                                   10085 @@gen_label483 DS    0H
                                           10086 * ***                   err = RD_KAFKA_RESP_ERR__OUTDATED;
000064BC A758 FF59               0000FF59  10087          LHI   5,-167      ; -167
                                           10088 * ***                   goto done;
000064C0 E3C0 C1F4 001A          000064D4  10089          ALGF  12,@lit_region_diff_2005_1_4
                                           10090          DROP  12
                        00007F34           10091          USING @REGION_2005_4,12
000064C6 47F0 C680               000085B4  10092          B     @_done@2005@0
                                           10093          DROP  12
                        000062E0           10094          USING @REGION_2005_1,12
000064D0                                   10095          DS    0D
000064D0 00000390                          10096 @FRAMESIZE_2005 DC F'912'
000064D4 00001C54                          10097 @lit_region_diff_2005_1_4  DC A(@REGION_2005_4-@REGION_2005_1)
000064D8 0000000000000000                  10098 @lit_2005_315 DC AD(rwlock_rdlock)
000064E0 0000000000000000                  10099 @lit_2005_318 DC AD(__assert)
000064E8 0000000000014A98                  10100 @lit_2005_317 DC AD(@strings@)
000064F0 0000000000014658                  10101 @lit_2005_316 DC AD(@DATA)
000064F8 0000000000000000                  10102 @lit_2005_320 DC AD(mtx_lock)
00006500 0000000000001BA8                  10103 @lit_2005_322 DC AD(rd_strlcpy)
00006508 0000000000000000                  10104 @lit_2005_324 DC AD(mtx_unlock)
00006510 0000000000004228                  10105 @lit_2005_325 DC AD(rd_kafka_txn_state2str)
00006518 0000000000000000                  10106 @lit_2005_328 DC AD(rd_kafka_log0)
00006520 0000000000000000                  10107 @lit_2005_329 DC AD(rwlock_rdunlock)
00006528 0000000000000000                  10108 @lit_2005_333 DC AD(rd_slice_read)
00006530 0000000000001730                  10109 @lit_2005_334 DC AD(rd_slice_abs_offset)
00006538 0000000000000000                  10110 @lit_2005_337 DC AD(rd_kafka_crash)
00006540 0000000000000000                  10111 @lit_2005_339 DC AD(snprintf)
00006548 0000000000001988                  10112 @lit_2005_346 DC AD(rd_kafka_$Api$Key2str)
                                                                                                                           Page  206 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006550 00000000000017D8                  10113 @lit_2005_347 DC AD(rd_slice_offset)
00006558 0000000000000000                  10114 @lit_2005_353 DC AD(rd_kafka_op_throttle_time)
00006560 000008EA                          10115 @lit_region_diff_2005_1_2  DC A(@REGION_2005_2-@REGION_2005_1)
00006564 00000000
00006568 0000000000000000                  10116 @lit_2005_375 DC AD(rd_slice_read_uvarint)
                                           10117 * ***           }
00006570                                   10118 @L807    DS    0H
                                           10119 * ***           rwlock_rdunlock(&(rk)->rk_lock);
00006570 41F0 39A0               000009A0  10120          LA    15,2464(0,3)
00006574 E3F0 D2F8 0024          000002F8  10121          STG   15,760(0,13)
0000657A 4110 D2F8               000002F8  10122          LA    1,760(0,13)
0000657E E3F0 C240 0004          00006520  10123          LG    15,@lit_2005_329 ; rwlock_rdunlock
00006584                                   10124 @@gen_label484 DS    0H
00006584 05EF                              10125          BALR  14,15
00006586                                   10126 @@gen_label485 DS    0H
                                           10127 * ***
                                           10128 * ***           do { int32_t _throttle_time_ms; do { int32_t _v; do { \
                                           10129 * size_t __len2 = (size_t)(sizeof(_v)); if (!rd_slice_read(&(rkbuf)->r\
                                           10130 * kbuf_reader, &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if\
                                           10131 *  (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(\
                                           10132 * rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { i\
                                           10133 * f (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\
                                           10134 * \\src\\rdkafka_txnmgr.c",618, __FUNCTION__, (((void *)0)), "assert: \
                                           10135 * " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__t\
                                           10136 * mpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpst\
                                           10137 * r[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->\
                                           10138 * rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_lognam\
                                           10139 * e, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lo\
                                           10140 * ck); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkb\
                                           10141 * uf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Pr\
                                           10142 * otocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" \
                                           10143 * " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining byte\
                                           10144 * s (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->\
                                           10145 * rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&r\
                                           10146 * kbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTIO\
                                           10147 * N__, 618, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset\
                                           10148 * (&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbu\
                                           10149 * f_uflow_mitigation : "incorrect broker.version.fallback?", __tmpstr)\
                                           10150 * ; } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; \
                                           10151 * goto err_parse; } while (0); } } while (0); } while (0); *(&_throttl\
                                           10152 * e_time_ms) = (_v); } while (0); rd_kafka_op_throttle_time((rkbuf)->r\
                                           10153 * kbuf_rkb, (rkbuf)->rkbuf_rkb->rkb_rk->rk_rep, _throttle_time_ms); } \
                                           10154 * while (0);
00006586                                   10155 @L815    DS    0H
00006586                                   10156 @L818    DS    0H
00006586                                   10157 @L821    DS    0H
00006586 A769 0004               00000004  10158          LGHI  6,4         ; 4
0000658A 41F0 2078               00000078  10159          LA    15,120(0,2)
0000658E E3F0 D2F8 0024          000002F8  10160          STG   15,760(0,13)
00006594 41F0 D0AC               000000AC  10161          LA    15,172(0,13)
00006598 E3F0 D300 0024          00000300  10162          STG   15,768(0,13)
0000659E E360 D308 0024          00000308  10163          STG   6,776(0,13)
                                                                                                                           Page  207 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000065A4 4110 D2F8               000002F8  10164          LA    1,760(0,13)
000065A8 E3F0 C248 0004          00006528  10165          LG    15,@lit_2005_333 ; rd_slice_read
000065AE                                   10166 @@gen_label486 DS    0H
000065AE 05EF                              10167          BALR  14,15
000065B0                                   10168 @@gen_label487 DS    0H
000065B0 B902 00FF                         10169          LTGR  15,15
000065B4 4770 C562               00006842  10170          BNZ   @L824
000065B8                                   10171 @L825    DS    0H
000065B8 E380 2098 0004          00000098  10172          LG    8,152(0,2)  ; offset of end in rd_slice_s
000065BE 41F0 2078               00000078  10173          LA    15,120(0,2)
000065C2 E3F0 D2F8 0024          000002F8  10174          STG   15,760(0,13)
000065C8 4110 D2F8               000002F8  10175          LA    1,760(0,13)
000065CC E3F0 C250 0004          00006530  10176          LG    15,@lit_2005_334 ; rd_slice_abs_offset
000065D2                                   10177 @@gen_label489 DS    0H
000065D2 05EF                              10178          BALR  14,15
000065D4                                   10179 @@gen_label490 DS    0H
000065D4 B90B 008F                         10180          SLGR  8,15
000065D8 B921 0068                         10181          CLGR  6,8
000065DC 47D0 C562               00006842  10182          BNH   @L828
000065E0                                   10183 @L829    DS    0H
000065E0 A7F8 0003               00000003  10184          LHI   15,3        ; 3
000065E4 12FF                              10185          LTR   15,15
000065E6 47D0 C552               00006832  10186          BNH   @L832
000065EA                                   10187 @L833    DS    0H
000065EA E3F0 2100 0002          00000100  10188          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000065F0 4770 C356               00006636  10189          BNZ   @L836
000065F4 E3F0 C208 0004          000064E8  10190          LG    15,@lit_2005_317
000065FA 4110 F1B2               000001B2  10191          LA    1,434(0,15)
000065FE E310 D2F8 0024          000002F8  10192          STG   1,760(0,13)
00006604 E548 D300 026A          00000300  10193          MVGHI 768(13),618
0000660A E310 C210 0004          000064F0  10194          LG    1,@lit_2005_316
00006610 4110 1224               00000224  10195          LA    1,548(0,1)
00006614 E310 D308 0024          00000308  10196          STG   1,776(0,13)
0000661A D707 D310 D310 00000310 00000310  10197          XC    784(8,13),784(13)
00006620 41F0 F582               00000582  10198          LA    15,1410(0,15)
00006624 E3F0 D318 0024          00000318  10199          STG   15,792(0,13)
0000662A 4110 D2F8               000002F8  10200          LA    1,760(0,13)
0000662E E3F0 C258 0004          00006538  10201          LG    15,@lit_2005_337 ; rd_kafka_crash
00006634                                   10202 @@gen_label494 DS    0H
00006634 05EF                              10203          BALR  14,15
00006636                                   10204 @@gen_label495 DS    0H
00006636                                   10205 @L836    DS    0H
00006636 41F0 D0E4               000000E4  10206          LA    15,228(0,13)
0000663A E3F0 D2F8 0024          000002F8  10207          STG   15,760(0,13)
00006640 E548 D300 0100          00000300  10208          MVGHI 768(13),256
00006646 E3F0 C208 0004          000064E8  10209          LG    15,@lit_2005_317
0000664C 41F0 F59C               0000059C  10210          LA    15,1436(0,15)
00006650 E3F0 D308 0024          00000308  10211          STG   15,776(0,13)
00006656 4110 D2F8               000002F8  10212          LA    1,760(0,13)
0000665A E3F0 C260 0004          00006540  10213          LG    15,@lit_2005_339 ; snprintf
00006660                                   10214 @@gen_label496 DS    0H
00006660 05EF                              10215          BALR  14,15
                                                                                                                           Page  208 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006662                                   10216 @@gen_label497 DS    0H
00006662 41F0 D0E4               000000E4  10217          LA    15,228(0,13)
00006666 B904 001F                         10218          LGR   1,15
0000666A A709 0000               00000000  10219          LGHI  0,0
0000666E                                   10220 @@gen_label498 DS 0H
0000666E B25E 000F                         10221          SRST  0,15
00006672 4710 C38E               0000666E  10222          BC  1,@@gen_label498
00006676 B90B 0001                         10223          SLGR  0,1
0000667A A70F 0002               00000002  10224          CGHI  0,2
0000667E 4770 C3A6               00006686  10225          BNE   @L838
00006682 9200 D0E4      000000E4 00000000  10226          MVI   228(13),0
00006686                                   10227 @L837    DS    0H
00006686                                   10228 @L838    DS    0H
00006686 E3F0 2100 0004          00000100  10229          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000668C A759 1638               00001638  10230          LGHI  5,5688      ; 5688
00006690 41F5 F000               00000000  10231          LA    15,0(5,15)
00006694 E3F0 D2F8 0024          000002F8  10232          STG   15,760(0,13)
0000669A 4110 D2F8               000002F8  10233          LA    1,760(0,13)
0000669E E3F0 C218 0004          000064F8  10234          LG    15,@lit_2005_320 ; mtx_lock
000066A4                                   10235 @@gen_label500 DS    0H
000066A4 05EF                              10236          BALR  14,15
000066A6                                   10237 @@gen_label501 DS    0H
000066A6 41F0 D1E4               000001E4  10238          LA    15,484(0,13)
000066AA E3F0 D2F8 0024          000002F8  10239          STG   15,760(0,13)
000066B0 E3F0 2100 0004          00000100  10240          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000066B6 A719 1630               00001630  10241          LGHI  1,5680      ; 5680
000066BA E3F1 F000 0004          00000000  10242          LG    15,0(1,15)
000066C0 E3F0 D300 0024          00000300  10243          STG   15,768(0,13)
000066C6 E548 D308 0100          00000308  10244          MVGHI 776(13),256
000066CC 4110 D2F8               000002F8  10245          LA    1,760(0,13)
000066D0 E3F0 C220 0004          00006500  10246          LG    15,@lit_2005_322 ; rd_strlcpy
000066D6                                   10247 @@gen_label502 DS    0H
000066D6 05EF                              10248          BALR  14,15
000066D8                                   10249 @@gen_label503 DS    0H
000066D8 E3F0 2100 0004          00000100  10250          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000066DE 41F5 F000               00000000  10251          LA    15,0(5,15)
000066E2 E3F0 D2F8 0024          000002F8  10252          STG   15,760(0,13)
000066E8 4110 D2F8               000002F8  10253          LA    1,760(0,13)
000066EC E3F0 C228 0004          00006508  10254          LG    15,@lit_2005_324 ; mtx_unlock
000066F2                                   10255 @@gen_label504 DS    0H
000066F2 05EF                              10256          BALR  14,15
000066F4                                   10257 @@gen_label505 DS    0H
000066F4 E3F0 20B8 0015          000000B8  10258          LGH   15,184(0,2)
000066FA E3F0 D2F8 0024          000002F8  10259          STG   15,760(0,13)
00006700 4110 D2F8               000002F8  10260          LA    1,760(0,13)
00006704 E3F0 C268 0004          00006548  10261          LG    15,@lit_2005_346 ; rd_kafka_ApiKey2str
0000670A                                   10262 @@gen_label506 DS    0H
0000670A 05EF                              10263          BALR  14,15
0000670C                                   10264 @@gen_label507 DS    0H
0000670C B904 005F                         10265          LGR   5,15
00006710 41F0 2078               00000078  10266          LA    15,120(0,2)
00006714 E3F0 D2F8 0024          000002F8  10267          STG   15,760(0,13)
                                                                                                                           Page  209 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000671A 4110 D2F8               000002F8  10268          LA    1,760(0,13)
0000671E E3F0 C270 0004          00006550  10269          LG    15,@lit_2005_347 ; rd_slice_offset
00006724                                   10270 @@gen_label508 DS    0H
00006724 05EF                              10271          BALR  14,15
00006726                                   10272 @@gen_label509 DS    0H
00006726 B904 008F                         10273          LGR   8,15
0000672A E390 2098 0004          00000098  10274          LG    9,152(0,2)  ; offset of end in rd_slice_s
00006730 41F0 2078               00000078  10275          LA    15,120(0,2)
00006734 E3F0 D2F8 0024          000002F8  10276          STG   15,760(0,13)
0000673A 4110 D2F8               000002F8  10277          LA    1,760(0,13)
0000673E E3F0 C250 0004          00006530  10278          LG    15,@lit_2005_334 ; rd_slice_abs_offset
00006744                                   10279 @@gen_label510 DS    0H
00006744 05EF                              10280          BALR  14,15
00006746                                   10281 @@gen_label511 DS    0H
00006746 B90B 009F                         10282          SLGR  9,15
0000674A E3F0 21E8 0002          000001E8  10283          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006750 4780 C47E               0000675E  10284          BZ    @L841
00006754 E3F0 21E8 0004          000001E8  10285          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000675A 47F0 C488               00006768  10286          B     @L842
0000675E                                   10287 @L841    DS    0H
0000675E E3F0 C208 0004          000064E8  10288          LG    15,@lit_2005_317
00006764 41F0 F5A0               000005A0  10289          LA    15,1440(0,15)
00006768                                   10290 @L842    DS    0H
00006768 E310 2100 0004          00000100  10291          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000676E E310 1FD0 0004          00000FD0  10292          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00006774 4110 1210               00000210  10293          LA    1,528(0,1)
00006778 E310 D2F8 0024          000002F8  10294          STG   1,760(0,13)
0000677E E310 2100 0004          00000100  10295          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006784 E310 1FD0 0004          00000FD0  10296          LG    1,4048(0,1)
0000678A E310 D300 0024          00000300  10297          STG   1,768(0,13)
00006790 4110 D1E4               000001E4  10298          LA    1,484(0,13)
00006794 E310 D308 0024          00000308  10299          STG   1,776(0,13)
0000679A A718 0003               00000003  10300          LHI   1,3         ; 3
0000679E B914 0011                         10301          LGFR  1,1
000067A2 E310 D310 0024          00000310  10302          STG   1,784(0,13)
000067A8 D707 D318 D318 00000318 00000318  10303          XC    792(8,13),792(13)
000067AE E310 C208 0004          000064E8  10304          LG    1,@lit_2005_317
000067B4 41E0 15C4               000005C4  10305          LA    14,1476(0,1)
000067B8 E3E0 D320 0024          00000320  10306          STG   14,800(0,13)
000067BE 4110 15D0               000005D0  10307          LA    1,1488(0,1)
000067C2 E310 D328 0024          00000328  10308          STG   1,808(0,13)
000067C8 E350 D330 0024          00000330  10309          STG   5,816(0,13)
000067CE 4810 20BA               000000BA  10310          LH    1,186(0,2)
000067D2 B914 0011                         10311          LGFR  1,1
000067D6 E310 D338 0024          00000338  10312          STG   1,824(0,13)
000067DC E380 D340 0024          00000340  10313          STG   8,832(0,13)
000067E2 E310 2098 0004          00000098  10314          LG    1,152(0,2)  ; offset of end in rd_slice_s
000067E8 E310 2090 000B          00000090  10315          SLG   1,144(0,2)
000067EE E310 D348 0024          00000348  10316          STG   1,840(0,13)
000067F4 E310 C210 0004          000064F0  10317          LG    1,@lit_2005_316
                                                                                                                           Page  210 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000067FA 4110 1224               00000224  10318          LA    1,548(0,1)
000067FE E310 D350 0024          00000350  10319          STG   1,848(0,13)
00006804 E548 D358 026A          00000358  10320          MVGHI 856(13),618
0000680A E360 D360 0024          00000360  10321          STG   6,864(0,13)
00006810 E390 D368 0024          00000368  10322          STG   9,872(0,13)
00006816 E3F0 D370 0024          00000370  10323          STG   15,880(0,13)
0000681C 41F0 D0E4               000000E4  10324          LA    15,228(0,13)
00006820 E3F0 D378 0024          00000378  10325          STG   15,888(0,13)
00006826 4110 D2F8               000002F8  10326          LA    1,760(0,13)
0000682A E3F0 C238 0004          00006518  10327          LG    15,@lit_2005_328 ; rd_kafka_log0
00006830                                   10328 @@gen_label513 DS    0H
00006830 05EF                              10329          BALR  14,15
00006832                                   10330 @@gen_label514 DS    0H
00006832                                   10331 @L832    DS    0H
00006832 E54C 2188 FF65          00000188  10332          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00006838 E3C0 C1F4 001A          000064D4  10333          ALGF  12,@lit_region_diff_2005_1_4
                                           10334          DROP  12
                        00007F34           10335          USING @REGION_2005_4,12
0000683E 47F0 C678               000085AC  10336          B     @_err_parse@2005@1
                                           10337          DROP  12
                        000062E0           10338          USING @REGION_2005_1,12
00006842                                   10339 @L828    DS    0H
00006842                                   10340 @L824    DS    0H
00006842 58F0 D0AC               000000AC  10341          L     15,172(0,13) ; _v
00006846 50F0 D0A8               000000A8  10342          ST    15,168(0,13)
0000684A E3F0 2100 0004          00000100  10343          LG    15,256(0,2)
00006850 E3F0 D2F8 0024          000002F8  10344          STG   15,760(0,13)
00006856 E3F0 2100 0004          00000100  10345          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000685C E3F0 FFD0 0004          00000FD0  10346          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00006862 E3F0 F000 0004          00000000  10347          LG    15,0(0,15)
00006868 E3F0 D300 0024          00000300  10348          STG   15,768(0,13)
0000686E E3F0 D0A8 0014          000000A8  10349          LGF   15,168(0,13) ; _throttle_time_ms
00006874 E3F0 D308 0024          00000308  10350          STG   15,776(0,13)
0000687A 4110 D2F8               000002F8  10351          LA    1,760(0,13)
0000687E E3F0 C278 0004          00006558  10352          LG    15,@lit_2005_353 ; rd_kafka_op_throttle_time
00006884                                   10353 @@gen_label515 DS    0H
00006884 05EF                              10354          BALR  14,15
00006886                                   10355 @@gen_label516 DS    0H
                                           10356 * ***
                                           10357 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           10358 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           10359 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           10360 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           10361 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           10362 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",620, __\
                                           10363 * FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (\
                                           10364 * 0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); \
                                           10365 * if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[\
                                           10366 * 256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_l\
                                           10367 * ogname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock\
                                           10368 * (&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbu\
                                           10369 * f_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_d\
                                                                                                                           Page  211 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           10370 * ecode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "\
                                           10371 * for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" "\
                                           10372 *  bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(r\
                                           10373 * kbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slic\
                                           10374 * e_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkb\
                                           10375 * uf->rkbuf_reader)->start), __FUNCTION__, 620, __len0, ((&rkbuf->rkbu\
                                           10376 * f_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->\
                                           10377 * rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect \
                                           10378 * broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_\
                                           10379 * err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } }\
                                           10380 *  while (0); } while (0); *(&TopicCnt) = (_v); } while (0);
00006886                                   10381 @L843    DS    0H
00006886                                   10382 @L846    DS    0H
00006886 A769 0004               00000004  10383          LGHI  6,4         ; 4
0000688A 41F0 2078               00000078  10384          LA    15,120(0,2)
0000688E E3F0 D2F8 0024          000002F8  10385          STG   15,760(0,13)
00006894 41F0 D0B0               000000B0  10386          LA    15,176(0,13)
00006898 E3F0 D300 0024          00000300  10387          STG   15,768(0,13)
0000689E E360 D308 0024          00000308  10388          STG   6,776(0,13)
000068A4 4110 D2F8               000002F8  10389          LA    1,760(0,13)
000068A8 E3F0 C248 0004          00006528  10390          LG    15,@lit_2005_333 ; rd_slice_read
000068AE                                   10391 @@gen_label517 DS    0H
000068AE 05EF                              10392          BALR  14,15
000068B0                                   10393 @@gen_label518 DS    0H
000068B0 B902 00FF                         10394          LTGR  15,15
000068B4 4770 C862               00006B42  10395          BNZ   @L849
000068B8                                   10396 @L850    DS    0H
000068B8 E380 2098 0004          00000098  10397          LG    8,152(0,2)  ; offset of end in rd_slice_s
000068BE 41F0 2078               00000078  10398          LA    15,120(0,2)
000068C2 E3F0 D2F8 0024          000002F8  10399          STG   15,760(0,13)
000068C8 4110 D2F8               000002F8  10400          LA    1,760(0,13)
000068CC E3F0 C250 0004          00006530  10401          LG    15,@lit_2005_334 ; rd_slice_abs_offset
000068D2                                   10402 @@gen_label520 DS    0H
000068D2 05EF                              10403          BALR  14,15
000068D4                                   10404 @@gen_label521 DS    0H
000068D4 B90B 008F                         10405          SLGR  8,15
000068D8 B921 0068                         10406          CLGR  6,8
000068DC 47D0 C862               00006B42  10407          BNH   @L853
000068E0                                   10408 @L854    DS    0H
000068E0 A7F8 0003               00000003  10409          LHI   15,3        ; 3
000068E4 12FF                              10410          LTR   15,15
000068E6 47D0 C852               00006B32  10411          BNH   @L857
000068EA                                   10412 @L858    DS    0H
000068EA E3F0 2100 0002          00000100  10413          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000068F0 4770 C656               00006936  10414          BNZ   @L861
000068F4 E3F0 C208 0004          000064E8  10415          LG    15,@lit_2005_317
000068FA 4110 F1B2               000001B2  10416          LA    1,434(0,15)
000068FE E310 D2F8 0024          000002F8  10417          STG   1,760(0,13)
00006904 E548 D300 026C          00000300  10418          MVGHI 768(13),620
0000690A E310 C210 0004          000064F0  10419          LG    1,@lit_2005_316
00006910 4110 1224               00000224  10420          LA    1,548(0,1)
00006914 E310 D308 0024          00000308  10421          STG   1,776(0,13)
                                                                                                                           Page  212 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000691A D707 D310 D310 00000310 00000310  10422          XC    784(8,13),784(13)
00006920 41F0 F582               00000582  10423          LA    15,1410(0,15)
00006924 E3F0 D318 0024          00000318  10424          STG   15,792(0,13)
0000692A 4110 D2F8               000002F8  10425          LA    1,760(0,13)
0000692E E3F0 C258 0004          00006538  10426          LG    15,@lit_2005_337 ; rd_kafka_crash
00006934                                   10427 @@gen_label525 DS    0H
00006934 05EF                              10428          BALR  14,15
00006936                                   10429 @@gen_label526 DS    0H
00006936                                   10430 @L861    DS    0H
00006936 41F0 D0E4               000000E4  10431          LA    15,228(0,13)
0000693A E3F0 D2F8 0024          000002F8  10432          STG   15,760(0,13)
00006940 E548 D300 0100          00000300  10433          MVGHI 768(13),256
00006946 E3F0 C208 0004          000064E8  10434          LG    15,@lit_2005_317
0000694C 41F0 F59C               0000059C  10435          LA    15,1436(0,15)
00006950 E3F0 D308 0024          00000308  10436          STG   15,776(0,13)
00006956 4110 D2F8               000002F8  10437          LA    1,760(0,13)
0000695A E3F0 C260 0004          00006540  10438          LG    15,@lit_2005_339 ; snprintf
00006960                                   10439 @@gen_label527 DS    0H
00006960 05EF                              10440          BALR  14,15
00006962                                   10441 @@gen_label528 DS    0H
00006962 41F0 D0E4               000000E4  10442          LA    15,228(0,13)
00006966 B904 001F                         10443          LGR   1,15
0000696A A709 0000               00000000  10444          LGHI  0,0
0000696E                                   10445 @@gen_label529 DS 0H
0000696E B25E 000F                         10446          SRST  0,15
00006972 4710 C68E               0000696E  10447          BC  1,@@gen_label529
00006976 B90B 0001                         10448          SLGR  0,1
0000697A A70F 0002               00000002  10449          CGHI  0,2
0000697E 4770 C6A6               00006986  10450          BNE   @L863
00006982 9200 D0E4      000000E4 00000000  10451          MVI   228(13),0
00006986                                   10452 @L862    DS    0H
00006986                                   10453 @L863    DS    0H
00006986 E3F0 2100 0004          00000100  10454          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000698C A759 1638               00001638  10455          LGHI  5,5688      ; 5688
00006990 41F5 F000               00000000  10456          LA    15,0(5,15)
00006994 E3F0 D2F8 0024          000002F8  10457          STG   15,760(0,13)
0000699A 4110 D2F8               000002F8  10458          LA    1,760(0,13)
0000699E E3F0 C218 0004          000064F8  10459          LG    15,@lit_2005_320 ; mtx_lock
000069A4                                   10460 @@gen_label531 DS    0H
000069A4 05EF                              10461          BALR  14,15
000069A6                                   10462 @@gen_label532 DS    0H
000069A6 41F0 D1E4               000001E4  10463          LA    15,484(0,13)
000069AA E3F0 D2F8 0024          000002F8  10464          STG   15,760(0,13)
000069B0 E3F0 2100 0004          00000100  10465          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000069B6 A719 1630               00001630  10466          LGHI  1,5680      ; 5680
000069BA E3F1 F000 0004          00000000  10467          LG    15,0(1,15)
000069C0 E3F0 D300 0024          00000300  10468          STG   15,768(0,13)
000069C6 E548 D308 0100          00000308  10469          MVGHI 776(13),256
000069CC 4110 D2F8               000002F8  10470          LA    1,760(0,13)
000069D0 E3F0 C220 0004          00006500  10471          LG    15,@lit_2005_322 ; rd_strlcpy
000069D6                                   10472 @@gen_label533 DS    0H
000069D6 05EF                              10473          BALR  14,15
                                                                                                                           Page  213 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000069D8                                   10474 @@gen_label534 DS    0H
000069D8 E3F0 2100 0004          00000100  10475          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000069DE 41F5 F000               00000000  10476          LA    15,0(5,15)
000069E2 E3F0 D2F8 0024          000002F8  10477          STG   15,760(0,13)
000069E8 4110 D2F8               000002F8  10478          LA    1,760(0,13)
000069EC E3F0 C228 0004          00006508  10479          LG    15,@lit_2005_324 ; mtx_unlock
000069F2                                   10480 @@gen_label535 DS    0H
000069F2 05EF                              10481          BALR  14,15
000069F4                                   10482 @@gen_label536 DS    0H
000069F4 E3F0 20B8 0015          000000B8  10483          LGH   15,184(0,2)
000069FA E3F0 D2F8 0024          000002F8  10484          STG   15,760(0,13)
00006A00 4110 D2F8               000002F8  10485          LA    1,760(0,13)
00006A04 E3F0 C268 0004          00006548  10486          LG    15,@lit_2005_346 ; rd_kafka_ApiKey2str
00006A0A                                   10487 @@gen_label537 DS    0H
00006A0A 05EF                              10488          BALR  14,15
00006A0C                                   10489 @@gen_label538 DS    0H
00006A0C B904 005F                         10490          LGR   5,15
00006A10 41F0 2078               00000078  10491          LA    15,120(0,2)
00006A14 E3F0 D2F8 0024          000002F8  10492          STG   15,760(0,13)
00006A1A 4110 D2F8               000002F8  10493          LA    1,760(0,13)
00006A1E E3F0 C270 0004          00006550  10494          LG    15,@lit_2005_347 ; rd_slice_offset
00006A24                                   10495 @@gen_label539 DS    0H
00006A24 05EF                              10496          BALR  14,15
00006A26                                   10497 @@gen_label540 DS    0H
00006A26 B904 008F                         10498          LGR   8,15
00006A2A E390 2098 0004          00000098  10499          LG    9,152(0,2)  ; offset of end in rd_slice_s
00006A30 41F0 2078               00000078  10500          LA    15,120(0,2)
00006A34 E3F0 D2F8 0024          000002F8  10501          STG   15,760(0,13)
00006A3A 4110 D2F8               000002F8  10502          LA    1,760(0,13)
00006A3E E3F0 C250 0004          00006530  10503          LG    15,@lit_2005_334 ; rd_slice_abs_offset
00006A44                                   10504 @@gen_label541 DS    0H
00006A44 05EF                              10505          BALR  14,15
00006A46                                   10506 @@gen_label542 DS    0H
00006A46 B90B 009F                         10507          SLGR  9,15
00006A4A E3F0 21E8 0002          000001E8  10508          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006A50 4780 C77E               00006A5E  10509          BZ    @L866
00006A54 E3F0 21E8 0004          000001E8  10510          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006A5A 47F0 C788               00006A68  10511          B     @L867
00006A5E                                   10512 @L866    DS    0H
00006A5E E3F0 C208 0004          000064E8  10513          LG    15,@lit_2005_317
00006A64 41F0 F5A0               000005A0  10514          LA    15,1440(0,15)
00006A68                                   10515 @L867    DS    0H
00006A68 E310 2100 0004          00000100  10516          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006A6E E310 1FD0 0004          00000FD0  10517          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00006A74 4110 1210               00000210  10518          LA    1,528(0,1)
00006A78 E310 D2F8 0024          000002F8  10519          STG   1,760(0,13)
00006A7E E310 2100 0004          00000100  10520          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006A84 E310 1FD0 0004          00000FD0  10521          LG    1,4048(0,1)
00006A8A E310 D300 0024          00000300  10522          STG   1,768(0,13)
00006A90 4110 D1E4               000001E4  10523          LA    1,484(0,13)
                                                                                                                           Page  214 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006A94 E310 D308 0024          00000308  10524          STG   1,776(0,13)
00006A9A A718 0003               00000003  10525          LHI   1,3         ; 3
00006A9E B914 0011                         10526          LGFR  1,1
00006AA2 E310 D310 0024          00000310  10527          STG   1,784(0,13)
00006AA8 D707 D318 D318 00000318 00000318  10528          XC    792(8,13),792(13)
00006AAE E310 C208 0004          000064E8  10529          LG    1,@lit_2005_317
00006AB4 41E0 15C4               000005C4  10530          LA    14,1476(0,1)
00006AB8 E3E0 D320 0024          00000320  10531          STG   14,800(0,13)
00006ABE 4110 15D0               000005D0  10532          LA    1,1488(0,1)
00006AC2 E310 D328 0024          00000328  10533          STG   1,808(0,13)
00006AC8 E350 D330 0024          00000330  10534          STG   5,816(0,13)
00006ACE 4810 20BA               000000BA  10535          LH    1,186(0,2)
00006AD2 B914 0011                         10536          LGFR  1,1
00006AD6 E310 D338 0024          00000338  10537          STG   1,824(0,13)
00006ADC E380 D340 0024          00000340  10538          STG   8,832(0,13)
00006AE2 E310 2098 0004          00000098  10539          LG    1,152(0,2)  ; offset of end in rd_slice_s
00006AE8 E310 2090 000B          00000090  10540          SLG   1,144(0,2)
00006AEE E310 D348 0024          00000348  10541          STG   1,840(0,13)
00006AF4 E310 C210 0004          000064F0  10542          LG    1,@lit_2005_316
00006AFA 4110 1224               00000224  10543          LA    1,548(0,1)
00006AFE E310 D350 0024          00000350  10544          STG   1,848(0,13)
00006B04 E548 D358 026C          00000358  10545          MVGHI 856(13),620
00006B0A E360 D360 0024          00000360  10546          STG   6,864(0,13)
00006B10 E390 D368 0024          00000368  10547          STG   9,872(0,13)
00006B16 E3F0 D370 0024          00000370  10548          STG   15,880(0,13)
00006B1C 41F0 D0E4               000000E4  10549          LA    15,228(0,13)
00006B20 E3F0 D378 0024          00000378  10550          STG   15,888(0,13)
00006B26 4110 D2F8               000002F8  10551          LA    1,760(0,13)
00006B2A E3F0 C238 0004          00006518  10552          LG    15,@lit_2005_328 ; rd_kafka_log0
00006B30                                   10553 @@gen_label544 DS    0H
00006B30 05EF                              10554          BALR  14,15
00006B32                                   10555 @@gen_label545 DS    0H
00006B32                                   10556 @L857    DS    0H
00006B32 E54C 2188 FF65          00000188  10557          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00006B38 E3C0 C1F4 001A          000064D4  10558          ALGF  12,@lit_region_diff_2005_1_4
                                           10559          DROP  12
                        00007F34           10560          USING @REGION_2005_4,12
00006B3E 47F0 C678               000085AC  10561          B     @_err_parse@2005@1
                                           10562          DROP  12
                        000062E0           10563          USING @REGION_2005_1,12
00006B42                                   10564 @L853    DS    0H
00006B42                                   10565 @L849    DS    0H
00006B42 58F0 D0B0               000000B0  10566          L     15,176(0,13) ; _v
00006B46 50F0 D0E0               000000E0  10567          ST    15,224(0,13)
                                           10568 * ***
                                           10569 * ***           while (TopicCnt-- > 0) {
00006B4A E3C0 C1F4 001A          000064D4  10570          ALGF  12,@lit_region_diff_2005_1_4
                                           10571          DROP  12
                        00007F34           10572          USING @REGION_2005_4,12
00006B50 47F0 C638               0000856C  10573          B     @L871
                                           10574          DROP  12
                        000062E0           10575          USING @REGION_2005_1,12
                                                                                                                           Page  215 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006B54                                   10576 @L870    DS    0H
                                           10577 * ***                   rd_kafkap_str_t Topic;
                                           10578 * ***                   rd_kafka_topic_t *rkt;
                                           10579 * ***                   int32_t PartCnt;
                                           10580 * ***                   rd_bool_t request_error = 0;
00006B54 9200 D0CA      000000CA 00000000  10581          MVI   202(13),0   ; request_error
                                           10582 * ***
                                           10583 * ***                   do { int _klen; if ((rkbuf)->rkbuf_flags & 0x4\
                                           10584 * 0) { uint64_t _uva; do { uint64_t _v; size_t _r = rd_slice_read_uvar\
                                           10585 * int(&(rkbuf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_de\
                                           10586 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                           10587 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",628, __FUNCTION__,\
                                           10588 *  (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __\
                                           10589 * tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "uvarint pars\
                                           10590 * ing failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { \
                                           10591 * char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock);\
                                           10592 *  rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname\
                                           10593 * )); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0\
                                           10594 * (&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _\
                                           10595 * logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer\
                                           10596 *  underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expe\
                                           10597 * cted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafk\
                                           10598 * a_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVe\
                                           10599 * rsion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader\
                                           10600 * )->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 628, (size_t)\
                                           10601 * 0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_\
                                           10602 * reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigat\
                                           10603 * ion : "incorrect broker.version.fallback?", __tmpstr); } while (0); \
                                           10604 * } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse;\
                                           10605 *  } while (0); *(&_uva) = _v; } while (0); (&Topic)->len = ((int32_t)\
                                           10606 * _uva) - 1; _klen = (&Topic)->len; } else { do { int16_t _v; do { siz\
                                           10607 * e_t __len2 = (size_t)(2); if (!rd_slice_read(&(rkbuf)->rkbuf_reader,\
                                           10608 *  &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if (((__len0 >\
                                           10609 *  ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbu\
                                           10610 * f_reader))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf\
                                           10611 * ->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkaf\
                                           10612 * ka_txnmgr.c",628, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rk\
                                           10613 * buf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeo\
                                           10614 * f(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0';\
                                           10615 *  do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_\
                                           10616 * lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_l\
                                           10617 * ogname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafk\
                                           10618 * a_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb\
                                           10619 * _rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read \
                                           10620 * buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): "\
                                           10621 *  "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", r\
                                           10622 * d_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr\
                                           10623 * .ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_\
                                           10624 * reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 628, __\
                                           10625 * len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkb\
                                           10626 * uf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_miti\
                                           10627 * gation : "incorrect broker.version.fallback?", __tmpstr); } while (0\
                                                                                                                           Page  216 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           10628 * ); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_par\
                                           10629 * se; } while (0); } } while (0); } while (0); (&Topic)->len = (int16_\
                                           10630 * t)(_v); } while (0); _klen = (((&Topic)->len) == -1 ? 0 : ((&Topic)-\
                                           10631 * >len)); } if (((&Topic)->len == -1)) (&Topic)->str = ((void *)0); el\
                                           10632 * se if ((((&Topic)->len) == -1 ? 0 : ((&Topic)->len)) == 0) (&Topic)-\
                                           10633 * >str = ""; else if (!((&Topic)->str = rd_slice_ensure_contig(&rkbuf-\
                                           10634 * >rkbuf_reader, _klen))) do { size_t __len0 = (size_t)(_klen); if (((\
                                           10635 * __len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbu\
                                           10636 * f)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { if ((\
                                           10637 * (!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\sr\
                                           10638 * c\\rdkafka_txnmgr.c",628, __FUNCTION__, (((void *)0)), "assert: " "r\
                                           10639 * kbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpst\
                                           10640 * r, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0]\
                                           10641 *  = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_\
                                           10642 * logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, s\
                                           10643 * izeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock);\
                                           10644 *  rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_r\
                                           10645 * kb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protoc\
                                           10646 * ol read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%\
                                           10647 * s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%\
                                           10648 * s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbu\
                                           10649 * f_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf\
                                           10650 * ->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__,\
                                           10651 *  628, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rk\
                                           10652 * buf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uf\
                                           10653 * low_mitigation : "incorrect broker.version.fallback?", __tmpstr); } \
                                           10654 * while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto\
                                           10655 *  err_parse; } while (0); } } while (0); if((&Topic)->len > 0) { char\
                                           10656 *  *tbuf = calloc(1,(&Topic)->len); __memcpy(tbuf,(&Topic)->str,(&Topi\
                                           10657 * c)->len); size_t ulen=(size_t)(&Topic)->len; size_t alen=ulen; utf8_\
                                           10658 * 2_ebcdic((&Topic)->str, &alen, tbuf, &ulen); free(tbuf); } } while (\
                                           10659 * 0);
00006B58                                   10660 @L872    DS    0H
00006B58 9140 2023      00000023 00000040  10661          TM    35(2),64
00006B5C 4770 C88A               00006B6A  10662          BNZ   *+14  Around region break
00006B60 E3C0 C280 001A          00006560  10663          ALGF  12,@lit_region_diff_2005_1_2
                                           10664          DROP  12
                        00006BCA           10665          USING @REGION_2005_2,12
00006B66 47F0 C300               00006ECA  10666          B     @L898
                                           10667          DROP  12
                        000062E0           10668          USING @REGION_2005_1,12
00006B6A                                   10669 @L876    DS    0H
00006B6A 41F0 2078               00000078  10670          LA    15,120(0,2)
00006B6E E3F0 D2F8 0024          000002F8  10671          STG   15,760(0,13)
00006B74 41F0 D0C0               000000C0  10672          LA    15,192(0,13)
00006B78 E3F0 D300 0024          00000300  10673          STG   15,768(0,13)
00006B7E 4110 D2F8               000002F8  10674          LA    1,760(0,13)
00006B82 E3F0 C288 0004          00006568  10675          LG    15,@lit_2005_375 ; rd_slice_read_uvarint
00006B88                                   10676 @@gen_label547 DS    0H
00006B88 05EF                              10677          BALR  14,15
00006B8A                                   10678 @@gen_label548 DS    0H
00006B8A B902 00FF                         10679          LTGR  15,15
                                                                                                                           Page  217 
  Active Usings: @REGION_2005_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006B8E 4780 C8BC               00006B9C  10680          BE    *+14  Around region break
00006B92 E3C0 C280 001A          00006560  10681          ALGF  12,@lit_region_diff_2005_1_2
                                           10682          DROP  12
                        00006BCA           10683          USING @REGION_2005_2,12
00006B98 47F0 C2E6               00006EB0  10684          B     @L879
                                           10685          DROP  12
                        000062E0           10686          USING @REGION_2005_1,12
00006B9C                                   10687 @L880    DS    0H
00006B9C A7F8 0003               00000003  10688          LHI   15,3        ; 3
00006BA0 12FF                              10689          LTR   15,15
00006BA2 4720 C8D0               00006BB0  10690          BH    *+14  Around region break
00006BA6 E3C0 C280 001A          00006560  10691          ALGF  12,@lit_region_diff_2005_1_2
                                           10692          DROP  12
                        00006BCA           10693          USING @REGION_2005_2,12
00006BAC 47F0 C2D6               00006EA0  10694          B     @L883
                                           10695          DROP  12
                        000062E0           10696          USING @REGION_2005_1,12
00006BB0                                   10697 @L884    DS    0H
00006BB0 E3F0 2100 0002          00000100  10698          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006BB6 4780 C8E4               00006BC4  10699          BZ    *+14  Around region break
00006BBA E3C0 C280 001A          00006560  10700          ALGF  12,@lit_region_diff_2005_1_2
                                           10701          DROP  12
                        00006BCA           10702          USING @REGION_2005_2,12
00006BC0 47F0 C042               00006C0C  10703          B     @L887
                                           10704          DROP  12
                        000062E0           10705          USING @REGION_2005_1,12
00006BC4 E3C0 C280 001A          00006560  10706          ALGF  12,@lit_region_diff_2005_1_2
00006BCA                                   10707 @REGION_2005_2 DS 0H
                                           10708          DROP  12
                        00006BCA           10709          USING @REGION_2005_2,12
00006BCA E3F0 C17E 0004          00006D48  10710          LG    15,@lit_2005_376
00006BD0 4110 F1B2               000001B2  10711          LA    1,434(0,15)
00006BD4 E310 D2F8 0024          000002F8  10712          STG   1,760(0,13)
00006BDA E548 D300 0274          00000300  10713          MVGHI 768(13),628
00006BE0 E310 C176 0004          00006D40  10714          LG    1,@lit_2005_377
00006BE6 4110 1224               00000224  10715          LA    1,548(0,1)
00006BEA E310 D308 0024          00000308  10716          STG   1,776(0,13)
00006BF0 D707 D310 D310 00000310 00000310  10717          XC    784(8,13),784(13)
00006BF6 41F0 F582               00000582  10718          LA    15,1410(0,15)
00006BFA E3F0 D318 0024          00000318  10719          STG   15,792(0,13)
00006C00 4110 D2F8               000002F8  10720          LA    1,760(0,13)
00006C04 E3F0 C16E 0004          00006D38  10721          LG    15,@lit_2005_378 ; rd_kafka_crash
00006C0A                                   10722 @@gen_label552 DS    0H
00006C0A 05EF                              10723          BALR  14,15
00006C0C                                   10724 @@gen_label553 DS    0H
00006C0C                                   10725 @L887    DS    0H
00006C0C 41F0 D0F8               000000F8  10726          LA    15,248(0,13)
00006C10 E3F0 D2F8 0024          000002F8  10727          STG   15,760(0,13)
00006C16 E548 D300 0100          00000300  10728          MVGHI 768(13),256
00006C1C E3F0 C17E 0004          00006D48  10729          LG    15,@lit_2005_376
00006C22 41F0 F640               00000640  10730          LA    15,1600(0,15)
00006C26 E3F0 D308 0024          00000308  10731          STG   15,776(0,13)
                                                                                                                           Page  218 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006C2C 4110 D2F8               000002F8  10732          LA    1,760(0,13)
00006C30 E3F0 C186 0004          00006D50  10733          LG    15,@lit_2005_380 ; snprintf
00006C36                                   10734 @@gen_label554 DS    0H
00006C36 05EF                              10735          BALR  14,15
00006C38                                   10736 @@gen_label555 DS    0H
00006C38 41F0 D0F8               000000F8  10737          LA    15,248(0,13)
00006C3C B904 001F                         10738          LGR   1,15
00006C40 A709 0000               00000000  10739          LGHI  0,0
00006C44                                   10740 @@gen_label556 DS 0H
00006C44 B25E 000F                         10741          SRST  0,15
00006C48 4710 C07A               00006C44  10742          BC  1,@@gen_label556
00006C4C B90B 0001                         10743          SLGR  0,1
00006C50 A70F 0002               00000002  10744          CGHI  0,2
00006C54 4770 C092               00006C5C  10745          BNE   @L889
00006C58 9200 D0F8      000000F8 00000000  10746          MVI   248(13),0
00006C5C                                   10747 @L888    DS    0H
00006C5C                                   10748 @L889    DS    0H
00006C5C E3F0 2100 0004          00000100  10749          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006C62 A759 1638               00001638  10750          LGHI  5,5688      ; 5688
00006C66 41F5 F000               00000000  10751          LA    15,0(5,15)
00006C6A E3F0 D2F8 0024          000002F8  10752          STG   15,760(0,13)
00006C70 4110 D2F8               000002F8  10753          LA    1,760(0,13)
00006C74 E3F0 C18E 0004          00006D58  10754          LG    15,@lit_2005_382 ; mtx_lock
00006C7A                                   10755 @@gen_label558 DS    0H
00006C7A 05EF                              10756          BALR  14,15
00006C7C                                   10757 @@gen_label559 DS    0H
00006C7C 41F0 D1F8               000001F8  10758          LA    15,504(0,13)
00006C80 E3F0 D2F8 0024          000002F8  10759          STG   15,760(0,13)
00006C86 E3F0 2100 0004          00000100  10760          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006C8C A719 1630               00001630  10761          LGHI  1,5680      ; 5680
00006C90 E3F1 F000 0004          00000000  10762          LG    15,0(1,15)
00006C96 E3F0 D300 0024          00000300  10763          STG   15,768(0,13)
00006C9C E548 D308 0100          00000308  10764          MVGHI 776(13),256
00006CA2 4110 D2F8               000002F8  10765          LA    1,760(0,13)
00006CA6 E3F0 C196 0004          00006D60  10766          LG    15,@lit_2005_384 ; rd_strlcpy
00006CAC                                   10767 @@gen_label560 DS    0H
00006CAC 05EF                              10768          BALR  14,15
00006CAE                                   10769 @@gen_label561 DS    0H
00006CAE E3F0 2100 0004          00000100  10770          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006CB4 41F5 F000               00000000  10771          LA    15,0(5,15)
00006CB8 E3F0 D2F8 0024          000002F8  10772          STG   15,760(0,13)
00006CBE 4110 D2F8               000002F8  10773          LA    1,760(0,13)
00006CC2 E3F0 C19E 0004          00006D68  10774          LG    15,@lit_2005_386 ; mtx_unlock
00006CC8                                   10775 @@gen_label562 DS    0H
00006CC8 05EF                              10776          BALR  14,15
00006CCA                                   10777 @@gen_label563 DS    0H
00006CCA E3F0 20B8 0015          000000B8  10778          LGH   15,184(0,2)
00006CD0 E3F0 D2F8 0024          000002F8  10779          STG   15,760(0,13)
00006CD6 4110 D2F8               000002F8  10780          LA    1,760(0,13)
00006CDA E3F0 C1A6 0004          00006D70  10781          LG    15,@lit_2005_387 ; rd_kafka_ApiKey2str
00006CE0                                   10782 @@gen_label564 DS    0H
00006CE0 05EF                              10783          BALR  14,15
                                                                                                                           Page  219 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006CE2                                   10784 @@gen_label565 DS    0H
00006CE2 B904 005F                         10785          LGR   5,15
00006CE6 41F0 2078               00000078  10786          LA    15,120(0,2)
00006CEA E3F0 D2F8 0024          000002F8  10787          STG   15,760(0,13)
00006CF0 4110 D2F8               000002F8  10788          LA    1,760(0,13)
00006CF4 E3F0 C1AE 0004          00006D78  10789          LG    15,@lit_2005_388 ; rd_slice_offset
00006CFA                                   10790 @@gen_label566 DS    0H
00006CFA 05EF                              10791          BALR  14,15
00006CFC                                   10792 @@gen_label567 DS    0H
00006CFC B904 006F                         10793          LGR   6,15
00006D00 E380 2098 0004          00000098  10794          LG    8,152(0,2)  ; offset of end in rd_slice_s
00006D06 41F0 2078               00000078  10795          LA    15,120(0,2)
00006D0A E3F0 D2F8 0024          000002F8  10796          STG   15,760(0,13)
00006D10 4110 D2F8               000002F8  10797          LA    1,760(0,13)
00006D14 E3F0 C1B6 0004          00006D80  10798          LG    15,@lit_2005_389 ; rd_slice_abs_offset
00006D1A                                   10799 @@gen_label568 DS    0H
00006D1A 05EF                              10800          BALR  14,15
00006D1C                                   10801 @@gen_label569 DS    0H
00006D1C B90B 008F                         10802          SLGR  8,15
00006D20 E3F0 21E8 0002          000001E8  10803          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006D26 4780 C202               00006DCC  10804          BZ    @L892
00006D2A E3F0 21E8 0004          000001E8  10805          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006D30 47F0 C20C               00006DD6  10806          B     @L893
00006D38                                   10807          DS    0D
00006D38 0000000000000000                  10808 @lit_2005_378 DC AD(rd_kafka_crash)
00006D40 0000000000014658                  10809 @lit_2005_377 DC AD(@DATA)
00006D48 0000000000014A98                  10810 @lit_2005_376 DC AD(@strings@)
00006D50 0000000000000000                  10811 @lit_2005_380 DC AD(snprintf)
00006D58 0000000000000000                  10812 @lit_2005_382 DC AD(mtx_lock)
00006D60 0000000000001BA8                  10813 @lit_2005_384 DC AD(rd_strlcpy)
00006D68 0000000000000000                  10814 @lit_2005_386 DC AD(mtx_unlock)
00006D70 0000000000001988                  10815 @lit_2005_387 DC AD(rd_kafka_$Api$Key2str)
00006D78 00000000000017D8                  10816 @lit_2005_388 DC AD(rd_slice_offset)
00006D80 0000000000001730                  10817 @lit_2005_389 DC AD(rd_slice_abs_offset)
00006D88 0000000000000000                  10818 @lit_2005_393 DC AD(rd_kafka_log0)
00006D90 0000136A                          10819 @lit_region_diff_2005_2_4  DC A(@REGION_2005_4-@REGION_2005_2)
00006D94 00000000
00006D98 0000000000000000                  10820 @lit_2005_395 DC AD(rd_slice_read)
00006DA0 0000000000000000                  10821 @lit_2005_419 DC AD(rd_slice_ensure_contig)
00006DA8 0000000000000000                  10822 @lit_2005_439 DC AD(calloc)
00006DB0 D200 9000 8000 00000000 00000000  10823 @lit_2005_440          MVC 0(1,9),0(8)
00006DB6 0000
00006DB8 0000000000000238                  10824 @lit_2005_441 DC AD(utf8_2_ebcdic)
00006DC0 0000000000000000                  10825 @lit_2005_442 DC AD(free)
00006DC8 000009A8                          10826 @lit_region_diff_2005_2_3  DC A(@REGION_2005_3-@REGION_2005_2)
00006DCC                                   10827 @L892    DS    0H
00006DCC E3F0 C17E 0004          00006D48  10828          LG    15,@lit_2005_376
00006DD2 41F0 F5A0               000005A0  10829          LA    15,1440(0,15)
00006DD6                                   10830 @L893    DS    0H
00006DD6 E310 2100 0004          00000100  10831          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  220 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006DDC E310 1FD0 0004          00000FD0  10832          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00006DE2 4110 1210               00000210  10833          LA    1,528(0,1)
00006DE6 E310 D2F8 0024          000002F8  10834          STG   1,760(0,13)
00006DEC E310 2100 0004          00000100  10835          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006DF2 E310 1FD0 0004          00000FD0  10836          LG    1,4048(0,1)
00006DF8 E310 D300 0024          00000300  10837          STG   1,768(0,13)
00006DFE 4110 D1F8               000001F8  10838          LA    1,504(0,13)
00006E02 E310 D308 0024          00000308  10839          STG   1,776(0,13)
00006E08 A718 0003               00000003  10840          LHI   1,3         ; 3
00006E0C B914 0011                         10841          LGFR  1,1
00006E10 E310 D310 0024          00000310  10842          STG   1,784(0,13)
00006E16 D707 D318 D318 00000318 00000318  10843          XC    792(8,13),792(13)
00006E1C E310 C17E 0004          00006D48  10844          LG    1,@lit_2005_376
00006E22 4190 15C4               000005C4  10845          LA    9,1476(0,1)
00006E26 E390 D320 0024          00000320  10846          STG   9,800(0,13)
00006E2C 4110 15D0               000005D0  10847          LA    1,1488(0,1)
00006E30 E310 D328 0024          00000328  10848          STG   1,808(0,13)
00006E36 E350 D330 0024          00000330  10849          STG   5,816(0,13)
00006E3C 4810 20BA               000000BA  10850          LH    1,186(0,2)
00006E40 B914 0011                         10851          LGFR  1,1
00006E44 E310 D338 0024          00000338  10852          STG   1,824(0,13)
00006E4A E360 D340 0024          00000340  10853          STG   6,832(0,13)
00006E50 E310 2098 0004          00000098  10854          LG    1,152(0,2)  ; offset of end in rd_slice_s
00006E56 E310 2090 000B          00000090  10855          SLG   1,144(0,2)
00006E5C E310 D348 0024          00000348  10856          STG   1,840(0,13)
00006E62 E310 C176 0004          00006D40  10857          LG    1,@lit_2005_377
00006E68 4110 1224               00000224  10858          LA    1,548(0,1)
00006E6C E310 D350 0024          00000350  10859          STG   1,848(0,13)
00006E72 E548 D358 0274          00000358  10860          MVGHI 856(13),628
00006E78 D707 D360 D360 00000360 00000360  10861          XC    864(8,13),864(13)
00006E7E E380 D368 0024          00000368  10862          STG   8,872(0,13)
00006E84 E3F0 D370 0024          00000370  10863          STG   15,880(0,13)
00006E8A 41F0 D0F8               000000F8  10864          LA    15,248(0,13)
00006E8E E3F0 D378 0024          00000378  10865          STG   15,888(0,13)
00006E94 4110 D2F8               000002F8  10866          LA    1,760(0,13)
00006E98 E3F0 C1BE 0004          00006D88  10867          LG    15,@lit_2005_393 ; rd_kafka_log0
00006E9E                                   10868 @@gen_label571 DS    0H
00006E9E 05EF                              10869          BALR  14,15
00006EA0                                   10870 @@gen_label572 DS    0H
00006EA0                                   10871 @L883    DS    0H
00006EA0 E54C 2188 FF65          00000188  10872          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00006EA6 E3C0 C1C6 001A          00006D90  10873          ALGF  12,@lit_region_diff_2005_2_4
                                           10874          DROP  12
                        00007F34           10875          USING @REGION_2005_4,12
00006EAC 47F0 C678               000085AC  10876          B     @_err_parse@2005@1
                                           10877          DROP  12
                        00006BCA           10878          USING @REGION_2005_2,12
00006EB0                                   10879 @L879    DS    0H
00006EB0 E3F0 D0C0 0004          000000C0  10880          LG    15,192(0,13) ; _v
00006EB6 E3F0 D0B8 0024          000000B8  10881          STG   15,184(0,13)
00006EBC A7FA FFFF               0000FFFF  10882          AHI   15,-1
00006EC0 50F0 D0E8               000000E8  10883          ST    15,232(0,13)
                                                                                                                           Page  221 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006EC4 186F                              10884          LR    6,15
00006EC6 47F0 C5DA               000071A4  10885          B     @L894
00006ECA                                   10886 @L898    DS    0H
00006ECA A769 0002               00000002  10887          LGHI  6,2         ; 2
00006ECE 41F0 2078               00000078  10888          LA    15,120(0,2)
00006ED2 E3F0 D2F8 0024          000002F8  10889          STG   15,760(0,13)
00006ED8 41F0 D0C8               000000C8  10890          LA    15,200(0,13)
00006EDC E3F0 D300 0024          00000300  10891          STG   15,768(0,13)
00006EE2 E360 D308 0024          00000308  10892          STG   6,776(0,13)
00006EE8 4110 D2F8               000002F8  10893          LA    1,760(0,13)
00006EEC E3F0 C1CE 0004          00006D98  10894          LG    15,@lit_2005_395 ; rd_slice_read
00006EF2                                   10895 @@gen_label573 DS    0H
00006EF2 05EF                              10896          BALR  14,15
00006EF4                                   10897 @@gen_label574 DS    0H
00006EF4 B902 00FF                         10898          LTGR  15,15
00006EF8 4770 C5BC               00007186  10899          BNZ   @L901
00006EFC                                   10900 @L902    DS    0H
00006EFC E380 2098 0004          00000098  10901          LG    8,152(0,2)  ; offset of end in rd_slice_s
00006F02 41F0 2078               00000078  10902          LA    15,120(0,2)
00006F06 E3F0 D2F8 0024          000002F8  10903          STG   15,760(0,13)
00006F0C 4110 D2F8               000002F8  10904          LA    1,760(0,13)
00006F10 E3F0 C1B6 0004          00006D80  10905          LG    15,@lit_2005_389 ; rd_slice_abs_offset
00006F16                                   10906 @@gen_label576 DS    0H
00006F16 05EF                              10907          BALR  14,15
00006F18                                   10908 @@gen_label577 DS    0H
00006F18 B90B 008F                         10909          SLGR  8,15
00006F1C B921 0068                         10910          CLGR  6,8
00006F20 47D0 C5BC               00007186  10911          BNH   @L905
00006F24                                   10912 @L906    DS    0H
00006F24 A7F8 0003               00000003  10913          LHI   15,3        ; 3
00006F28 12FF                              10914          LTR   15,15
00006F2A 47D0 C5AC               00007176  10915          BNH   @L909
00006F2E                                   10916 @L910    DS    0H
00006F2E E3F0 2100 0002          00000100  10917          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006F34 4770 C3B0               00006F7A  10918          BNZ   @L913
00006F38 E3F0 C17E 0004          00006D48  10919          LG    15,@lit_2005_376
00006F3E 4110 F1B2               000001B2  10920          LA    1,434(0,15)
00006F42 E310 D2F8 0024          000002F8  10921          STG   1,760(0,13)
00006F48 E548 D300 0274          00000300  10922          MVGHI 768(13),628
00006F4E E310 C176 0004          00006D40  10923          LG    1,@lit_2005_377
00006F54 4110 1224               00000224  10924          LA    1,548(0,1)
00006F58 E310 D308 0024          00000308  10925          STG   1,776(0,13)
00006F5E D707 D310 D310 00000310 00000310  10926          XC    784(8,13),784(13)
00006F64 41F0 F582               00000582  10927          LA    15,1410(0,15)
00006F68 E3F0 D318 0024          00000318  10928          STG   15,792(0,13)
00006F6E 4110 D2F8               000002F8  10929          LA    1,760(0,13)
00006F72 E3F0 C16E 0004          00006D38  10930          LG    15,@lit_2005_378 ; rd_kafka_crash
00006F78                                   10931 @@gen_label581 DS    0H
00006F78 05EF                              10932          BALR  14,15
00006F7A                                   10933 @@gen_label582 DS    0H
00006F7A                                   10934 @L913    DS    0H
00006F7A 41F0 D0F8               000000F8  10935          LA    15,248(0,13)
                                                                                                                           Page  222 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006F7E E3F0 D2F8 0024          000002F8  10936          STG   15,760(0,13)
00006F84 E548 D300 0100          00000300  10937          MVGHI 768(13),256
00006F8A E3F0 C17E 0004          00006D48  10938          LG    15,@lit_2005_376
00006F90 41F0 F59C               0000059C  10939          LA    15,1436(0,15)
00006F94 E3F0 D308 0024          00000308  10940          STG   15,776(0,13)
00006F9A 4110 D2F8               000002F8  10941          LA    1,760(0,13)
00006F9E E3F0 C186 0004          00006D50  10942          LG    15,@lit_2005_380 ; snprintf
00006FA4                                   10943 @@gen_label583 DS    0H
00006FA4 05EF                              10944          BALR  14,15
00006FA6                                   10945 @@gen_label584 DS    0H
00006FA6 41F0 D0F8               000000F8  10946          LA    15,248(0,13)
00006FAA B904 001F                         10947          LGR   1,15
00006FAE A709 0000               00000000  10948          LGHI  0,0
00006FB2                                   10949 @@gen_label585 DS 0H
00006FB2 B25E 000F                         10950          SRST  0,15
00006FB6 4710 C3E8               00006FB2  10951          BC  1,@@gen_label585
00006FBA B90B 0001                         10952          SLGR  0,1
00006FBE A70F 0002               00000002  10953          CGHI  0,2
00006FC2 4770 C400               00006FCA  10954          BNE   @L915
00006FC6 9200 D0F8      000000F8 00000000  10955          MVI   248(13),0
00006FCA                                   10956 @L914    DS    0H
00006FCA                                   10957 @L915    DS    0H
00006FCA E3F0 2100 0004          00000100  10958          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006FD0 A759 1638               00001638  10959          LGHI  5,5688      ; 5688
00006FD4 41F5 F000               00000000  10960          LA    15,0(5,15)
00006FD8 E3F0 D2F8 0024          000002F8  10961          STG   15,760(0,13)
00006FDE 4110 D2F8               000002F8  10962          LA    1,760(0,13)
00006FE2 E3F0 C18E 0004          00006D58  10963          LG    15,@lit_2005_382 ; mtx_lock
00006FE8                                   10964 @@gen_label587 DS    0H
00006FE8 05EF                              10965          BALR  14,15
00006FEA                                   10966 @@gen_label588 DS    0H
00006FEA 41F0 D1F8               000001F8  10967          LA    15,504(0,13)
00006FEE E3F0 D2F8 0024          000002F8  10968          STG   15,760(0,13)
00006FF4 E3F0 2100 0004          00000100  10969          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006FFA A719 1630               00001630  10970          LGHI  1,5680      ; 5680
00006FFE E3F1 F000 0004          00000000  10971          LG    15,0(1,15)
00007004 E3F0 D300 0024          00000300  10972          STG   15,768(0,13)
0000700A E548 D308 0100          00000308  10973          MVGHI 776(13),256
00007010 4110 D2F8               000002F8  10974          LA    1,760(0,13)
00007014 E3F0 C196 0004          00006D60  10975          LG    15,@lit_2005_384 ; rd_strlcpy
0000701A                                   10976 @@gen_label589 DS    0H
0000701A 05EF                              10977          BALR  14,15
0000701C                                   10978 @@gen_label590 DS    0H
0000701C E3F0 2100 0004          00000100  10979          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007022 41F5 F000               00000000  10980          LA    15,0(5,15)
00007026 E3F0 D2F8 0024          000002F8  10981          STG   15,760(0,13)
0000702C 4110 D2F8               000002F8  10982          LA    1,760(0,13)
00007030 E3F0 C19E 0004          00006D68  10983          LG    15,@lit_2005_386 ; mtx_unlock
00007036                                   10984 @@gen_label591 DS    0H
00007036 05EF                              10985          BALR  14,15
00007038                                   10986 @@gen_label592 DS    0H
00007038 E3F0 20B8 0015          000000B8  10987          LGH   15,184(0,2)
                                                                                                                           Page  223 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000703E E3F0 D2F8 0024          000002F8  10988          STG   15,760(0,13)
00007044 4110 D2F8               000002F8  10989          LA    1,760(0,13)
00007048 E3F0 C1A6 0004          00006D70  10990          LG    15,@lit_2005_387 ; rd_kafka_ApiKey2str
0000704E                                   10991 @@gen_label593 DS    0H
0000704E 05EF                              10992          BALR  14,15
00007050                                   10993 @@gen_label594 DS    0H
00007050 B904 005F                         10994          LGR   5,15
00007054 41F0 2078               00000078  10995          LA    15,120(0,2)
00007058 E3F0 D2F8 0024          000002F8  10996          STG   15,760(0,13)
0000705E 4110 D2F8               000002F8  10997          LA    1,760(0,13)
00007062 E3F0 C1AE 0004          00006D78  10998          LG    15,@lit_2005_388 ; rd_slice_offset
00007068                                   10999 @@gen_label595 DS    0H
00007068 05EF                              11000          BALR  14,15
0000706A                                   11001 @@gen_label596 DS    0H
0000706A B904 008F                         11002          LGR   8,15
0000706E E390 2098 0004          00000098  11003          LG    9,152(0,2)  ; offset of end in rd_slice_s
00007074 41F0 2078               00000078  11004          LA    15,120(0,2)
00007078 E3F0 D2F8 0024          000002F8  11005          STG   15,760(0,13)
0000707E 4110 D2F8               000002F8  11006          LA    1,760(0,13)
00007082 E3F0 C1B6 0004          00006D80  11007          LG    15,@lit_2005_389 ; rd_slice_abs_offset
00007088                                   11008 @@gen_label597 DS    0H
00007088 05EF                              11009          BALR  14,15
0000708A                                   11010 @@gen_label598 DS    0H
0000708A B90B 009F                         11011          SLGR  9,15
0000708E E3F0 21E8 0002          000001E8  11012          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007094 4780 C4D8               000070A2  11013          BZ    @L918
00007098 E3F0 21E8 0004          000001E8  11014          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000709E 47F0 C4E2               000070AC  11015          B     @L919
000070A2                                   11016 @L918    DS    0H
000070A2 E3F0 C17E 0004          00006D48  11017          LG    15,@lit_2005_376
000070A8 41F0 F5A0               000005A0  11018          LA    15,1440(0,15)
000070AC                                   11019 @L919    DS    0H
000070AC E310 2100 0004          00000100  11020          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000070B2 E310 1FD0 0004          00000FD0  11021          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000070B8 4110 1210               00000210  11022          LA    1,528(0,1)
000070BC E310 D2F8 0024          000002F8  11023          STG   1,760(0,13)
000070C2 E310 2100 0004          00000100  11024          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000070C8 E310 1FD0 0004          00000FD0  11025          LG    1,4048(0,1)
000070CE E310 D300 0024          00000300  11026          STG   1,768(0,13)
000070D4 4110 D1F8               000001F8  11027          LA    1,504(0,13)
000070D8 E310 D308 0024          00000308  11028          STG   1,776(0,13)
000070DE A718 0003               00000003  11029          LHI   1,3         ; 3
000070E2 B914 0011                         11030          LGFR  1,1
000070E6 E310 D310 0024          00000310  11031          STG   1,784(0,13)
000070EC D707 D318 D318 00000318 00000318  11032          XC    792(8,13),792(13)
000070F2 E310 C17E 0004          00006D48  11033          LG    1,@lit_2005_376
000070F8 41E0 15C4               000005C4  11034          LA    14,1476(0,1)
000070FC E3E0 D320 0024          00000320  11035          STG   14,800(0,13)
00007102 4110 15D0               000005D0  11036          LA    1,1488(0,1)
00007106 E310 D328 0024          00000328  11037          STG   1,808(0,13)
                                                                                                                           Page  224 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000710C E350 D330 0024          00000330  11038          STG   5,816(0,13)
00007112 4810 20BA               000000BA  11039          LH    1,186(0,2)
00007116 B914 0011                         11040          LGFR  1,1
0000711A E310 D338 0024          00000338  11041          STG   1,824(0,13)
00007120 E380 D340 0024          00000340  11042          STG   8,832(0,13)
00007126 E310 2098 0004          00000098  11043          LG    1,152(0,2)  ; offset of end in rd_slice_s
0000712C E310 2090 000B          00000090  11044          SLG   1,144(0,2)
00007132 E310 D348 0024          00000348  11045          STG   1,840(0,13)
00007138 E310 C176 0004          00006D40  11046          LG    1,@lit_2005_377
0000713E 4110 1224               00000224  11047          LA    1,548(0,1)
00007142 E310 D350 0024          00000350  11048          STG   1,848(0,13)
00007148 E548 D358 0274          00000358  11049          MVGHI 856(13),628
0000714E E360 D360 0024          00000360  11050          STG   6,864(0,13)
00007154 E390 D368 0024          00000368  11051          STG   9,872(0,13)
0000715A E3F0 D370 0024          00000370  11052          STG   15,880(0,13)
00007160 41F0 D0F8               000000F8  11053          LA    15,248(0,13)
00007164 E3F0 D378 0024          00000378  11054          STG   15,888(0,13)
0000716A 4110 D2F8               000002F8  11055          LA    1,760(0,13)
0000716E E3F0 C1BE 0004          00006D88  11056          LG    15,@lit_2005_393 ; rd_kafka_log0
00007174                                   11057 @@gen_label600 DS    0H
00007174 05EF                              11058          BALR  14,15
00007176                                   11059 @@gen_label601 DS    0H
00007176                                   11060 @L909    DS    0H
00007176 E54C 2188 FF65          00000188  11061          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000717C E3C0 C1C6 001A          00006D90  11062          ALGF  12,@lit_region_diff_2005_2_4
                                           11063          DROP  12
                        00007F34           11064          USING @REGION_2005_4,12
00007182 47F0 C678               000085AC  11065          B     @_err_parse@2005@1
                                           11066          DROP  12
                        00006BCA           11067          USING @REGION_2005_2,12
00007186                                   11068 @L905    DS    0H
00007186                                   11069 @L901    DS    0H
00007186 48F0 D0C8               000000C8  11070          LH    15,200(0,13) ; _v
0000718A 50F0 D0E8               000000E8  11071          ST    15,232(0,13)
0000718E E55C D0E8 FFFF          000000E8  11072          CHSI  232(13),-1
00007194 4770 C5D6               000071A0  11073          BNE   @L920
00007198 A768 0000               00000000  11074          LHI   6,0         ; 0
0000719C 47F0 C5DA               000071A4  11075          B     @L921
000071A0                                   11076 @L920    DS    0H
000071A0 5860 D0E8               000000E8  11077          L     6,232(0,13)
000071A4                                   11078 @L921    DS    0H
000071A4                                   11079 @L894    DS    0H
000071A4 E55C D0E8 FFFF          000000E8  11080          CHSI  232(13),-1
000071AA 4770 C5F2               000071BC  11081          BNE   @L922
000071AE A7F9 0000               00000000  11082          LGHI  15,0        ; 0
000071B2 E3F0 D0F0 0024          000000F0  11083          STG   15,240(0,13) ; offset of str in rd_kafkap_str_s
000071B8 47F0 C8DE               000074A8  11084          B     @L923
000071BC                                   11085 @L922    DS    0H
000071BC E55C D0E8 FFFF          000000E8  11086          CHSI  232(13),-1
000071C2 4770 C604               000071CE  11087          BNE   @L924
000071C6 A7F8 0000               00000000  11088          LHI   15,0        ; 0
000071CA 47F0 C608               000071D2  11089          B     @L925
                                                                                                                           Page  225 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000071CE                                   11090 @L924    DS    0H
000071CE 58F0 D0E8               000000E8  11091          L     15,232(0,13)
000071D2                                   11092 @L925    DS    0H
000071D2 12FF                              11093          LTR   15,15
000071D4 4770 C622               000071EC  11094          BNE   @L926
000071D8 E3F0 C17E 0004          00006D48  11095          LG    15,@lit_2005_376
000071DE 41F0 F3C4               000003C4  11096          LA    15,964(0,15)
000071E2 E3F0 D0F0 0024          000000F0  11097          STG   15,240(0,13) ; offset of str in rd_kafkap_str_s
000071E8 47F0 C8DE               000074A8  11098          B     @L923
000071EC                                   11099 @L926    DS    0H
000071EC 41F0 2078               00000078  11100          LA    15,120(0,2)
000071F0 E3F0 D2F8 0024          000002F8  11101          STG   15,760(0,13)
000071F6 B914 00F6                         11102          LGFR  15,6
000071FA E3F0 D300 0024          00000300  11103          STG   15,768(0,13)
00007200 4110 D2F8               000002F8  11104          LA    1,760(0,13)
00007204 E3F0 C1D6 0004          00006DA0  11105          LG    15,@lit_2005_419 ; rd_slice_ensure_contig
0000720A                                   11106 @@gen_label606 DS    0H
0000720A 05EF                              11107          BALR  14,15
0000720C                                   11108 @@gen_label607 DS    0H
0000720C E3F0 D0F0 0024          000000F0  11109          STG   15,240(0,13)
00007212 B902 00FF                         11110          LTGR  15,15
00007216 4770 C8DE               000074A8  11111          BNZ   @L923
0000721A                                   11112 @L929    DS    0H
0000721A B914 0066                         11113          LGFR  6,6
0000721E E380 2098 0004          00000098  11114          LG    8,152(0,2)  ; offset of end in rd_slice_s
00007224 41F0 2078               00000078  11115          LA    15,120(0,2)
00007228 E3F0 D2F8 0024          000002F8  11116          STG   15,760(0,13)
0000722E 4110 D2F8               000002F8  11117          LA    1,760(0,13)
00007232 E3F0 C1B6 0004          00006D80  11118          LG    15,@lit_2005_389 ; rd_slice_abs_offset
00007238                                   11119 @@gen_label609 DS    0H
00007238 05EF                              11120          BALR  14,15
0000723A                                   11121 @@gen_label610 DS    0H
0000723A B90B 008F                         11122          SLGR  8,15
0000723E B921 0068                         11123          CLGR  6,8
00007242 47D0 C8DE               000074A8  11124          BNH   @L932
00007246                                   11125 @L933    DS    0H
00007246 A7F8 0003               00000003  11126          LHI   15,3        ; 3
0000724A 12FF                              11127          LTR   15,15
0000724C 47D0 C8CE               00007498  11128          BNH   @L936
00007250                                   11129 @L937    DS    0H
00007250 E3F0 2100 0002          00000100  11130          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007256 4770 C6D2               0000729C  11131          BNZ   @L940
0000725A E3F0 C17E 0004          00006D48  11132          LG    15,@lit_2005_376
00007260 4110 F1B2               000001B2  11133          LA    1,434(0,15)
00007264 E310 D2F8 0024          000002F8  11134          STG   1,760(0,13)
0000726A E548 D300 0274          00000300  11135          MVGHI 768(13),628
00007270 E310 C176 0004          00006D40  11136          LG    1,@lit_2005_377
00007276 4110 1224               00000224  11137          LA    1,548(0,1)
0000727A E310 D308 0024          00000308  11138          STG   1,776(0,13)
00007280 D707 D310 D310 00000310 00000310  11139          XC    784(8,13),784(13)
00007286 41F0 F582               00000582  11140          LA    15,1410(0,15)
0000728A E3F0 D318 0024          00000318  11141          STG   15,792(0,13)
                                                                                                                           Page  226 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007290 4110 D2F8               000002F8  11142          LA    1,760(0,13)
00007294 E3F0 C16E 0004          00006D38  11143          LG    15,@lit_2005_378 ; rd_kafka_crash
0000729A                                   11144 @@gen_label614 DS    0H
0000729A 05EF                              11145          BALR  14,15
0000729C                                   11146 @@gen_label615 DS    0H
0000729C                                   11147 @L940    DS    0H
0000729C 41F0 D0F8               000000F8  11148          LA    15,248(0,13)
000072A0 E3F0 D2F8 0024          000002F8  11149          STG   15,760(0,13)
000072A6 E548 D300 0100          00000300  11150          MVGHI 768(13),256
000072AC E3F0 C17E 0004          00006D48  11151          LG    15,@lit_2005_376
000072B2 41F0 F59C               0000059C  11152          LA    15,1436(0,15)
000072B6 E3F0 D308 0024          00000308  11153          STG   15,776(0,13)
000072BC 4110 D2F8               000002F8  11154          LA    1,760(0,13)
000072C0 E3F0 C186 0004          00006D50  11155          LG    15,@lit_2005_380 ; snprintf
000072C6                                   11156 @@gen_label616 DS    0H
000072C6 05EF                              11157          BALR  14,15
000072C8                                   11158 @@gen_label617 DS    0H
000072C8 41F0 D0F8               000000F8  11159          LA    15,248(0,13)
000072CC B904 001F                         11160          LGR   1,15
000072D0 A709 0000               00000000  11161          LGHI  0,0
000072D4                                   11162 @@gen_label618 DS 0H
000072D4 B25E 000F                         11163          SRST  0,15
000072D8 4710 C70A               000072D4  11164          BC  1,@@gen_label618
000072DC B90B 0001                         11165          SLGR  0,1
000072E0 A70F 0002               00000002  11166          CGHI  0,2
000072E4 4770 C722               000072EC  11167          BNE   @L942
000072E8 9200 D0F8      000000F8 00000000  11168          MVI   248(13),0
000072EC                                   11169 @L941    DS    0H
000072EC                                   11170 @L942    DS    0H
000072EC E3F0 2100 0004          00000100  11171          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000072F2 A759 1638               00001638  11172          LGHI  5,5688      ; 5688
000072F6 41F5 F000               00000000  11173          LA    15,0(5,15)
000072FA E3F0 D2F8 0024          000002F8  11174          STG   15,760(0,13)
00007300 4110 D2F8               000002F8  11175          LA    1,760(0,13)
00007304 E3F0 C18E 0004          00006D58  11176          LG    15,@lit_2005_382 ; mtx_lock
0000730A                                   11177 @@gen_label620 DS    0H
0000730A 05EF                              11178          BALR  14,15
0000730C                                   11179 @@gen_label621 DS    0H
0000730C 41F0 D1F8               000001F8  11180          LA    15,504(0,13)
00007310 E3F0 D2F8 0024          000002F8  11181          STG   15,760(0,13)
00007316 E3F0 2100 0004          00000100  11182          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000731C A719 1630               00001630  11183          LGHI  1,5680      ; 5680
00007320 E3F1 F000 0004          00000000  11184          LG    15,0(1,15)
00007326 E3F0 D300 0024          00000300  11185          STG   15,768(0,13)
0000732C E548 D308 0100          00000308  11186          MVGHI 776(13),256
00007332 4110 D2F8               000002F8  11187          LA    1,760(0,13)
00007336 E3F0 C196 0004          00006D60  11188          LG    15,@lit_2005_384 ; rd_strlcpy
0000733C                                   11189 @@gen_label622 DS    0H
0000733C 05EF                              11190          BALR  14,15
0000733E                                   11191 @@gen_label623 DS    0H
0000733E E3F0 2100 0004          00000100  11192          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007344 41F5 F000               00000000  11193          LA    15,0(5,15)
                                                                                                                           Page  227 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007348 E3F0 D2F8 0024          000002F8  11194          STG   15,760(0,13)
0000734E 4110 D2F8               000002F8  11195          LA    1,760(0,13)
00007352 E3F0 C19E 0004          00006D68  11196          LG    15,@lit_2005_386 ; mtx_unlock
00007358                                   11197 @@gen_label624 DS    0H
00007358 05EF                              11198          BALR  14,15
0000735A                                   11199 @@gen_label625 DS    0H
0000735A E3F0 20B8 0015          000000B8  11200          LGH   15,184(0,2)
00007360 E3F0 D2F8 0024          000002F8  11201          STG   15,760(0,13)
00007366 4110 D2F8               000002F8  11202          LA    1,760(0,13)
0000736A E3F0 C1A6 0004          00006D70  11203          LG    15,@lit_2005_387 ; rd_kafka_ApiKey2str
00007370                                   11204 @@gen_label626 DS    0H
00007370 05EF                              11205          BALR  14,15
00007372                                   11206 @@gen_label627 DS    0H
00007372 B904 005F                         11207          LGR   5,15
00007376 41F0 2078               00000078  11208          LA    15,120(0,2)
0000737A E3F0 D2F8 0024          000002F8  11209          STG   15,760(0,13)
00007380 4110 D2F8               000002F8  11210          LA    1,760(0,13)
00007384 E3F0 C1AE 0004          00006D78  11211          LG    15,@lit_2005_388 ; rd_slice_offset
0000738A                                   11212 @@gen_label628 DS    0H
0000738A 05EF                              11213          BALR  14,15
0000738C                                   11214 @@gen_label629 DS    0H
0000738C B904 008F                         11215          LGR   8,15
00007390 E390 2098 0004          00000098  11216          LG    9,152(0,2)  ; offset of end in rd_slice_s
00007396 41F0 2078               00000078  11217          LA    15,120(0,2)
0000739A E3F0 D2F8 0024          000002F8  11218          STG   15,760(0,13)
000073A0 4110 D2F8               000002F8  11219          LA    1,760(0,13)
000073A4 E3F0 C1B6 0004          00006D80  11220          LG    15,@lit_2005_389 ; rd_slice_abs_offset
000073AA                                   11221 @@gen_label630 DS    0H
000073AA 05EF                              11222          BALR  14,15
000073AC                                   11223 @@gen_label631 DS    0H
000073AC B90B 009F                         11224          SLGR  9,15
000073B0 E3F0 21E8 0002          000001E8  11225          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000073B6 4780 C7FA               000073C4  11226          BZ    @L945
000073BA E3F0 21E8 0004          000001E8  11227          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000073C0 47F0 C804               000073CE  11228          B     @L946
000073C4                                   11229 @L945    DS    0H
000073C4 E3F0 C17E 0004          00006D48  11230          LG    15,@lit_2005_376
000073CA 41F0 F5A0               000005A0  11231          LA    15,1440(0,15)
000073CE                                   11232 @L946    DS    0H
000073CE E310 2100 0004          00000100  11233          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000073D4 E310 1FD0 0004          00000FD0  11234          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000073DA 4110 1210               00000210  11235          LA    1,528(0,1)
000073DE E310 D2F8 0024          000002F8  11236          STG   1,760(0,13)
000073E4 E310 2100 0004          00000100  11237          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000073EA E310 1FD0 0004          00000FD0  11238          LG    1,4048(0,1)
000073F0 E310 D300 0024          00000300  11239          STG   1,768(0,13)
000073F6 4110 D1F8               000001F8  11240          LA    1,504(0,13)
000073FA E310 D308 0024          00000308  11241          STG   1,776(0,13)
00007400 A718 0003               00000003  11242          LHI   1,3         ; 3
00007404 B914 0011                         11243          LGFR  1,1
                                                                                                                           Page  228 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007408 E310 D310 0024          00000310  11244          STG   1,784(0,13)
0000740E D707 D318 D318 00000318 00000318  11245          XC    792(8,13),792(13)
00007414 E310 C17E 0004          00006D48  11246          LG    1,@lit_2005_376
0000741A 41E0 15C4               000005C4  11247          LA    14,1476(0,1)
0000741E E3E0 D320 0024          00000320  11248          STG   14,800(0,13)
00007424 4110 15D0               000005D0  11249          LA    1,1488(0,1)
00007428 E310 D328 0024          00000328  11250          STG   1,808(0,13)
0000742E E350 D330 0024          00000330  11251          STG   5,816(0,13)
00007434 4810 20BA               000000BA  11252          LH    1,186(0,2)
00007438 B914 0011                         11253          LGFR  1,1
0000743C E310 D338 0024          00000338  11254          STG   1,824(0,13)
00007442 E380 D340 0024          00000340  11255          STG   8,832(0,13)
00007448 E310 2098 0004          00000098  11256          LG    1,152(0,2)  ; offset of end in rd_slice_s
0000744E E310 2090 000B          00000090  11257          SLG   1,144(0,2)
00007454 E310 D348 0024          00000348  11258          STG   1,840(0,13)
0000745A E310 C176 0004          00006D40  11259          LG    1,@lit_2005_377
00007460 4110 1224               00000224  11260          LA    1,548(0,1)
00007464 E310 D350 0024          00000350  11261          STG   1,848(0,13)
0000746A E548 D358 0274          00000358  11262          MVGHI 856(13),628
00007470 E360 D360 0024          00000360  11263          STG   6,864(0,13)
00007476 E390 D368 0024          00000368  11264          STG   9,872(0,13)
0000747C E3F0 D370 0024          00000370  11265          STG   15,880(0,13)
00007482 41F0 D0F8               000000F8  11266          LA    15,248(0,13)
00007486 E3F0 D378 0024          00000378  11267          STG   15,888(0,13)
0000748C 4110 D2F8               000002F8  11268          LA    1,760(0,13)
00007490 E3F0 C1BE 0004          00006D88  11269          LG    15,@lit_2005_393 ; rd_kafka_log0
00007496                                   11270 @@gen_label633 DS    0H
00007496 05EF                              11271          BALR  14,15
00007498                                   11272 @@gen_label634 DS    0H
00007498                                   11273 @L936    DS    0H
00007498 E54C 2188 FF65          00000188  11274          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000749E E3C0 C1C6 001A          00006D90  11275          ALGF  12,@lit_region_diff_2005_2_4
                                           11276          DROP  12
                        00007F34           11277          USING @REGION_2005_4,12
000074A4 47F0 C678               000085AC  11278          B     @_err_parse@2005@1
                                           11279          DROP  12
                        00006BCA           11280          USING @REGION_2005_2,12
000074A8                                   11281 @L932    DS    0H
000074A8                                   11282 @L928    DS    0H
000074A8                                   11283 @L927    DS    0H
000074A8                                   11284 @L923    DS    0H
000074A8 E55C D0E8 0000          000000E8  11285          CHSI  232(13),0
000074AE 47D0 C9A2               0000756C  11286          BNH   @L947
000074B2 E548 D2F8 0001          000002F8  11287          MVGHI 760(13),1
000074B8 E3F0 D0E8 0014          000000E8  11288          LGF   15,232(0,13)
000074BE E3F0 D300 0024          00000300  11289          STG   15,768(0,13)
000074C4 4110 D2F8               000002F8  11290          LA    1,760(0,13)
000074C8 E3F0 C1DE 0004          00006DA8  11291          LG    15,@lit_2005_439 ; calloc
000074CE                                   11292 @@gen_label636 DS    0H
000074CE 05EF                              11293          BALR  14,15
000074D0                                   11294 @@gen_label637 DS    0H
000074D0 B904 006F                         11295          LGR   6,15
                                                                                                                           Page  229 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000074D4 E310 D0E8 0014          000000E8  11296          LGF   1,232(0,13)
000074DA E380 D0F0 0004          000000F0  11297          LG    8,240(0,13)
000074E0 B904 0096                         11298          LGR   9,6
000074E4 B902 00F1                         11299          LTGR  15,1
000074E8 4780 C94C               00007516  11300          BZ    @@gen_label640
000074EC A7FB FFFF               0000FFFF  11301          AGHI  15,-1
000074F0 EB1F 0008 000A          00000008  11302          SRAG  1,15,8(0)
000074F6 B902 0011                         11303          LTGR  1,1
000074FA 4780 C948               00007512  11304          BZ    @@gen_label639
000074FE                                   11305 @@gen_label638 DS 0H
000074FE D2FF 9000 8000 00000000 00000000  11306          MVC   0(256,9),0(8)
00007504 4190 9100               00000100  11307          LA    9,256(0,9)
00007508 4180 8100               00000100  11308          LA    8,256(0,8)
0000750C E310 C934 0046          000074FE  11309          BCTG  1,@@gen_label638
00007512                                   11310 @@gen_label639 DS 0H
00007512 44F0 C1E6               00006DB0  11311          EX    15,@lit_2005_440
00007516                                   11312 @@gen_label640 DS 0H
00007516 E3F0 D0E8 0014          000000E8  11313          LGF   15,232(0,13)
0000751C E3F0 D100 0024          00000100  11314          STG   15,256(0,13) ; ulen
00007522 E3F0 D0F8 0024          000000F8  11315          STG   15,248(0,13) ; alen
00007528 E3F0 D0F0 0004          000000F0  11316          LG    15,240(0,13)
0000752E E3F0 D2F8 0024          000002F8  11317          STG   15,760(0,13)
00007534 41F0 D0F8               000000F8  11318          LA    15,248(0,13)
00007538 E3F0 D300 0024          00000300  11319          STG   15,768(0,13)
0000753E E360 D308 0024          00000308  11320          STG   6,776(0,13)
00007544 41F0 D100               00000100  11321          LA    15,256(0,13)
00007548 E3F0 D310 0024          00000310  11322          STG   15,784(0,13)
0000754E 4110 D2F8               000002F8  11323          LA    1,760(0,13)
00007552 E3F0 C1EE 0004          00006DB8  11324          LG    15,@lit_2005_441 ; utf8_2_ebcdic
00007558                                   11325 @@gen_label641 DS    0H
00007558 05EF                              11326          BALR  14,15
0000755A                                   11327 @@gen_label642 DS    0H
0000755A E360 D2F8 0024          000002F8  11328          STG   6,760(0,13)
00007560 4110 D2F8               000002F8  11329          LA    1,760(0,13)
00007564 E3F0 C1F6 0004          00006DC0  11330          LG    15,@lit_2005_442 ; free
0000756A                                   11331 @@gen_label643 DS    0H
0000756A 05EF                              11332          BALR  14,15
0000756C                                   11333 @@gen_label644 DS    0H
0000756C                                   11334 @L947    DS    0H
                                           11335 * ***                   do { int32_t _v; do { size_t __len2 = (size_t)\
                                           11336 * (sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2\
                                           11337 * )) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)-\
                                           11338 * >rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))\
                                           11339 * ) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)\
                                           11340 * ))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c"\
                                           11341 * ,629, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           11342 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           11343 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           11344 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           11345 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           11346 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           11347 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                                                                                                           Page  230 
  Active Usings: @REGION_2005_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           11348 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           11349 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           11350 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           11351 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           11352 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           11353 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 629, __len0, ((&rkb\
                                           11354 * uf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)),\
                                           11355 *  rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "in\
                                           11356 * correct broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)\
                                           11357 * ->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while \
                                           11358 * (0); } } while (0); } while (0); *(&PartCnt) = (_v); } while (0);
0000756C                                   11359 @L948    DS    0H
0000756C E3C0 C1FE 001A          00006DC8  11360          ALGF  12,@lit_region_diff_2005_2_3
00007572                                   11361 @REGION_2005_3 DS 0H
                                           11362          DROP  12
                        00007572           11363          USING @REGION_2005_3,12
00007572                                   11364 @L951    DS    0H
00007572 A769 0004               00000004  11365          LGHI  6,4         ; 4
00007576 41F0 2078               00000078  11366          LA    15,120(0,2)
0000757A E3F0 D2F8 0024          000002F8  11367          STG   15,760(0,13)
00007580 41F0 D0CC               000000CC  11368          LA    15,204(0,13)
00007584 E3F0 D300 0024          00000300  11369          STG   15,768(0,13)
0000758A E360 D308 0024          00000308  11370          STG   6,776(0,13)
00007590 4110 D2F8               000002F8  11371          LA    1,760(0,13)
00007594 E3F0 C1DE 0004          00007750  11372          LG    15,@lit_2005_444 ; rd_slice_read
0000759A                                   11373 @@gen_label645 DS    0H
0000759A 05EF                              11374          BALR  14,15
0000759C                                   11375 @@gen_label646 DS    0H
0000759C B902 00FF                         11376          LTGR  15,15
000075A0 4770 C342               000078B4  11377          BNZ   @L954
000075A4                                   11378 @L955    DS    0H
000075A4 E380 2098 0004          00000098  11379          LG    8,152(0,2)  ; offset of end in rd_slice_s
000075AA 41F0 2078               00000078  11380          LA    15,120(0,2)
000075AE E3F0 D2F8 0024          000002F8  11381          STG   15,760(0,13)
000075B4 4110 D2F8               000002F8  11382          LA    1,760(0,13)
000075B8 E3F0 C1E6 0004          00007758  11383          LG    15,@lit_2005_445 ; rd_slice_abs_offset
000075BE                                   11384 @@gen_label648 DS    0H
000075BE 05EF                              11385          BALR  14,15
000075C0                                   11386 @@gen_label649 DS    0H
000075C0 B90B 008F                         11387          SLGR  8,15
000075C4 B921 0068                         11388          CLGR  6,8
000075C8 47D0 C342               000078B4  11389          BNH   @L958
000075CC                                   11390 @L959    DS    0H
000075CC A7F8 0003               00000003  11391          LHI   15,3        ; 3
000075D0 12FF                              11392          LTR   15,15
000075D2 47D0 C332               000078A4  11393          BNH   @L962
000075D6                                   11394 @L963    DS    0H
000075D6 E3F0 2100 0002          00000100  11395          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000075DC 4770 C0B0               00007622  11396          BNZ   @L966
000075E0 E3F0 C1FE 0004          00007770  11397          LG    15,@lit_2005_446
000075E6 4110 F1B2               000001B2  11398          LA    1,434(0,15)
000075EA E310 D2F8 0024          000002F8  11399          STG   1,760(0,13)
                                                                                                                           Page  231 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000075F0 E548 D300 0275          00000300  11400          MVGHI 768(13),629
000075F6 E310 C1F6 0004          00007768  11401          LG    1,@lit_2005_447
000075FC 4110 1224               00000224  11402          LA    1,548(0,1)
00007600 E310 D308 0024          00000308  11403          STG   1,776(0,13)
00007606 D707 D310 D310 00000310 00000310  11404          XC    784(8,13),784(13)
0000760C 41F0 F582               00000582  11405          LA    15,1410(0,15)
00007610 E3F0 D318 0024          00000318  11406          STG   15,792(0,13)
00007616 4110 D2F8               000002F8  11407          LA    1,760(0,13)
0000761A E3F0 C1EE 0004          00007760  11408          LG    15,@lit_2005_448 ; rd_kafka_crash
00007620                                   11409 @@gen_label653 DS    0H
00007620 05EF                              11410          BALR  14,15
00007622                                   11411 @@gen_label654 DS    0H
00007622                                   11412 @L966    DS    0H
00007622 41F0 D0F8               000000F8  11413          LA    15,248(0,13)
00007626 E3F0 D2F8 0024          000002F8  11414          STG   15,760(0,13)
0000762C E548 D300 0100          00000300  11415          MVGHI 768(13),256
00007632 E3F0 C1FE 0004          00007770  11416          LG    15,@lit_2005_446
00007638 41F0 F59C               0000059C  11417          LA    15,1436(0,15)
0000763C E3F0 D308 0024          00000308  11418          STG   15,776(0,13)
00007642 4110 D2F8               000002F8  11419          LA    1,760(0,13)
00007646 E3F0 C206 0004          00007778  11420          LG    15,@lit_2005_450 ; snprintf
0000764C                                   11421 @@gen_label655 DS    0H
0000764C 05EF                              11422          BALR  14,15
0000764E                                   11423 @@gen_label656 DS    0H
0000764E 41F0 D0F8               000000F8  11424          LA    15,248(0,13)
00007652 B904 001F                         11425          LGR   1,15
00007656 A709 0000               00000000  11426          LGHI  0,0
0000765A                                   11427 @@gen_label657 DS 0H
0000765A B25E 000F                         11428          SRST  0,15
0000765E 4710 C0E8               0000765A  11429          BC  1,@@gen_label657
00007662 B90B 0001                         11430          SLGR  0,1
00007666 A70F 0002               00000002  11431          CGHI  0,2
0000766A 4770 C100               00007672  11432          BNE   @L968
0000766E 9200 D0F8      000000F8 00000000  11433          MVI   248(13),0
00007672                                   11434 @L967    DS    0H
00007672                                   11435 @L968    DS    0H
00007672 E3F0 2100 0004          00000100  11436          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007678 A759 1638               00001638  11437          LGHI  5,5688      ; 5688
0000767C 41F5 F000               00000000  11438          LA    15,0(5,15)
00007680 E3F0 D2F8 0024          000002F8  11439          STG   15,760(0,13)
00007686 4110 D2F8               000002F8  11440          LA    1,760(0,13)
0000768A E3F0 C20E 0004          00007780  11441          LG    15,@lit_2005_452 ; mtx_lock
00007690                                   11442 @@gen_label659 DS    0H
00007690 05EF                              11443          BALR  14,15
00007692                                   11444 @@gen_label660 DS    0H
00007692 41F0 D1F8               000001F8  11445          LA    15,504(0,13)
00007696 E3F0 D2F8 0024          000002F8  11446          STG   15,760(0,13)
0000769C E3F0 2100 0004          00000100  11447          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000076A2 A719 1630               00001630  11448          LGHI  1,5680      ; 5680
000076A6 E3F1 F000 0004          00000000  11449          LG    15,0(1,15)
000076AC E3F0 D300 0024          00000300  11450          STG   15,768(0,13)
000076B2 E548 D308 0100          00000308  11451          MVGHI 776(13),256
                                                                                                                           Page  232 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000076B8 4110 D2F8               000002F8  11452          LA    1,760(0,13)
000076BC E3F0 C216 0004          00007788  11453          LG    15,@lit_2005_454 ; rd_strlcpy
000076C2                                   11454 @@gen_label661 DS    0H
000076C2 05EF                              11455          BALR  14,15
000076C4                                   11456 @@gen_label662 DS    0H
000076C4 E3F0 2100 0004          00000100  11457          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000076CA 41F5 F000               00000000  11458          LA    15,0(5,15)
000076CE E3F0 D2F8 0024          000002F8  11459          STG   15,760(0,13)
000076D4 4110 D2F8               000002F8  11460          LA    1,760(0,13)
000076D8 E3F0 C21E 0004          00007790  11461          LG    15,@lit_2005_456 ; mtx_unlock
000076DE                                   11462 @@gen_label663 DS    0H
000076DE 05EF                              11463          BALR  14,15
000076E0                                   11464 @@gen_label664 DS    0H
000076E0 E3F0 20B8 0015          000000B8  11465          LGH   15,184(0,2)
000076E6 E3F0 D2F8 0024          000002F8  11466          STG   15,760(0,13)
000076EC 4110 D2F8               000002F8  11467          LA    1,760(0,13)
000076F0 E3F0 C226 0004          00007798  11468          LG    15,@lit_2005_457 ; rd_kafka_ApiKey2str
000076F6                                   11469 @@gen_label665 DS    0H
000076F6 05EF                              11470          BALR  14,15
000076F8                                   11471 @@gen_label666 DS    0H
000076F8 B904 005F                         11472          LGR   5,15
000076FC 41F0 2078               00000078  11473          LA    15,120(0,2)
00007700 E3F0 D2F8 0024          000002F8  11474          STG   15,760(0,13)
00007706 4110 D2F8               000002F8  11475          LA    1,760(0,13)
0000770A E3F0 C22E 0004          000077A0  11476          LG    15,@lit_2005_458 ; rd_slice_offset
00007710                                   11477 @@gen_label667 DS    0H
00007710 05EF                              11478          BALR  14,15
00007712                                   11479 @@gen_label668 DS    0H
00007712 B904 008F                         11480          LGR   8,15
00007716 E390 2098 0004          00000098  11481          LG    9,152(0,2)  ; offset of end in rd_slice_s
0000771C 41F0 2078               00000078  11482          LA    15,120(0,2)
00007720 E3F0 D2F8 0024          000002F8  11483          STG   15,760(0,13)
00007726 4110 D2F8               000002F8  11484          LA    1,760(0,13)
0000772A E3F0 C1E6 0004          00007758  11485          LG    15,@lit_2005_445 ; rd_slice_abs_offset
00007730                                   11486 @@gen_label669 DS    0H
00007730 05EF                              11487          BALR  14,15
00007732                                   11488 @@gen_label670 DS    0H
00007732 B90B 009F                         11489          SLGR  9,15
00007736 E3F0 21E8 0002          000001E8  11490          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000773C 4780 C25E               000077D0  11491          BZ    @L971
00007740 E3F0 21E8 0004          000001E8  11492          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007746 47F0 C268               000077DA  11493          B     @L972
00007750                                   11494          DS    0D
00007750 0000000000000000                  11495 @lit_2005_444 DC AD(rd_slice_read)
00007758 0000000000001730                  11496 @lit_2005_445 DC AD(rd_slice_abs_offset)
00007760 0000000000000000                  11497 @lit_2005_448 DC AD(rd_kafka_crash)
00007768 0000000000014658                  11498 @lit_2005_447 DC AD(@DATA)
00007770 0000000000014A98                  11499 @lit_2005_446 DC AD(@strings@)
00007778 0000000000000000                  11500 @lit_2005_450 DC AD(snprintf)
00007780 0000000000000000                  11501 @lit_2005_452 DC AD(mtx_lock)
                                                                                                                           Page  233 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007788 0000000000001BA8                  11502 @lit_2005_454 DC AD(rd_strlcpy)
00007790 0000000000000000                  11503 @lit_2005_456 DC AD(mtx_unlock)
00007798 0000000000001988                  11504 @lit_2005_457 DC AD(rd_kafka_$Api$Key2str)
000077A0 00000000000017D8                  11505 @lit_2005_458 DC AD(rd_slice_offset)
000077A8 0000000000000000                  11506 @lit_2005_463 DC AD(rd_kafka_log0)
000077B0 000009C2                          11507 @lit_region_diff_2005_3_4  DC A(@REGION_2005_4-@REGION_2005_3)
000077B4 00000000
000077B8 0000000000000000                  11508 @lit_2005_465 DC AD(rd_kafka_topic_find0_fl)
000077C0 0000000000000000                  11509 @lit_2005_466 DC AD(rwlock_rdlock)
000077C8 0000000000000000                  11510 @lit_2005_512 DC AD(rd_kafka_toppar_get0)
000077D0                                   11511 @L971    DS    0H
000077D0 E3F0 C1FE 0004          00007770  11512          LG    15,@lit_2005_446
000077D6 41F0 F5A0               000005A0  11513          LA    15,1440(0,15)
000077DA                                   11514 @L972    DS    0H
000077DA E310 2100 0004          00000100  11515          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000077E0 E310 1FD0 0004          00000FD0  11516          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000077E6 4110 1210               00000210  11517          LA    1,528(0,1)
000077EA E310 D2F8 0024          000002F8  11518          STG   1,760(0,13)
000077F0 E310 2100 0004          00000100  11519          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000077F6 E310 1FD0 0004          00000FD0  11520          LG    1,4048(0,1)
000077FC E310 D300 0024          00000300  11521          STG   1,768(0,13)
00007802 4110 D1F8               000001F8  11522          LA    1,504(0,13)
00007806 E310 D308 0024          00000308  11523          STG   1,776(0,13)
0000780C A718 0003               00000003  11524          LHI   1,3         ; 3
00007810 B914 0011                         11525          LGFR  1,1
00007814 E310 D310 0024          00000310  11526          STG   1,784(0,13)
0000781A D707 D318 D318 00000318 00000318  11527          XC    792(8,13),792(13)
00007820 E310 C1FE 0004          00007770  11528          LG    1,@lit_2005_446
00007826 41E0 15C4               000005C4  11529          LA    14,1476(0,1)
0000782A E3E0 D320 0024          00000320  11530          STG   14,800(0,13)
00007830 4110 15D0               000005D0  11531          LA    1,1488(0,1)
00007834 E310 D328 0024          00000328  11532          STG   1,808(0,13)
0000783A E350 D330 0024          00000330  11533          STG   5,816(0,13)
00007840 4810 20BA               000000BA  11534          LH    1,186(0,2)
00007844 B914 0011                         11535          LGFR  1,1
00007848 E310 D338 0024          00000338  11536          STG   1,824(0,13)
0000784E E380 D340 0024          00000340  11537          STG   8,832(0,13)
00007854 E310 2098 0004          00000098  11538          LG    1,152(0,2)  ; offset of end in rd_slice_s
0000785A E310 2090 000B          00000090  11539          SLG   1,144(0,2)
00007860 E310 D348 0024          00000348  11540          STG   1,840(0,13)
00007866 E310 C1F6 0004          00007768  11541          LG    1,@lit_2005_447
0000786C 4110 1224               00000224  11542          LA    1,548(0,1)
00007870 E310 D350 0024          00000350  11543          STG   1,848(0,13)
00007876 E548 D358 0275          00000358  11544          MVGHI 856(13),629
0000787C E360 D360 0024          00000360  11545          STG   6,864(0,13)
00007882 E390 D368 0024          00000368  11546          STG   9,872(0,13)
00007888 E3F0 D370 0024          00000370  11547          STG   15,880(0,13)
0000788E 41F0 D0F8               000000F8  11548          LA    15,248(0,13)
00007892 E3F0 D378 0024          00000378  11549          STG   15,888(0,13)
00007898 4110 D2F8               000002F8  11550          LA    1,760(0,13)
0000789C E3F0 C236 0004          000077A8  11551          LG    15,@lit_2005_463 ; rd_kafka_log0
000078A2                                   11552 @@gen_label672 DS    0H
                                                                                                                           Page  234 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000078A2 05EF                              11553          BALR  14,15
000078A4                                   11554 @@gen_label673 DS    0H
000078A4                                   11555 @L962    DS    0H
000078A4 E54C 2188 FF65          00000188  11556          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000078AA E3C0 C23E 001A          000077B0  11557          ALGF  12,@lit_region_diff_2005_3_4
                                           11558          DROP  12
                        00007F34           11559          USING @REGION_2005_4,12
000078B0 47F0 C678               000085AC  11560          B     @_err_parse@2005@1
                                           11561          DROP  12
                        00007572           11562          USING @REGION_2005_3,12
000078B4                                   11563 @L958    DS    0H
000078B4                                   11564 @L954    DS    0H
000078B4 58F0 D0CC               000000CC  11565          L     15,204(0,13) ; _v
000078B8 50F0 D0B4               000000B4  11566          ST    15,180(0,13)
                                           11567 * ***
                                           11568 * ***                   rkt = rd_kafka_topic_find0_fl(__FUNCTION__,631\
                                           11569 * ,rk,&Topic);
000078BC E3F0 C1F6 0004          00007768  11570          LG    15,@lit_2005_447
000078C2 41F0 F224               00000224  11571          LA    15,548(0,15)
000078C6 E3F0 D2F8 0024          000002F8  11572          STG   15,760(0,13)
000078CC E548 D300 0277          00000300  11573          MVGHI 768(13),631
000078D2 E330 D308 0024          00000308  11574          STG   3,776(0,13)
000078D8 41F0 D0E8               000000E8  11575          LA    15,232(0,13)
000078DC E3F0 D310 0024          00000310  11576          STG   15,784(0,13)
000078E2 4110 D2F8               000002F8  11577          LA    1,760(0,13)
000078E6 E3F0 C246 0004          000077B8  11578          LG    15,@lit_2005_465 ; rd_kafka_topic_find0_fl
000078EC                                   11579 @@gen_label674 DS    0H
000078EC 05EF                              11580          BALR  14,15
000078EE                                   11581 @@gen_label675 DS    0H
000078EE B902 008F                         11582          LTGR  8,15
                                           11583 * ***                   if (rkt)
000078F2 4770 C38E               00007900  11584          BNZ   *+14  Around region break
000078F6 E3C0 C23E 001A          000077B0  11585          ALGF  12,@lit_region_diff_2005_3_4
                                           11586          DROP  12
                        00007F34           11587          USING @REGION_2005_4,12
000078FC 47F0 C5E2               00008516  11588          B     @L977
                                           11589          DROP  12
                        00007572           11590          USING @REGION_2005_3,12
                                           11591 * ***                           rwlock_rdlock(&(rkt)->rkt_lock);
00007900 41F0 8048               00000048  11592          LA    15,72(0,8)
00007904 E3F0 D2F8 0024          000002F8  11593          STG   15,760(0,13)
0000790A 4110 D2F8               000002F8  11594          LA    1,760(0,13)
0000790E E3F0 C24E 0004          000077C0  11595          LG    15,@lit_2005_466 ; rwlock_rdlock
00007914                                   11596 @@gen_label677 DS    0H
00007914 05EF                              11597          BALR  14,15
00007916                                   11598 @@gen_label678 DS    0H
00007916                                   11599 @L973    DS    0H
                                           11600 * ***
                                           11601 * ***                   while (PartCnt-- > 0) {
00007916 E3C0 C23E 001A          000077B0  11602          ALGF  12,@lit_region_diff_2005_3_4
                                           11603          DROP  12
                        00007F34           11604          USING @REGION_2005_4,12
                                                                                                                           Page  235 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000791C 47F0 C5E2               00008516  11605          B     @L977
                                           11606          DROP  12
                        00007572           11607          USING @REGION_2005_3,12
00007920                                   11608 @L976    DS    0H
                                           11609 * ***                           rd_kafka_toppar_t *rktp = ((void *)0);
00007920 A799 0000               00000000  11610          LGHI  9,0         ; 0
                                           11611 * ***                           int32_t Partition;
                                           11612 * ***                           int16_t ErrorCode;
                                           11613 * ***                           int p_actions = 0;
00007924 A768 0000               00000000  11614          LHI   6,0         ; 0
                                           11615 * ***
                                           11616 * ***                           do { int32_t _v; do { size_t __len2 = \
                                           11617 * (size_t)(sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v\
                                           11618 * , __len2)) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&\
                                           11619 * (rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_re\
                                           11620 * ader))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rk\
                                           11621 * buf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_t\
                                           11622 * xnmgr.c",641, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_\
                                           11623 * rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__\
                                           11624 * tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do \
                                           11625 * { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock\
                                           11626 * ); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logna\
                                           11627 * me)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_lo\
                                           11628 * g0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk,\
                                           11629 *  _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buff\
                                           11630 * er underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "ex\
                                           11631 * pected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_ka\
                                           11632 * fka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.Api\
                                           11633 * Version, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_read\
                                           11634 * er)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 641, __len0\
                                           11635 * , ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_r\
                                           11636 * eader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigati\
                                           11637 * on : "incorrect broker.version.fallback?", __tmpstr); } while (0); }\
                                           11638 *  (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; \
                                           11639 * } while (0); } } while (0); } while (0); *(&Partition) = (_v); } whi\
                                           11640 * le (0);
00007928                                   11641 @L978    DS    0H
00007928                                   11642 @L981    DS    0H
00007928 A7F9 0004               00000004  11643          LGHI  15,4        ; 4
0000792C 4110 2078               00000078  11644          LA    1,120(0,2)
00007930 E310 D2F8 0024          000002F8  11645          STG   1,760(0,13)
00007936 4110 D0D8               000000D8  11646          LA    1,216(0,13)
0000793A E310 D300 0024          00000300  11647          STG   1,768(0,13)
00007940 E3F0 D308 0024          00000308  11648          STG   15,776(0,13)
00007946 4110 D2F8               000002F8  11649          LA    1,760(0,13)
0000794A E3F0 C1DE 0004          00007750  11650          LG    15,@lit_2005_444 ; rd_slice_read
00007950                                   11651 @@gen_label679 DS    0H
00007950 05EF                              11652          BALR  14,15
00007952                                   11653 @@gen_label680 DS    0H
00007952 B902 00FF                         11654          LTGR  15,15
00007956 4770 C686               00007BF8  11655          BNZ   @L984
0000795A                                   11656 @L985    DS    0H
                                                                                                                           Page  236 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000795A E3F0 2098 0004          00000098  11657          LG    15,152(0,2) ; offset of end in rd_slice_s
00007960 E3F0 D384 0024          00000384  11658          STG   15,900(0,13) ; spill
00007966 41F0 2078               00000078  11659          LA    15,120(0,2)
0000796A E3F0 D2F8 0024          000002F8  11660          STG   15,760(0,13)
00007970 4110 D2F8               000002F8  11661          LA    1,760(0,13)
00007974 E3F0 C1E6 0004          00007758  11662          LG    15,@lit_2005_445 ; rd_slice_abs_offset
0000797A                                   11663 @@gen_label682 DS    0H
0000797A 05EF                              11664          BALR  14,15
0000797C                                   11665 @@gen_label683 DS    0H
0000797C E310 D384 0004          00000384  11666          LG    1,900(0,13) ; spill
00007982 B90B 001F                         11667          SLGR  1,15
00007986 A7F9 0004               00000004  11668          LGHI  15,4        ; 4
0000798A B921 00F1                         11669          CLGR  15,1
0000798E 47D0 C686               00007BF8  11670          BNH   @L988
00007992                                   11671 @L989    DS    0H
00007992 A7F8 0003               00000003  11672          LHI   15,3        ; 3
00007996 12FF                              11673          LTR   15,15
00007998 47D0 C676               00007BE8  11674          BNH   @L992
0000799C                                   11675 @L993    DS    0H
0000799C E3F0 2100 0002          00000100  11676          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000079A2 4770 C476               000079E8  11677          BNZ   @L996
000079A6 E3F0 C1FE 0004          00007770  11678          LG    15,@lit_2005_446
000079AC 4110 F1B2               000001B2  11679          LA    1,434(0,15)
000079B0 E310 D2F8 0024          000002F8  11680          STG   1,760(0,13)
000079B6 E548 D300 0281          00000300  11681          MVGHI 768(13),641
000079BC E310 C1F6 0004          00007768  11682          LG    1,@lit_2005_447
000079C2 4110 1224               00000224  11683          LA    1,548(0,1)
000079C6 E310 D308 0024          00000308  11684          STG   1,776(0,13)
000079CC D707 D310 D310 00000310 00000310  11685          XC    784(8,13),784(13)
000079D2 41F0 F582               00000582  11686          LA    15,1410(0,15)
000079D6 E3F0 D318 0024          00000318  11687          STG   15,792(0,13)
000079DC 4110 D2F8               000002F8  11688          LA    1,760(0,13)
000079E0 E3F0 C1EE 0004          00007760  11689          LG    15,@lit_2005_448 ; rd_kafka_crash
000079E6                                   11690 @@gen_label687 DS    0H
000079E6 05EF                              11691          BALR  14,15
000079E8                                   11692 @@gen_label688 DS    0H
000079E8                                   11693 @L996    DS    0H
000079E8 41F0 D0F8               000000F8  11694          LA    15,248(0,13)
000079EC E3F0 D2F8 0024          000002F8  11695          STG   15,760(0,13)
000079F2 E548 D300 0100          00000300  11696          MVGHI 768(13),256
000079F8 E3F0 C1FE 0004          00007770  11697          LG    15,@lit_2005_446
000079FE 41F0 F59C               0000059C  11698          LA    15,1436(0,15)
00007A02 E3F0 D308 0024          00000308  11699          STG   15,776(0,13)
00007A08 4110 D2F8               000002F8  11700          LA    1,760(0,13)
00007A0C E3F0 C206 0004          00007778  11701          LG    15,@lit_2005_450 ; snprintf
00007A12                                   11702 @@gen_label689 DS    0H
00007A12 05EF                              11703          BALR  14,15
00007A14                                   11704 @@gen_label690 DS    0H
00007A14 41F0 D0F8               000000F8  11705          LA    15,248(0,13)
00007A18 B904 001F                         11706          LGR   1,15
00007A1C A709 0000               00000000  11707          LGHI  0,0
00007A20                                   11708 @@gen_label691 DS 0H
                                                                                                                           Page  237 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007A20 B25E 000F                         11709          SRST  0,15
00007A24 4710 C4AE               00007A20  11710          BC  1,@@gen_label691
00007A28 B90B 0001                         11711          SLGR  0,1
00007A2C A70F 0002               00000002  11712          CGHI  0,2
00007A30 4770 C4C6               00007A38  11713          BNE   @L998
00007A34 9200 D0F8      000000F8 00000000  11714          MVI   248(13),0
00007A38                                   11715 @L997    DS    0H
00007A38                                   11716 @L998    DS    0H
00007A38 E3F0 2100 0004          00000100  11717          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007A3E A759 1638               00001638  11718          LGHI  5,5688      ; 5688
00007A42 41F5 F000               00000000  11719          LA    15,0(5,15)
00007A46 E3F0 D2F8 0024          000002F8  11720          STG   15,760(0,13)
00007A4C 4110 D2F8               000002F8  11721          LA    1,760(0,13)
00007A50 E3F0 C20E 0004          00007780  11722          LG    15,@lit_2005_452 ; mtx_lock
00007A56                                   11723 @@gen_label693 DS    0H
00007A56 05EF                              11724          BALR  14,15
00007A58                                   11725 @@gen_label694 DS    0H
00007A58 41F0 D1F8               000001F8  11726          LA    15,504(0,13)
00007A5C E3F0 D2F8 0024          000002F8  11727          STG   15,760(0,13)
00007A62 E3F0 2100 0004          00000100  11728          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007A68 A719 1630               00001630  11729          LGHI  1,5680      ; 5680
00007A6C E3F1 F000 0004          00000000  11730          LG    15,0(1,15)
00007A72 E3F0 D300 0024          00000300  11731          STG   15,768(0,13)
00007A78 E548 D308 0100          00000308  11732          MVGHI 776(13),256
00007A7E 4110 D2F8               000002F8  11733          LA    1,760(0,13)
00007A82 E3F0 C216 0004          00007788  11734          LG    15,@lit_2005_454 ; rd_strlcpy
00007A88                                   11735 @@gen_label695 DS    0H
00007A88 05EF                              11736          BALR  14,15
00007A8A                                   11737 @@gen_label696 DS    0H
00007A8A E3F0 2100 0004          00000100  11738          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007A90 41F5 F000               00000000  11739          LA    15,0(5,15)
00007A94 E3F0 D2F8 0024          000002F8  11740          STG   15,760(0,13)
00007A9A 4110 D2F8               000002F8  11741          LA    1,760(0,13)
00007A9E E3F0 C21E 0004          00007790  11742          LG    15,@lit_2005_456 ; mtx_unlock
00007AA4                                   11743 @@gen_label697 DS    0H
00007AA4 05EF                              11744          BALR  14,15
00007AA6                                   11745 @@gen_label698 DS    0H
00007AA6 E3F0 20B8 0015          000000B8  11746          LGH   15,184(0,2)
00007AAC E3F0 D2F8 0024          000002F8  11747          STG   15,760(0,13)
00007AB2 4110 D2F8               000002F8  11748          LA    1,760(0,13)
00007AB6 E3F0 C226 0004          00007798  11749          LG    15,@lit_2005_457 ; rd_kafka_ApiKey2str
00007ABC                                   11750 @@gen_label699 DS    0H
00007ABC 05EF                              11751          BALR  14,15
00007ABE                                   11752 @@gen_label700 DS    0H
00007ABE B904 005F                         11753          LGR   5,15
00007AC2 41F0 2078               00000078  11754          LA    15,120(0,2)
00007AC6 E3F0 D2F8 0024          000002F8  11755          STG   15,760(0,13)
00007ACC 4110 D2F8               000002F8  11756          LA    1,760(0,13)
00007AD0 E3F0 C22E 0004          000077A0  11757          LG    15,@lit_2005_458 ; rd_slice_offset
00007AD6                                   11758 @@gen_label701 DS    0H
00007AD6 05EF                              11759          BALR  14,15
00007AD8                                   11760 @@gen_label702 DS    0H
                                                                                                                           Page  238 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007AD8 B904 006F                         11761          LGR   6,15
00007ADC E380 2098 0004          00000098  11762          LG    8,152(0,2)  ; offset of end in rd_slice_s
00007AE2 41F0 2078               00000078  11763          LA    15,120(0,2)
00007AE6 E3F0 D2F8 0024          000002F8  11764          STG   15,760(0,13)
00007AEC 4110 D2F8               000002F8  11765          LA    1,760(0,13)
00007AF0 E3F0 C1E6 0004          00007758  11766          LG    15,@lit_2005_445 ; rd_slice_abs_offset
00007AF6                                   11767 @@gen_label703 DS    0H
00007AF6 05EF                              11768          BALR  14,15
00007AF8                                   11769 @@gen_label704 DS    0H
00007AF8 B90B 008F                         11770          SLGR  8,15
00007AFC E3F0 21E8 0002          000001E8  11771          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007B02 4780 C59E               00007B10  11772          BZ    @L1001
00007B06 E3F0 21E8 0004          000001E8  11773          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007B0C 47F0 C5A8               00007B1A  11774          B     @L1002
00007B10                                   11775 @L1001   DS    0H
00007B10 E3F0 C1FE 0004          00007770  11776          LG    15,@lit_2005_446
00007B16 41F0 F5A0               000005A0  11777          LA    15,1440(0,15)
00007B1A                                   11778 @L1002   DS    0H
00007B1A E310 2100 0004          00000100  11779          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007B20 E310 1FD0 0004          00000FD0  11780          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007B26 4110 1210               00000210  11781          LA    1,528(0,1)
00007B2A E310 D2F8 0024          000002F8  11782          STG   1,760(0,13)
00007B30 E310 2100 0004          00000100  11783          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007B36 E310 1FD0 0004          00000FD0  11784          LG    1,4048(0,1)
00007B3C E310 D300 0024          00000300  11785          STG   1,768(0,13)
00007B42 4110 D1F8               000001F8  11786          LA    1,504(0,13)
00007B46 E310 D308 0024          00000308  11787          STG   1,776(0,13)
00007B4C A718 0003               00000003  11788          LHI   1,3         ; 3
00007B50 B914 0011                         11789          LGFR  1,1
00007B54 E310 D310 0024          00000310  11790          STG   1,784(0,13)
00007B5A D707 D318 D318 00000318 00000318  11791          XC    792(8,13),792(13)
00007B60 E310 C1FE 0004          00007770  11792          LG    1,@lit_2005_446
00007B66 4190 15C4               000005C4  11793          LA    9,1476(0,1)
00007B6A E390 D320 0024          00000320  11794          STG   9,800(0,13)
00007B70 4110 15D0               000005D0  11795          LA    1,1488(0,1)
00007B74 E310 D328 0024          00000328  11796          STG   1,808(0,13)
00007B7A E350 D330 0024          00000330  11797          STG   5,816(0,13)
00007B80 4810 20BA               000000BA  11798          LH    1,186(0,2)
00007B84 B914 0011                         11799          LGFR  1,1
00007B88 E310 D338 0024          00000338  11800          STG   1,824(0,13)
00007B8E E360 D340 0024          00000340  11801          STG   6,832(0,13)
00007B94 E310 2098 0004          00000098  11802          LG    1,152(0,2)  ; offset of end in rd_slice_s
00007B9A E310 2090 000B          00000090  11803          SLG   1,144(0,2)
00007BA0 E310 D348 0024          00000348  11804          STG   1,840(0,13)
00007BA6 E310 C1F6 0004          00007768  11805          LG    1,@lit_2005_447
00007BAC 4110 1224               00000224  11806          LA    1,548(0,1)
00007BB0 E310 D350 0024          00000350  11807          STG   1,848(0,13)
00007BB6 E548 D358 0281          00000358  11808          MVGHI 856(13),641
00007BBC A719 0004               00000004  11809          LGHI  1,4         ; 4
00007BC0 E310 D360 0024          00000360  11810          STG   1,864(0,13)
                                                                                                                           Page  239 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007BC6 E380 D368 0024          00000368  11811          STG   8,872(0,13)
00007BCC E3F0 D370 0024          00000370  11812          STG   15,880(0,13)
00007BD2 41F0 D0F8               000000F8  11813          LA    15,248(0,13)
00007BD6 E3F0 D378 0024          00000378  11814          STG   15,888(0,13)
00007BDC 4110 D2F8               000002F8  11815          LA    1,760(0,13)
00007BE0 E3F0 C236 0004          000077A8  11816          LG    15,@lit_2005_463 ; rd_kafka_log0
00007BE6                                   11817 @@gen_label706 DS    0H
00007BE6 05EF                              11818          BALR  14,15
00007BE8                                   11819 @@gen_label707 DS    0H
00007BE8                                   11820 @L992    DS    0H
00007BE8 E54C 2188 FF65          00000188  11821          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00007BEE E3C0 C23E 001A          000077B0  11822          ALGF  12,@lit_region_diff_2005_3_4
                                           11823          DROP  12
                        00007F34           11824          USING @REGION_2005_4,12
00007BF4 47F0 C678               000085AC  11825          B     @_err_parse@2005@1
                                           11826          DROP  12
                        00007572           11827          USING @REGION_2005_3,12
00007BF8                                   11828 @L988    DS    0H
00007BF8                                   11829 @L984    DS    0H
00007BF8 58F0 D0D8               000000D8  11830          L     15,216(0,13) ; _v
00007BFC 50F0 D0D0               000000D0  11831          ST    15,208(0,13)
                                           11832 * ***                           do { int16_t _v; do { size_t __len2 = \
                                           11833 * (size_t)(sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v\
                                           11834 * , __len2)) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&\
                                           11835 * (rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_re\
                                           11836 * ader))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rk\
                                           11837 * buf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_t\
                                           11838 * xnmgr.c",642, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_\
                                           11839 * rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__\
                                           11840 * tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do \
                                           11841 * { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock\
                                           11842 * ); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logna\
                                           11843 * me)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_lo\
                                           11844 * g0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk,\
                                           11845 *  _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buff\
                                           11846 * er underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "ex\
                                           11847 * pected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_ka\
                                           11848 * fka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.Api\
                                           11849 * Version, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_read\
                                           11850 * er)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 642, __len0\
                                           11851 * , ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_r\
                                           11852 * eader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigati\
                                           11853 * on : "incorrect broker.version.fallback?", __tmpstr); } while (0); }\
                                           11854 *  (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; \
                                           11855 * } while (0); } } while (0); } while (0); *(&ErrorCode) = (int16_t)(_\
                                           11856 * v); } while (0);
00007C00                                   11857 @L1003   DS    0H
00007C00                                   11858 @L1006   DS    0H
00007C00 A7F9 0002               00000002  11859          LGHI  15,2        ; 2
00007C04 4110 2078               00000078  11860          LA    1,120(0,2)
00007C08 E310 D2F8 0024          000002F8  11861          STG   1,760(0,13)
00007C0E 4110 D0DC               000000DC  11862          LA    1,220(0,13)
                                                                                                                           Page  240 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007C12 E310 D300 0024          00000300  11863          STG   1,768(0,13)
00007C18 E3F0 D308 0024          00000308  11864          STG   15,776(0,13)
00007C1E 4110 D2F8               000002F8  11865          LA    1,760(0,13)
00007C22 E3F0 C1DE 0004          00007750  11866          LG    15,@lit_2005_444 ; rd_slice_read
00007C28                                   11867 @@gen_label708 DS    0H
00007C28 05EF                              11868          BALR  14,15
00007C2A                                   11869 @@gen_label709 DS    0H
00007C2A B902 00FF                         11870          LTGR  15,15
00007C2E 4770 C95E               00007ED0  11871          BNZ   @L1009
00007C32                                   11872 @L1010   DS    0H
00007C32 E3F0 2098 0004          00000098  11873          LG    15,152(0,2) ; offset of end in rd_slice_s
00007C38 E3F0 D384 0024          00000384  11874          STG   15,900(0,13) ; spill
00007C3E 41F0 2078               00000078  11875          LA    15,120(0,2)
00007C42 E3F0 D2F8 0024          000002F8  11876          STG   15,760(0,13)
00007C48 4110 D2F8               000002F8  11877          LA    1,760(0,13)
00007C4C E3F0 C1E6 0004          00007758  11878          LG    15,@lit_2005_445 ; rd_slice_abs_offset
00007C52                                   11879 @@gen_label711 DS    0H
00007C52 05EF                              11880          BALR  14,15
00007C54                                   11881 @@gen_label712 DS    0H
00007C54 E310 D384 0004          00000384  11882          LG    1,900(0,13) ; spill
00007C5A B90B 001F                         11883          SLGR  1,15
00007C5E A7F9 0002               00000002  11884          LGHI  15,2        ; 2
00007C62 B921 00F1                         11885          CLGR  15,1
00007C66 47D0 C95E               00007ED0  11886          BNH   @L1013
00007C6A                                   11887 @L1014   DS    0H
00007C6A A7F8 0003               00000003  11888          LHI   15,3        ; 3
00007C6E 12FF                              11889          LTR   15,15
00007C70 47D0 C94E               00007EC0  11890          BNH   @L1017
00007C74                                   11891 @L1018   DS    0H
00007C74 E3F0 2100 0002          00000100  11892          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007C7A 4770 C74E               00007CC0  11893          BNZ   @L1021
00007C7E E3F0 C1FE 0004          00007770  11894          LG    15,@lit_2005_446
00007C84 4110 F1B2               000001B2  11895          LA    1,434(0,15)
00007C88 E310 D2F8 0024          000002F8  11896          STG   1,760(0,13)
00007C8E E548 D300 0282          00000300  11897          MVGHI 768(13),642
00007C94 E310 C1F6 0004          00007768  11898          LG    1,@lit_2005_447
00007C9A 4110 1224               00000224  11899          LA    1,548(0,1)
00007C9E E310 D308 0024          00000308  11900          STG   1,776(0,13)
00007CA4 D707 D310 D310 00000310 00000310  11901          XC    784(8,13),784(13)
00007CAA 41F0 F582               00000582  11902          LA    15,1410(0,15)
00007CAE E3F0 D318 0024          00000318  11903          STG   15,792(0,13)
00007CB4 4110 D2F8               000002F8  11904          LA    1,760(0,13)
00007CB8 E3F0 C1EE 0004          00007760  11905          LG    15,@lit_2005_448 ; rd_kafka_crash
00007CBE                                   11906 @@gen_label716 DS    0H
00007CBE 05EF                              11907          BALR  14,15
00007CC0                                   11908 @@gen_label717 DS    0H
00007CC0                                   11909 @L1021   DS    0H
00007CC0 41F0 D0F8               000000F8  11910          LA    15,248(0,13)
00007CC4 E3F0 D2F8 0024          000002F8  11911          STG   15,760(0,13)
00007CCA E548 D300 0100          00000300  11912          MVGHI 768(13),256
00007CD0 E3F0 C1FE 0004          00007770  11913          LG    15,@lit_2005_446
00007CD6 41F0 F59C               0000059C  11914          LA    15,1436(0,15)
                                                                                                                           Page  241 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007CDA E3F0 D308 0024          00000308  11915          STG   15,776(0,13)
00007CE0 4110 D2F8               000002F8  11916          LA    1,760(0,13)
00007CE4 E3F0 C206 0004          00007778  11917          LG    15,@lit_2005_450 ; snprintf
00007CEA                                   11918 @@gen_label718 DS    0H
00007CEA 05EF                              11919          BALR  14,15
00007CEC                                   11920 @@gen_label719 DS    0H
00007CEC 41F0 D0F8               000000F8  11921          LA    15,248(0,13)
00007CF0 B904 001F                         11922          LGR   1,15
00007CF4 A709 0000               00000000  11923          LGHI  0,0
00007CF8                                   11924 @@gen_label720 DS 0H
00007CF8 B25E 000F                         11925          SRST  0,15
00007CFC 4710 C786               00007CF8  11926          BC  1,@@gen_label720
00007D00 B90B 0001                         11927          SLGR  0,1
00007D04 A70F 0002               00000002  11928          CGHI  0,2
00007D08 4770 C79E               00007D10  11929          BNE   @L1023
00007D0C 9200 D0F8      000000F8 00000000  11930          MVI   248(13),0
00007D10                                   11931 @L1022   DS    0H
00007D10                                   11932 @L1023   DS    0H
00007D10 E3F0 2100 0004          00000100  11933          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007D16 A759 1638               00001638  11934          LGHI  5,5688      ; 5688
00007D1A 41F5 F000               00000000  11935          LA    15,0(5,15)
00007D1E E3F0 D2F8 0024          000002F8  11936          STG   15,760(0,13)
00007D24 4110 D2F8               000002F8  11937          LA    1,760(0,13)
00007D28 E3F0 C20E 0004          00007780  11938          LG    15,@lit_2005_452 ; mtx_lock
00007D2E                                   11939 @@gen_label722 DS    0H
00007D2E 05EF                              11940          BALR  14,15
00007D30                                   11941 @@gen_label723 DS    0H
00007D30 41F0 D1F8               000001F8  11942          LA    15,504(0,13)
00007D34 E3F0 D2F8 0024          000002F8  11943          STG   15,760(0,13)
00007D3A E3F0 2100 0004          00000100  11944          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007D40 A719 1630               00001630  11945          LGHI  1,5680      ; 5680
00007D44 E3F1 F000 0004          00000000  11946          LG    15,0(1,15)
00007D4A E3F0 D300 0024          00000300  11947          STG   15,768(0,13)
00007D50 E548 D308 0100          00000308  11948          MVGHI 776(13),256
00007D56 4110 D2F8               000002F8  11949          LA    1,760(0,13)
00007D5A E3F0 C216 0004          00007788  11950          LG    15,@lit_2005_454 ; rd_strlcpy
00007D60                                   11951 @@gen_label724 DS    0H
00007D60 05EF                              11952          BALR  14,15
00007D62                                   11953 @@gen_label725 DS    0H
00007D62 E3F0 2100 0004          00000100  11954          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007D68 41F5 F000               00000000  11955          LA    15,0(5,15)
00007D6C E3F0 D2F8 0024          000002F8  11956          STG   15,760(0,13)
00007D72 4110 D2F8               000002F8  11957          LA    1,760(0,13)
00007D76 E3F0 C21E 0004          00007790  11958          LG    15,@lit_2005_456 ; mtx_unlock
00007D7C                                   11959 @@gen_label726 DS    0H
00007D7C 05EF                              11960          BALR  14,15
00007D7E                                   11961 @@gen_label727 DS    0H
00007D7E E3F0 20B8 0015          000000B8  11962          LGH   15,184(0,2)
00007D84 E3F0 D2F8 0024          000002F8  11963          STG   15,760(0,13)
00007D8A 4110 D2F8               000002F8  11964          LA    1,760(0,13)
00007D8E E3F0 C226 0004          00007798  11965          LG    15,@lit_2005_457 ; rd_kafka_ApiKey2str
00007D94                                   11966 @@gen_label728 DS    0H
                                                                                                                           Page  242 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007D94 05EF                              11967          BALR  14,15
00007D96                                   11968 @@gen_label729 DS    0H
00007D96 B904 005F                         11969          LGR   5,15
00007D9A 41F0 2078               00000078  11970          LA    15,120(0,2)
00007D9E E3F0 D2F8 0024          000002F8  11971          STG   15,760(0,13)
00007DA4 4110 D2F8               000002F8  11972          LA    1,760(0,13)
00007DA8 E3F0 C22E 0004          000077A0  11973          LG    15,@lit_2005_458 ; rd_slice_offset
00007DAE                                   11974 @@gen_label730 DS    0H
00007DAE 05EF                              11975          BALR  14,15
00007DB0                                   11976 @@gen_label731 DS    0H
00007DB0 B904 006F                         11977          LGR   6,15
00007DB4 E380 2098 0004          00000098  11978          LG    8,152(0,2)  ; offset of end in rd_slice_s
00007DBA 41F0 2078               00000078  11979          LA    15,120(0,2)
00007DBE E3F0 D2F8 0024          000002F8  11980          STG   15,760(0,13)
00007DC4 4110 D2F8               000002F8  11981          LA    1,760(0,13)
00007DC8 E3F0 C1E6 0004          00007758  11982          LG    15,@lit_2005_445 ; rd_slice_abs_offset
00007DCE                                   11983 @@gen_label732 DS    0H
00007DCE 05EF                              11984          BALR  14,15
00007DD0                                   11985 @@gen_label733 DS    0H
00007DD0 B90B 008F                         11986          SLGR  8,15
00007DD4 E3F0 21E8 0002          000001E8  11987          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007DDA 4780 C876               00007DE8  11988          BZ    @L1026
00007DDE E3F0 21E8 0004          000001E8  11989          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007DE4 47F0 C880               00007DF2  11990          B     @L1027
00007DE8                                   11991 @L1026   DS    0H
00007DE8 E3F0 C1FE 0004          00007770  11992          LG    15,@lit_2005_446
00007DEE 41F0 F5A0               000005A0  11993          LA    15,1440(0,15)
00007DF2                                   11994 @L1027   DS    0H
00007DF2 E310 2100 0004          00000100  11995          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007DF8 E310 1FD0 0004          00000FD0  11996          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007DFE 4110 1210               00000210  11997          LA    1,528(0,1)
00007E02 E310 D2F8 0024          000002F8  11998          STG   1,760(0,13)
00007E08 E310 2100 0004          00000100  11999          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007E0E E310 1FD0 0004          00000FD0  12000          LG    1,4048(0,1)
00007E14 E310 D300 0024          00000300  12001          STG   1,768(0,13)
00007E1A 4110 D1F8               000001F8  12002          LA    1,504(0,13)
00007E1E E310 D308 0024          00000308  12003          STG   1,776(0,13)
00007E24 A718 0003               00000003  12004          LHI   1,3         ; 3
00007E28 B914 0011                         12005          LGFR  1,1
00007E2C E310 D310 0024          00000310  12006          STG   1,784(0,13)
00007E32 D707 D318 D318 00000318 00000318  12007          XC    792(8,13),792(13)
00007E38 E310 C1FE 0004          00007770  12008          LG    1,@lit_2005_446
00007E3E 4190 15C4               000005C4  12009          LA    9,1476(0,1)
00007E42 E390 D320 0024          00000320  12010          STG   9,800(0,13)
00007E48 4110 15D0               000005D0  12011          LA    1,1488(0,1)
00007E4C E310 D328 0024          00000328  12012          STG   1,808(0,13)
00007E52 E350 D330 0024          00000330  12013          STG   5,816(0,13)
00007E58 4810 20BA               000000BA  12014          LH    1,186(0,2)
00007E5C B914 0011                         12015          LGFR  1,1
00007E60 E310 D338 0024          00000338  12016          STG   1,824(0,13)
                                                                                                                           Page  243 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007E66 E360 D340 0024          00000340  12017          STG   6,832(0,13)
00007E6C E310 2098 0004          00000098  12018          LG    1,152(0,2)  ; offset of end in rd_slice_s
00007E72 E310 2090 000B          00000090  12019          SLG   1,144(0,2)
00007E78 E310 D348 0024          00000348  12020          STG   1,840(0,13)
00007E7E E310 C1F6 0004          00007768  12021          LG    1,@lit_2005_447
00007E84 4110 1224               00000224  12022          LA    1,548(0,1)
00007E88 E310 D350 0024          00000350  12023          STG   1,848(0,13)
00007E8E E548 D358 0282          00000358  12024          MVGHI 856(13),642
00007E94 A719 0002               00000002  12025          LGHI  1,2         ; 2
00007E98 E310 D360 0024          00000360  12026          STG   1,864(0,13)
00007E9E E380 D368 0024          00000368  12027          STG   8,872(0,13)
00007EA4 E3F0 D370 0024          00000370  12028          STG   15,880(0,13)
00007EAA 41F0 D0F8               000000F8  12029          LA    15,248(0,13)
00007EAE E3F0 D378 0024          00000378  12030          STG   15,888(0,13)
00007EB4 4110 D2F8               000002F8  12031          LA    1,760(0,13)
00007EB8 E3F0 C236 0004          000077A8  12032          LG    15,@lit_2005_463 ; rd_kafka_log0
00007EBE                                   12033 @@gen_label735 DS    0H
00007EBE 05EF                              12034          BALR  14,15
00007EC0                                   12035 @@gen_label736 DS    0H
00007EC0                                   12036 @L1017   DS    0H
00007EC0 E54C 2188 FF65          00000188  12037          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00007EC6 E3C0 C23E 001A          000077B0  12038          ALGF  12,@lit_region_diff_2005_3_4
                                           12039          DROP  12
                        00007F34           12040          USING @REGION_2005_4,12
00007ECC 47F0 C678               000085AC  12041          B     @_err_parse@2005@1
                                           12042          DROP  12
                        00007572           12043          USING @REGION_2005_3,12
00007ED0                                   12044 @L1013   DS    0H
00007ED0                                   12045 @L1009   DS    0H
00007ED0 D201 D0D4 D0DC 000000D4 000000DC  12046          MVC   212(2,13),220(13)
                                           12047 * ***
                                           12048 * ***                           if (rkt)
00007ED6 B902 00F8                         12049          LTGR  15,8
00007EDA 4780 C9AA               00007F1C  12050          BZ    @L1028
                                           12051 * ***                                   rktp = rd_kafka_toppar_get0(__\
                                           12052 * FUNCTION__,645,rkt,Partition,0);
00007EDE E3F0 C1F6 0004          00007768  12053          LG    15,@lit_2005_447
00007EE4 41F0 F224               00000224  12054          LA    15,548(0,15)
00007EE8 E3F0 D2F8 0024          000002F8  12055          STG   15,760(0,13)
00007EEE E548 D300 0285          00000300  12056          MVGHI 768(13),645
00007EF4 E380 D308 0024          00000308  12057          STG   8,776(0,13)
00007EFA E3F0 D0D0 0014          000000D0  12058          LGF   15,208(0,13) ; Partition
00007F00 E3F0 D310 0024          00000310  12059          STG   15,784(0,13)
00007F06 D707 D318 D318 00000318 00000318  12060          XC    792(8,13),792(13)
00007F0C 4110 D2F8               000002F8  12061          LA    1,760(0,13)
00007F10 E3F0 C256 0004          000077C8  12062          LG    15,@lit_2005_512 ; rd_kafka_toppar_get0
00007F16                                   12063 @@gen_label738 DS    0H
00007F16 05EF                              12064          BALR  14,15
00007F18                                   12065 @@gen_label739 DS    0H
00007F18 B904 009F                         12066          LGR   9,15        ; rktp
00007F1C                                   12067 @L1028   DS    0H
                                           12068 * ***
                                                                                                                           Page  244 
  Active Usings: @REGION_2005_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           12069 * ***
                                           12070 * ***
                                           12071 * ***                           if (!rktp) {
00007F1C B902 00F9                         12072          LTGR  15,9
00007F20 4780 C9BC               00007F2E  12073          BZ    *+14  Around region break
00007F24 E3C0 C23E 001A          000077B0  12074          ALGF  12,@lit_region_diff_2005_3_4
                                           12075          DROP  12
                        00007F34           12076          USING @REGION_2005_4,12
00007F2A 47F0 C260               00008194  12077          B     @L1039
                                           12078          DROP  12
                        00007572           12079          USING @REGION_2005_3,12
                                           12080 * ***                                   do { if ((((rkb)->rkb_rk->rk_c\
                                           12081 * onf.debug & (0x8000|0x80)))) { do { char _logname[256]; mtx_lock(&(r\
                                           12082 * kb)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeo\
                                           12083 * f(_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(\
                                           12084 * rkb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 7, (0x8000|0x80), "A\
                                           12085 * DDPARTS", "Unknown partition \"%.*s\" " "[%" "d" "] in AddPartitions\
                                           12086 * ToTxn " "response: ignoring", (int)((&Topic)->len == -1 ? 0 : (&Topi\
                                           12087 * c)->len), (&Topic)->str, Partition); } while (0); } } while (0);
00007F2E E3C0 C23E 001A          000077B0  12088          ALGF  12,@lit_region_diff_2005_3_4
00007F34                                   12089 @REGION_2005_4 DS 0H
                                           12090          DROP  12
                        00007F34           12091          USING @REGION_2005_4,12
00007F34                                   12092 @L1030   DS    0H
00007F34 E3F0 4FD0 0004          00000FD0  12093          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00007F3A 58F0 F320               00000320  12094          L     15,800(0,15)
00007F3E C0FB 0000 8080                    12095          NILF  15,X'00008080'
00007F44 12FF                              12096          LTR   15,15
00007F46 4780 C5E2               00008516  12097          BZ    @L977
00007F4A                                   12098 @L1034   DS    0H
00007F4A A769 1638               00001638  12099          LGHI  6,5688      ; 5688
00007F4E 41F6 4000               00000000  12100          LA    15,0(6,4)
00007F52 E3F0 D2F8 0024          000002F8  12101          STG   15,760(0,13)
00007F58 4110 D2F8               000002F8  12102          LA    1,760(0,13)
00007F5C E3F0 C084 0004          00007FB8  12103          LG    15,@lit_2005_514 ; mtx_lock
00007F62                                   12104 @@gen_label742 DS    0H
00007F62 05EF                              12105          BALR  14,15
00007F64                                   12106 @@gen_label743 DS    0H
00007F64 41F0 D0F8               000000F8  12107          LA    15,248(0,13)
00007F68 E3F0 D2F8 0024          000002F8  12108          STG   15,760(0,13)
00007F6E A7F9 1630               00001630  12109          LGHI  15,5680     ; 5680
00007F72 E3FF 4000 0004          00000000  12110          LG    15,0(15,4)
00007F78 E3F0 D300 0024          00000300  12111          STG   15,768(0,13)
00007F7E E548 D308 0100          00000308  12112          MVGHI 776(13),256
00007F84 4110 D2F8               000002F8  12113          LA    1,760(0,13)
00007F88 E3F0 C08C 0004          00007FC0  12114          LG    15,@lit_2005_516 ; rd_strlcpy
00007F8E                                   12115 @@gen_label744 DS    0H
00007F8E 05EF                              12116          BALR  14,15
00007F90                                   12117 @@gen_label745 DS    0H
00007F90 41F6 4000               00000000  12118          LA    15,0(6,4)
00007F94 E3F0 D2F8 0024          000002F8  12119          STG   15,760(0,13)
00007F9A 4110 D2F8               000002F8  12120          LA    1,760(0,13)
                                                                                                                           Page  245 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007F9E E3F0 C094 0004          00007FC8  12121          LG    15,@lit_2005_518 ; mtx_unlock
00007FA4                                   12122 @@gen_label746 DS    0H
00007FA4 05EF                              12123          BALR  14,15
00007FA6                                   12124 @@gen_label747 DS    0H
00007FA6 E55C D0E8 FFFF          000000E8  12125          CHSI  232(13),-1
00007FAC 4770 C14C               00008080  12126          BNE   @L1037
00007FB0 A7F8 0000               00000000  12127          LHI   15,0        ; 0
00007FB4 47F0 C150               00008084  12128          B     @L1038
00007FB8                                   12129          DS    0D
00007FB8 0000000000000000                  12130 @lit_2005_514 DC AD(mtx_lock)
00007FC0 0000000000001BA8                  12131 @lit_2005_516 DC AD(rd_strlcpy)
00007FC8 0000000000000000                  12132 @lit_2005_518 DC AD(mtx_unlock)
00007FD0 0000000000000000                  12133 @lit_2005_522 DC AD(rd_kafka_log0)
00007FD8 0000000000014A98                  12134 @lit_2005_521 DC AD(@strings@)
00007FE0 0000000000005EE0                  12135 @lit_2005_523 DC AD(rd_kafka_txn_partition_registered)
00007FE8 0000000000000001                  12136 @lit_2005_525 DC FD'1' 0x0000000000000001
00007FF0 0000000000000006                  12137 @lit_2005_526 DC FD'6' 0x0000000000000006
00007FF8 0000000000000003                  12138 @lit_2005_527 DC FD'3' 0x0000000000000003
00008000 0000000000000004                  12139 @lit_2005_528 DC FD'4' 0x0000000000000004
00008008 0000000000000000                  12140 @lit_2005_536 DC AD(rd_kafka_err2str)
00008010 0000000000000F28                  12141 @lit_2005_550 DC AD(rd_refcnt_sub0)
00008018 0000000000000000                  12142 @lit_2005_551 DC AD(rd_kafka_toppar_destroy_final)
00008020 000009C2                          12143 @lit_region_diff_2005_4_3  DC A(@REGION_2005_4-@REGION_2005_3)
00008024 00000000
00008028 0000000000000000                  12144 @lit_2005_552 DC AD(rwlock_rdunlock)
00008030 0000000000003B80                  12145 @lit_2005_553 DC AD(rd_kafka_topic_destroy0)
00008038 00001C54                          12146 @lit_region_diff_2005_4_1  DC A(@REGION_2005_4-@REGION_2005_1)
0000803C 00000000
00008040 0000000000000000                  12147 @lit_2005_554 DC AD(rd_kafka_all_brokers_wakeup)
00008048 0000000000000000                  12148 @lit_2005_557 DC AD(__assert)
00008050 0000000000014658                  12149 @lit_2005_555 DC AD(@DATA)
00008058 000008DA                          12150 @lit_region_diff_2005_4_5  DC A(@REGION_2005_5-@REGION_2005_4)
0000805C 00000000
00008060 0000000000000000                  12151 @lit_2005_558 DC AD(rwlock_wrlock)
00008068 0000000000013A18                  12152 @lit_2005_561 DC AD(rd_kafka_txn_coord_set)
00008070 0000000000000000                  12153 @lit_2005_562 DC AD(rwlock_wrunlock)
00008078 0000000000004038                  12154 @lit_2005_565 DC AD(rd_kafka_toppar_topic_cmp)
00008080                                   12155 @L1037   DS    0H
00008080 58F0 D0E8               000000E8  12156          L     15,232(0,13)
00008084                                   12157 @L1038   DS    0H
00008084 E310 4FD0 0004          00000FD0  12158          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
0000808A 4110 1210               00000210  12159          LA    1,528(0,1)
0000808E E310 D2F8 0024          000002F8  12160          STG   1,760(0,13)
00008094 E310 4FD0 0004          00000FD0  12161          LG    1,4048(0,4)
0000809A E310 D300 0024          00000300  12162          STG   1,768(0,13)
000080A0 4110 D0F8               000000F8  12163          LA    1,248(0,13)
000080A4 E310 D308 0024          00000308  12164          STG   1,776(0,13)
000080AA E548 D310 0007          00000310  12165          MVGHI 784(13),7
000080B0 C01F 0000 8080                    12166          LLILF 1,X'00008080' ; 32896
000080B6 E310 D318 0024          00000318  12167          STG   1,792(0,13)
000080BC E310 C0A4 0004          00007FD8  12168          LG    1,@lit_2005_521
000080C2 4160 144E               0000044E  12169          LA    6,1102(0,1)
                                                                                                                           Page  246 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000080C6 E360 D320 0024          00000320  12170          STG   6,800(0,13)
000080CC 4110 165A               0000065A  12171          LA    1,1626(0,1)
000080D0 E310 D328 0024          00000328  12172          STG   1,808(0,13)
000080D6 B914 00FF                         12173          LGFR  15,15
000080DA E3F0 D330 0024          00000330  12174          STG   15,816(0,13)
000080E0 E3F0 D0F0 0004          000000F0  12175          LG    15,240(0,13)
000080E6 E3F0 D338 0024          00000338  12176          STG   15,824(0,13)
000080EC E3F0 D0D0 0014          000000D0  12177          LGF   15,208(0,13) ; Partition
000080F2 E3F0 D340 0024          00000340  12178          STG   15,832(0,13)
000080F8 4110 D2F8               000002F8  12179          LA    1,760(0,13)
000080FC E3F0 C09C 0004          00007FD0  12180          LG    15,@lit_2005_522 ; rd_kafka_log0
00008102                                   12181 @@gen_label749 DS    0H
00008102 05EF                              12182          BALR  14,15
00008104                                   12183 @@gen_label750 DS    0H
00008104                                   12184 @L1033   DS    0H
                                           12185 * ***   # 657 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           12186 * ***                                   continue;
00008104 47F0 C5E2               00008516  12187          B     @L977
                                           12188 * ***                           }
                                           12189 * ***
                                           12190 * ***                           switch (ErrorCode)
                                           12191 * ***                           {
                                           12192 * ***                           case RD_KAFKA_RESP_ERR_NO_ERROR:
00008108                                   12193 @L1041   DS    0H
                                           12194 * ***
                                           12195 * ***                                   rd_kafka_txn_partition_registe\
                                           12196 * red(rktp);
00008108 E390 D2F8 0024          000002F8  12197          STG   9,760(0,13)
0000810E 4110 D2F8               000002F8  12198          LA    1,760(0,13)
00008112 E3F0 C0AC 0004          00007FE0  12199          LG    15,@lit_2005_523 ; rd_kafka_txn_partition_registered
00008118                                   12200 @@gen_label751 DS    0H
00008118 05EF                              12201          BALR  14,15
0000811A                                   12202 @@gen_label752 DS    0H
                                           12203 * ***                                   break;
0000811A 47F0 C364               00008298  12204          B     @L1040
                                           12205 * ***
                                           12206 * ***
                                           12207 * ***
                                           12208 * ***
                                           12209 * ***
                                           12210 * ***                           case RD_KAFKA_RESP_ERR_NOT_COORDINATOR\
                                           12211 * :
                                           12212 * ***                           case RD_KAFKA_RESP_ERR_COORDINATOR_NOT\
                                           12213 * _AVAILABLE:
0000811E                                   12214 @L1043   DS    0H
                                           12215 * ***                                   reset_coord_err = ErrorCode;
0000811E 48B0 D0D4               000000D4  12216          LH    11,212(0,13) ; ErrorCode
                                           12217 * ***                                   p_actions |= 0x8;
00008122 A56B 0008               00000008  12218          OILL  6,8
                                           12219 * ***                                   err = ErrorCode;
00008126 4850 D0D4               000000D4  12220          LH    5,212(0,13) ; ErrorCode
                                           12221 * ***                                   request_error = 1;
                                                                                                                           Page  247 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000812A 9201 D0CA      000000CA 00000001  12222          MVI   202(13),1   ; request_error
                                           12223 * ***                                   break;
0000812E 47F0 C364               00008298  12224          B     @L1040
                                           12225 * ***
                                           12226 * ***                           case RD_KAFKA_RESP_ERR_CONCURRENT_TRAN\
                                           12227 * SACTIONS:
00008132                                   12228 @L1044   DS    0H
                                           12229 * ***                                   retry_backoff_ms = 20;
00008132 A7F8 0014               00000014  12230          LHI   15,20       ; 20
00008136 50F0 D380               00000380  12231          ST    15,896(0,13) ; spill
                                           12232 * ***
                                           12233 * ***                           case RD_KAFKA_RESP_ERR_COORDINATOR_LOA\
                                           12234 * D_IN_PROGRESS:
0000813A                                   12235 @L1045   DS    0H
                                           12236 * ***                           case RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_O\
                                           12237 * R_PART:
0000813A                                   12238 @L1046   DS    0H
                                           12239 * ***                                   p_actions |= 0x8;
0000813A A56B 0008               00000008  12240          OILL  6,8
                                           12241 * ***                                   err = ErrorCode;
0000813E 4850 D0D4               000000D4  12242          LH    5,212(0,13) ; ErrorCode
                                           12243 * ***                                   request_error = 1;
00008142 9201 D0CA      000000CA 00000001  12244          MVI   202(13),1   ; request_error
                                           12245 * ***                                   break;
00008146 47F0 C364               00008298  12246          B     @L1040
                                           12247 * ***
                                           12248 * ***                           case RD_KAFKA_RESP_ERR_INVALID_PRODUCE\
                                           12249 * R_EPOCH:
                                           12250 * ***                           case RD_KAFKA_RESP_ERR_PRODUCER_FENCED\
                                           12251 * :
                                           12252 * ***                           case RD_KAFKA_RESP_ERR_TRANSACTIONAL_I\
                                           12253 * D_AUTHORIZATION_FAILED:
                                           12254 * ***                           case RD_KAFKA_RESP_ERR_INVALID_TXN_STA\
                                           12255 * TE:
                                           12256 * ***                           case RD_KAFKA_RESP_ERR_CLUSTER_AUTHORI\
                                           12257 * ZATION_FAILED:
0000814A                                   12258 @L1051   DS    0H
                                           12259 * ***                                   p_actions |= 0x200;
0000814A A56B 0200               00000200  12260          OILL  6,512
                                           12261 * ***                                   err = ErrorCode;
0000814E 4850 D0D4               000000D4  12262          LH    5,212(0,13) ; ErrorCode
                                           12263 * ***                                   request_error = 1;
00008152 9201 D0CA      000000CA 00000001  12264          MVI   202(13),1   ; request_error
                                           12265 * ***                                   break;
00008156 47F0 C364               00008298  12266          B     @L1040
                                           12267 * ***
                                           12268 * ***                           case RD_KAFKA_RESP_ERR_UNKNOWN_PRODUCE\
                                           12269 * R_ID:
                                           12270 * ***                           case RD_KAFKA_RESP_ERR_INVALID_PRODUCE\
                                           12271 * R_ID_MAPPING:
0000815A                                   12272 @L1053   DS    0H
                                           12273 * ***                                   p_actions |= 0x1;
                                                                                                                           Page  248 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000815A A56B 0001               00000001  12274          OILL  6,1
                                           12275 * ***                                   err = ErrorCode;
0000815E 4850 D0D4               000000D4  12276          LH    5,212(0,13) ; ErrorCode
                                           12277 * ***                                   request_error = 1;
00008162 9201 D0CA      000000CA 00000001  12278          MVI   202(13),1   ; request_error
                                           12279 * ***                                   break;
00008166 47F0 C364               00008298  12280          B     @L1040
                                           12281 * ***
                                           12282 * ***
                                           12283 * ***
                                           12284 * ***                           case RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZA\
                                           12285 * TION_FAILED:
0000816A                                   12286 @L1054   DS    0H
                                           12287 * ***                                   p_actions |= 0x1;
0000816A A56B 0001               00000001  12288          OILL  6,1
                                           12289 * ***                                   err = ErrorCode;
0000816E 4850 D0D4               000000D4  12290          LH    5,212(0,13) ; ErrorCode
                                           12291 * ***                                   break;
00008172 47F0 C364               00008298  12292          B     @L1040
                                           12293 * ***
                                           12294 * ***                           case RD_KAFKA_RESP_ERR_OPERATION_NOT_A\
                                           12295 * TTEMPTED:
00008176                                   12296 @L1055   DS    0H
                                           12297 * ***
                                           12298 * ***
                                           12299 * ***                                   p_actions |= 0x1;
00008176 A56B 0001               00000001  12300          OILL  6,1
                                           12301 * ***                                   if (!err)
0000817A 1255                              12302          LTR   5,5
0000817C 4770 C364               00008298  12303          BNZ   @L1040
                                           12304 * ***                                           err = ErrorCode;
00008180 4850 D0D4               000000D4  12305          LH    5,212(0,13) ; ErrorCode
00008184                                   12306 @L1056   DS    0H
                                           12307 * ***                                   break;
00008184 47F0 C364               00008298  12308          B     @L1040
                                           12309 * ***
                                           12310 * ***                           default:
                                           12311 * ***
                                           12312 * ***                                   p_actions |= 0x1;
00008188                                   12313 @L1057   DS    0H
00008188 A56B 0001               00000001  12314          OILL  6,1
                                           12315 * ***                                   err = ErrorCode;
0000818C 4850 D0D4               000000D4  12316          LH    5,212(0,13) ; ErrorCode
                                           12317 * ***                                   break;
00008190 47F0 C364               00008298  12318          B     @L1040
                                           12319 * ***                           }
00008194                                   12320 @L1039   DS    0H
00008194 48F0 D0D4               000000D4  12321          LH    15,212(0,13) ; ErrorCode
00008198 A7FE 000E               0000000E  12322          CHI   15,14
0000819C 47B0 C284               000081B8  12323          BNL   @@gen_label754
000081A0 12FF                              12324          LTR   15,15
000081A2 4740 C254               00008188  12325          BL    @L1057
                                                                                                                           Page  249 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000081A6 12FF                              12326          LTR   15,15
000081A8 4780 C1D4               00008108  12327          BE    @L1041
000081AC A7FE 0003               00000003  12328          CHI   15,3
000081B0 4780 C206               0000813A  12329          BE    @L1046
000081B4 47F0 C254               00008188  12330          B     @L1057
000081B8                                   12331 @@gen_label754 DS 0H
000081B8 A7FE 001D               0000001D  12332          CHI   15,29
000081BC 47B0 C2C4               000081F8  12333          BNL   @@gen_label755
000081C0 A7FA FFF2               0000FFF2  12334          AHI   15,-14
000081C4 C2FF 0000 0002                    12335          CLFI  15,X'00000002'
000081CA 4720 C254               00008188  12336          BH    @L1057
000081CE B914 00FF                         12337          LGFR  15,15
000081D2 A719 0001               00000001  12338          LGHI  1,1
000081D6 EB11 F000 000D          00000000  12339          SLLG  1,1,0(15)
000081DC B904 00F1                         12340          LGR   15,1
000081E0 E3F0 C0B4 0080          00007FE8  12341          NG    15,@lit_2005_525
000081E6 4770 C206               0000813A  12342          BNZ   @L1046
000081EA E310 C0BC 0080          00007FF0  12343          NG    1,@lit_2005_526
000081F0 4770 C1EA               0000811E  12344          BNZ   @L1043
000081F4 47F0 C254               00008188  12345          B     @L1057
000081F8                                   12346 @@gen_label755 DS 0H
000081F8 A7FE 002F               0000002F  12347          CHI   15,47
000081FC 47B0 C2E0               00008214  12348          BNL   @@gen_label756
00008200 A7FE 001D               0000001D  12349          CHI   15,29
00008204 4780 C236               0000816A  12350          BE    @L1054
00008208 A7FE 001F               0000001F  12351          CHI   15,31
0000820C 4780 C216               0000814A  12352          BE    @L1051
00008210 47F0 C254               00008188  12353          B     @L1057
00008214                                   12354 @@gen_label756 DS 0H
00008214 A7FE 005A               0000005A  12355          CHI   15,90
00008218 47B0 C358               0000828C  12356          BNL   @@gen_label757
0000821C A7FE 003B               0000003B  12357          CHI   15,59
00008220 47B0 C34C               00008280  12358          BNL   @@gen_label758
00008224 A7FE 0033               00000033  12359          CHI   15,51
00008228 47B0 C330               00008264  12360          BNL   @@gen_label759
0000822C A7FA FFD1               0000FFD1  12361          AHI   15,-47
00008230 C2FF 0000 0002                    12362          CLFI  15,X'00000002'
00008236 4720 C254               00008188  12363          BH    @L1057
0000823A B914 00FF                         12364          LGFR  15,15
0000823E A719 0001               00000001  12365          LGHI  1,1
00008242 EB11 F000 000D          00000000  12366          SLLG  1,1,0(15)
00008248 B904 00F1                         12367          LGR   15,1
0000824C E3F0 C0C4 0080          00007FF8  12368          NG    15,@lit_2005_527
00008252 4770 C216               0000814A  12369          BNZ   @L1051
00008256 E310 C0CC 0080          00008000  12370          NG    1,@lit_2005_528
0000825C 4770 C226               0000815A  12371          BNZ   @L1053
00008260 47F0 C254               00008188  12372          B     @L1057
00008264                                   12373 @@gen_label759 DS 0H
00008264 A7FE 0033               00000033  12374          CHI   15,51
00008268 4780 C1FE               00008132  12375          BE    @L1044
0000826C A7FE 0035               00000035  12376          CHI   15,53
00008270 4780 C216               0000814A  12377          BE    @L1051
                                                                                                                           Page  250 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008274 A7FE 0037               00000037  12378          CHI   15,55
00008278 4780 C242               00008176  12379          BE    @L1055
0000827C 47F0 C254               00008188  12380          B     @L1057
00008280                                   12381 @@gen_label758 DS 0H
00008280 A7FE 003B               0000003B  12382          CHI   15,59
00008284 4780 C226               0000815A  12383          BE    @L1053
00008288 47F0 C254               00008188  12384          B     @L1057
0000828C                                   12385 @@gen_label757 DS 0H
0000828C A7FE 005A               0000005A  12386          CHI   15,90
00008290 4780 C216               0000814A  12387          BE    @L1051
00008294 47F0 C254               00008188  12388          B     @L1057
00008298                                   12389 @L1040   DS    0H
                                           12390 * ***
                                           12391 * ***                           if (ErrorCode) {
00008298 48F0 D0D4               000000D4  12392          LH    15,212(0,13) ; ErrorCode
0000829C 12FF                              12393          LTR   15,15
0000829E 4780 C5AC               000084E0  12394          BZ    @L1075
                                           12395 * ***                                   actions |= p_actions;
000082A2 1676                              12396          OR    7,6
                                           12397 * ***
                                           12398 * ***                                   if (!(p_actions &
                                           12399 * ***                                         (0x200 |
                                           12400 * ***                                          0x1)))
000082A4 C06B 0000 0201                    12401          NILF  6,X'00000201'
000082AA 1266                              12402          LTR   6,6
000082AC 4770 C4A0               000083D4  12403          BNZ   @L1070
                                           12404 * ***                                           do { if ((((rkb)->rkb_\
                                           12405 * rk->rk_conf.debug & (0x8000)))) { do { char _logname[256]; mtx_lock(\
                                           12406 * &(rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, si\
                                           12407 * zeof(_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0\
                                           12408 * (&(rkb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 7, (0x8000), "ADD\
                                           12409 * PARTS", "AddPartitionsToTxn response: " "partition \"%.*s\": " "[%" \
                                           12410 * "d" "]: %s", (int)((&Topic)->len == -1 ? 0 : (&Topic)->len), (&Topic\
                                           12411 * )->str, Partition, rd_kafka_err2str( ErrorCode)); } while (0); } } w\
                                           12412 * hile (0);
000082B0                                   12413 @L1060   DS    0H
000082B0 E3F0 4FD0 0004          00000FD0  12414          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
000082B6 9180 F322      00000322 00000080  12415          TM    802(15),128
000082BA 4780 C5AC               000084E0  12416          BZ    @L1075
000082BE                                   12417 @L1064   DS    0H
000082BE A769 1638               00001638  12418          LGHI  6,5688      ; 5688
000082C2 41F6 4000               00000000  12419          LA    15,0(6,4)
000082C6 E3F0 D2F8 0024          000002F8  12420          STG   15,760(0,13)
000082CC 4110 D2F8               000002F8  12421          LA    1,760(0,13)
000082D0 E3F0 C084 0004          00007FB8  12422          LG    15,@lit_2005_514 ; mtx_lock
000082D6                                   12423 @@gen_label763 DS    0H
000082D6 05EF                              12424          BALR  14,15
000082D8                                   12425 @@gen_label764 DS    0H
000082D8 41F0 D0F8               000000F8  12426          LA    15,248(0,13)
000082DC E3F0 D2F8 0024          000002F8  12427          STG   15,760(0,13)
000082E2 A7F9 1630               00001630  12428          LGHI  15,5680     ; 5680
000082E6 E3FF 4000 0004          00000000  12429          LG    15,0(15,4)
                                                                                                                           Page  251 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000082EC E3F0 D300 0024          00000300  12430          STG   15,768(0,13)
000082F2 E548 D308 0100          00000308  12431          MVGHI 776(13),256
000082F8 4110 D2F8               000002F8  12432          LA    1,760(0,13)
000082FC E3F0 C08C 0004          00007FC0  12433          LG    15,@lit_2005_516 ; rd_strlcpy
00008302                                   12434 @@gen_label765 DS    0H
00008302 05EF                              12435          BALR  14,15
00008304                                   12436 @@gen_label766 DS    0H
00008304 41F6 4000               00000000  12437          LA    15,0(6,4)
00008308 E3F0 D2F8 0024          000002F8  12438          STG   15,760(0,13)
0000830E 4110 D2F8               000002F8  12439          LA    1,760(0,13)
00008312 E3F0 C094 0004          00007FC8  12440          LG    15,@lit_2005_518 ; mtx_unlock
00008318                                   12441 @@gen_label767 DS    0H
00008318 05EF                              12442          BALR  14,15
0000831A                                   12443 @@gen_label768 DS    0H
0000831A E55C D0E8 FFFF          000000E8  12444          CHSI  232(13),-1
00008320 4770 C3F8               0000832C  12445          BNE   @L1067
00008324 A768 0000               00000000  12446          LHI   6,0         ; 0
00008328 47F0 C3FC               00008330  12447          B     @L1068
0000832C                                   12448 @L1067   DS    0H
0000832C 5860 D0E8               000000E8  12449          L     6,232(0,13)
00008330                                   12450 @L1068   DS    0H
00008330 48F0 D0D4               000000D4  12451          LH    15,212(0,13) ; ErrorCode
00008334 B914 00FF                         12452          LGFR  15,15
00008338 E3F0 D2F8 0024          000002F8  12453          STG   15,760(0,13)
0000833E 4110 D2F8               000002F8  12454          LA    1,760(0,13)
00008342 E3F0 C0D4 0004          00008008  12455          LG    15,@lit_2005_536 ; rd_kafka_err2str
00008348                                   12456 @@gen_label770 DS    0H
00008348 05EF                              12457          BALR  14,15
0000834A                                   12458 @@gen_label771 DS    0H
0000834A E310 4FD0 0004          00000FD0  12459          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00008350 4110 1210               00000210  12460          LA    1,528(0,1)
00008354 E310 D2F8 0024          000002F8  12461          STG   1,760(0,13)
0000835A E310 4FD0 0004          00000FD0  12462          LG    1,4048(0,4)
00008360 E310 D300 0024          00000300  12463          STG   1,768(0,13)
00008366 4110 D0F8               000000F8  12464          LA    1,248(0,13)
0000836A E310 D308 0024          00000308  12465          STG   1,776(0,13)
00008370 E548 D310 0007          00000310  12466          MVGHI 784(13),7
00008376 C01F 0000 8000                    12467          LLILF 1,X'00008000' ; 32768
0000837C E310 D318 0024          00000318  12468          STG   1,792(0,13)
00008382 E310 C0A4 0004          00007FD8  12469          LG    1,@lit_2005_521
00008388 41E0 144E               0000044E  12470          LA    14,1102(0,1)
0000838C E3E0 D320 0024          00000320  12471          STG   14,800(0,13)
00008392 4110 16A2               000006A2  12472          LA    1,1698(0,1)
00008396 E310 D328 0024          00000328  12473          STG   1,808(0,13)
0000839C B914 0016                         12474          LGFR  1,6
000083A0 E310 D330 0024          00000330  12475          STG   1,816(0,13)
000083A6 E310 D0F0 0004          000000F0  12476          LG    1,240(0,13)
000083AC E310 D338 0024          00000338  12477          STG   1,824(0,13)
000083B2 E310 D0D0 0014          000000D0  12478          LGF   1,208(0,13) ; Partition
000083B8 E310 D340 0024          00000340  12479          STG   1,832(0,13)
000083BE E3F0 D348 0024          00000348  12480          STG   15,840(0,13)
000083C4 4110 D2F8               000002F8  12481          LA    1,760(0,13)
                                                                                                                           Page  252 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000083C8 E3F0 C09C 0004          00007FD0  12482          LG    15,@lit_2005_522 ; rd_kafka_log0
000083CE                                   12483 @@gen_label772 DS    0H
000083CE 05EF                              12484          BALR  14,15
000083D0                                   12485 @@gen_label773 DS    0H
000083D0                                   12486 @L1063   DS    0H
                                           12487 * ***   # 744 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           12488 * ***                                   else
000083D0 47F0 C5AC               000084E0  12489          B     @L1075
                                           12490 * ***                                           do { char _logname[256\
                                           12491 * ]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb\
                                           12492 * _logname, sizeof(_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); r\
                                           12493 * d_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 3, 0x\
                                           12494 * 0, "ADDPARTS", "Failed to add partition " "\"%.*s\" [%" "d" "] to " \
                                           12495 * "transaction: %s", (int)((&Topic)->len == -1 ? 0 : (&Topic)->len), (\
                                           12496 * &Topic)->str, Partition, rd_kafka_err2str( ErrorCode)); } while (0);
000083D4                                   12497 @L1070   DS    0H
000083D4 A769 1638               00001638  12498          LGHI  6,5688      ; 5688
000083D8 41F6 4000               00000000  12499          LA    15,0(6,4)
000083DC E3F0 D2F8 0024          000002F8  12500          STG   15,760(0,13)
000083E2 4110 D2F8               000002F8  12501          LA    1,760(0,13)
000083E6 E3F0 C084 0004          00007FB8  12502          LG    15,@lit_2005_514 ; mtx_lock
000083EC                                   12503 @@gen_label774 DS    0H
000083EC 05EF                              12504          BALR  14,15
000083EE                                   12505 @@gen_label775 DS    0H
000083EE 41F0 D0F8               000000F8  12506          LA    15,248(0,13)
000083F2 E3F0 D2F8 0024          000002F8  12507          STG   15,760(0,13)
000083F8 A7F9 1630               00001630  12508          LGHI  15,5680     ; 5680
000083FC E3FF 4000 0004          00000000  12509          LG    15,0(15,4)
00008402 E3F0 D300 0024          00000300  12510          STG   15,768(0,13)
00008408 E548 D308 0100          00000308  12511          MVGHI 776(13),256
0000840E 4110 D2F8               000002F8  12512          LA    1,760(0,13)
00008412 E3F0 C08C 0004          00007FC0  12513          LG    15,@lit_2005_516 ; rd_strlcpy
00008418                                   12514 @@gen_label776 DS    0H
00008418 05EF                              12515          BALR  14,15
0000841A                                   12516 @@gen_label777 DS    0H
0000841A 41F6 4000               00000000  12517          LA    15,0(6,4)
0000841E E3F0 D2F8 0024          000002F8  12518          STG   15,760(0,13)
00008424 4110 D2F8               000002F8  12519          LA    1,760(0,13)
00008428 E3F0 C094 0004          00007FC8  12520          LG    15,@lit_2005_518 ; mtx_unlock
0000842E                                   12521 @@gen_label778 DS    0H
0000842E 05EF                              12522          BALR  14,15
00008430                                   12523 @@gen_label779 DS    0H
00008430 E55C D0E8 FFFF          000000E8  12524          CHSI  232(13),-1
00008436 4770 C50E               00008442  12525          BNE   @L1073
0000843A A768 0000               00000000  12526          LHI   6,0         ; 0
0000843E 47F0 C512               00008446  12527          B     @L1074
00008442                                   12528 @L1073   DS    0H
00008442 5860 D0E8               000000E8  12529          L     6,232(0,13)
00008446                                   12530 @L1074   DS    0H
00008446 48F0 D0D4               000000D4  12531          LH    15,212(0,13) ; ErrorCode
0000844A B914 00FF                         12532          LGFR  15,15
0000844E E3F0 D2F8 0024          000002F8  12533          STG   15,760(0,13)
                                                                                                                           Page  253 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008454 4110 D2F8               000002F8  12534          LA    1,760(0,13)
00008458 E3F0 C0D4 0004          00008008  12535          LG    15,@lit_2005_536 ; rd_kafka_err2str
0000845E                                   12536 @@gen_label781 DS    0H
0000845E 05EF                              12537          BALR  14,15
00008460                                   12538 @@gen_label782 DS    0H
00008460 E310 4FD0 0004          00000FD0  12539          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00008466 4110 1210               00000210  12540          LA    1,528(0,1)
0000846A E310 D2F8 0024          000002F8  12541          STG   1,760(0,13)
00008470 E310 4FD0 0004          00000FD0  12542          LG    1,4048(0,4)
00008476 E310 D300 0024          00000300  12543          STG   1,768(0,13)
0000847C 4110 D0F8               000000F8  12544          LA    1,248(0,13)
00008480 E310 D308 0024          00000308  12545          STG   1,776(0,13)
00008486 E548 D310 0003          00000310  12546          MVGHI 784(13),3
0000848C D707 D318 D318 00000318 00000318  12547          XC    792(8,13),792(13)
00008492 E310 C0A4 0004          00007FD8  12548          LG    1,@lit_2005_521
00008498 41E0 144E               0000044E  12549          LA    14,1102(0,1)
0000849C E3E0 D320 0024          00000320  12550          STG   14,800(0,13)
000084A2 4110 16DA               000006DA  12551          LA    1,1754(0,1)
000084A6 E310 D328 0024          00000328  12552          STG   1,808(0,13)
000084AC B914 0016                         12553          LGFR  1,6
000084B0 E310 D330 0024          00000330  12554          STG   1,816(0,13)
000084B6 E310 D0F0 0004          000000F0  12555          LG    1,240(0,13)
000084BC E310 D338 0024          00000338  12556          STG   1,824(0,13)
000084C2 E310 D0D0 0014          000000D0  12557          LGF   1,208(0,13) ; Partition
000084C8 E310 D340 0024          00000340  12558          STG   1,832(0,13)
000084CE E3F0 D348 0024          00000348  12559          STG   15,840(0,13)
000084D4 4110 D2F8               000002F8  12560          LA    1,760(0,13)
000084D8 E3F0 C09C 0004          00007FD0  12561          LG    15,@lit_2005_522 ; rd_kafka_log0
000084DE                                   12562 @@gen_label783 DS    0H
000084DE 05EF                              12563          BALR  14,15
000084E0                                   12564 @@gen_label784 DS    0H
                                           12565 * ***   # 754 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           12566 * ***                           }
000084E0                                   12567 @L1069   DS    0H
000084E0                                   12568 @L1058   DS    0H
                                           12569 * ***
                                           12570 * ***                           do { rd_kafka_toppar_t *_RKTP = (rktp)\
                                           12571 * ; if (((rd_refcnt_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_\
                                           12572 * destroy_final(_RKTP); } while (0);
000084E0                                   12573 @L1075   DS    0H
000084E0 41F0 9090               00000090  12574          LA    15,144(0,9)
000084E4 E3F0 D2F8 0024          000002F8  12575          STG   15,760(0,13)
000084EA 4110 D2F8               000002F8  12576          LA    1,760(0,13)
000084EE E3F0 C0DC 0004          00008010  12577          LG    15,@lit_2005_550 ; rd_refcnt_sub0
000084F4                                   12578 @@gen_label785 DS    0H
000084F4 05EF                              12579          BALR  14,15
000084F6                                   12580 @@gen_label786 DS    0H
000084F6 12FF                              12581          LTR   15,15
000084F8 4770 C5DA               0000850E  12582          BNE   @L1078
000084FC E390 D2F8 0024          000002F8  12583          STG   9,760(0,13)
00008502 4110 D2F8               000002F8  12584          LA    1,760(0,13)
00008506 E3F0 C0E4 0004          00008018  12585          LG    15,@lit_2005_551 ; rd_kafka_toppar_destroy_final
                                                                                                                           Page  254 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000850C                                   12586 @@gen_label788 DS    0H
0000850C 05EF                              12587          BALR  14,15
0000850E                                   12588 @@gen_label789 DS    0H
0000850E                                   12589 @L1078   DS    0H
                                           12590 * ***
                                           12591 * ***                           if (request_error)
0000850E 9500 D0CA      000000CA 00000000  12592          CLI   202(13),0
00008512 4770 C600               00008534  12593          BNE   @L974
                                           12594 * ***                                   break;
00008516                                   12595 @L1079   DS    0H
                                           12596 * ***                   }
00008516                                   12597 @L975    DS    0H
00008516                                   12598 @L977    DS    0H
00008516 58F0 D0B4               000000B4  12599          L     15,180(0,13) ; PartCnt
0000851A 181F                              12600          LR    1,15
0000851C A71A FFFF               0000FFFF  12601          AHI   1,-1
00008520 5010 D0B4               000000B4  12602          ST    1,180(0,13) ; PartCnt
00008524 12FF                              12603          LTR   15,15
00008526 47D0 C600               00008534  12604          BNH   *+14  Around region break
0000852A E3C0 C0EC 001B          00008020  12605          SLGF  12,@lit_region_diff_2005_4_3
                                           12606          DROP  12
                        00007572           12607          USING @REGION_2005_3,12
00008530 47F0 C3AE               00007920  12608          B     @L976
                                           12609          DROP  12
                        00007F34           12610          USING @REGION_2005_4,12
00008534                                   12611 @L974    DS    0H
                                           12612 * ***
                                           12613 * ***                   if (rkt) {
00008534 B902 00F8                         12614          LTGR  15,8
00008538 4780 C630               00008564  12615          BZ    @L1080
                                           12616 * ***                           rwlock_rdunlock(&(rkt)->rkt_lock);
0000853C 41F0 8048               00000048  12617          LA    15,72(0,8)
00008540 E3F0 D2F8 0024          000002F8  12618          STG   15,760(0,13)
00008546 4110 D2F8               000002F8  12619          LA    1,760(0,13)
0000854A E3F0 C0F4 0004          00008028  12620          LG    15,@lit_2005_552 ; rwlock_rdunlock
00008550                                   12621 @@gen_label793 DS    0H
00008550 05EF                              12622          BALR  14,15
00008552                                   12623 @@gen_label794 DS    0H
                                           12624 * ***                           rd_kafka_topic_destroy0(rkt);
00008552 E380 D2F8 0024          000002F8  12625          STG   8,760(0,13)
00008558 4110 D2F8               000002F8  12626          LA    1,760(0,13)
0000855C E3F0 C0FC 0004          00008030  12627          LG    15,@lit_2005_553 ; rd_kafka_topic_destroy0
00008562                                   12628 @@gen_label795 DS    0H
00008562 05EF                              12629          BALR  14,15
00008564                                   12630 @@gen_label796 DS    0H
                                           12631 * ***                   }
00008564                                   12632 @L1080   DS    0H
                                           12633 * ***
                                           12634 * ***                   if (request_error)
00008564 9500 D0CA      000000CA 00000000  12635          CLI   202(13),0
00008568 4770 C656               0000858A  12636          BNE   @L868
                                           12637 * ***                           break;
                                                                                                                           Page  255 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000856C                                   12638 @L1081   DS    0H
                                           12639 * ***           }
0000856C                                   12640 @L871    DS    0H
0000856C 58F0 D0E0               000000E0  12641          L     15,224(0,13) ; TopicCnt
00008570 181F                              12642          LR    1,15
00008572 A71A FFFF               0000FFFF  12643          AHI   1,-1
00008576 5010 D0E0               000000E0  12644          ST    1,224(0,13) ; TopicCnt
0000857A 12FF                              12645          LTR   15,15
0000857C 47D0 C656               0000858A  12646          BNH   *+14  Around region break
00008580 E3C0 C104 001B          00008038  12647          SLGF  12,@lit_region_diff_2005_4_1
                                           12648          DROP  12
                        000062E0           12649          USING @REGION_2005_1,12
00008586 47F0 C874               00006B54  12650          B     @L870
                                           12651          DROP  12
                        00007F34           12652          USING @REGION_2005_4,12
0000858A                                   12653 @L868    DS    0H
                                           12654 * ***
                                           12655 * ***           if (actions)
0000858A 1277                              12656          LTR   7,7
0000858C 4770 C680               000085B4  12657          BNZ   @_done@2005@0
                                           12658 * ***                   goto done;
00008590                                   12659 @L1082   DS    0H
                                           12660 * ***
                                           12661 * ***
                                           12662 * ***
                                           12663 * ***           rd_kafka_all_brokers_wakeup(rk, RD_KAFKA_BROKER_STATE_\
                                           12664 * INIT);
00008590 E330 D2F8 0024          000002F8  12665          STG   3,760(0,13)
00008596 D707 D300 D300 00000300 00000300  12666          XC    768(8,13),768(13)
0000859C 4110 D2F8               000002F8  12667          LA    1,760(0,13)
000085A0 E3F0 C10C 0004          00008040  12668          LG    15,@lit_2005_554 ; rd_kafka_all_brokers_wakeup
000085A6                                   12669 @@gen_label800 DS    0H
000085A6 05EF                              12670          BALR  14,15
000085A8                                   12671 @@gen_label801 DS    0H
                                           12672 * ***
                                           12673 * ***           goto done;
000085A8 47F0 C680               000085B4  12674          B     @_done@2005@0
                                           12675 * ***
                                           12676 * ***    err_parse:
                                           12677 * ***           err = rkbuf->rkbuf_err;
000085AC                                   12678 @_err_parse@2005@1 DS 0H
000085AC 5850 2188               00000188  12679          L     5,392(0,2)  ; offset of rkbuf_err in rd_kafka_buf_s
                                           12680 * ***           actions |= 0x1;
000085B0 A57B 0001               00000001  12681          OILL  7,1
                                           12682 * ***
                                           12683 * ***    done:
                                           12684 * ***           if (err) {
000085B4                                   12685 @_done@2005@0 DS 0H
000085B4 1255                              12686          LTR   5,5
000085B6 4780 C6F0               00008624  12687          BZ    @L1086
                                           12688 * ***                   ((rk->rk_eos.txn_req_cnt > 0) ? (void)0 : __as\
                                           12689 * sert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c", 78\
                                                                                                                           Page  256 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           12690 * 6, "rk->rk_eos.txn_req_cnt > 0"));
000085BA E55C 3E10 0000          00000E10  12691          CHSI  3600(3),0
000085C0 4720 C6CC               00008600  12692          BH    @L1085
000085C4                                   12693 @L1084   DS    0H
000085C4 E3F0 C11C 0004          00008050  12694          LG    15,@lit_2005_555
000085CA 41F0 F224               00000224  12695          LA    15,548(0,15)
000085CE E3F0 D2F8 0024          000002F8  12696          STG   15,760(0,13)
000085D4 E3F0 C0A4 0004          00007FD8  12697          LG    15,@lit_2005_521
000085DA 4110 F1B2               000001B2  12698          LA    1,434(0,15)
000085DE E310 D300 0024          00000300  12699          STG   1,768(0,13)
000085E4 E548 D308 0312          00000308  12700          MVGHI 776(13),786
000085EA 41F0 F712               00000712  12701          LA    15,1810(0,15)
000085EE E3F0 D310 0024          00000310  12702          STG   15,784(0,13)
000085F4 4110 D2F8               000002F8  12703          LA    1,760(0,13)
000085F8 E3F0 C114 0004          00008048  12704          LG    15,@lit_2005_557 ; __assert
000085FE                                   12705 @@gen_label804 DS    0H
000085FE 05EF                              12706          BALR  14,15
00008600                                   12707 @@gen_label805 DS    0H
00008600                                   12708 @L1085   DS    0H
                                           12709 * ***                   rk->rk_eos.txn_req_cnt--;
00008600 58F0 3E10               00000E10  12710          L     15,3600(0,3)
00008604 A7FA FFFF               0000FFFF  12711          AHI   15,-1
00008608 50F0 3E10               00000E10  12712          ST    15,3600(0,3)
                                           12713 * ***           }
0000860C                                   12714 @L1083   DS    0H
                                           12715 * ***
                                           12716 * ***
                                           12717 * ***           switch (err)
0000860C 47F0 C6F0               00008624  12718          B     @L1086
                                           12719 * ***           {
                                           12720 * ***           case RD_KAFKA_RESP_ERR_NO_ERROR:
                                           12721 * ***                   break;
                                           12722 * ***
                                           12723 * ***           case RD_KAFKA_RESP_ERR__DESTROY:
                                           12724 * ***           case RD_KAFKA_RESP_ERR__OUTDATED:
00008610                                   12725 @L1090   DS    0H
                                           12726 * ***
                                           12727 * ***                   return;
                                           12728 * ***
                                           12729 * ***           case RD_KAFKA_RESP_ERR__TRANSPORT:
                                           12730 * ***           case RD_KAFKA_RESP_ERR__TIMED_OUT:
                                           12731 * ***           default:
                                           12732 * ***
                                           12733 * ***
                                           12734 * ***
                                           12735 * ***
                                           12736 * ***
                                           12737 * ***                   rk->rk_eos.txn_req_cnt++;
00008610                                   12738 @L1093   DS    0H
00008610 58F0 3E10               00000E10  12739          L     15,3600(0,3)
00008614 A7FA 0001               00000001  12740          AHI   15,1
00008618 50F0 3E10               00000E10  12741          ST    15,3600(0,3)
                                                                                                                           Page  257 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           12742 * ***                   actions |= 0x8;
0000861C A57B 0008               00000008  12743          OILL  7,8
                                           12744 * ***                   break;
00008620 47F0 C73E               00008672  12745          B     @L1087
                                           12746 * ***           }
00008624                                   12747 @L1086   DS    0H
00008624 A75E FF47               0000FF47  12748          CHI   5,-185
00008628 47B0 C71E               00008652  12749          BNL   @@gen_label806
0000862C A75E FF3B               0000FF3B  12750          CHI   5,-197
00008630 4740 C6DC               00008610  12751          BL    @L1093
00008634 A75E FF3B               0000FF3B  12752          CHI   5,-197
00008638 4770 C712               00008646  12753          BNE   *+14  Around region break
0000863C E3C0 C124 001A          00008058  12754          ALGF  12,@lit_region_diff_2005_4_5
                                           12755          DROP  12
                        0000880E           12756          USING @REGION_2005_5,12
00008642 47F0 C264               00008A72  12757          B     @ret_lab_2005
                                           12758          DROP  12
                        00007F34           12759          USING @REGION_2005_4,12
00008646 A75E FF3D               0000FF3D  12760          CHI   5,-195
0000864A 4780 C6DC               00008610  12761          BE    @L1093
0000864E 47F0 C6DC               00008610  12762          B     @L1093
00008652                                   12763 @@gen_label806 DS 0H
00008652 A75E FF47               0000FF47  12764          CHI   5,-185
00008656 4780 C6DC               00008610  12765          BE    @L1093
0000865A A75E FF59               0000FF59  12766          CHI   5,-167
0000865E 4770 C738               0000866C  12767          BNE   *+14  Around region break
00008662 E3C0 C124 001A          00008058  12768          ALGF  12,@lit_region_diff_2005_4_5
                                           12769          DROP  12
                        0000880E           12770          USING @REGION_2005_5,12
00008668 47F0 C264               00008A72  12771          B     @ret_lab_2005
                                           12772          DROP  12
                        00007F34           12773          USING @REGION_2005_4,12
0000866C 1255                              12774          LTR   5,5
0000866E 4770 C6DC               00008610  12775          BNE   @L1093
00008672                                   12776 @L1087   DS    0H
                                           12777 * ***
                                           12778 * ***           if (reset_coord_err) {
00008672 12BB                              12779          LTR   11,11
00008674 4780 C7B4               000086E8  12780          BZ    @L1094
                                           12781 * ***                   rwlock_wrlock(&(rk)->rk_lock);
00008678 41F0 39A0               000009A0  12782          LA    15,2464(0,3)
0000867C E3F0 D2F8 0024          000002F8  12783          STG   15,760(0,13)
00008682 4110 D2F8               000002F8  12784          LA    1,760(0,13)
00008686 E3F0 C12C 0004          00008060  12785          LG    15,@lit_2005_558 ; rwlock_wrlock
0000868C                                   12786 @@gen_label808 DS    0H
0000868C 05EF                              12787          BALR  14,15
0000868E                                   12788 @@gen_label809 DS    0H
                                           12789 * ***                   rd_kafka_txn_coord_set(rk, ((void *)0),
                                           12790 * ***                                          "AddPartitionsToTxn fai\
                                           12791 * led: %s",
                                           12792 * ***                                          rd_kafka_err2str(reset_\
                                           12793 * coord_err));
                                                                                                                           Page  258 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000868E B914 00FB                         12794          LGFR  15,11
00008692 E3F0 D2F8 0024          000002F8  12795          STG   15,760(0,13)
00008698 4110 D2F8               000002F8  12796          LA    1,760(0,13)
0000869C E3F0 C0D4 0004          00008008  12797          LG    15,@lit_2005_536 ; rd_kafka_err2str
000086A2                                   12798 @@gen_label810 DS    0H
000086A2 05EF                              12799          BALR  14,15
000086A4                                   12800 @@gen_label811 DS    0H
000086A4 E330 D2F8 0024          000002F8  12801          STG   3,760(0,13)
000086AA D707 D300 D300 00000300 00000300  12802          XC    768(8,13),768(13)
000086B0 E310 C0A4 0004          00007FD8  12803          LG    1,@lit_2005_521
000086B6 4110 172E               0000072E  12804          LA    1,1838(0,1)
000086BA E310 D308 0024          00000308  12805          STG   1,776(0,13)
000086C0 E3F0 D310 0024          00000310  12806          STG   15,784(0,13)
000086C6 4110 D2F8               000002F8  12807          LA    1,760(0,13)
000086CA E3F0 C134 0004          00008068  12808          LG    15,@lit_2005_561 ; rd_kafka_txn_coord_set
000086D0                                   12809 @@gen_label812 DS    0H
000086D0 05EF                              12810          BALR  14,15
000086D2                                   12811 @@gen_label813 DS    0H
                                           12812 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
000086D2 41F0 39A0               000009A0  12813          LA    15,2464(0,3)
000086D6 E3F0 D2F8 0024          000002F8  12814          STG   15,760(0,13)
000086DC 4110 D2F8               000002F8  12815          LA    1,760(0,13)
000086E0 E3F0 C13C 0004          00008070  12816          LG    15,@lit_2005_562 ; rwlock_wrunlock
000086E6                                   12817 @@gen_label814 DS    0H
000086E6 05EF                              12818          BALR  14,15
000086E8                                   12819 @@gen_label815 DS    0H
                                           12820 * ***           }
000086E8                                   12821 @L1094   DS    0H
                                           12822 * ***
                                           12823 * ***
                                           12824 * ***   # 828 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           12825 * ***           mtx_lock(&rk->rk_eos.txn_pending_lock);
000086E8 41F0 3E50               00000E50  12826          LA    15,3664(0,3)
000086EC E3F0 D2F8 0024          000002F8  12827          STG   15,760(0,13)
000086F2 4110 D2F8               000002F8  12828          LA    1,760(0,13)
000086F6 E3F0 C084 0004          00007FB8  12829          LG    15,@lit_2005_514 ; mtx_lock
000086FC                                   12830 @@gen_label816 DS    0H
000086FC 05EF                              12831          BALR  14,15
000086FE                                   12832 @@gen_label817 DS    0H
                                           12833 * ***           do { rd_kafka_toppar_t * _cstmp; rd_kafka_toppar_t * _\
                                           12834 * cstmp2; if ((((&rk->rk_eos.txn_pending_rktps)->tqh_first) == (((void\
                                           12835 *  *)0)))) { do { if (!(((&rk->rk_eos.txn_waitresp_rktps)->tqh_first) \
                                           12836 * == (((void *)0)))) { *(&rk->rk_eos.txn_pending_rktps)->tqh_last = (&\
                                           12837 * rk->rk_eos.txn_waitresp_rktps)->tqh_first; (&rk->rk_eos.txn_waitresp\
                                           12838 * _rktps)->tqh_first->rktp_txnlink .tqe_prev = (&rk->rk_eos.txn_pendin\
                                           12839 * g_rktps)->tqh_last; (&rk->rk_eos.txn_pending_rktps)->tqh_last = (&rk\
                                           12840 * ->rk_eos.txn_waitresp_rktps)->tqh_last; do { ((&rk->rk_eos.txn_waitr\
                                           12841 * esp_rktps))->tqh_first = (((void *)0)); ((&rk->rk_eos.txn_waitresp_r\
                                           12842 * ktps))->tqh_last = &((&rk->rk_eos.txn_waitresp_rktps))->tqh_first; }\
                                           12843 *  while ( 0); } } while ( 0); break; } for ((_cstmp) = ((&rk->rk_eos.\
                                           12844 * txn_waitresp_rktps)->tqh_first); (_cstmp) != (((void *)0)) && ((_cst\
                                           12845 * mp2) = ((_cstmp)->rktp_txnlink .tqe_next), 1); (_cstmp) = (_cstmp2))\
                                                                                                                           Page  259 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           12846 *  { do { if(((&rk->rk_eos.txn_pending_rktps)->tqh_first) == ((void *)\
                                           12847 * 0)) { do {  if (((_cstmp)->rktp_txnlink .tqe_next = (&rk->rk_eos.txn\
                                           12848 * _pending_rktps)->tqh_first) != (((void *)0))) (&rk->rk_eos.txn_pendi\
                                           12849 * ng_rktps)->tqh_first->rktp_txnlink .tqe_prev = &(_cstmp)->rktp_txnli\
                                           12850 * nk .tqe_next; else (&rk->rk_eos.txn_pending_rktps)->tqh_last = &(_cs\
                                           12851 * tmp)->rktp_txnlink .tqe_next; (&rk->rk_eos.txn_pending_rktps)->tqh_f\
                                           12852 * irst = (_cstmp); (_cstmp)->rktp_txnlink .tqe_prev = &(&rk->rk_eos.tx\
                                           12853 * n_pending_rktps)->tqh_first; } while ( 0); } else { rd_kafka_toppar_\
                                           12854 * t * _tmp; for ((_tmp) = ((&rk->rk_eos.txn_pending_rktps)->tqh_first)\
                                           12855 * ; (_tmp) != (((void *)0)); (_tmp) = ((_tmp)->rktp_txnlink .tqe_next)\
                                           12856 * ) { if(rd_kafka_toppar_topic_cmp(_cstmp,_tmp) < 0) { do {  (_cstmp)-\
                                           12857 * >rktp_txnlink .tqe_prev = (_tmp)->rktp_txnlink .tqe_prev; (_cstmp)->\
                                           12858 * rktp_txnlink .tqe_next = (_tmp); *(_tmp)->rktp_txnlink .tqe_prev = (\
                                           12859 * _cstmp); (_tmp)->rktp_txnlink .tqe_prev = &(_cstmp)->rktp_txnlink .t\
                                           12860 * qe_next; } while ( 0); break; } if(!((_tmp)->rktp_txnlink .tqe_next)\
                                           12861 * ) { do {  if (((_cstmp)->rktp_txnlink .tqe_next = (_tmp)->rktp_txnli\
                                           12862 * nk .tqe_next) != (((void *)0))) (_cstmp)->rktp_txnlink .tqe_next->rk\
                                           12863 * tp_txnlink .tqe_prev = &(_cstmp)->rktp_txnlink .tqe_next; else (&rk-\
                                           12864 * >rk_eos.txn_pending_rktps)->tqh_last = &(_cstmp)->rktp_txnlink .tqe_\
                                           12865 * next; (_tmp)->rktp_txnlink .tqe_next = (_cstmp); (_cstmp)->rktp_txnl\
                                           12866 * ink .tqe_prev = &(_tmp)->rktp_txnlink .tqe_next; } while ( 0); break\
                                           12867 * ; } } } } while(0); } do { (&rk->rk_eos.txn_waitresp_rktps)->tqh_fir\
                                           12868 * st = (((void *)0)); (&rk->rk_eos.txn_waitresp_rktps)->tqh_last = &(&\
                                           12869 * rk->rk_eos.txn_waitresp_rktps)->tqh_first; } while ( 0); } while (0)\
                                           12870 * ;
000086FE                                   12871 @L1095   DS    0H
000086FE E3F0 3E78 0002          00000E78  12872          LTG   15,3704(0,3) ; offset of txn_pending_rktps in 0000146
00008704 4770 C836               0000876A  12873          BNE   @L1098
00008708                                   12874 @L1099   DS    0H
00008708 E3F0 3E88 0002          00000E88  12875          LTG   15,3720(0,3) ; offset of txn_waitresp_rktps in 0000146
0000870E 4770 C7E8               0000871C  12876          BNE   *+14  Around region break
00008712 E3C0 C124 001A          00008058  12877          ALGF  12,@lit_region_diff_2005_4_5
                                           12878          DROP  12
                        0000880E           12879          USING @REGION_2005_5,12
00008718 47F0 C11A               00008928  12880          B     @L1096
                                           12881          DROP  12
                        00007F34           12882          USING @REGION_2005_4,12
0000871C E3F0 3E80 0004          00000E80  12883          LG    15,3712(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00008722 E310 3E88 0004          00000E88  12884          LG    1,3720(0,3) ; offset of txn_waitresp_rktps in 0000146
00008728 E310 F000 0024          00000000  12885          STG   1,0(0,15)
0000872E E3F0 3E88 0004          00000E88  12886          LG    15,3720(0,3) ; offset of txn_waitresp_rktps in 0000146
00008734 E310 3E80 0004          00000E80  12887          LG    1,3712(0,3) ; offset of tqh_last in rd_kafka_toppar_tqhe*
                                                                ad_s
0000873A E310 F058 0024          00000058  12888          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
00008740 E3F0 3E90 0004          00000E90  12889          LG    15,3728(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00008746 E3F0 3E80 0024          00000E80  12890          STG   15,3712(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
0000874C                                   12891 @L1103   DS    0H
0000874C A7F9 0000               00000000  12892          LGHI  15,0        ; 0
00008750 E3F0 3E88 0024          00000E88  12893          STG   15,3720(0,3) ; offset of txn_waitresp_rktps in 0000146
                                                                                                                           Page  260 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008756 41F0 3E88               00000E88  12894          LA    15,3720(0,3)
0000875A E3F0 3E90 0024          00000E90  12895          STG   15,3728(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00008760                                   12896 @L1102   DS    0H
00008760 E3C0 C124 001A          00008058  12897          ALGF  12,@lit_region_diff_2005_4_5
                                           12898          DROP  12
                        0000880E           12899          USING @REGION_2005_5,12
00008766 47F0 C11A               00008928  12900          B     @L1096
                                           12901          DROP  12
                        00007F34           12902          USING @REGION_2005_4,12
0000876A                                   12903 @L1098   DS    0H
0000876A E320 3E88 0004          00000E88  12904          LG    2,3720(0,3) ; offset of txn_waitresp_rktps in 0000146
00008770 E3C0 C124 001A          00008058  12905          ALGF  12,@lit_region_diff_2005_4_5
                                           12906          DROP  12
                        0000880E           12907          USING @REGION_2005_5,12
00008776 47F0 C0EE               000088FC  12908          B     @L1107
                                           12909          DROP  12
                        00007F34           12910          USING @REGION_2005_4,12
0000877A                                   12911 @L1111   DS    0H
0000877A E3F0 3E78 0002          00000E78  12912          LTG   15,3704(0,3) ; offset of txn_pending_rktps in 0000146
00008780 4770 C89C               000087D0  12913          BNE   @L1114
00008784                                   12914 @L1115   DS    0H
00008784 E3F0 3E78 0004          00000E78  12915          LG    15,3704(0,3) ; offset of txn_pending_rktps in 0000146
0000878A E3F0 2050 0024          00000050  12916          STG   15,80(0,2)
00008790 B902 00FF                         12917          LTGR  15,15
00008794 4780 C878               000087AC  12918          BE    @L1118
00008798 E3F0 3E78 0004          00000E78  12919          LG    15,3704(0,3) ; offset of txn_pending_rktps in 0000146
0000879E 4110 2050               00000050  12920          LA    1,80(0,2)
000087A2 E310 F058 0024          00000058  12921          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
000087A8 47F0 C882               000087B6  12922          B     @L1119
000087AC                                   12923 @L1118   DS    0H
000087AC 41F0 2050               00000050  12924          LA    15,80(0,2)
000087B0 E3F0 3E80 0024          00000E80  12925          STG   15,3712(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
000087B6                                   12926 @L1119   DS    0H
000087B6 E320 3E78 0024          00000E78  12927          STG   2,3704(0,3) ; offset of txn_pending_rktps in 0000146
000087BC 41F0 3E78               00000E78  12928          LA    15,3704(0,3)
000087C0 E3F0 2058 0024          00000058  12929          STG   15,88(0,2)  ; offset of tqe_prev in 0000134
000087C6 E3C0 C124 001A          00008058  12930          ALGF  12,@lit_region_diff_2005_4_5
                                           12931          DROP  12
                        0000880E           12932          USING @REGION_2005_5,12
000087CC 47F0 C0EA               000088F8  12933          B     @L1120
                                           12934          DROP  12
                        00007F34           12935          USING @REGION_2005_4,12
000087D0                                   12936 @L1114   DS    0H
000087D0 E360 3E78 0004          00000E78  12937          LG    6,3704(0,3) ; offset of txn_pending_rktps in 0000146
000087D6 E3C0 C124 001A          00008058  12938          ALGF  12,@lit_region_diff_2005_4_5
                                           12939          DROP  12
                        0000880E           12940          USING @REGION_2005_5,12
000087DC 47F0 C0D8               000088E6  12941          B     @L1122
                                           12942          DROP  12
                        00007F34           12943          USING @REGION_2005_4,12
                                                                                                                           Page  261 
  Active Usings: @REGION_2005_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000087E0                                   12944 @L1121   DS    0H
000087E0 E320 D2F8 0024          000002F8  12945          STG   2,760(0,13)
000087E6 E360 D300 0024          00000300  12946          STG   6,768(0,13)
000087EC 4110 D2F8               000002F8  12947          LA    1,760(0,13)
000087F0 E3F0 C144 0004          00008078  12948          LG    15,@lit_2005_565 ; rd_kafka_toppar_topic_cmp
000087F6                                   12949 @@gen_label822 DS    0H
000087F6 05EF                              12950          BALR  14,15
000087F8                                   12951 @@gen_label823 DS    0H
000087F8 12FF                              12952          LTR   15,15
000087FA 4740 C8D4               00008808  12953          BL    *+14  Around region break
000087FE E3C0 C124 001A          00008058  12954          ALGF  12,@lit_region_diff_2005_4_5
                                           12955          DROP  12
                        0000880E           12956          USING @REGION_2005_5,12
00008804 47F0 C082               00008890  12957          B     @L1125
                                           12958          DROP  12
                        00007F34           12959          USING @REGION_2005_4,12
00008808 E3C0 C124 001A          00008058  12960          ALGF  12,@lit_region_diff_2005_4_5
0000880E                                   12961 @REGION_2005_5 DS 0H
                                           12962          DROP  12
                        0000880E           12963          USING @REGION_2005_5,12
0000880E                                   12964 @L1126   DS    0H
0000880E E3F0 6058 0004          00000058  12965          LG    15,88(0,6)  ; offset of tqe_prev in 0000134
00008814 E3F0 2058 0024          00000058  12966          STG   15,88(0,2)  ; offset of tqe_prev in 0000134
0000881A E360 2050 0024          00000050  12967          STG   6,80(0,2)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
00008820 E3F0 6058 0004          00000058  12968          LG    15,88(0,6)  ; offset of tqe_prev in 0000134
00008826 E320 F000 0024          00000000  12969          STG   2,0(0,15)
0000882C 41F0 2050               00000050  12970          LA    15,80(0,2)
00008830 E3F0 6058 0024          00000058  12971          STG   15,88(0,6)  ; offset of tqe_prev in 0000134
00008836 47F0 C0EA               000088F8  12972          B     @L1123
00008840                                   12973          DS    0D
00008840 000008DA                          12974 @lit_region_diff_2005_5_4  DC A(@REGION_2005_5-@REGION_2005_4)
00008844 00000000
00008848 0000000000000000                  12975 @lit_2005_567 DC AD(mtx_unlock)
00008850 00000000000044D0                  12976 @lit_2005_568 DC AD(rd_kafka_txn_normalize_err)
00008858 0000000000000000                  12977 @lit_2005_569 DC AD(rd_kafka_err2str)
00008860 0000000000005118                  12978 @lit_2005_571 DC AD(rd_kafka_txn_set_fatal_error)
00008868 0000000000014A98                  12979 @lit_2005_570 DC AD(@strings@)
00008870 0000000000000000                  12980 @lit_2005_572 DC AD(rd_kafka_broker_name)
00008878 0000000000005448                  12981 @lit_2005_576 DC AD(rd_kafka_txn_set_abortable_error0)
00008880 000003E8                          12982 @lit_2005_575 DC F'1000' 0x000003e8
00008884 00000000
00008888 0000000000009338                  12983 @lit_2005_578 DC AD(rd_kafka_txn_schedule_register_partitions)
00008890                                   12984 @L1125   DS    0H
00008890 E3F0 6050 0002          00000050  12985          LTG   15,80(0,6)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
00008896 4770 C0D2               000088E0  12986          BNZ   @L1129
0000889A                                   12987 @L1130   DS    0H
0000889A E3F0 6050 0004          00000050  12988          LG    15,80(0,6)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000088A0 E3F0 2050 0024          00000050  12989          STG   15,80(0,2)
000088A6 B902 00FF                         12990          LTGR  15,15
                                                                                                                           Page  262 
  Active Usings: @REGION_2005_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000088AA 4780 C0B4               000088C2  12991          BE    @L1133
000088AE E3F0 2050 0004          00000050  12992          LG    15,80(0,2)  ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000088B4 4110 2050               00000050  12993          LA    1,80(0,2)
000088B8 E310 F058 0024          00000058  12994          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
000088BE 47F0 C0BE               000088CC  12995          B     @L1134
000088C2                                   12996 @L1133   DS    0H
000088C2 41F0 2050               00000050  12997          LA    15,80(0,2)
000088C6 E3F0 3E80 0024          00000E80  12998          STG   15,3712(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
000088CC                                   12999 @L1134   DS    0H
000088CC E320 6050 0024          00000050  13000          STG   2,80(0,6)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000088D2 41F0 6050               00000050  13001          LA    15,80(0,6)
000088D6 E3F0 2058 0024          00000058  13002          STG   15,88(0,2)  ; offset of tqe_prev in 0000134
000088DC 47F0 C0EA               000088F8  13003          B     @L1123
000088E0                                   13004 @L1129   DS    0H
000088E0 E360 6050 0004          00000050  13005          LG    6,80(0,6)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000088E6                                   13006 @L1122   DS    0H
000088E6 B902 00F6                         13007          LTGR  15,6
000088EA 4780 C0EA               000088F8  13008          BE    *+14  Around region break
000088EE E3C0 C032 001B          00008840  13009          SLGF  12,@lit_region_diff_2005_5_4
                                           13010          DROP  12
                        00007F34           13011          USING @REGION_2005_4,12
000088F4 47F0 C8AC               000087E0  13012          B     @L1121
                                           13013          DROP  12
                        0000880E           13014          USING @REGION_2005_5,12
000088F8                                   13015 @L1123   DS    0H
000088F8                                   13016 @L1120   DS    0H
000088F8 B904 0028                         13017          LGR   2,8         ; _cstmp
000088FC                                   13018 @L1107   DS    0H
000088FC B902 00F2                         13019          LTGR  15,2
00008900 4780 C106               00008914  13020          BE    @L1135
00008904 E380 2050 0004          00000050  13021          LG    8,80(0,2)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
0000890A E3C0 C032 001B          00008840  13022          SLGF  12,@lit_region_diff_2005_5_4
                                           13023          DROP  12
                        00007F34           13024          USING @REGION_2005_4,12
00008910 47F0 C846               0000877A  13025          B     @L1111
                                           13026          DROP  12
                        0000880E           13027          USING @REGION_2005_5,12
00008914                                   13028 @L1135   DS    0H
00008914 A7F9 0000               00000000  13029          LGHI  15,0        ; 0
00008918 E3F0 3E88 0024          00000E88  13030          STG   15,3720(0,3) ; offset of txn_waitresp_rktps in 0000146
0000891E 41F0 3E88               00000E88  13031          LA    15,3720(0,3)
00008922 E3F0 3E90 0024          00000E90  13032          STG   15,3728(0,3) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00008928                                   13033 @L1096   DS    0H
                                           13034 * ***
                                           13035 * ***
                                           13036 * ***
                                                                                                                           Page  263 
  Active Usings: @REGION_2005_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           13037 * ***           mtx_unlock(&rk->rk_eos.txn_pending_lock);
00008928 41F0 3E50               00000E50  13038          LA    15,3664(0,3)
0000892C E3F0 D2F8 0024          000002F8  13039          STG   15,760(0,13)
00008932 4110 D2F8               000002F8  13040          LA    1,760(0,13)
00008936 E3F0 C03A 0004          00008848  13041          LG    15,@lit_2005_567 ; mtx_unlock
0000893C                                   13042 @@gen_label829 DS    0H
0000893C 05EF                              13043          BALR  14,15
0000893E                                   13044 @@gen_label830 DS    0H
                                           13045 * ***
                                           13046 * ***           err = rd_kafka_txn_normalize_err(err);
0000893E B914 00F5                         13047          LGFR  15,5
00008942 E3F0 D2F8 0024          000002F8  13048          STG   15,760(0,13)
00008948 4110 D2F8               000002F8  13049          LA    1,760(0,13)
0000894C E3F0 C042 0004          00008850  13050          LG    15,@lit_2005_568 ; rd_kafka_txn_normalize_err
00008952                                   13051 @@gen_label831 DS    0H
00008952 05EF                              13052          BALR  14,15
00008954                                   13053 @@gen_label832 DS    0H
00008954 185F                              13054          LR    5,15        ; err
                                           13055 * ***
                                           13056 * ***           if (actions & 0x200) {
00008956 18F7                              13057          LR    15,7
00008958 C0FB 0000 0200                    13058          NILF  15,X'00000200'
0000895E 12FF                              13059          LTR   15,15
00008960 4780 C1A8               000089B6  13060          BZ    @L1138
                                           13061 * ***                   rd_kafka_txn_set_fatal_error(rk, RD_DO_LOCK, e\
                                           13062 * rr,
                                           13063 * ***                                                "Failed to add pa\
                                           13064 * rtitions to "
                                           13065 * ***                                                rd_kafka_err2str(\
                                           13066 * err));
00008964 B914 00F5                         13067          LGFR  15,5
00008968 E3F0 D2F8 0024          000002F8  13068          STG   15,760(0,13)
0000896E 4110 D2F8               000002F8  13069          LA    1,760(0,13)
00008972 E3F0 C04A 0004          00008858  13070          LG    15,@lit_2005_569 ; rd_kafka_err2str
00008978                                   13071 @@gen_label834 DS    0H
00008978 05EF                              13072          BALR  14,15
0000897A                                   13073 @@gen_label835 DS    0H
0000897A E330 D2F8 0024          000002F8  13074          STG   3,760(0,13)
00008980 E548 D300 0001          00000300  13075          MVGHI 768(13),1
00008986 B914 0015                         13076          LGFR  1,5
0000898A E310 D308 0024          00000308  13077          STG   1,776(0,13)
                                           13078 * ***                                                "transaction: %s"\
                                           13079 * ,
00008990 E310 C05A 0004          00008868  13080          LG    1,@lit_2005_570
00008996 4110 174C               0000074C  13081          LA    1,1868(0,1)
0000899A E310 D310 0024          00000310  13082          STG   1,784(0,13)
000089A0 E3F0 D318 0024          00000318  13083          STG   15,792(0,13)
000089A6 4110 D2F8               000002F8  13084          LA    1,760(0,13)
000089AA E3F0 C052 0004          00008860  13085          LG    15,@lit_2005_571 ; rd_kafka_txn_set_fatal_error
000089B0                                   13086 @@gen_label836 DS    0H
000089B0 05EF                              13087          BALR  14,15
000089B2                                   13088 @@gen_label837 DS    0H
                                                                                                                           Page  264 
  Active Usings: @REGION_2005_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           13089 * ***
                                           13090 * ***           } else if (actions & 0x1) {
000089B2 47F0 C264               00008A72  13091          B     @L1139
000089B6                                   13092 @L1138   DS    0H
000089B6 A771 0001               00000001  13093          TML   7,1
000089BA 4780 C234               00008A42  13094          BZ    @L1140
                                           13095 * ***
                                           13096 * ***                   rd_kafka_txn_set_abortable_error0(rk,err,0,"Fa\
                                           13097 * iled to add partition(s) to transaction " "on broker %s: %s (after %\
                                           13098 * d ms)", rd_kafka_broker_name(rkb), rd_kafka_err2str(err), (int)(requ\
                                           13099 * est->rkbuf_ts_sent/1000));
000089BE E340 D2F8 0024          000002F8  13100          STG   4,760(0,13)
000089C4 4110 D2F8               000002F8  13101          LA    1,760(0,13)
000089C8 E3F0 C062 0004          00008870  13102          LG    15,@lit_2005_572 ; rd_kafka_broker_name
000089CE                                   13103 @@gen_label839 DS    0H
000089CE 05EF                              13104          BALR  14,15
000089D0                                   13105 @@gen_label840 DS    0H
000089D0 B904 002F                         13106          LGR   2,15
000089D4 B914 00F5                         13107          LGFR  15,5
000089D8 E3F0 D2F8 0024          000002F8  13108          STG   15,760(0,13)
000089DE 4110 D2F8               000002F8  13109          LA    1,760(0,13)
000089E2 E3F0 C04A 0004          00008858  13110          LG    15,@lit_2005_569 ; rd_kafka_err2str
000089E8                                   13111 @@gen_label841 DS    0H
000089E8 05EF                              13112          BALR  14,15
000089EA                                   13113 @@gen_label842 DS    0H
000089EA E330 D2F8 0024          000002F8  13114          STG   3,760(0,13)
000089F0 B914 0015                         13115          LGFR  1,5
000089F4 E310 D300 0024          00000300  13116          STG   1,768(0,13)
000089FA D707 D308 D308 00000308 00000308  13117          XC    776(8,13),776(13)
00008A00 E310 C05A 0004          00008868  13118          LG    1,@lit_2005_570
00008A06 4110 1778               00000778  13119          LA    1,1912(0,1)
00008A0A EB12 D310 0024          00000310  13120          STMG  1,2,784(13)
00008A10 E3F0 D320 0024          00000320  13121          STG   15,800(0,13)
00008A16 E3F0 A020 0004          00000020  13122          LG    15,32(0,10) ; request
00008A1C E330 F158 0004          00000158  13123          LG    3,344(0,15) ; offset of rkbuf_ts_sent in rd_kafka_buf_s
00008A22 E320 C072 001D          00008880  13124          DSGF  2,@lit_2005_575
00008A28 B914 00F3                         13125          LGFR  15,3
00008A2C E3F0 D328 0024          00000328  13126          STG   15,808(0,13)
00008A32 4110 D2F8               000002F8  13127          LA    1,760(0,13)
00008A36 E3F0 C06A 0004          00008878  13128          LG    15,@lit_2005_576 ; rd_kafka_txn_set_abortable_error0
00008A3C                                   13129 @@gen_label843 DS    0H
00008A3C 05EF                              13130          BALR  14,15
00008A3E                                   13131 @@gen_label844 DS    0H
                                           13132 * ***
                                           13133 * ***   # 853 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           13134 * ***           } else {
00008A3E 47F0 C264               00008A72  13135          B     @L1139
00008A42                                   13136 @L1140   DS    0H
                                           13137 * ***
                                           13138 * ***                   rd_kafka_txn_schedule_register_partitions(
                                           13139 * ***                           rk,
                                           13140 * ***                           (actions & 0x8) ?
                                                                                                                           Page  265 
  Active Usings: @REGION_2005_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008A42 A771 0008               00000008  13141          TML   7,8
00008A46 4780 C244               00008A52  13142          BZ    @L1142
                                           13143 * ***                           retry_backoff_ms : 1);
00008A4A 58F0 D380               00000380  13144          L     15,896(0,13) ; spill
00008A4E 47F0 C248               00008A56  13145          B     @L1143
00008A52                                   13146 @L1142   DS    0H
00008A52 A7F8 0001               00000001  13147          LHI   15,1        ; 1
00008A56                                   13148 @L1143   DS    0H
00008A56 E330 D2F8 0024          000002F8  13149          STG   3,760(0,13)
00008A5C B914 00FF                         13150          LGFR  15,15
00008A60 E3F0 D300 0024          00000300  13151          STG   15,768(0,13)
00008A66 4110 D2F8               000002F8  13152          LA    1,760(0,13)
00008A6A E3F0 C07A 0004          00008888  13153          LG    15,@lit_2005_578 ; rd_kafka_txn_schedule_register_partit*
                                                                ions
00008A70                                   13154 @@gen_label846 DS    0H
00008A70 05EF                              13155          BALR  14,15
00008A72                                   13156 @@gen_label847 DS    0H
                                           13157 * ***
                                           13158 * ***           }
00008A72                                   13159 @L1141   DS    0H
                                           13160 * ***   }
00008A72                                   13161 @L1139   DS    0H
00008A72                                   13162 @ret_lab_2005 DS 0H
                                           13163 * * **** Start of Epilogue
                                           13164          DCCEPIL
00008A72                                   13165+         ds 0h                                                          01-DCCEP
                                           13166+* Epilog
00008A72 D707 D088 D088 00000088 00000088  13167+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00008A78 E3D0 D080 0004          00000080  13168+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00008A7E E3C0 D090 0004          00000090  13169+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00008A84 E3B0 C018 0004          00000018  13170+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00008A8A E3C0 B010 0021          00000010  13171+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00008A90 E3E0 D008 0004          00000008  13172+         lg  14,8(0,13)          load up return address                 01-DCCEP
00008A96 EB1C D020 0004          00000020  13173+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00008A9C 078E                              13174+         bcr 8,14                if same dsab, just return              01-DCCEP
00008A9E E3F0 D010 0024          00000010  13175+         stg 15,16(0,13)         save return code                       01-DCCEP
00008AA4 E300 D018 0024          00000018  13176+         stg 0,24(0,13)          save more return code                  01-DCCEP
00008AAA E3F0 D090 0004          00000090  13177+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00008AB0 E3F0 F018 0004          00000018  13178+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00008AB6 47F0 F040               00000040  13179+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           13180+* End of Epilog
                                           13181 * * **** End of Epilogue
                                           13182          DROP  12
                                           13183 *
                                           13184 *   DSECT for automatic variables in "rd_kafka_txn_handle_AddPartition
                                           13185 *           sToTxn"
                                           13186 *      (FUNCTION #2005)
                                           13187 *
00000000                00000000 000002F8  13188 @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn DSECT
00000000                                   13189          DS    XL168
000000A8                                   13190 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#65 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13191          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
                                                                                                                           Page  266 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                   13192 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len2#64 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  13193          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13194 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#57 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13195          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13196 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len2#56 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  13197          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13198 rd_kafka_txn_handle_$Add$Partitions$To$Txn#p_actions#54 DS 1F ; p_actio*
                                                                ns
000000AC                000000AC 000000A8  13199          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13200 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#48 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13201          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13202 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len2#47 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  13203          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13204 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#39 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13205          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13206 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#33 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13207          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13208 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len2#32 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  13209          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13210 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_r#25 DS 8XL1 ; _r
000000B0                000000B0 000000A8  13211          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13212 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_klen#23 DS 1F ; _klen
000000AC                000000AC 000000A8  13213          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13214 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#16 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13215          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13216 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len2#15 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  13217          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13218 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len0#8 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  13219          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13220 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__len2#7 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  13221          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13222 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_throttle_time_ms#5 DS 1F ; *
                                                                _throttle_time_ms
000000AC                000000AC 000000A8  13223          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13224 rd_kafka_txn_handle_$Add$Partitions$To$Txn#reset_coord_err#0 DS 1F ; re*
                                                                set_coord_err
000000AC                000000AC 000000A8  13225          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13226 rd_kafka_txn_handle_$Add$Partitions$To$Txn#retry_backoff_ms#0 DS 1F ; r*
                                                                etry_backoff_ms
000000AC                000000AC 000000A8  13227          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13228 rd_kafka_txn_handle_$Add$Partitions$To$Txn#actions#0 DS 1F ; actions
000000AC                000000AC 000000A8  13229          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+168
000000A8                                   13230 rd_kafka_txn_handle_$Add$Partitions$To$Txn#log_decode_errors#0 DS 1F ; *
                                                                log_decode_errors
000000AC                000000AC 000000AC  13231          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+172
000000AC                                   13232 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#6 DS 1F ; _v
000000B0                000000B0 000000B0  13233          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+176
000000B0                                   13234 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#14 DS 1F ; _v
000000B4                000000B4 000000B4  13235          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+180
000000B4                                   13236 rd_kafka_txn_handle_$Add$Partitions$To$Txn#$Part$Cnt#22 DS 1F ; PartCnt
000000B8                000000B8 000000B8  13237          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+184
000000B8                                   13238 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_uva#24 DS 8XL1 ; _uva
                                                                                                                           Page  267 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000C0                000000C0 000000C0  13239          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+192
000000C0                                   13240 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#25 DS 8XL1 ; _v
000000C8                000000C8 000000C8  13241          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+200
000000C8                                   13242 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#31 DS 2XL1 ; _v
000000CA                000000CA 000000CA  13243          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+202
000000CA                                   13244 rd_kafka_txn_handle_$Add$Partitions$To$Txn#request_error#22 DS 1CL1 ; r*
                                                                equest_error
000000CB                000000CB 000000CC  13245          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+204
000000CC                                   13246 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#46 DS 1F ; _v
000000D0                000000D0 000000D0  13247          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+208
000000D0                                   13248 rd_kafka_txn_handle_$Add$Partitions$To$Txn#$Partition#54 DS 1F ; Partit*
                                                                ion
000000D4                000000D4 000000D4  13249          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+212
000000D4                                   13250 rd_kafka_txn_handle_$Add$Partitions$To$Txn#$Error$Code#54 DS 2XL1 ; Err*
                                                                orCode
000000D6                000000D6 000000D8  13251          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+216
000000D8                                   13252 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#55 DS 1F ; _v
000000DC                000000DC 000000DC  13253          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+220
000000DC                                   13254 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_v#63 DS 2XL1 ; _v
000000DE                000000DE 000000E0  13255          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+224
000000E0                                   13256 rd_kafka_txn_handle_$Add$Partitions$To$Txn#$Topic$Cnt#0 DS 1F ; TopicCn*
                                                                t
000000E4                000000E4 000000E4  13257          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+228
000000E4                                   13258 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#20 DS 256XL1 ; __tm*
                                                                pstr
000001E4                000001E4 000000E4  13259          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+228
000000E4                                   13260 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#12 DS 256XL1 ; __tm*
                                                                pstr
000001E4                000001E4 000000E4  13261          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+228
000000E4                                   13262 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#4 DS 256XL1 ; _logn*
                                                                ame
000001E4                000001E4 000000E8  13263          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+232
000000E8                                   13264 rd_kafka_txn_handle_$Add$Partitions$To$Txn#$Topic#22 DS 16XL1 ; Topic
000000F8                000000F8 000000F8  13265          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13266 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#80 DS 256XL1 ; _log*
                                                                name
000001F8                000001F8 000000F8  13267          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13268 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#79 DS 256XL1 ; _log*
                                                                name
000001F8                000001F8 000000F8  13269          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13270 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#74 DS 256XL1 ; _log*
                                                                name
000001F8                000001F8 000000F8  13271          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13272 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#69 DS 256XL1 ; __tm*
                                                                pstr
000001F8                000001F8 000000F8  13273          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13274 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#61 DS 256XL1 ; __tm*
                                                                pstr
000001F8                000001F8 000000F8  13275          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13276 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#52 DS 256XL1 ; __tm*
                                                                pstr
000001F8                000001F8 000000F8  13277          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
                                                                                                                           Page  268 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000F8                                   13278 rd_kafka_txn_handle_$Add$Partitions$To$Txn#alen#45 DS 8XL1 ; alen
00000100                00000100 000000F8  13279          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13280 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#43 DS 256XL1 ; __tm*
                                                                pstr
000001F8                000001F8 000000F8  13281          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13282 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#37 DS 256XL1 ; __tm*
                                                                pstr
000001F8                000001F8 000000F8  13283          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+248
000000F8                                   13284 rd_kafka_txn_handle_$Add$Partitions$To$Txn#__tmpstr#28 DS 256XL1 ; __tm*
                                                                pstr
000001F8                000001F8 00000100  13285          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+256
00000100                                   13286 rd_kafka_txn_handle_$Add$Partitions$To$Txn#ulen#45 DS 8XL1 ; ulen
00000108                00000108 000001E4  13287          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+484
000001E4                                   13288 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#21 DS 256XL1 ; _log*
                                                                name
000002E4                000002E4 000001E4  13289          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+484
000001E4                                   13290 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#13 DS 256XL1 ; _log*
                                                                name
000002E4                000002E4 000001F8  13291          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+504
000001F8                                   13292 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#70 DS 256XL1 ; _log*
                                                                name
000002F8                000002F8 000001F8  13293          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+504
000001F8                                   13294 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#62 DS 256XL1 ; _log*
                                                                name
000002F8                000002F8 000001F8  13295          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+504
000001F8                                   13296 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#53 DS 256XL1 ; _log*
                                                                name
000002F8                000002F8 000001F8  13297          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+504
000001F8                                   13298 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#44 DS 256XL1 ; _log*
                                                                name
000002F8                000002F8 000001F8  13299          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+504
000001F8                                   13300 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#38 DS 256XL1 ; _log*
                                                                name
000002F8                000002F8 000001F8  13301          ORG   @AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn+504
000001F8                                   13302 rd_kafka_txn_handle_$Add$Partitions$To$Txn#_logname#29 DS 256XL1 ; _log*
                                                                name
                                           13303 *
00008ABA                00000000 00014658  13304 @CODE    CSECT
                                           13305 *
                                           13306 *
                                           13307 *
                                           13308 * ....... start of rd_kafka_txn_register_partitions
00008ABA                                   13309 @LNAME2006 DS  0H
00008ABA 00000020                          13310          DC    X'00000020'
00008ABE 99846D9281869281                  13311          DC    C'rd_kafka_txn_register_partitions'
00008ADE 00                                13312          DC    X'00'
                                           13313 rd_kafka_txn_register_partitions DCCPRLG CINDEX=2006,BASER=12,FRAME=105*
                                                                6,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2006
                                           13314          macro
                                           13315          dccextrn &m
                                           13316          gblc    &$dccext(1000)
                                           13317          gbla    &$dccexti
                                                                                                                           Page  269 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           13318          lcla    &i
                                           13319 &$dccext(&$dccexti+1) setc    '&m'
                                           13320 &i       seta    1
                                           13321 .loop    aif    (&i gt &$dccexti).around
                                           13322          aif    ('&$dccext(&i)' eq '&m').getout
                                           13323 &i       seta    &i+1
                                           13324          ago     .loop
                                           13325 .around  anop
                                           13326 &$dccexti seta &$dccexti+1
                                           13327          extrn  &m
                                           13328 .getout  anop
                                           13329          mend
00008AE0                                   13330+$eye0210    ds    0d                                                    02-DCCCA
00008AE0 C4C3C3                            13331+         dc cl3'DCC'                                                    02-DCCCA
00008AE3 01                                13332+         dc xl1'01' format one                                          02-DCCCA
00008AE4 00000000                          13333+         dc a(0)                                                        02-DCCCA
00008AE8 0000000000008B52                  13334+         dc ad(@PER_2006)                                               02-DCCCA
00008AF0 0000000000000420                  13335+         dc ad(1056)                                                    02-DCCCA
00008AF8 0000000000000000                  13336+         dc ad(0)                                                       02-DCCCA
00008B00 0000000000001000                  13337+         dc ad(4096)                                                    02-DCCCA
00008B08 20                                13338+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00008B09 03                                13339+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00008B0A 03                                13340+         dc al1(3)                                                      02-DCCCA
00008B0B 08                                13341+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00008B0C 00                                13342+         dc bl.8'00000000'                                              02-DCCCA
00008B0D 000000                            13343+         dc al3(0)                                                      02-DCCCA
00008B10 0000000000008ABA                  13344+         dc ad(@LNAME2006)                                              02-DCCCA
00008B18                                   13345+         ds 0d                                                          02-DCCCA
00008B18 0000000000008AE0                  13346+         dc ad($eye0210)                                                02-DCCCA
00008B20 0000000000000000                  13347+         dc ad(0)                                                       02-DCCCA
00008B28                                   13348+         ds    0d                                                       01-DCCPR
00008B28                                   13349+rd_kafka_txn_register_partitions ds 0d                                  01-DCCPR
00008B28                                   13350+@REGION_2006_1 ds 0h                                                    01-DCCPR
00008B28 EBEC D008 0024          00000008  13351+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00008B2E E3E0 D088 0004          00000088  13352+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00008B34 E3C0 D090 0004          00000090  13353+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00008B3A B904 002E                         13354+         lgr   2,14                copy addr of our savearea            01-DCCPR
00008B3E E3B0 C018 0004          00000018  13355+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00008B44 A7EB 0420               00000420  13356+         aghi  14,1056             increase by frame size               01-DCCPR
00008B48 E3E0 C020 0021          00000020  13357+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00008B4E 4720 B020               00000020  13358+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00008B52                                   13359+@PER_2006 ds   0h                                                       01-DCCPR
00008B52 EBDE 2080 0024          00000080  13360+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00008B58 E3C0 2090 0024          00000090  13361+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00008B5E B904 00D2                         13362+         lgr   13,2                set real frame pointer               01-DCCPR
00008B62 B904 00CF                         13363+         lgr   12,15               set base reg                         01-DCCPR
                        00008B28           13364+         using @REGION_2006_1,12                                        01-DCCPR
                                           13365 * ******* End of Prologue
                                           13366 * *
                                           13367 * ***           char errstr[512];
00008B66 E320 1000 0004          00000000  13368          LG    2,0(0,1)    ; rk
                                           13369 * ***           rd_kafka_resp_err_t err;
                                                                                                                           Page  270 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           13370 * ***           rd_kafka_error_t *error;
                                           13371 * ***           rd_kafka_pid_t pid;
                                           13372 * ***
                                           13373 * ***
                                           13374 * ***           rwlock_rdlock(&(rk)->rk_lock);
00008B6C 41F0 29A0               000009A0  13375          LA    15,2464(0,2)
00008B70 E3F0 D3C8 0024          000003C8  13376          STG   15,968(0,13)
00008B76 4110 D3C8               000003C8  13377          LA    1,968(0,13)
00008B7A E3F0 C130 0004          00008C58  13378          LG    15,@lit_2006_615 ; rwlock_rdlock
00008B80                                   13379 @@gen_label848 DS    0H
00008B80 05EF                              13380          BALR  14,15
00008B82                                   13381 @@gen_label849 DS    0H
                                           13382 * ***           error = rd_kafka_txn_require_states0(rk, (rd_kafka_txn\
                                           13383 * _state_t[]){ RD_KAFKA_TXN_STATE_IN_TRANSACTION, RD_KAFKA_TXN_STATE_B\
                                           13384 * EGIN_COMMIT, -1 });
00008B82 E54C D0A8 0004          000000A8  13385          MVHI  168(13),4
00008B88 E54C D0AC 0005          000000AC  13386          MVHI  172(13),5
00008B8E E54C D0B0 FFFF          000000B0  13387          MVHI  176(13),-1
00008B94 E320 D3C8 0024          000003C8  13388          STG   2,968(0,13)
00008B9A 41F0 D0A8               000000A8  13389          LA    15,168(0,13)
00008B9E E3F0 D3D0 0024          000003D0  13390          STG   15,976(0,13)
00008BA4 4110 D3C8               000003C8  13391          LA    1,968(0,13)
00008BA8 E3F0 C138 0004          00008C60  13392          LG    15,@lit_2006_616 ; rd_kafka_txn_require_states0
00008BAE                                   13393 @@gen_label850 DS    0H
00008BAE 05EF                              13394          BALR  14,15
00008BB0                                   13395 @@gen_label851 DS    0H
00008BB0 B904 003F                         13396          LGR   3,15
                                           13397 * ***
                                           13398 * ***
                                           13399 * ***
                                           13400 * ***           if (((error != ((void *)0)))) {
00008BB4 B902 00F3                         13401          LTGR  15,3
00008BB8 4780 C1B8               00008CE0  13402          BE    @L1144
                                           13403 * ***                   rwlock_rdunlock(&(rk)->rk_lock);
00008BBC 41F0 29A0               000009A0  13404          LA    15,2464(0,2)
00008BC0 E3F0 D3C8 0024          000003C8  13405          STG   15,968(0,13)
00008BC6 4110 D3C8               000003C8  13406          LA    1,968(0,13)
00008BCA E3F0 C140 0004          00008C68  13407          LG    15,@lit_2006_617 ; rwlock_rdunlock
00008BD0                                   13408 @@gen_label853 DS    0H
00008BD0 05EF                              13409          BALR  14,15
00008BD2                                   13410 @@gen_label854 DS    0H
                                           13411 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           13412 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDPARTS","No\
                                           13413 * t registering partitions: %s", rd_kafka_error_string(error)); } whil\
                                           13414 * e (0);
00008BD2                                   13415 @L1145   DS    0H
00008BD2 9180 2322      00000322 00000080  13416          TM    802(2),128
00008BD6 4780 C112               00008C3A  13417          BZ    @L1148
00008BDA E330 D3C8 0024          000003C8  13418          STG   3,968(0,13)
00008BE0 4110 D3C8               000003C8  13419          LA    1,968(0,13)
00008BE4 E3F0 C148 0004          00008C70  13420          LG    15,@lit_2006_618 ; rd_kafka_error_string
00008BEA                                   13421 @@gen_label856 DS    0H
                                                                                                                           Page  271 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008BEA 05EF                              13422          BALR  14,15
00008BEC                                   13423 @@gen_label857 DS    0H
00008BEC 4110 2210               00000210  13424          LA    1,528(0,2)
00008BF0 EB12 D3C8 0024          000003C8  13425          STMG  1,2,968(13)
00008BF6 D707 D3D8 D3D8 000003D8 000003D8  13426          XC    984(8,13),984(13)
00008BFC E548 D3E0 0007          000003E0  13427          MVGHI 992(13),7
00008C02 C01F 0000 8000                    13428          LLILF 1,X'00008000' ; 32768
00008C08 E310 D3E8 0024          000003E8  13429          STG   1,1000(0,13)
00008C0E E310 C158 0004          00008C80  13430          LG    1,@lit_2006_620
00008C14 4120 144E               0000044E  13431          LA    2,1102(0,1)
00008C18 E320 D3F0 0024          000003F0  13432          STG   2,1008(0,13)
00008C1E 4110 17C2               000007C2  13433          LA    1,1986(0,1)
00008C22 E310 D3F8 0024          000003F8  13434          STG   1,1016(0,13)
00008C28 E3F0 D400 0024          00000400  13435          STG   15,1024(0,13)
00008C2E 4110 D3C8               000003C8  13436          LA    1,968(0,13)
00008C32 E3F0 C150 0004          00008C78  13437          LG    15,@lit_2006_621 ; rd_kafka_log0
00008C38                                   13438 @@gen_label858 DS    0H
00008C38 05EF                              13439          BALR  14,15
00008C3A                                   13440 @@gen_label859 DS    0H
00008C3A                                   13441 @L1148   DS    0H
                                           13442 * ***
                                           13443 * ***
                                           13444 * ***                   rd_kafka_error_destroy(error);
00008C3A E330 D3C8 0024          000003C8  13445          STG   3,968(0,13)
00008C40 4110 D3C8               000003C8  13446          LA    1,968(0,13)
00008C44 E3F0 C160 0004          00008C88  13447          LG    15,@lit_2006_622 ; rd_kafka_error_destroy
00008C4A                                   13448 @@gen_label860 DS    0H
00008C4A 05EF                              13449          BALR  14,15
00008C4C                                   13450 @@gen_label861 DS    0H
                                           13451 * ***                   return;
00008C4C 47F0 C62A               00009152  13452          B     @ret_lab_2006
00008C50                                   13453          DS    0D
00008C50 00000420                          13454 @FRAMESIZE_2006 DC F'1056'
00008C54 00000000
00008C58 0000000000000000                  13455 @lit_2006_615 DC AD(rwlock_rdlock)
00008C60 0000000000004700                  13456 @lit_2006_616 DC AD(rd_kafka_txn_require_states0)
00008C68 0000000000000000                  13457 @lit_2006_617 DC AD(rwlock_rdunlock)
00008C70 0000000000000000                  13458 @lit_2006_618 DC AD(rd_kafka_error_string)
00008C78 0000000000000000                  13459 @lit_2006_621 DC AD(rd_kafka_log0)
00008C80 0000000000014A98                  13460 @lit_2006_620 DC AD(@strings@)
00008C88 0000000000000000                  13461 @lit_2006_622 DC AD(rd_kafka_error_destroy)
00008C90 0000000000004340                  13462 @lit_2006_623 DC AD(rd_kafka_idemp_get_pid0)
00008C98 0000000000003E40                  13463 @lit_2006_625 DC AD(rd_kafka_broker_is_up)
00008CA0 0000000000000000                  13464 @lit_2006_629 DC AD(mtx_lock)
00008CA8 0000000000000000                  13465 @lit_2006_630 DC AD(mtx_unlock)
00008CB0 0000000000004110                  13466 @lit_2006_636 DC AD(rd_kafka_idemp_state2str)
00008CB8 0000000000002D40                  13467 @lit_2006_641 DC AD(rd_kafka_replyq_make)
00008CC0 0000000000014658                  13468 @lit_2006_640 DC AD(@DATA)
00008CC8 0000000000000000                  13469 @lit_2006_643 DC AD(rd_kafka_$Add$Partitions$To$Txn$Request)
00008CD0 00000000000062E0                  13470 @lit_2006_642 DC AD(rd_kafka_txn_handle_$Add$Partitions$To$Txn)
00008CD8 0000000000001BA8                  13471 @lit_2006_653 DC AD(rd_strlcpy)
                                           13472 * ***           }
                                                                                                                           Page  272 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008CE0                                   13473 @L1144   DS    0H
                                           13474 * ***
                                           13475 * ***
                                           13476 * ***           pid = rd_kafka_idemp_get_pid0(rk, 0);
00008CE0 41F0 D2C8               000002C8  13477          LA    15,712(0,13)
00008CE4 E3F0 D3C8 0024          000003C8  13478          STG   15,968(0,13)
00008CEA E320 D3D0 0024          000003D0  13479          STG   2,976(0,13)
00008CF0 D707 D3D8 D3D8 000003D8 000003D8  13480          XC    984(8,13),984(13)
00008CF6 4110 D3C8               000003C8  13481          LA    1,968(0,13)
00008CFA E3F0 C168 0004          00008C90  13482          LG    15,@lit_2006_623 ; rd_kafka_idemp_get_pid0
00008D00                                   13483 @@gen_label862 DS    0H
00008D00 05EF                              13484          BALR  14,15
00008D02                                   13485 @@gen_label863 DS    0H
00008D02 D20F D0B8 D2C8 000000B8 000002C8  13486          MVC   184(16,13),712(13)
                                           13487 * ***
                                           13488 * ***           rwlock_rdunlock(&(rk)->rk_lock);
00008D08 41F0 29A0               000009A0  13489          LA    15,2464(0,2)
00008D0C E3F0 D3C8 0024          000003C8  13490          STG   15,968(0,13)
00008D12 4110 D3C8               000003C8  13491          LA    1,968(0,13)
00008D16 E3F0 C140 0004          00008C68  13492          LG    15,@lit_2006_617 ; rwlock_rdunlock
00008D1C                                   13493 @@gen_label864 DS    0H
00008D1C 05EF                              13494          BALR  14,15
00008D1E                                   13495 @@gen_label865 DS    0H
                                           13496 * ***
                                           13497 * ***
                                           13498 * ***           if (!rd_kafka_broker_is_up(rk->rk_eos.txn_coord)) {
00008D1E E3F0 2D48 0004          00000D48  13499          LG    15,3400(0,2)
00008D24 E3F0 D3C8 0024          000003C8  13500          STG   15,968(0,13)
00008D2A 4110 D3C8               000003C8  13501          LA    1,968(0,13)
00008D2E E3F0 C170 0004          00008C98  13502          LG    15,@lit_2006_625 ; rd_kafka_broker_is_up
00008D34                                   13503 @@gen_label866 DS    0H
00008D34 05EF                              13504          BALR  14,15
00008D36                                   13505 @@gen_label867 DS    0H
00008D36 C0FB 0000 00FF                    13506          NILF  15,X'000000FF'
00008D3C 12FF                              13507          LTR   15,15
00008D3E 4770 C274               00008D9C  13508          BNZ   @L1149
                                           13509 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           13510 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDPARTS","No\
                                           13511 * t registering partitions: " "coordinator is not available"); } while\
                                           13512 *  (0);
00008D42                                   13513 @L1150   DS    0H
00008D42 9180 2322      00000322 00000080  13514          TM    802(2),128
00008D46 4780 C62A               00009152  13515          BZ    @ret_lab_2006
00008D4A 41F0 2210               00000210  13516          LA    15,528(0,2)
00008D4E E3F0 D3C8 0024          000003C8  13517          STG   15,968(0,13)
00008D54 E320 D3D0 0024          000003D0  13518          STG   2,976(0,13)
00008D5A D707 D3D8 D3D8 000003D8 000003D8  13519          XC    984(8,13),984(13)
00008D60 E548 D3E0 0007          000003E0  13520          MVGHI 992(13),7
00008D66 C0FF 0000 8000                    13521          LLILF 15,X'00008000' ; 32768
00008D6C E3F0 D3E8 0024          000003E8  13522          STG   15,1000(0,13)
00008D72 E3F0 C158 0004          00008C80  13523          LG    15,@lit_2006_620
00008D78 4110 F44E               0000044E  13524          LA    1,1102(0,15)
                                                                                                                           Page  273 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008D7C E310 D3F0 0024          000003F0  13525          STG   1,1008(0,13)
00008D82 41F0 F7E2               000007E2  13526          LA    15,2018(0,15)
00008D86 E3F0 D3F8 0024          000003F8  13527          STG   15,1016(0,13)
00008D8C 4110 D3C8               000003C8  13528          LA    1,968(0,13)
00008D90 E3F0 C150 0004          00008C78  13529          LG    15,@lit_2006_621 ; rd_kafka_log0
00008D96                                   13530 @@gen_label870 DS    0H
00008D96 05EF                              13531          BALR  14,15
00008D98                                   13532 @@gen_label871 DS    0H
00008D98                                   13533 @L1153   DS    0H
                                           13534 * ***
                                           13535 * ***
                                           13536 * ***                   return;
00008D98 47F0 C62A               00009152  13537          B     @ret_lab_2006
                                           13538 * ***           }
00008D9C                                   13539 @L1149   DS    0H
                                           13540 * ***
                                           13541 * ***           mtx_lock(&rk->rk_eos.txn_pending_lock);
00008D9C 41F0 2E50               00000E50  13542          LA    15,3664(0,2)
00008DA0 E3F0 D3C8 0024          000003C8  13543          STG   15,968(0,13)
00008DA6 4110 D3C8               000003C8  13544          LA    1,968(0,13)
00008DAA E3F0 C178 0004          00008CA0  13545          LG    15,@lit_2006_629 ; mtx_lock
00008DB0                                   13546 @@gen_label872 DS    0H
00008DB0 05EF                              13547          BALR  14,15
00008DB2                                   13548 @@gen_label873 DS    0H
                                           13549 * ***           if ((((&rk->rk_eos.txn_pending_rktps)->tqh_first) == (\
                                           13550 * ((void *)0)))) {
00008DB2 E3F0 2E78 0002          00000E78  13551          LTG   15,3704(0,2) ; offset of txn_pending_rktps in 0000146
00008DB8 4770 C2AE               00008DD6  13552          BNE   @L1154
                                           13553 * ***
                                           13554 * ***                   mtx_unlock(&rk->rk_eos.txn_pending_lock);
00008DBC 41F0 2E50               00000E50  13555          LA    15,3664(0,2)
00008DC0 E3F0 D3C8 0024          000003C8  13556          STG   15,968(0,13)
00008DC6 4110 D3C8               000003C8  13557          LA    1,968(0,13)
00008DCA E3F0 C180 0004          00008CA8  13558          LG    15,@lit_2006_630 ; mtx_unlock
00008DD0                                   13559 @@gen_label875 DS    0H
00008DD0 05EF                              13560          BALR  14,15
00008DD2                                   13561 @@gen_label876 DS    0H
                                           13562 * ***                   return;
00008DD2 47F0 C62A               00009152  13563          B     @ret_lab_2006
                                           13564 * ***           }
00008DD6                                   13565 @L1154   DS    0H
                                           13566 * ***
                                           13567 * ***           if (!(((&rk->rk_eos.txn_waitresp_rktps)->tqh_first) ==\
                                           13568 *  (((void *)0)))) {
00008DD6 E3F0 2E88 0002          00000E88  13569          LTG   15,3720(0,2) ; offset of txn_waitresp_rktps in 0000146
00008DDC 4780 C328               00008E50  13570          BE    @L1155
                                           13571 * ***
                                           13572 * ***                   mtx_unlock(&rk->rk_eos.txn_pending_lock);
00008DE0 41F0 2E50               00000E50  13573          LA    15,3664(0,2)
00008DE4 E3F0 D3C8 0024          000003C8  13574          STG   15,968(0,13)
00008DEA 4110 D3C8               000003C8  13575          LA    1,968(0,13)
00008DEE E3F0 C180 0004          00008CA8  13576          LG    15,@lit_2006_630 ; mtx_unlock
                                                                                                                           Page  274 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008DF4                                   13577 @@gen_label878 DS    0H
00008DF4 05EF                              13578          BALR  14,15
00008DF6                                   13579 @@gen_label879 DS    0H
                                           13580 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           13581 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDPARTS","No\
                                           13582 * t registering partitions: waiting for " "previous AddPartitionsToTxn\
                                           13583 *  request to complete"); } while (0);
00008DF6                                   13584 @L1156   DS    0H
00008DF6 9180 2322      00000322 00000080  13585          TM    802(2),128
00008DFA 4780 C62A               00009152  13586          BZ    @ret_lab_2006
00008DFE 41F0 2210               00000210  13587          LA    15,528(0,2)
00008E02 E3F0 D3C8 0024          000003C8  13588          STG   15,968(0,13)
00008E08 E320 D3D0 0024          000003D0  13589          STG   2,976(0,13)
00008E0E D707 D3D8 D3D8 000003D8 000003D8  13590          XC    984(8,13),984(13)
00008E14 E548 D3E0 0007          000003E0  13591          MVGHI 992(13),7
00008E1A C0FF 0000 8000                    13592          LLILF 15,X'00008000' ; 32768
00008E20 E3F0 D3E8 0024          000003E8  13593          STG   15,1000(0,13)
00008E26 E3F0 C158 0004          00008C80  13594          LG    15,@lit_2006_620
00008E2C 4110 F44E               0000044E  13595          LA    1,1102(0,15)
00008E30 E310 D3F0 0024          000003F0  13596          STG   1,1008(0,13)
00008E36 41F0 F81C               0000081C  13597          LA    15,2076(0,15)
00008E3A E3F0 D3F8 0024          000003F8  13598          STG   15,1016(0,13)
00008E40 4110 D3C8               000003C8  13599          LA    1,968(0,13)
00008E44 E3F0 C150 0004          00008C78  13600          LG    15,@lit_2006_621 ; rd_kafka_log0
00008E4A                                   13601 @@gen_label881 DS    0H
00008E4A 05EF                              13602          BALR  14,15
00008E4C                                   13603 @@gen_label882 DS    0H
00008E4C                                   13604 @L1159   DS    0H
                                           13605 * ***
                                           13606 * ***
                                           13607 * ***                   return;
00008E4C 47F0 C62A               00009152  13608          B     @ret_lab_2006
                                           13609 * ***           }
00008E50                                   13610 @L1155   DS    0H
                                           13611 * ***
                                           13612 * ***
                                           13613 * ***           if (((!((pid).id != -1)))) {
00008E50 E558 D0B8 FFFF          000000B8  13614          CGHSI 184(13),-1
00008E56 4770 C3BA               00008EE2  13615          BNE   @L1160
                                           13616 * ***                   mtx_unlock(&rk->rk_eos.txn_pending_lock);
00008E5A 41F0 2E50               00000E50  13617          LA    15,3664(0,2)
00008E5E E3F0 D3C8 0024          000003C8  13618          STG   15,968(0,13)
00008E64 4110 D3C8               000003C8  13619          LA    1,968(0,13)
00008E68 E3F0 C180 0004          00008CA8  13620          LG    15,@lit_2006_630 ; mtx_unlock
00008E6E                                   13621 @@gen_label884 DS    0H
00008E6E 05EF                              13622          BALR  14,15
00008E70                                   13623 @@gen_label885 DS    0H
                                           13624 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           13625 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDPARTS","No\
                                           13626 * t registering partitions: " "No PID available (idempotence state %s)\
                                           13627 * ", rd_kafka_idemp_state2str(rk->rk_eos.idemp_state)); } while (0);
00008E70                                   13628 @L1161   DS    0H
                                                                                                                           Page  275 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008E70 9180 2322      00000322 00000080  13629          TM    802(2),128
00008E74 4780 C3B6               00008EDE  13630          BZ    @L1164
00008E78 E3F0 2C70 0014          00000C70  13631          LGF   15,3184(0,2)
00008E7E E3F0 D3C8 0024          000003C8  13632          STG   15,968(0,13)
00008E84 4110 D3C8               000003C8  13633          LA    1,968(0,13)
00008E88 E3F0 C188 0004          00008CB0  13634          LG    15,@lit_2006_636 ; rd_kafka_idemp_state2str
00008E8E                                   13635 @@gen_label887 DS    0H
00008E8E 05EF                              13636          BALR  14,15
00008E90                                   13637 @@gen_label888 DS    0H
00008E90 4110 2210               00000210  13638          LA    1,528(0,2)
00008E94 EB12 D3C8 0024          000003C8  13639          STMG  1,2,968(13)
00008E9A D707 D3D8 D3D8 000003D8 000003D8  13640          XC    984(8,13),984(13)
00008EA0 E548 D3E0 0007          000003E0  13641          MVGHI 992(13),7
00008EA6 C01F 0000 8000                    13642          LLILF 1,X'00008000' ; 32768
00008EAC E310 D3E8 0024          000003E8  13643          STG   1,1000(0,13)
00008EB2 E310 C158 0004          00008C80  13644          LG    1,@lit_2006_620
00008EB8 4120 144E               0000044E  13645          LA    2,1102(0,1)
00008EBC E320 D3F0 0024          000003F0  13646          STG   2,1008(0,13)
00008EC2 4110 1874               00000874  13647          LA    1,2164(0,1)
00008EC6 E310 D3F8 0024          000003F8  13648          STG   1,1016(0,13)
00008ECC E3F0 D400 0024          00000400  13649          STG   15,1024(0,13)
00008ED2 4110 D3C8               000003C8  13650          LA    1,968(0,13)
00008ED6 E3F0 C150 0004          00008C78  13651          LG    15,@lit_2006_621 ; rd_kafka_log0
00008EDC                                   13652 @@gen_label889 DS    0H
00008EDC 05EF                              13653          BALR  14,15
00008EDE                                   13654 @@gen_label890 DS    0H
00008EDE                                   13655 @L1164   DS    0H
                                           13656 * ***
                                           13657 * ***
                                           13658 * ***
                                           13659 * ***                   do {} while (0);
00008EDE                                   13660 @L1165   DS    0H
                                           13661 * ***                   return;
00008EDE 47F0 C62A               00009152  13662          B     @ret_lab_2006
                                           13663 * ***           }
00008EE2                                   13664 @L1160   DS    0H
                                           13665 * ***
                                           13666 * ***
                                           13667 * ***
                                           13668 * ***           err = rd_kafka_AddPartitionsToTxnRequest(
                                           13669 * ***                   rk->rk_eos.txn_coord,
                                           13670 * ***                   rk->rk_conf.eos.transactional_id,
                                           13671 * ***                   pid,
                                           13672 * ***                   &rk->rk_eos.txn_pending_rktps,
                                           13673 * ***                   errstr, sizeof(errstr),
                                           13674 * ***                   rd_kafka_replyq_make(rk->rk_ops,0,__FUNCTION__\
                                           13675 * ),
                                           13676 * ***                   rd_kafka_txn_handle_AddPartitionsToTxn, ((void\
                                           13677 *  *)0));
00008EE2 41F0 D2C8               000002C8  13678          LA    15,712(0,13)
00008EE6 E3F0 D3C8 0024          000003C8  13679          STG   15,968(0,13)
00008EEC E3F0 2008 0004          00000008  13680          LG    15,8(0,2)
                                                                                                                           Page  276 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008EF2 E3F0 D3D0 0024          000003D0  13681          STG   15,976(0,13)
00008EF8 D707 D3D8 D3D8 000003D8 000003D8  13682          XC    984(8,13),984(13)
00008EFE E3F0 C198 0004          00008CC0  13683          LG    15,@lit_2006_640
00008F04 41F0 F24C               0000024C  13684          LA    15,588(0,15)
00008F08 E3F0 D3E0 0024          000003E0  13685          STG   15,992(0,13)
00008F0E 4110 D3C8               000003C8  13686          LA    1,968(0,13)
00008F12 E3F0 C190 0004          00008CB8  13687          LG    15,@lit_2006_641 ; rd_kafka_replyq_make
00008F18                                   13688 @@gen_label891 DS    0H
00008F18 05EF                              13689          BALR  14,15
00008F1A                                   13690 @@gen_label892 DS    0H
00008F1A E3F0 2D48 0004          00000D48  13691          LG    15,3400(0,2)
00008F20 E3F0 D3C8 0024          000003C8  13692          STG   15,968(0,13)
00008F26 E3F0 27E8 0004          000007E8  13693          LG    15,2024(0,2)
00008F2C E3F0 D3D0 0024          000003D0  13694          STG   15,976(0,13)
00008F32 D20F D3D8 D0B8 000003D8 000000B8  13695          MVC   984(16,13),184(13)
00008F38 41F0 2E78               00000E78  13696          LA    15,3704(0,2)
00008F3C E3F0 D3E8 0024          000003E8  13697          STG   15,1000(0,13)
00008F42 41F0 D0C8               000000C8  13698          LA    15,200(0,13)
00008F46 E3F0 D3F0 0024          000003F0  13699          STG   15,1008(0,13)
00008F4C E548 D3F8 0200          000003F8  13700          MVGHI 1016(13),512
00008F52 D20F D400 D2C8 00000400 000002C8  13701          MVC   1024(16,13),712(13)
00008F58 E3F0 C1A8 0004          00008CD0  13702          LG    15,@lit_2006_642 ; rd_kafka_txn_handle_AddPartitionsToTx*
                                                                n
00008F5E E3F0 D410 0024          00000410  13703          STG   15,1040(0,13)
00008F64 D707 D418 D418 00000418 00000418  13704          XC    1048(8,13),1048(13)
00008F6A 4110 D3C8               000003C8  13705          LA    1,968(0,13)
00008F6E E3F0 C1A0 0004          00008CC8  13706          LG    15,@lit_2006_643 ; rd_kafka_AddPartitionsToTxnRequest
00008F74                                   13707 @@gen_label893 DS    0H
00008F74 05EF                              13708          BALR  14,15
00008F76                                   13709 @@gen_label894 DS    0H
                                           13710 * ***           if (err) {
00008F76 12FF                              13711          LTR   15,15
00008F78 4780 C4CE               00008FF6  13712          BZ    @L1173
                                           13713 * ***                   mtx_unlock(&rk->rk_eos.txn_pending_lock);
00008F7C 41F0 2E50               00000E50  13714          LA    15,3664(0,2)
00008F80 E3F0 D3C8 0024          000003C8  13715          STG   15,968(0,13)
00008F86 4110 D3C8               000003C8  13716          LA    1,968(0,13)
00008F8A E3F0 C180 0004          00008CA8  13717          LG    15,@lit_2006_630 ; mtx_unlock
00008F90                                   13718 @@gen_label896 DS    0H
00008F90 05EF                              13719          BALR  14,15
00008F92                                   13720 @@gen_label897 DS    0H
                                           13721 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           13722 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDPARTS","No\
                                           13723 * t registering partitions: %s", errstr); } while (0);
00008F92                                   13724 @L1169   DS    0H
00008F92 9180 2322      00000322 00000080  13725          TM    802(2),128
00008F96 4780 C62A               00009152  13726          BZ    @ret_lab_2006
00008F9A 41F0 2210               00000210  13727          LA    15,528(0,2)
00008F9E E3F0 D3C8 0024          000003C8  13728          STG   15,968(0,13)
00008FA4 E320 D3D0 0024          000003D0  13729          STG   2,976(0,13)
00008FAA D707 D3D8 D3D8 000003D8 000003D8  13730          XC    984(8,13),984(13)
00008FB0 E548 D3E0 0007          000003E0  13731          MVGHI 992(13),7
                                                                                                                           Page  277 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008FB6 C0FF 0000 8000                    13732          LLILF 15,X'00008000' ; 32768
00008FBC E3F0 D3E8 0024          000003E8  13733          STG   15,1000(0,13)
00008FC2 E3F0 C158 0004          00008C80  13734          LG    15,@lit_2006_620
00008FC8 4110 F44E               0000044E  13735          LA    1,1102(0,15)
00008FCC E310 D3F0 0024          000003F0  13736          STG   1,1008(0,13)
00008FD2 41F0 F7C2               000007C2  13737          LA    15,1986(0,15)
00008FD6 E3F0 D3F8 0024          000003F8  13738          STG   15,1016(0,13)
00008FDC 41F0 D0C8               000000C8  13739          LA    15,200(0,13)
00008FE0 E3F0 D400 0024          00000400  13740          STG   15,1024(0,13)
00008FE6 4110 D3C8               000003C8  13741          LA    1,968(0,13)
00008FEA E3F0 C150 0004          00008C78  13742          LG    15,@lit_2006_621 ; rd_kafka_log0
00008FF0                                   13743 @@gen_label899 DS    0H
00008FF0 05EF                              13744          BALR  14,15
00008FF2                                   13745 @@gen_label900 DS    0H
00008FF2                                   13746 @L1172   DS    0H
                                           13747 * ***
                                           13748 * ***                   return;
00008FF2 47F0 C62A               00009152  13749          B     @ret_lab_2006
                                           13750 * ***           }
                                           13751 * ***
                                           13752 * ***
                                           13753 * ***
                                           13754 * ***           do { if (!(((&rk->rk_eos.txn_pending_rktps)->tqh_first\
                                           13755 * ) == (((void *)0)))) { *(&rk->rk_eos.txn_waitresp_rktps)->tqh_last =\
                                           13756 *  (&rk->rk_eos.txn_pending_rktps)->tqh_first; (&rk->rk_eos.txn_pendin\
                                           13757 * g_rktps)->tqh_first->rktp_txnlink .tqe_prev = (&rk->rk_eos.txn_waitr\
                                           13758 * esp_rktps)->tqh_last; (&rk->rk_eos.txn_waitresp_rktps)->tqh_last = (\
                                           13759 * &rk->rk_eos.txn_pending_rktps)->tqh_last; do { ((&rk->rk_eos.txn_pen\
                                           13760 * ding_rktps))->tqh_first = (((void *)0)); ((&rk->rk_eos.txn_pending_r\
                                           13761 * ktps))->tqh_last = &((&rk->rk_eos.txn_pending_rktps))->tqh_first; } \
                                           13762 * while ( 0); } } while ( 0);
00008FF6                                   13763 @L1173   DS    0H
00008FF6 E3F0 2E78 0002          00000E78  13764          LTG   15,3704(0,2) ; offset of txn_pending_rktps in 0000146
00008FFC 4780 C51C               00009044  13765          BE    @L1176
00009000 E3F0 2E90 0004          00000E90  13766          LG    15,3728(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00009006 E310 2E78 0004          00000E78  13767          LG    1,3704(0,2) ; offset of txn_pending_rktps in 0000146
0000900C E310 F000 0024          00000000  13768          STG   1,0(0,15)
00009012 E3F0 2E78 0004          00000E78  13769          LG    15,3704(0,2) ; offset of txn_pending_rktps in 0000146
00009018 E310 2E90 0004          00000E90  13770          LG    1,3728(0,2) ; offset of tqh_last in rd_kafka_toppar_tqhe*
                                                                ad_s
0000901E E310 F058 0024          00000058  13771          STG   1,88(0,15)  ; offset of tqe_prev in 0000134
00009024 E3F0 2E80 0004          00000E80  13772          LG    15,3712(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
0000902A E3F0 2E90 0024          00000E90  13773          STG   15,3728(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
00009030                                   13774 @L1177   DS    0H
00009030 A7F9 0000               00000000  13775          LGHI  15,0        ; 0
00009034 E3F0 2E78 0024          00000E78  13776          STG   15,3704(0,2) ; offset of txn_pending_rktps in 0000146
0000903A 41F0 2E78               00000E78  13777          LA    15,3704(0,2)
0000903E E3F0 2E80 0024          00000E80  13778          STG   15,3712(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
                                                                                                                           Page  278 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009044                                   13779 @L1176   DS    0H
                                           13780 * ***
                                           13781 * ***
                                           13782 * ***
                                           13783 * ***           mtx_unlock(&rk->rk_eos.txn_pending_lock);
00009044 41F0 2E50               00000E50  13784          LA    15,3664(0,2)
00009048 E3F0 D3C8 0024          000003C8  13785          STG   15,968(0,13)
0000904E 4110 D3C8               000003C8  13786          LA    1,968(0,13)
00009052 E3F0 C180 0004          00008CA8  13787          LG    15,@lit_2006_630 ; mtx_unlock
00009058                                   13788 @@gen_label902 DS    0H
00009058 05EF                              13789          BALR  14,15
0000905A                                   13790 @@gen_label903 DS    0H
                                           13791 * ***
                                           13792 * ***           rk->rk_eos.txn_req_cnt++;
0000905A 58F0 2E10               00000E10  13793          L     15,3600(0,2)
0000905E A7FA 0001               00000001  13794          AHI   15,1
00009062 50F0 2E10               00000E10  13795          ST    15,3600(0,2)
                                           13796 * ***
                                           13797 * ***           do { if ((((rk->rk_eos.txn_coord)->rkb_rk->rk_conf.deb\
                                           13798 * ug & (0x8000)))) { do { char _logname[256]; mtx_lock(&(rk->rk_eos.tx\
                                           13799 * n_coord)->rkb_logname_lock); rd_strlcpy(_logname, rk->rk_eos.txn_coo\
                                           13800 * rd->rkb_logname, sizeof(_logname)); mtx_unlock(&(rk->rk_eos.txn_coor\
                                           13801 * d)->rkb_logname_lock); rd_kafka_log0(&(rk->rk_eos.txn_coord)->rkb_rk\
                                           13802 * ->rk_conf, (rk->rk_eos.txn_coord)->rkb_rk, _logname, 7, (0x8000), "A\
                                           13803 * DDPARTS", "Registering partitions with transaction"); } while (0); }\
                                           13804 *  } while (0);
00009066                                   13805 @L1180   DS    0H
00009066 E3F0 2D48 0004          00000D48  13806          LG    15,3400(0,2) ; offset of txn_coord in 0000146
0000906C E3F0 FFD0 0004          00000FD0  13807          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00009072 9180 F322      00000322 00000080  13808          TM    802(15),128
00009076 4780 C62A               00009152  13809          BZ    @L1183
0000907A                                   13810 @L1184   DS    0H
0000907A E3F0 2D48 0004          00000D48  13811          LG    15,3400(0,2) ; offset of txn_coord in 0000146
00009080 A739 1638               00001638  13812          LGHI  3,5688      ; 5688
00009084 41F3 F000               00000000  13813          LA    15,0(3,15)
00009088 E3F0 D3C8 0024          000003C8  13814          STG   15,968(0,13)
0000908E 4110 D3C8               000003C8  13815          LA    1,968(0,13)
00009092 E3F0 C178 0004          00008CA0  13816          LG    15,@lit_2006_629 ; mtx_lock
00009098                                   13817 @@gen_label905 DS    0H
00009098 05EF                              13818          BALR  14,15
0000909A                                   13819 @@gen_label906 DS    0H
0000909A 41F0 D2C8               000002C8  13820          LA    15,712(0,13)
0000909E E3F0 D3C8 0024          000003C8  13821          STG   15,968(0,13)
000090A4 E3F0 2D48 0004          00000D48  13822          LG    15,3400(0,2) ; offset of txn_coord in 0000146
000090AA A719 1630               00001630  13823          LGHI  1,5680      ; 5680
000090AE E3F1 F000 0004          00000000  13824          LG    15,0(1,15)
000090B4 E3F0 D3D0 0024          000003D0  13825          STG   15,976(0,13)
000090BA E548 D3D8 0100          000003D8  13826          MVGHI 984(13),256
000090C0 4110 D3C8               000003C8  13827          LA    1,968(0,13)
000090C4 E3F0 C1B0 0004          00008CD8  13828          LG    15,@lit_2006_653 ; rd_strlcpy
000090CA                                   13829 @@gen_label907 DS    0H
000090CA 05EF                              13830          BALR  14,15
                                                                                                                           Page  279 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000090CC                                   13831 @@gen_label908 DS    0H
000090CC E3F0 2D48 0004          00000D48  13832          LG    15,3400(0,2) ; offset of txn_coord in 0000146
000090D2 41F3 F000               00000000  13833          LA    15,0(3,15)
000090D6 E3F0 D3C8 0024          000003C8  13834          STG   15,968(0,13)
000090DC 4110 D3C8               000003C8  13835          LA    1,968(0,13)
000090E0 E3F0 C180 0004          00008CA8  13836          LG    15,@lit_2006_630 ; mtx_unlock
000090E6                                   13837 @@gen_label909 DS    0H
000090E6 05EF                              13838          BALR  14,15
000090E8                                   13839 @@gen_label910 DS    0H
000090E8 E3F0 2D48 0004          00000D48  13840          LG    15,3400(0,2) ; offset of txn_coord in 0000146
000090EE E3F0 FFD0 0004          00000FD0  13841          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000090F4 41F0 F210               00000210  13842          LA    15,528(0,15)
000090F8 E3F0 D3C8 0024          000003C8  13843          STG   15,968(0,13)
000090FE E3F0 2D48 0004          00000D48  13844          LG    15,3400(0,2) ; offset of txn_coord in 0000146
00009104 E3F0 FFD0 0004          00000FD0  13845          LG    15,4048(0,15)
0000910A E3F0 D3D0 0024          000003D0  13846          STG   15,976(0,13)
00009110 41F0 D2C8               000002C8  13847          LA    15,712(0,13)
00009114 E3F0 D3D8 0024          000003D8  13848          STG   15,984(0,13)
0000911A E548 D3E0 0007          000003E0  13849          MVGHI 992(13),7
00009120 C0FF 0000 8000                    13850          LLILF 15,X'00008000' ; 32768
00009126 E3F0 D3E8 0024          000003E8  13851          STG   15,1000(0,13)
0000912C E3F0 C158 0004          00008C80  13852          LG    15,@lit_2006_620
00009132 4110 F44E               0000044E  13853          LA    1,1102(0,15)
00009136 E310 D3F0 0024          000003F0  13854          STG   1,1008(0,13)
0000913C 41F0 F8B8               000008B8  13855          LA    15,2232(0,15)
00009140 E3F0 D3F8 0024          000003F8  13856          STG   15,1016(0,13)
00009146 4110 D3C8               000003C8  13857          LA    1,968(0,13)
0000914A E3F0 C150 0004          00008C78  13858          LG    15,@lit_2006_621 ; rd_kafka_log0
00009150                                   13859 @@gen_label911 DS    0H
00009150 05EF                              13860          BALR  14,15
00009152                                   13861 @@gen_label912 DS    0H
00009152                                   13862 @L1183   DS    0H
                                           13863 * ***
                                           13864 * ***   }
00009152                                   13865 @ret_lab_2006 DS 0H
                                           13866 * * **** Start of Epilogue
                                           13867          DCCEPIL
00009152                                   13868+         ds 0h                                                          01-DCCEP
                                           13869+* Epilog
00009152 D707 D088 D088 00000088 00000088  13870+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009158 E3D0 D080 0004          00000080  13871+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000915E E3C0 D090 0004          00000090  13872+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009164 E3B0 C018 0004          00000018  13873+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000916A E3C0 B010 0021          00000010  13874+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009170 E3E0 D008 0004          00000008  13875+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009176 EB1C D020 0004          00000020  13876+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000917C 078E                              13877+         bcr 8,14                if same dsab, just return              01-DCCEP
0000917E E3F0 D010 0024          00000010  13878+         stg 15,16(0,13)         save return code                       01-DCCEP
00009184 E300 D018 0024          00000018  13879+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000918A E3F0 D090 0004          00000090  13880+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009190 E3F0 F018 0004          00000018  13881+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009196 47F0 F040               00000040  13882+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  280 
  Active Usings: @REGION_2006_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           13883+* End of Epilog
                                           13884 * * **** End of Epilogue
                                           13885          DROP  12
                                           13886 *
                                           13887 *   DSECT for automatic variables in "rd_kafka_txn_register_partitions"
                                           13888 *      (FUNCTION #2006)
                                           13889 *
00000000                00000000 000003BC  13890 @AUTO#rd_kafka_txn_register_partitions DSECT
00000000                                   13891          DS    XL168
000000A8                                   13892 rd_kafka_txn_register_partitions#__cl0#0 DS 12XL1 ; __cl0
000000B4                000000B4 000000A8  13893          ORG   @AUTO#rd_kafka_txn_register_partitions+168
000000A8                                   13894 rd_kafka_txn_register_partitions#err#0 DS 1F ; err
000000AC                                   13895 rd_kafka_txn_register_partitions#pid#0 DS 16XL1 ; pid
000000BC                                   13896 rd_kafka_txn_register_partitions#errstr#0 DS 512XL1 ; errstr
000002BC                                   13897 rd_kafka_txn_register_partitions#_logname#18 DS 256XL1 ; _logname
                                           13898 *
0000919A                00000000 00014658  13899 @CODE    CSECT
                                           13900 *
                                           13901 *
                                           13902 *
                                           13903 * ....... start of rd_kafka_txn_register_partitions_tmr_cb
0000919A                                   13904 @LNAME2007 DS  0H
0000919A 00000027                          13905          DC    X'00000027'
0000919E 99846D9281869281                  13906          DC    C'rd_kafka_txn_register_partitions'
000091BE 6DA394996D8382                    13907          DC    C'_tmr_cb'
000091C5 00                                13908          DC    X'00'
                                           13909 rd_kafka_txn_register_partitions_tmr_cb DCCPRLG CINDEX=2007,BASER=12,FR*
                                                                AME=184,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2007
                                           13910          macro
                                           13911          dccextrn &m
                                           13912          gblc    &$dccext(1000)
                                           13913          gbla    &$dccexti
                                           13914          lcla    &i
                                           13915 &$dccext(&$dccexti+1) setc    '&m'
                                           13916 &i       seta    1
                                           13917 .loop    aif    (&i gt &$dccexti).around
                                           13918          aif    ('&$dccext(&i)' eq '&m').getout
                                           13919 &i       seta    &i+1
                                           13920          ago     .loop
                                           13921 .around  anop
                                           13922 &$dccexti seta &$dccexti+1
                                           13923          extrn  &m
                                           13924 .getout  anop
                                           13925          mend
000091C8                                   13926+$eye0213    ds    0d                                                    02-DCCCA
000091C8 C4C3C3                            13927+         dc cl3'DCC'                                                    02-DCCCA
000091CB 01                                13928+         dc xl1'01' format one                                          02-DCCCA
000091CC 00000000                          13929+         dc a(0)                                                        02-DCCCA
000091D0 000000000000923A                  13930+         dc ad(@PER_2007)                                               02-DCCCA
000091D8 00000000000000B8                  13931+         dc ad(184)                                                     02-DCCCA
000091E0 0000000000000000                  13932+         dc ad(0)                                                       02-DCCCA
000091E8 0000000000001000                  13933+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page  281 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000091F0 20                                13934+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000091F1 03                                13935+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000091F2 03                                13936+         dc al1(3)                                                      02-DCCCA
000091F3 08                                13937+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000091F4 00                                13938+         dc bl.8'00000000'                                              02-DCCCA
000091F5 000000                            13939+         dc al3(0)                                                      02-DCCCA
000091F8 000000000000919A                  13940+         dc ad(@LNAME2007)                                              02-DCCCA
00009200                                   13941+         ds 0d                                                          02-DCCCA
00009200 00000000000091C8                  13942+         dc ad($eye0213)                                                02-DCCCA
00009208 0000000000000000                  13943+         dc ad(0)                                                       02-DCCCA
00009210                                   13944+         ds    0d                                                       01-DCCPR
00009210                                   13945+rd_kafka_txn_register_partitions_tmr_cb ds 0d                           01-DCCPR
00009210                                   13946+@REGION_2007_1 ds 0h                                                    01-DCCPR
00009210 EBEC D008 0024          00000008  13947+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009216 E3E0 D088 0004          00000088  13948+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000921C E3C0 D090 0004          00000090  13949+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009222 B904 002E                         13950+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009226 E3B0 C018 0004          00000018  13951+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000922C A7EB 00B8               000000B8  13952+         aghi  14,184              increase by frame size               01-DCCPR
00009230 E3E0 C020 0021          00000020  13953+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009236 4720 B020               00000020  13954+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000923A                                   13955+@PER_2007 ds   0h                                                       01-DCCPR
0000923A EBDE 2080 0024          00000080  13956+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009240 E3C0 2090 0024          00000090  13957+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009246 B904 00D2                         13958+         lgr   13,2                set real frame pointer               01-DCCPR
0000924A B904 00CF                         13959+         lgr   12,15               set base reg                         01-DCCPR
                        00009210           13960+         using @REGION_2007_1,12                                        01-DCCPR
                                           13961 * ******* End of Prologue
                                           13962 * *
                                           13963 * ***           rd_kafka_t *rk = arg;
0000924E E3F0 1008 0004          00000008  13964          LG    15,8(0,1)   ; arg
                                           13965 * ***           rd_kafka_txn_register_partitions(rk);
00009254 E3F0 D0B0 0024          000000B0  13966          STG   15,176(0,13)
0000925A 4110 D0B0               000000B0  13967          LA    1,176(0,13)
0000925E E3F0 C0A8 0004          000092B8  13968          LG    15,@lit_2007_660 ; rd_kafka_txn_register_partitions
00009264                                   13969 @@gen_label913 DS    0H
00009264 05EF                              13970          BALR  14,15
00009266                                   13971 @@gen_label914 DS    0H
                                           13972 * ***   }
00009266                                   13973 @ret_lab_2007 DS 0H
                                           13974 * * **** Start of Epilogue
                                           13975          DCCEPIL
00009266                                   13976+         ds 0h                                                          01-DCCEP
                                           13977+* Epilog
00009266 D707 D088 D088 00000088 00000088  13978+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000926C E3D0 D080 0004          00000080  13979+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009272 E3C0 D090 0004          00000090  13980+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009278 E3B0 C018 0004          00000018  13981+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000927E E3C0 B010 0021          00000010  13982+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009284 E3E0 D008 0004          00000008  13983+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000928A EB1C D020 0004          00000020  13984+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009290 078E                              13985+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page  282 
  Active Usings: @REGION_2007_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009292 E3F0 D010 0024          00000010  13986+         stg 15,16(0,13)         save return code                       01-DCCEP
00009298 E300 D018 0024          00000018  13987+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000929E E3F0 D090 0004          00000090  13988+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000092A4 E3F0 F018 0004          00000018  13989+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000092AA 47F0 F040               00000040  13990+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           13991+* End of Epilog
                                           13992 * * **** End of Epilogue
000092B0                                   13993          DS    0D
000092B0 000000B8                          13994 @FRAMESIZE_2007 DC F'184'
000092B4 00000000
000092B8 0000000000008B28                  13995 @lit_2007_660 DC AD(rd_kafka_txn_register_partitions)
                                           13996          DROP  12
                                           13997 *
                                           13998 *   DSECT for automatic variables in "rd_kafka_txn_register_partitions
                                           13999 *           _tmr_cb"
                                           14000 *      (FUNCTION #2007)
                                           14001 *
00000000                00000000 000000A8  14002 @AUTO#rd_kafka_txn_register_partitions_tmr_cb DSECT
00000000                                   14003          DS    XL168
                                           14004 *
000092C0                00000000 00014658  14005 @CODE    CSECT
                                           14006 *
                                           14007 *
                                           14008 *
                                           14009 * ....... start of rd_kafka_txn_schedule_register_partitions
                                           14010 rd_kafka_txn_schedule_register_partitions ALIAS X'99846D92818692816DA3A*
                                                                7956DA283888584A493856D99858789A2A385996D978199A389A3899*
                                                                695A2'
000092C0                                   14011 @LNAME1920 DS  0H
000092C0 00000029                          14012          DC    X'00000029'
000092C4 99846D9281869281                  14013          DC    C'rd_kafka_txn_schedule_register_p'
000092E4 8199A389A3899695                  14014          DC    C'artitions'
000092ED 00                                14015          DC    X'00'
                                           14016 rd_kafka_txn_schedule_register_partitions DCCPRLG CINDEX=1920,BASER=12,*
                                                                FRAME=224,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1920
                                           14017          macro
                                           14018          dccextrn &m
                                           14019          gblc    &$dccext(1000)
                                           14020          gbla    &$dccexti
                                           14021          lcla    &i
                                           14022 &$dccext(&$dccexti+1) setc    '&m'
                                           14023 &i       seta    1
                                           14024 .loop    aif    (&i gt &$dccexti).around
                                           14025          aif    ('&$dccext(&i)' eq '&m').getout
                                           14026 &i       seta    &i+1
                                           14027          ago     .loop
                                           14028 .around  anop
                                           14029 &$dccexti seta &$dccexti+1
                                           14030          extrn  &m
                                           14031 .getout  anop
                                           14032          mend
000092F0                                   14033+$eye0216    ds    0d                                                    02-DCCCA
                                                                                                                           Page  283 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000092F0 C4C3C3                            14034+         dc cl3'DCC'                                                    02-DCCCA
000092F3 01                                14035+         dc xl1'01' format one                                          02-DCCCA
000092F4 00000000                          14036+         dc a(0)                                                        02-DCCCA
000092F8 0000000000009362                  14037+         dc ad(@PER_1920)                                               02-DCCCA
00009300 00000000000000E0                  14038+         dc ad(224)                                                     02-DCCCA
00009308 0000000000000000                  14039+         dc ad(0)                                                       02-DCCCA
00009310 0000000000001000                  14040+         dc ad(4096)                                                    02-DCCCA
00009318 20                                14041+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009319 03                                14042+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000931A 03                                14043+         dc al1(3)                                                      02-DCCCA
0000931B 08                                14044+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000931C 00                                14045+         dc bl.8'00000000'                                              02-DCCCA
0000931D 000000                            14046+         dc al3(0)                                                      02-DCCCA
00009320 00000000000092C0                  14047+         dc ad(@LNAME1920)                                              02-DCCCA
00009328                                   14048+         ds 0d                                                          02-DCCCA
00009328 00000000000092F0                  14049+         dc ad($eye0216)                                                02-DCCCA
00009330 0000000000000000                  14050+         dc ad(0)                                                       02-DCCCA
00009338                                   14051+         ds    0d                                                       01-DCCPR
                                           14052+         entry rd_kafka_txn_schedule_register_partitions                01-DCCPR
00009338                                   14053+rd_kafka_txn_schedule_register_partitions ds 0d                         01-DCCPR
00009338                                   14054+@REGION_1920_1 ds 0h                                                    01-DCCPR
00009338 EBEC D008 0024          00000008  14055+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000933E E3E0 D088 0004          00000088  14056+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009344 E3C0 D090 0004          00000090  14057+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000934A B904 002E                         14058+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000934E E3B0 C018 0004          00000018  14059+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009354 A7EB 00E0               000000E0  14060+         aghi  14,224              increase by frame size               01-DCCPR
00009358 E3E0 C020 0021          00000020  14061+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000935E 4720 B020               00000020  14062+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009362                                   14063+@PER_1920 ds   0h                                                       01-DCCPR
00009362 EBDE 2080 0024          00000080  14064+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009368 E3C0 2090 0024          00000090  14065+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000936E B904 00D2                         14066+         lgr   13,2                set real frame pointer               01-DCCPR
00009372 B904 00CF                         14067+         lgr   12,15               set base reg                         01-DCCPR
                        00009338           14068+         using @REGION_1920_1,12                                        01-DCCPR
                                           14069 * ******* End of Prologue
                                           14070 * *
                                           14071 * ***           rd_kafka_timer_start0(&rk->rk_timers,&rk->rk_eos.txn_r\
                                           14072 * egister_parts_tmr,backoff_ms ? backoff_ms * 1000 : 1,1,0,rd_kafka_tx\
                                           14073 * n_register_partitions_tmr_cb,rk);
00009376 E3F0 1000 0004          00000000  14074          LG    15,0(0,1)   ; rk
0000937C E310 100C 0012          0000000C  14075          LT    1,12(0,1)   ; backoff_ms
00009382 4780 C070               000093A8  14076          BZ    @L1187
00009386 A71C 03E8               000003E8  14077          MHI   1,1000
0000938A 47F0 C074               000093AC  14078          B     @L1188
00009390                                   14079          DS    0D
00009390 000000E0                          14080 @FRAMESIZE_1920 DC F'224'
00009394 00000000
00009398 0000000000000000                  14081 @lit_1920_665 DC AD(rd_kafka_timer_start0)
000093A0 0000000000009210                  14082 @lit_1920_664 DC AD(rd_kafka_txn_register_partitions_tmr_cb)
000093A8                                   14083 @L1187   DS    0H
000093A8 A718 0001               00000001  14084          LHI   1,1         ; 1
                                                                                                                           Page  284 
  Active Usings: @REGION_1920_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000093AC                                   14085 @L1188   DS    0H
000093AC B914 0011                         14086          LGFR  1,1
000093B0 A729 1010               00001010  14087          LGHI  2,4112      ; 4112
000093B4 4122 F000               00000000  14088          LA    2,0(2,15)
000093B8 E320 D0A8 0024          000000A8  14089          STG   2,168(0,13)
000093BE 4120 FE18               00000E18  14090          LA    2,3608(0,15)
000093C2 E320 D0B0 0024          000000B0  14091          STG   2,176(0,13)
000093C8 E310 D0B8 0024          000000B8  14092          STG   1,184(0,13)
000093CE E548 D0C0 0001          000000C0  14093          MVGHI 192(13),1
000093D4 D707 D0C8 D0C8 000000C8 000000C8  14094          XC    200(8,13),200(13)
000093DA E310 C068 0004          000093A0  14095          LG    1,@lit_1920_664 ; rd_kafka_txn_register_partitions_tmr_c*
                                                                b
000093E0 E310 D0D0 0024          000000D0  14096          STG   1,208(0,13)
000093E6 E3F0 D0D8 0024          000000D8  14097          STG   15,216(0,13)
000093EC 4110 D0A8               000000A8  14098          LA    1,168(0,13)
000093F0 E3F0 C060 0004          00009398  14099          LG    15,@lit_1920_665 ; rd_kafka_timer_start0
000093F6                                   14100 @@gen_label916 DS    0H
000093F6 05EF                              14101          BALR  14,15
000093F8                                   14102 @@gen_label917 DS    0H
                                           14103 * ***   # 984 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           14104 * ***   }
000093F8                                   14105 @ret_lab_1920 DS 0H
                                           14106 * * **** Start of Epilogue
                                           14107          DCCEPIL
000093F8                                   14108+         ds 0h                                                          01-DCCEP
                                           14109+* Epilog
000093F8 D707 D088 D088 00000088 00000088  14110+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000093FE E3D0 D080 0004          00000080  14111+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009404 E3C0 D090 0004          00000090  14112+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000940A E3B0 C018 0004          00000018  14113+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009410 E3C0 B010 0021          00000010  14114+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009416 E3E0 D008 0004          00000008  14115+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000941C EB1C D020 0004          00000020  14116+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009422 078E                              14117+         bcr 8,14                if same dsab, just return              01-DCCEP
00009424 E3F0 D010 0024          00000010  14118+         stg 15,16(0,13)         save return code                       01-DCCEP
0000942A E300 D018 0024          00000018  14119+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009430 E3F0 D090 0004          00000090  14120+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009436 E3F0 F018 0004          00000018  14121+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000943C 47F0 F040               00000040  14122+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14123+* End of Epilog
                                           14124 * * **** End of Epilogue
                                           14125          DROP  12
                                           14126 *
                                           14127 *   DSECT for automatic variables in "rd_kafka_txn_schedule_register_p
                                           14128 *           artitions"
                                           14129 *      (FUNCTION #1920)
                                           14130 *
00000000                00000000 000000A8  14131 @AUTO#rd_kafka_txn_schedule_register_partitions DSECT
00000000                                   14132          DS    XL168
                                           14133 *
00009440                00000000 00014658  14134 @CODE    CSECT
                                           14135 *
                                                                                                                           Page  285 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14136 *
                                           14137 *
                                           14138 * ....... start of rd_kafka_txn_clear_partitions_flag
00009440                                   14139 @LNAME2008 DS  0H
00009440 00000022                          14140          DC    X'00000022'
00009444 99846D9281869281                  14141          DC    C'rd_kafka_txn_clear_partitions_fl'
00009464 8187                              14142          DC    C'ag'
00009466 00                                14143          DC    X'00'
                                           14144 rd_kafka_txn_clear_partitions_flag DCCPRLG CINDEX=2008,BASER=12,FRAME=1*
                                                                84,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2008
                                           14145          macro
                                           14146          dccextrn &m
                                           14147          gblc    &$dccext(1000)
                                           14148          gbla    &$dccexti
                                           14149          lcla    &i
                                           14150 &$dccext(&$dccexti+1) setc    '&m'
                                           14151 &i       seta    1
                                           14152 .loop    aif    (&i gt &$dccexti).around
                                           14153          aif    ('&$dccext(&i)' eq '&m').getout
                                           14154 &i       seta    &i+1
                                           14155          ago     .loop
                                           14156 .around  anop
                                           14157 &$dccexti seta &$dccexti+1
                                           14158          extrn  &m
                                           14159 .getout  anop
                                           14160          mend
00009468                                   14161+$eye0219    ds    0d                                                    02-DCCCA
00009468 C4C3C3                            14162+         dc cl3'DCC'                                                    02-DCCCA
0000946B 01                                14163+         dc xl1'01' format one                                          02-DCCCA
0000946C 00000000                          14164+         dc a(0)                                                        02-DCCCA
00009470 00000000000094DA                  14165+         dc ad(@PER_2008)                                               02-DCCCA
00009478 00000000000000B8                  14166+         dc ad(184)                                                     02-DCCCA
00009480 0000000000000000                  14167+         dc ad(0)                                                       02-DCCCA
00009488 0000000000001000                  14168+         dc ad(4096)                                                    02-DCCCA
00009490 20                                14169+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009491 03                                14170+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009492 03                                14171+         dc al1(3)                                                      02-DCCCA
00009493 08                                14172+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009494 00                                14173+         dc bl.8'00000000'                                              02-DCCCA
00009495 000000                            14174+         dc al3(0)                                                      02-DCCCA
00009498 0000000000009440                  14175+         dc ad(@LNAME2008)                                              02-DCCCA
000094A0                                   14176+         ds 0d                                                          02-DCCCA
000094A0 0000000000009468                  14177+         dc ad($eye0219)                                                02-DCCCA
000094A8 0000000000000000                  14178+         dc ad(0)                                                       02-DCCCA
000094B0                                   14179+         ds    0d                                                       01-DCCPR
000094B0                                   14180+rd_kafka_txn_clear_partitions_flag ds 0d                                01-DCCPR
000094B0                                   14181+@REGION_2008_1 ds 0h                                                    01-DCCPR
000094B0 EBEC D008 0024          00000008  14182+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000094B6 E3E0 D088 0004          00000088  14183+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000094BC E3C0 D090 0004          00000090  14184+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000094C2 B904 002E                         14185+         lgr   2,14                copy addr of our savearea            01-DCCPR
000094C6 E3B0 C018 0004          00000018  14186+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  286 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000094CC A7EB 00B8               000000B8  14187+         aghi  14,184              increase by frame size               01-DCCPR
000094D0 E3E0 C020 0021          00000020  14188+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000094D6 4720 B020               00000020  14189+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000094DA                                   14190+@PER_2008 ds   0h                                                       01-DCCPR
000094DA EBDE 2080 0024          00000080  14191+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000094E0 E3C0 2090 0024          00000090  14192+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000094E6 B904 00D2                         14193+         lgr   13,2                set real frame pointer               01-DCCPR
000094EA B904 00CF                         14194+         lgr   12,15               set base reg                         01-DCCPR
                        000094B0           14195+         using @REGION_2008_1,12                                        01-DCCPR
000094EE B904 0051                         14196          LGR   5,1         ; ptr to parm area
                                           14197 * ******* End of Prologue
                                           14198 * *
000094F2 E330 5000 0004          00000000  14199          LG    3,0(0,5)    ; tqh
                                           14200 * ***           rd_kafka_toppar_t *rktp, *tmp;
                                           14201 * ***
                                           14202 * ***           for ((rktp) = ((tqh)->tqh_first); (rktp) != (((void *)\
                                           14203 * 0)) && ((tmp) = ((rktp)->rktp_txnlink .tqe_next), 1); (rktp) = (tmp)\
                                           14204 * ) {
000094F8 E320 3000 0004          00000000  14205          LG    2,0(0,3)    ; tqh
000094FE 47F0 C0F0               000095A0  14206          B     @L1190
00009508                                   14207          DS    0D
00009508 000000B8                          14208 @FRAMESIZE_2008 DC F'184'
0000950C 00000000
00009510 0000000000000000                  14209 @lit_2008_667 DC AD(mtx_lock)
00009518 0000000000000000                  14210 @lit_2008_668 DC AD(mtx_unlock)
00009520 0000000000000F28                  14211 @lit_2008_669 DC AD(rd_refcnt_sub0)
00009528 0000000000000000                  14212 @lit_2008_670 DC AD(rd_kafka_toppar_destroy_final)
00009530                                   14213 @L1189   DS    0H
                                           14214 * ***                   mtx_lock(&(rktp)->rktp_lock);
00009530 41F0 20C0               000000C0  14215          LA    15,192(0,2)
00009534 E3F0 D0B0 0024          000000B0  14216          STG   15,176(0,13)
0000953A 4110 D0B0               000000B0  14217          LA    1,176(0,13)
0000953E E3F0 C060 0004          00009510  14218          LG    15,@lit_2008_667 ; mtx_lock
00009544                                   14219 @@gen_label918 DS    0H
00009544 05EF                              14220          BALR  14,15
00009546                                   14221 @@gen_label919 DS    0H
                                           14222 * ***                   do {} while (0);
00009546                                   14223 @L1194   DS    0H
                                           14224 * ***                   rktp->rktp_flags &= ~flag;
00009546 58F0 500C               0000000C  14225          L     15,12(0,5)  ; flag
0000954A C0F7 FFFF FFFF                    14226          XILF  15,X'FFFFFFFF'
00009550 54F0 22B0               000002B0  14227          N     15,688(0,2)
00009554 50F0 22B0               000002B0  14228          ST    15,688(0,2)
                                           14229 * ***                   mtx_unlock(&(rktp)->rktp_lock);
00009558 41F0 20C0               000000C0  14230          LA    15,192(0,2)
0000955C E3F0 D0B0 0024          000000B0  14231          STG   15,176(0,13)
00009562 4110 D0B0               000000B0  14232          LA    1,176(0,13)
00009566 E3F0 C068 0004          00009518  14233          LG    15,@lit_2008_668 ; mtx_unlock
0000956C                                   14234 @@gen_label920 DS    0H
0000956C 05EF                              14235          BALR  14,15
0000956E                                   14236 @@gen_label921 DS    0H
                                           14237 * ***                   do { rd_kafka_toppar_t *_RKTP = (rktp); if (((\
                                                                                                                           Page  287 
  Active Usings: @REGION_2008_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14238 * rd_refcnt_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_\
                                           14239 * final(_RKTP); } while (0);
0000956E                                   14240 @L1197   DS    0H
0000956E 41F0 2090               00000090  14241          LA    15,144(0,2)
00009572 E3F0 D0B0 0024          000000B0  14242          STG   15,176(0,13)
00009578 4110 D0B0               000000B0  14243          LA    1,176(0,13)
0000957C E3F0 C070 0004          00009520  14244          LG    15,@lit_2008_669 ; rd_refcnt_sub0
00009582                                   14245 @@gen_label922 DS    0H
00009582 05EF                              14246          BALR  14,15
00009584                                   14247 @@gen_label923 DS    0H
00009584 12FF                              14248          LTR   15,15
00009586 4770 C0EC               0000959C  14249          BNE   @L1200
0000958A E320 D0B0 0024          000000B0  14250          STG   2,176(0,13)
00009590 4110 D0B0               000000B0  14251          LA    1,176(0,13)
00009594 E3F0 C078 0004          00009528  14252          LG    15,@lit_2008_670 ; rd_kafka_toppar_destroy_final
0000959A                                   14253 @@gen_label925 DS    0H
0000959A 05EF                              14254          BALR  14,15
0000959C                                   14255 @@gen_label926 DS    0H
0000959C                                   14256 @L1200   DS    0H
                                           14257 * ***           }
0000959C B904 0024                         14258          LGR   2,4         ; rktp
000095A0                                   14259 @L1190   DS    0H
000095A0 B902 00F2                         14260          LTGR  15,2
000095A4 4780 C102               000095B2  14261          BE    @L1201
000095A8 E340 2050 0004          00000050  14262          LG    4,80(0,2)   ; offset of rktp_txnlink in rd_kafka_toppar_*
                                                                s
000095AE 47F0 C080               00009530  14263          B     @L1189
                                           14264 * ***
                                           14265 * ***           do { (tqh)->tqh_first = (((void *)0)); (tqh)->tqh_last\
                                           14266 *  = &(tqh)->tqh_first; } while ( 0);
000095B2                                   14267 @L1201   DS    0H
000095B2 A7F9 0000               00000000  14268          LGHI  15,0        ; 0
000095B6 E3F0 3000 0024          00000000  14269          STG   15,0(0,3)   ; tqh
000095BC E330 3008 0024          00000008  14270          STG   3,8(0,3)    ; offset of tqh_last in rd_kafka_toppar_tqhe*
                                                                ad_s
                                           14271 * ***   }
000095C2                                   14272 @ret_lab_2008 DS 0H
                                           14273 * * **** Start of Epilogue
                                           14274          DCCEPIL
000095C2                                   14275+         ds 0h                                                          01-DCCEP
                                           14276+* Epilog
000095C2 D707 D088 D088 00000088 00000088  14277+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000095C8 E3D0 D080 0004          00000080  14278+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000095CE E3C0 D090 0004          00000090  14279+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000095D4 E3B0 C018 0004          00000018  14280+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000095DA E3C0 B010 0021          00000010  14281+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000095E0 E3E0 D008 0004          00000008  14282+         lg  14,8(0,13)          load up return address                 01-DCCEP
000095E6 EB1C D020 0004          00000020  14283+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000095EC 078E                              14284+         bcr 8,14                if same dsab, just return              01-DCCEP
000095EE E3F0 D010 0024          00000010  14285+         stg 15,16(0,13)         save return code                       01-DCCEP
000095F4 E300 D018 0024          00000018  14286+         stg 0,24(0,13)          save more return code                  01-DCCEP
000095FA E3F0 D090 0004          00000090  14287+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page  288 
  Active Usings: @REGION_2008_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009600 E3F0 F018 0004          00000018  14288+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009606 47F0 F040               00000040  14289+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14290+* End of Epilog
                                           14291 * * **** End of Epilogue
                                           14292          DROP  12
                                           14293 *
                                           14294 *   DSECT for automatic variables in "rd_kafka_txn_clear_partitions_fl
                                           14295 *           ag"
                                           14296 *      (FUNCTION #2008)
                                           14297 *
00000000                00000000 000000A8  14298 @AUTO#rd_kafka_txn_clear_partitions_flag DSECT
00000000                                   14299          DS    XL168
                                           14300 *
0000960A                00000000 00014658  14301 @CODE    CSECT
                                           14302 *
                                           14303 *
                                           14304 *
                                           14305 * ....... start of rd_kafka_txn_clear_pending_partitions
0000960A                                   14306 @LNAME2009 DS  0H
0000960A 00000025                          14307          DC    X'00000025'
0000960E 99846D9281869281                  14308          DC    C'rd_kafka_txn_clear_pending_parti'
0000962E A3899695A2                        14309          DC    C'tions'
00009633 00                                14310          DC    X'00'
                                           14311 rd_kafka_txn_clear_pending_partitions DCCPRLG CINDEX=2009,BASER=12,FRAM*
                                                                E=184,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2009
                                           14312          macro
                                           14313          dccextrn &m
                                           14314          gblc    &$dccext(1000)
                                           14315          gbla    &$dccexti
                                           14316          lcla    &i
                                           14317 &$dccext(&$dccexti+1) setc    '&m'
                                           14318 &i       seta    1
                                           14319 .loop    aif    (&i gt &$dccexti).around
                                           14320          aif    ('&$dccext(&i)' eq '&m').getout
                                           14321 &i       seta    &i+1
                                           14322          ago     .loop
                                           14323 .around  anop
                                           14324 &$dccexti seta &$dccexti+1
                                           14325          extrn  &m
                                           14326 .getout  anop
                                           14327          mend
00009638                                   14328+$eye0222    ds    0d                                                    02-DCCCA
00009638 C4C3C3                            14329+         dc cl3'DCC'                                                    02-DCCCA
0000963B 01                                14330+         dc xl1'01' format one                                          02-DCCCA
0000963C 00000000                          14331+         dc a(0)                                                        02-DCCCA
00009640 00000000000096AA                  14332+         dc ad(@PER_2009)                                               02-DCCCA
00009648 00000000000000B8                  14333+         dc ad(184)                                                     02-DCCCA
00009650 0000000000000000                  14334+         dc ad(0)                                                       02-DCCCA
00009658 0000000000001000                  14335+         dc ad(4096)                                                    02-DCCCA
00009660 20                                14336+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009661 03                                14337+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009662 03                                14338+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  289 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009663 08                                14339+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009664 00                                14340+         dc bl.8'00000000'                                              02-DCCCA
00009665 000000                            14341+         dc al3(0)                                                      02-DCCCA
00009668 000000000000960A                  14342+         dc ad(@LNAME2009)                                              02-DCCCA
00009670                                   14343+         ds 0d                                                          02-DCCCA
00009670 0000000000009638                  14344+         dc ad($eye0222)                                                02-DCCCA
00009678 0000000000000000                  14345+         dc ad(0)                                                       02-DCCCA
00009680                                   14346+         ds    0d                                                       01-DCCPR
00009680                                   14347+rd_kafka_txn_clear_pending_partitions ds 0d                             01-DCCPR
00009680                                   14348+@REGION_2009_1 ds 0h                                                    01-DCCPR
00009680 EBEC D008 0024          00000008  14349+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009686 E3E0 D088 0004          00000088  14350+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000968C E3C0 D090 0004          00000090  14351+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009692 B904 002E                         14352+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009696 E3B0 C018 0004          00000018  14353+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000969C A7EB 00B8               000000B8  14354+         aghi  14,184              increase by frame size               01-DCCPR
000096A0 E3E0 C020 0021          00000020  14355+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000096A6 4720 B020               00000020  14356+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000096AA                                   14357+@PER_2009 ds   0h                                                       01-DCCPR
000096AA EBDE 2080 0024          00000080  14358+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000096B0 E3C0 2090 0024          00000090  14359+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000096B6 B904 00D2                         14360+         lgr   13,2                set real frame pointer               01-DCCPR
000096BA B904 00CF                         14361+         lgr   12,15               set base reg                         01-DCCPR
                        00009680           14362+         using @REGION_2009_1,12                                        01-DCCPR
                                           14363 * ******* End of Prologue
                                           14364 * *
                                           14365 * ***           rd_kafka_txn_clear_partitions_flag(&rk->rk_eos.txn_pen\
                                           14366 * ding_rktps,
                                           14367 * ***                                              0x100);
000096BE E320 1000 0004          00000000  14368          LG    2,0(0,1)    ; rk
000096C4 41F0 2E78               00000E78  14369          LA    15,3704(0,2)
000096C8 E3F0 D0A8 0024          000000A8  14370          STG   15,168(0,13)
000096CE E548 D0B0 0100          000000B0  14371          MVGHI 176(13),256
000096D4 4110 D0A8               000000A8  14372          LA    1,168(0,13)
000096D8 E330 C0D0 0004          00009750  14373          LG    3,@lit_2009_673 ; rd_kafka_txn_clear_partitions_flag
000096DE B904 00F3                         14374          LGR   15,3
000096E2                                   14375 @@gen_label928 DS    0H
000096E2 05EF                              14376          BALR  14,15
000096E4                                   14377 @@gen_label929 DS    0H
                                           14378 * ***           rd_kafka_txn_clear_partitions_flag(&rk->rk_eos.txn_wai\
                                           14379 * tresp_rktps,
                                           14380 * ***                                              0x100);
000096E4 41F0 2E88               00000E88  14381          LA    15,3720(0,2)
000096E8 E3F0 D0A8 0024          000000A8  14382          STG   15,168(0,13)
000096EE E548 D0B0 0100          000000B0  14383          MVGHI 176(13),256
000096F4 4110 D0A8               000000A8  14384          LA    1,168(0,13)
000096F8 B904 00F3                         14385          LGR   15,3
000096FC                                   14386 @@gen_label930 DS    0H
000096FC 05EF                              14387          BALR  14,15
000096FE                                   14388 @@gen_label931 DS    0H
                                           14389 * ***   }
000096FE                                   14390 @ret_lab_2009 DS 0H
                                                                                                                           Page  290 
  Active Usings: @REGION_2009_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14391 * * **** Start of Epilogue
                                           14392          DCCEPIL
000096FE                                   14393+         ds 0h                                                          01-DCCEP
                                           14394+* Epilog
000096FE D707 D088 D088 00000088 00000088  14395+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009704 E3D0 D080 0004          00000080  14396+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000970A E3C0 D090 0004          00000090  14397+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009710 E3B0 C018 0004          00000018  14398+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009716 E3C0 B010 0021          00000010  14399+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000971C E3E0 D008 0004          00000008  14400+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009722 EB1C D020 0004          00000020  14401+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009728 078E                              14402+         bcr 8,14                if same dsab, just return              01-DCCEP
0000972A E3F0 D010 0024          00000010  14403+         stg 15,16(0,13)         save return code                       01-DCCEP
00009730 E300 D018 0024          00000018  14404+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009736 E3F0 D090 0004          00000090  14405+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000973C E3F0 F018 0004          00000018  14406+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009742 47F0 F040               00000040  14407+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14408+* End of Epilog
                                           14409 * * **** End of Epilogue
00009748                                   14410          DS    0D
00009748 000000B8                          14411 @FRAMESIZE_2009 DC F'184'
0000974C 00000000
00009750 00000000000094B0                  14412 @lit_2009_673 DC AD(rd_kafka_txn_clear_partitions_flag)
                                           14413          DROP  12
                                           14414 *
                                           14415 *   DSECT for automatic variables in "rd_kafka_txn_clear_pending_parti
                                           14416 *           tions"
                                           14417 *      (FUNCTION #2009)
                                           14418 *
00000000                00000000 000000A8  14419 @AUTO#rd_kafka_txn_clear_pending_partitions DSECT
00000000                                   14420          DS    XL168
                                           14421 *
00009758                00000000 00014658  14422 @CODE    CSECT
                                           14423 *
                                           14424 *
                                           14425 *
                                           14426 * ....... start of rd_kafka_txn_clear_partitions
00009758                                   14427 @LNAME2010 DS  0H
00009758 0000001D                          14428          DC    X'0000001D'
0000975C 99846D9281869281                  14429          DC    C'rd_kafka_txn_clear_partitions'
00009779 00                                14430          DC    X'00'
                                           14431 rd_kafka_txn_clear_partitions DCCPRLG CINDEX=2010,BASER=12,FRAME=184,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2010
                                           14432          macro
                                           14433          dccextrn &m
                                           14434          gblc    &$dccext(1000)
                                           14435          gbla    &$dccexti
                                           14436          lcla    &i
                                           14437 &$dccext(&$dccexti+1) setc    '&m'
                                           14438 &i       seta    1
                                           14439 .loop    aif    (&i gt &$dccexti).around
                                           14440          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  291 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14441 &i       seta    &i+1
                                           14442          ago     .loop
                                           14443 .around  anop
                                           14444 &$dccexti seta &$dccexti+1
                                           14445          extrn  &m
                                           14446 .getout  anop
                                           14447          mend
00009780                                   14448+$eye0225    ds    0d                                                    02-DCCCA
00009780 C4C3C3                            14449+         dc cl3'DCC'                                                    02-DCCCA
00009783 01                                14450+         dc xl1'01' format one                                          02-DCCCA
00009784 00000000                          14451+         dc a(0)                                                        02-DCCCA
00009788 00000000000097F2                  14452+         dc ad(@PER_2010)                                               02-DCCCA
00009790 00000000000000B8                  14453+         dc ad(184)                                                     02-DCCCA
00009798 0000000000000000                  14454+         dc ad(0)                                                       02-DCCCA
000097A0 0000000000001000                  14455+         dc ad(4096)                                                    02-DCCCA
000097A8 20                                14456+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000097A9 03                                14457+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000097AA 03                                14458+         dc al1(3)                                                      02-DCCCA
000097AB 08                                14459+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000097AC 00                                14460+         dc bl.8'00000000'                                              02-DCCCA
000097AD 000000                            14461+         dc al3(0)                                                      02-DCCCA
000097B0 0000000000009758                  14462+         dc ad(@LNAME2010)                                              02-DCCCA
000097B8                                   14463+         ds 0d                                                          02-DCCCA
000097B8 0000000000009780                  14464+         dc ad($eye0225)                                                02-DCCCA
000097C0 0000000000000000                  14465+         dc ad(0)                                                       02-DCCCA
000097C8                                   14466+         ds    0d                                                       01-DCCPR
000097C8                                   14467+rd_kafka_txn_clear_partitions ds 0d                                     01-DCCPR
000097C8                                   14468+@REGION_2010_1 ds 0h                                                    01-DCCPR
000097C8 EBEC D008 0024          00000008  14469+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000097CE E3E0 D088 0004          00000088  14470+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000097D4 E3C0 D090 0004          00000090  14471+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000097DA B904 002E                         14472+         lgr   2,14                copy addr of our savearea            01-DCCPR
000097DE E3B0 C018 0004          00000018  14473+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000097E4 A7EB 00B8               000000B8  14474+         aghi  14,184              increase by frame size               01-DCCPR
000097E8 E3E0 C020 0021          00000020  14475+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000097EE 4720 B020               00000020  14476+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000097F2                                   14477+@PER_2010 ds   0h                                                       01-DCCPR
000097F2 EBDE 2080 0024          00000080  14478+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000097F8 E3C0 2090 0024          00000090  14479+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000097FE B904 00D2                         14480+         lgr   13,2                set real frame pointer               01-DCCPR
00009802 B904 00CF                         14481+         lgr   12,15               set base reg                         01-DCCPR
                        000097C8           14482+         using @REGION_2010_1,12                                        01-DCCPR
                                           14483 * ******* End of Prologue
                                           14484 * *
                                           14485 * ***           rd_kafka_txn_clear_partitions_flag(&rk->rk_eos.txn_rkt\
                                           14486 * ps,
                                           14487 * ***                                              0x200);
00009806 E3F0 1000 0004          00000000  14488          LG    15,0(0,1)   ; rk
0000980C 41F0 FE98               00000E98  14489          LA    15,3736(0,15)
00009810 E3F0 D0A8 0024          000000A8  14490          STG   15,168(0,13)
00009816 E548 D0B0 0200          000000B0  14491          MVGHI 176(13),512
0000981C 4110 D0A8               000000A8  14492          LA    1,168(0,13)
                                                                                                                           Page  292 
  Active Usings: @REGION_2010_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009820 E3F0 C0B0 0004          00009878  14493          LG    15,@lit_2010_676 ; rd_kafka_txn_clear_partitions_flag
00009826                                   14494 @@gen_label932 DS    0H
00009826 05EF                              14495          BALR  14,15
00009828                                   14496 @@gen_label933 DS    0H
                                           14497 * ***   }
00009828                                   14498 @ret_lab_2010 DS 0H
                                           14499 * * **** Start of Epilogue
                                           14500          DCCEPIL
00009828                                   14501+         ds 0h                                                          01-DCCEP
                                           14502+* Epilog
00009828 D707 D088 D088 00000088 00000088  14503+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000982E E3D0 D080 0004          00000080  14504+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009834 E3C0 D090 0004          00000090  14505+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000983A E3B0 C018 0004          00000018  14506+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009840 E3C0 B010 0021          00000010  14507+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009846 E3E0 D008 0004          00000008  14508+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000984C EB1C D020 0004          00000020  14509+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009852 078E                              14510+         bcr 8,14                if same dsab, just return              01-DCCEP
00009854 E3F0 D010 0024          00000010  14511+         stg 15,16(0,13)         save return code                       01-DCCEP
0000985A E300 D018 0024          00000018  14512+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009860 E3F0 D090 0004          00000090  14513+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009866 E3F0 F018 0004          00000018  14514+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000986C 47F0 F040               00000040  14515+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14516+* End of Epilog
                                           14517 * * **** End of Epilogue
00009870                                   14518          DS    0D
00009870 000000B8                          14519 @FRAMESIZE_2010 DC F'184'
00009874 00000000
00009878 00000000000094B0                  14520 @lit_2010_676 DC AD(rd_kafka_txn_clear_partitions_flag)
                                           14521          DROP  12
                                           14522 *
                                           14523 *   DSECT for automatic variables in "rd_kafka_txn_clear_partitions"
                                           14524 *      (FUNCTION #2010)
                                           14525 *
00000000                00000000 000000A8  14526 @AUTO#rd_kafka_txn_clear_partitions DSECT
00000000                                   14527          DS    XL168
                                           14528 *
00009880                00000000 00014658  14529 @CODE    CSECT
                                           14530 *
                                           14531 *
                                           14532 *
                                           14533 * ....... start of rd_kafka_txn_curr_api_abort_timeout_cb
00009880                                   14534 @LNAME2011 DS  0H
00009880 00000026                          14535          DC    X'00000026'
00009884 99846D9281869281                  14536          DC    C'rd_kafka_txn_curr_api_abort_time'
000098A4 96A4A36D8382                      14537          DC    C'out_cb'
000098AA 00                                14538          DC    X'00'
                                           14539 rd_kafka_txn_curr_api_abort_timeout_cb DCCPRLG CINDEX=2011,BASER=12,FRA*
                                                                ME=216,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2011
                                           14540          macro
                                           14541          dccextrn &m
                                           14542          gblc    &$dccext(1000)
                                                                                                                           Page  293 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14543          gbla    &$dccexti
                                           14544          lcla    &i
                                           14545 &$dccext(&$dccexti+1) setc    '&m'
                                           14546 &i       seta    1
                                           14547 .loop    aif    (&i gt &$dccexti).around
                                           14548          aif    ('&$dccext(&i)' eq '&m').getout
                                           14549 &i       seta    &i+1
                                           14550          ago     .loop
                                           14551 .around  anop
                                           14552 &$dccexti seta &$dccexti+1
                                           14553          extrn  &m
                                           14554 .getout  anop
                                           14555          mend
000098B0                                   14556+$eye0228    ds    0d                                                    02-DCCCA
000098B0 C4C3C3                            14557+         dc cl3'DCC'                                                    02-DCCCA
000098B3 01                                14558+         dc xl1'01' format one                                          02-DCCCA
000098B4 00000000                          14559+         dc a(0)                                                        02-DCCCA
000098B8 0000000000009922                  14560+         dc ad(@PER_2011)                                               02-DCCCA
000098C0 00000000000000D8                  14561+         dc ad(216)                                                     02-DCCCA
000098C8 0000000000000000                  14562+         dc ad(0)                                                       02-DCCCA
000098D0 0000000000001000                  14563+         dc ad(4096)                                                    02-DCCCA
000098D8 20                                14564+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000098D9 03                                14565+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000098DA 03                                14566+         dc al1(3)                                                      02-DCCCA
000098DB 08                                14567+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000098DC 00                                14568+         dc bl.8'00000000'                                              02-DCCCA
000098DD 000000                            14569+         dc al3(0)                                                      02-DCCCA
000098E0 0000000000009880                  14570+         dc ad(@LNAME2011)                                              02-DCCCA
000098E8                                   14571+         ds 0d                                                          02-DCCCA
000098E8 00000000000098B0                  14572+         dc ad($eye0228)                                                02-DCCCA
000098F0 0000000000000000                  14573+         dc ad(0)                                                       02-DCCCA
000098F8                                   14574+         ds    0d                                                       01-DCCPR
000098F8                                   14575+rd_kafka_txn_curr_api_abort_timeout_cb ds 0d                            01-DCCPR
000098F8                                   14576+@REGION_2011_1 ds 0h                                                    01-DCCPR
000098F8 EBEC D008 0024          00000008  14577+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000098FE E3E0 D088 0004          00000088  14578+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009904 E3C0 D090 0004          00000090  14579+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000990A B904 002E                         14580+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000990E E3B0 C018 0004          00000018  14581+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009914 A7EB 00D8               000000D8  14582+         aghi  14,216              increase by frame size               01-DCCPR
00009918 E3E0 C020 0021          00000020  14583+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000991E 4720 B020               00000020  14584+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009922                                   14585+@PER_2011 ds   0h                                                       01-DCCPR
00009922 EBDE 2080 0024          00000080  14586+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009928 E3C0 2090 0024          00000090  14587+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000992E B904 00D2                         14588+         lgr   13,2                set real frame pointer               01-DCCPR
00009932 B904 00CF                         14589+         lgr   12,15               set base reg                         01-DCCPR
                        000098F8           14590+         using @REGION_2011_1,12                                        01-DCCPR
                                           14591 * ******* End of Prologue
                                           14592 * *
                                           14593 * ***           rd_kafka_q_t *rkq = arg;
00009936 E320 1008 0004          00000008  14594          LG    2,8(0,1)    ; arg
                                                                                                                           Page  294 
  Active Usings: @REGION_2011_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14595 * ***
                                           14596 * ***           rd_kafka_txn_set_abortable_error0(rkts->rkts_rk,RD_KAF\
                                           14597 * KA_RESP_ERR__TIMED_OUT,0,"Transactional API operation (%s) timed out\
                                           14598 * ", rkq->rkq_rk->rk_eos.txn_curr_api.name);
0000993C E3F0 1000 0004          00000000  14599          LG    15,0(0,1)   ; rkts
00009942 E3F0 F010 0004          00000010  14600          LG    15,16(0,15)
00009948 E3F0 D0B0 0024          000000B0  14601          STG   15,176(0,13)
0000994E E548 D0B8 FF47          000000B8  14602          MVGHI 184(13),-185
00009954 D707 D0C0 D0C0 000000C0 000000C0  14603          XC    192(8,13),192(13)
0000995A E330 C130 0004          00009A28  14604          LG    3,@lit_2011_678
00009960 41F0 38E0               000008E0  14605          LA    15,2272(0,3)
00009964 E3F0 D0C8 0024          000000C8  14606          STG   15,200(0,13)
0000996A E3F0 2088 0004          00000088  14607          LG    15,136(0,2) ; offset of rkq_rk in rd_kafka_q_s
00009970 41F0 FD88               00000D88  14608          LA    15,3464(0,15)
00009974 E3F0 D0D0 0024          000000D0  14609          STG   15,208(0,13)
0000997A 4110 D0B0               000000B0  14610          LA    1,176(0,13)
0000997E E3F0 C128 0004          00009A20  14611          LG    15,@lit_2011_679 ; rd_kafka_txn_set_abortable_error0
00009984                                   14612 @@gen_label934 DS    0H
00009984 05EF                              14613          BALR  14,15
00009986                                   14614 @@gen_label935 DS    0H
                                           14615 * ***
                                           14616 * ***
                                           14617 * ***
                                           14618 * ***
                                           14619 * ***
                                           14620 * ***           rd_kafka_txn_curr_api_reply_error(
                                           14621 * ***                   rkq,
                                           14622 * ***                   rd_kafka_error_new_txn_requires_abort(
                                           14623 * ***                           RD_KAFKA_RESP_ERR__TIMED_OUT,
                                           14624 * ***                           "Transactional API operation (%s) time\
                                           14625 * d out",
                                           14626 * ***                           rkq->rkq_rk->rk_eos.txn_curr_api.name)\
                                           14627 * );
00009986 E548 D0B0 FF47          000000B0  14628          MVGHI 176(13),-185
0000998C 41F0 38E0               000008E0  14629          LA    15,2272(0,3)
00009990 E3F0 D0B8 0024          000000B8  14630          STG   15,184(0,13)
00009996 E3F0 2088 0004          00000088  14631          LG    15,136(0,2) ; offset of rkq_rk in rd_kafka_q_s
0000999C 41F0 FD88               00000D88  14632          LA    15,3464(0,15)
000099A0 E3F0 D0C0 0024          000000C0  14633          STG   15,192(0,13)
000099A6 4110 D0B0               000000B0  14634          LA    1,176(0,13)
000099AA E3F0 C138 0004          00009A30  14635          LG    15,@lit_2011_680 ; rd_kafka_error_new_txn_requires_abort
000099B0                                   14636 @@gen_label936 DS    0H
000099B0 05EF                              14637          BALR  14,15
000099B2                                   14638 @@gen_label937 DS    0H
000099B2 E320 D0B0 0024          000000B0  14639          STG   2,176(0,13)
000099B8 E3F0 D0B8 0024          000000B8  14640          STG   15,184(0,13)
000099BE 4110 D0B0               000000B0  14641          LA    1,176(0,13)
000099C2 E3F0 C140 0004          00009A38  14642          LG    15,@lit_2011_681 ; rd_kafka_txn_curr_api_reply_error
000099C8                                   14643 @@gen_label938 DS    0H
000099C8 05EF                              14644          BALR  14,15
000099CA                                   14645 @@gen_label939 DS    0H
                                           14646 * ***   }
                                                                                                                           Page  295 
  Active Usings: @REGION_2011_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000099CA                                   14647 @ret_lab_2011 DS 0H
                                           14648 * * **** Start of Epilogue
                                           14649          DCCEPIL
000099CA                                   14650+         ds 0h                                                          01-DCCEP
                                           14651+* Epilog
000099CA D707 D088 D088 00000088 00000088  14652+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000099D0 E3D0 D080 0004          00000080  14653+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000099D6 E3C0 D090 0004          00000090  14654+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000099DC E3B0 C018 0004          00000018  14655+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000099E2 E3C0 B010 0021          00000010  14656+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000099E8 E3E0 D008 0004          00000008  14657+         lg  14,8(0,13)          load up return address                 01-DCCEP
000099EE EB1C D020 0004          00000020  14658+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000099F4 078E                              14659+         bcr 8,14                if same dsab, just return              01-DCCEP
000099F6 E3F0 D010 0024          00000010  14660+         stg 15,16(0,13)         save return code                       01-DCCEP
000099FC E300 D018 0024          00000018  14661+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009A02 E3F0 D090 0004          00000090  14662+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009A08 E3F0 F018 0004          00000018  14663+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009A0E 47F0 F040               00000040  14664+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14665+* End of Epilog
                                           14666 * * **** End of Epilogue
00009A18                                   14667          DS    0D
00009A18 000000D8                          14668 @FRAMESIZE_2011 DC F'216'
00009A1C 00000000
00009A20 0000000000005448                  14669 @lit_2011_679 DC AD(rd_kafka_txn_set_abortable_error0)
00009A28 0000000000014A98                  14670 @lit_2011_678 DC AD(@strings@)
00009A30 0000000000000000                  14671 @lit_2011_680 DC AD(rd_kafka_error_new_txn_requires_abort)
00009A38 00000000000058A0                  14672 @lit_2011_681 DC AD(rd_kafka_txn_curr_api_reply_error)
                                           14673          DROP  12
                                           14674 *
                                           14675 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_abort_time
                                           14676 *           out_cb"
                                           14677 *      (FUNCTION #2011)
                                           14678 *
00000000                00000000 000000A8  14679 @AUTO#rd_kafka_txn_curr_api_abort_timeout_cb DSECT
00000000                                   14680          DS    XL168
                                           14681 *
00009A40                00000000 00014658  14682 @CODE    CSECT
                                           14683 *
                                           14684 *
                                           14685 *
                                           14686 * ....... start of rd_kafka_txn_curr_api_retriable_timeout_cb
00009A40                                   14687 @LNAME2012 DS  0H
00009A40 0000002A                          14688          DC    X'0000002A'
00009A44 99846D9281869281                  14689          DC    C'rd_kafka_txn_curr_api_retriable_'
00009A64 A389948596A4A36D                  14690          DC    C'timeout_cb'
00009A6E 00                                14691          DC    X'00'
                                           14692 rd_kafka_txn_curr_api_retriable_timeout_cb DCCPRLG CINDEX=2012,BASER=12*
                                                                ,FRAME=192,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2012
                                           14693          macro
                                           14694          dccextrn &m
                                           14695          gblc    &$dccext(1000)
                                           14696          gbla    &$dccexti
                                                                                                                           Page  296 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14697          lcla    &i
                                           14698 &$dccext(&$dccexti+1) setc    '&m'
                                           14699 &i       seta    1
                                           14700 .loop    aif    (&i gt &$dccexti).around
                                           14701          aif    ('&$dccext(&i)' eq '&m').getout
                                           14702 &i       seta    &i+1
                                           14703          ago     .loop
                                           14704 .around  anop
                                           14705 &$dccexti seta &$dccexti+1
                                           14706          extrn  &m
                                           14707 .getout  anop
                                           14708          mend
00009A70                                   14709+$eye0231    ds    0d                                                    02-DCCCA
00009A70 C4C3C3                            14710+         dc cl3'DCC'                                                    02-DCCCA
00009A73 01                                14711+         dc xl1'01' format one                                          02-DCCCA
00009A74 00000000                          14712+         dc a(0)                                                        02-DCCCA
00009A78 0000000000009AE2                  14713+         dc ad(@PER_2012)                                               02-DCCCA
00009A80 00000000000000C0                  14714+         dc ad(192)                                                     02-DCCCA
00009A88 0000000000000000                  14715+         dc ad(0)                                                       02-DCCCA
00009A90 0000000000001000                  14716+         dc ad(4096)                                                    02-DCCCA
00009A98 20                                14717+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009A99 03                                14718+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009A9A 03                                14719+         dc al1(3)                                                      02-DCCCA
00009A9B 08                                14720+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009A9C 00                                14721+         dc bl.8'00000000'                                              02-DCCCA
00009A9D 000000                            14722+         dc al3(0)                                                      02-DCCCA
00009AA0 0000000000009A40                  14723+         dc ad(@LNAME2012)                                              02-DCCCA
00009AA8                                   14724+         ds 0d                                                          02-DCCCA
00009AA8 0000000000009A70                  14725+         dc ad($eye0231)                                                02-DCCCA
00009AB0 0000000000000000                  14726+         dc ad(0)                                                       02-DCCCA
00009AB8                                   14727+         ds    0d                                                       01-DCCPR
00009AB8                                   14728+rd_kafka_txn_curr_api_retriable_timeout_cb ds 0d                        01-DCCPR
00009AB8                                   14729+@REGION_2012_1 ds 0h                                                    01-DCCPR
00009AB8 EBEC D008 0024          00000008  14730+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009ABE E3E0 D088 0004          00000088  14731+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009AC4 E3C0 D090 0004          00000090  14732+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009ACA B904 002E                         14733+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009ACE E3B0 C018 0004          00000018  14734+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009AD4 A7EB 00C0               000000C0  14735+         aghi  14,192              increase by frame size               01-DCCPR
00009AD8 E3E0 C020 0021          00000020  14736+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009ADE 4720 B020               00000020  14737+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009AE2                                   14738+@PER_2012 ds   0h                                                       01-DCCPR
00009AE2 EBDE 2080 0024          00000080  14739+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009AE8 E3C0 2090 0024          00000090  14740+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009AEE B904 00D2                         14741+         lgr   13,2                set real frame pointer               01-DCCPR
00009AF2 B904 00CF                         14742+         lgr   12,15               set base reg                         01-DCCPR
                        00009AB8           14743+         using @REGION_2012_1,12                                        01-DCCPR
                                           14744 * ******* End of Prologue
                                           14745 * *
                                           14746 * ***           rd_kafka_q_t *rkq = arg;
00009AF6 E320 1008 0004          00000008  14747          LG    2,8(0,1)    ; arg
                                           14748 * ***
                                                                                                                           Page  297 
  Active Usings: @REGION_2012_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14749 * ***           rd_kafka_txn_curr_api_reply_error(
                                           14750 * ***                   rkq,
                                           14751 * ***                   rd_kafka_error_new_retriable(
                                           14752 * ***                           RD_KAFKA_RESP_ERR__TIMED_OUT,
                                           14753 * ***                           "Transactional operation timed out"));
00009AFC E548 D0B0 FF47          000000B0  14754          MVGHI 176(13),-185
00009B02 E3F0 C0D8 0004          00009B90  14755          LG    15,@lit_2012_683
00009B08 41F0 F90C               0000090C  14756          LA    15,2316(0,15)
00009B0C E3F0 D0B8 0024          000000B8  14757          STG   15,184(0,13)
00009B12 4110 D0B0               000000B0  14758          LA    1,176(0,13)
00009B16 E3F0 C0D0 0004          00009B88  14759          LG    15,@lit_2012_684 ; rd_kafka_error_new_retriable
00009B1C                                   14760 @@gen_label940 DS    0H
00009B1C 05EF                              14761          BALR  14,15
00009B1E                                   14762 @@gen_label941 DS    0H
00009B1E E320 D0B0 0024          000000B0  14763          STG   2,176(0,13)
00009B24 E3F0 D0B8 0024          000000B8  14764          STG   15,184(0,13)
00009B2A 4110 D0B0               000000B0  14765          LA    1,176(0,13)
00009B2E E3F0 C0E0 0004          00009B98  14766          LG    15,@lit_2012_685 ; rd_kafka_txn_curr_api_reply_error
00009B34                                   14767 @@gen_label942 DS    0H
00009B34 05EF                              14768          BALR  14,15
00009B36                                   14769 @@gen_label943 DS    0H
                                           14770 * ***   }
00009B36                                   14771 @ret_lab_2012 DS 0H
                                           14772 * * **** Start of Epilogue
                                           14773          DCCEPIL
00009B36                                   14774+         ds 0h                                                          01-DCCEP
                                           14775+* Epilog
00009B36 D707 D088 D088 00000088 00000088  14776+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009B3C E3D0 D080 0004          00000080  14777+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009B42 E3C0 D090 0004          00000090  14778+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009B48 E3B0 C018 0004          00000018  14779+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009B4E E3C0 B010 0021          00000010  14780+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009B54 E3E0 D008 0004          00000008  14781+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009B5A EB1C D020 0004          00000020  14782+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009B60 078E                              14783+         bcr 8,14                if same dsab, just return              01-DCCEP
00009B62 E3F0 D010 0024          00000010  14784+         stg 15,16(0,13)         save return code                       01-DCCEP
00009B68 E300 D018 0024          00000018  14785+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009B6E E3F0 D090 0004          00000090  14786+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009B74 E3F0 F018 0004          00000018  14787+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009B7A 47F0 F040               00000040  14788+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14789+* End of Epilog
                                           14790 * * **** End of Epilogue
00009B80                                   14791          DS    0D
00009B80 000000C0                          14792 @FRAMESIZE_2012 DC F'192'
00009B84 00000000
00009B88 0000000000000000                  14793 @lit_2012_684 DC AD(rd_kafka_error_new_retriable)
00009B90 0000000000014A98                  14794 @lit_2012_683 DC AD(@strings@)
00009B98 00000000000058A0                  14795 @lit_2012_685 DC AD(rd_kafka_txn_curr_api_reply_error)
                                           14796          DROP  12
                                           14797 *
                                           14798 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_retriable_
                                           14799 *           timeout_cb"
                                                                                                                           Page  298 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           14800 *      (FUNCTION #2012)
                                           14801 *
00000000                00000000 000000A8  14802 @AUTO#rd_kafka_txn_curr_api_retriable_timeout_cb DSECT
00000000                                   14803          DS    XL168
                                           14804 *
00009BA0                00000000 00014658  14805 @CODE    CSECT
                                           14806 *
                                           14807 *
                                           14808 *
                                           14809 * ....... start of rd_kafka_txn_curr_api_timeout_cb
00009BA0                                   14810 @LNAME2013 DS  0H
00009BA0 00000020                          14811          DC    X'00000020'
00009BA4 99846D9281869281                  14812          DC    C'rd_kafka_txn_curr_api_timeout_cb'
00009BC4 00                                14813          DC    X'00'
                                           14814 rd_kafka_txn_curr_api_timeout_cb DCCPRLG CINDEX=2013,BASER=12,FRAME=208*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2013
                                           14815          macro
                                           14816          dccextrn &m
                                           14817          gblc    &$dccext(1000)
                                           14818          gbla    &$dccexti
                                           14819          lcla    &i
                                           14820 &$dccext(&$dccexti+1) setc    '&m'
                                           14821 &i       seta    1
                                           14822 .loop    aif    (&i gt &$dccexti).around
                                           14823          aif    ('&$dccext(&i)' eq '&m').getout
                                           14824 &i       seta    &i+1
                                           14825          ago     .loop
                                           14826 .around  anop
                                           14827 &$dccexti seta &$dccexti+1
                                           14828          extrn  &m
                                           14829 .getout  anop
                                           14830          mend
00009BC8                                   14831+$eye0234    ds    0d                                                    02-DCCCA
00009BC8 C4C3C3                            14832+         dc cl3'DCC'                                                    02-DCCCA
00009BCB 01                                14833+         dc xl1'01' format one                                          02-DCCCA
00009BCC 00000000                          14834+         dc a(0)                                                        02-DCCCA
00009BD0 0000000000009C3A                  14835+         dc ad(@PER_2013)                                               02-DCCCA
00009BD8 00000000000000D0                  14836+         dc ad(208)                                                     02-DCCCA
00009BE0 0000000000000000                  14837+         dc ad(0)                                                       02-DCCCA
00009BE8 0000000000001000                  14838+         dc ad(4096)                                                    02-DCCCA
00009BF0 20                                14839+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009BF1 03                                14840+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009BF2 03                                14841+         dc al1(3)                                                      02-DCCCA
00009BF3 08                                14842+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009BF4 00                                14843+         dc bl.8'00000000'                                              02-DCCCA
00009BF5 000000                            14844+         dc al3(0)                                                      02-DCCCA
00009BF8 0000000000009BA0                  14845+         dc ad(@LNAME2013)                                              02-DCCCA
00009C00                                   14846+         ds 0d                                                          02-DCCCA
00009C00 0000000000009BC8                  14847+         dc ad($eye0234)                                                02-DCCCA
00009C08 0000000000000000                  14848+         dc ad(0)                                                       02-DCCCA
00009C10                                   14849+         ds    0d                                                       01-DCCPR
00009C10                                   14850+rd_kafka_txn_curr_api_timeout_cb ds 0d                                  01-DCCPR
                                                                                                                           Page  299 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009C10                                   14851+@REGION_2013_1 ds 0h                                                    01-DCCPR
00009C10 EBEC D008 0024          00000008  14852+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009C16 E3E0 D088 0004          00000088  14853+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009C1C E3C0 D090 0004          00000090  14854+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009C22 B904 002E                         14855+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009C26 E3B0 C018 0004          00000018  14856+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009C2C A7EB 00D0               000000D0  14857+         aghi  14,208              increase by frame size               01-DCCPR
00009C30 E3E0 C020 0021          00000020  14858+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009C36 4720 B020               00000020  14859+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009C3A                                   14860+@PER_2013 ds   0h                                                       01-DCCPR
00009C3A EBDE 2080 0024          00000080  14861+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009C40 E3C0 2090 0024          00000090  14862+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009C46 B904 00D2                         14863+         lgr   13,2                set real frame pointer               01-DCCPR
00009C4A B904 00CF                         14864+         lgr   12,15               set base reg                         01-DCCPR
                        00009C10           14865+         using @REGION_2013_1,12                                        01-DCCPR
                                           14866 * ******* End of Prologue
                                           14867 * *
                                           14868 * ***           rd_kafka_q_t *rkq = arg;
00009C4E E3F0 1008 0004          00000008  14869          LG    15,8(0,1)   ; arg
                                           14870 * ***
                                           14871 * ***           rd_kafka_txn_curr_api_reply(rkq, 0, RD_KAFKA_RESP_ERR_\
                                           14872 * _TIMED_OUT,
                                           14873 * ***                                       "Transactional operation t\
                                           14874 * imed out");
00009C54 E3F0 D0B0 0024          000000B0  14875          STG   15,176(0,13)
00009C5A D707 D0B8 D0B8 000000B8 000000B8  14876          XC    184(8,13),184(13)
00009C60 E548 D0C0 FF47          000000C0  14877          MVGHI 192(13),-185
00009C66 E3F0 C0D0 0004          00009CE0  14878          LG    15,@lit_2013_687
00009C6C 41F0 F90C               0000090C  14879          LA    15,2316(0,15)
00009C70 E3F0 D0C8 0024          000000C8  14880          STG   15,200(0,13)
00009C76 4110 D0B0               000000B0  14881          LA    1,176(0,13)
00009C7A E3F0 C0C8 0004          00009CD8  14882          LG    15,@lit_2013_688 ; rd_kafka_txn_curr_api_reply
00009C80                                   14883 @@gen_label944 DS    0H
00009C80 05EF                              14884          BALR  14,15
00009C82                                   14885 @@gen_label945 DS    0H
                                           14886 * ***   }
00009C82                                   14887 @ret_lab_2013 DS 0H
                                           14888 * * **** Start of Epilogue
                                           14889          DCCEPIL
00009C82                                   14890+         ds 0h                                                          01-DCCEP
                                           14891+* Epilog
00009C82 D707 D088 D088 00000088 00000088  14892+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009C88 E3D0 D080 0004          00000080  14893+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009C8E E3C0 D090 0004          00000090  14894+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009C94 E3B0 C018 0004          00000018  14895+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009C9A E3C0 B010 0021          00000010  14896+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009CA0 E3E0 D008 0004          00000008  14897+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009CA6 EB1C D020 0004          00000020  14898+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009CAC 078E                              14899+         bcr 8,14                if same dsab, just return              01-DCCEP
00009CAE E3F0 D010 0024          00000010  14900+         stg 15,16(0,13)         save return code                       01-DCCEP
00009CB4 E300 D018 0024          00000018  14901+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009CBA E3F0 D090 0004          00000090  14902+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page  300 
  Active Usings: @REGION_2013_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009CC0 E3F0 F018 0004          00000018  14903+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009CC6 47F0 F040               00000040  14904+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14905+* End of Epilog
                                           14906 * * **** End of Epilogue
00009CD0                                   14907          DS    0D
00009CD0 000000D0                          14908 @FRAMESIZE_2013 DC F'208'
00009CD4 00000000
00009CD8 0000000000005A68                  14909 @lit_2013_688 DC AD(rd_kafka_txn_curr_api_reply)
00009CE0 0000000000014A98                  14910 @lit_2013_687 DC AD(@strings@)
                                           14911          DROP  12
                                           14912 *
                                           14913 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_timeout_cb"
                                           14914 *      (FUNCTION #2013)
                                           14915 *
00000000                00000000 000000A8  14916 @AUTO#rd_kafka_txn_curr_api_timeout_cb DSECT
00000000                                   14917          DS    XL168
                                           14918 *
00009CE8                00000000 00014658  14919 @CODE    CSECT
                                           14920 *
                                           14921 *
                                           14922 *
                                           14923 * ....... start of rd_kafka_txn_curr_api_init_timeout_cb
00009CE8                                   14924 @LNAME2014 DS  0H
00009CE8 00000025                          14925          DC    X'00000025'
00009CEC 99846D9281869281                  14926          DC    C'rd_kafka_txn_curr_api_init_timeo'
00009D0C A4A36D8382                        14927          DC    C'ut_cb'
00009D11 00                                14928          DC    X'00'
                                           14929 rd_kafka_txn_curr_api_init_timeout_cb DCCPRLG CINDEX=2014,BASER=12,FRAM*
                                                                E=200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2014
                                           14930          macro
                                           14931          dccextrn &m
                                           14932          gblc    &$dccext(1000)
                                           14933          gbla    &$dccexti
                                           14934          lcla    &i
                                           14935 &$dccext(&$dccexti+1) setc    '&m'
                                           14936 &i       seta    1
                                           14937 .loop    aif    (&i gt &$dccexti).around
                                           14938          aif    ('&$dccext(&i)' eq '&m').getout
                                           14939 &i       seta    &i+1
                                           14940          ago     .loop
                                           14941 .around  anop
                                           14942 &$dccexti seta &$dccexti+1
                                           14943          extrn  &m
                                           14944 .getout  anop
                                           14945          mend
00009D18                                   14946+$eye0237    ds    0d                                                    02-DCCCA
00009D18 C4C3C3                            14947+         dc cl3'DCC'                                                    02-DCCCA
00009D1B 01                                14948+         dc xl1'01' format one                                          02-DCCCA
00009D1C 00000000                          14949+         dc a(0)                                                        02-DCCCA
00009D20 0000000000009D8A                  14950+         dc ad(@PER_2014)                                               02-DCCCA
00009D28 00000000000000C8                  14951+         dc ad(200)                                                     02-DCCCA
00009D30 0000000000000000                  14952+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  301 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009D38 0000000000001000                  14953+         dc ad(4096)                                                    02-DCCCA
00009D40 20                                14954+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009D41 03                                14955+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009D42 03                                14956+         dc al1(3)                                                      02-DCCCA
00009D43 08                                14957+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009D44 00                                14958+         dc bl.8'00000000'                                              02-DCCCA
00009D45 000000                            14959+         dc al3(0)                                                      02-DCCCA
00009D48 0000000000009CE8                  14960+         dc ad(@LNAME2014)                                              02-DCCCA
00009D50                                   14961+         ds 0d                                                          02-DCCCA
00009D50 0000000000009D18                  14962+         dc ad($eye0237)                                                02-DCCCA
00009D58 0000000000000000                  14963+         dc ad(0)                                                       02-DCCCA
00009D60                                   14964+         ds    0d                                                       01-DCCPR
00009D60                                   14965+rd_kafka_txn_curr_api_init_timeout_cb ds 0d                             01-DCCPR
00009D60                                   14966+@REGION_2014_1 ds 0h                                                    01-DCCPR
00009D60 EBEC D008 0024          00000008  14967+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009D66 E3E0 D088 0004          00000088  14968+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009D6C E3C0 D090 0004          00000090  14969+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009D72 B904 002E                         14970+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009D76 E3B0 C018 0004          00000018  14971+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009D7C A7EB 00C8               000000C8  14972+         aghi  14,200              increase by frame size               01-DCCPR
00009D80 E3E0 C020 0021          00000020  14973+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009D86 4720 B020               00000020  14974+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009D8A                                   14975+@PER_2014 ds   0h                                                       01-DCCPR
00009D8A EBDE 2080 0024          00000080  14976+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009D90 E3C0 2090 0024          00000090  14977+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009D96 B904 00D2                         14978+         lgr   13,2                set real frame pointer               01-DCCPR
00009D9A B904 00CF                         14979+         lgr   12,15               set base reg                         01-DCCPR
                        00009D60           14980+         using @REGION_2014_1,12                                        01-DCCPR
                                           14981 * ******* End of Prologue
                                           14982 * *
                                           14983 * ***           rd_kafka_q_t *rkq = arg;
00009D9E E330 1008 0004          00000008  14984          LG    3,8(0,1)    ; arg
                                           14985 * ***           rd_kafka_error_t *error;
                                           14986 * ***           rd_kafka_resp_err_t err = rkts->rkts_rk->rk_eos.txn_in\
                                           14987 * it_err;
00009DA4 E3F0 1000 0004          00000000  14988          LG    15,0(0,1)   ; rkts
00009DAA E3F0 F010 0004          00000010  14989          LG    15,16(0,15) ; offset of rkts_rk in rd_kafka_timers_s
00009DB0 E320 FEE8 0012          00000EE8  14990          LT    2,3816(0,15) ; offset of txn_init_err in 0000146
                                           14991 * ***
                                           14992 * ***           if (!err)
00009DB6 4770 C05E               00009DBE  14993          BNZ   @L1204
                                           14994 * ***                   err = RD_KAFKA_RESP_ERR__TIMED_OUT;
00009DBA A728 FF47               0000FF47  14995          LHI   2,-185      ; -185
00009DBE                                   14996 @L1204   DS    0H
                                           14997 * ***
                                           14998 * ***           error = rd_kafka_error_new(err,
                                           14999 * ***                                      "Failed to initialize Produ\
                                           15000 * cer ID: %s",
                                           15001 * ***                                      rd_kafka_err2str(err));
00009DBE B914 00F2                         15002          LGFR  15,2
00009DC2 E3F0 D0B0 0024          000000B0  15003          STG   15,176(0,13)
00009DC8 4110 D0B0               000000B0  15004          LA    1,176(0,13)
                                                                                                                           Page  302 
  Active Usings: @REGION_2014_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009DCC E3F0 C128 0004          00009E88  15005          LG    15,@lit_2014_691 ; rd_kafka_err2str
00009DD2                                   15006 @@gen_label947 DS    0H
00009DD2 05EF                              15007          BALR  14,15
00009DD4                                   15008 @@gen_label948 DS    0H
00009DD4 B914 0012                         15009          LGFR  1,2
00009DD8 E310 D0B0 0024          000000B0  15010          STG   1,176(0,13)
00009DDE E310 C138 0004          00009E98  15011          LG    1,@lit_2014_692
00009DE4 4110 192E               0000092E  15012          LA    1,2350(0,1)
00009DE8 E310 D0B8 0024          000000B8  15013          STG   1,184(0,13)
00009DEE E3F0 D0C0 0024          000000C0  15014          STG   15,192(0,13)
00009DF4 4110 D0B0               000000B0  15015          LA    1,176(0,13)
00009DF8 E3F0 C130 0004          00009E90  15016          LG    15,@lit_2014_693 ; rd_kafka_error_new
00009DFE                                   15017 @@gen_label949 DS    0H
00009DFE 05EF                              15018          BALR  14,15
00009E00                                   15019 @@gen_label950 DS    0H
00009E00 B904 004F                         15020          LGR   4,15
                                           15021 * ***
                                           15022 * ***
                                           15023 * ***           if (err == RD_KAFKA_RESP_ERR__TIMED_OUT ||
00009E04 A72E FF47               0000FF47  15024          CHI   2,-185
00009E08 4780 C0B4               00009E14  15025          BE    @L1206
                                           15026 * ***               err == RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE)
00009E0C A72E FF5A               0000FF5A  15027          CHI   2,-166
00009E10 4770 C0C6               00009E26  15028          BNE   @L1205
00009E14                                   15029 @L1206   DS    0H
                                           15030 * ***                   rd_kafka_error_set_retriable(error);
00009E14 E340 D0B0 0024          000000B0  15031          STG   4,176(0,13)
00009E1A 4110 D0B0               000000B0  15032          LA    1,176(0,13)
00009E1E E3F0 C140 0004          00009EA0  15033          LG    15,@lit_2014_694 ; rd_kafka_error_set_retriable
00009E24                                   15034 @@gen_label953 DS    0H
00009E24 05EF                              15035          BALR  14,15
00009E26                                   15036 @@gen_label954 DS    0H
00009E26                                   15037 @L1205   DS    0H
                                           15038 * ***
                                           15039 * ***           rd_kafka_txn_curr_api_reply_error(rkq, error);
00009E26 EB34 D0B0 0024          000000B0  15040          STMG  3,4,176(13)
00009E2C 4110 D0B0               000000B0  15041          LA    1,176(0,13)
00009E30 E3F0 C148 0004          00009EA8  15042          LG    15,@lit_2014_695 ; rd_kafka_txn_curr_api_reply_error
00009E36                                   15043 @@gen_label955 DS    0H
00009E36 05EF                              15044          BALR  14,15
00009E38                                   15045 @@gen_label956 DS    0H
                                           15046 * ***   }
00009E38                                   15047 @ret_lab_2014 DS 0H
                                           15048 * * **** Start of Epilogue
                                           15049          DCCEPIL
00009E38                                   15050+         ds 0h                                                          01-DCCEP
                                           15051+* Epilog
00009E38 D707 D088 D088 00000088 00000088  15052+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009E3E E3D0 D080 0004          00000080  15053+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009E44 E3C0 D090 0004          00000090  15054+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009E4A E3B0 C018 0004          00000018  15055+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009E50 E3C0 B010 0021          00000010  15056+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  303 
  Active Usings: @REGION_2014_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009E56 E3E0 D008 0004          00000008  15057+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009E5C EB1C D020 0004          00000020  15058+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009E62 078E                              15059+         bcr 8,14                if same dsab, just return              01-DCCEP
00009E64 E3F0 D010 0024          00000010  15060+         stg 15,16(0,13)         save return code                       01-DCCEP
00009E6A E300 D018 0024          00000018  15061+         stg 0,24(0,13)          save more return code                  01-DCCEP
00009E70 E3F0 D090 0004          00000090  15062+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00009E76 E3F0 F018 0004          00000018  15063+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00009E7C 47F0 F040               00000040  15064+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15065+* End of Epilog
                                           15066 * * **** End of Epilogue
00009E80                                   15067          DS    0D
00009E80 000000C8                          15068 @FRAMESIZE_2014 DC F'200'
00009E84 00000000
00009E88 0000000000000000                  15069 @lit_2014_691 DC AD(rd_kafka_err2str)
00009E90 0000000000000000                  15070 @lit_2014_693 DC AD(rd_kafka_error_new)
00009E98 0000000000014A98                  15071 @lit_2014_692 DC AD(@strings@)
00009EA0 0000000000000000                  15072 @lit_2014_694 DC AD(rd_kafka_error_set_retriable)
00009EA8 00000000000058A0                  15073 @lit_2014_695 DC AD(rd_kafka_txn_curr_api_reply_error)
                                           15074          DROP  12
                                           15075 *
                                           15076 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_init_timeo
                                           15077 *           ut_cb"
                                           15078 *      (FUNCTION #2014)
                                           15079 *
00000000                00000000 000000AC  15080 @AUTO#rd_kafka_txn_curr_api_init_timeout_cb DSECT
00000000                                   15081          DS    XL168
000000A8                                   15082 rd_kafka_txn_curr_api_init_timeout_cb#err#0 DS 1F ; err
                                           15083 *
00009EB0                00000000 00014658  15084 @CODE    CSECT
                                           15085 *
                                           15086 *
                                           15087 *
                                           15088 * ....... start of rd_kafka_txn_curr_api_reset
00009EB0                                   15089 @LNAME2015 DS  0H
00009EB0 0000001B                          15090          DC    X'0000001B'
00009EB4 99846D9281869281                  15091          DC    C'rd_kafka_txn_curr_api_reset'
00009ECF 00                                15092          DC    X'00'
                                           15093 rd_kafka_txn_curr_api_reset DCCPRLG CINDEX=2015,BASER=12,FRAME=200,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2015
                                           15094          macro
                                           15095          dccextrn &m
                                           15096          gblc    &$dccext(1000)
                                           15097          gbla    &$dccexti
                                           15098          lcla    &i
                                           15099 &$dccext(&$dccexti+1) setc    '&m'
                                           15100 &i       seta    1
                                           15101 .loop    aif    (&i gt &$dccexti).around
                                           15102          aif    ('&$dccext(&i)' eq '&m').getout
                                           15103 &i       seta    &i+1
                                           15104          ago     .loop
                                           15105 .around  anop
                                           15106 &$dccexti seta &$dccexti+1
                                                                                                                           Page  304 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           15107          extrn  &m
                                           15108 .getout  anop
                                           15109          mend
00009ED0                                   15110+$eye0240    ds    0d                                                    02-DCCCA
00009ED0 C4C3C3                            15111+         dc cl3'DCC'                                                    02-DCCCA
00009ED3 01                                15112+         dc xl1'01' format one                                          02-DCCCA
00009ED4 00000000                          15113+         dc a(0)                                                        02-DCCCA
00009ED8 0000000000009F42                  15114+         dc ad(@PER_2015)                                               02-DCCCA
00009EE0 00000000000000C8                  15115+         dc ad(200)                                                     02-DCCCA
00009EE8 0000000000000000                  15116+         dc ad(0)                                                       02-DCCCA
00009EF0 0000000000001000                  15117+         dc ad(4096)                                                    02-DCCCA
00009EF8 20                                15118+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009EF9 03                                15119+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009EFA 03                                15120+         dc al1(3)                                                      02-DCCCA
00009EFB 08                                15121+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009EFC 00                                15122+         dc bl.8'00000000'                                              02-DCCCA
00009EFD 000000                            15123+         dc al3(0)                                                      02-DCCCA
00009F00 0000000000009EB0                  15124+         dc ad(@LNAME2015)                                              02-DCCCA
00009F08                                   15125+         ds 0d                                                          02-DCCCA
00009F08 0000000000009ED0                  15126+         dc ad($eye0240)                                                02-DCCCA
00009F10 0000000000000000                  15127+         dc ad(0)                                                       02-DCCCA
00009F18                                   15128+         ds    0d                                                       01-DCCPR
00009F18                                   15129+rd_kafka_txn_curr_api_reset ds 0d                                       01-DCCPR
00009F18                                   15130+@REGION_2015_1 ds 0h                                                    01-DCCPR
00009F18 EBEC D008 0024          00000008  15131+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009F1E E3E0 D088 0004          00000088  15132+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00009F24 E3C0 D090 0004          00000090  15133+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009F2A B904 002E                         15134+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009F2E E3B0 C018 0004          00000018  15135+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00009F34 A7EB 00C8               000000C8  15136+         aghi  14,200              increase by frame size               01-DCCPR
00009F38 E3E0 C020 0021          00000020  15137+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009F3E 4720 B020               00000020  15138+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00009F42                                   15139+@PER_2015 ds   0h                                                       01-DCCPR
00009F42 EBDE 2080 0024          00000080  15140+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009F48 E3C0 2090 0024          00000090  15141+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009F4E B904 00D2                         15142+         lgr   13,2                set real frame pointer               01-DCCPR
00009F52 B904 00CF                         15143+         lgr   12,15               set base reg                         01-DCCPR
                        00009F18           15144+         using @REGION_2015_1,12                                        01-DCCPR
00009F56 B904 0041                         15145          LGR   4,1         ; ptr to parm area
                                           15146 * ******* End of Prologue
                                           15147 * *
00009F5A E320 4000 0004          00000000  15148          LG    2,0(0,4)    ; rk
                                           15149 * ***           rd_bool_t timer_was_stopped;
                                           15150 * ***           rd_kafka_q_t *rkq;
                                           15151 * ***
                                           15152 * ***
                                           15153 * ***           rkq = rk->rk_eos.txn_curr_api.tmr.rtmr_arg;
00009F60 E330 2DF8 0004          00000DF8  15154          LG    3,3576(0,2) ; offset of rtmr_arg in rd_kafka_timer_s
                                           15155 * ***           timer_was_stopped = rd_kafka_timer_stop(
                                           15156 * ***                   &rk->rk_timers,
                                           15157 * ***                   &rk->rk_eos.txn_curr_api.tmr,
                                           15158 * ***                   RD_DO_LOCK);
                                                                                                                           Page  305 
  Active Usings: @REGION_2015_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009F66 A7F9 1010               00001010  15159          LGHI  15,4112     ; 4112
00009F6A 41FF 2000               00000000  15160          LA    15,0(15,2)
00009F6E E3F0 D0B0 0024          000000B0  15161          STG   15,176(0,13)
00009F74 41F0 2DC8               00000DC8  15162          LA    15,3528(0,2)
00009F78 E3F0 D0B8 0024          000000B8  15163          STG   15,184(0,13)
00009F7E E548 D0C0 0001          000000C0  15164          MVGHI 192(13),1
00009F84 4110 D0B0               000000B0  15165          LA    1,176(0,13)
00009F88 E3F0 C110 0004          0000A028  15166          LG    15,@lit_2015_698 ; rd_kafka_timer_stop
00009F8E                                   15167 @@gen_label957 DS    0H
00009F8E 05EF                              15168          BALR  14,15
00009F90                                   15169 @@gen_label958 DS    0H
00009F90 42F0 D0A8               000000A8  15170          STC   15,168(0,13) ; timer_was_stopped
                                           15171 * ***
                                           15172 * ***           if (rkq && timer_was_stopped) {
00009F94 B902 0013                         15173          LTGR  1,3
00009F98 4780 C0A8               00009FC0  15174          BZ    @L1207
00009F9C C0FB 0000 00FF                    15175          NILF  15,X'000000FF'
00009FA2 12FF                              15176          LTR   15,15
00009FA4 4780 C0A8               00009FC0  15177          BZ    @L1207
                                           15178 * ***
                                           15179 * ***
                                           15180 * ***
                                           15181 * ***                   rd_kafka_q_destroy0(rkq, 0 );
00009FA8 E330 D0B0 0024          000000B0  15182          STG   3,176(0,13)
00009FAE D707 D0B8 D0B8 000000B8 000000B8  15183          XC    184(8,13),184(13)
00009FB4 4110 D0B0               000000B0  15184          LA    1,176(0,13)
00009FB8 E3F0 C118 0004          0000A030  15185          LG    15,@lit_2015_699 ; rd_kafka_q_destroy0
00009FBE                                   15186 @@gen_label961 DS    0H
00009FBE 05EF                              15187          BALR  14,15
00009FC0                                   15188 @@gen_label962 DS    0H
                                           15189 * ***           }
00009FC0                                   15190 @L1207   DS    0H
                                           15191 * ***
                                           15192 * ***
                                           15193 * ***           if (for_reuse)
00009FC0 9500 400F      0000000F 00000000  15194          CLI   15(4),0
00009FC4 4770 C0BA               00009FD2  15195          BNE   @ret_lab_2015
                                           15196 * ***                   return;
00009FC8                                   15197 @L1208   DS    0H
                                           15198 * ***
                                           15199 * ***           *rk->rk_eos.txn_curr_api.name = '\0';
00009FC8 9200 2D88      00000D88 00000000  15200          MVI   3464(2),0   ; offset of txn_curr_api in 0000146
                                           15201 * ***           rk->rk_eos.txn_curr_api.flags = 0;
00009FCC E54C 2E00 0000          00000E00  15202          MVHI  3584(2),0   ; offset of flags in 0000147
                                           15203 * ***   }
00009FD2                                   15204 @ret_lab_2015 DS 0H
                                           15205 * * **** Start of Epilogue
                                           15206          DCCEPIL
00009FD2                                   15207+         ds 0h                                                          01-DCCEP
                                           15208+* Epilog
00009FD2 D707 D088 D088 00000088 00000088  15209+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009FD8 E3D0 D080 0004          00000080  15210+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  306 
  Active Usings: @REGION_2015_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00009FDE E3C0 D090 0004          00000090  15211+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00009FE4 E3B0 C018 0004          00000018  15212+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009FEA E3C0 B010 0021          00000010  15213+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009FF0 E3E0 D008 0004          00000008  15214+         lg  14,8(0,13)          load up return address                 01-DCCEP
00009FF6 EB1C D020 0004          00000020  15215+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009FFC 078E                              15216+         bcr 8,14                if same dsab, just return              01-DCCEP
00009FFE E3F0 D010 0024          00000010  15217+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A004 E300 D018 0024          00000018  15218+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A00A E3F0 D090 0004          00000090  15219+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A010 E3F0 F018 0004          00000018  15220+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A016 47F0 F040               00000040  15221+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15222+* End of Epilog
                                           15223 * * **** End of Epilogue
0000A020                                   15224          DS    0D
0000A020 000000C8                          15225 @FRAMESIZE_2015 DC F'200'
0000A024 00000000
0000A028 0000000000000000                  15226 @lit_2015_698 DC AD(rd_kafka_timer_stop)
0000A030 0000000000001FC8                  15227 @lit_2015_699 DC AD(rd_kafka_q_destroy0)
                                           15228          DROP  12
                                           15229 *
                                           15230 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_reset"
                                           15231 *      (FUNCTION #2015)
                                           15232 *
00000000                00000000 000000A9  15233 @AUTO#rd_kafka_txn_curr_api_reset DSECT
00000000                                   15234          DS    XL168
000000A8                                   15235 rd_kafka_txn_curr_api_reset#timer_was_stopped#0 DS 1CL1 ; timer_was_sto*
                                                                pped
                                           15236 *
0000A038                00000000 00014658  15237 @CODE    CSECT
                                           15238 *
                                           15239 *
                                           15240 *
                                           15241 * ....... start of rd_kafka_txn_curr_api_req
0000A038                                   15242 @LNAME2016 DS  0H
0000A038 00000019                          15243          DC    X'00000019'
0000A03C 99846D9281869281                  15244          DC    C'rd_kafka_txn_curr_api_req'
0000A055 00                                15245          DC    X'00'
                                           15246 rd_kafka_txn_curr_api_req DCCPRLG CINDEX=2016,BASER=12,FRAME=256,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME2016
                                           15247          macro
                                           15248          dccextrn &m
                                           15249          gblc    &$dccext(1000)
                                           15250          gbla    &$dccexti
                                           15251          lcla    &i
                                           15252 &$dccext(&$dccexti+1) setc    '&m'
                                           15253 &i       seta    1
                                           15254 .loop    aif    (&i gt &$dccexti).around
                                           15255          aif    ('&$dccext(&i)' eq '&m').getout
                                           15256 &i       seta    &i+1
                                           15257          ago     .loop
                                           15258 .around  anop
                                           15259 &$dccexti seta &$dccexti+1
                                                                                                                           Page  307 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           15260          extrn  &m
                                           15261 .getout  anop
                                           15262          mend
0000A058                                   15263+$eye0243    ds    0d                                                    02-DCCCA
0000A058 C4C3C3                            15264+         dc cl3'DCC'                                                    02-DCCCA
0000A05B 01                                15265+         dc xl1'01' format one                                          02-DCCCA
0000A05C 00000000                          15266+         dc a(0)                                                        02-DCCCA
0000A060 000000000000A0CA                  15267+         dc ad(@PER_2016)                                               02-DCCCA
0000A068 0000000000000100                  15268+         dc ad(256)                                                     02-DCCCA
0000A070 0000000000000000                  15269+         dc ad(0)                                                       02-DCCCA
0000A078 0000000000001000                  15270+         dc ad(4096)                                                    02-DCCCA
0000A080 20                                15271+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A081 03                                15272+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A082 03                                15273+         dc al1(3)                                                      02-DCCCA
0000A083 08                                15274+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A084 00                                15275+         dc bl.8'00000000'                                              02-DCCCA
0000A085 000000                            15276+         dc al3(0)                                                      02-DCCCA
0000A088 000000000000A038                  15277+         dc ad(@LNAME2016)                                              02-DCCCA
0000A090                                   15278+         ds 0d                                                          02-DCCCA
0000A090 000000000000A058                  15279+         dc ad($eye0243)                                                02-DCCCA
0000A098 0000000000000000                  15280+         dc ad(0)                                                       02-DCCCA
0000A0A0                                   15281+         ds    0d                                                       01-DCCPR
0000A0A0                                   15282+rd_kafka_txn_curr_api_req ds 0d                                         01-DCCPR
0000A0A0                                   15283+@REGION_2016_1 ds 0h                                                    01-DCCPR
0000A0A0 EBEC D008 0024          00000008  15284+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A0A6 E3E0 D088 0004          00000088  15285+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A0AC E3C0 D090 0004          00000090  15286+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A0B2 B904 002E                         15287+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A0B6 E3B0 C018 0004          00000018  15288+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A0BC A7EB 0100               00000100  15289+         aghi  14,256              increase by frame size               01-DCCPR
0000A0C0 E3E0 C020 0021          00000020  15290+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A0C6 4720 B020               00000020  15291+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A0CA                                   15292+@PER_2016 ds   0h                                                       01-DCCPR
0000A0CA EBDE 2080 0024          00000080  15293+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A0D0 E3C0 2090 0024          00000090  15294+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A0D6 B904 00D2                         15295+         lgr   13,2                set real frame pointer               01-DCCPR
0000A0DA B904 00CF                         15296+         lgr   12,15               set base reg                         01-DCCPR
                        0000A0A0           15297+         using @REGION_2016_1,12                                        01-DCCPR
0000A0DE B904 0071                         15298          LGR   7,1         ; ptr to parm area
                                           15299 * ******* End of Prologue
                                           15300 * *
0000A0E2 E350 7000 0004          00000000  15301          LG    5,0(0,7)    ; rk
0000A0E8 E330 7008 0004          00000008  15302          LG    3,8(0,7)    ; name
0000A0EE 5840 701C               0000001C  15303          L     4,28(0,7)   ; timeout_ms
0000A0F2 5820 7024               00000024  15304          L     2,36(0,7)   ; flags
                                           15305 * ***           rd_kafka_op_t *reply;
                                           15306 * ***           rd_bool_t reuse = 0;
0000A0F6 9200 D0A8      000000A8 00000000  15307          MVI   168(13),0   ; reuse
                                           15308 * ***           rd_bool_t for_reuse;
                                           15309 * ***           rd_kafka_q_t *tmpq = ((void *)0);
                                           15310 * ***           rd_kafka_error_t *error = ((void *)0);
                                           15311 * ***
                                                                                                                           Page  308 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           15312 * ***
                                           15313 * ***
                                           15314 * ***           if (!__strncmp(name,"rd_kafka_",__strlen("rd_kafka_"))\
                                           15315 * )
0000A0FA E3F0 C098 0004          0000A138  15316          LG    15,@lit_2016_703
0000A100 41F0 F954               00000954  15317          LA    15,2388(0,15)
0000A104 B904 0013                         15318          LGR   1,3
0000A108 A769 0009               00000009  15319          LGHI  6,9         ; 9
0000A10C A789 0000               00000000  15320          LGHI  8,0
0000A110                                   15321 @@gen_label965 DS 0H
0000A110 D500 1000 F000 00000000 00000000  15322          CLC   0(1,1),0(15)
0000A116 4780 C140               0000A1E0  15323          BE    @@gen_label966
0000A11A 4380 1000               00000000  15324          IC    8,0(0,1)
0000A11E E310 F000 0090          00000000  15325          LLGC  1,0(0,15)
0000A124 B90B 0081                         15326          SLGR  8,1
0000A128 47F0 C15E               0000A1FE  15327          B     @@gen_label964
0000A130                                   15328          DS    0D
0000A130 00000100                          15329 @FRAMESIZE_2016 DC F'256'
0000A134 00000000
0000A138 0000000000014A98                  15330 @lit_2016_703 DC AD(@strings@)
0000A140 0000000000000000                  15331 @lit_2016_705 DC AD(rwlock_wrlock)
0000A148 0000000000004228                  15332 @lit_2016_706 DC AD(rd_kafka_txn_state2str)
0000A150 0000000000004110                  15333 @lit_2016_707 DC AD(rd_kafka_idemp_state2str)
0000A158 0000000000000000                  15334 @lit_2016_710 DC AD(rd_kafka_log0)
0000A160 0000000000000000                  15335 @lit_2016_712 DC AD(rd_kafka_error_new)
0000A168 0000000000000000                  15336 @lit_2016_713 DC AD(rwlock_wrunlock)
0000A170 0000000000000000                  15337 @lit_2016_714 DC AD(rd_kafka_op_destroy)
0000A178 0000000000000000                  15338 @lit_2016_717 DC AD(__assert)
0000A180 0000000000014658                  15339 @lit_2016_715 DC AD(@DATA)
0000A188 0000000000000000                  15340 @lit_2016_719 DC AD(snprintf)
0000A190 0000000000000000                  15341 @lit_2016_721 DC AD(rd_kafka_q_new0)
0000A198 0000000000001D48                  15342 @lit_2016_722 DC AD(rd_kafka_q_keep)
0000A1A0 0000000000009D60                  15343 @lit_2016_723 DC AD(rd_kafka_txn_curr_api_init_timeout_cb)
0000A1A8 00000000000098F8                  15344 @lit_2016_724 DC AD(rd_kafka_txn_curr_api_abort_timeout_cb)
0000A1B0 0000000000009AB8                  15345 @lit_2016_725 DC AD(rd_kafka_txn_curr_api_retriable_timeout_cb)
0000A1B8 0000000000009C10                  15346 @lit_2016_726 DC AD(rd_kafka_txn_curr_api_timeout_cb)
0000A1C0 0000000000000000                  15347 @lit_2016_728 DC AD(rd_kafka_timer_start0)
0000A1C8 0000000000000000                  15348 @lit_2016_730 DC AD(rd_kafka_op_req0)
0000A1D0 00000000000021E0                  15349 @lit_2016_731 DC AD(rd_kafka_q_destroy_owner)
0000A1D8 0000000000009F18                  15350 @lit_2016_734 DC AD(rd_kafka_txn_curr_api_reset)
0000A1E0                                   15351 @@gen_label966 DS 0H
0000A1E0 41F0 F001               00000001  15352          LA    15,1(0,15)
0000A1E4 4380 1000               00000000  15353          IC    8,0(0,1)
0000A1E8 4110 1001               00000001  15354          LA    1,1(0,1)
0000A1EC B902 0088                         15355          LTGR  8,8
0000A1F0 4780 C15E               0000A1FE  15356          BZ    @@gen_label964
0000A1F4 E360 C070 0046          0000A110  15357          BCTG  6,@@gen_label965
0000A1FA A789 0000               00000000  15358          LGHI  8,0
0000A1FE                                   15359 @@gen_label964 DS 0H
0000A1FE 1288                              15360          LTR   8,8
0000A200 4770 C168               0000A208  15361          BNZ   @L1209
                                           15362 * ***                   name += __strlen("rd_kafka_");
                                                                                                                           Page  309 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A204 4130 3009               00000009  15363          LA    3,9(0,3)
0000A208                                   15364 @L1209   DS    0H
                                           15365 * ***
                                           15366 * ***           if (flags & 0x8) {
0000A208 A721 0008               00000008  15367          TML   2,8
0000A20C 4780 C178               0000A218  15368          BZ    @L1210
                                           15369 * ***
                                           15370 * ***                   flags &= ~0x8;
0000A210 A527 FFF7               0000FFF7  15371          NILL  2,65527
                                           15372 * ***                   reuse = 1;
0000A214 9201 D0A8      000000A8 00000001  15373          MVI   168(13),1   ; reuse
                                           15374 * ***           }
0000A218                                   15375 @L1210   DS    0H
                                           15376 * ***
                                           15377 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000A218 41F0 59A0               000009A0  15378          LA    15,2464(0,5)
0000A21C E3F0 D0B0 0024          000000B0  15379          STG   15,176(0,13)
0000A222 4110 D0B0               000000B0  15380          LA    1,176(0,13)
0000A226 E3F0 C0A0 0004          0000A140  15381          LG    15,@lit_2016_705 ; rwlock_wrlock
0000A22C                                   15382 @@gen_label969 DS    0H
0000A22C 05EF                              15383          BALR  14,15
0000A22E                                   15384 @@gen_label970 DS    0H
                                           15385 * ***
                                           15386 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           15387 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNAPI","Transactiona\
                                           15388 * l API called: %s " "(in txn state %s, idemp state %s)", name, rd_kaf\
                                           15389 * ka_txn_state2str(rk->rk_eos.txn_state), rd_kafka_idemp_state2str(rk-\
                                           15390 * >rk_eos.idemp_state)); } while (0);
0000A22E                                   15391 @L1211   DS    0H
0000A22E 9180 5322      00000322 00000080  15392          TM    802(5),128
0000A232 4780 C22A               0000A2CA  15393          BZ    @L1214
0000A236 E3F0 5D38 0014          00000D38  15394          LGF   15,3384(0,5)
0000A23C E3F0 D0B0 0024          000000B0  15395          STG   15,176(0,13)
0000A242 4110 D0B0               000000B0  15396          LA    1,176(0,13)
0000A246 E3F0 C0A8 0004          0000A148  15397          LG    15,@lit_2016_706 ; rd_kafka_txn_state2str
0000A24C                                   15398 @@gen_label972 DS    0H
0000A24C 05EF                              15399          BALR  14,15
0000A24E                                   15400 @@gen_label973 DS    0H
0000A24E B904 006F                         15401          LGR   6,15
0000A252 E3F0 5C70 0014          00000C70  15402          LGF   15,3184(0,5)
0000A258 E3F0 D0B0 0024          000000B0  15403          STG   15,176(0,13)
0000A25E 4110 D0B0               000000B0  15404          LA    1,176(0,13)
0000A262 E3F0 C0B0 0004          0000A150  15405          LG    15,@lit_2016_707 ; rd_kafka_idemp_state2str
0000A268                                   15406 @@gen_label974 DS    0H
0000A268 05EF                              15407          BALR  14,15
0000A26A                                   15408 @@gen_label975 DS    0H
0000A26A 4110 5210               00000210  15409          LA    1,528(0,5)
0000A26E E310 D0B0 0024          000000B0  15410          STG   1,176(0,13)
0000A274 E350 D0B8 0024          000000B8  15411          STG   5,184(0,13)
0000A27A D707 D0C0 D0C0 000000C0 000000C0  15412          XC    192(8,13),192(13)
0000A280 E548 D0C8 0007          000000C8  15413          MVGHI 200(13),7
0000A286 C01F 0000 8000                    15414          LLILF 1,X'00008000' ; 32768
                                                                                                                           Page  310 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A28C E310 D0D0 0024          000000D0  15415          STG   1,208(0,13)
0000A292 E310 C098 0004          0000A138  15416          LG    1,@lit_2016_703
0000A298 4180 195E               0000095E  15417          LA    8,2398(0,1)
0000A29C E380 D0D8 0024          000000D8  15418          STG   8,216(0,13)
0000A2A2 4110 1966               00000966  15419          LA    1,2406(0,1)
0000A2A6 E310 D0E0 0024          000000E0  15420          STG   1,224(0,13)
0000A2AC E330 D0E8 0024          000000E8  15421          STG   3,232(0,13)
0000A2B2 E360 D0F0 0024          000000F0  15422          STG   6,240(0,13)
0000A2B8 E3F0 D0F8 0024          000000F8  15423          STG   15,248(0,13)
0000A2BE 4110 D0B0               000000B0  15424          LA    1,176(0,13)
0000A2C2 E3F0 C0B8 0004          0000A158  15425          LG    15,@lit_2016_710 ; rd_kafka_log0
0000A2C8                                   15426 @@gen_label976 DS    0H
0000A2C8 05EF                              15427          BALR  14,15
0000A2CA                                   15428 @@gen_label977 DS    0H
0000A2CA                                   15429 @L1214   DS    0H
                                           15430 * ***
                                           15431 * ***
                                           15432 * ***
                                           15433 * ***
                                           15434 * ***
                                           15435 * ***
                                           15436 * ***           for_reuse = !!(rk->rk_eos.txn_curr_api.flags &
                                           15437 * ***                          0x4);
0000A2CA 58F0 5E00               00000E00  15438          L     15,3584(0,5) ; offset of flags in 0000147
0000A2CE C0FB 0000 0004                    15439          NILF  15,X'00000004'
0000A2D4 10FF                              15440          LPR   15,15
0000A2D6 13FF                              15441          LCR   15,15
0000A2D8 88F0 001F               0000001F  15442          SRL   15,31(0)
0000A2DC 42F0 D0A9               000000A9  15443          STC   15,169(0,13) ; for_reuse
                                           15444 * ***
                                           15445 * ***           if ((for_reuse && !reuse) ||
0000A2E0 181F                              15446          LR    1,15
0000A2E2 C01B 0000 00FF                    15447          NILF  1,X'000000FF'
0000A2E8 1211                              15448          LTR   1,1
0000A2EA 4780 C256               0000A2F6  15449          BZ    @L1215
0000A2EE 9500 D0A8      000000A8 00000000  15450          CLI   168(13),0
0000A2F2 4780 C26C               0000A30C  15451          BE    @L1217
0000A2F6                                   15452 @L1215   DS    0H
                                           15453 * ***               (!for_reuse && *rk->rk_eos.txn_curr_api.name)) {
0000A2F6 181F                              15454          LR    1,15
0000A2F8 C01B 0000 00FF                    15455          NILF  1,X'000000FF'
0000A2FE 1211                              15456          LTR   1,1
0000A300 4770 C2D2               0000A372  15457          BNZ   @L1216
0000A304 9500 5D88      00000D88 00000000  15458          CLI   3464(5),0
0000A308 4780 C2D2               0000A372  15459          BE    @L1216
0000A30C                                   15460 @L1217   DS    0H
                                           15461 * ***                   error = rd_kafka_error_new(
                                           15462 * ***                           RD_KAFKA_RESP_ERR__STATE,
                                           15463 * ***                           "Conflicting %s call already in progre\
                                           15464 * ss",
                                           15465 * ***                           rk->rk_eos.txn_curr_api.name);
0000A30C E548 D0B0 FF54          000000B0  15466          MVGHI 176(13),-172
                                                                                                                           Page  311 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A312 E3F0 C098 0004          0000A138  15467          LG    15,@lit_2016_703
0000A318 41F0 F9A6               000009A6  15468          LA    15,2470(0,15)
0000A31C E3F0 D0B8 0024          000000B8  15469          STG   15,184(0,13)
0000A322 41F0 5D88               00000D88  15470          LA    15,3464(0,5)
0000A326 E3F0 D0C0 0024          000000C0  15471          STG   15,192(0,13)
0000A32C 4110 D0B0               000000B0  15472          LA    1,176(0,13)
0000A330 E3F0 C0C0 0004          0000A160  15473          LG    15,@lit_2016_712 ; rd_kafka_error_new
0000A336                                   15474 @@gen_label982 DS    0H
0000A336 05EF                              15475          BALR  14,15
0000A338                                   15476 @@gen_label983 DS    0H
0000A338 B904 002F                         15477          LGR   2,15        ; error
                                           15478 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000A33C 41F0 59A0               000009A0  15479          LA    15,2464(0,5)
0000A340 E3F0 D0B0 0024          000000B0  15480          STG   15,176(0,13)
0000A346 4110 D0B0               000000B0  15481          LA    1,176(0,13)
0000A34A E3F0 C0C8 0004          0000A168  15482          LG    15,@lit_2016_713 ; rwlock_wrunlock
0000A350                                   15483 @@gen_label984 DS    0H
0000A350 05EF                              15484          BALR  14,15
0000A352                                   15485 @@gen_label985 DS    0H
                                           15486 * ***                   rd_kafka_op_destroy(rko);
0000A352 E3F0 7010 0004          00000010  15487          LG    15,16(0,7)  ; rko
0000A358 E3F0 D0B0 0024          000000B0  15488          STG   15,176(0,13)
0000A35E 4110 D0B0               000000B0  15489          LA    1,176(0,13)
0000A362 E3F0 C0D0 0004          0000A170  15490          LG    15,@lit_2016_714 ; rd_kafka_op_destroy
0000A368                                   15491 @@gen_label986 DS    0H
0000A368 05EF                              15492          BALR  14,15
0000A36A                                   15493 @@gen_label987 DS    0H
                                           15494 * ***                   return error;
0000A36A B904 00F2                         15495          LGR   15,2
0000A36E 47F0 C516               0000A5B6  15496          B     @ret_lab_2016
                                           15497 * ***           }
0000A372                                   15498 @L1216   DS    0H
                                           15499 * ***
                                           15500 * ***           ((for_reuse == reuse) ? (void)0 : __assert(__func__, "\
                                           15501 * C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c", 1226, "for_reuse =\
                                           15502 * = reuse"));
0000A372 C0FB 0000 00FF                    15503          NILF  15,X'000000FF'
0000A378 E310 D0A8 0094          000000A8  15504          LLC   1,168(0,13) ; reuse
0000A37E 19F1                              15505          CR    15,1
0000A380 4780 C320               0000A3C0  15506          BE    @L1219
0000A384                                   15507 @L1218   DS    0H
0000A384 E3F0 C0E0 0004          0000A180  15508          LG    15,@lit_2016_715
0000A38A 41F0 F26E               0000026E  15509          LA    15,622(0,15)
0000A38E E3F0 D0B0 0024          000000B0  15510          STG   15,176(0,13)
0000A394 E3F0 C098 0004          0000A138  15511          LG    15,@lit_2016_703
0000A39A 4110 F1B2               000001B2  15512          LA    1,434(0,15)
0000A39E E310 D0B8 0024          000000B8  15513          STG   1,184(0,13)
0000A3A4 E548 D0C0 04CA          000000C0  15514          MVGHI 192(13),1226
0000A3AA 41F0 F9CE               000009CE  15515          LA    15,2510(0,15)
0000A3AE E3F0 D0C8 0024          000000C8  15516          STG   15,200(0,13)
0000A3B4 4110 D0B0               000000B0  15517          LA    1,176(0,13)
0000A3B8 E3F0 C0D8 0004          0000A178  15518          LG    15,@lit_2016_717 ; __assert
                                                                                                                           Page  312 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A3BE                                   15519 @@gen_label989 DS    0H
0000A3BE 05EF                              15520          BALR  14,15
0000A3C0                                   15521 @@gen_label990 DS    0H
0000A3C0                                   15522 @L1219   DS    0H
                                           15523 * ***
                                           15524 * ***           snprintf(rk->rk_eos.txn_curr_api.name, sizeof(rk->rk_e\
                                           15525 * os.txn_curr_api.name), "%s", name);
0000A3C0 41F0 5D88               00000D88  15526          LA    15,3464(0,5)
0000A3C4 E3F0 D0B0 0024          000000B0  15527          STG   15,176(0,13)
0000A3CA E548 D0B8 0040          000000B8  15528          MVGHI 184(13),64
0000A3D0 E380 C098 0004          0000A138  15529          LG    8,@lit_2016_703
0000A3D6 41F0 8122               00000122  15530          LA    15,290(0,8)
0000A3DA E3F0 D0C0 0024          000000C0  15531          STG   15,192(0,13)
0000A3E0 E330 D0C8 0024          000000C8  15532          STG   3,200(0,13)
0000A3E6 4110 D0B0               000000B0  15533          LA    1,176(0,13)
0000A3EA E3F0 C0E8 0004          0000A188  15534          LG    15,@lit_2016_719 ; snprintf
0000A3F0                                   15535 @@gen_label991 DS    0H
0000A3F0 05EF                              15536          BALR  14,15
0000A3F2                                   15537 @@gen_label992 DS    0H
                                           15538 * ***
                                           15539 * ***
                                           15540 * ***
                                           15541 * ***           tmpq = rd_kafka_q_new0(rk,__FUNCTION__,1232);
0000A3F2 E350 D0B0 0024          000000B0  15542          STG   5,176(0,13)
0000A3F8 E3F0 C0E0 0004          0000A180  15543          LG    15,@lit_2016_715
0000A3FE 41F0 F26E               0000026E  15544          LA    15,622(0,15)
0000A402 E3F0 D0B8 0024          000000B8  15545          STG   15,184(0,13)
0000A408 E548 D0C0 04D0          000000C0  15546          MVGHI 192(13),1232
0000A40E 4110 D0B0               000000B0  15547          LA    1,176(0,13)
0000A412 E3F0 C0F0 0004          0000A190  15548          LG    15,@lit_2016_721 ; rd_kafka_q_new0
0000A418                                   15549 @@gen_label993 DS    0H
0000A418 05EF                              15550          BALR  14,15
0000A41A                                   15551 @@gen_label994 DS    0H
0000A41A B904 006F                         15552          LGR   6,15
                                           15553 * ***
                                           15554 * ***           rk->rk_eos.txn_curr_api.flags |= flags;
0000A41E 18F2                              15555          LR    15,2
0000A420 56F0 5E00               00000E00  15556          O     15,3584(0,5)
0000A424 50F0 5E00               00000E00  15557          ST    15,3584(0,5)
                                           15558 * ***
                                           15559 * ***
                                           15560 * ***
                                           15561 * ***
                                           15562 * ***           for_reuse = !!(flags & 0x4);
0000A428 18F2                              15563          LR    15,2
0000A42A C0FB 0000 0004                    15564          NILF  15,X'00000004'
0000A430 10FF                              15565          LPR   15,15
0000A432 13FF                              15566          LCR   15,15
0000A434 88F0 001F               0000001F  15567          SRL   15,31(0)
0000A438 42F0 D0A9               000000A9  15568          STC   15,169(0,13) ; for_reuse
                                           15569 * ***
                                           15570 * ***
                                                                                                                           Page  313 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           15571 * ***           if (timeout_ms < 0)
0000A43C 1244                              15572          LTR   4,4
0000A43E 47B0 C3A6               0000A446  15573          BNL   @L1220
                                           15574 * ***                   timeout_ms = rk->rk_conf.eos.transaction_timeo\
                                           15575 * ut_ms;
0000A442 5840 57F0               000007F0  15576          L     4,2032(0,5) ; offset of transaction_timeout_ms in 000010*
                                                                5
0000A446                                   15577 @L1220   DS    0H
                                           15578 * ***
                                           15579 * ***           if (timeout_ms >= 0) {
0000A446 1244                              15580          LTR   4,4
0000A448 4740 C46A               0000A50A  15581          BL    @L1221
                                           15582 * ***                   rd_kafka_q_keep(tmpq);
0000A44C E360 D0B0 0024          000000B0  15583          STG   6,176(0,13)
0000A452 4110 D0B0               000000B0  15584          LA    1,176(0,13)
0000A456 E3F0 C0F8 0004          0000A198  15585          LG    15,@lit_2016_722 ; rd_kafka_q_keep
0000A45C                                   15586 @@gen_label997 DS    0H
0000A45C 05EF                              15587          BALR  14,15
0000A45E                                   15588 @@gen_label998 DS    0H
                                           15589 * ***                   rd_kafka_timer_start0(&rk->rk_timers,&rk->rk_e\
                                           15590 * os.txn_curr_api.tmr,timeout_ms * 1000,1,1,!__strcmp(name,"init_trans\
                                           15591 * actions") ? rd_kafka_txn_curr_api_init_timeout_cb : (flags & 0x1 ? r\
                                           15592 * d_kafka_txn_curr_api_abort_timeout_cb : (flags & 0x2 ? rd_kafka_txn_\
                                           15593 * curr_api_retriable_timeout_cb : rd_kafka_txn_curr_api_timeout_cb)),t\
                                           15594 * mpq);
0000A45E 41F0 89E2               000009E2  15595          LA    15,2530(0,8)
0000A462 4100 0000               00000000  15596          LA    0,0(0,0)
0000A466 A719 0000               00000000  15597          LGHI  1,0
0000A46A                                   15598 @@gen_label999 DS 0H
0000A46A B25D 003F                         15599          CLST  3,15
0000A46E 4710 C3CA               0000A46A  15600          BC  1,@@gen_label999
0000A472 4780 C3E6               0000A486  15601          BE    @@gen_label1000
0000A476 E310 3000 0090          00000000  15602          LLGC  1,0(0,3)
0000A47C E330 F000 0090          00000000  15603          LLGC  3,0(0,15)
0000A482 B90B 0013                         15604          SLGR  1,3
0000A486                                   15605 @@gen_label1000 DS 0H
0000A486 1211                              15606          LTR   1,1
0000A488 4770 C3F6               0000A496  15607          BNZ   @L1222
0000A48C E3F0 C100 0004          0000A1A0  15608          LG    15,@lit_2016_723 ; rd_kafka_txn_curr_api_init_timeout_cb
0000A492 47F0 C420               0000A4C0  15609          B     @L1227
0000A496                                   15610 @L1222   DS    0H
0000A496 A721 0001               00000001  15611          TML   2,1
0000A49A 4780 C408               0000A4A8  15612          BZ    @L1223
0000A49E E3F0 C108 0004          0000A1A8  15613          LG    15,@lit_2016_724 ; rd_kafka_txn_curr_api_abort_timeout_c*
                                                                b
0000A4A4 47F0 C420               0000A4C0  15614          B     @L1226
0000A4A8                                   15615 @L1223   DS    0H
0000A4A8 A721 0002               00000002  15616          TML   2,2
0000A4AC 4780 C41A               0000A4BA  15617          BZ    @L1224
0000A4B0 E3F0 C110 0004          0000A1B0  15618          LG    15,@lit_2016_725 ; rd_kafka_txn_curr_api_retriable_timeo*
                                                                ut_cb
0000A4B6 47F0 C420               0000A4C0  15619          B     @L1225
                                                                                                                           Page  314 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A4BA                                   15620 @L1224   DS    0H
0000A4BA E3F0 C118 0004          0000A1B8  15621          LG    15,@lit_2016_726 ; rd_kafka_txn_curr_api_timeout_cb
0000A4C0                                   15622 @L1225   DS    0H
0000A4C0                                   15623 @L1226   DS    0H
0000A4C0                                   15624 @L1227   DS    0H
0000A4C0 A719 1010               00001010  15625          LGHI  1,4112      ; 4112
0000A4C4 4111 5000               00000000  15626          LA    1,0(1,5)
0000A4C8 E310 D0B0 0024          000000B0  15627          STG   1,176(0,13)
0000A4CE 4110 5DC8               00000DC8  15628          LA    1,3528(0,5)
0000A4D2 E310 D0B8 0024          000000B8  15629          STG   1,184(0,13)
0000A4D8 A74C 03E8               000003E8  15630          MHI   4,1000
0000A4DC B914 0014                         15631          LGFR  1,4
0000A4E0 E310 D0C0 0024          000000C0  15632          STG   1,192(0,13)
0000A4E6 E548 D0C8 0001          000000C8  15633          MVGHI 200(13),1
0000A4EC E548 D0D0 0001          000000D0  15634          MVGHI 208(13),1
0000A4F2 E3F0 D0D8 0024          000000D8  15635          STG   15,216(0,13)
0000A4F8 E360 D0E0 0024          000000E0  15636          STG   6,224(0,13)
0000A4FE 4110 D0B0               000000B0  15637          LA    1,176(0,13)
0000A502 E3F0 C120 0004          0000A1C0  15638          LG    15,@lit_2016_728 ; rd_kafka_timer_start0
0000A508                                   15639 @@gen_label1004 DS    0H
0000A508 05EF                              15640          BALR  14,15
0000A50A                                   15641 @@gen_label1005 DS    0H
                                           15642 * ***   # 1260 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           15643 * ***           }
0000A50A                                   15644 @L1221   DS    0H
                                           15645 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000A50A 41F0 59A0               000009A0  15646          LA    15,2464(0,5)
0000A50E E3F0 D0B0 0024          000000B0  15647          STG   15,176(0,13)
0000A514 4110 D0B0               000000B0  15648          LA    1,176(0,13)
0000A518 E3F0 C0C8 0004          0000A168  15649          LG    15,@lit_2016_713 ; rwlock_wrunlock
0000A51E                                   15650 @@gen_label1006 DS    0H
0000A51E 05EF                              15651          BALR  14,15
0000A520                                   15652 @@gen_label1007 DS    0H
                                           15653 * ***
                                           15654 * ***
                                           15655 * ***           reply = rd_kafka_op_req0(rk->rk_ops, tmpq, rko, -1);
0000A520 E3F0 5008 0004          00000008  15656          LG    15,8(0,5)
0000A526 E3F0 D0B0 0024          000000B0  15657          STG   15,176(0,13)
0000A52C E360 D0B8 0024          000000B8  15658          STG   6,184(0,13)
0000A532 E3F0 7010 0004          00000010  15659          LG    15,16(0,7)  ; rko
0000A538 E3F0 D0C0 0024          000000C0  15660          STG   15,192(0,13)
0000A53E E548 D0C8 FFFF          000000C8  15661          MVGHI 200(13),-1
0000A544 4110 D0B0               000000B0  15662          LA    1,176(0,13)
0000A548 E3F0 C128 0004          0000A1C8  15663          LG    15,@lit_2016_730 ; rd_kafka_op_req0
0000A54E                                   15664 @@gen_label1008 DS    0H
0000A54E 05EF                              15665          BALR  14,15
0000A550                                   15666 @@gen_label1009 DS    0H
0000A550 B904 003F                         15667          LGR   3,15
                                           15668 * ***
                                           15669 * ***           rd_kafka_q_destroy_owner(tmpq);
0000A554 E360 D0B0 0024          000000B0  15670          STG   6,176(0,13)
0000A55A 4110 D0B0               000000B0  15671          LA    1,176(0,13)
                                                                                                                           Page  315 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A55E E3F0 C130 0004          0000A1D0  15672          LG    15,@lit_2016_731 ; rd_kafka_q_destroy_owner
0000A564                                   15673 @@gen_label1010 DS    0H
0000A564 05EF                              15674          BALR  14,15
0000A566                                   15675 @@gen_label1011 DS    0H
                                           15676 * ***
                                           15677 * ***           if ((error = reply->rko_error)) {
0000A566 E320 3028 0004          00000028  15678          LG    2,40(0,3)   ; offset of rko_error in rd_kafka_op_s
0000A56C B902 00F2                         15679          LTGR  15,2
0000A570 4780 C4E2               0000A582  15680          BZ    @L1228
                                           15681 * ***                   reply->rko_error = ((void *)0);
0000A574 A7F9 0000               00000000  15682          LGHI  15,0        ; 0
0000A578 E3F0 3028 0024          00000028  15683          STG   15,40(0,3)  ; offset of rko_error in rd_kafka_op_s
                                           15684 * ***                   for_reuse = 0;
0000A57E 9200 D0A9      000000A9 00000000  15685          MVI   169(13),0   ; for_reuse
                                           15686 * ***           }
0000A582                                   15687 @L1228   DS    0H
                                           15688 * ***
                                           15689 * ***           rd_kafka_op_destroy(reply);
0000A582 E330 D0B0 0024          000000B0  15690          STG   3,176(0,13)
0000A588 4110 D0B0               000000B0  15691          LA    1,176(0,13)
0000A58C E3F0 C0D0 0004          0000A170  15692          LG    15,@lit_2016_714 ; rd_kafka_op_destroy
0000A592                                   15693 @@gen_label1013 DS    0H
0000A592 05EF                              15694          BALR  14,15
0000A594                                   15695 @@gen_label1014 DS    0H
                                           15696 * ***
                                           15697 * ***           rd_kafka_txn_curr_api_reset(rk, for_reuse);
0000A594 E350 D0B0 0024          000000B0  15698          STG   5,176(0,13)
0000A59A E3F0 D0A9 0090          000000A9  15699          LLGC  15,169(0,13) ; for_reuse
0000A5A0 E3F0 D0B8 0024          000000B8  15700          STG   15,184(0,13)
0000A5A6 4110 D0B0               000000B0  15701          LA    1,176(0,13)
0000A5AA E3F0 C138 0004          0000A1D8  15702          LG    15,@lit_2016_734 ; rd_kafka_txn_curr_api_reset
0000A5B0                                   15703 @@gen_label1015 DS    0H
0000A5B0 05EF                              15704          BALR  14,15
0000A5B2                                   15705 @@gen_label1016 DS    0H
                                           15706 * ***
                                           15707 * ***           return error;
0000A5B2 B904 00F2                         15708          LGR   15,2
                                           15709 * ***   }
0000A5B6                                   15710 @ret_lab_2016 DS 0H
                                           15711 * * **** Start of Epilogue
                                           15712          DCCEPIL
0000A5B6                                   15713+         ds 0h                                                          01-DCCEP
                                           15714+* Epilog
0000A5B6 D707 D088 D088 00000088 00000088  15715+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A5BC E3D0 D080 0004          00000080  15716+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A5C2 E3C0 D090 0004          00000090  15717+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A5C8 E3B0 C018 0004          00000018  15718+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A5CE E3C0 B010 0021          00000010  15719+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A5D4 E3E0 D008 0004          00000008  15720+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A5DA EB1C D020 0004          00000020  15721+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A5E0 078E                              15722+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A5E2 E3F0 D010 0024          00000010  15723+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page  316 
  Active Usings: @REGION_2016_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A5E8 E300 D018 0024          00000018  15724+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A5EE E3F0 D090 0004          00000090  15725+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A5F4 E3F0 F018 0004          00000018  15726+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A5FA 47F0 F040               00000040  15727+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15728+* End of Epilog
                                           15729 * * **** End of Epilogue
                                           15730          DROP  12
                                           15731 *
                                           15732 *   DSECT for automatic variables in "rd_kafka_txn_curr_api_req"
                                           15733 *      (FUNCTION #2016)
                                           15734 *
00000000                00000000 000000AA  15735 @AUTO#rd_kafka_txn_curr_api_req DSECT
00000000                                   15736          DS    XL168
000000A8                                   15737 rd_kafka_txn_curr_api_req#reuse#0 DS 1CL1 ; reuse
000000A9                                   15738 rd_kafka_txn_curr_api_req#for_reuse#0 DS 1CL1 ; for_reuse
                                           15739 *
0000A5FE                00000000 00014658  15740 @CODE    CSECT
                                           15741 *
                                           15742 *
                                           15743 *
                                           15744 * ....... start of rd_kafka_txn_op_init_transactions
0000A5FE                                   15745 @LNAME2017 DS  0H
0000A5FE 00000021                          15746          DC    X'00000021'
0000A602 99846D9281869281                  15747          DC    C'rd_kafka_txn_op_init_transaction'
0000A622 A2                                15748          DC    C's'
0000A623 00                                15749          DC    X'00'
                                           15750 rd_kafka_txn_op_init_transactions DCCPRLG CINDEX=2017,BASER=12,FRAME=20*
                                                                0,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2017
                                           15751          macro
                                           15752          dccextrn &m
                                           15753          gblc    &$dccext(1000)
                                           15754          gbla    &$dccexti
                                           15755          lcla    &i
                                           15756 &$dccext(&$dccexti+1) setc    '&m'
                                           15757 &i       seta    1
                                           15758 .loop    aif    (&i gt &$dccexti).around
                                           15759          aif    ('&$dccext(&i)' eq '&m').getout
                                           15760 &i       seta    &i+1
                                           15761          ago     .loop
                                           15762 .around  anop
                                           15763 &$dccexti seta &$dccexti+1
                                           15764          extrn  &m
                                           15765 .getout  anop
                                           15766          mend
0000A628                                   15767+$eye0246    ds    0d                                                    02-DCCCA
0000A628 C4C3C3                            15768+         dc cl3'DCC'                                                    02-DCCCA
0000A62B 01                                15769+         dc xl1'01' format one                                          02-DCCCA
0000A62C 00000000                          15770+         dc a(0)                                                        02-DCCCA
0000A630 000000000000A69A                  15771+         dc ad(@PER_2017)                                               02-DCCCA
0000A638 00000000000000C8                  15772+         dc ad(200)                                                     02-DCCCA
0000A640 0000000000000000                  15773+         dc ad(0)                                                       02-DCCCA
0000A648 0000000000001000                  15774+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page  317 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A650 20                                15775+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A651 03                                15776+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A652 03                                15777+         dc al1(3)                                                      02-DCCCA
0000A653 08                                15778+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A654 00                                15779+         dc bl.8'00000000'                                              02-DCCCA
0000A655 000000                            15780+         dc al3(0)                                                      02-DCCCA
0000A658 000000000000A5FE                  15781+         dc ad(@LNAME2017)                                              02-DCCCA
0000A660                                   15782+         ds 0d                                                          02-DCCCA
0000A660 000000000000A628                  15783+         dc ad($eye0246)                                                02-DCCCA
0000A668 0000000000000000                  15784+         dc ad(0)                                                       02-DCCCA
0000A670                                   15785+         ds    0d                                                       01-DCCPR
0000A670                                   15786+rd_kafka_txn_op_init_transactions ds 0d                                 01-DCCPR
0000A670                                   15787+@REGION_2017_1 ds 0h                                                    01-DCCPR
0000A670 EBEC D008 0024          00000008  15788+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A676 E3E0 D088 0004          00000088  15789+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A67C E3C0 D090 0004          00000090  15790+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A682 B904 002E                         15791+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A686 E3B0 C018 0004          00000018  15792+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A68C A7EB 00C8               000000C8  15793+         aghi  14,200              increase by frame size               01-DCCPR
0000A690 E3E0 C020 0021          00000020  15794+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A696 4720 B020               00000020  15795+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A69A                                   15796+@PER_2017 ds   0h                                                       01-DCCPR
0000A69A EBDE 2080 0024          00000080  15797+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A6A0 E3C0 2090 0024          00000090  15798+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A6A6 B904 00D2                         15799+         lgr   13,2                set real frame pointer               01-DCCPR
0000A6AA B904 00CF                         15800+         lgr   12,15               set base reg                         01-DCCPR
                        0000A670           15801+         using @REGION_2017_1,12                                        01-DCCPR
                                           15802 * ******* End of Prologue
                                           15803 * *
0000A6AE E320 1000 0004          00000000  15804          LG    2,0(0,1)    ; rk
0000A6B4 E330 1010 0004          00000010  15805          LG    3,16(0,1)   ; rko
                                           15806 * ***           rd_kafka_error_t *error;
                                           15807 * ***
                                           15808 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000A6BA E55C 3020 FF3B          00000020  15809          CHSI  32(3),-197
0000A6C0 4770 C0A8               0000A718  15810          BNE   @L1229
                                           15811 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000A6C4 A7F9 0001               00000001  15812          LGHI  15,1        ; 1
0000A6C8 47F0 C20A               0000A87A  15813          B     @ret_lab_2017
0000A6D0                                   15814          DS    0D
0000A6D0 000000C8                          15815 @FRAMESIZE_2017 DC F'200'
0000A6D4 00000000
0000A6D8 0000000000000000                  15816 @lit_2017_737 DC AD(rwlock_wrlock)
0000A6E0 0000000000004700                  15817 @lit_2017_738 DC AD(rd_kafka_txn_require_states0)
0000A6E8 0000000000000000                  15818 @lit_2017_739 DC AD(rwlock_wrunlock)
0000A6F0 0000000000004DE8                  15819 @lit_2017_741 DC AD(rd_kafka_txn_set_state)
0000A6F8 0000000000001FC8                  15820 @lit_2017_742 DC AD(rd_kafka_q_destroy0)
0000A700 0000000000001D48                  15821 @lit_2017_743 DC AD(rd_kafka_q_keep)
0000A708 0000000000000000                  15822 @lit_2017_745 DC AD(rd_kafka_idemp_start)
0000A710 00000000000058A0                  15823 @lit_2017_748 DC AD(rd_kafka_txn_curr_api_reply_error)
0000A718                                   15824 @L1229   DS    0H
                                           15825 * ***
                                                                                                                           Page  318 
  Active Usings: @REGION_2017_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           15826 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000A718 41F0 29A0               000009A0  15827          LA    15,2464(0,2)
0000A71C E3F0 D0B8 0024          000000B8  15828          STG   15,184(0,13)
0000A722 4110 D0B8               000000B8  15829          LA    1,184(0,13)
0000A726 E3F0 C068 0004          0000A6D8  15830          LG    15,@lit_2017_737 ; rwlock_wrlock
0000A72C                                   15831 @@gen_label1018 DS    0H
0000A72C 05EF                              15832          BALR  14,15
0000A72E                                   15833 @@gen_label1019 DS    0H
                                           15834 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           15835 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_INIT, RD_KAFKA_TXN_STATE_WAIT_P\
                                           15836 * ID, RD_KAFKA_TXN_STATE_READY_NOT_ACKED, -1 }))) {
0000A72E E54C D0AC 0001          000000AC  15837          MVHI  172(13),1
0000A734 E54C D0B0 0002          000000B0  15838          MVHI  176(13),2
0000A73A E54C D0B4 FFFF          000000B4  15839          MVHI  180(13),-1
                                           15840 * setting 4 bytes to 0x00
0000A740 D703 D0A8 D0A8 000000A8 000000A8  15841          XC    168(4,13),168(13)
0000A746 E320 D0B8 0024          000000B8  15842          STG   2,184(0,13)
0000A74C 41F0 D0A8               000000A8  15843          LA    15,168(0,13)
0000A750 E3F0 D0C0 0024          000000C0  15844          STG   15,192(0,13)
0000A756 4110 D0B8               000000B8  15845          LA    1,184(0,13)
0000A75A E3F0 C070 0004          0000A6E0  15846          LG    15,@lit_2017_738 ; rd_kafka_txn_require_states0
0000A760                                   15847 @@gen_label1020 DS    0H
0000A760 05EF                              15848          BALR  14,15
0000A762                                   15849 @@gen_label1021 DS    0H
0000A762 B904 004F                         15850          LGR   4,15
0000A766 B902 00F4                         15851          LTGR  15,4
0000A76A 4780 C118               0000A788  15852          BZ    @L1230
                                           15853 * ***
                                           15854 * ***
                                           15855 * ***
                                           15856 * ***
                                           15857 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000A76E 41F0 29A0               000009A0  15858          LA    15,2464(0,2)
0000A772 E3F0 D0B8 0024          000000B8  15859          STG   15,184(0,13)
0000A778 4110 D0B8               000000B8  15860          LA    1,184(0,13)
0000A77C E3F0 C078 0004          0000A6E8  15861          LG    15,@lit_2017_739 ; rwlock_wrunlock
0000A782                                   15862 @@gen_label1023 DS    0H
0000A782 05EF                              15863          BALR  14,15
0000A784                                   15864 @@gen_label1024 DS    0H
                                           15865 * ***                   goto done;
0000A784 47F0 C1D6               0000A846  15866          B     @_done@2017@2
                                           15867 * ***           }
0000A788                                   15868 @L1230   DS    0H
                                           15869 * ***
                                           15870 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_READY_N\
                                           15871 * OT_ACKED) {
0000A788 E55C 2D38 0002          00000D38  15872          CHSI  3384(2),2
0000A78E 4770 C13C               0000A7AC  15873          BNE   @L1231
                                           15874 * ***
                                           15875 * ***
                                           15876 * ***
                                           15877 * ***
                                                                                                                           Page  319 
  Active Usings: @REGION_2017_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           15878 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000A792 41F0 29A0               000009A0  15879          LA    15,2464(0,2)
0000A796 E3F0 D0B8 0024          000000B8  15880          STG   15,184(0,13)
0000A79C 4110 D0B8               000000B8  15881          LA    1,184(0,13)
0000A7A0 E3F0 C078 0004          0000A6E8  15882          LG    15,@lit_2017_739 ; rwlock_wrunlock
0000A7A6                                   15883 @@gen_label1026 DS    0H
0000A7A6 05EF                              15884          BALR  14,15
0000A7A8                                   15885 @@gen_label1027 DS    0H
                                           15886 * ***                   goto done;
0000A7A8 47F0 C1D6               0000A846  15887          B     @_done@2017@2
                                           15888 * ***           }
0000A7AC                                   15889 @L1231   DS    0H
                                           15890 * ***
                                           15891 * ***
                                           15892 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_WAIT_PID\
                                           15893 * );
0000A7AC E320 D0B8 0024          000000B8  15894          STG   2,184(0,13)
0000A7B2 E548 D0C0 0001          000000C0  15895          MVGHI 192(13),1
0000A7B8 4110 D0B8               000000B8  15896          LA    1,184(0,13)
0000A7BC E3F0 C080 0004          0000A6F0  15897          LG    15,@lit_2017_741 ; rd_kafka_txn_set_state
0000A7C2                                   15898 @@gen_label1028 DS    0H
0000A7C2 05EF                              15899          BALR  14,15
0000A7C4                                   15900 @@gen_label1029 DS    0H
                                           15901 * ***
                                           15902 * ***
                                           15903 * ***
                                           15904 * ***           if (rk->rk_eos.txn_init_rkq)
0000A7C4 E3F0 2E08 0002          00000E08  15905          LTG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
0000A7CA 4780 C17C               0000A7EC  15906          BZ    @L1232
                                           15907 * ***                   rd_kafka_q_destroy0(rk->rk_eos.txn_init_rkq, 0\
                                           15908 *  );
0000A7CE E3F0 2E08 0004          00000E08  15909          LG    15,3592(0,2)
0000A7D4 E3F0 D0B8 0024          000000B8  15910          STG   15,184(0,13)
0000A7DA D707 D0C0 D0C0 000000C0 000000C0  15911          XC    192(8,13),192(13)
0000A7E0 4110 D0B8               000000B8  15912          LA    1,184(0,13)
0000A7E4 E3F0 C088 0004          0000A6F8  15913          LG    15,@lit_2017_742 ; rd_kafka_q_destroy0
0000A7EA                                   15914 @@gen_label1031 DS    0H
0000A7EA 05EF                              15915          BALR  14,15
0000A7EC                                   15916 @@gen_label1032 DS    0H
0000A7EC                                   15917 @L1232   DS    0H
                                           15918 * ***
                                           15919 * ***
                                           15920 * ***
                                           15921 * ***
                                           15922 * ***           rk->rk_eos.txn_init_rkq = rd_kafka_q_keep(rko->rko_rep\
                                           15923 * lyq.q);
0000A7EC E3F0 3040 0004          00000040  15924          LG    15,64(0,3)
0000A7F2 E3F0 D0B8 0024          000000B8  15925          STG   15,184(0,13)
0000A7F8 4110 D0B8               000000B8  15926          LA    1,184(0,13)
0000A7FC E3F0 C090 0004          0000A700  15927          LG    15,@lit_2017_743 ; rd_kafka_q_keep
0000A802                                   15928 @@gen_label1033 DS    0H
0000A802 05EF                              15929          BALR  14,15
                                                                                                                           Page  320 
  Active Usings: @REGION_2017_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A804                                   15930 @@gen_label1034 DS    0H
0000A804 E3F0 2E08 0024          00000E08  15931          STG   15,3592(0,2)
                                           15932 * ***
                                           15933 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000A80A 41F0 29A0               000009A0  15934          LA    15,2464(0,2)
0000A80E E3F0 D0B8 0024          000000B8  15935          STG   15,184(0,13)
0000A814 4110 D0B8               000000B8  15936          LA    1,184(0,13)
0000A818 E3F0 C078 0004          0000A6E8  15937          LG    15,@lit_2017_739 ; rwlock_wrunlock
0000A81E                                   15938 @@gen_label1035 DS    0H
0000A81E 05EF                              15939          BALR  14,15
0000A820                                   15940 @@gen_label1036 DS    0H
                                           15941 * ***
                                           15942 * ***           rk->rk_eos.txn_init_err = RD_KAFKA_RESP_ERR_NO_ERROR;
0000A820 E54C 2EE8 0000          00000EE8  15943          MVHI  3816(2),0   ; offset of txn_init_err in 0000146
                                           15944 * ***
                                           15945 * ***
                                           15946 * ***           rd_kafka_idemp_start(rk, 1);
0000A826 E320 D0B8 0024          000000B8  15947          STG   2,184(0,13)
0000A82C E548 D0C0 0001          000000C0  15948          MVGHI 192(13),1
0000A832 4110 D0B8               000000B8  15949          LA    1,184(0,13)
0000A836 E3F0 C098 0004          0000A708  15950          LG    15,@lit_2017_745 ; rd_kafka_idemp_start
0000A83C                                   15951 @@gen_label1037 DS    0H
0000A83C 05EF                              15952          BALR  14,15
0000A83E                                   15953 @@gen_label1038 DS    0H
                                           15954 * ***
                                           15955 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000A83E A7F9 0001               00000001  15956          LGHI  15,1        ; 1
0000A842 47F0 C20A               0000A87A  15957          B     @ret_lab_2017
                                           15958 * ***
                                           15959 * ***    done:
                                           15960 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           15961 * >rko_replyq.q),
0000A846                                   15962 @_done@2017@2 DS 0H
                                           15963 * ***                                             error);
0000A846 E3F0 3040 0004          00000040  15964          LG    15,64(0,3)
0000A84C E3F0 D0B8 0024          000000B8  15965          STG   15,184(0,13)
0000A852 4110 D0B8               000000B8  15966          LA    1,184(0,13)
0000A856 E3F0 C090 0004          0000A700  15967          LG    15,@lit_2017_743 ; rd_kafka_q_keep
0000A85C                                   15968 @@gen_label1039 DS    0H
0000A85C 05EF                              15969          BALR  14,15
0000A85E                                   15970 @@gen_label1040 DS    0H
0000A85E E3F0 D0B8 0024          000000B8  15971          STG   15,184(0,13)
0000A864 E340 D0C0 0024          000000C0  15972          STG   4,192(0,13)
0000A86A 4110 D0B8               000000B8  15973          LA    1,184(0,13)
0000A86E E3F0 C0A0 0004          0000A710  15974          LG    15,@lit_2017_748 ; rd_kafka_txn_curr_api_reply_error
0000A874                                   15975 @@gen_label1041 DS    0H
0000A874 05EF                              15976          BALR  14,15
0000A876                                   15977 @@gen_label1042 DS    0H
                                           15978 * ***
                                           15979 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000A876 A7F9 0001               00000001  15980          LGHI  15,1        ; 1
                                           15981 * ***   }
                                                                                                                           Page  321 
  Active Usings: @REGION_2017_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A87A                                   15982 @ret_lab_2017 DS 0H
                                           15983 * * **** Start of Epilogue
                                           15984          DCCEPIL
0000A87A                                   15985+         ds 0h                                                          01-DCCEP
                                           15986+* Epilog
0000A87A D707 D088 D088 00000088 00000088  15987+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A880 E3D0 D080 0004          00000080  15988+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A886 E3C0 D090 0004          00000090  15989+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A88C E3B0 C018 0004          00000018  15990+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A892 E3C0 B010 0021          00000010  15991+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A898 E3E0 D008 0004          00000008  15992+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A89E EB1C D020 0004          00000020  15993+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A8A4 078E                              15994+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A8A6 E3F0 D010 0024          00000010  15995+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A8AC E300 D018 0024          00000018  15996+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A8B2 E3F0 D090 0004          00000090  15997+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A8B8 E3F0 F018 0004          00000018  15998+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A8BE 47F0 F040               00000040  15999+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16000+* End of Epilog
                                           16001 * * **** End of Epilogue
                                           16002          DROP  12
                                           16003 *
                                           16004 *   DSECT for automatic variables in "rd_kafka_txn_op_init_transaction
                                           16005 *           s"
                                           16006 *      (FUNCTION #2017)
                                           16007 *
00000000                00000000 000000B8  16008 @AUTO#rd_kafka_txn_op_init_transactions DSECT
00000000                                   16009          DS    XL168
000000A8                                   16010 rd_kafka_txn_op_init_transactions#__cl1#0 DS 16XL1 ; __cl1
                                           16011 *
0000A8C2                00000000 00014658  16012 @CODE    CSECT
                                           16013 *
                                           16014 *
                                           16015 *
                                           16016 * ....... start of rd_kafka_txn_op_ack_init_transactions
0000A8C2                                   16017 @LNAME2018 DS  0H
0000A8C2 00000025                          16018          DC    X'00000025'
0000A8C6 99846D9281869281                  16019          DC    C'rd_kafka_txn_op_ack_init_transac'
0000A8E6 A3899695A2                        16020          DC    C'tions'
0000A8EB 00                                16021          DC    X'00'
                                           16022 rd_kafka_txn_op_ack_init_transactions DCCPRLG CINDEX=2018,BASER=12,FRAM*
                                                                E=192,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2018
                                           16023          macro
                                           16024          dccextrn &m
                                           16025          gblc    &$dccext(1000)
                                           16026          gbla    &$dccexti
                                           16027          lcla    &i
                                           16028 &$dccext(&$dccexti+1) setc    '&m'
                                           16029 &i       seta    1
                                           16030 .loop    aif    (&i gt &$dccexti).around
                                           16031          aif    ('&$dccext(&i)' eq '&m').getout
                                           16032 &i       seta    &i+1
                                                                                                                           Page  322 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16033          ago     .loop
                                           16034 .around  anop
                                           16035 &$dccexti seta &$dccexti+1
                                           16036          extrn  &m
                                           16037 .getout  anop
                                           16038          mend
0000A8F0                                   16039+$eye0249    ds    0d                                                    02-DCCCA
0000A8F0 C4C3C3                            16040+         dc cl3'DCC'                                                    02-DCCCA
0000A8F3 01                                16041+         dc xl1'01' format one                                          02-DCCCA
0000A8F4 00000000                          16042+         dc a(0)                                                        02-DCCCA
0000A8F8 000000000000A962                  16043+         dc ad(@PER_2018)                                               02-DCCCA
0000A900 00000000000000C0                  16044+         dc ad(192)                                                     02-DCCCA
0000A908 0000000000000000                  16045+         dc ad(0)                                                       02-DCCCA
0000A910 0000000000001000                  16046+         dc ad(4096)                                                    02-DCCCA
0000A918 20                                16047+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A919 03                                16048+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A91A 03                                16049+         dc al1(3)                                                      02-DCCCA
0000A91B 08                                16050+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A91C 00                                16051+         dc bl.8'00000000'                                              02-DCCCA
0000A91D 000000                            16052+         dc al3(0)                                                      02-DCCCA
0000A920 000000000000A8C2                  16053+         dc ad(@LNAME2018)                                              02-DCCCA
0000A928                                   16054+         ds 0d                                                          02-DCCCA
0000A928 000000000000A8F0                  16055+         dc ad($eye0249)                                                02-DCCCA
0000A930 0000000000000000                  16056+         dc ad(0)                                                       02-DCCCA
0000A938                                   16057+         ds    0d                                                       01-DCCPR
0000A938                                   16058+rd_kafka_txn_op_ack_init_transactions ds 0d                             01-DCCPR
0000A938                                   16059+@REGION_2018_1 ds 0h                                                    01-DCCPR
0000A938 EBEC D008 0024          00000008  16060+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A93E E3E0 D088 0004          00000088  16061+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A944 E3C0 D090 0004          00000090  16062+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A94A B904 002E                         16063+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A94E E3B0 C018 0004          00000018  16064+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A954 A7EB 00C0               000000C0  16065+         aghi  14,192              increase by frame size               01-DCCPR
0000A958 E3E0 C020 0021          00000020  16066+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A95E 4720 B020               00000020  16067+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A962                                   16068+@PER_2018 ds   0h                                                       01-DCCPR
0000A962 EBDE 2080 0024          00000080  16069+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A968 E3C0 2090 0024          00000090  16070+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A96E B904 00D2                         16071+         lgr   13,2                set real frame pointer               01-DCCPR
0000A972 B904 00CF                         16072+         lgr   12,15               set base reg                         01-DCCPR
                        0000A938           16073+         using @REGION_2018_1,12                                        01-DCCPR
                                           16074 * ******* End of Prologue
                                           16075 * *
0000A976 E320 1000 0004          00000000  16076          LG    2,0(0,1)    ; rk
                                           16077 * ***           rd_kafka_error_t *error;
                                           16078 * ***
                                           16079 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000A97C E340 1010 0004          00000010  16080          LG    4,16(0,1)   ; rko
0000A982 E55C 4020 FF3B          00000020  16081          CHSI  32(4),-197
0000A988 4770 C098               0000A9D0  16082          BNE   @L1233
                                           16083 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000A98C A7F9 0001               00000001  16084          LGHI  15,1        ; 1
                                                                                                                           Page  323 
  Active Usings: @REGION_2018_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000A990 47F0 C15E               0000AA96  16085          B     @ret_lab_2018
0000A998                                   16086          DS    0D
0000A998 000000C0                          16087 @FRAMESIZE_2018 DC F'192'
0000A99C 00000000
0000A9A0 0000000000000000                  16088 @lit_2018_752 DC AD(rwlock_wrlock)
0000A9A8 0000000000004700                  16089 @lit_2018_753 DC AD(rd_kafka_txn_require_states0)
0000A9B0 0000000000000000                  16090 @lit_2018_754 DC AD(rwlock_wrunlock)
0000A9B8 0000000000004DE8                  16091 @lit_2018_755 DC AD(rd_kafka_txn_set_state)
0000A9C0 0000000000001D48                  16092 @lit_2018_757 DC AD(rd_kafka_q_keep)
0000A9C8 00000000000058A0                  16093 @lit_2018_758 DC AD(rd_kafka_txn_curr_api_reply_error)
0000A9D0                                   16094 @L1233   DS    0H
                                           16095 * ***
                                           16096 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000A9D0 41F0 29A0               000009A0  16097          LA    15,2464(0,2)
0000A9D4 E3F0 D0B0 0024          000000B0  16098          STG   15,176(0,13)
0000A9DA 4110 D0B0               000000B0  16099          LA    1,176(0,13)
0000A9DE E3F0 C068 0004          0000A9A0  16100          LG    15,@lit_2018_752 ; rwlock_wrlock
0000A9E4                                   16101 @@gen_label1044 DS    0H
0000A9E4 05EF                              16102          BALR  14,15
0000A9E6                                   16103 @@gen_label1045 DS    0H
                                           16104 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           16105 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_READY_NOT_ACKED, -1 }))) {
0000A9E6 E54C D0A8 0002          000000A8  16106          MVHI  168(13),2
0000A9EC E54C D0AC FFFF          000000AC  16107          MVHI  172(13),-1
0000A9F2 E320 D0B0 0024          000000B0  16108          STG   2,176(0,13)
0000A9F8 41F0 D0A8               000000A8  16109          LA    15,168(0,13)
0000A9FC E3F0 D0B8 0024          000000B8  16110          STG   15,184(0,13)
0000AA02 4110 D0B0               000000B0  16111          LA    1,176(0,13)
0000AA06 E3F0 C070 0004          0000A9A8  16112          LG    15,@lit_2018_753 ; rd_kafka_txn_require_states0
0000AA0C                                   16113 @@gen_label1046 DS    0H
0000AA0C 05EF                              16114          BALR  14,15
0000AA0E                                   16115 @@gen_label1047 DS    0H
0000AA0E B904 003F                         16116          LGR   3,15
0000AA12 B902 00F3                         16117          LTGR  15,3
0000AA16 4780 C0FC               0000AA34  16118          BZ    @L1234
                                           16119 * ***
                                           16120 * ***
                                           16121 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000AA1A 41F0 29A0               000009A0  16122          LA    15,2464(0,2)
0000AA1E E3F0 D0B0 0024          000000B0  16123          STG   15,176(0,13)
0000AA24 4110 D0B0               000000B0  16124          LA    1,176(0,13)
0000AA28 E3F0 C078 0004          0000A9B0  16125          LG    15,@lit_2018_754 ; rwlock_wrunlock
0000AA2E                                   16126 @@gen_label1049 DS    0H
0000AA2E 05EF                              16127          BALR  14,15
0000AA30                                   16128 @@gen_label1050 DS    0H
                                           16129 * ***                   goto done;
0000AA30 47F0 C12A               0000AA62  16130          B     @_done@2018@3
                                           16131 * ***           }
0000AA34                                   16132 @L1234   DS    0H
                                           16133 * ***
                                           16134 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_READY);
0000AA34 E320 D0B0 0024          000000B0  16135          STG   2,176(0,13)
                                                                                                                           Page  324 
  Active Usings: @REGION_2018_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000AA3A E548 D0B8 0003          000000B8  16136          MVGHI 184(13),3
0000AA40 4110 D0B0               000000B0  16137          LA    1,176(0,13)
0000AA44 E3F0 C080 0004          0000A9B8  16138          LG    15,@lit_2018_755 ; rd_kafka_txn_set_state
0000AA4A                                   16139 @@gen_label1051 DS    0H
0000AA4A 05EF                              16140          BALR  14,15
0000AA4C                                   16141 @@gen_label1052 DS    0H
                                           16142 * ***
                                           16143 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000AA4C 41F0 29A0               000009A0  16144          LA    15,2464(0,2)
0000AA50 E3F0 D0B0 0024          000000B0  16145          STG   15,176(0,13)
0000AA56 4110 D0B0               000000B0  16146          LA    1,176(0,13)
0000AA5A E3F0 C078 0004          0000A9B0  16147          LG    15,@lit_2018_754 ; rwlock_wrunlock
0000AA60                                   16148 @@gen_label1053 DS    0H
0000AA60 05EF                              16149          BALR  14,15
0000AA62                                   16150 @@gen_label1054 DS    0H
                                           16151 * ***
                                           16152 * ***
                                           16153 * ***    done:
                                           16154 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           16155 * >rko_replyq.q),
0000AA62                                   16156 @_done@2018@3 DS 0H
                                           16157 * ***                                             error);
0000AA62 E3F0 4040 0004          00000040  16158          LG    15,64(0,4)
0000AA68 E3F0 D0B0 0024          000000B0  16159          STG   15,176(0,13)
0000AA6E 4110 D0B0               000000B0  16160          LA    1,176(0,13)
0000AA72 E3F0 C088 0004          0000A9C0  16161          LG    15,@lit_2018_757 ; rd_kafka_q_keep
0000AA78                                   16162 @@gen_label1055 DS    0H
0000AA78 05EF                              16163          BALR  14,15
0000AA7A                                   16164 @@gen_label1056 DS    0H
0000AA7A E3F0 D0B0 0024          000000B0  16165          STG   15,176(0,13)
0000AA80 E330 D0B8 0024          000000B8  16166          STG   3,184(0,13)
0000AA86 4110 D0B0               000000B0  16167          LA    1,176(0,13)
0000AA8A E3F0 C090 0004          0000A9C8  16168          LG    15,@lit_2018_758 ; rd_kafka_txn_curr_api_reply_error
0000AA90                                   16169 @@gen_label1057 DS    0H
0000AA90 05EF                              16170          BALR  14,15
0000AA92                                   16171 @@gen_label1058 DS    0H
                                           16172 * ***
                                           16173 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000AA92 A7F9 0001               00000001  16174          LGHI  15,1        ; 1
                                           16175 * ***   }
0000AA96                                   16176 @ret_lab_2018 DS 0H
                                           16177 * * **** Start of Epilogue
                                           16178          DCCEPIL
0000AA96                                   16179+         ds 0h                                                          01-DCCEP
                                           16180+* Epilog
0000AA96 D707 D088 D088 00000088 00000088  16181+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000AA9C E3D0 D080 0004          00000080  16182+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000AAA2 E3C0 D090 0004          00000090  16183+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000AAA8 E3B0 C018 0004          00000018  16184+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000AAAE E3C0 B010 0021          00000010  16185+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000AAB4 E3E0 D008 0004          00000008  16186+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000AABA EB1C D020 0004          00000020  16187+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  325 
  Active Usings: @REGION_2018_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000AAC0 078E                              16188+         bcr 8,14                if same dsab, just return              01-DCCEP
0000AAC2 E3F0 D010 0024          00000010  16189+         stg 15,16(0,13)         save return code                       01-DCCEP
0000AAC8 E300 D018 0024          00000018  16190+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000AACE E3F0 D090 0004          00000090  16191+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000AAD4 E3F0 F018 0004          00000018  16192+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000AADA 47F0 F040               00000040  16193+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16194+* End of Epilog
                                           16195 * * **** End of Epilogue
                                           16196          DROP  12
                                           16197 *
                                           16198 *   DSECT for automatic variables in "rd_kafka_txn_op_ack_init_transac
                                           16199 *           tions"
                                           16200 *      (FUNCTION #2018)
                                           16201 *
00000000                00000000 000000B0  16202 @AUTO#rd_kafka_txn_op_ack_init_transactions DSECT
00000000                                   16203          DS    XL168
000000A8                                   16204 rd_kafka_txn_op_ack_init_transactions#__cl2#0 DS 8XL1 ; __cl2
                                           16205 *
0000AADE                00000000 00014658  16206 @CODE    CSECT
                                           16207 *
                                           16208 *
                                           16209 *
                                           16210 * ....... start of rd_kafka_init_transactions
                                           16211 rd_kafka_init_transactions ALIAS X'99846D92818692816D899589A36DA3998195*
                                                                A28183A3899695A2'
0000AADE                                   16212 @LNAME1080 DS  0H
0000AADE 0000001A                          16213          DC    X'0000001A'
0000AAE2 99846D9281869281                  16214          DC    C'rd_kafka_init_transactions'
0000AAFC 00                                16215          DC    X'00'
                                           16216 rd_kafka_init_transactions DCCPRLG CINDEX=1080,BASER=12,FRAME=216,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1080
                                           16217          macro
                                           16218          dccextrn &m
                                           16219          gblc    &$dccext(1000)
                                           16220          gbla    &$dccexti
                                           16221          lcla    &i
                                           16222 &$dccext(&$dccexti+1) setc    '&m'
                                           16223 &i       seta    1
                                           16224 .loop    aif    (&i gt &$dccexti).around
                                           16225          aif    ('&$dccext(&i)' eq '&m').getout
                                           16226 &i       seta    &i+1
                                           16227          ago     .loop
                                           16228 .around  anop
                                           16229 &$dccexti seta &$dccexti+1
                                           16230          extrn  &m
                                           16231 .getout  anop
                                           16232          mend
0000AB00                                   16233+$eye0252    ds    0d                                                    02-DCCCA
0000AB00 C4C3C3                            16234+         dc cl3'DCC'                                                    02-DCCCA
0000AB03 01                                16235+         dc xl1'01' format one                                          02-DCCCA
0000AB04 00000000                          16236+         dc a(0)                                                        02-DCCCA
0000AB08 000000000000AB72                  16237+         dc ad(@PER_1080)                                               02-DCCCA
                                                                                                                           Page  326 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000AB10 00000000000000D8                  16238+         dc ad(216)                                                     02-DCCCA
0000AB18 0000000000000000                  16239+         dc ad(0)                                                       02-DCCCA
0000AB20 0000000000001000                  16240+         dc ad(4096)                                                    02-DCCCA
0000AB28 20                                16241+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AB29 03                                16242+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AB2A 03                                16243+         dc al1(3)                                                      02-DCCCA
0000AB2B 08                                16244+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AB2C 00                                16245+         dc bl.8'00000000'                                              02-DCCCA
0000AB2D 000000                            16246+         dc al3(0)                                                      02-DCCCA
0000AB30 000000000000AADE                  16247+         dc ad(@LNAME1080)                                              02-DCCCA
0000AB38                                   16248+         ds 0d                                                          02-DCCCA
0000AB38 000000000000AB00                  16249+         dc ad($eye0252)                                                02-DCCCA
0000AB40 0000000000000000                  16250+         dc ad(0)                                                       02-DCCCA
0000AB48                                   16251+         ds    0d                                                       01-DCCPR
                                           16252+         entry rd_kafka_init_transactions                               01-DCCPR
0000AB48                                   16253+rd_kafka_init_transactions ds 0d                                        01-DCCPR
0000AB48                                   16254+@REGION_1080_1 ds 0h                                                    01-DCCPR
0000AB48 EBEC D008 0024          00000008  16255+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000AB4E E3E0 D088 0004          00000088  16256+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000AB54 E3C0 D090 0004          00000090  16257+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AB5A B904 002E                         16258+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AB5E E3B0 C018 0004          00000018  16259+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AB64 A7EB 00D8               000000D8  16260+         aghi  14,216              increase by frame size               01-DCCPR
0000AB68 E3E0 C020 0021          00000020  16261+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AB6E 4720 B020               00000020  16262+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AB72                                   16263+@PER_1080 ds   0h                                                       01-DCCPR
0000AB72 EBDE 2080 0024          00000080  16264+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AB78 E3C0 2090 0024          00000090  16265+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AB7E B904 00D2                         16266+         lgr   13,2                set real frame pointer               01-DCCPR
0000AB82 B904 00CF                         16267+         lgr   12,15               set base reg                         01-DCCPR
                        0000AB48           16268+         using @REGION_1080_1,12                                        01-DCCPR
0000AB86 B904 0031                         16269          LGR   3,1         ; ptr to parm area
                                           16270 * ******* End of Prologue
                                           16271 * *
0000AB8A E320 3000 0004          00000000  16272          LG    2,0(0,3)    ; rk
                                           16273 * ***           rd_kafka_error_t *error;
                                           16274 * ***
                                           16275 * ***           if ((error = rd_kafka_ensure_transactional(rk)))
0000AB90 E320 D0B0 0024          000000B0  16276          STG   2,176(0,13)
0000AB96 4110 D0B0               000000B0  16277          LA    1,176(0,13)
0000AB9A E3F0 C070 0004          0000ABB8  16278          LG    15,@lit_1080_761 ; rd_kafka_ensure_transactional
0000ABA0                                   16279 @@gen_label1059 DS    0H
0000ABA0 05EF                              16280          BALR  14,15
0000ABA2                                   16281 @@gen_label1060 DS    0H
0000ABA2 B902 001F                         16282          LTGR  1,15
0000ABA6 4780 C0A0               0000ABE8  16283          BZ    @L1235
                                           16284 * ***                   return error;
0000ABAA 47F0 C160               0000ACA8  16285          B     @ret_lab_1080
0000ABB0                                   16286          DS    0D
0000ABB0 000000D8                          16287 @FRAMESIZE_1080 DC F'216'
0000ABB4 00000000
0000ABB8 0000000000004588                  16288 @lit_1080_761 DC AD(rd_kafka_ensure_transactional)
                                                                                                                           Page  327 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000ABC0 0000000000000000                  16289 @lit_1080_763 DC AD(rd_kafka_op_new_cb)
0000ABC8 000000000000A670                  16290 @lit_1080_762 DC AD(rd_kafka_txn_op_init_transactions)
0000ABD0 000000000000A0A0                  16291 @lit_1080_765 DC AD(rd_kafka_txn_curr_api_req)
0000ABD8 0000000000014658                  16292 @lit_1080_764 DC AD(@DATA)
0000ABE0 000000000000A938                  16293 @lit_1080_766 DC AD(rd_kafka_txn_op_ack_init_transactions)
0000ABE8                                   16294 @L1235   DS    0H
                                           16295 * ***
                                           16296 * ***
                                           16297 * ***
                                           16298 * ***   # 1405 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           16299 * ***
                                           16300 * ***           error = rd_kafka_txn_curr_api_req(
                                           16301 * ***                   rk, __FUNCTION__,
                                           16302 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           16303 * ***                   timeout_ms,
                                           16304 * ***                   0x2|
                                           16305 * ***                                      rd_kafka_txn_op_init_transa\
                                           16306 * ctions),
0000ABE8 E320 D0B0 0024          000000B0  16307          STG   2,176(0,13)
0000ABEE E548 D0B8 002F          000000B8  16308          MVGHI 184(13),47
0000ABF4 E3F0 C080 0004          0000ABC8  16309          LG    15,@lit_1080_762 ; rd_kafka_txn_op_init_transactions
0000ABFA E3F0 D0C0 0024          000000C0  16310          STG   15,192(0,13)
0000AC00 4110 D0B0               000000B0  16311          LA    1,176(0,13)
0000AC04 E340 C078 0004          0000ABC0  16312          LG    4,@lit_1080_763 ; rd_kafka_op_new_cb
0000AC0A B904 00F4                         16313          LGR   15,4
0000AC0E                                   16314 @@gen_label1062 DS    0H
0000AC0E 05EF                              16315          BALR  14,15
0000AC10                                   16316 @@gen_label1063 DS    0H
0000AC10 E320 D0B0 0024          000000B0  16317          STG   2,176(0,13)
0000AC16 E350 C090 0004          0000ABD8  16318          LG    5,@lit_1080_764
0000AC1C 4110 5288               00000288  16319          LA    1,648(0,5)
0000AC20 E310 D0B8 0024          000000B8  16320          STG   1,184(0,13)
0000AC26 E3F0 D0C0 0024          000000C0  16321          STG   15,192(0,13)
0000AC2C E3F0 300C 0014          0000000C  16322          LGF   15,12(0,3)  ; timeout_ms
0000AC32 E3F0 D0C8 0024          000000C8  16323          STG   15,200(0,13)
                                           16324 * ***                   0x4);
0000AC38 E548 D0D0 0006          000000D0  16325          MVGHI 208(13),6
0000AC3E 4110 D0B0               000000B0  16326          LA    1,176(0,13)
0000AC42 E330 C088 0004          0000ABD0  16327          LG    3,@lit_1080_765 ; rd_kafka_txn_curr_api_req
0000AC48 B904 00F3                         16328          LGR   15,3
0000AC4C                                   16329 @@gen_label1064 DS    0H
0000AC4C 05EF                              16330          BALR  14,15
0000AC4E                                   16331 @@gen_label1065 DS    0H
                                           16332 * ***           if (error)
0000AC4E B902 001F                         16333          LTGR  1,15
0000AC52 4780 C112               0000AC5A  16334          BZ    @L1236
                                           16335 * ***                   return error;
0000AC56 47F0 C160               0000ACA8  16336          B     @ret_lab_1080
0000AC5A                                   16337 @L1236   DS    0H
                                           16338 * ***
                                           16339 * ***
                                           16340 * ***
                                                                                                                           Page  328 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16341 * ***
                                           16342 * ***           return rd_kafka_txn_curr_api_req(
                                           16343 * ***                   rk, __FUNCTION__,
                                           16344 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           16345 * ***                   -1,
                                           16346 * ***                   0x8);
                                           16347 * ***                                      rd_kafka_txn_op_ack_init_tr\
                                           16348 * ansactions),
0000AC5A E320 D0B0 0024          000000B0  16349          STG   2,176(0,13)
0000AC60 E548 D0B8 002F          000000B8  16350          MVGHI 184(13),47
0000AC66 E3F0 C098 0004          0000ABE0  16351          LG    15,@lit_1080_766 ; rd_kafka_txn_op_ack_init_transactions
0000AC6C E3F0 D0C0 0024          000000C0  16352          STG   15,192(0,13)
0000AC72 4110 D0B0               000000B0  16353          LA    1,176(0,13)
0000AC76 B904 00F4                         16354          LGR   15,4
0000AC7A                                   16355 @@gen_label1067 DS    0H
0000AC7A 05EF                              16356          BALR  14,15
0000AC7C                                   16357 @@gen_label1068 DS    0H
0000AC7C E320 D0B0 0024          000000B0  16358          STG   2,176(0,13)
0000AC82 4110 5288               00000288  16359          LA    1,648(0,5)
0000AC86 E310 D0B8 0024          000000B8  16360          STG   1,184(0,13)
0000AC8C E3F0 D0C0 0024          000000C0  16361          STG   15,192(0,13)
0000AC92 E548 D0C8 FFFF          000000C8  16362          MVGHI 200(13),-1
0000AC98 E548 D0D0 0008          000000D0  16363          MVGHI 208(13),8
0000AC9E 4110 D0B0               000000B0  16364          LA    1,176(0,13)
0000ACA2 B904 00F3                         16365          LGR   15,3
0000ACA6                                   16366 @@gen_label1069 DS    0H
0000ACA6 05EF                              16367          BALR  14,15
0000ACA8                                   16368 @@gen_label1070 DS    0H
                                           16369 * ***   }
0000ACA8                                   16370 @ret_lab_1080 DS 0H
                                           16371 * * **** Start of Epilogue
                                           16372          DCCEPIL
0000ACA8                                   16373+         ds 0h                                                          01-DCCEP
                                           16374+* Epilog
0000ACA8 D707 D088 D088 00000088 00000088  16375+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000ACAE E3D0 D080 0004          00000080  16376+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000ACB4 E3C0 D090 0004          00000090  16377+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000ACBA E3B0 C018 0004          00000018  16378+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000ACC0 E3C0 B010 0021          00000010  16379+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000ACC6 E3E0 D008 0004          00000008  16380+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000ACCC EB1C D020 0004          00000020  16381+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000ACD2 078E                              16382+         bcr 8,14                if same dsab, just return              01-DCCEP
0000ACD4 E3F0 D010 0024          00000010  16383+         stg 15,16(0,13)         save return code                       01-DCCEP
0000ACDA E300 D018 0024          00000018  16384+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000ACE0 E3F0 D090 0004          00000090  16385+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000ACE6 E3F0 F018 0004          00000018  16386+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000ACEC 47F0 F040               00000040  16387+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16388+* End of Epilog
                                           16389 * * **** End of Epilogue
                                           16390          DROP  12
                                           16391 *
                                           16392 *   DSECT for automatic variables in "rd_kafka_init_transactions"
                                                                                                                           Page  329 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16393 *      (FUNCTION #1080)
                                           16394 *
00000000                00000000 000000A8  16395 @AUTO#rd_kafka_init_transactions DSECT
00000000                                   16396          DS    XL168
                                           16397 *
0000ACF0                00000000 00014658  16398 @CODE    CSECT
                                           16399 *
                                           16400 *
                                           16401 *
                                           16402 * ....... start of rd_kafka_txn_op_begin_transaction
0000ACF0                                   16403 @LNAME2019 DS  0H
0000ACF0 00000021                          16404          DC    X'00000021'
0000ACF4 99846D9281869281                  16405          DC    C'rd_kafka_txn_op_begin_transactio'
0000AD14 95                                16406          DC    C'n'
0000AD15 00                                16407          DC    X'00'
                                           16408 rd_kafka_txn_op_begin_transaction DCCPRLG CINDEX=2019,BASER=12,FRAME=21*
                                                                6,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2019
                                           16409          macro
                                           16410          dccextrn &m
                                           16411          gblc    &$dccext(1000)
                                           16412          gbla    &$dccexti
                                           16413          lcla    &i
                                           16414 &$dccext(&$dccexti+1) setc    '&m'
                                           16415 &i       seta    1
                                           16416 .loop    aif    (&i gt &$dccexti).around
                                           16417          aif    ('&$dccext(&i)' eq '&m').getout
                                           16418 &i       seta    &i+1
                                           16419          ago     .loop
                                           16420 .around  anop
                                           16421 &$dccexti seta &$dccexti+1
                                           16422          extrn  &m
                                           16423 .getout  anop
                                           16424          mend
0000AD18                                   16425+$eye0255    ds    0d                                                    02-DCCCA
0000AD18 C4C3C3                            16426+         dc cl3'DCC'                                                    02-DCCCA
0000AD1B 01                                16427+         dc xl1'01' format one                                          02-DCCCA
0000AD1C 00000000                          16428+         dc a(0)                                                        02-DCCCA
0000AD20 000000000000AD8A                  16429+         dc ad(@PER_2019)                                               02-DCCCA
0000AD28 00000000000000D8                  16430+         dc ad(216)                                                     02-DCCCA
0000AD30 0000000000000000                  16431+         dc ad(0)                                                       02-DCCCA
0000AD38 0000000000001000                  16432+         dc ad(4096)                                                    02-DCCCA
0000AD40 20                                16433+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AD41 03                                16434+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AD42 03                                16435+         dc al1(3)                                                      02-DCCCA
0000AD43 08                                16436+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AD44 00                                16437+         dc bl.8'00000000'                                              02-DCCCA
0000AD45 000000                            16438+         dc al3(0)                                                      02-DCCCA
0000AD48 000000000000ACF0                  16439+         dc ad(@LNAME2019)                                              02-DCCCA
0000AD50                                   16440+         ds 0d                                                          02-DCCCA
0000AD50 000000000000AD18                  16441+         dc ad($eye0255)                                                02-DCCCA
0000AD58 0000000000000000                  16442+         dc ad(0)                                                       02-DCCCA
0000AD60                                   16443+         ds    0d                                                       01-DCCPR
                                                                                                                           Page  330 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000AD60                                   16444+rd_kafka_txn_op_begin_transaction ds 0d                                 01-DCCPR
0000AD60                                   16445+@REGION_2019_1 ds 0h                                                    01-DCCPR
0000AD60 EBEC D008 0024          00000008  16446+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000AD66 E3E0 D088 0004          00000088  16447+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000AD6C E3C0 D090 0004          00000090  16448+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AD72 B904 002E                         16449+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AD76 E3B0 C018 0004          00000018  16450+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AD7C A7EB 00D8               000000D8  16451+         aghi  14,216              increase by frame size               01-DCCPR
0000AD80 E3E0 C020 0021          00000020  16452+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AD86 4720 B020               00000020  16453+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AD8A                                   16454+@PER_2019 ds   0h                                                       01-DCCPR
0000AD8A EBDE 2080 0024          00000080  16455+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AD90 E3C0 2090 0024          00000090  16456+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AD96 B904 00D2                         16457+         lgr   13,2                set real frame pointer               01-DCCPR
0000AD9A B904 00CF                         16458+         lgr   12,15               set base reg                         01-DCCPR
                        0000AD60           16459+         using @REGION_2019_1,12                                        01-DCCPR
0000AD9E B904 0041                         16460          LGR   4,1         ; ptr to parm area
                                           16461 * ******* End of Prologue
                                           16462 * *
0000ADA2 E320 4000 0004          00000000  16463          LG    2,0(0,4)    ; rk
                                           16464 * ***           rd_kafka_error_t *error;
                                           16465 * ***           rd_bool_t wakeup_brokers = 0;
0000ADA8 9200 D0B0      000000B0 00000000  16466          MVI   176(13),0   ; wakeup_brokers
                                           16467 * ***
                                           16468 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000ADAC E3F0 4010 0004          00000010  16469          LG    15,16(0,4)  ; rko
0000ADB2 E55C F020 FF3B          00000020  16470          CHSI  32(15),-197
0000ADB8 4770 C0D0               0000AE30  16471          BNE   @L1237
                                           16472 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000ADBC A7F9 0001               00000001  16473          LGHI  15,1        ; 1
0000ADC0 47F0 C280               0000AFE0  16474          B     @ret_lab_2019
0000ADC8                                   16475          DS    0D
0000ADC8 000000D8                          16476 @FRAMESIZE_2019 DC F'216'
0000ADCC 00000000
0000ADD0 0000000000000000                  16477 @lit_2019_771 DC AD(rwlock_wrlock)
0000ADD8 0000000000004700                  16478 @lit_2019_772 DC AD(rd_kafka_txn_require_states0)
0000ADE0 0000000000000000                  16479 @lit_2019_775 DC AD(__assert)
0000ADE8 0000000000014A98                  16480 @lit_2019_774 DC AD(@strings@)
0000ADF0 0000000000014658                  16481 @lit_2019_773 DC AD(@DATA)
0000ADF8 0000000000004DE8                  16482 @lit_2019_776 DC AD(rd_kafka_txn_set_state)
0000AE00 0000000000000B70                  16483 @lit_2019_780 DC AD(rd_atomic64_set)
0000AE08 0000000000000CB0                  16484 @lit_2019_781 DC AD(rd_free)
0000AE10 0000000000000000                  16485 @lit_2019_783 DC AD(rwlock_wrunlock)
0000AE18 0000000000000000                  16486 @lit_2019_784 DC AD(rd_kafka_all_brokers_wakeup)
0000AE20 0000000000001D48                  16487 @lit_2019_785 DC AD(rd_kafka_q_keep)
0000AE28 00000000000058A0                  16488 @lit_2019_786 DC AD(rd_kafka_txn_curr_api_reply_error)
0000AE30                                   16489 @L1237   DS    0H
                                           16490 * ***
                                           16491 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000AE30 41F0 29A0               000009A0  16492          LA    15,2464(0,2)
0000AE34 E3F0 D0B8 0024          000000B8  16493          STG   15,184(0,13)
0000AE3A 4110 D0B8               000000B8  16494          LA    1,184(0,13)
                                                                                                                           Page  331 
  Active Usings: @REGION_2019_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000AE3E E3F0 C070 0004          0000ADD0  16495          LG    15,@lit_2019_771 ; rwlock_wrlock
0000AE44                                   16496 @@gen_label1072 DS    0H
0000AE44 05EF                              16497          BALR  14,15
0000AE46                                   16498 @@gen_label1073 DS    0H
                                           16499 * ***           if (!(error = rd_kafka_txn_require_states0(rk, (rd_kaf\
                                           16500 * ka_txn_state_t[]){ RD_KAFKA_TXN_STATE_READY, -1 }))) {
0000AE46 E54C D0A8 0003          000000A8  16501          MVHI  168(13),3
0000AE4C E54C D0AC FFFF          000000AC  16502          MVHI  172(13),-1
0000AE52 E320 D0B8 0024          000000B8  16503          STG   2,184(0,13)
0000AE58 41F0 D0A8               000000A8  16504          LA    15,168(0,13)
0000AE5C E3F0 D0C0 0024          000000C0  16505          STG   15,192(0,13)
0000AE62 4110 D0B8               000000B8  16506          LA    1,184(0,13)
0000AE66 E3F0 C078 0004          0000ADD8  16507          LG    15,@lit_2019_772 ; rd_kafka_txn_require_states0
0000AE6C                                   16508 @@gen_label1074 DS    0H
0000AE6C 05EF                              16509          BALR  14,15
0000AE6E                                   16510 @@gen_label1075 DS    0H
0000AE6E B904 003F                         16511          LGR   3,15
0000AE72 B902 00F3                         16512          LTGR  15,3
0000AE76 4770 C210               0000AF70  16513          BNZ   @L1238
                                           16514 * ***
                                           16515 * ***                   (((((&rk->rk_eos.txn_rktps)->tqh_first) == (((\
                                           16516 * void *)0)))) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafk\
                                           16517 * a\\src\\rdkafka_txnmgr.c", 1448, "(((&rk->rk_eos.txn_rktps)->tqh_fir\
                                           16518 * st) == (((void *)0)))"));
0000AE7A E3F0 2E98 0002          00000E98  16519          LTG   15,3736(0,2) ; offset of txn_rktps in 0000146
0000AE80 4780 C160               0000AEC0  16520          BE    @L1240
0000AE84                                   16521 @L1239   DS    0H
0000AE84 E3F0 C090 0004          0000ADF0  16522          LG    15,@lit_2019_773
0000AE8A 41F0 F2A4               000002A4  16523          LA    15,676(0,15)
0000AE8E E3F0 D0B8 0024          000000B8  16524          STG   15,184(0,13)
0000AE94 E3F0 C088 0004          0000ADE8  16525          LG    15,@lit_2019_774
0000AE9A 4110 F1B2               000001B2  16526          LA    1,434(0,15)
0000AE9E E310 D0C0 0024          000000C0  16527          STG   1,192(0,13)
0000AEA4 E548 D0C8 05A8          000000C8  16528          MVGHI 200(13),1448
0000AEAA 41F0 F9F4               000009F4  16529          LA    15,2548(0,15)
0000AEAE E3F0 D0D0 0024          000000D0  16530          STG   15,208(0,13)
0000AEB4 4110 D0B8               000000B8  16531          LA    1,184(0,13)
0000AEB8 E3F0 C080 0004          0000ADE0  16532          LG    15,@lit_2019_775 ; __assert
0000AEBE                                   16533 @@gen_label1078 DS    0H
0000AEBE 05EF                              16534          BALR  14,15
0000AEC0                                   16535 @@gen_label1079 DS    0H
0000AEC0                                   16536 @L1240   DS    0H
                                           16537 * ***
                                           16538 * ***                   rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_\
                                           16539 * IN_TRANSACTION);
0000AEC0 E320 D0B8 0024          000000B8  16540          STG   2,184(0,13)
0000AEC6 E548 D0C0 0004          000000C0  16541          MVGHI 192(13),4
0000AECC 4110 D0B8               000000B8  16542          LA    1,184(0,13)
0000AED0 E3F0 C098 0004          0000ADF8  16543          LG    15,@lit_2019_776 ; rd_kafka_txn_set_state
0000AED6                                   16544 @@gen_label1080 DS    0H
0000AED6 05EF                              16545          BALR  14,15
0000AED8                                   16546 @@gen_label1081 DS    0H
                                                                                                                           Page  332 
  Active Usings: @REGION_2019_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16547 * ***
                                           16548 * ***                   ((rk->rk_eos.txn_req_cnt == 0) ? (void)0 : __a\
                                           16549 * ssert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c", 1\
                                           16550 * 452, "rk->rk_eos.txn_req_cnt == 0"));
0000AED8 E55C 2E10 0000          00000E10  16551          CHSI  3600(2),0
0000AEDE 4780 C1BE               0000AF1E  16552          BE    @L1242
0000AEE2                                   16553 @L1241   DS    0H
0000AEE2 E3F0 C090 0004          0000ADF0  16554          LG    15,@lit_2019_773
0000AEE8 41F0 F2A4               000002A4  16555          LA    15,676(0,15)
0000AEEC E3F0 D0B8 0024          000000B8  16556          STG   15,184(0,13)
0000AEF2 E3F0 C088 0004          0000ADE8  16557          LG    15,@lit_2019_774
0000AEF8 4110 F1B2               000001B2  16558          LA    1,434(0,15)
0000AEFC E310 D0C0 0024          000000C0  16559          STG   1,192(0,13)
0000AF02 E548 D0C8 05AC          000000C8  16560          MVGHI 200(13),1452
0000AF08 41F0 FA2C               00000A2C  16561          LA    15,2604(0,15)
0000AF0C E3F0 D0D0 0024          000000D0  16562          STG   15,208(0,13)
0000AF12 4110 D0B8               000000B8  16563          LA    1,184(0,13)
0000AF16 E3F0 C080 0004          0000ADE0  16564          LG    15,@lit_2019_775 ; __assert
0000AF1C                                   16565 @@gen_label1083 DS    0H
0000AF1C 05EF                              16566          BALR  14,15
0000AF1E                                   16567 @@gen_label1084 DS    0H
0000AF1E                                   16568 @L1242   DS    0H
                                           16569 * ***                   rd_atomic64_set(&rk->rk_eos.txn_dr_fails, 0);
0000AF1E 41F0 2EA8               00000EA8  16570          LA    15,3752(0,2)
0000AF22 E3F0 D0B8 0024          000000B8  16571          STG   15,184(0,13)
0000AF28 D707 D0C0 D0C0 000000C0 000000C0  16572          XC    192(8,13),192(13)
0000AF2E 4110 D0B8               000000B8  16573          LA    1,184(0,13)
0000AF32 E3F0 C0A0 0004          0000AE00  16574          LG    15,@lit_2019_780 ; rd_atomic64_set
0000AF38                                   16575 @@gen_label1085 DS    0H
0000AF38 05EF                              16576          BALR  14,15
0000AF3A                                   16577 @@gen_label1086 DS    0H
                                           16578 * ***                   rk->rk_eos.txn_err = RD_KAFKA_RESP_ERR_NO_ERRO\
                                           16579 * R;
0000AF3A E54C 2ED8 0000          00000ED8  16580          MVHI  3800(2),0   ; offset of txn_err in 0000146
                                           16581 * ***                   do { if ((rk->rk_eos.txn_errstr)) rd_free(rk->\
                                           16582 * rk_eos.txn_errstr); } while (0);
0000AF40                                   16583 @L1243   DS    0H
0000AF40 E3F0 2EE0 0002          00000EE0  16584          LTG   15,3808(0,2) ; offset of txn_errstr in 0000146
0000AF46 4780 C202               0000AF62  16585          BZ    @L1246
0000AF4A E3F0 2EE0 0004          00000EE0  16586          LG    15,3808(0,2)
0000AF50 E3F0 D0B8 0024          000000B8  16587          STG   15,184(0,13)
0000AF56 4110 D0B8               000000B8  16588          LA    1,184(0,13)
0000AF5A E3F0 C0A8 0004          0000AE08  16589          LG    15,@lit_2019_781 ; rd_free
0000AF60                                   16590 @@gen_label1088 DS    0H
0000AF60 05EF                              16591          BALR  14,15
0000AF62                                   16592 @@gen_label1089 DS    0H
0000AF62                                   16593 @L1246   DS    0H
                                           16594 * ***                   rk->rk_eos.txn_errstr = ((void *)0);
0000AF62 A7F9 0000               00000000  16595          LGHI  15,0        ; 0
0000AF66 E3F0 2EE0 0024          00000EE0  16596          STG   15,3808(0,2) ; offset of txn_errstr in 0000146
                                           16597 * ***
                                           16598 * ***
                                                                                                                           Page  333 
  Active Usings: @REGION_2019_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16599 * ***
                                           16600 * ***
                                           16601 * ***                   wakeup_brokers = 1;
0000AF6C 9201 D0B0      000000B0 00000001  16602          MVI   176(13),1   ; wakeup_brokers
                                           16603 * ***
                                           16604 * ***           }
0000AF70                                   16605 @L1238   DS    0H
                                           16606 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000AF70 41F0 29A0               000009A0  16607          LA    15,2464(0,2)
0000AF74 E3F0 D0B8 0024          000000B8  16608          STG   15,184(0,13)
0000AF7A 4110 D0B8               000000B8  16609          LA    1,184(0,13)
0000AF7E E3F0 C0B0 0004          0000AE10  16610          LG    15,@lit_2019_783 ; rwlock_wrunlock
0000AF84                                   16611 @@gen_label1090 DS    0H
0000AF84 05EF                              16612          BALR  14,15
0000AF86                                   16613 @@gen_label1091 DS    0H
                                           16614 * ***
                                           16615 * ***           if (wakeup_brokers)
0000AF86 9500 D0B0      000000B0 00000000  16616          CLI   176(13),0
0000AF8A 4780 C246               0000AFA6  16617          BE    @L1247
                                           16618 * ***                   rd_kafka_all_brokers_wakeup(rk, RD_KAFKA_BROKE\
                                           16619 * R_STATE_INIT);
0000AF8E E320 D0B8 0024          000000B8  16620          STG   2,184(0,13)
0000AF94 D707 D0C0 D0C0 000000C0 000000C0  16621          XC    192(8,13),192(13)
0000AF9A 4110 D0B8               000000B8  16622          LA    1,184(0,13)
0000AF9E E3F0 C0B8 0004          0000AE18  16623          LG    15,@lit_2019_784 ; rd_kafka_all_brokers_wakeup
0000AFA4                                   16624 @@gen_label1093 DS    0H
0000AFA4 05EF                              16625          BALR  14,15
0000AFA6                                   16626 @@gen_label1094 DS    0H
0000AFA6                                   16627 @L1247   DS    0H
                                           16628 * ***
                                           16629 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           16630 * >rko_replyq.q),
                                           16631 * ***                                             error);
0000AFA6 E3F0 4010 0004          00000010  16632          LG    15,16(0,4)  ; rko
0000AFAC E3F0 F040 0004          00000040  16633          LG    15,64(0,15)
0000AFB2 E3F0 D0B8 0024          000000B8  16634          STG   15,184(0,13)
0000AFB8 4110 D0B8               000000B8  16635          LA    1,184(0,13)
0000AFBC E3F0 C0C0 0004          0000AE20  16636          LG    15,@lit_2019_785 ; rd_kafka_q_keep
0000AFC2                                   16637 @@gen_label1095 DS    0H
0000AFC2 05EF                              16638          BALR  14,15
0000AFC4                                   16639 @@gen_label1096 DS    0H
0000AFC4 E3F0 D0B8 0024          000000B8  16640          STG   15,184(0,13)
0000AFCA E330 D0C0 0024          000000C0  16641          STG   3,192(0,13)
0000AFD0 4110 D0B8               000000B8  16642          LA    1,184(0,13)
0000AFD4 E3F0 C0C8 0004          0000AE28  16643          LG    15,@lit_2019_786 ; rd_kafka_txn_curr_api_reply_error
0000AFDA                                   16644 @@gen_label1097 DS    0H
0000AFDA 05EF                              16645          BALR  14,15
0000AFDC                                   16646 @@gen_label1098 DS    0H
                                           16647 * ***
                                           16648 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000AFDC A7F9 0001               00000001  16649          LGHI  15,1        ; 1
                                           16650 * ***   }
                                                                                                                           Page  334 
  Active Usings: @REGION_2019_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000AFE0                                   16651 @ret_lab_2019 DS 0H
                                           16652 * * **** Start of Epilogue
                                           16653          DCCEPIL
0000AFE0                                   16654+         ds 0h                                                          01-DCCEP
                                           16655+* Epilog
0000AFE0 D707 D088 D088 00000088 00000088  16656+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000AFE6 E3D0 D080 0004          00000080  16657+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000AFEC E3C0 D090 0004          00000090  16658+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000AFF2 E3B0 C018 0004          00000018  16659+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000AFF8 E3C0 B010 0021          00000010  16660+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000AFFE E3E0 D008 0004          00000008  16661+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000B004 EB1C D020 0004          00000020  16662+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000B00A 078E                              16663+         bcr 8,14                if same dsab, just return              01-DCCEP
0000B00C E3F0 D010 0024          00000010  16664+         stg 15,16(0,13)         save return code                       01-DCCEP
0000B012 E300 D018 0024          00000018  16665+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000B018 E3F0 D090 0004          00000090  16666+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000B01E E3F0 F018 0004          00000018  16667+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000B024 47F0 F040               00000040  16668+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16669+* End of Epilog
                                           16670 * * **** End of Epilogue
                                           16671          DROP  12
                                           16672 *
                                           16673 *   DSECT for automatic variables in "rd_kafka_txn_op_begin_transactio
                                           16674 *           n"
                                           16675 *      (FUNCTION #2019)
                                           16676 *
00000000                00000000 000000B1  16677 @AUTO#rd_kafka_txn_op_begin_transaction DSECT
00000000                                   16678          DS    XL168
000000A8                                   16679 rd_kafka_txn_op_begin_transaction#__cl3#0 DS 8XL1 ; __cl3
000000B0                                   16680 rd_kafka_txn_op_begin_transaction#wakeup_brokers#0 DS 1CL1 ; wakeup_bro*
                                                                kers
                                           16681 *
0000B028                00000000 00014658  16682 @CODE    CSECT
                                           16683 *
                                           16684 *
                                           16685 *
                                           16686 * ....... start of rd_kafka_begin_transaction
                                           16687 rd_kafka_begin_transaction ALIAS X'99846D92818692816D82858789956DA39981*
                                                                95A28183A3899695'
0000B028                                   16688 @LNAME1081 DS  0H
0000B028 0000001A                          16689          DC    X'0000001A'
0000B02C 99846D9281869281                  16690          DC    C'rd_kafka_begin_transaction'
0000B046 00                                16691          DC    X'00'
                                           16692 rd_kafka_begin_transaction DCCPRLG CINDEX=1081,BASER=12,FRAME=200,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1081
                                           16693          macro
                                           16694          dccextrn &m
                                           16695          gblc    &$dccext(1000)
                                           16696          gbla    &$dccexti
                                           16697          lcla    &i
                                           16698 &$dccext(&$dccexti+1) setc    '&m'
                                           16699 &i       seta    1
                                                                                                                           Page  335 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16700 .loop    aif    (&i gt &$dccexti).around
                                           16701          aif    ('&$dccext(&i)' eq '&m').getout
                                           16702 &i       seta    &i+1
                                           16703          ago     .loop
                                           16704 .around  anop
                                           16705 &$dccexti seta &$dccexti+1
                                           16706          extrn  &m
                                           16707 .getout  anop
                                           16708          mend
0000B048                                   16709+$eye0258    ds    0d                                                    02-DCCCA
0000B048 C4C3C3                            16710+         dc cl3'DCC'                                                    02-DCCCA
0000B04B 01                                16711+         dc xl1'01' format one                                          02-DCCCA
0000B04C 00000000                          16712+         dc a(0)                                                        02-DCCCA
0000B050 000000000000B0BA                  16713+         dc ad(@PER_1081)                                               02-DCCCA
0000B058 00000000000000C8                  16714+         dc ad(200)                                                     02-DCCCA
0000B060 0000000000000000                  16715+         dc ad(0)                                                       02-DCCCA
0000B068 0000000000001000                  16716+         dc ad(4096)                                                    02-DCCCA
0000B070 20                                16717+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000B071 03                                16718+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000B072 03                                16719+         dc al1(3)                                                      02-DCCCA
0000B073 08                                16720+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000B074 00                                16721+         dc bl.8'00000000'                                              02-DCCCA
0000B075 000000                            16722+         dc al3(0)                                                      02-DCCCA
0000B078 000000000000B028                  16723+         dc ad(@LNAME1081)                                              02-DCCCA
0000B080                                   16724+         ds 0d                                                          02-DCCCA
0000B080 000000000000B048                  16725+         dc ad($eye0258)                                                02-DCCCA
0000B088 0000000000000000                  16726+         dc ad(0)                                                       02-DCCCA
0000B090                                   16727+         ds    0d                                                       01-DCCPR
                                           16728+         entry rd_kafka_begin_transaction                               01-DCCPR
0000B090                                   16729+rd_kafka_begin_transaction ds 0d                                        01-DCCPR
0000B090                                   16730+@REGION_1081_1 ds 0h                                                    01-DCCPR
0000B090 EBEC D008 0024          00000008  16731+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000B096 E3E0 D088 0004          00000088  16732+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000B09C E3C0 D090 0004          00000090  16733+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000B0A2 B904 002E                         16734+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000B0A6 E3B0 C018 0004          00000018  16735+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000B0AC A7EB 00C8               000000C8  16736+         aghi  14,200              increase by frame size               01-DCCPR
0000B0B0 E3E0 C020 0021          00000020  16737+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000B0B6 4720 B020               00000020  16738+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000B0BA                                   16739+@PER_1081 ds   0h                                                       01-DCCPR
0000B0BA EBDE 2080 0024          00000080  16740+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000B0C0 E3C0 2090 0024          00000090  16741+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000B0C6 B904 00D2                         16742+         lgr   13,2                set real frame pointer               01-DCCPR
0000B0CA B904 00CF                         16743+         lgr   12,15               set base reg                         01-DCCPR
                        0000B090           16744+         using @REGION_1081_1,12                                        01-DCCPR
                                           16745 * ******* End of Prologue
                                           16746 * *
0000B0CE E330 1000 0004          00000000  16747          LG    3,0(0,1)    ; rk
                                           16748 * ***           rd_kafka_op_t *reply;
                                           16749 * ***           rd_kafka_error_t *error;
                                           16750 * ***
                                           16751 * ***           if ((error = rd_kafka_ensure_transactional(rk)))
                                                                                                                           Page  336 
  Active Usings: @REGION_1081_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B0D4 E330 D0B0 0024          000000B0  16752          STG   3,176(0,13)
0000B0DA 4110 D0B0               000000B0  16753          LA    1,176(0,13)
0000B0DE E3F0 C070 0004          0000B100  16754          LG    15,@lit_1081_789 ; rd_kafka_ensure_transactional
0000B0E4                                   16755 @@gen_label1099 DS    0H
0000B0E4 05EF                              16756          BALR  14,15
0000B0E6                                   16757 @@gen_label1100 DS    0H
0000B0E6 B902 002F                         16758          LTGR  2,15        ; error
0000B0EA 4780 C098               0000B128  16759          BZ    @L1248
                                           16760 * ***                   return error;
0000B0EE B904 00F2                         16761          LGR   15,2
0000B0F2 47F0 C10E               0000B19E  16762          B     @ret_lab_1081
0000B0F8                                   16763          DS    0D
0000B0F8 000000C8                          16764 @FRAMESIZE_1081 DC F'200'
0000B0FC 00000000
0000B100 0000000000004588                  16765 @lit_1081_789 DC AD(rd_kafka_ensure_transactional)
0000B108 0000000000000000                  16766 @lit_1081_791 DC AD(rd_kafka_op_new_cb)
0000B110 000000000000AD60                  16767 @lit_1081_790 DC AD(rd_kafka_txn_op_begin_transaction)
0000B118 0000000000000000                  16768 @lit_1081_792 DC AD(rd_kafka_op_req)
0000B120 0000000000000000                  16769 @lit_1081_794 DC AD(rd_kafka_op_destroy)
0000B128                                   16770 @L1248   DS    0H
                                           16771 * ***
                                           16772 * ***           reply = rd_kafka_op_req(
                                           16773 * ***                   rk->rk_ops,
                                           16774 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           16775 * ***                   -1);
                                           16776 * ***                                      rd_kafka_txn_op_begin_trans\
                                           16777 * action),
0000B128 E330 D0B0 0024          000000B0  16778          STG   3,176(0,13)
0000B12E E548 D0B8 002F          000000B8  16779          MVGHI 184(13),47
0000B134 E3F0 C080 0004          0000B110  16780          LG    15,@lit_1081_790 ; rd_kafka_txn_op_begin_transaction
0000B13A E3F0 D0C0 0024          000000C0  16781          STG   15,192(0,13)
0000B140 4110 D0B0               000000B0  16782          LA    1,176(0,13)
0000B144 E3F0 C078 0004          0000B108  16783          LG    15,@lit_1081_791 ; rd_kafka_op_new_cb
0000B14A                                   16784 @@gen_label1102 DS    0H
0000B14A 05EF                              16785          BALR  14,15
0000B14C                                   16786 @@gen_label1103 DS    0H
0000B14C E310 3008 0004          00000008  16787          LG    1,8(0,3)
0000B152 E310 D0B0 0024          000000B0  16788          STG   1,176(0,13)
0000B158 E3F0 D0B8 0024          000000B8  16789          STG   15,184(0,13)
0000B15E E548 D0C0 FFFF          000000C0  16790          MVGHI 192(13),-1
0000B164 4110 D0B0               000000B0  16791          LA    1,176(0,13)
0000B168 E3F0 C088 0004          0000B118  16792          LG    15,@lit_1081_792 ; rd_kafka_op_req
0000B16E                                   16793 @@gen_label1104 DS    0H
0000B16E 05EF                              16794          BALR  14,15
0000B170                                   16795 @@gen_label1105 DS    0H
                                           16796 * ***
                                           16797 * ***           if ((error = reply->rko_error))
0000B170 E320 F028 0004          00000028  16798          LG    2,40(0,15)  ; offset of rko_error in rd_kafka_op_s
0000B176 B902 0012                         16799          LTGR  1,2
0000B17A 4780 C0F8               0000B188  16800          BZ    @L1249
                                           16801 * ***                   reply->rko_error = ((void *)0);
0000B17E A719 0000               00000000  16802          LGHI  1,0         ; 0
                                                                                                                           Page  337 
  Active Usings: @REGION_1081_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B182 E310 F028 0024          00000028  16803          STG   1,40(0,15)  ; offset of rko_error in rd_kafka_op_s
0000B188                                   16804 @L1249   DS    0H
                                           16805 * ***
                                           16806 * ***           rd_kafka_op_destroy(reply);
0000B188 E3F0 D0B0 0024          000000B0  16807          STG   15,176(0,13)
0000B18E 4110 D0B0               000000B0  16808          LA    1,176(0,13)
0000B192 E3F0 C090 0004          0000B120  16809          LG    15,@lit_1081_794 ; rd_kafka_op_destroy
0000B198                                   16810 @@gen_label1107 DS    0H
0000B198 05EF                              16811          BALR  14,15
0000B19A                                   16812 @@gen_label1108 DS    0H
                                           16813 * ***
                                           16814 * ***           return error;
0000B19A B904 00F2                         16815          LGR   15,2
                                           16816 * ***   }
0000B19E                                   16817 @ret_lab_1081 DS 0H
                                           16818 * * **** Start of Epilogue
                                           16819          DCCEPIL
0000B19E                                   16820+         ds 0h                                                          01-DCCEP
                                           16821+* Epilog
0000B19E D707 D088 D088 00000088 00000088  16822+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000B1A4 E3D0 D080 0004          00000080  16823+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000B1AA E3C0 D090 0004          00000090  16824+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000B1B0 E3B0 C018 0004          00000018  16825+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000B1B6 E3C0 B010 0021          00000010  16826+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000B1BC E3E0 D008 0004          00000008  16827+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000B1C2 EB1C D020 0004          00000020  16828+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000B1C8 078E                              16829+         bcr 8,14                if same dsab, just return              01-DCCEP
0000B1CA E3F0 D010 0024          00000010  16830+         stg 15,16(0,13)         save return code                       01-DCCEP
0000B1D0 E300 D018 0024          00000018  16831+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000B1D6 E3F0 D090 0004          00000090  16832+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000B1DC E3F0 F018 0004          00000018  16833+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000B1E2 47F0 F040               00000040  16834+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16835+* End of Epilog
                                           16836 * * **** End of Epilogue
                                           16837          DROP  12
                                           16838 *
                                           16839 *   DSECT for automatic variables in "rd_kafka_begin_transaction"
                                           16840 *      (FUNCTION #1081)
                                           16841 *
00000000                00000000 000000A8  16842 @AUTO#rd_kafka_begin_transaction DSECT
00000000                                   16843          DS    XL168
                                           16844 *
0000B1E6                00000000 00014658  16845 @CODE    CSECT
                                           16846 *
                                           16847 *
                                           16848 *
                                           16849 * ....... start of rd_kafka_txn_handle_TxnOffsetCommit
0000B1E6                                   16850 @LNAME2021 DS  0H
0000B1E6 00000023                          16851          DC    X'00000023'
0000B1EA 99846D9281869281                  16852          DC    C'rd_kafka_txn_handle_TxnOffsetCom'
0000B20A 9489A3                            16853          DC    C'mit'
0000B20D 00                                16854          DC    X'00'
                                                                                                                           Page  338 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           16855 rd_kafka_txn_handle_$Txn$Offset$Commit DCCPRLG CINDEX=2021,BASER=12,FRA*
                                                                ME=1336,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2021
                                           16856          macro
                                           16857          dccextrn &m
                                           16858          gblc    &$dccext(1000)
                                           16859          gbla    &$dccexti
                                           16860          lcla    &i
                                           16861 &$dccext(&$dccexti+1) setc    '&m'
                                           16862 &i       seta    1
                                           16863 .loop    aif    (&i gt &$dccexti).around
                                           16864          aif    ('&$dccext(&i)' eq '&m').getout
                                           16865 &i       seta    &i+1
                                           16866          ago     .loop
                                           16867 .around  anop
                                           16868 &$dccexti seta &$dccexti+1
                                           16869          extrn  &m
                                           16870 .getout  anop
                                           16871          mend
0000B210                                   16872+$eye0261    ds    0d                                                    02-DCCCA
0000B210 C4C3C3                            16873+         dc cl3'DCC'                                                    02-DCCCA
0000B213 01                                16874+         dc xl1'01' format one                                          02-DCCCA
0000B214 00000000                          16875+         dc a(0)                                                        02-DCCCA
0000B218 000000000000B282                  16876+         dc ad(@PER_2021)                                               02-DCCCA
0000B220 0000000000000538                  16877+         dc ad(1336)                                                    02-DCCCA
0000B228 0000000000000000                  16878+         dc ad(0)                                                       02-DCCCA
0000B230 0000000000001000                  16879+         dc ad(4096)                                                    02-DCCCA
0000B238 20                                16880+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000B239 03                                16881+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000B23A 03                                16882+         dc al1(3)                                                      02-DCCCA
0000B23B 08                                16883+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000B23C 00                                16884+         dc bl.8'00000000'                                              02-DCCCA
0000B23D 000000                            16885+         dc al3(0)                                                      02-DCCCA
0000B240 000000000000B1E6                  16886+         dc ad(@LNAME2021)                                              02-DCCCA
0000B248                                   16887+         ds 0d                                                          02-DCCCA
0000B248 000000000000B210                  16888+         dc ad($eye0261)                                                02-DCCCA
0000B250 0000000000000000                  16889+         dc ad(0)                                                       02-DCCCA
0000B258                                   16890+         ds    0d                                                       01-DCCPR
0000B258                                   16891+rd_kafka_txn_handle_$Txn$Offset$Commit ds 0d                            01-DCCPR
0000B258                                   16892+@REGION_2021_1 ds 0h                                                    01-DCCPR
0000B258 EBEC D008 0024          00000008  16893+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000B25E E3E0 D088 0004          00000088  16894+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000B264 E3C0 D090 0004          00000090  16895+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000B26A B904 002E                         16896+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000B26E E3B0 C018 0004          00000018  16897+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000B274 A7EB 0538               00000538  16898+         aghi  14,1336             increase by frame size               01-DCCPR
0000B278 E3E0 C020 0021          00000020  16899+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000B27E 4720 B020               00000020  16900+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000B282                                   16901+@PER_2021 ds   0h                                                       01-DCCPR
0000B282 EBDE 2080 0024          00000080  16902+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000B288 E3C0 2090 0024          00000090  16903+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000B28E B904 00D2                         16904+         lgr   13,2                set real frame pointer               01-DCCPR
0000B292 B904 00CF                         16905+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page  339 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        0000B258           16906+         using @REGION_2021_1,12                                        01-DCCPR
0000B296 B904 0051                         16907          LGR   5,1
                                           16908 * ******* End of Prologue
                                           16909 * *
                                           16910 * ***           const int log_decode_errors = 3;
0000B29A EB9A 5000 0004          00000000  16911          LMG   9,10,0(5)   ; rk
0000B2A0 5830 5014               00000014  16912          L     3,20(0,5)   ; err
0000B2A4 E3B0 5018 0004          00000018  16913          LG    11,24(0,5)  ; rkbuf
                                           16914 * ***           rd_kafka_op_t *rko = opaque;
0000B2AA E340 5028 0004          00000028  16915          LG    4,40(0,5)   ; opaque
                                           16916 * ***           int actions = 0;
0000B2B0 A728 0000               00000000  16917          LHI   2,0         ; 0
                                           16918 * ***           rd_kafka_topic_partition_list_t *partitions = ((void *\
                                           16919 * )0);
0000B2B4 A769 0000               00000000  16920          LGHI  6,0         ; 0
                                           16921 * ***           char errstr[512];
                                           16922 * ***
                                           16923 * ***           *errstr = '\0';
0000B2B8 9200 D0B0      000000B0 00000000  16924          MVI   176(13),0
                                           16925 * ***
                                           16926 * ***           if (err != RD_KAFKA_RESP_ERR__DESTROY &&
0000B2BC A73E FF3B               0000FF3B  16927          CHI   3,-197
0000B2C0 4780 C08E               0000B2E6  16928          BE    @L1250
                                           16929 * ***               !rd_kafka_q_ready(rko->rko_replyq.q))
0000B2C4 E3F0 4040 0004          00000040  16930          LG    15,64(0,4)
0000B2CA E3F0 D4B0 0024          000004B0  16931          STG   15,1200(0,13)
0000B2D0 4110 D4B0               000004B0  16932          LA    1,1200(0,13)
0000B2D4 E3F0 C0A0 0004          0000B2F8  16933          LG    15,@lit_2021_799 ; rd_kafka_q_ready
0000B2DA                                   16934 @@gen_label1110 DS    0H
0000B2DA 05EF                              16935          BALR  14,15
0000B2DC                                   16936 @@gen_label1111 DS    0H
0000B2DC 12FF                              16937          LTR   15,15
0000B2DE 4770 C08E               0000B2E6  16938          BNZ   @L1250
                                           16939 * ***                   err = RD_KAFKA_RESP_ERR__OUTDATED;
0000B2E2 A738 FF59               0000FF59  16940          LHI   3,-167      ; -167
0000B2E6                                   16941 @L1250   DS    0H
                                           16942 * ***
                                           16943 * ***           if (err)
0000B2E6 1233                              16944          LTR   3,3
0000B2E8 4780 C190               0000B3E8  16945          BZ    @L1258
                                           16946 * ***                   goto done;
0000B2EC 47F0 C566               0000B7BE  16947          B     @_done@2021@4
0000B2F0                                   16948          DS    0D
0000B2F0 00000538                          16949 @FRAMESIZE_2021 DC F'1336'
0000B2F4 00000000
0000B2F8 0000000000001CC0                  16950 @lit_2021_799 DC AD(rd_kafka_q_ready)
0000B300 0000000000000000                  16951 @lit_2021_802 DC AD(rd_slice_read)
0000B308 0000000000001730                  16952 @lit_2021_803 DC AD(rd_slice_abs_offset)
0000B310 0000000000000000                  16953 @lit_2021_806 DC AD(rd_kafka_crash)
0000B318 0000000000014658                  16954 @lit_2021_805 DC AD(@DATA)
0000B320 0000000000014A98                  16955 @lit_2021_804 DC AD(@strings@)
0000B328 0000000000000000                  16956 @lit_2021_808 DC AD(snprintf)
                                                                                                                           Page  340 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B330 0000000000000000                  16957 @lit_2021_810 DC AD(mtx_lock)
0000B338 0000000000001BA8                  16958 @lit_2021_812 DC AD(rd_strlcpy)
0000B340 0000000000000000                  16959 @lit_2021_814 DC AD(mtx_unlock)
0000B348 0000000000001988                  16960 @lit_2021_815 DC AD(rd_kafka_$Api$Key2str)
0000B350 00000000000017D8                  16961 @lit_2021_816 DC AD(rd_slice_offset)
0000B358 0000000000000000                  16962 @lit_2021_821 DC AD(rd_kafka_log0)
0000B360 0000000000000000                  16963 @lit_2021_822 DC AD(rd_kafka_op_throttle_time)
0000B368 0000000000000000                  16964 @lit_2021_823 DC AD(rd_kafka_buf_read_topic_partitions)
0000B370 0000000000000000                  16965 @lit_2021_824 DC AD(rd_kafka_topic_partition_list_get_err)
0000B378 0000000000000000                  16966 @lit_2021_825 DC AD(rd_kafka_topic_partition_list_str)
0000B380 0000000000000000                  16967 @lit_2021_826 DC AD(rd_kafka_broker_name)
0000B388 000003E8                          16968 @lit_2021_828 DC F'1000' 0x000003e8
0000B38C 00000000
0000B390 0000000000000000                  16969 @lit_2021_832 DC AD(rd_kafka_err2str)
0000B398 0000000000000000                  16970 @lit_2021_836 DC AD(rd_kafka_topic_partition_list_destroy)
0000B3A0 0000083C                          16971 @lit_region_diff_2021_1_2  DC A(@REGION_2021_2-@REGION_2021_1)
0000B3A4 00000000
0000B3A8 0000000000000000                  16972 @lit_2021_838 DC AD(rd_kafka_coord_cache_evict)
0000B3B0 0000000000000001                  16973 @lit_2021_839 DC FD'1' 0x0000000000000001
0000B3B8 0000000000000006                  16974 @lit_2021_840 DC FD'6' 0x0000000000000006
0000B3C0 0000000000000003                  16975 @lit_2021_841 DC FD'3' 0x0000000000000003
0000B3C8 0000000000000004                  16976 @lit_2021_842 DC FD'4' 0x0000000000000004
0000B3D0 0000000000000007                  16977 @lit_2021_843 DC FD'7' 0x0000000000000007
0000B3D8 0000000000000010                  16978 @lit_2021_844 DC FD'16' 0x0000000000000010
0000B3E0 0000000000000040                  16979 @lit_2021_845 DC FD'64' 0x0000000000000040
                                           16980 * ***
                                           16981 * ***           do { int32_t _throttle_time_ms; do { int32_t _v; do { \
                                           16982 * size_t __len2 = (size_t)(sizeof(_v)); if (!rd_slice_read(&(rkbuf)->r\
                                           16983 * kbuf_reader, &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if\
                                           16984 *  (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(\
                                           16985 * rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { i\
                                           16986 * f (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\
                                           16987 * \\src\\rdkafka_txnmgr.c",1532, __FUNCTION__, (((void *)0)), "assert:\
                                           16988 *  " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__\
                                           16989 * tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmps\
                                           16990 * tr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)-\
                                           16991 * >rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logna\
                                           16992 * me, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_l\
                                           16993 * ock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rk\
                                           16994 * buf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "P\
                                           16995 * rotocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu"\
                                           16996 *  " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining byt\
                                           16997 * es (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf-\
                                           16998 * >rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&\
                                           16999 * rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTI\
                                           17000 * ON__, 1532, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offs\
                                           17001 * et(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rk\
                                           17002 * buf_uflow_mitigation : "incorrect broker.version.fallback?", __tmpst\
                                           17003 * r); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW\
                                           17004 * ; goto err_parse; } while (0); } } while (0); } while (0); *(&_throt\
                                           17005 * tle_time_ms) = (_v); } while (0); rd_kafka_op_throttle_time((rkbuf)-\
                                           17006 * >rkbuf_rkb, (rkbuf)->rkbuf_rkb->rkb_rk->rk_rep, _throttle_time_ms); \
                                                                                                                           Page  341 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           17007 * } while (0);
0000B3E8                                   17008 @L1258   DS    0H
0000B3E8 A739 0004               00000004  17009          LGHI  3,4         ; 4
0000B3EC 41F0 B078               00000078  17010          LA    15,120(0,11)
0000B3F0 E3F0 D4B0 0024          000004B0  17011          STG   15,1200(0,13)
0000B3F6 41F0 D0A8               000000A8  17012          LA    15,168(0,13)
0000B3FA E3F0 D4B8 0024          000004B8  17013          STG   15,1208(0,13)
0000B400 E330 D4C0 0024          000004C0  17014          STG   3,1216(0,13)
0000B406 4110 D4B0               000004B0  17015          LA    1,1200(0,13)
0000B40A E3F0 C0A8 0004          0000B300  17016          LG    15,@lit_2021_802 ; rd_slice_read
0000B410                                   17017 @@gen_label1114 DS    0H
0000B410 05EF                              17018          BALR  14,15
0000B412                                   17019 @@gen_label1115 DS    0H
0000B412 B902 00FF                         17020          LTGR  15,15
0000B416 4770 C44A               0000B6A2  17021          BNZ   @L1261
0000B41A                                   17022 @L1262   DS    0H
0000B41A E370 B098 0004          00000098  17023          LG    7,152(0,11) ; offset of end in rd_slice_s
0000B420 41F0 B078               00000078  17024          LA    15,120(0,11)
0000B424 E3F0 D4B0 0024          000004B0  17025          STG   15,1200(0,13)
0000B42A 4110 D4B0               000004B0  17026          LA    1,1200(0,13)
0000B42E E3F0 C0B0 0004          0000B308  17027          LG    15,@lit_2021_803 ; rd_slice_abs_offset
0000B434                                   17028 @@gen_label1117 DS    0H
0000B434 05EF                              17029          BALR  14,15
0000B436                                   17030 @@gen_label1118 DS    0H
0000B436 B90B 007F                         17031          SLGR  7,15
0000B43A B921 0037                         17032          CLGR  3,7
0000B43E 47D0 C44A               0000B6A2  17033          BNH   @L1265
0000B442                                   17034 @L1266   DS    0H
0000B442 A7F8 0003               00000003  17035          LHI   15,3        ; 3
0000B446 12FF                              17036          LTR   15,15
0000B448 47D0 C440               0000B698  17037          BNH   @L1269
0000B44C                                   17038 @L1270   DS    0H
0000B44C E3F0 B100 0002          00000100  17039          LTG   15,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B452 4770 C240               0000B498  17040          BNZ   @L1273
0000B456 E3F0 C0C8 0004          0000B320  17041          LG    15,@lit_2021_804
0000B45C 4110 F1B2               000001B2  17042          LA    1,434(0,15)
0000B460 E310 D4B0 0024          000004B0  17043          STG   1,1200(0,13)
0000B466 E548 D4B8 05FC          000004B8  17044          MVGHI 1208(13),1532
0000B46C E310 C0C0 0004          0000B318  17045          LG    1,@lit_2021_805
0000B472 4110 12C6               000002C6  17046          LA    1,710(0,1)
0000B476 E310 D4C0 0024          000004C0  17047          STG   1,1216(0,13)
0000B47C D707 D4C8 D4C8 000004C8 000004C8  17048          XC    1224(8,13),1224(13)
0000B482 41F0 F582               00000582  17049          LA    15,1410(0,15)
0000B486 E3F0 D4D0 0024          000004D0  17050          STG   15,1232(0,13)
0000B48C 4110 D4B0               000004B0  17051          LA    1,1200(0,13)
0000B490 E3F0 C0B8 0004          0000B310  17052          LG    15,@lit_2021_806 ; rd_kafka_crash
0000B496                                   17053 @@gen_label1122 DS    0H
0000B496 05EF                              17054          BALR  14,15
0000B498                                   17055 @@gen_label1123 DS    0H
0000B498                                   17056 @L1273   DS    0H
0000B498 41F0 D2B0               000002B0  17057          LA    15,688(0,13)
0000B49C E3F0 D4B0 0024          000004B0  17058          STG   15,1200(0,13)
                                                                                                                           Page  342 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B4A2 E548 D4B8 0100          000004B8  17059          MVGHI 1208(13),256
0000B4A8 E3F0 C0C8 0004          0000B320  17060          LG    15,@lit_2021_804
0000B4AE 41F0 F59C               0000059C  17061          LA    15,1436(0,15)
0000B4B2 E3F0 D4C0 0024          000004C0  17062          STG   15,1216(0,13)
0000B4B8 4110 D4B0               000004B0  17063          LA    1,1200(0,13)
0000B4BC E3F0 C0D0 0004          0000B328  17064          LG    15,@lit_2021_808 ; snprintf
0000B4C2                                   17065 @@gen_label1124 DS    0H
0000B4C2 05EF                              17066          BALR  14,15
0000B4C4                                   17067 @@gen_label1125 DS    0H
0000B4C4 41F0 D2B0               000002B0  17068          LA    15,688(0,13)
0000B4C8 B904 001F                         17069          LGR   1,15
0000B4CC A709 0000               00000000  17070          LGHI  0,0
0000B4D0                                   17071 @@gen_label1126 DS 0H
0000B4D0 B25E 000F                         17072          SRST  0,15
0000B4D4 4710 C278               0000B4D0  17073          BC  1,@@gen_label1126
0000B4D8 B90B 0001                         17074          SLGR  0,1
0000B4DC A70F 0002               00000002  17075          CGHI  0,2
0000B4E0 4770 C290               0000B4E8  17076          BNE   @L1275
0000B4E4 9200 D2B0      000002B0 00000000  17077          MVI   688(13),0
0000B4E8                                   17078 @L1274   DS    0H
0000B4E8                                   17079 @L1275   DS    0H
0000B4E8 E3F0 B100 0004          00000100  17080          LG    15,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B4EE A739 1638               00001638  17081          LGHI  3,5688      ; 5688
0000B4F2 41F3 F000               00000000  17082          LA    15,0(3,15)
0000B4F6 E3F0 D4B0 0024          000004B0  17083          STG   15,1200(0,13)
0000B4FC 4110 D4B0               000004B0  17084          LA    1,1200(0,13)
0000B500 E3F0 C0D8 0004          0000B330  17085          LG    15,@lit_2021_810 ; mtx_lock
0000B506                                   17086 @@gen_label1128 DS    0H
0000B506 05EF                              17087          BALR  14,15
0000B508                                   17088 @@gen_label1129 DS    0H
0000B508 41F0 D3B0               000003B0  17089          LA    15,944(0,13)
0000B50C E3F0 D4B0 0024          000004B0  17090          STG   15,1200(0,13)
0000B512 E3F0 B100 0004          00000100  17091          LG    15,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B518 A719 1630               00001630  17092          LGHI  1,5680      ; 5680
0000B51C E3F1 F000 0004          00000000  17093          LG    15,0(1,15)
0000B522 E3F0 D4B8 0024          000004B8  17094          STG   15,1208(0,13)
0000B528 E548 D4C0 0100          000004C0  17095          MVGHI 1216(13),256
0000B52E 4110 D4B0               000004B0  17096          LA    1,1200(0,13)
0000B532 E3F0 C0E0 0004          0000B338  17097          LG    15,@lit_2021_812 ; rd_strlcpy
0000B538                                   17098 @@gen_label1130 DS    0H
0000B538 05EF                              17099          BALR  14,15
0000B53A                                   17100 @@gen_label1131 DS    0H
0000B53A E3F0 B100 0004          00000100  17101          LG    15,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B540 41F3 F000               00000000  17102          LA    15,0(3,15)
0000B544 E3F0 D4B0 0024          000004B0  17103          STG   15,1200(0,13)
0000B54A 4110 D4B0               000004B0  17104          LA    1,1200(0,13)
0000B54E E3F0 C0E8 0004          0000B340  17105          LG    15,@lit_2021_814 ; mtx_unlock
0000B554                                   17106 @@gen_label1132 DS    0H
0000B554 05EF                              17107          BALR  14,15
0000B556                                   17108 @@gen_label1133 DS    0H
0000B556 E3F0 B0B8 0015          000000B8  17109          LGH   15,184(0,11)
0000B55C E3F0 D4B0 0024          000004B0  17110          STG   15,1200(0,13)
                                                                                                                           Page  343 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B562 4110 D4B0               000004B0  17111          LA    1,1200(0,13)
0000B566 E3F0 C0F0 0004          0000B348  17112          LG    15,@lit_2021_815 ; rd_kafka_ApiKey2str
0000B56C                                   17113 @@gen_label1134 DS    0H
0000B56C 05EF                              17114          BALR  14,15
0000B56E                                   17115 @@gen_label1135 DS    0H
0000B56E B904 003F                         17116          LGR   3,15
0000B572 41F0 B078               00000078  17117          LA    15,120(0,11)
0000B576 E3F0 D4B0 0024          000004B0  17118          STG   15,1200(0,13)
0000B57C 4110 D4B0               000004B0  17119          LA    1,1200(0,13)
0000B580 E3F0 C0F8 0004          0000B350  17120          LG    15,@lit_2021_816 ; rd_slice_offset
0000B586                                   17121 @@gen_label1136 DS    0H
0000B586 05EF                              17122          BALR  14,15
0000B588                                   17123 @@gen_label1137 DS    0H
0000B588 B904 007F                         17124          LGR   7,15
0000B58C E380 B098 0004          00000098  17125          LG    8,152(0,11) ; offset of end in rd_slice_s
0000B592 41F0 B078               00000078  17126          LA    15,120(0,11)
0000B596 E3F0 D4B0 0024          000004B0  17127          STG   15,1200(0,13)
0000B59C 4110 D4B0               000004B0  17128          LA    1,1200(0,13)
0000B5A0 E3F0 C0B0 0004          0000B308  17129          LG    15,@lit_2021_803 ; rd_slice_abs_offset
0000B5A6                                   17130 @@gen_label1138 DS    0H
0000B5A6 05EF                              17131          BALR  14,15
0000B5A8                                   17132 @@gen_label1139 DS    0H
0000B5A8 B90B 008F                         17133          SLGR  8,15
0000B5AC E3F0 B1E8 0002          000001E8  17134          LTG   15,488(0,11) ; offset of rkbuf_uflow_mitigation in rd_ka*
                                                                fka_buf_s
0000B5B2 4780 C368               0000B5C0  17135          BZ    @L1278
0000B5B6 E3F0 B1E8 0004          000001E8  17136          LG    15,488(0,11) ; offset of rkbuf_uflow_mitigation in rd_ka*
                                                                fka_buf_s
0000B5BC 47F0 C372               0000B5CA  17137          B     @L1279
0000B5C0                                   17138 @L1278   DS    0H
0000B5C0 E3F0 C0C8 0004          0000B320  17139          LG    15,@lit_2021_804
0000B5C6 41F0 F5A0               000005A0  17140          LA    15,1440(0,15)
0000B5CA                                   17141 @L1279   DS    0H
0000B5CA E310 B100 0004          00000100  17142          LG    1,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B5D0 E310 1FD0 0004          00000FD0  17143          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000B5D6 4110 1210               00000210  17144          LA    1,528(0,1)
0000B5DA E310 D4B0 0024          000004B0  17145          STG   1,1200(0,13)
0000B5E0 E310 B100 0004          00000100  17146          LG    1,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B5E6 E310 1FD0 0004          00000FD0  17147          LG    1,4048(0,1)
0000B5EC E310 D4B8 0024          000004B8  17148          STG   1,1208(0,13)
0000B5F2 4110 D3B0               000003B0  17149          LA    1,944(0,13)
0000B5F6 E310 D4C0 0024          000004C0  17150          STG   1,1216(0,13)
0000B5FC A718 0003               00000003  17151          LHI   1,3         ; 3
0000B600 B914 0011                         17152          LGFR  1,1
0000B604 E310 D4C8 0024          000004C8  17153          STG   1,1224(0,13)
0000B60A D707 D4D0 D4D0 000004D0 000004D0  17154          XC    1232(8,13),1232(13)
0000B610 E310 C0C8 0004          0000B320  17155          LG    1,@lit_2021_804
0000B616 41E0 15C4               000005C4  17156          LA    14,1476(0,1)
0000B61A E3E0 D4D8 0024          000004D8  17157          STG   14,1240(0,13)
0000B620 4110 15D0               000005D0  17158          LA    1,1488(0,1)
0000B624 E310 D4E0 0024          000004E0  17159          STG   1,1248(0,13)
0000B62A E330 D4E8 0024          000004E8  17160          STG   3,1256(0,13)
                                                                                                                           Page  344 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B630 4810 B0BA               000000BA  17161          LH    1,186(0,11)
0000B634 B914 0011                         17162          LGFR  1,1
0000B638 E310 D4F0 0024          000004F0  17163          STG   1,1264(0,13)
0000B63E E370 D4F8 0024          000004F8  17164          STG   7,1272(0,13)
0000B644 E310 B098 0004          00000098  17165          LG    1,152(0,11) ; offset of end in rd_slice_s
0000B64A E310 B090 000B          00000090  17166          SLG   1,144(0,11)
0000B650 E310 D500 0024          00000500  17167          STG   1,1280(0,13)
0000B656 E310 C0C0 0004          0000B318  17168          LG    1,@lit_2021_805
0000B65C 4110 12C6               000002C6  17169          LA    1,710(0,1)
0000B660 E310 D508 0024          00000508  17170          STG   1,1288(0,13)
0000B666 E548 D510 05FC          00000510  17171          MVGHI 1296(13),1532
0000B66C A719 0004               00000004  17172          LGHI  1,4         ; 4
0000B670 E310 D518 0024          00000518  17173          STG   1,1304(0,13)
0000B676 E380 D520 0024          00000520  17174          STG   8,1312(0,13)
0000B67C E3F0 D528 0024          00000528  17175          STG   15,1320(0,13)
0000B682 41F0 D2B0               000002B0  17176          LA    15,688(0,13)
0000B686 E3F0 D530 0024          00000530  17177          STG   15,1328(0,13)
0000B68C 4110 D4B0               000004B0  17178          LA    1,1200(0,13)
0000B690 E3F0 C100 0004          0000B358  17179          LG    15,@lit_2021_821 ; rd_kafka_log0
0000B696                                   17180 @@gen_label1141 DS    0H
0000B696 05EF                              17181          BALR  14,15
0000B698                                   17182 @@gen_label1142 DS    0H
0000B698                                   17183 @L1269   DS    0H
0000B698 E54C B188 FF65          00000188  17184          MVHI  392(11),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000B69E 47F0 C562               0000B7BA  17185          B     @_err_parse@2021@5
0000B6A2                                   17186 @L1265   DS    0H
0000B6A2                                   17187 @L1261   DS    0H
0000B6A2 58F0 D0A8               000000A8  17188          L     15,168(0,13) ; _v
0000B6A6 50F0 D0AC               000000AC  17189          ST    15,172(0,13)
0000B6AA E3F0 B100 0004          00000100  17190          LG    15,256(0,11)
0000B6B0 E3F0 D4B0 0024          000004B0  17191          STG   15,1200(0,13)
0000B6B6 E3F0 B100 0004          00000100  17192          LG    15,256(0,11) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B6BC E3F0 FFD0 0004          00000FD0  17193          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000B6C2 E3F0 F000 0004          00000000  17194          LG    15,0(0,15)
0000B6C8 E3F0 D4B8 0024          000004B8  17195          STG   15,1208(0,13)
0000B6CE E3F0 D0AC 0014          000000AC  17196          LGF   15,172(0,13) ; _throttle_time_ms
0000B6D4 E3F0 D4C0 0024          000004C0  17197          STG   15,1216(0,13)
0000B6DA 4110 D4B0               000004B0  17198          LA    1,1200(0,13)
0000B6DE E3F0 C108 0004          0000B360  17199          LG    15,@lit_2021_822 ; rd_kafka_op_throttle_time
0000B6E4                                   17200 @@gen_label1143 DS    0H
0000B6E4 05EF                              17201          BALR  14,15
0000B6E6                                   17202 @@gen_label1144 DS    0H
                                           17203 * ***
                                           17204 * ***           partitions = rd_kafka_buf_read_topic_partitions(rkbuf,\
                                           17205 *  0,
                                           17206 * ***                                                           0, 1);
0000B6E6 E3B0 D4B0 0024          000004B0  17207          STG   11,1200(0,13)
0000B6EC D70F D4B8 D4B8 000004B8 000004B8  17208          XC    1208(16,13),1208(13)
0000B6F2 E548 D4C8 0001          000004C8  17209          MVGHI 1224(13),1
0000B6F8 4110 D4B0               000004B0  17210          LA    1,1200(0,13)
0000B6FC E3F0 C110 0004          0000B368  17211          LG    15,@lit_2021_823 ; rd_kafka_buf_read_topic_partitions
0000B702                                   17212 @@gen_label1145 DS    0H
                                                                                                                           Page  345 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B702 05EF                              17213          BALR  14,15
0000B704                                   17214 @@gen_label1146 DS    0H
0000B704 B902 006F                         17215          LTGR  6,15        ; partitions
                                           17216 * ***           if (!partitions)
0000B708 4780 C562               0000B7BA  17217          BZ    @_err_parse@2021@5
                                           17218 * ***                   goto err_parse;
0000B70C                                   17219 @L1280   DS    0H
                                           17220 * ***
                                           17221 * ***           err = rd_kafka_topic_partition_list_get_err(partitions\
                                           17222 * );
0000B70C E360 D4B0 0024          000004B0  17223          STG   6,1200(0,13)
0000B712 4110 D4B0               000004B0  17224          LA    1,1200(0,13)
0000B716 E3F0 C118 0004          0000B370  17225          LG    15,@lit_2021_824 ; rd_kafka_topic_partition_list_get_err
0000B71C                                   17226 @@gen_label1148 DS    0H
0000B71C 05EF                              17227          BALR  14,15
0000B71E                                   17228 @@gen_label1149 DS    0H
0000B71E 123F                              17229          LTR   3,15        ; err
                                           17230 * ***           if (err) {
0000B720 4780 C566               0000B7BE  17231          BZ    @_done@2021@4
                                           17232 * ***                   char errparts[256];
                                           17233 * ***                   rd_kafka_topic_partition_list_str(partitions,
                                           17234 * ***                                                     errparts, si\
                                           17235 * zeof(errparts),
                                           17236 * ***                                                     0x2);
0000B724 E360 D4B0 0024          000004B0  17237          STG   6,1200(0,13)
0000B72A 41F0 D2B0               000002B0  17238          LA    15,688(0,13)
0000B72E E3F0 D4B8 0024          000004B8  17239          STG   15,1208(0,13)
0000B734 E548 D4C0 0100          000004C0  17240          MVGHI 1216(13),256
0000B73A E548 D4C8 0002          000004C8  17241          MVGHI 1224(13),2
0000B740 4110 D4B0               000004B0  17242          LA    1,1200(0,13)
0000B744 E3F0 C120 0004          0000B378  17243          LG    15,@lit_2021_825 ; rd_kafka_topic_partition_list_str
0000B74A                                   17244 @@gen_label1151 DS    0H
0000B74A 05EF                              17245          BALR  14,15
0000B74C                                   17246 @@gen_label1152 DS    0H
                                           17247 * ***                   snprintf(errstr, sizeof(errstr), "Failed to co\
                                           17248 * mmit offsets to transaction on " "broker %s: %s " "(after %dms)", rd\
                                           17249 * _kafka_broker_name(rkb), errparts, (int)(request->rkbuf_ts_sent/1000\
                                           17250 * ));
0000B74C E3A0 D4B0 0024          000004B0  17251          STG   10,1200(0,13)
0000B752 4110 D4B0               000004B0  17252          LA    1,1200(0,13)
0000B756 E3F0 C128 0004          0000B380  17253          LG    15,@lit_2021_826 ; rd_kafka_broker_name
0000B75C                                   17254 @@gen_label1153 DS    0H
0000B75C 05EF                              17255          BALR  14,15
0000B75E                                   17256 @@gen_label1154 DS    0H
0000B75E 4110 D0B0               000000B0  17257          LA    1,176(0,13)
0000B762 E310 D4B0 0024          000004B0  17258          STG   1,1200(0,13)
0000B768 E548 D4B8 0200          000004B8  17259          MVGHI 1208(13),512
0000B76E E310 C0C8 0004          0000B320  17260          LG    1,@lit_2021_804
0000B774 4110 1A48               00000A48  17261          LA    1,2632(0,1)
0000B778 E310 D4C0 0024          000004C0  17262          STG   1,1216(0,13)
0000B77E E3F0 D4C8 0024          000004C8  17263          STG   15,1224(0,13)
0000B784 41F0 D2B0               000002B0  17264          LA    15,688(0,13)
                                                                                                                           Page  346 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B788 E3F0 D4D0 0024          000004D0  17265          STG   15,1232(0,13)
0000B78E E3F0 5020 0004          00000020  17266          LG    15,32(0,5)  ; request
0000B794 E3F0 F158 0004          00000158  17267          LG    15,344(0,15) ; offset of rkbuf_ts_sent in rd_kafka_buf_s
0000B79A E3E0 C130 001D          0000B388  17268          DSGF  14,@lit_2021_828
0000B7A0 B914 00FF                         17269          LGFR  15,15
0000B7A4 E3F0 D4D8 0024          000004D8  17270          STG   15,1240(0,13)
0000B7AA 4110 D4B0               000004B0  17271          LA    1,1200(0,13)
0000B7AE E3F0 C0D0 0004          0000B328  17272          LG    15,@lit_2021_808 ; snprintf
0000B7B4                                   17273 @@gen_label1155 DS    0H
0000B7B4 05EF                              17274          BALR  14,15
0000B7B6                                   17275 @@gen_label1156 DS    0H
                                           17276 * ***   # 1551 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           17277 * ***           }
0000B7B6                                   17278 @L1281   DS    0H
                                           17279 * ***
                                           17280 * ***           goto done;
0000B7B6 47F0 C566               0000B7BE  17281          B     @_done@2021@4
                                           17282 * ***
                                           17283 * ***    err_parse:
                                           17284 * ***           err = rkbuf->rkbuf_err;
0000B7BA                                   17285 @_err_parse@2021@5 DS 0H
0000B7BA 5830 B188               00000188  17286          L     3,392(0,11) ; offset of rkbuf_err in rd_kafka_buf_s
                                           17287 * ***
                                           17288 * ***    done:
                                           17289 * ***           if (err) {
0000B7BE                                   17290 @_done@2021@4 DS 0H
0000B7BE 1233                              17291          LTR   3,3
0000B7C0 4780 C60A               0000B862  17292          BZ    @L1282
                                           17293 * ***                   if (!*errstr) {
0000B7C4 9500 D0B0      000000B0 00000000  17294          CLI   176(13),0
0000B7C8 4770 C60A               0000B862  17295          BNE   @L1282
                                           17296 * ***                           snprintf(errstr, sizeof(errstr), "Fail\
                                           17297 * ed to commit offsets to " "transaction on broker %s: %s " "(after %d\
                                           17298 *  ms)", rkb ? rd_kafka_broker_name(rkb) : "(none)", rd_kafka_err2str(\
                                           17299 * err), (int)(request->rkbuf_ts_sent/1000));
0000B7CC B902 00FA                         17300          LTGR  15,10
0000B7D0 4780 C596               0000B7EE  17301          BZ    @L1284
0000B7D4 E3A0 D4B0 0024          000004B0  17302          STG   10,1200(0,13)
0000B7DA 4110 D4B0               000004B0  17303          LA    1,1200(0,13)
0000B7DE E3F0 C128 0004          0000B380  17304          LG    15,@lit_2021_826 ; rd_kafka_broker_name
0000B7E4                                   17305 @@gen_label1160 DS    0H
0000B7E4 05EF                              17306          BALR  14,15
0000B7E6                                   17307 @@gen_label1161 DS    0H
0000B7E6 B904 007F                         17308          LGR   7,15
0000B7EA 47F0 C5A0               0000B7F8  17309          B     @L1285
0000B7EE                                   17310 @L1284   DS    0H
0000B7EE E3F0 C0C8 0004          0000B320  17311          LG    15,@lit_2021_804
0000B7F4 4170 FA8E               00000A8E  17312          LA    7,2702(0,15)
0000B7F8                                   17313 @L1285   DS    0H
0000B7F8 B914 00F3                         17314          LGFR  15,3
0000B7FC E3F0 D4B0 0024          000004B0  17315          STG   15,1200(0,13)
0000B802 4110 D4B0               000004B0  17316          LA    1,1200(0,13)
                                                                                                                           Page  347 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B806 E3F0 C138 0004          0000B390  17317          LG    15,@lit_2021_832 ; rd_kafka_err2str
0000B80C                                   17318 @@gen_label1162 DS    0H
0000B80C 05EF                              17319          BALR  14,15
0000B80E                                   17320 @@gen_label1163 DS    0H
0000B80E 4110 D0B0               000000B0  17321          LA    1,176(0,13)
0000B812 E310 D4B0 0024          000004B0  17322          STG   1,1200(0,13)
0000B818 E548 D4B8 0200          000004B8  17323          MVGHI 1208(13),512
0000B81E E310 C0C8 0004          0000B320  17324          LG    1,@lit_2021_804
0000B824 4110 1A96               00000A96  17325          LA    1,2710(0,1)
0000B828 E310 D4C0 0024          000004C0  17326          STG   1,1216(0,13)
0000B82E E370 D4C8 0024          000004C8  17327          STG   7,1224(0,13)
0000B834 E3F0 D4D0 0024          000004D0  17328          STG   15,1232(0,13)
0000B83A E3F0 5020 0004          00000020  17329          LG    15,32(0,5)  ; request
0000B840 E3F0 F158 0004          00000158  17330          LG    15,344(0,15) ; offset of rkbuf_ts_sent in rd_kafka_buf_s
0000B846 E3E0 C130 001D          0000B388  17331          DSGF  14,@lit_2021_828
0000B84C B914 00FF                         17332          LGFR  15,15
0000B850 E3F0 D4D8 0024          000004D8  17333          STG   15,1240(0,13)
0000B856 4110 D4B0               000004B0  17334          LA    1,1200(0,13)
0000B85A E3F0 C0D0 0004          0000B328  17335          LG    15,@lit_2021_808 ; snprintf
0000B860                                   17336 @@gen_label1164 DS    0H
0000B860 05EF                              17337          BALR  14,15
0000B862                                   17338 @@gen_label1165 DS    0H
                                           17339 * ***   # 1568 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           17340 * ***                   }
0000B862                                   17341 @L1283   DS    0H
                                           17342 * ***           }
0000B862                                   17343 @L1282   DS    0H
                                           17344 * ***
                                           17345 * ***
                                           17346 * ***           if (partitions)
0000B862 B902 00F6                         17347          LTGR  15,6
0000B866 4780 C6A2               0000B8FA  17348          BZ    @L1287
                                           17349 * ***                   rd_kafka_topic_partition_list_destroy(partitio\
                                           17350 * ns);
0000B86A E360 D4B0 0024          000004B0  17351          STG   6,1200(0,13)
0000B870 4110 D4B0               000004B0  17352          LA    1,1200(0,13)
0000B874 E3F0 C140 0004          0000B398  17353          LG    15,@lit_2021_836 ; rd_kafka_topic_partition_list_destroy
0000B87A                                   17354 @@gen_label1167 DS    0H
0000B87A 05EF                              17355          BALR  14,15
0000B87C                                   17356 @@gen_label1168 DS    0H
0000B87C                                   17357 @L1286   DS    0H
                                           17358 * ***
                                           17359 * ***           switch (err)
0000B87C 47F0 C6A2               0000B8FA  17360          B     @L1287
                                           17361 * ***           {
                                           17362 * ***           case RD_KAFKA_RESP_ERR_NO_ERROR:
                                           17363 * ***                   break;
                                           17364 * ***
                                           17365 * ***           case RD_KAFKA_RESP_ERR__DESTROY:
                                           17366 * ***
                                           17367 * ***           case RD_KAFKA_RESP_ERR__OUTDATED:
0000B880                                   17368 @L1291   DS    0H
                                                                                                                           Page  348 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           17369 * ***
                                           17370 * ***
                                           17371 * ***                   actions = 0x20;
                                           17372 * ***                   return;
0000B880 E3C0 C148 001A          0000B3A0  17373          ALGF  12,@lit_region_diff_2021_1_2
                                           17374          DROP  12
                        0000BA94           17375          USING @REGION_2021_2,12
0000B886 47F0 C300               0000BD94  17376          B     @ret_lab_2021
                                           17377          DROP  12
                        0000B258           17378          USING @REGION_2021_1,12
                                           17379 * ***
                                           17380 * ***           case RD_KAFKA_RESP_ERR_NOT_COORDINATOR:
                                           17381 * ***           case RD_KAFKA_RESP_ERR_COORDINATOR_NOT_AVAILABLE:
                                           17382 * ***           case RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT:
                                           17383 * ***           case RD_KAFKA_RESP_ERR__TRANSPORT:
                                           17384 * ***           case RD_KAFKA_RESP_ERR__TIMED_OUT:
                                           17385 * ***           case RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE:
0000B88A                                   17386 @L1297   DS    0H
                                           17387 * ***
                                           17388 * ***
                                           17389 * ***                   rd_kafka_coord_cache_evict(&rk->rk_coord_cache\
                                           17390 * , rkb);
0000B88A 41F0 9F68               00000F68  17391          LA    15,3944(0,9)
0000B88E E3F0 D4B0 0024          000004B0  17392          STG   15,1200(0,13)
0000B894 E3A0 D4B8 0024          000004B8  17393          STG   10,1208(0,13)
0000B89A 4110 D4B0               000004B0  17394          LA    1,1200(0,13)
0000B89E E3F0 C150 0004          0000B3A8  17395          LG    15,@lit_2021_838 ; rd_kafka_coord_cache_evict
0000B8A4                                   17396 @@gen_label1169 DS    0H
0000B8A4 05EF                              17397          BALR  14,15
0000B8A6                                   17398 @@gen_label1170 DS    0H
                                           17399 * ***                   actions |= 0x8;
0000B8A6 A52B 0008               00000008  17400          OILL  2,8
                                           17401 * ***                   break;
0000B8AA E3C0 C148 001A          0000B3A0  17402          ALGF  12,@lit_region_diff_2021_1_2
                                           17403          DROP  12
                        0000BA94           17404          USING @REGION_2021_2,12
0000B8B0 47F0 C0A8               0000BB3C  17405          B     @L1288
                                           17406          DROP  12
                        0000B258           17407          USING @REGION_2021_1,12
                                           17408 * ***
                                           17409 * ***           case RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS:
                                           17410 * ***           case RD_KAFKA_RESP_ERR_COORDINATOR_LOAD_IN_PROGRESS:
                                           17411 * ***           case RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART:
0000B8B4                                   17412 @L1300   DS    0H
                                           17413 * ***                   actions |= 0x8;
0000B8B4 A52B 0008               00000008  17414          OILL  2,8
                                           17415 * ***                   break;
0000B8B8 E3C0 C148 001A          0000B3A0  17416          ALGF  12,@lit_region_diff_2021_1_2
                                           17417          DROP  12
                        0000BA94           17418          USING @REGION_2021_2,12
0000B8BE 47F0 C0A8               0000BB3C  17419          B     @L1288
                                           17420          DROP  12
                                                                                                                           Page  349 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        0000B258           17421          USING @REGION_2021_1,12
                                           17422 * ***
                                           17423 * ***           case RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_\
                                           17424 * FAILED:
                                           17425 * ***           case RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED:
                                           17426 * ***           case RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING:
                                           17427 * ***           case RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH:
                                           17428 * ***           case RD_KAFKA_RESP_ERR_INVALID_TXN_STATE:
                                           17429 * ***           case RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT:
0000B8C2                                   17430 @L1306   DS    0H
                                           17431 * ***                   actions |= 0x200;
0000B8C2 A52B 0200               00000200  17432          OILL  2,512
                                           17433 * ***                   break;
0000B8C6 E3C0 C148 001A          0000B3A0  17434          ALGF  12,@lit_region_diff_2021_1_2
                                           17435          DROP  12
                        0000BA94           17436          USING @REGION_2021_2,12
0000B8CC 47F0 C0A8               0000BB3C  17437          B     @L1288
                                           17438          DROP  12
                        0000B258           17439          USING @REGION_2021_1,12
                                           17440 * ***
                                           17441 * ***           case RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED:
                                           17442 * ***           case RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED:
0000B8D0                                   17443 @L1308   DS    0H
                                           17444 * ***                   actions |= 0x1;
0000B8D0 A52B 0001               00000001  17445          OILL  2,1
                                           17446 * ***                   break;
0000B8D4 E3C0 C148 001A          0000B3A0  17447          ALGF  12,@lit_region_diff_2021_1_2
                                           17448          DROP  12
                        0000BA94           17449          USING @REGION_2021_2,12
0000B8DA 47F0 C0A8               0000BB3C  17450          B     @L1288
                                           17451          DROP  12
                        0000B258           17452          USING @REGION_2021_1,12
                                           17453 * ***
                                           17454 * ***           case RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION:
                                           17455 * ***           case RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID:
                                           17456 * ***           case RD_KAFKA_RESP_ERR_FENCED_INSTANCE_ID:
0000B8DE                                   17457 @L1311   DS    0H
                                           17458 * ***                   actions |= 0x1;
0000B8DE A52B 0001               00000001  17459          OILL  2,1
                                           17460 * ***                   break;
0000B8E2 E3C0 C148 001A          0000B3A0  17461          ALGF  12,@lit_region_diff_2021_1_2
                                           17462          DROP  12
                        0000BA94           17463          USING @REGION_2021_2,12
0000B8E8 47F0 C0A8               0000BB3C  17464          B     @L1288
                                           17465          DROP  12
                        0000B258           17466          USING @REGION_2021_1,12
                                           17467 * ***
                                           17468 * ***           default:
                                           17469 * ***
                                           17470 * ***                   actions |= 0x1;
0000B8EC                                   17471 @L1312   DS    0H
0000B8EC A52B 0001               00000001  17472          OILL  2,1
                                                                                                                           Page  350 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           17473 * ***                   break;
0000B8F0 E3C0 C148 001A          0000B3A0  17474          ALGF  12,@lit_region_diff_2021_1_2
                                           17475          DROP  12
                        0000BA94           17476          USING @REGION_2021_2,12
0000B8F6 47F0 C0A8               0000BB3C  17477          B     @L1288
                                           17478          DROP  12
                        0000B258           17479          USING @REGION_2021_1,12
                                           17480 * ***           }
0000B8FA                                   17481 @L1287   DS    0H
0000B8FA A73E FF47               0000FF47  17482          CHI   3,-185
0000B8FE 47B0 C6C6               0000B91E  17483          BNL   @@gen_label1171
0000B902 A73E FF3B               0000FF3B  17484          CHI   3,-197
0000B906 4740 C694               0000B8EC  17485          BL    @L1312
0000B90A A73E FF3B               0000FF3B  17486          CHI   3,-197
0000B90E 4780 C628               0000B880  17487          BE    @L1291
0000B912 A73E FF3D               0000FF3D  17488          CHI   3,-195
0000B916 4780 C632               0000B88A  17489          BE    @L1297
0000B91A 47F0 C694               0000B8EC  17490          B     @L1312
0000B91E                                   17491 @@gen_label1171 DS 0H
0000B91E A73E FF59               0000FF59  17492          CHI   3,-167
0000B922 47B0 C6DA               0000B932  17493          BNL   @@gen_label1172
0000B926 A73E FF47               0000FF47  17494          CHI   3,-185
0000B92A 4780 C632               0000B88A  17495          BE    @L1297
0000B92E 47F0 C694               0000B8EC  17496          B     @L1312
0000B932                                   17497 @@gen_label1172 DS 0H
0000B932 1233                              17498          LTR   3,3
0000B934 47B0 C6F4               0000B94C  17499          BNL   @@gen_label1173
0000B938 A73E FF59               0000FF59  17500          CHI   3,-167
0000B93C 4780 C628               0000B880  17501          BE    @L1291
0000B940 A73E FF5A               0000FF5A  17502          CHI   3,-166
0000B944 4780 C632               0000B88A  17503          BE    @L1297
0000B948 47F0 C694               0000B8EC  17504          B     @L1312
0000B94C                                   17505 @@gen_label1173 DS 0H
0000B94C A73E 002B               0000002B  17506          CHI   3,43
0000B950 47B0 C7CC               0000BA24  17507          BNL   @@gen_label1174
0000B954 A73E 0007               00000007  17508          CHI   3,7
0000B958 47B0 C720               0000B978  17509          BNL   @@gen_label1175
0000B95C 1233                              17510          LTR   3,3
0000B95E 4770 C714               0000B96C  17511          BNE   *+14  Around region break
0000B962 E3C0 C148 001A          0000B3A0  17512          ALGF  12,@lit_region_diff_2021_1_2
                                           17513          DROP  12
                        0000BA94           17514          USING @REGION_2021_2,12
0000B968 47F0 C0A8               0000BB3C  17515          B     @L1288
                                           17516          DROP  12
                        0000B258           17517          USING @REGION_2021_1,12
0000B96C A73E 0003               00000003  17518          CHI   3,3
0000B970 4780 C65C               0000B8B4  17519          BE    @L1300
0000B974 47F0 C694               0000B8EC  17520          B     @L1312
0000B978                                   17521 @@gen_label1175 DS 0H
0000B978 A73E 000E               0000000E  17522          CHI   3,14
0000B97C 47B0 C734               0000B98C  17523          BNL   @@gen_label1176
0000B980 A73E 0007               00000007  17524          CHI   3,7
                                                                                                                           Page  351 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000B984 4780 C632               0000B88A  17525          BE    @L1297
0000B988 47F0 C694               0000B8EC  17526          B     @L1312
0000B98C                                   17527 @@gen_label1176 DS 0H
0000B98C A73E 0016               00000016  17528          CHI   3,22
0000B990 47B0 C776               0000B9CE  17529          BNL   @@gen_label1177
0000B994 18F3                              17530          LR    15,3
0000B996 A7FA FFF2               0000FFF2  17531          AHI   15,-14
0000B99A C2FF 0000 0002                    17532          CLFI  15,X'00000002'
0000B9A0 4720 C694               0000B8EC  17533          BH    @L1312
0000B9A4 B914 00FF                         17534          LGFR  15,15
0000B9A8 A719 0001               00000001  17535          LGHI  1,1
0000B9AC EB11 F000 000D          00000000  17536          SLLG  1,1,0(15)
0000B9B2 B904 00F1                         17537          LGR   15,1
0000B9B6 E3F0 C158 0080          0000B3B0  17538          NG    15,@lit_2021_839
0000B9BC 4770 C65C               0000B8B4  17539          BNZ   @L1300
0000B9C0 E310 C160 0080          0000B3B8  17540          NG    1,@lit_2021_840
0000B9C6 4770 C632               0000B88A  17541          BNZ   @L1297
0000B9CA 47F0 C694               0000B8EC  17542          B     @L1312
0000B9CE                                   17543 @@gen_label1177 DS 0H
0000B9CE A73E 001D               0000001D  17544          CHI   3,29
0000B9D2 47B0 C792               0000B9EA  17545          BNL   @@gen_label1178
0000B9D6 A73E 0016               00000016  17546          CHI   3,22
0000B9DA 4780 C686               0000B8DE  17547          BE    @L1311
0000B9DE A73E 0019               00000019  17548          CHI   3,25
0000B9E2 4780 C686               0000B8DE  17549          BE    @L1311
0000B9E6 47F0 C694               0000B8EC  17550          B     @L1312
0000B9EA                                   17551 @@gen_label1178 DS 0H
0000B9EA 18F3                              17552          LR    15,3
0000B9EC A7FA FFE3               0000FFE3  17553          AHI   15,-29
0000B9F0 C2FF 0000 0002                    17554          CLFI  15,X'00000002'
0000B9F6 4720 C694               0000B8EC  17555          BH    @L1312
0000B9FA B914 00FF                         17556          LGFR  15,15
0000B9FE A719 0001               00000001  17557          LGHI  1,1
0000BA02 EB11 F000 000D          00000000  17558          SLLG  1,1,0(15)
0000BA08 B904 00F1                         17559          LGR   15,1
0000BA0C E3F0 C168 0080          0000B3C0  17560          NG    15,@lit_2021_841
0000BA12 4770 C678               0000B8D0  17561          BNZ   @L1308
0000BA16 E310 C170 0080          0000B3C8  17562          NG    1,@lit_2021_842
0000BA1C 4770 C66A               0000B8C2  17563          BNZ   @L1306
0000BA20 47F0 C694               0000B8EC  17564          B     @L1312
0000BA24                                   17565 @@gen_label1174 DS 0H
0000BA24 A73E 0052               00000052  17566          CHI   3,82
0000BA28 4740 C7DE               0000BA36  17567          BL    *+14  Around region break
0000BA2C E3C0 C148 001A          0000B3A0  17568          ALGF  12,@lit_region_diff_2021_1_2
                                           17569          DROP  12
                        0000BA94           17570          USING @REGION_2021_2,12
0000BA32 47F0 C08C               0000BB20  17571          B     @@gen_label1179
                                           17572          DROP  12
                        0000B258           17573          USING @REGION_2021_1,12
0000BA36 A73E 002F               0000002F  17574          CHI   3,47
0000BA3A 47B0 C7F2               0000BA4A  17575          BNL   @@gen_label1180
0000BA3E A73E 002B               0000002B  17576          CHI   3,43
                                                                                                                           Page  352 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BA42 4780 C66A               0000B8C2  17577          BE    @L1306
0000BA46 47F0 C694               0000B8EC  17578          B     @L1312
0000BA4A                                   17579 @@gen_label1180 DS 0H
0000BA4A 18F3                              17580          LR    15,3
0000BA4C A7FA FFD1               0000FFD1  17581          AHI   15,-47
0000BA50 C2FF 0000 0006                    17582          CLFI  15,X'00000006'
0000BA56 4720 C694               0000B8EC  17583          BH    @L1312
0000BA5A B914 00FF                         17584          LGFR  15,15
0000BA5E A719 0001               00000001  17585          LGHI  1,1
0000BA62 EB11 F000 000D          00000000  17586          SLLG  1,1,0(15)
0000BA68 B904 00F1                         17587          LGR   15,1
0000BA6C E3F0 C178 0080          0000B3D0  17588          NG    15,@lit_2021_843
0000BA72 4770 C66A               0000B8C2  17589          BNZ   @L1306
0000BA76 B904 00F1                         17590          LGR   15,1
0000BA7A E3F0 C180 0080          0000B3D8  17591          NG    15,@lit_2021_844
0000BA80 4770 C65C               0000B8B4  17592          BNZ   @L1300
0000BA84 E310 C188 0080          0000B3E0  17593          NG    1,@lit_2021_845
0000BA8A 4770 C66A               0000B8C2  17594          BNZ   @L1306
0000BA8E E3C0 C148 001A          0000B3A0  17595          ALGF  12,@lit_region_diff_2021_1_2
0000BA94                                   17596 @REGION_2021_2 DS 0H
                                           17597          DROP  12
                        0000BA94           17598          USING @REGION_2021_2,12
0000BA94 E3C0 C00C 001B          0000BAA0  17599          SLGF  12,@lit_region_diff_2021_2_1
                                           17600          DROP  12
                        0000B258           17601          USING @REGION_2021_1,12
0000BA9A 47F0 C694               0000B8EC  17602          B     @L1312
                                           17603          DROP  12
                        0000BA94           17604          USING @REGION_2021_2,12
0000BAA0                                   17605          DS    0D
0000BAA0 0000083C                          17606 @lit_region_diff_2021_2_1  DC A(@REGION_2021_2-@REGION_2021_1)
0000BAA4 00000000
0000BAA8 00000000000044D0                  17607 @lit_2021_846 DC AD(rd_kafka_txn_normalize_err)
0000BAB0 0000000000005118                  17608 @lit_2021_848 DC AD(rd_kafka_txn_set_fatal_error)
0000BAB8 0000000000014A98                  17609 @lit_2021_847 DC AD(@strings@)
0000BAC0 00000000000014C8                  17610 @lit_2021_849 DC AD(rd_timeout_remains)
0000BAC8 00000000000016A0                  17611 @lit_2021_850 DC AD(rd_timeout_expired)
0000BAD0 0000000000001600                  17612 @lit_2021_851 DC AD(rd_timeout_remains_limit0)
0000BAD8 0000000000002D40                  17613 @lit_2021_853 DC AD(rd_kafka_replyq_make)
0000BAE0 0000000000014658                  17614 @lit_2021_852 DC AD(@DATA)
0000BAE8 0000000000000000                  17615 @lit_2021_856 DC AD(rd_kafka_coord_req)
0000BAF0 000000000000B258                  17616 @lit_2021_855 DC AD(rd_kafka_txn_handle_$Txn$Offset$Commit)
0000BAF8 000000000000BE58                  17617 @lit_2021_854 DC AD(rd_kafka_txn_send_$Txn$Offset$Commit$Request)
0000BB00 0000000000005448                  17618 @lit_2021_859 DC AD(rd_kafka_txn_set_abortable_error0)
0000BB08 0000000000001D48                  17619 @lit_2021_860 DC AD(rd_kafka_q_keep)
0000BB10 0000000000005A68                  17620 @lit_2021_862 DC AD(rd_kafka_txn_curr_api_reply)
0000BB18 0000000000000000                  17621 @lit_2021_865 DC AD(rd_kafka_op_destroy)
0000BB20                                   17622 @@gen_label1179 DS 0H
0000BB20 A73E 0052               00000052  17623          CHI   3,82
0000BB24 4770 C09E               0000BB32  17624          BNE   *+14  Around region break
0000BB28 E3C0 C00C 001B          0000BAA0  17625          SLGF  12,@lit_region_diff_2021_2_1
                                           17626          DROP  12
                        0000B258           17627          USING @REGION_2021_1,12
                                                                                                                           Page  353 
  Active Usings: @REGION_2021_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BB2E 47F0 C686               0000B8DE  17628          B     @L1311
                                           17629          DROP  12
                        0000BA94           17630          USING @REGION_2021_2,12
0000BB32 E3C0 C00C 001B          0000BAA0  17631          SLGF  12,@lit_region_diff_2021_2_1
                                           17632          DROP  12
                        0000B258           17633          USING @REGION_2021_1,12
0000BB38 47F0 C694               0000B8EC  17634          B     @L1312
                                           17635          DROP  12
                        0000BA94           17636          USING @REGION_2021_2,12
0000BB3C                                   17637 @L1288   DS    0H
                                           17638 * ***
                                           17639 * ***           err = rd_kafka_txn_normalize_err(err);
0000BB3C B914 00F3                         17640          LGFR  15,3
0000BB40 E3F0 D4B0 0024          000004B0  17641          STG   15,1200(0,13)
0000BB46 4110 D4B0               000004B0  17642          LA    1,1200(0,13)
0000BB4A E3F0 C014 0004          0000BAA8  17643          LG    15,@lit_2021_846 ; rd_kafka_txn_normalize_err
0000BB50                                   17644 @@gen_label1181 DS    0H
0000BB50 05EF                              17645          BALR  14,15
0000BB52                                   17646 @@gen_label1182 DS    0H
0000BB52 183F                              17647          LR    3,15        ; err
                                           17648 * ***
                                           17649 * ***           if (actions & 0x200) {
0000BB54 18F2                              17650          LR    15,2
0000BB56 C0FB 0000 0200                    17651          NILF  15,X'00000200'
0000BB5C 12FF                              17652          LTR   15,15
0000BB5E 4780 C10E               0000BBA2  17653          BZ    @L1313
                                           17654 * ***                   rd_kafka_txn_set_fatal_error(rk, RD_DO_LOCK, e\
                                           17655 * rr,
                                           17656 * ***                                                "%s", errstr);
0000BB62 E390 D4B0 0024          000004B0  17657          STG   9,1200(0,13)
0000BB68 E548 D4B8 0001          000004B8  17658          MVGHI 1208(13),1
0000BB6E B914 00F3                         17659          LGFR  15,3
0000BB72 E3F0 D4C0 0024          000004C0  17660          STG   15,1216(0,13)
0000BB78 E3F0 C024 0004          0000BAB8  17661          LG    15,@lit_2021_847
0000BB7E 41F0 F122               00000122  17662          LA    15,290(0,15)
0000BB82 E3F0 D4C8 0024          000004C8  17663          STG   15,1224(0,13)
0000BB88 41F0 D0B0               000000B0  17664          LA    15,176(0,13)
0000BB8C E3F0 D4D0 0024          000004D0  17665          STG   15,1232(0,13)
0000BB92 4110 D4B0               000004B0  17666          LA    1,1200(0,13)
0000BB96 E3F0 C01C 0004          0000BAB0  17667          LG    15,@lit_2021_848 ; rd_kafka_txn_set_fatal_error
0000BB9C                                   17668 @@gen_label1184 DS    0H
0000BB9C 05EF                              17669          BALR  14,15
0000BB9E                                   17670 @@gen_label1185 DS    0H
                                           17671 * ***
                                           17672 * ***           } else if (actions & 0x8) {
0000BB9E 47F0 C218               0000BCAC  17673          B     @L1314
0000BBA2                                   17674 @L1313   DS    0H
0000BBA2 A721 0008               00000008  17675          TML   2,8
0000BBA6 4780 C218               0000BCAC  17676          BZ    @L1314
                                           17677 * ***                   int remains_ms = rd_timeout_remains(rko->rko_u\
                                           17678 * .txn.abs_timeout);
0000BBAA E3F0 4088 0004          00000088  17679          LG    15,136(0,4)
                                                                                                                           Page  354 
  Active Usings: @REGION_2021_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BBB0 E3F0 D4B0 0024          000004B0  17680          STG   15,1200(0,13)
0000BBB6 4110 D4B0               000004B0  17681          LA    1,1200(0,13)
0000BBBA E3F0 C02C 0004          0000BAC0  17682          LG    15,@lit_2021_849 ; rd_timeout_remains
0000BBC0                                   17683 @@gen_label1187 DS    0H
0000BBC0 05EF                              17684          BALR  14,15
0000BBC2                                   17685 @@gen_label1188 DS    0H
0000BBC2 185F                              17686          LR    5,15
                                           17687 * ***
                                           17688 * ***                   if (!rd_timeout_expired(remains_ms)) {
0000BBC4 B914 00F5                         17689          LGFR  15,5
0000BBC8 E3F0 D4B0 0024          000004B0  17690          STG   15,1200(0,13)
0000BBCE 4110 D4B0               000004B0  17691          LA    1,1200(0,13)
0000BBD2 E3F0 C034 0004          0000BAC8  17692          LG    15,@lit_2021_850 ; rd_timeout_expired
0000BBD8                                   17693 @@gen_label1189 DS    0H
0000BBD8 05EF                              17694          BALR  14,15
0000BBDA                                   17695 @@gen_label1190 DS    0H
0000BBDA 12FF                              17696          LTR   15,15
0000BBDC 4770 C20A               0000BC9E  17697          BNZ   @L1316
                                           17698 * ***                           rd_kafka_coord_req(
                                           17699 * ***                                   rk,
                                           17700 * ***                                   RD_KAFKA_COORD_GROUP,
                                           17701 * ***                                   rko->rko_u.txn.cgmetadata->gro\
                                           17702 * up_id,
                                           17703 * ***                                   rd_kafka_txn_send_TxnOffsetCom\
                                           17704 * mitRequest,
                                           17705 * ***                                   rko,
                                           17706 * ***                                   rd_timeout_remains_limit0(
                                           17707 * ***                                   rd_kafka_replyq_make(rk->rk_op\
                                           17708 * s,0,__FUNCTION__),
                                           17709 * ***                                   rd_kafka_txn_handle_TxnOffsetC\
                                           17710 * ommit,
                                           17711 * ***                                   rko);
                                           17712 * ***                                           remains_ms,
                                           17713 * ***                                           rk->rk_conf.socket_tim\
                                           17714 * eout_ms),
0000BBE0 B914 00F5                         17715          LGFR  15,5
0000BBE4 E3F0 D4B0 0024          000004B0  17716          STG   15,1200(0,13)
0000BBEA E3F0 932C 0014          0000032C  17717          LGF   15,812(0,9)
0000BBF0 E3F0 D4B8 0024          000004B8  17718          STG   15,1208(0,13)
0000BBF6 4110 D4B0               000004B0  17719          LA    1,1200(0,13)
0000BBFA E3F0 C03C 0004          0000BAD0  17720          LG    15,@lit_2021_851 ; rd_timeout_remains_limit0
0000BC00                                   17721 @@gen_label1192 DS    0H
0000BC00 05EF                              17722          BALR  14,15
0000BC02                                   17723 @@gen_label1193 DS    0H
0000BC02 182F                              17724          LR    2,15
0000BC04 41F0 D2B0               000002B0  17725          LA    15,688(0,13)
0000BC08 E3F0 D4B0 0024          000004B0  17726          STG   15,1200(0,13)
0000BC0E E3F0 9008 0004          00000008  17727          LG    15,8(0,9)
0000BC14 E3F0 D4B8 0024          000004B8  17728          STG   15,1208(0,13)
0000BC1A D707 D4C0 D4C0 000004C0 000004C0  17729          XC    1216(8,13),1216(13)
0000BC20 E3F0 C04C 0004          0000BAE0  17730          LG    15,@lit_2021_852
0000BC26 41F0 F2C6               000002C6  17731          LA    15,710(0,15)
                                                                                                                           Page  355 
  Active Usings: @REGION_2021_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BC2A E3F0 D4C8 0024          000004C8  17732          STG   15,1224(0,13)
0000BC30 4110 D4B0               000004B0  17733          LA    1,1200(0,13)
0000BC34 E3F0 C044 0004          0000BAD8  17734          LG    15,@lit_2021_853 ; rd_kafka_replyq_make
0000BC3A                                   17735 @@gen_label1194 DS    0H
0000BC3A 05EF                              17736          BALR  14,15
0000BC3C                                   17737 @@gen_label1195 DS    0H
0000BC3C E390 D4B0 0024          000004B0  17738          STG   9,1200(0,13)
0000BC42 D707 D4B8 D4B8 000004B8 000004B8  17739          XC    1208(8,13),1208(13)
0000BC48 E3F0 4070 0004          00000070  17740          LG    15,112(0,4) ; offset of rko_u in rd_kafka_op_s
0000BC4E E3F0 F000 0004          00000000  17741          LG    15,0(0,15)
0000BC54 E3F0 D4C0 0024          000004C0  17742          STG   15,1216(0,13)
0000BC5A E3F0 C064 0004          0000BAF8  17743          LG    15,@lit_2021_854 ; rd_kafka_txn_send_TxnOffsetCommitRequ*
                                                                est
0000BC60 E3F0 D4C8 0024          000004C8  17744          STG   15,1224(0,13)
0000BC66 E340 D4D0 0024          000004D0  17745          STG   4,1232(0,13)
0000BC6C B914 00F2                         17746          LGFR  15,2
0000BC70 E3F0 D4D8 0024          000004D8  17747          STG   15,1240(0,13)
0000BC76 D20F D4E0 D2B0 000004E0 000002B0  17748          MVC   1248(16,13),688(13)
0000BC7C E3F0 C05C 0004          0000BAF0  17749          LG    15,@lit_2021_855 ; rd_kafka_txn_handle_TxnOffsetCommit
0000BC82 E3F0 D4F0 0024          000004F0  17750          STG   15,1264(0,13)
0000BC88 E340 D4F8 0024          000004F8  17751          STG   4,1272(0,13)
0000BC8E 4110 D4B0               000004B0  17752          LA    1,1200(0,13)
0000BC92 E3F0 C054 0004          0000BAE8  17753          LG    15,@lit_2021_856 ; rd_kafka_coord_req
0000BC98                                   17754 @@gen_label1196 DS    0H
0000BC98 05EF                              17755          BALR  14,15
0000BC9A                                   17756 @@gen_label1197 DS    0H
                                           17757 * ***                           return;
0000BC9A 47F0 C300               0000BD94  17758          B     @ret_lab_2021
                                           17759 * ***                   } else if (!err)
0000BC9E                                   17760 @L1316   DS    0H
0000BC9E 1233                              17761          LTR   3,3
0000BCA0 4770 C214               0000BCA8  17762          BNZ   @L1317
                                           17763 * ***                           err = RD_KAFKA_RESP_ERR__TIMED_OUT;
0000BCA4 A738 FF47               0000FF47  17764          LHI   3,-185      ; -185
0000BCA8                                   17765 @L1318   DS    0H
                                           17766 * ***                   actions |= 0x1;
0000BCA8                                   17767 @L1317   DS    0H
0000BCA8 A52B 0001               00000001  17768          OILL  2,1
                                           17769 * ***           }
0000BCAC                                   17770 @L1315   DS    0H
                                           17771 * ***
                                           17772 * ***           if (actions & 0x1)
0000BCAC                                   17773 @L1314   DS    0H
0000BCAC A721 0001               00000001  17774          TML   2,1
0000BCB0 4780 C25C               0000BCF0  17775          BZ    @L1319
                                           17776 * ***                   rd_kafka_txn_set_abortable_error0(rk,err,0,"%s\
                                           17777 * ", errstr);
0000BCB4 E390 D4B0 0024          000004B0  17778          STG   9,1200(0,13)
0000BCBA B914 00F3                         17779          LGFR  15,3
0000BCBE E3F0 D4B8 0024          000004B8  17780          STG   15,1208(0,13)
0000BCC4 D707 D4C0 D4C0 000004C0 000004C0  17781          XC    1216(8,13),1216(13)
0000BCCA E3F0 C024 0004          0000BAB8  17782          LG    15,@lit_2021_847
                                                                                                                           Page  356 
  Active Usings: @REGION_2021_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BCD0 41F0 F122               00000122  17783          LA    15,290(0,15)
0000BCD4 E3F0 D4C8 0024          000004C8  17784          STG   15,1224(0,13)
0000BCDA 41F0 D0B0               000000B0  17785          LA    15,176(0,13)
0000BCDE E3F0 D4D0 0024          000004D0  17786          STG   15,1232(0,13)
0000BCE4 4110 D4B0               000004B0  17787          LA    1,1200(0,13)
0000BCE8 E3F0 C06C 0004          0000BB00  17788          LG    15,@lit_2021_859 ; rd_kafka_txn_set_abortable_error0
0000BCEE                                   17789 @@gen_label1200 DS    0H
0000BCEE 05EF                              17790          BALR  14,15
0000BCF0                                   17791 @@gen_label1201 DS    0H
0000BCF0                                   17792 @L1319   DS    0H
                                           17793 * ***
                                           17794 * ***           if (err)
0000BCF0 1233                              17795          LTR   3,3
0000BCF2 4780 C2BE               0000BD52  17796          BZ    @L1320
                                           17797 * ***                   rd_kafka_txn_curr_api_reply(rd_kafka_q_keep(rk\
                                           17798 * o->rko_replyq.q),
                                           17799 * ***                                               actions, err, "%s"\
                                           17800 * , errstr);
0000BCF6 E3F0 4040 0004          00000040  17801          LG    15,64(0,4)
0000BCFC E3F0 D4B0 0024          000004B0  17802          STG   15,1200(0,13)
0000BD02 4110 D4B0               000004B0  17803          LA    1,1200(0,13)
0000BD06 E3F0 C074 0004          0000BB08  17804          LG    15,@lit_2021_860 ; rd_kafka_q_keep
0000BD0C                                   17805 @@gen_label1203 DS    0H
0000BD0C 05EF                              17806          BALR  14,15
0000BD0E                                   17807 @@gen_label1204 DS    0H
0000BD0E E3F0 D4B0 0024          000004B0  17808          STG   15,1200(0,13)
0000BD14 B914 00F2                         17809          LGFR  15,2
0000BD18 E3F0 D4B8 0024          000004B8  17810          STG   15,1208(0,13)
0000BD1E B914 00F3                         17811          LGFR  15,3
0000BD22 E3F0 D4C0 0024          000004C0  17812          STG   15,1216(0,13)
0000BD28 E3F0 C024 0004          0000BAB8  17813          LG    15,@lit_2021_847
0000BD2E 41F0 F122               00000122  17814          LA    15,290(0,15)
0000BD32 E3F0 D4C8 0024          000004C8  17815          STG   15,1224(0,13)
0000BD38 41F0 D0B0               000000B0  17816          LA    15,176(0,13)
0000BD3C E3F0 D4D0 0024          000004D0  17817          STG   15,1232(0,13)
0000BD42 4110 D4B0               000004B0  17818          LA    1,1200(0,13)
0000BD46 E3F0 C07C 0004          0000BB10  17819          LG    15,@lit_2021_862 ; rd_kafka_txn_curr_api_reply
0000BD4C                                   17820 @@gen_label1205 DS    0H
0000BD4C 05EF                              17821          BALR  14,15
0000BD4E                                   17822 @@gen_label1206 DS    0H
0000BD4E 47F0 C2EE               0000BD82  17823          B     @L1321
                                           17824 * ***           else
0000BD52                                   17825 @L1320   DS    0H
                                           17826 * ***                   rd_kafka_txn_curr_api_reply(rd_kafka_q_keep(rk\
                                           17827 * o->rko_replyq.q),
                                           17828 * ***                                               0, RD_KAFKA_RESP_E\
                                           17829 * RR_NO_ERROR,
                                           17830 * ***                                               ((void *)0));
0000BD52 E3F0 4040 0004          00000040  17831          LG    15,64(0,4)
0000BD58 E3F0 D4B0 0024          000004B0  17832          STG   15,1200(0,13)
0000BD5E 4110 D4B0               000004B0  17833          LA    1,1200(0,13)
0000BD62 E3F0 C074 0004          0000BB08  17834          LG    15,@lit_2021_860 ; rd_kafka_q_keep
                                                                                                                           Page  357 
  Active Usings: @REGION_2021_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BD68                                   17835 @@gen_label1207 DS    0H
0000BD68 05EF                              17836          BALR  14,15
0000BD6A                                   17837 @@gen_label1208 DS    0H
0000BD6A E3F0 D4B0 0024          000004B0  17838          STG   15,1200(0,13)
0000BD70 D717 D4B8 D4B8 000004B8 000004B8  17839          XC    1208(24,13),1208(13)
0000BD76 4110 D4B0               000004B0  17840          LA    1,1200(0,13)
0000BD7A E3F0 C07C 0004          0000BB10  17841          LG    15,@lit_2021_862 ; rd_kafka_txn_curr_api_reply
0000BD80                                   17842 @@gen_label1209 DS    0H
0000BD80 05EF                              17843          BALR  14,15
0000BD82                                   17844 @@gen_label1210 DS    0H
0000BD82                                   17845 @L1321   DS    0H
                                           17846 * ***
                                           17847 * ***           rd_kafka_op_destroy(rko);
0000BD82 E340 D4B0 0024          000004B0  17848          STG   4,1200(0,13)
0000BD88 4110 D4B0               000004B0  17849          LA    1,1200(0,13)
0000BD8C E3F0 C084 0004          0000BB18  17850          LG    15,@lit_2021_865 ; rd_kafka_op_destroy
0000BD92                                   17851 @@gen_label1211 DS    0H
0000BD92 05EF                              17852          BALR  14,15
0000BD94                                   17853 @@gen_label1212 DS    0H
                                           17854 * ***   }
0000BD94                                   17855 @ret_lab_2021 DS 0H
                                           17856 * * **** Start of Epilogue
                                           17857          DCCEPIL
0000BD94                                   17858+         ds 0h                                                          01-DCCEP
                                           17859+* Epilog
0000BD94 D707 D088 D088 00000088 00000088  17860+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000BD9A E3D0 D080 0004          00000080  17861+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000BDA0 E3C0 D090 0004          00000090  17862+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000BDA6 E3B0 C018 0004          00000018  17863+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000BDAC E3C0 B010 0021          00000010  17864+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000BDB2 E3E0 D008 0004          00000008  17865+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000BDB8 EB1C D020 0004          00000020  17866+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000BDBE 078E                              17867+         bcr 8,14                if same dsab, just return              01-DCCEP
0000BDC0 E3F0 D010 0024          00000010  17868+         stg 15,16(0,13)         save return code                       01-DCCEP
0000BDC6 E300 D018 0024          00000018  17869+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000BDCC E3F0 D090 0004          00000090  17870+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000BDD2 E3F0 F018 0004          00000018  17871+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000BDD8 47F0 F040               00000040  17872+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           17873+* End of Epilog
                                           17874 * * **** End of Epilogue
                                           17875          DROP  12
                                           17876 *
                                           17877 *   DSECT for automatic variables in "rd_kafka_txn_handle_TxnOffsetCom
                                           17878 *           mit"
                                           17879 *      (FUNCTION #2021)
                                           17880 *
00000000                00000000 000004B0  17881 @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit DSECT
00000000                                   17882          DS    XL168
000000A8                                   17883 rd_kafka_txn_handle_$Txn$Offset$Commit#remains_ms#15 DS 1F ; remains_ms
000000AC                000000AC 000000A8  17884          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+168
000000A8                                   17885 rd_kafka_txn_handle_$Txn$Offset$Commit#__len0#4 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  17886          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+168
                                                                                                                           Page  358 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                   17887 rd_kafka_txn_handle_$Txn$Offset$Commit#__len2#3 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  17888          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+168
000000A8                                   17889 rd_kafka_txn_handle_$Txn$Offset$Commit#_v#2 DS 1F ; _v
000000AC                000000AC 000000A8  17890          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+168
000000A8                                   17891 rd_kafka_txn_handle_$Txn$Offset$Commit#actions#0 DS 1F ; actions
000000AC                000000AC 000000A8  17892          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+168
000000A8                                   17893 rd_kafka_txn_handle_$Txn$Offset$Commit#log_decode_errors#0 DS 1F ; log_*
                                                                decode_errors
000000AC                000000AC 000000AC  17894          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+172
000000AC                                   17895 rd_kafka_txn_handle_$Txn$Offset$Commit#_throttle_time_ms#1 DS 1F ; _thr*
                                                                ottle_time_ms
000000B0                000000B0 000000B0  17896          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+176
000000B0                                   17897 rd_kafka_txn_handle_$Txn$Offset$Commit#errstr#0 DS 512XL1 ; errstr
000002B0                000002B0 000002B0  17898          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+688
000002B0                                   17899 rd_kafka_txn_handle_$Txn$Offset$Commit#errparts#10 DS 256XL1 ; errparts
000003B0                000003B0 000002B0  17900          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+688
000002B0                                   17901 rd_kafka_txn_handle_$Txn$Offset$Commit#__tmpstr#8 DS 256XL1 ; __tmpstr
000003B0                000003B0 000003B0  17902          ORG   @AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit+944
000003B0                                   17903 rd_kafka_txn_handle_$Txn$Offset$Commit#_logname#9 DS 256XL1 ; _logname
                                           17904 *
0000BDDC                00000000 00014658  17905 @CODE    CSECT
                                           17906 *
                                           17907 *
                                           17908 *
                                           17909 * ....... start of rd_kafka_txn_send_TxnOffsetCommitRequest
0000BDDC                                   17910 @LNAME2020 DS  0H
0000BDDC 00000028                          17911          DC    X'00000028'
0000BDE0 99846D9281869281                  17912          DC    C'rd_kafka_txn_send_TxnOffsetCommi'
0000BE00 A3D98598A485A2A3                  17913          DC    C'tRequest'
0000BE08 00                                17914          DC    X'00'
                                           17915 rd_kafka_txn_send_$Txn$Offset$Commit$Request DCCPRLG CINDEX=2020,BASER=*
                                                                12,FRAME=256,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2020
                                           17916          macro
                                           17917          dccextrn &m
                                           17918          gblc    &$dccext(1000)
                                           17919          gbla    &$dccexti
                                           17920          lcla    &i
                                           17921 &$dccext(&$dccexti+1) setc    '&m'
                                           17922 &i       seta    1
                                           17923 .loop    aif    (&i gt &$dccexti).around
                                           17924          aif    ('&$dccext(&i)' eq '&m').getout
                                           17925 &i       seta    &i+1
                                           17926          ago     .loop
                                           17927 .around  anop
                                           17928 &$dccexti seta &$dccexti+1
                                           17929          extrn  &m
                                           17930 .getout  anop
                                           17931          mend
0000BE10                                   17932+$eye0264    ds    0d                                                    02-DCCCA
0000BE10 C4C3C3                            17933+         dc cl3'DCC'                                                    02-DCCCA
0000BE13 01                                17934+         dc xl1'01' format one                                          02-DCCCA
0000BE14 00000000                          17935+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page  359 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BE18 000000000000BE82                  17936+         dc ad(@PER_2020)                                               02-DCCCA
0000BE20 0000000000000100                  17937+         dc ad(256)                                                     02-DCCCA
0000BE28 0000000000000000                  17938+         dc ad(0)                                                       02-DCCCA
0000BE30 0000000000001000                  17939+         dc ad(4096)                                                    02-DCCCA
0000BE38 20                                17940+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000BE39 03                                17941+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000BE3A 03                                17942+         dc al1(3)                                                      02-DCCCA
0000BE3B 08                                17943+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000BE3C 00                                17944+         dc bl.8'00000000'                                              02-DCCCA
0000BE3D 000000                            17945+         dc al3(0)                                                      02-DCCCA
0000BE40 000000000000BDDC                  17946+         dc ad(@LNAME2020)                                              02-DCCCA
0000BE48                                   17947+         ds 0d                                                          02-DCCCA
0000BE48 000000000000BE10                  17948+         dc ad($eye0264)                                                02-DCCCA
0000BE50 0000000000000000                  17949+         dc ad(0)                                                       02-DCCCA
0000BE58                                   17950+         ds    0d                                                       01-DCCPR
0000BE58                                   17951+rd_kafka_txn_send_$Txn$Offset$Commit$Request ds 0d                      01-DCCPR
0000BE58                                   17952+@REGION_2020_1 ds 0h                                                    01-DCCPR
0000BE58 EBEC D008 0024          00000008  17953+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000BE5E E3E0 D088 0004          00000088  17954+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000BE64 E3C0 D090 0004          00000090  17955+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000BE6A B904 002E                         17956+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000BE6E E3B0 C018 0004          00000018  17957+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000BE74 A7EB 0100               00000100  17958+         aghi  14,256              increase by frame size               01-DCCPR
0000BE78 E3E0 C020 0021          00000020  17959+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000BE7E 4720 B020               00000020  17960+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000BE82                                   17961+@PER_2020 ds   0h                                                       01-DCCPR
0000BE82 EBDE 2080 0024          00000080  17962+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000BE88 E3C0 2090 0024          00000090  17963+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000BE8E B904 00D2                         17964+         lgr   13,2                set real frame pointer               01-DCCPR
0000BE92 B904 00CF                         17965+         lgr   12,15               set base reg                         01-DCCPR
                        0000BE58           17966+         using @REGION_2020_1,12                                        01-DCCPR
0000BE96 B904 0071                         17967          LGR   7,1         ; ptr to parm area
                                           17968 * ******* End of Prologue
                                           17969 * *
                                           17970 * ***           rd_kafka_t *rk = rkb->rkb_rk;
0000BE9A EB23 7000 0004          00000000  17971          LMG   2,3,0(7)    ; rkb
0000BEA0 E340 2FD0 0004          00000FD0  17972          LG    4,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
                                           17973 * ***           rd_kafka_buf_t *rkbuf;
                                           17974 * ***           int16_t ApiVersion;
                                           17975 * ***           rd_kafka_pid_t pid;
                                           17976 * ***           const rd_kafka_consumer_group_metadata_t *cgmetadata =
                                           17977 * ***                   rko->rko_u.txn.cgmetadata;
0000BEA6 E360 3070 0004          00000070  17978          LG    6,112(0,3)  ; offset of rko_u in rd_kafka_op_s
                                           17979 * ***           int cnt;
                                           17980 * ***
                                           17981 * ***           rwlock_rdlock(&(rk)->rk_lock);
0000BEAC 41F0 49A0               000009A0  17982          LA    15,2464(0,4)
0000BEB0 E3F0 D0C8 0024          000000C8  17983          STG   15,200(0,13)
0000BEB6 4110 D0C8               000000C8  17984          LA    1,200(0,13)
0000BEBA E3F0 C0A0 0004          0000BEF8  17985          LG    15,@lit_2020_880 ; rwlock_rdlock
0000BEC0                                   17986 @@gen_label1213 DS    0H
0000BEC0 05EF                              17987          BALR  14,15
                                                                                                                           Page  360 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BEC2                                   17988 @@gen_label1214 DS    0H
                                           17989 * ***           if (rk->rk_eos.txn_state != RD_KAFKA_TXN_STATE_IN_TRAN\
                                           17990 * SACTION) {
0000BEC2 E55C 4D38 0004          00000D38  17991          CHSI  3384(4),4
0000BEC8 4780 C118               0000BF70  17992          BE    @L1322
                                           17993 * ***                   rwlock_rdunlock(&(rk)->rk_lock);
0000BECC 41F0 49A0               000009A0  17994          LA    15,2464(0,4)
0000BED0 E3F0 D0C8 0024          000000C8  17995          STG   15,200(0,13)
0000BED6 4110 D0C8               000000C8  17996          LA    1,200(0,13)
0000BEDA E3F0 C0A8 0004          0000BF00  17997          LG    15,@lit_2020_881 ; rwlock_rdunlock
0000BEE0                                   17998 @@gen_label1216 DS    0H
0000BEE0 05EF                              17999          BALR  14,15
0000BEE2                                   18000 @@gen_label1217 DS    0H
                                           18001 * ***
                                           18002 * ***
                                           18003 * ***
                                           18004 * ***                   return RD_KAFKA_RESP_ERR__STATE;
0000BEE2 A7F9 FF54               0000FF54  18005          LGHI  15,-172     ; -172
0000BEE6 47F0 C400               0000C258  18006          B     @ret_lab_2020
0000BEF0                                   18007          DS    0D
0000BEF0 00000100                          18008 @FRAMESIZE_2020 DC F'256'
0000BEF4 00000000
0000BEF8 0000000000000000                  18009 @lit_2020_880 DC AD(rwlock_rdlock)
0000BF00 0000000000000000                  18010 @lit_2020_881 DC AD(rwlock_rdunlock)
0000BF08 0000000000004340                  18011 @lit_2020_883 DC AD(rd_kafka_idemp_get_pid0)
0000BF10 0000000000000000                  18012 @lit_2020_886 DC AD(rd_kafka_broker_$Api$Version_supported)
0000BF18 0000000000000000                  18013 @lit_2020_889 DC AD(rd_kafka_buf_new_request0)
0000BF20 00000000000000FF                  18014 @lit_2020_888 DC FD'255' 0x00000000000000ff
0000BF28 00000000000036E0                  18015 @lit_2020_890 DC AD(rd_kafka_buf_write_str)
0000BF30 0000000000003450                  18016 @lit_2020_892 DC AD(rd_kafka_buf_write_i64)
0000BF38 00000000000031F0                  18017 @lit_2020_893 DC AD(rd_kafka_buf_write_i16)
0000BF40 0000000000003320                  18018 @lit_2020_894 DC AD(rd_kafka_buf_write_i32)
0000BF48 0000000000000000                  18019 @lit_2020_898 DC AD(rd_kafka_buf_write_topic_partitions)
0000BF50 0000000000000F28                  18020 @lit_2020_899 DC AD(rd_refcnt_sub0)
0000BF58 0000000000000000                  18021 @lit_2020_900 DC AD(rd_kafka_buf_destroy_final)
0000BF60 0000000000002FE0                  18022 @lit_2020_902 DC AD(rd_kafka_buf_$Api$Version_set)
0000BF68 0000000000000000                  18023 @lit_2020_904 DC AD(rd_kafka_broker_buf_enq_replyq)
                                           18024 * ***           }
0000BF70                                   18025 @L1322   DS    0H
                                           18026 * ***
                                           18027 * ***           pid = rd_kafka_idemp_get_pid0(rk, RD_DONT_LOCK);
0000BF70 41F0 D0B8               000000B8  18028          LA    15,184(0,13)
0000BF74 E3F0 D0C8 0024          000000C8  18029          STG   15,200(0,13)
0000BF7A E340 D0D0 0024          000000D0  18030          STG   4,208(0,13)
0000BF80 D707 D0D8 D0D8 000000D8 000000D8  18031          XC    216(8,13),216(13)
0000BF86 4110 D0C8               000000C8  18032          LA    1,200(0,13)
0000BF8A E3F0 C0B0 0004          0000BF08  18033          LG    15,@lit_2020_883 ; rd_kafka_idemp_get_pid0
0000BF90                                   18034 @@gen_label1218 DS    0H
0000BF90 05EF                              18035          BALR  14,15
0000BF92                                   18036 @@gen_label1219 DS    0H
0000BF92 D20F D0A8 D0B8 000000A8 000000B8  18037          MVC   168(16,13),184(13)
                                           18038 * ***           rwlock_rdunlock(&(rk)->rk_lock);
                                                                                                                           Page  361 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000BF98 41F0 49A0               000009A0  18039          LA    15,2464(0,4)
0000BF9C E3F0 D0C8 0024          000000C8  18040          STG   15,200(0,13)
0000BFA2 4110 D0C8               000000C8  18041          LA    1,200(0,13)
0000BFA6 E3F0 C0A8 0004          0000BF00  18042          LG    15,@lit_2020_881 ; rwlock_rdunlock
0000BFAC                                   18043 @@gen_label1220 DS    0H
0000BFAC 05EF                              18044          BALR  14,15
0000BFAE                                   18045 @@gen_label1221 DS    0H
                                           18046 * ***           if (!((pid).id != -1)) {
0000BFAE E558 D0A8 FFFF          000000A8  18047          CGHSI 168(13),-1
0000BFB4 4770 C168               0000BFC0  18048          BNE   @L1323
                                           18049 * ***
                                           18050 * ***
                                           18051 * ***
                                           18052 * ***                   return RD_KAFKA_RESP_ERR__STATE;
0000BFB8 A7F9 FF54               0000FF54  18053          LGHI  15,-172     ; -172
0000BFBC 47F0 C400               0000C258  18054          B     @ret_lab_2020
                                           18055 * ***           }
0000BFC0                                   18056 @L1323   DS    0H
                                           18057 * ***
                                           18058 * ***           ApiVersion = rd_kafka_broker_ApiVersion_supported(
                                           18059 * ***                   rkb, 28, 0, 3, ((void *)0));
0000BFC0 E320 D0C8 0024          000000C8  18060          STG   2,200(0,13)
0000BFC6 E548 D0D0 001C          000000D0  18061          MVGHI 208(13),28
0000BFCC D707 D0D8 D0D8 000000D8 000000D8  18062          XC    216(8,13),216(13)
0000BFD2 E548 D0E0 0003          000000E0  18063          MVGHI 224(13),3
0000BFD8 D707 D0E8 D0E8 000000E8 000000E8  18064          XC    232(8,13),232(13)
0000BFDE 4110 D0C8               000000C8  18065          LA    1,200(0,13)
0000BFE2 E3F0 C0B8 0004          0000BF10  18066          LG    15,@lit_2020_886 ; rd_kafka_broker_ApiVersion_supported
0000BFE8                                   18067 @@gen_label1223 DS    0H
0000BFE8 05EF                              18068          BALR  14,15
0000BFEA                                   18069 @@gen_label1224 DS    0H
0000BFEA 188F                              18070          LR    8,15
0000BFEC 4080 D0B8               000000B8  18071          STH   8,184(0,13) ; ApiVersion
                                           18072 * ***           if (ApiVersion == -1) {
0000BFF0 B927 00F8                         18073          LHR   15,8
0000BFF4 A7FE FFFF               0000FFFF  18074          CHI   15,-1
0000BFF8 4770 C1AC               0000C004  18075          BNE   @L1324
                                           18076 * ***
                                           18077 * ***
                                           18078 * ***
                                           18079 * ***                   return RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE;
0000BFFC A7F9 FF5B               0000FF5B  18080          LGHI  15,-165     ; -165
0000C000 47F0 C400               0000C258  18081          B     @ret_lab_2020
                                           18082 * ***           }
0000C004                                   18083 @L1324   DS    0H
                                           18084 * ***
                                           18085 * ***           rkbuf = rd_kafka_buf_new_request0(rkb,28,1,rko->rko_u.\
                                           18086 * txn.offsets->cnt * 50,ApiVersion >= 3);
0000C004 E320 D0C8 0024          000000C8  18087          STG   2,200(0,13)
0000C00A E548 D0D0 001C          000000D0  18088          MVGHI 208(13),28
0000C010 E548 D0D8 0001          000000D8  18089          MVGHI 216(13),1
0000C016 E3F0 3090 0004          00000090  18090          LG    15,144(0,3) ; offset of offsets in 0000084
                                                                                                                           Page  362 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C01C 58F0 F000               00000000  18091          L     15,0(0,15)
0000C020 A7FC 0032               00000032  18092          MHI   15,50
0000C024 B914 00FF                         18093          LGFR  15,15
0000C028 E3F0 D0E0 0024          000000E0  18094          STG   15,224(0,13)
0000C02E B927 00F8                         18095          LHR   15,8
0000C032 A7FE 0003               00000003  18096          CHI   15,3
0000C036 4740 C1EA               0000C042  18097          BL    @@gen_label1226
0000C03A A7F8 0001               00000001  18098          LHI   15,1
0000C03E 47F0 C1EE               0000C046  18099          B     @@gen_label1227
0000C042                                   18100 @@gen_label1226 DS 0H
0000C042 A7F8 0000               00000000  18101          LHI   15,0
0000C046                                   18102 @@gen_label1227 DS 0H
0000C046 E3F0 C0C8 0080          0000BF20  18103          NG    15,@lit_2020_888
0000C04C E3F0 D0E8 0024          000000E8  18104          STG   15,232(0,13)
0000C052 4110 D0C8               000000C8  18105          LA    1,200(0,13)
0000C056 E3F0 C0C0 0004          0000BF18  18106          LG    15,@lit_2020_889 ; rd_kafka_buf_new_request0
0000C05C                                   18107 @@gen_label1228 DS    0H
0000C05C 05EF                              18108          BALR  14,15
0000C05E                                   18109 @@gen_label1229 DS    0H
0000C05E B904 005F                         18110          LGR   5,15
                                           18111 * ***
                                           18112 * ***
                                           18113 * ***
                                           18114 * ***
                                           18115 * ***
                                           18116 * ***
                                           18117 * ***           rd_kafka_buf_write_str(rkbuf, rk->rk_conf.eos.transact\
                                           18118 * ional_id, -1);
0000C062 E350 D0C8 0024          000000C8  18119          STG   5,200(0,13)
0000C068 E3F0 47E8 0004          000007E8  18120          LG    15,2024(0,4)
0000C06E E3F0 D0D0 0024          000000D0  18121          STG   15,208(0,13)
0000C074 E548 D0D8 FFFF          000000D8  18122          MVGHI 216(13),-1
0000C07A 4110 D0C8               000000C8  18123          LA    1,200(0,13)
0000C07E E340 C0D0 0004          0000BF28  18124          LG    4,@lit_2020_890 ; rd_kafka_buf_write_str
0000C084 B904 00F4                         18125          LGR   15,4
0000C088                                   18126 @@gen_label1230 DS    0H
0000C088 05EF                              18127          BALR  14,15
0000C08A                                   18128 @@gen_label1231 DS    0H
                                           18129 * ***
                                           18130 * ***
                                           18131 * ***           rd_kafka_buf_write_str(rkbuf, rko->rko_u.txn.cgmetadat\
                                           18132 * a->group_id, -1);
0000C08A E350 D0C8 0024          000000C8  18133          STG   5,200(0,13)
0000C090 E3F0 3070 0004          00000070  18134          LG    15,112(0,3) ; offset of rko_u in rd_kafka_op_s
0000C096 E3F0 F000 0004          00000000  18135          LG    15,0(0,15)
0000C09C E3F0 D0D0 0024          000000D0  18136          STG   15,208(0,13)
0000C0A2 E548 D0D8 FFFF          000000D8  18137          MVGHI 216(13),-1
0000C0A8 4110 D0C8               000000C8  18138          LA    1,200(0,13)
0000C0AC B904 00F4                         18139          LGR   15,4
0000C0B0                                   18140 @@gen_label1232 DS    0H
0000C0B0 05EF                              18141          BALR  14,15
0000C0B2                                   18142 @@gen_label1233 DS    0H
                                                                                                                           Page  363 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           18143 * ***
                                           18144 * ***
                                           18145 * ***           rd_kafka_buf_write_i64(rkbuf, pid.id);
0000C0B2 E350 D0C8 0024          000000C8  18146          STG   5,200(0,13)
0000C0B8 E3F0 D0A8 0004          000000A8  18147          LG    15,168(0,13)
0000C0BE E3F0 D0D0 0024          000000D0  18148          STG   15,208(0,13)
0000C0C4 4110 D0C8               000000C8  18149          LA    1,200(0,13)
0000C0C8 E3F0 C0D8 0004          0000BF30  18150          LG    15,@lit_2020_892 ; rd_kafka_buf_write_i64
0000C0CE                                   18151 @@gen_label1234 DS    0H
0000C0CE 05EF                              18152          BALR  14,15
0000C0D0                                   18153 @@gen_label1235 DS    0H
                                           18154 * ***           rd_kafka_buf_write_i16(rkbuf, pid.epoch);
0000C0D0 E350 D0C8 0024          000000C8  18155          STG   5,200(0,13)
0000C0D6 E3F0 D0B0 0015          000000B0  18156          LGH   15,176(0,13)
0000C0DC E3F0 D0D0 0024          000000D0  18157          STG   15,208(0,13)
0000C0E2 4110 D0C8               000000C8  18158          LA    1,200(0,13)
0000C0E6 E3F0 C0E0 0004          0000BF38  18159          LG    15,@lit_2020_893 ; rd_kafka_buf_write_i16
0000C0EC                                   18160 @@gen_label1236 DS    0H
0000C0EC 05EF                              18161          BALR  14,15
0000C0EE                                   18162 @@gen_label1237 DS    0H
                                           18163 * ***
                                           18164 * ***           if (ApiVersion >= 3) {
0000C0EE B927 00F8                         18165          LHR   15,8
0000C0F2 A7FE 0003               00000003  18166          CHI   15,3
0000C0F6 4740 C304               0000C15C  18167          BL    @L1325
                                           18168 * ***
                                           18169 * ***                   rd_kafka_buf_write_i32(rkbuf, cgmetadata->gene\
                                           18170 * ration_id);
0000C0FA E350 D0C8 0024          000000C8  18171          STG   5,200(0,13)
0000C100 E3F0 6008 0014          00000008  18172          LGF   15,8(0,6)
0000C106 E3F0 D0D0 0024          000000D0  18173          STG   15,208(0,13)
0000C10C 4110 D0C8               000000C8  18174          LA    1,200(0,13)
0000C110 E3F0 C0E8 0004          0000BF40  18175          LG    15,@lit_2020_894 ; rd_kafka_buf_write_i32
0000C116                                   18176 @@gen_label1239 DS    0H
0000C116 05EF                              18177          BALR  14,15
0000C118                                   18178 @@gen_label1240 DS    0H
                                           18179 * ***
                                           18180 * ***                   rd_kafka_buf_write_str(rkbuf, cgmetadata->memb\
                                           18181 * er_id, -1);
0000C118 E350 D0C8 0024          000000C8  18182          STG   5,200(0,13)
0000C11E E3F0 6010 0004          00000010  18183          LG    15,16(0,6)
0000C124 E3F0 D0D0 0024          000000D0  18184          STG   15,208(0,13)
0000C12A E548 D0D8 FFFF          000000D8  18185          MVGHI 216(13),-1
0000C130 4110 D0C8               000000C8  18186          LA    1,200(0,13)
0000C134 B904 00F4                         18187          LGR   15,4
0000C138                                   18188 @@gen_label1241 DS    0H
0000C138 05EF                              18189          BALR  14,15
0000C13A                                   18190 @@gen_label1242 DS    0H
                                           18191 * ***
                                           18192 * ***                   rd_kafka_buf_write_str(rkbuf, cgmetadata->grou\
                                           18193 * p_instance_id,
                                           18194 * ***                                          -1);
                                                                                                                           Page  364 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C13A E350 D0C8 0024          000000C8  18195          STG   5,200(0,13)
0000C140 E3F0 6018 0004          00000018  18196          LG    15,24(0,6)
0000C146 E3F0 D0D0 0024          000000D0  18197          STG   15,208(0,13)
0000C14C E548 D0D8 FFFF          000000D8  18198          MVGHI 216(13),-1
0000C152 4110 D0C8               000000C8  18199          LA    1,200(0,13)
0000C156 B904 00F4                         18200          LGR   15,4
0000C15A                                   18201 @@gen_label1243 DS    0H
0000C15A 05EF                              18202          BALR  14,15
0000C15C                                   18203 @@gen_label1244 DS    0H
                                           18204 * ***           }
0000C15C                                   18205 @L1325   DS    0H
                                           18206 * ***
                                           18207 * ***
                                           18208 * ***           cnt = rd_kafka_buf_write_topic_partitions(
                                           18209 * ***                   rkbuf,
                                           18210 * ***                   rko->rko_u.txn.offsets,
                                           18211 * ***                   1 ,
                                           18212 * ***                   0 ,
                                           18213 * ***                   1 ,
                                           18214 * ***                   ApiVersion >= 2 ,
                                           18215 * ***                   1 );
0000C15C E350 D0C8 0024          000000C8  18216          STG   5,200(0,13)
0000C162 E3F0 3090 0004          00000090  18217          LG    15,144(0,3)
0000C168 E3F0 D0D0 0024          000000D0  18218          STG   15,208(0,13)
0000C16E E548 D0D8 0001          000000D8  18219          MVGHI 216(13),1
0000C174 D707 D0E0 D0E0 000000E0 000000E0  18220          XC    224(8,13),224(13)
0000C17A E548 D0E8 0001          000000E8  18221          MVGHI 232(13),1
0000C180 B927 00F8                         18222          LHR   15,8
0000C184 A7FE 0002               00000002  18223          CHI   15,2
0000C188 4740 C33C               0000C194  18224          BL    @@gen_label1245
0000C18C A7F8 0001               00000001  18225          LHI   15,1
0000C190 47F0 C340               0000C198  18226          B     @@gen_label1246
0000C194                                   18227 @@gen_label1245 DS 0H
0000C194 A7F8 0000               00000000  18228          LHI   15,0
0000C198                                   18229 @@gen_label1246 DS 0H
0000C198 E3F0 C0C8 0080          0000BF20  18230          NG    15,@lit_2020_888
0000C19E E3F0 D0F0 0024          000000F0  18231          STG   15,240(0,13)
0000C1A4 E548 D0F8 0001          000000F8  18232          MVGHI 248(13),1
0000C1AA 4110 D0C8               000000C8  18233          LA    1,200(0,13)
0000C1AE E3F0 C0F0 0004          0000BF48  18234          LG    15,@lit_2020_898 ; rd_kafka_buf_write_topic_partitions
0000C1B4                                   18235 @@gen_label1247 DS    0H
0000C1B4 05EF                              18236          BALR  14,15
0000C1B6                                   18237 @@gen_label1248 DS    0H
                                           18238 * ***
                                           18239 * ***           if (!cnt) {
0000C1B6 12FF                              18240          LTR   15,15
0000C1B8 4770 C39A               0000C1F2  18241          BNZ   @L1326
                                           18242 * ***
                                           18243 * ***                   do { if (rd_refcnt_sub0(&(rkbuf)->rkbuf_refcnt\
                                           18244 * ) > 0) break; rd_kafka_buf_destroy_final(rkbuf); } while (0);
0000C1BC                                   18245 @L1327   DS    0H
0000C1BC 41F0 5108               00000108  18246          LA    15,264(0,5)
                                                                                                                           Page  365 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C1C0 E3F0 D0C8 0024          000000C8  18247          STG   15,200(0,13)
0000C1C6 4110 D0C8               000000C8  18248          LA    1,200(0,13)
0000C1CA E3F0 C0F8 0004          0000BF50  18249          LG    15,@lit_2020_899 ; rd_refcnt_sub0
0000C1D0                                   18250 @@gen_label1250 DS    0H
0000C1D0 05EF                              18251          BALR  14,15
0000C1D2                                   18252 @@gen_label1251 DS    0H
0000C1D2 12FF                              18253          LTR   15,15
0000C1D4 4720 C392               0000C1EA  18254          BH    @L1328
0000C1D8                                   18255 @L1330   DS    0H
0000C1D8 E350 D0C8 0024          000000C8  18256          STG   5,200(0,13)
0000C1DE 4110 D0C8               000000C8  18257          LA    1,200(0,13)
0000C1E2 E3F0 C100 0004          0000BF58  18258          LG    15,@lit_2020_900 ; rd_kafka_buf_destroy_final
0000C1E8                                   18259 @@gen_label1253 DS    0H
0000C1E8 05EF                              18260          BALR  14,15
0000C1EA                                   18261 @@gen_label1254 DS    0H
0000C1EA                                   18262 @L1328   DS    0H
                                           18263 * ***
                                           18264 * ***
                                           18265 * ***
                                           18266 * ***                   return RD_KAFKA_RESP_ERR__NO_OFFSET;
0000C1EA A7F9 FF58               0000FF58  18267          LGHI  15,-168     ; -168
0000C1EE 47F0 C400               0000C258  18268          B     @ret_lab_2020
                                           18269 * ***           }
0000C1F2                                   18270 @L1326   DS    0H
                                           18271 * ***
                                           18272 * ***           rd_kafka_buf_ApiVersion_set(rkbuf, ApiVersion, 0);
0000C1F2 E350 D0C8 0024          000000C8  18273          STG   5,200(0,13)
0000C1F8 B907 00F8                         18274          LGHR  15,8
0000C1FC E3F0 D0D0 0024          000000D0  18275          STG   15,208(0,13)
0000C202 D707 D0D8 D0D8 000000D8 000000D8  18276          XC    216(8,13),216(13)
0000C208 4110 D0C8               000000C8  18277          LA    1,200(0,13)
0000C20C E3F0 C108 0004          0000BF60  18278          LG    15,@lit_2020_902 ; rd_kafka_buf_ApiVersion_set
0000C212                                   18279 @@gen_label1255 DS    0H
0000C212 05EF                              18280          BALR  14,15
0000C214                                   18281 @@gen_label1256 DS    0H
                                           18282 * ***
                                           18283 * ***           rkbuf->rkbuf_max_retries = 0x7fffffff;
0000C214 C0F9 7FFF FFFF                    18284          IILF  15,X'7FFFFFFF' ; 2147483647
0000C21A 50F0 5140               00000140  18285          ST    15,320(0,5) ; offset of rkbuf_max_retries in rd_kafka_bu*
                                                                f_s
                                           18286 * ***
                                           18287 * ***           rd_kafka_broker_buf_enq_replyq(rkb, rkbuf,
                                           18288 * ***                                          replyq, resp_cb, reply_\
                                           18289 * opaque);
0000C21E E320 D0C8 0024          000000C8  18290          STG   2,200(0,13)
0000C224 E350 D0D0 0024          000000D0  18291          STG   5,208(0,13)
0000C22A D20F D0D8 7010 000000D8 00000010  18292          MVC   216(16,13),16(7)
0000C230 E3F0 7020 0004          00000020  18293          LG    15,32(0,7)  ; resp_cb
0000C236 E3F0 D0E8 0024          000000E8  18294          STG   15,232(0,13)
0000C23C E3F0 7028 0004          00000028  18295          LG    15,40(0,7)  ; reply_opaque
0000C242 E3F0 D0F0 0024          000000F0  18296          STG   15,240(0,13)
0000C248 4110 D0C8               000000C8  18297          LA    1,200(0,13)
                                                                                                                           Page  366 
  Active Usings: @REGION_2020_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C24C E3F0 C110 0004          0000BF68  18298          LG    15,@lit_2020_904 ; rd_kafka_broker_buf_enq_replyq
0000C252                                   18299 @@gen_label1257 DS    0H
0000C252 05EF                              18300          BALR  14,15
0000C254                                   18301 @@gen_label1258 DS    0H
                                           18302 * ***
                                           18303 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000C254 A7F9 0000               00000000  18304          LGHI  15,0        ; 0
                                           18305 * ***   }
0000C258                                   18306 @ret_lab_2020 DS 0H
                                           18307 * * **** Start of Epilogue
                                           18308          DCCEPIL
0000C258                                   18309+         ds 0h                                                          01-DCCEP
                                           18310+* Epilog
0000C258 D707 D088 D088 00000088 00000088  18311+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000C25E E3D0 D080 0004          00000080  18312+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000C264 E3C0 D090 0004          00000090  18313+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000C26A E3B0 C018 0004          00000018  18314+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000C270 E3C0 B010 0021          00000010  18315+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000C276 E3E0 D008 0004          00000008  18316+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000C27C EB1C D020 0004          00000020  18317+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000C282 078E                              18318+         bcr 8,14                if same dsab, just return              01-DCCEP
0000C284 E3F0 D010 0024          00000010  18319+         stg 15,16(0,13)         save return code                       01-DCCEP
0000C28A E300 D018 0024          00000018  18320+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000C290 E3F0 D090 0004          00000090  18321+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000C296 E3F0 F018 0004          00000018  18322+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000C29C 47F0 F040               00000040  18323+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           18324+* End of Epilog
                                           18325 * * **** End of Epilogue
                                           18326          DROP  12
                                           18327 *
                                           18328 *   DSECT for automatic variables in "rd_kafka_txn_send_TxnOffsetCommi
                                           18329 *           tRequest"
                                           18330 *      (FUNCTION #2020)
                                           18331 *
00000000                00000000 000000BA  18332 @AUTO#rd_kafka_txn_send_$Txn$Offset$Commit$Request DSECT
00000000                                   18333          DS    XL168
000000A8                                   18334 rd_kafka_txn_send_$Txn$Offset$Commit$Request#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8  18335          ORG   @AUTO#rd_kafka_txn_send_$Txn$Offset$Commit$Request+168
000000A8                                   18336 rd_kafka_txn_send_$Txn$Offset$Commit$Request#pid#0 DS 16XL1 ; pid
000000B8                000000B8 000000B8  18337          ORG   @AUTO#rd_kafka_txn_send_$Txn$Offset$Commit$Request+184
000000B8                                   18338 rd_kafka_txn_send_$Txn$Offset$Commit$Request#$Api$Version#0 DS 2XL1 ; A*
                                                                piVersion
                                           18339 *
0000C2A0                00000000 00014658  18340 @CODE    CSECT
                                           18341 *
                                           18342 *
                                           18343 *
                                           18344 * ....... start of rd_kafka_txn_handle_AddOffsetsToTxn
0000C2A0                                   18345 @LNAME2022 DS  0H
0000C2A0 00000023                          18346          DC    X'00000023'
0000C2A4 99846D9281869281                  18347          DC    C'rd_kafka_txn_handle_AddOffsetsTo'
0000C2C4 E3A795                            18348          DC    C'Txn'
                                                                                                                           Page  367 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C2C7 00                                18349          DC    X'00'
                                           18350 rd_kafka_txn_handle_$Add$Offsets$To$Txn DCCPRLG CINDEX=2022,BASER=12,FR*
                                                                AME=832,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2022
                                           18351          macro
                                           18352          dccextrn &m
                                           18353          gblc    &$dccext(1000)
                                           18354          gbla    &$dccexti
                                           18355          lcla    &i
                                           18356 &$dccext(&$dccexti+1) setc    '&m'
                                           18357 &i       seta    1
                                           18358 .loop    aif    (&i gt &$dccexti).around
                                           18359          aif    ('&$dccext(&i)' eq '&m').getout
                                           18360 &i       seta    &i+1
                                           18361          ago     .loop
                                           18362 .around  anop
                                           18363 &$dccexti seta &$dccexti+1
                                           18364          extrn  &m
                                           18365 .getout  anop
                                           18366          mend
0000C2C8                                   18367+$eye0267    ds    0d                                                    02-DCCCA
0000C2C8 C4C3C3                            18368+         dc cl3'DCC'                                                    02-DCCCA
0000C2CB 01                                18369+         dc xl1'01' format one                                          02-DCCCA
0000C2CC 00000000                          18370+         dc a(0)                                                        02-DCCCA
0000C2D0 000000000000C33A                  18371+         dc ad(@PER_2022)                                               02-DCCCA
0000C2D8 0000000000000340                  18372+         dc ad(832)                                                     02-DCCCA
0000C2E0 0000000000000000                  18373+         dc ad(0)                                                       02-DCCCA
0000C2E8 0000000000001000                  18374+         dc ad(4096)                                                    02-DCCCA
0000C2F0 20                                18375+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000C2F1 03                                18376+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000C2F2 03                                18377+         dc al1(3)                                                      02-DCCCA
0000C2F3 08                                18378+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000C2F4 00                                18379+         dc bl.8'00000000'                                              02-DCCCA
0000C2F5 000000                            18380+         dc al3(0)                                                      02-DCCCA
0000C2F8 000000000000C2A0                  18381+         dc ad(@LNAME2022)                                              02-DCCCA
0000C300                                   18382+         ds 0d                                                          02-DCCCA
0000C300 000000000000C2C8                  18383+         dc ad($eye0267)                                                02-DCCCA
0000C308 0000000000000000                  18384+         dc ad(0)                                                       02-DCCCA
0000C310                                   18385+         ds    0d                                                       01-DCCPR
0000C310                                   18386+rd_kafka_txn_handle_$Add$Offsets$To$Txn ds 0d                           01-DCCPR
0000C310                                   18387+@REGION_2022_1 ds 0h                                                    01-DCCPR
0000C310 EBEC D008 0024          00000008  18388+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000C316 E3E0 D088 0004          00000088  18389+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000C31C E3C0 D090 0004          00000090  18390+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000C322 B904 002E                         18391+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000C326 E3B0 C018 0004          00000018  18392+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000C32C A7EB 0340               00000340  18393+         aghi  14,832              increase by frame size               01-DCCPR
0000C330 E3E0 C020 0021          00000020  18394+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000C336 4720 B020               00000020  18395+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000C33A                                   18396+@PER_2022 ds   0h                                                       01-DCCPR
0000C33A EBDE 2080 0024          00000080  18397+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000C340 E3C0 2090 0024          00000090  18398+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000C346 B904 00D2                         18399+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  368 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C34A B904 00CF                         18400+         lgr   12,15               set base reg                         01-DCCPR
                        0000C310           18401+         using @REGION_2022_1,12                                        01-DCCPR
                                           18402 * ******* End of Prologue
                                           18403 * *
                                           18404 * ***           const int log_decode_errors = 3;
0000C34E E360 1000 0004          00000000  18405          LG    6,0(0,1)    ; rk
0000C354 E340 1008 0004          00000008  18406          LG    4,8(0,1)    ; rkb
0000C35A 5830 1014               00000014  18407          L     3,20(0,1)   ; err
0000C35E E320 1018 0004          00000018  18408          LG    2,24(0,1)   ; rkbuf
0000C364 E370 1020 0004          00000020  18409          LG    7,32(0,1)   ; request
0000C36A A7A8 0003               00000003  18410          LHI   10,3        ; 3
                                           18411 * ***           rd_kafka_op_t *rko = opaque;
0000C36E E3B0 1028 0004          00000028  18412          LG    11,40(0,1)  ; opaque
                                           18413 * ***           int16_t ErrorCode;
                                           18414 * ***           int actions = 0;
0000C374 A758 0000               00000000  18415          LHI   5,0         ; 0
                                           18416 * ***           int remains_ms;
                                           18417 * ***
                                           18418 * ***           if (err == RD_KAFKA_RESP_ERR__DESTROY) {
0000C378 A73E FF3B               0000FF3B  18419          CHI   3,-197
0000C37C 4770 C130               0000C440  18420          BNE   @L1331
                                           18421 * ***                   rd_kafka_op_destroy(rko);
0000C380 E3B0 D2B8 0024          000002B8  18422          STG   11,696(0,13)
0000C386 4110 D2B8               000002B8  18423          LA    1,696(0,13)
0000C38A E3F0 C098 0004          0000C3A8  18424          LG    15,@lit_2022_909 ; rd_kafka_op_destroy
0000C390                                   18425 @@gen_label1260 DS    0H
0000C390 05EF                              18426          BALR  14,15
0000C392                                   18427 @@gen_label1261 DS    0H
                                           18428 * ***                   return;
0000C392 E3C0 C0A0 001A          0000C3B0  18429          ALGF  12,@lit_region_diff_2022_1_2
                                           18430          DROP  12
                        0000CB80           18431          USING @REGION_2022_2,12
0000C398 47F0 C85A               0000D3DA  18432          B     @ret_lab_2022
                                           18433          DROP  12
                        0000C310           18434          USING @REGION_2022_1,12
0000C3A0                                   18435          DS    0D
0000C3A0 00000340                          18436 @FRAMESIZE_2022 DC F'832'
0000C3A4 00000000
0000C3A8 0000000000000000                  18437 @lit_2022_909 DC AD(rd_kafka_op_destroy)
0000C3B0 00000870                          18438 @lit_region_diff_2022_1_2  DC A(@REGION_2022_2-@REGION_2022_1)
0000C3B4 00000000
0000C3B8 0000000000001CC0                  18439 @lit_2022_910 DC AD(rd_kafka_q_ready)
0000C3C0 0000000000000000                  18440 @lit_2022_913 DC AD(rd_slice_read)
0000C3C8 0000000000001730                  18441 @lit_2022_914 DC AD(rd_slice_abs_offset)
0000C3D0 0000000000000000                  18442 @lit_2022_917 DC AD(rd_kafka_crash)
0000C3D8 0000000000014658                  18443 @lit_2022_916 DC AD(@DATA)
0000C3E0 0000000000014A98                  18444 @lit_2022_915 DC AD(@strings@)
0000C3E8 0000000000000000                  18445 @lit_2022_919 DC AD(snprintf)
0000C3F0 0000000000000000                  18446 @lit_2022_921 DC AD(mtx_lock)
0000C3F8 0000000000001BA8                  18447 @lit_2022_923 DC AD(rd_strlcpy)
0000C400 0000000000000000                  18448 @lit_2022_925 DC AD(mtx_unlock)
0000C408 0000000000001988                  18449 @lit_2022_926 DC AD(rd_kafka_$Api$Key2str)
                                                                                                                           Page  369 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C410 00000000000017D8                  18450 @lit_2022_927 DC AD(rd_slice_offset)
0000C418 0000000000000000                  18451 @lit_2022_932 DC AD(rd_kafka_log0)
0000C420 0000000000000000                  18452 @lit_2022_933 DC AD(rd_kafka_op_throttle_time)
0000C428 0000000000000000                  18453 @lit_2022_957 DC AD(__assert)
0000C430 00000000000014C8                  18454 @lit_2022_958 DC AD(rd_timeout_remains)
0000C438 00000000000016A0                  18455 @lit_2022_959 DC AD(rd_timeout_expired)
                                           18456 * ***           }
0000C440                                   18457 @L1331   DS    0H
                                           18458 * ***
                                           18459 * ***           if (!rd_kafka_q_ready(rko->rko_replyq.q))
0000C440 E3F0 B040 0004          00000040  18460          LG    15,64(0,11)
0000C446 E3F0 D2B8 0024          000002B8  18461          STG   15,696(0,13)
0000C44C 4110 D2B8               000002B8  18462          LA    1,696(0,13)
0000C450 E3F0 C0A8 0004          0000C3B8  18463          LG    15,@lit_2022_910 ; rd_kafka_q_ready
0000C456                                   18464 @@gen_label1262 DS    0H
0000C456 05EF                              18465          BALR  14,15
0000C458                                   18466 @@gen_label1263 DS    0H
0000C458 12FF                              18467          LTR   15,15
0000C45A 4770 C152               0000C462  18468          BNZ   @L1332
                                           18469 * ***                   err = RD_KAFKA_RESP_ERR__OUTDATED;
0000C45E A738 FF59               0000FF59  18470          LHI   3,-167      ; -167
0000C462                                   18471 @L1332   DS    0H
                                           18472 * ***
                                           18473 * ***           if (err)
0000C462 1233                              18474          LTR   3,3
0000C464 4780 C15C               0000C46C  18475          BZ    @L1340
                                           18476 * ***                   goto done;
0000C468 47F0 C716               0000CA26  18477          B     @_done@2022@6
                                           18478 * ***
                                           18479 * ***           do { int32_t _throttle_time_ms; do { int32_t _v; do { \
                                           18480 * size_t __len2 = (size_t)(sizeof(_v)); if (!rd_slice_read(&(rkbuf)->r\
                                           18481 * kbuf_reader, &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if\
                                           18482 *  (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(\
                                           18483 * rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { i\
                                           18484 * f (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\
                                           18485 * \\src\\rdkafka_txnmgr.c",1808, __FUNCTION__, (((void *)0)), "assert:\
                                           18486 *  " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__\
                                           18487 * tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmps\
                                           18488 * tr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)-\
                                           18489 * >rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logna\
                                           18490 * me, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_l\
                                           18491 * ock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rk\
                                           18492 * buf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "P\
                                           18493 * rotocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu"\
                                           18494 *  " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining byt\
                                           18495 * es (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf-\
                                           18496 * >rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&\
                                           18497 * rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTI\
                                           18498 * ON__, 1808, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offs\
                                           18499 * et(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rk\
                                           18500 * buf_uflow_mitigation : "incorrect broker.version.fallback?", __tmpst\
                                           18501 * r); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW\
                                                                                                                           Page  370 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           18502 * ; goto err_parse; } while (0); } } while (0); } while (0); *(&_throt\
                                           18503 * tle_time_ms) = (_v); } while (0); rd_kafka_op_throttle_time((rkbuf)-\
                                           18504 * >rkbuf_rkb, (rkbuf)->rkbuf_rkb->rkb_rk->rk_rep, _throttle_time_ms); \
                                           18505 * } while (0);
0000C46C                                   18506 @L1340   DS    0H
0000C46C A739 0004               00000004  18507          LGHI  3,4         ; 4
0000C470 41F0 2078               00000078  18508          LA    15,120(0,2)
0000C474 E3F0 D2B8 0024          000002B8  18509          STG   15,696(0,13)
0000C47A 41F0 D0AC               000000AC  18510          LA    15,172(0,13)
0000C47E E3F0 D2C0 0024          000002C0  18511          STG   15,704(0,13)
0000C484 E330 D2C8 0024          000002C8  18512          STG   3,712(0,13)
0000C48A 4110 D2B8               000002B8  18513          LA    1,696(0,13)
0000C48E E3F0 C0B0 0004          0000C3C0  18514          LG    15,@lit_2022_913 ; rd_slice_read
0000C494                                   18515 @@gen_label1266 DS    0H
0000C494 05EF                              18516          BALR  14,15
0000C496                                   18517 @@gen_label1267 DS    0H
0000C496 B902 00FF                         18518          LTGR  15,15
0000C49A 4770 C40E               0000C71E  18519          BNZ   @L1343
0000C49E                                   18520 @L1344   DS    0H
0000C49E E380 2098 0004          00000098  18521          LG    8,152(0,2)  ; offset of end in rd_slice_s
0000C4A4 41F0 2078               00000078  18522          LA    15,120(0,2)
0000C4A8 E3F0 D2B8 0024          000002B8  18523          STG   15,696(0,13)
0000C4AE 4110 D2B8               000002B8  18524          LA    1,696(0,13)
0000C4B2 E3F0 C0B8 0004          0000C3C8  18525          LG    15,@lit_2022_914 ; rd_slice_abs_offset
0000C4B8                                   18526 @@gen_label1269 DS    0H
0000C4B8 05EF                              18527          BALR  14,15
0000C4BA                                   18528 @@gen_label1270 DS    0H
0000C4BA B90B 008F                         18529          SLGR  8,15
0000C4BE B921 0038                         18530          CLGR  3,8
0000C4C2 47D0 C40E               0000C71E  18531          BNH   @L1347
0000C4C6                                   18532 @L1348   DS    0H
0000C4C6 12AA                              18533          LTR   10,10
0000C4C8 47D0 C404               0000C714  18534          BNH   @L1351
0000C4CC                                   18535 @L1352   DS    0H
0000C4CC E3F0 2100 0002          00000100  18536          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C4D2 4770 C208               0000C518  18537          BNZ   @L1355
0000C4D6 E3F0 C0D0 0004          0000C3E0  18538          LG    15,@lit_2022_915
0000C4DC 4110 F1B2               000001B2  18539          LA    1,434(0,15)
0000C4E0 E310 D2B8 0024          000002B8  18540          STG   1,696(0,13)
0000C4E6 E548 D2C0 0710          000002C0  18541          MVGHI 704(13),1808
0000C4EC E310 C0C8 0004          0000C3D8  18542          LG    1,@lit_2022_916
0000C4F2 4110 12EA               000002EA  18543          LA    1,746(0,1)
0000C4F6 E310 D2C8 0024          000002C8  18544          STG   1,712(0,13)
0000C4FC D707 D2D0 D2D0 000002D0 000002D0  18545          XC    720(8,13),720(13)
0000C502 41F0 F582               00000582  18546          LA    15,1410(0,15)
0000C506 E3F0 D2D8 0024          000002D8  18547          STG   15,728(0,13)
0000C50C 4110 D2B8               000002B8  18548          LA    1,696(0,13)
0000C510 E3F0 C0C0 0004          0000C3D0  18549          LG    15,@lit_2022_917 ; rd_kafka_crash
0000C516                                   18550 @@gen_label1274 DS    0H
0000C516 05EF                              18551          BALR  14,15
0000C518                                   18552 @@gen_label1275 DS    0H
0000C518                                   18553 @L1355   DS    0H
                                                                                                                           Page  371 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C518 41F0 D0B4               000000B4  18554          LA    15,180(0,13)
0000C51C E3F0 D2B8 0024          000002B8  18555          STG   15,696(0,13)
0000C522 E548 D2C0 0100          000002C0  18556          MVGHI 704(13),256
0000C528 E3F0 C0D0 0004          0000C3E0  18557          LG    15,@lit_2022_915
0000C52E 41F0 F59C               0000059C  18558          LA    15,1436(0,15)
0000C532 E3F0 D2C8 0024          000002C8  18559          STG   15,712(0,13)
0000C538 4110 D2B8               000002B8  18560          LA    1,696(0,13)
0000C53C E3F0 C0D8 0004          0000C3E8  18561          LG    15,@lit_2022_919 ; snprintf
0000C542                                   18562 @@gen_label1276 DS    0H
0000C542 05EF                              18563          BALR  14,15
0000C544                                   18564 @@gen_label1277 DS    0H
0000C544 41F0 D0B4               000000B4  18565          LA    15,180(0,13)
0000C548 B904 001F                         18566          LGR   1,15
0000C54C A709 0000               00000000  18567          LGHI  0,0
0000C550                                   18568 @@gen_label1278 DS 0H
0000C550 B25E 000F                         18569          SRST  0,15
0000C554 4710 C240               0000C550  18570          BC  1,@@gen_label1278
0000C558 B90B 0001                         18571          SLGR  0,1
0000C55C A70F 0002               00000002  18572          CGHI  0,2
0000C560 4770 C258               0000C568  18573          BNE   @L1357
0000C564 9200 D0B4      000000B4 00000000  18574          MVI   180(13),0
0000C568                                   18575 @L1356   DS    0H
0000C568                                   18576 @L1357   DS    0H
0000C568 E3F0 2100 0004          00000100  18577          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C56E A739 1638               00001638  18578          LGHI  3,5688      ; 5688
0000C572 41F3 F000               00000000  18579          LA    15,0(3,15)
0000C576 E3F0 D2B8 0024          000002B8  18580          STG   15,696(0,13)
0000C57C 4110 D2B8               000002B8  18581          LA    1,696(0,13)
0000C580 E3F0 C0E0 0004          0000C3F0  18582          LG    15,@lit_2022_921 ; mtx_lock
0000C586                                   18583 @@gen_label1280 DS    0H
0000C586 05EF                              18584          BALR  14,15
0000C588                                   18585 @@gen_label1281 DS    0H
0000C588 41F0 D1B4               000001B4  18586          LA    15,436(0,13)
0000C58C E3F0 D2B8 0024          000002B8  18587          STG   15,696(0,13)
0000C592 E3F0 2100 0004          00000100  18588          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C598 A719 1630               00001630  18589          LGHI  1,5680      ; 5680
0000C59C E3F1 F000 0004          00000000  18590          LG    15,0(1,15)
0000C5A2 E3F0 D2C0 0024          000002C0  18591          STG   15,704(0,13)
0000C5A8 E548 D2C8 0100          000002C8  18592          MVGHI 712(13),256
0000C5AE 4110 D2B8               000002B8  18593          LA    1,696(0,13)
0000C5B2 E3F0 C0E8 0004          0000C3F8  18594          LG    15,@lit_2022_923 ; rd_strlcpy
0000C5B8                                   18595 @@gen_label1282 DS    0H
0000C5B8 05EF                              18596          BALR  14,15
0000C5BA                                   18597 @@gen_label1283 DS    0H
0000C5BA E3F0 2100 0004          00000100  18598          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C5C0 41F3 F000               00000000  18599          LA    15,0(3,15)
0000C5C4 E3F0 D2B8 0024          000002B8  18600          STG   15,696(0,13)
0000C5CA 4110 D2B8               000002B8  18601          LA    1,696(0,13)
0000C5CE E3F0 C0F0 0004          0000C400  18602          LG    15,@lit_2022_925 ; mtx_unlock
0000C5D4                                   18603 @@gen_label1284 DS    0H
0000C5D4 05EF                              18604          BALR  14,15
0000C5D6                                   18605 @@gen_label1285 DS    0H
                                                                                                                           Page  372 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C5D6 E3F0 20B8 0015          000000B8  18606          LGH   15,184(0,2)
0000C5DC E3F0 D2B8 0024          000002B8  18607          STG   15,696(0,13)
0000C5E2 4110 D2B8               000002B8  18608          LA    1,696(0,13)
0000C5E6 E3F0 C0F8 0004          0000C408  18609          LG    15,@lit_2022_926 ; rd_kafka_ApiKey2str
0000C5EC                                   18610 @@gen_label1286 DS    0H
0000C5EC 05EF                              18611          BALR  14,15
0000C5EE                                   18612 @@gen_label1287 DS    0H
0000C5EE B904 003F                         18613          LGR   3,15
0000C5F2 41F0 2078               00000078  18614          LA    15,120(0,2)
0000C5F6 E3F0 D2B8 0024          000002B8  18615          STG   15,696(0,13)
0000C5FC 4110 D2B8               000002B8  18616          LA    1,696(0,13)
0000C600 E3F0 C100 0004          0000C410  18617          LG    15,@lit_2022_927 ; rd_slice_offset
0000C606                                   18618 @@gen_label1288 DS    0H
0000C606 05EF                              18619          BALR  14,15
0000C608                                   18620 @@gen_label1289 DS    0H
0000C608 B904 008F                         18621          LGR   8,15
0000C60C E390 2098 0004          00000098  18622          LG    9,152(0,2)  ; offset of end in rd_slice_s
0000C612 41F0 2078               00000078  18623          LA    15,120(0,2)
0000C616 E3F0 D2B8 0024          000002B8  18624          STG   15,696(0,13)
0000C61C 4110 D2B8               000002B8  18625          LA    1,696(0,13)
0000C620 E3F0 C0B8 0004          0000C3C8  18626          LG    15,@lit_2022_914 ; rd_slice_abs_offset
0000C626                                   18627 @@gen_label1290 DS    0H
0000C626 05EF                              18628          BALR  14,15
0000C628                                   18629 @@gen_label1291 DS    0H
0000C628 B90B 009F                         18630          SLGR  9,15
0000C62C E3F0 21E8 0002          000001E8  18631          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C632 4780 C330               0000C640  18632          BZ    @L1360
0000C636 E3F0 21E8 0004          000001E8  18633          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C63C 47F0 C33A               0000C64A  18634          B     @L1361
0000C640                                   18635 @L1360   DS    0H
0000C640 E3F0 C0D0 0004          0000C3E0  18636          LG    15,@lit_2022_915
0000C646 41F0 F5A0               000005A0  18637          LA    15,1440(0,15)
0000C64A                                   18638 @L1361   DS    0H
0000C64A E310 2100 0004          00000100  18639          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C650 E310 1FD0 0004          00000FD0  18640          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000C656 4110 1210               00000210  18641          LA    1,528(0,1)
0000C65A E310 D2B8 0024          000002B8  18642          STG   1,696(0,13)
0000C660 E310 2100 0004          00000100  18643          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C666 E310 1FD0 0004          00000FD0  18644          LG    1,4048(0,1)
0000C66C E310 D2C0 0024          000002C0  18645          STG   1,704(0,13)
0000C672 4110 D1B4               000001B4  18646          LA    1,436(0,13)
0000C676 E310 D2C8 0024          000002C8  18647          STG   1,712(0,13)
0000C67C B914 001A                         18648          LGFR  1,10
0000C680 E310 D2D0 0024          000002D0  18649          STG   1,720(0,13)
0000C686 D707 D2D8 D2D8 000002D8 000002D8  18650          XC    728(8,13),728(13)
0000C68C E310 C0D0 0004          0000C3E0  18651          LG    1,@lit_2022_915
0000C692 41A0 15C4               000005C4  18652          LA    10,1476(0,1)
0000C696 E3A0 D2E0 0024          000002E0  18653          STG   10,736(0,13)
0000C69C 4110 15D0               000005D0  18654          LA    1,1488(0,1)
0000C6A0 E310 D2E8 0024          000002E8  18655          STG   1,744(0,13)
                                                                                                                           Page  373 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C6A6 E330 D2F0 0024          000002F0  18656          STG   3,752(0,13)
0000C6AC 4810 20BA               000000BA  18657          LH    1,186(0,2)
0000C6B0 B914 0011                         18658          LGFR  1,1
0000C6B4 E310 D2F8 0024          000002F8  18659          STG   1,760(0,13)
0000C6BA E380 D300 0024          00000300  18660          STG   8,768(0,13)
0000C6C0 E310 2098 0004          00000098  18661          LG    1,152(0,2)  ; offset of end in rd_slice_s
0000C6C6 E310 2090 000B          00000090  18662          SLG   1,144(0,2)
0000C6CC E310 D308 0024          00000308  18663          STG   1,776(0,13)
0000C6D2 E310 C0C8 0004          0000C3D8  18664          LG    1,@lit_2022_916
0000C6D8 4110 12EA               000002EA  18665          LA    1,746(0,1)
0000C6DC E310 D310 0024          00000310  18666          STG   1,784(0,13)
0000C6E2 E548 D318 0710          00000318  18667          MVGHI 792(13),1808
0000C6E8 A719 0004               00000004  18668          LGHI  1,4         ; 4
0000C6EC E310 D320 0024          00000320  18669          STG   1,800(0,13)
0000C6F2 E390 D328 0024          00000328  18670          STG   9,808(0,13)
0000C6F8 E3F0 D330 0024          00000330  18671          STG   15,816(0,13)
0000C6FE 41F0 D0B4               000000B4  18672          LA    15,180(0,13)
0000C702 E3F0 D338 0024          00000338  18673          STG   15,824(0,13)
0000C708 4110 D2B8               000002B8  18674          LA    1,696(0,13)
0000C70C E3F0 C108 0004          0000C418  18675          LG    15,@lit_2022_932 ; rd_kafka_log0
0000C712                                   18676 @@gen_label1293 DS    0H
0000C712 05EF                              18677          BALR  14,15
0000C714                                   18678 @@gen_label1294 DS    0H
0000C714                                   18679 @L1351   DS    0H
0000C714 E54C 2188 FF65          00000188  18680          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000C71A 47F0 C712               0000CA22  18681          B     @_err_parse@2022@7
0000C71E                                   18682 @L1347   DS    0H
0000C71E                                   18683 @L1343   DS    0H
0000C71E 58F0 D0AC               000000AC  18684          L     15,172(0,13) ; _v
0000C722 50F0 D0A8               000000A8  18685          ST    15,168(0,13)
0000C726 E3F0 2100 0004          00000100  18686          LG    15,256(0,2)
0000C72C E3F0 D2B8 0024          000002B8  18687          STG   15,696(0,13)
0000C732 E3F0 2100 0004          00000100  18688          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C738 E3F0 FFD0 0004          00000FD0  18689          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000C73E E3F0 F000 0004          00000000  18690          LG    15,0(0,15)
0000C744 E3F0 D2C0 0024          000002C0  18691          STG   15,704(0,13)
0000C74A E3F0 D0A8 0014          000000A8  18692          LGF   15,168(0,13) ; _throttle_time_ms
0000C750 E3F0 D2C8 0024          000002C8  18693          STG   15,712(0,13)
0000C756 4110 D2B8               000002B8  18694          LA    1,696(0,13)
0000C75A E3F0 C110 0004          0000C420  18695          LG    15,@lit_2022_933 ; rd_kafka_op_throttle_time
0000C760                                   18696 @@gen_label1295 DS    0H
0000C760 05EF                              18697          BALR  14,15
0000C762                                   18698 @@gen_label1296 DS    0H
                                           18699 * ***           do { int16_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           18700 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           18701 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           18702 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           18703 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           18704 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",1809, _\
                                           18705 * _FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while \
                                           18706 * (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": ");\
                                           18707 *  if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname\
                                                                                                                           Page  374 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           18708 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                           18709 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                           18710 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                           18711 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                           18712 * decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " \
                                           18713 * "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" \
                                           18714 * " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(\
                                           18715 * rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_sli\
                                           18716 * ce_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rk\
                                           18717 * buf->rkbuf_reader)->start), __FUNCTION__, 1809, __len0, ((&rkbuf->rk\
                                           18718 * buf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf\
                                           18719 * ->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrec\
                                           18720 * t broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbu\
                                           18721 * f_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); }\
                                           18722 *  } while (0); } while (0); *(&ErrorCode) = (int16_t)(_v); } while (0\
                                           18723 * );
0000C762                                   18724 @L1362   DS    0H
0000C762                                   18725 @L1365   DS    0H
0000C762 A739 0002               00000002  18726          LGHI  3,2         ; 2
0000C766 41F0 2078               00000078  18727          LA    15,120(0,2)
0000C76A E3F0 D2B8 0024          000002B8  18728          STG   15,696(0,13)
0000C770 41F0 D0B0               000000B0  18729          LA    15,176(0,13)
0000C774 E3F0 D2C0 0024          000002C0  18730          STG   15,704(0,13)
0000C77A E330 D2C8 0024          000002C8  18731          STG   3,712(0,13)
0000C780 4110 D2B8               000002B8  18732          LA    1,696(0,13)
0000C784 E3F0 C0B0 0004          0000C3C0  18733          LG    15,@lit_2022_913 ; rd_slice_read
0000C78A                                   18734 @@gen_label1297 DS    0H
0000C78A 05EF                              18735          BALR  14,15
0000C78C                                   18736 @@gen_label1298 DS    0H
0000C78C B902 00FF                         18737          LTGR  15,15
0000C790 4770 C704               0000CA14  18738          BNZ   @L1368
0000C794                                   18739 @L1369   DS    0H
0000C794 E380 2098 0004          00000098  18740          LG    8,152(0,2)  ; offset of end in rd_slice_s
0000C79A 41F0 2078               00000078  18741          LA    15,120(0,2)
0000C79E E3F0 D2B8 0024          000002B8  18742          STG   15,696(0,13)
0000C7A4 4110 D2B8               000002B8  18743          LA    1,696(0,13)
0000C7A8 E3F0 C0B8 0004          0000C3C8  18744          LG    15,@lit_2022_914 ; rd_slice_abs_offset
0000C7AE                                   18745 @@gen_label1300 DS    0H
0000C7AE 05EF                              18746          BALR  14,15
0000C7B0                                   18747 @@gen_label1301 DS    0H
0000C7B0 B90B 008F                         18748          SLGR  8,15
0000C7B4 B921 0038                         18749          CLGR  3,8
0000C7B8 47D0 C704               0000CA14  18750          BNH   @L1372
0000C7BC                                   18751 @L1373   DS    0H
0000C7BC 12AA                              18752          LTR   10,10
0000C7BE 47D0 C6FA               0000CA0A  18753          BNH   @L1376
0000C7C2                                   18754 @L1377   DS    0H
0000C7C2 E3F0 2100 0002          00000100  18755          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C7C8 4770 C4FE               0000C80E  18756          BNZ   @L1380
0000C7CC E3F0 C0D0 0004          0000C3E0  18757          LG    15,@lit_2022_915
0000C7D2 4110 F1B2               000001B2  18758          LA    1,434(0,15)
0000C7D6 E310 D2B8 0024          000002B8  18759          STG   1,696(0,13)
                                                                                                                           Page  375 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C7DC E548 D2C0 0711          000002C0  18760          MVGHI 704(13),1809
0000C7E2 E310 C0C8 0004          0000C3D8  18761          LG    1,@lit_2022_916
0000C7E8 4110 12EA               000002EA  18762          LA    1,746(0,1)
0000C7EC E310 D2C8 0024          000002C8  18763          STG   1,712(0,13)
0000C7F2 D707 D2D0 D2D0 000002D0 000002D0  18764          XC    720(8,13),720(13)
0000C7F8 41F0 F582               00000582  18765          LA    15,1410(0,15)
0000C7FC E3F0 D2D8 0024          000002D8  18766          STG   15,728(0,13)
0000C802 4110 D2B8               000002B8  18767          LA    1,696(0,13)
0000C806 E3F0 C0C0 0004          0000C3D0  18768          LG    15,@lit_2022_917 ; rd_kafka_crash
0000C80C                                   18769 @@gen_label1305 DS    0H
0000C80C 05EF                              18770          BALR  14,15
0000C80E                                   18771 @@gen_label1306 DS    0H
0000C80E                                   18772 @L1380   DS    0H
0000C80E 41F0 D0B4               000000B4  18773          LA    15,180(0,13)
0000C812 E3F0 D2B8 0024          000002B8  18774          STG   15,696(0,13)
0000C818 E548 D2C0 0100          000002C0  18775          MVGHI 704(13),256
0000C81E E3F0 C0D0 0004          0000C3E0  18776          LG    15,@lit_2022_915
0000C824 41F0 F59C               0000059C  18777          LA    15,1436(0,15)
0000C828 E3F0 D2C8 0024          000002C8  18778          STG   15,712(0,13)
0000C82E 4110 D2B8               000002B8  18779          LA    1,696(0,13)
0000C832 E3F0 C0D8 0004          0000C3E8  18780          LG    15,@lit_2022_919 ; snprintf
0000C838                                   18781 @@gen_label1307 DS    0H
0000C838 05EF                              18782          BALR  14,15
0000C83A                                   18783 @@gen_label1308 DS    0H
0000C83A 41F0 D0B4               000000B4  18784          LA    15,180(0,13)
0000C83E B904 001F                         18785          LGR   1,15
0000C842 A709 0000               00000000  18786          LGHI  0,0
0000C846                                   18787 @@gen_label1309 DS 0H
0000C846 B25E 000F                         18788          SRST  0,15
0000C84A 4710 C536               0000C846  18789          BC  1,@@gen_label1309
0000C84E B90B 0001                         18790          SLGR  0,1
0000C852 A70F 0002               00000002  18791          CGHI  0,2
0000C856 4770 C54E               0000C85E  18792          BNE   @L1382
0000C85A 9200 D0B4      000000B4 00000000  18793          MVI   180(13),0
0000C85E                                   18794 @L1381   DS    0H
0000C85E                                   18795 @L1382   DS    0H
0000C85E E3F0 2100 0004          00000100  18796          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C864 A739 1638               00001638  18797          LGHI  3,5688      ; 5688
0000C868 41F3 F000               00000000  18798          LA    15,0(3,15)
0000C86C E3F0 D2B8 0024          000002B8  18799          STG   15,696(0,13)
0000C872 4110 D2B8               000002B8  18800          LA    1,696(0,13)
0000C876 E3F0 C0E0 0004          0000C3F0  18801          LG    15,@lit_2022_921 ; mtx_lock
0000C87C                                   18802 @@gen_label1311 DS    0H
0000C87C 05EF                              18803          BALR  14,15
0000C87E                                   18804 @@gen_label1312 DS    0H
0000C87E 41F0 D1B4               000001B4  18805          LA    15,436(0,13)
0000C882 E3F0 D2B8 0024          000002B8  18806          STG   15,696(0,13)
0000C888 E3F0 2100 0004          00000100  18807          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C88E A719 1630               00001630  18808          LGHI  1,5680      ; 5680
0000C892 E3F1 F000 0004          00000000  18809          LG    15,0(1,15)
0000C898 E3F0 D2C0 0024          000002C0  18810          STG   15,704(0,13)
0000C89E E548 D2C8 0100          000002C8  18811          MVGHI 712(13),256
                                                                                                                           Page  376 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C8A4 4110 D2B8               000002B8  18812          LA    1,696(0,13)
0000C8A8 E3F0 C0E8 0004          0000C3F8  18813          LG    15,@lit_2022_923 ; rd_strlcpy
0000C8AE                                   18814 @@gen_label1313 DS    0H
0000C8AE 05EF                              18815          BALR  14,15
0000C8B0                                   18816 @@gen_label1314 DS    0H
0000C8B0 E3F0 2100 0004          00000100  18817          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C8B6 41F3 F000               00000000  18818          LA    15,0(3,15)
0000C8BA E3F0 D2B8 0024          000002B8  18819          STG   15,696(0,13)
0000C8C0 4110 D2B8               000002B8  18820          LA    1,696(0,13)
0000C8C4 E3F0 C0F0 0004          0000C400  18821          LG    15,@lit_2022_925 ; mtx_unlock
0000C8CA                                   18822 @@gen_label1315 DS    0H
0000C8CA 05EF                              18823          BALR  14,15
0000C8CC                                   18824 @@gen_label1316 DS    0H
0000C8CC E3F0 20B8 0015          000000B8  18825          LGH   15,184(0,2)
0000C8D2 E3F0 D2B8 0024          000002B8  18826          STG   15,696(0,13)
0000C8D8 4110 D2B8               000002B8  18827          LA    1,696(0,13)
0000C8DC E3F0 C0F8 0004          0000C408  18828          LG    15,@lit_2022_926 ; rd_kafka_ApiKey2str
0000C8E2                                   18829 @@gen_label1317 DS    0H
0000C8E2 05EF                              18830          BALR  14,15
0000C8E4                                   18831 @@gen_label1318 DS    0H
0000C8E4 B904 003F                         18832          LGR   3,15
0000C8E8 41F0 2078               00000078  18833          LA    15,120(0,2)
0000C8EC E3F0 D2B8 0024          000002B8  18834          STG   15,696(0,13)
0000C8F2 4110 D2B8               000002B8  18835          LA    1,696(0,13)
0000C8F6 E3F0 C100 0004          0000C410  18836          LG    15,@lit_2022_927 ; rd_slice_offset
0000C8FC                                   18837 @@gen_label1319 DS    0H
0000C8FC 05EF                              18838          BALR  14,15
0000C8FE                                   18839 @@gen_label1320 DS    0H
0000C8FE B904 008F                         18840          LGR   8,15
0000C902 E390 2098 0004          00000098  18841          LG    9,152(0,2)  ; offset of end in rd_slice_s
0000C908 41F0 2078               00000078  18842          LA    15,120(0,2)
0000C90C E3F0 D2B8 0024          000002B8  18843          STG   15,696(0,13)
0000C912 4110 D2B8               000002B8  18844          LA    1,696(0,13)
0000C916 E3F0 C0B8 0004          0000C3C8  18845          LG    15,@lit_2022_914 ; rd_slice_abs_offset
0000C91C                                   18846 @@gen_label1321 DS    0H
0000C91C 05EF                              18847          BALR  14,15
0000C91E                                   18848 @@gen_label1322 DS    0H
0000C91E B90B 009F                         18849          SLGR  9,15
0000C922 E3F0 21E8 0002          000001E8  18850          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C928 4780 C626               0000C936  18851          BZ    @L1385
0000C92C E3F0 21E8 0004          000001E8  18852          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C932 47F0 C630               0000C940  18853          B     @L1386
0000C936                                   18854 @L1385   DS    0H
0000C936 E3F0 C0D0 0004          0000C3E0  18855          LG    15,@lit_2022_915
0000C93C 41F0 F5A0               000005A0  18856          LA    15,1440(0,15)
0000C940                                   18857 @L1386   DS    0H
0000C940 E310 2100 0004          00000100  18858          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C946 E310 1FD0 0004          00000FD0  18859          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000C94C 4110 1210               00000210  18860          LA    1,528(0,1)
0000C950 E310 D2B8 0024          000002B8  18861          STG   1,696(0,13)
                                                                                                                           Page  377 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000C956 E310 2100 0004          00000100  18862          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C95C E310 1FD0 0004          00000FD0  18863          LG    1,4048(0,1)
0000C962 E310 D2C0 0024          000002C0  18864          STG   1,704(0,13)
0000C968 4110 D1B4               000001B4  18865          LA    1,436(0,13)
0000C96C E310 D2C8 0024          000002C8  18866          STG   1,712(0,13)
0000C972 B914 001A                         18867          LGFR  1,10
0000C976 E310 D2D0 0024          000002D0  18868          STG   1,720(0,13)
0000C97C D707 D2D8 D2D8 000002D8 000002D8  18869          XC    728(8,13),728(13)
0000C982 E310 C0D0 0004          0000C3E0  18870          LG    1,@lit_2022_915
0000C988 41A0 15C4               000005C4  18871          LA    10,1476(0,1)
0000C98C E3A0 D2E0 0024          000002E0  18872          STG   10,736(0,13)
0000C992 4110 15D0               000005D0  18873          LA    1,1488(0,1)
0000C996 E310 D2E8 0024          000002E8  18874          STG   1,744(0,13)
0000C99C E330 D2F0 0024          000002F0  18875          STG   3,752(0,13)
0000C9A2 4810 20BA               000000BA  18876          LH    1,186(0,2)
0000C9A6 B914 0011                         18877          LGFR  1,1
0000C9AA E310 D2F8 0024          000002F8  18878          STG   1,760(0,13)
0000C9B0 E380 D300 0024          00000300  18879          STG   8,768(0,13)
0000C9B6 E310 2098 0004          00000098  18880          LG    1,152(0,2)  ; offset of end in rd_slice_s
0000C9BC E310 2090 000B          00000090  18881          SLG   1,144(0,2)
0000C9C2 E310 D308 0024          00000308  18882          STG   1,776(0,13)
0000C9C8 E310 C0C8 0004          0000C3D8  18883          LG    1,@lit_2022_916
0000C9CE 4110 12EA               000002EA  18884          LA    1,746(0,1)
0000C9D2 E310 D310 0024          00000310  18885          STG   1,784(0,13)
0000C9D8 E548 D318 0711          00000318  18886          MVGHI 792(13),1809
0000C9DE A719 0002               00000002  18887          LGHI  1,2         ; 2
0000C9E2 E310 D320 0024          00000320  18888          STG   1,800(0,13)
0000C9E8 E390 D328 0024          00000328  18889          STG   9,808(0,13)
0000C9EE E3F0 D330 0024          00000330  18890          STG   15,816(0,13)
0000C9F4 41F0 D0B4               000000B4  18891          LA    15,180(0,13)
0000C9F8 E3F0 D338 0024          00000338  18892          STG   15,824(0,13)
0000C9FE 4110 D2B8               000002B8  18893          LA    1,696(0,13)
0000CA02 E3F0 C108 0004          0000C418  18894          LG    15,@lit_2022_932 ; rd_kafka_log0
0000CA08                                   18895 @@gen_label1324 DS    0H
0000CA08 05EF                              18896          BALR  14,15
0000CA0A                                   18897 @@gen_label1325 DS    0H
0000CA0A                                   18898 @L1376   DS    0H
0000CA0A E54C 2188 FF65          00000188  18899          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000CA10 47F0 C712               0000CA22  18900          B     @_err_parse@2022@7
0000CA14                                   18901 @L1372   DS    0H
0000CA14                                   18902 @L1368   DS    0H
0000CA14 D201 D0B2 D0B0 000000B2 000000B0  18903          MVC   178(2,13),176(13)
                                           18904 * ***
                                           18905 * ***           err = ErrorCode;
0000CA1A 4830 D0B2               000000B2  18906          LH    3,178(0,13) ; ErrorCode
                                           18907 * ***           goto done;
0000CA1E 47F0 C716               0000CA26  18908          B     @_done@2022@6
                                           18909 * ***
                                           18910 * ***    err_parse:
                                           18911 * ***           err = rkbuf->rkbuf_err;
0000CA22                                   18912 @_err_parse@2022@7 DS 0H
0000CA22 5830 2188               00000188  18913          L     3,392(0,2)  ; offset of rkbuf_err in rd_kafka_buf_s
                                                                                                                           Page  378 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           18914 * ***
                                           18915 * ***    done:
                                           18916 * ***           if (err) {
0000CA26                                   18917 @_done@2022@6 DS 0H
0000CA26 1233                              18918          LTR   3,3
0000CA28 4780 C76E               0000CA7E  18919          BZ    @L1387
                                           18920 * ***                   ((rk->rk_eos.txn_req_cnt > 0) ? (void)0 : __as\
                                           18921 * sert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c", 18\
                                           18922 * 19, "rk->rk_eos.txn_req_cnt > 0"));
0000CA2C E55C 6E10 0000          00000E10  18923          CHSI  3600(6),0
0000CA32 4720 C762               0000CA72  18924          BH    @L1389
0000CA36                                   18925 @L1388   DS    0H
0000CA36 E3F0 C0C8 0004          0000C3D8  18926          LG    15,@lit_2022_916
0000CA3C 41F0 F2EA               000002EA  18927          LA    15,746(0,15)
0000CA40 E3F0 D2B8 0024          000002B8  18928          STG   15,696(0,13)
0000CA46 E3F0 C0D0 0004          0000C3E0  18929          LG    15,@lit_2022_915
0000CA4C 4110 F1B2               000001B2  18930          LA    1,434(0,15)
0000CA50 E310 D2C0 0024          000002C0  18931          STG   1,704(0,13)
0000CA56 E548 D2C8 071B          000002C8  18932          MVGHI 712(13),1819
0000CA5C 41F0 F712               00000712  18933          LA    15,1810(0,15)
0000CA60 E3F0 D2D0 0024          000002D0  18934          STG   15,720(0,13)
0000CA66 4110 D2B8               000002B8  18935          LA    1,696(0,13)
0000CA6A E3F0 C118 0004          0000C428  18936          LG    15,@lit_2022_957 ; __assert
0000CA70                                   18937 @@gen_label1328 DS    0H
0000CA70 05EF                              18938          BALR  14,15
0000CA72                                   18939 @@gen_label1329 DS    0H
0000CA72                                   18940 @L1389   DS    0H
                                           18941 * ***                   rk->rk_eos.txn_req_cnt--;
0000CA72 58F0 6E10               00000E10  18942          L     15,3600(0,6)
0000CA76 A7FA FFFF               0000FFFF  18943          AHI   15,-1
0000CA7A 50F0 6E10               00000E10  18944          ST    15,3600(0,6)
                                           18945 * ***           }
0000CA7E                                   18946 @L1387   DS    0H
                                           18947 * ***
                                           18948 * ***           remains_ms = rd_timeout_remains(rko->rko_u.txn.abs_tim\
                                           18949 * eout);
0000CA7E E3F0 B088 0004          00000088  18950          LG    15,136(0,11)
0000CA84 E3F0 D2B8 0024          000002B8  18951          STG   15,696(0,13)
0000CA8A 4110 D2B8               000002B8  18952          LA    1,696(0,13)
0000CA8E E3F0 C120 0004          0000C430  18953          LG    15,@lit_2022_958 ; rd_timeout_remains
0000CA94                                   18954 @@gen_label1330 DS    0H
0000CA94 05EF                              18955          BALR  14,15
0000CA96                                   18956 @@gen_label1331 DS    0H
0000CA96 182F                              18957          LR    2,15
                                           18958 * ***
                                           18959 * ***           if (rd_timeout_expired(remains_ms) && !err)
0000CA98 B914 00F2                         18960          LGFR  15,2
0000CA9C E3F0 D2B8 0024          000002B8  18961          STG   15,696(0,13)
0000CAA2 4110 D2B8               000002B8  18962          LA    1,696(0,13)
0000CAA6 E3F0 C128 0004          0000C438  18963          LG    15,@lit_2022_959 ; rd_timeout_expired
0000CAAC                                   18964 @@gen_label1332 DS    0H
0000CAAC 05EF                              18965          BALR  14,15
                                                                                                                           Page  379 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CAAE                                   18966 @@gen_label1333 DS    0H
0000CAAE 12FF                              18967          LTR   15,15
0000CAB0 4780 C812               0000CB22  18968          BZ    @L1391
0000CAB4 1233                              18969          LTR   3,3
0000CAB6 4770 C812               0000CB22  18970          BNZ   @L1391
                                           18971 * ***                   err = RD_KAFKA_RESP_ERR__TIMED_OUT;
0000CABA A738 FF47               0000FF47  18972          LHI   3,-185      ; -185
0000CABE                                   18973 @L1390   DS    0H
                                           18974 * ***
                                           18975 * ***           switch (err)
0000CABE 47F0 C812               0000CB22  18976          B     @L1391
                                           18977 * ***           {
                                           18978 * ***           case RD_KAFKA_RESP_ERR_NO_ERROR:
                                           18979 * ***                   break;
                                           18980 * ***
                                           18981 * ***           case RD_KAFKA_RESP_ERR__DESTROY:
                                           18982 * ***
                                           18983 * ***           case RD_KAFKA_RESP_ERR__OUTDATED:
0000CAC2                                   18984 @L1395   DS    0H
                                           18985 * ***
                                           18986 * ***
                                           18987 * ***                   actions = 0x20;
0000CAC2 A758 0020               00000020  18988          LHI   5,32        ; 32
                                           18989 * ***                   break;
0000CAC6 E3C0 C0A0 001A          0000C3B0  18990          ALGF  12,@lit_region_diff_2022_1_2
                                           18991          DROP  12
                        0000CB80           18992          USING @REGION_2022_2,12
0000CACC 47F0 C2B0               0000CE30  18993          B     @L1392
                                           18994          DROP  12
                        0000C310           18995          USING @REGION_2022_1,12
                                           18996 * ***
                                           18997 * ***           case RD_KAFKA_RESP_ERR__TRANSPORT:
                                           18998 * ***           case RD_KAFKA_RESP_ERR__TIMED_OUT:
0000CAD0                                   18999 @L1397   DS    0H
                                           19000 * ***
                                           19001 * ***
                                           19002 * ***
                                           19003 * ***
                                           19004 * ***
                                           19005 * ***                   rk->rk_eos.txn_req_cnt++;
0000CAD0 58F0 6E10               00000E10  19006          L     15,3600(0,6)
0000CAD4 A7FA 0001               00000001  19007          AHI   15,1
0000CAD8 50F0 6E10               00000E10  19008          ST    15,3600(0,6)
                                           19009 * ***
                                           19010 * ***           case RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE:
0000CADC                                   19011 @L1398   DS    0H
                                           19012 * ***           case RD_KAFKA_RESP_ERR_COORDINATOR_NOT_AVAILABLE:
0000CADC                                   19013 @L1399   DS    0H
                                           19014 * ***           case RD_KAFKA_RESP_ERR_NOT_COORDINATOR:
0000CADC                                   19015 @L1400   DS    0H
                                           19016 * ***           case RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT:
0000CADC                                   19017 @L1401   DS    0H
                                                                                                                           Page  380 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19018 * ***                   actions |= 0x8|
                                           19019 * ***                           0x4;
0000CADC A55B 000C               0000000C  19020          OILL  5,12
                                           19021 * ***                   break;
0000CAE0 E3C0 C0A0 001A          0000C3B0  19022          ALGF  12,@lit_region_diff_2022_1_2
                                           19023          DROP  12
                        0000CB80           19024          USING @REGION_2022_2,12
0000CAE6 47F0 C2B0               0000CE30  19025          B     @L1392
                                           19026          DROP  12
                        0000C310           19027          USING @REGION_2022_1,12
                                           19028 * ***
                                           19029 * ***           case RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_\
                                           19030 * FAILED:
                                           19031 * ***           case RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED:
                                           19032 * ***           case RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH:
                                           19033 * ***           case RD_KAFKA_RESP_ERR_INVALID_TXN_STATE:
                                           19034 * ***           case RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT:
0000CAEA                                   19035 @L1406   DS    0H
                                           19036 * ***                   actions |= 0x200;
0000CAEA A55B 0200               00000200  19037          OILL  5,512
                                           19038 * ***                   break;
0000CAEE E3C0 C0A0 001A          0000C3B0  19039          ALGF  12,@lit_region_diff_2022_1_2
                                           19040          DROP  12
                        0000CB80           19041          USING @REGION_2022_2,12
0000CAF4 47F0 C2B0               0000CE30  19042          B     @L1392
                                           19043          DROP  12
                        0000C310           19044          USING @REGION_2022_1,12
                                           19045 * ***
                                           19046 * ***           case RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED:
                                           19047 * ***           case RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED:
0000CAF8                                   19048 @L1408   DS    0H
                                           19049 * ***                   actions |= 0x1;
0000CAF8 A55B 0001               00000001  19050          OILL  5,1
                                           19051 * ***                   break;
0000CAFC E3C0 C0A0 001A          0000C3B0  19052          ALGF  12,@lit_region_diff_2022_1_2
                                           19053          DROP  12
                        0000CB80           19054          USING @REGION_2022_2,12
0000CB02 47F0 C2B0               0000CE30  19055          B     @L1392
                                           19056          DROP  12
                        0000C310           19057          USING @REGION_2022_1,12
                                           19058 * ***
                                           19059 * ***           case RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART:
                                           19060 * ***           case RD_KAFKA_RESP_ERR_COORDINATOR_LOAD_IN_PROGRESS:
                                           19061 * ***           case RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS:
0000CB06                                   19062 @L1411   DS    0H
                                           19063 * ***                   actions |= 0x8;
0000CB06 A55B 0008               00000008  19064          OILL  5,8
                                           19065 * ***                   break;
0000CB0A E3C0 C0A0 001A          0000C3B0  19066          ALGF  12,@lit_region_diff_2022_1_2
                                           19067          DROP  12
                        0000CB80           19068          USING @REGION_2022_2,12
0000CB10 47F0 C2B0               0000CE30  19069          B     @L1392
                                                                                                                           Page  381 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19070          DROP  12
                        0000C310           19071          USING @REGION_2022_1,12
                                           19072 * ***
                                           19073 * ***           default:
                                           19074 * ***
                                           19075 * ***                   actions |= 0x1;
0000CB14                                   19076 @L1412   DS    0H
0000CB14 A55B 0001               00000001  19077          OILL  5,1
                                           19078 * ***                   break;
0000CB18 E3C0 C0A0 001A          0000C3B0  19079          ALGF  12,@lit_region_diff_2022_1_2
                                           19080          DROP  12
                        0000CB80           19081          USING @REGION_2022_2,12
0000CB1E 47F0 C2B0               0000CE30  19082          B     @L1392
                                           19083          DROP  12
                        0000C310           19084          USING @REGION_2022_1,12
                                           19085 * ***           }
0000CB22                                   19086 @L1391   DS    0H
0000CB22 A73E FF47               0000FF47  19087          CHI   3,-185
0000CB26 47B0 C836               0000CB46  19088          BNL   @@gen_label1336
0000CB2A A73E FF3B               0000FF3B  19089          CHI   3,-197
0000CB2E 4740 C804               0000CB14  19090          BL    @L1412
0000CB32 A73E FF3B               0000FF3B  19091          CHI   3,-197
0000CB36 4780 C7B2               0000CAC2  19092          BE    @L1395
0000CB3A A73E FF3D               0000FF3D  19093          CHI   3,-195
0000CB3E 4780 C7C0               0000CAD0  19094          BE    @L1397
0000CB42 47F0 C804               0000CB14  19095          B     @L1412
0000CB46                                   19096 @@gen_label1336 DS 0H
0000CB46 A73E FF59               0000FF59  19097          CHI   3,-167
0000CB4A 47B0 C84A               0000CB5A  19098          BNL   @@gen_label1337
0000CB4E A73E FF47               0000FF47  19099          CHI   3,-185
0000CB52 4780 C7C0               0000CAD0  19100          BE    @L1397
0000CB56 47F0 C804               0000CB14  19101          B     @L1412
0000CB5A                                   19102 @@gen_label1337 DS 0H
0000CB5A 1233                              19103          LTR   3,3
0000CB5C 4740 C85A               0000CB6A  19104          BL    *+14  Around region break
0000CB60 E3C0 C0A0 001A          0000C3B0  19105          ALGF  12,@lit_region_diff_2022_1_2
                                           19106          DROP  12
                        0000CB80           19107          USING @REGION_2022_2,12
0000CB66 47F0 C108               0000CC88  19108          B     @@gen_label1338
                                           19109          DROP  12
                        0000C310           19110          USING @REGION_2022_1,12
0000CB6A A73E FF59               0000FF59  19111          CHI   3,-167
0000CB6E 4780 C7B2               0000CAC2  19112          BE    @L1395
0000CB72 A73E FF5A               0000FF5A  19113          CHI   3,-166
0000CB76 4780 C7CC               0000CADC  19114          BE    @L1401
0000CB7A E3C0 C0A0 001A          0000C3B0  19115          ALGF  12,@lit_region_diff_2022_1_2
0000CB80                                   19116 @REGION_2022_2 DS 0H
                                           19117          DROP  12
                        0000CB80           19118          USING @REGION_2022_2,12
0000CB80 E3C0 C010 001B          0000CB90  19119          SLGF  12,@lit_region_diff_2022_2_1
                                           19120          DROP  12
                        0000C310           19121          USING @REGION_2022_1,12
                                                                                                                           Page  382 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CB86 47F0 C804               0000CB14  19122          B     @L1412
                                           19123          DROP  12
                        0000CB80           19124          USING @REGION_2022_2,12
0000CB90                                   19125          DS    0D
0000CB90 00000870                          19126 @lit_region_diff_2022_2_1  DC A(@REGION_2022_2-@REGION_2022_1)
0000CB94 00000000
0000CB98 0000000000000001                  19127 @lit_2022_962 DC FD'1' 0x0000000000000001
0000CBA0 0000000000000080                  19128 @lit_2022_963 DC FD'128' 0x0000000000000080
0000CBA8 0000000000000300                  19129 @lit_2022_964 DC FD'768' 0x0000000000000300
0000CBB0 0000000000000003                  19130 @lit_2022_965 DC FD'3' 0x0000000000000003
0000CBB8 0000000000000004                  19131 @lit_2022_966 DC FD'4' 0x0000000000000004
0000CBC0 0000000000000010                  19132 @lit_2022_968 DC FD'16' 0x0000000000000010
0000CBC8 0000000000000040                  19133 @lit_2022_969 DC FD'64' 0x0000000000000040
0000CBD0 00000000000044D0                  19134 @lit_2022_970 DC AD(rd_kafka_txn_normalize_err)
0000CBD8 0000000000000000                  19135 @lit_2022_971 DC AD(rd_kafka_broker_name)
0000CBE0 0000000000014A98                  19136 @lit_2022_972 DC AD(@strings@)
0000CBE8 0000000000000000                  19137 @lit_2022_973 DC AD(rd_kafka_err2name)
0000CBF0 0000000000000000                  19138 @lit_2022_976 DC AD(rd_kafka_log0)
0000CBF8 0000000000000000                  19139 @lit_2022_977 DC AD(rd_kafka_err2str)
0000CC00 0000000000005118                  19140 @lit_2022_979 DC AD(rd_kafka_txn_set_fatal_error)
0000CC08 0000000000000000                  19141 @lit_2022_981 DC AD(mtx_lock)
0000CC10 0000000000001BA8                  19142 @lit_2022_983 DC AD(rd_strlcpy)
0000CC18 0000000000000000                  19143 @lit_2022_985 DC AD(mtx_unlock)
0000CC20 000003E8                          19144 @lit_2022_990 DC F'1000' 0x000003e8
0000CC24 00000000
0000CC28 00000000000016A0                  19145 @lit_2022_992 DC AD(rd_timeout_expired)
0000CC30 0000000000000000                  19146 @lit_2022_993 DC AD(rd_kafka_buf_retry)
0000CC38 0000000000005448                  19147 @lit_2022_1009 DC AD(rd_kafka_txn_set_abortable_error0)
0000CC40 0000000000001600                  19148 @lit_2022_1010 DC AD(rd_timeout_remains_limit0)
0000CC48 0000000000002D40                  19149 @lit_2022_1012 DC AD(rd_kafka_replyq_make)
0000CC50 0000000000014658                  19150 @lit_2022_1011 DC AD(@DATA)
0000CC58 0000000000000000                  19151 @lit_2022_1015 DC AD(rd_kafka_coord_req)
0000CC60 000000000000B258                  19152 @lit_2022_1014 DC AD(rd_kafka_txn_handle_$Txn$Offset$Commit)
0000CC68 000000000000BE58                  19153 @lit_2022_1013 DC AD(rd_kafka_txn_send_$Txn$Offset$Commit$Request)
0000CC70 0000000000001D48                  19154 @lit_2022_1016 DC AD(rd_kafka_q_keep)
0000CC78 0000000000005A68                  19155 @lit_2022_1021 DC AD(rd_kafka_txn_curr_api_reply)
0000CC80 0000000000000000                  19156 @lit_2022_1022 DC AD(rd_kafka_op_destroy)
0000CC88                                   19157 @@gen_label1338 DS 0H
0000CC88 A73E 001D               0000001D  19158          CHI   3,29
0000CC8C 47B0 C1B0               0000CD30  19159          BNL   @@gen_label1339
0000CC90 A73E 0007               00000007  19160          CHI   3,7
0000CC94 47B0 C13A               0000CCBA  19161          BNL   @@gen_label1340
0000CC98 1233                              19162          LTR   3,3
0000CC9A 4780 C2B0               0000CE30  19163          BE    @L1392
0000CC9E A73E 0003               00000003  19164          CHI   3,3
0000CCA2 4770 C130               0000CCB0  19165          BNE   *+14  Around region break
0000CCA6 E3C0 C010 001B          0000CB90  19166          SLGF  12,@lit_region_diff_2022_2_1
                                           19167          DROP  12
                        0000C310           19168          USING @REGION_2022_1,12
0000CCAC 47F0 C7F6               0000CB06  19169          B     @L1411
                                           19170          DROP  12
                        0000CB80           19171          USING @REGION_2022_2,12
                                                                                                                           Page  383 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CCB0 E3C0 C010 001B          0000CB90  19172          SLGF  12,@lit_region_diff_2022_2_1
                                           19173          DROP  12
                        0000C310           19174          USING @REGION_2022_1,12
0000CCB6 47F0 C804               0000CB14  19175          B     @L1412
                                           19176          DROP  12
                        0000CB80           19177          USING @REGION_2022_2,12
0000CCBA                                   19178 @@gen_label1340 DS 0H
0000CCBA 18F3                              19179          LR    15,3
0000CCBC A7FA FFF9               0000FFF9  19180          AHI   15,-7
0000CCC0 C2FF 0000 0009                    19181          CLFI  15,X'00000009'
0000CCC6 47D0 C154               0000CCD4  19182          BNH   *+14  Around region break
0000CCCA E3C0 C010 001B          0000CB90  19183          SLGF  12,@lit_region_diff_2022_2_1
                                           19184          DROP  12
                        0000C310           19185          USING @REGION_2022_1,12
0000CCD0 47F0 C804               0000CB14  19186          B     @L1412
                                           19187          DROP  12
                        0000CB80           19188          USING @REGION_2022_2,12
0000CCD4 B914 00FF                         19189          LGFR  15,15
0000CCD8 A719 0001               00000001  19190          LGHI  1,1
0000CCDC EB11 F000 000D          00000000  19191          SLLG  1,1,0(15)
0000CCE2 B904 00F1                         19192          LGR   15,1
0000CCE6 E3F0 C018 0080          0000CB98  19193          NG    15,@lit_2022_962
0000CCEC 4780 C17A               0000CCFA  19194          BZ    *+14  Around region break
0000CCF0 E3C0 C010 001B          0000CB90  19195          SLGF  12,@lit_region_diff_2022_2_1
                                           19196          DROP  12
                        0000C310           19197          USING @REGION_2022_1,12
0000CCF6 47F0 C7CC               0000CADC  19198          B     @L1401
                                           19199          DROP  12
                        0000CB80           19200          USING @REGION_2022_2,12
0000CCFA B904 00F1                         19201          LGR   15,1
0000CCFE E3F0 C020 0080          0000CBA0  19202          NG    15,@lit_2022_963
0000CD04 4780 C192               0000CD12  19203          BZ    *+14  Around region break
0000CD08 E3C0 C010 001B          0000CB90  19204          SLGF  12,@lit_region_diff_2022_2_1
                                           19205          DROP  12
                        0000C310           19206          USING @REGION_2022_1,12
0000CD0E 47F0 C7F6               0000CB06  19207          B     @L1411
                                           19208          DROP  12
                        0000CB80           19209          USING @REGION_2022_2,12
0000CD12 E310 C028 0080          0000CBA8  19210          NG    1,@lit_2022_964
0000CD18 4780 C1A6               0000CD26  19211          BZ    *+14  Around region break
0000CD1C E3C0 C010 001B          0000CB90  19212          SLGF  12,@lit_region_diff_2022_2_1
                                           19213          DROP  12
                        0000C310           19214          USING @REGION_2022_1,12
0000CD22 47F0 C7CC               0000CADC  19215          B     @L1401
                                           19216          DROP  12
                        0000CB80           19217          USING @REGION_2022_2,12
0000CD26 E3C0 C010 001B          0000CB90  19218          SLGF  12,@lit_region_diff_2022_2_1
                                           19219          DROP  12
                        0000C310           19220          USING @REGION_2022_1,12
0000CD2C 47F0 C804               0000CB14  19221          B     @L1412
                                           19222          DROP  12
                        0000CB80           19223          USING @REGION_2022_2,12
                                                                                                                           Page  384 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CD30                                   19224 @@gen_label1339 DS 0H
0000CD30 A73E 002B               0000002B  19225          CHI   3,43
0000CD34 47B0 C216               0000CD96  19226          BNL   @@gen_label1341
0000CD38 18F3                              19227          LR    15,3
0000CD3A A7FA FFE3               0000FFE3  19228          AHI   15,-29
0000CD3E C2FF 0000 0002                    19229          CLFI  15,X'00000002'
0000CD44 47D0 C1D2               0000CD52  19230          BNH   *+14  Around region break
0000CD48 E3C0 C010 001B          0000CB90  19231          SLGF  12,@lit_region_diff_2022_2_1
                                           19232          DROP  12
                        0000C310           19233          USING @REGION_2022_1,12
0000CD4E 47F0 C804               0000CB14  19234          B     @L1412
                                           19235          DROP  12
                        0000CB80           19236          USING @REGION_2022_2,12
0000CD52 B914 00FF                         19237          LGFR  15,15
0000CD56 A719 0001               00000001  19238          LGHI  1,1
0000CD5A EB11 F000 000D          00000000  19239          SLLG  1,1,0(15)
0000CD60 B904 00F1                         19240          LGR   15,1
0000CD64 E3F0 C030 0080          0000CBB0  19241          NG    15,@lit_2022_965
0000CD6A 4780 C1F8               0000CD78  19242          BZ    *+14  Around region break
0000CD6E E3C0 C010 001B          0000CB90  19243          SLGF  12,@lit_region_diff_2022_2_1
                                           19244          DROP  12
                        0000C310           19245          USING @REGION_2022_1,12
0000CD74 47F0 C7E8               0000CAF8  19246          B     @L1408
                                           19247          DROP  12
                        0000CB80           19248          USING @REGION_2022_2,12
0000CD78 E310 C038 0080          0000CBB8  19249          NG    1,@lit_2022_966
0000CD7E 4780 C20C               0000CD8C  19250          BZ    *+14  Around region break
0000CD82 E3C0 C010 001B          0000CB90  19251          SLGF  12,@lit_region_diff_2022_2_1
                                           19252          DROP  12
                        0000C310           19253          USING @REGION_2022_1,12
0000CD88 47F0 C7DA               0000CAEA  19254          B     @L1406
                                           19255          DROP  12
                        0000CB80           19256          USING @REGION_2022_2,12
0000CD8C E3C0 C010 001B          0000CB90  19257          SLGF  12,@lit_region_diff_2022_2_1
                                           19258          DROP  12
                        0000C310           19259          USING @REGION_2022_1,12
0000CD92 47F0 C804               0000CB14  19260          B     @L1412
                                           19261          DROP  12
                        0000CB80           19262          USING @REGION_2022_2,12
0000CD96                                   19263 @@gen_label1341 DS 0H
0000CD96 A73E 002F               0000002F  19264          CHI   3,47
0000CD9A 47B0 C23A               0000CDBA  19265          BNL   @@gen_label1342
0000CD9E A73E 002B               0000002B  19266          CHI   3,43
0000CDA2 4770 C230               0000CDB0  19267          BNE   *+14  Around region break
0000CDA6 E3C0 C010 001B          0000CB90  19268          SLGF  12,@lit_region_diff_2022_2_1
                                           19269          DROP  12
                        0000C310           19270          USING @REGION_2022_1,12
0000CDAC 47F0 C7DA               0000CAEA  19271          B     @L1406
                                           19272          DROP  12
                        0000CB80           19273          USING @REGION_2022_2,12
0000CDB0 E3C0 C010 001B          0000CB90  19274          SLGF  12,@lit_region_diff_2022_2_1
                                           19275          DROP  12
                                                                                                                           Page  385 
  Active Usings: @REGION_2022_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        0000C310           19276          USING @REGION_2022_1,12
0000CDB6 47F0 C804               0000CB14  19277          B     @L1412
                                           19278          DROP  12
                        0000CB80           19279          USING @REGION_2022_2,12
0000CDBA                                   19280 @@gen_label1342 DS 0H
0000CDBA 18F3                              19281          LR    15,3
0000CDBC A7FA FFD1               0000FFD1  19282          AHI   15,-47
0000CDC0 C2FF 0000 0006                    19283          CLFI  15,X'00000006'
0000CDC6 47D0 C254               0000CDD4  19284          BNH   *+14  Around region break
0000CDCA E3C0 C010 001B          0000CB90  19285          SLGF  12,@lit_region_diff_2022_2_1
                                           19286          DROP  12
                        0000C310           19287          USING @REGION_2022_1,12
0000CDD0 47F0 C804               0000CB14  19288          B     @L1412
                                           19289          DROP  12
                        0000CB80           19290          USING @REGION_2022_2,12
0000CDD4 B914 00FF                         19291          LGFR  15,15
0000CDD8 A719 0001               00000001  19292          LGHI  1,1
0000CDDC EB11 F000 000D          00000000  19293          SLLG  1,1,0(15)
0000CDE2 B904 00F1                         19294          LGR   15,1
0000CDE6 E3F0 C030 0080          0000CBB0  19295          NG    15,@lit_2022_965
0000CDEC 4780 C27A               0000CDFA  19296          BZ    *+14  Around region break
0000CDF0 E3C0 C010 001B          0000CB90  19297          SLGF  12,@lit_region_diff_2022_2_1
                                           19298          DROP  12
                        0000C310           19299          USING @REGION_2022_1,12
0000CDF6 47F0 C7DA               0000CAEA  19300          B     @L1406
                                           19301          DROP  12
                        0000CB80           19302          USING @REGION_2022_2,12
0000CDFA B904 00F1                         19303          LGR   15,1
0000CDFE E3F0 C040 0080          0000CBC0  19304          NG    15,@lit_2022_968
0000CE04 4780 C292               0000CE12  19305          BZ    *+14  Around region break
0000CE08 E3C0 C010 001B          0000CB90  19306          SLGF  12,@lit_region_diff_2022_2_1
                                           19307          DROP  12
                        0000C310           19308          USING @REGION_2022_1,12
0000CE0E 47F0 C7F6               0000CB06  19309          B     @L1411
                                           19310          DROP  12
                        0000CB80           19311          USING @REGION_2022_2,12
0000CE12 E310 C048 0080          0000CBC8  19312          NG    1,@lit_2022_969
0000CE18 4780 C2A6               0000CE26  19313          BZ    *+14  Around region break
0000CE1C E3C0 C010 001B          0000CB90  19314          SLGF  12,@lit_region_diff_2022_2_1
                                           19315          DROP  12
                        0000C310           19316          USING @REGION_2022_1,12
0000CE22 47F0 C7DA               0000CAEA  19317          B     @L1406
                                           19318          DROP  12
                        0000CB80           19319          USING @REGION_2022_2,12
0000CE26 E3C0 C010 001B          0000CB90  19320          SLGF  12,@lit_region_diff_2022_2_1
                                           19321          DROP  12
                        0000C310           19322          USING @REGION_2022_1,12
0000CE2C 47F0 C804               0000CB14  19323          B     @L1412
                                           19324          DROP  12
                        0000CB80           19325          USING @REGION_2022_2,12
0000CE30                                   19326 @L1392   DS    0H
                                           19327 * ***
                                                                                                                           Page  386 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19328 * ***           err = rd_kafka_txn_normalize_err(err);
0000CE30 B914 00F3                         19329          LGFR  15,3
0000CE34 E3F0 D2B8 0024          000002B8  19330          STG   15,696(0,13)
0000CE3A 4110 D2B8               000002B8  19331          LA    1,696(0,13)
0000CE3E E3F0 C050 0004          0000CBD0  19332          LG    15,@lit_2022_970 ; rd_kafka_txn_normalize_err
0000CE44                                   19333 @@gen_label1343 DS    0H
0000CE44 05EF                              19334          BALR  14,15
0000CE46                                   19335 @@gen_label1344 DS    0H
0000CE46 183F                              19336          LR    3,15        ; err
                                           19337 * ***
                                           19338 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           19339 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ADDOFFSETS","AddOffse\
                                           19340 * tsToTxn response from %s: %s (actions 0x%x)", rkb ? rd_kafka_broker_\
                                           19341 * name(rkb) : "(none)", rd_kafka_err2name(err), actions); } while (0);
0000CE48                                   19342 @L1413   DS    0H
0000CE48 9180 6322      00000322 00000080  19343          TM    802(6),128
0000CE4C 4780 C376               0000CEF6  19344          BZ    @L1416
0000CE50 B902 00F4                         19345          LTGR  15,4
0000CE54 4780 C2F2               0000CE72  19346          BZ    @L1417
0000CE58 E340 D2B8 0024          000002B8  19347          STG   4,696(0,13)
0000CE5E 4110 D2B8               000002B8  19348          LA    1,696(0,13)
0000CE62 E3F0 C058 0004          0000CBD8  19349          LG    15,@lit_2022_971 ; rd_kafka_broker_name
0000CE68                                   19350 @@gen_label1347 DS    0H
0000CE68 05EF                              19351          BALR  14,15
0000CE6A                                   19352 @@gen_label1348 DS    0H
0000CE6A B904 008F                         19353          LGR   8,15
0000CE6E 47F0 C2FC               0000CE7C  19354          B     @L1418
0000CE72                                   19355 @L1417   DS    0H
0000CE72 E3F0 C060 0004          0000CBE0  19356          LG    15,@lit_2022_972
0000CE78 4180 FA8E               00000A8E  19357          LA    8,2702(0,15)
0000CE7C                                   19358 @L1418   DS    0H
0000CE7C B914 00F3                         19359          LGFR  15,3
0000CE80 E3F0 D2B8 0024          000002B8  19360          STG   15,696(0,13)
0000CE86 4110 D2B8               000002B8  19361          LA    1,696(0,13)
0000CE8A E3F0 C068 0004          0000CBE8  19362          LG    15,@lit_2022_973 ; rd_kafka_err2name
0000CE90                                   19363 @@gen_label1349 DS    0H
0000CE90 05EF                              19364          BALR  14,15
0000CE92                                   19365 @@gen_label1350 DS    0H
0000CE92 4110 6210               00000210  19366          LA    1,528(0,6)
0000CE96 E310 D2B8 0024          000002B8  19367          STG   1,696(0,13)
0000CE9C E360 D2C0 0024          000002C0  19368          STG   6,704(0,13)
0000CEA2 D707 D2C8 D2C8 000002C8 000002C8  19369          XC    712(8,13),712(13)
0000CEA8 E548 D2D0 0007          000002D0  19370          MVGHI 720(13),7
0000CEAE C01F 0000 8000                    19371          LLILF 1,X'00008000' ; 32768
0000CEB4 E310 D2D8 0024          000002D8  19372          STG   1,728(0,13)
0000CEBA E310 C060 0004          0000CBE0  19373          LG    1,@lit_2022_972
0000CEC0 4190 1ADE               00000ADE  19374          LA    9,2782(0,1)
0000CEC4 E390 D2E0 0024          000002E0  19375          STG   9,736(0,13)
0000CECA 4110 1AEA               00000AEA  19376          LA    1,2794(0,1)
0000CECE E310 D2E8 0024          000002E8  19377          STG   1,744(0,13)
0000CED4 E380 D2F0 0024          000002F0  19378          STG   8,752(0,13)
0000CEDA E3F0 D2F8 0024          000002F8  19379          STG   15,760(0,13)
                                                                                                                           Page  387 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CEE0 B914 00F5                         19380          LGFR  15,5
0000CEE4 E3F0 D300 0024          00000300  19381          STG   15,768(0,13)
0000CEEA 4110 D2B8               000002B8  19382          LA    1,696(0,13)
0000CEEE E3F0 C070 0004          0000CBF0  19383          LG    15,@lit_2022_976 ; rd_kafka_log0
0000CEF4                                   19384 @@gen_label1351 DS    0H
0000CEF4 05EF                              19385          BALR  14,15
0000CEF6                                   19386 @@gen_label1352 DS    0H
0000CEF6                                   19387 @L1416   DS    0H
                                           19388 * ***
                                           19389 * ***
                                           19390 * ***
                                           19391 * ***
                                           19392 * ***
                                           19393 * ***           if (err && !actions)
0000CEF6 1233                              19394          LTR   3,3
0000CEF8 4780 C386               0000CF06  19395          BZ    @L1419
0000CEFC 1255                              19396          LTR   5,5
0000CEFE 4770 C386               0000CF06  19397          BNZ   @L1419
                                           19398 * ***                   actions |= 0x1;
0000CF02 A55B 0001               00000001  19399          OILL  5,1
0000CF06                                   19400 @L1419   DS    0H
                                           19401 * ***
                                           19402 * ***           if (actions & 0x200) {
0000CF06 18F5                              19403          LR    15,5
0000CF08 C0FB 0000 0200                    19404          NILF  15,X'00000200'
0000CF0E 12FF                              19405          LTR   15,15
0000CF10 4780 C3E6               0000CF66  19406          BZ    @L1420
                                           19407 * ***                   rd_kafka_txn_set_fatal_error(rk, RD_DO_LOCK, e\
                                           19408 * rr,
                                           19409 * ***                                                "Failed to add of\
                                           19410 * fsets to "
                                           19411 * ***                                                rd_kafka_err2str(\
                                           19412 * err));
0000CF14 B914 00F3                         19413          LGFR  15,3
0000CF18 E3F0 D2B8 0024          000002B8  19414          STG   15,696(0,13)
0000CF1E 4110 D2B8               000002B8  19415          LA    1,696(0,13)
0000CF22 E3F0 C078 0004          0000CBF8  19416          LG    15,@lit_2022_977 ; rd_kafka_err2str
0000CF28                                   19417 @@gen_label1356 DS    0H
0000CF28 05EF                              19418          BALR  14,15
0000CF2A                                   19419 @@gen_label1357 DS    0H
0000CF2A E360 D2B8 0024          000002B8  19420          STG   6,696(0,13)
0000CF30 E548 D2C0 0001          000002C0  19421          MVGHI 704(13),1
0000CF36 B914 0013                         19422          LGFR  1,3
0000CF3A E310 D2C8 0024          000002C8  19423          STG   1,712(0,13)
                                           19424 * ***                                                "transaction: %s"\
                                           19425 * ,
0000CF40 E310 C060 0004          0000CBE0  19426          LG    1,@lit_2022_972
0000CF46 4110 1B1E               00000B1E  19427          LA    1,2846(0,1)
0000CF4A E310 D2D0 0024          000002D0  19428          STG   1,720(0,13)
0000CF50 E3F0 D2D8 0024          000002D8  19429          STG   15,728(0,13)
0000CF56 4110 D2B8               000002B8  19430          LA    1,696(0,13)
0000CF5A E3F0 C080 0004          0000CC00  19431          LG    15,@lit_2022_979 ; rd_kafka_txn_set_fatal_error
                                                                                                                           Page  388 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CF60                                   19432 @@gen_label1358 DS    0H
0000CF60 05EF                              19433          BALR  14,15
0000CF62                                   19434 @@gen_label1359 DS    0H
                                           19435 * ***
                                           19436 * ***           } else if (actions & 0x8) {
0000CF62 47F0 C554               0000D0D4  19437          B     @L1421
0000CF66                                   19438 @L1420   DS    0H
0000CF66 A751 0008               00000008  19439          TML   5,8
0000CF6A 4780 C554               0000D0D4  19440          BZ    @L1421
                                           19441 * ***                   do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x8\
                                           19442 * 000)))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock\
                                           19443 * ); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unl\
                                           19444 * ock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf\
                                           19445 * , (rkb)->rkb_rk, _logname, 7, (0x8000), "ADDOFFSETS", "Failed to add\
                                           19446 *  offsets to transaction on broker %s: " "%s (after %dms): error is r\
                                           19447 * etriable", rd_kafka_broker_name(rkb), rd_kafka_err2str(err), (int)(r\
                                           19448 * equest->rkbuf_ts_sent/1000)); } while (0); } } while (0);
0000CF6E                                   19449 @L1423   DS    0H
0000CF6E E3F0 4FD0 0004          00000FD0  19450          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
0000CF74 9180 F322      00000322 00000080  19451          TM    802(15),128
0000CF78 4780 C504               0000D084  19452          BZ    @L1426
0000CF7C                                   19453 @L1427   DS    0H
0000CF7C A789 1638               00001638  19454          LGHI  8,5688      ; 5688
0000CF80 41F8 4000               00000000  19455          LA    15,0(8,4)
0000CF84 E3F0 D2B8 0024          000002B8  19456          STG   15,696(0,13)
0000CF8A 4110 D2B8               000002B8  19457          LA    1,696(0,13)
0000CF8E E3F0 C088 0004          0000CC08  19458          LG    15,@lit_2022_981 ; mtx_lock
0000CF94                                   19459 @@gen_label1362 DS    0H
0000CF94 05EF                              19460          BALR  14,15
0000CF96                                   19461 @@gen_label1363 DS    0H
0000CF96 41F0 D0B4               000000B4  19462          LA    15,180(0,13)
0000CF9A E3F0 D2B8 0024          000002B8  19463          STG   15,696(0,13)
0000CFA0 A7F9 1630               00001630  19464          LGHI  15,5680     ; 5680
0000CFA4 E3FF 4000 0004          00000000  19465          LG    15,0(15,4)
0000CFAA E3F0 D2C0 0024          000002C0  19466          STG   15,704(0,13)
0000CFB0 E548 D2C8 0100          000002C8  19467          MVGHI 712(13),256
0000CFB6 4110 D2B8               000002B8  19468          LA    1,696(0,13)
0000CFBA E3F0 C090 0004          0000CC10  19469          LG    15,@lit_2022_983 ; rd_strlcpy
0000CFC0                                   19470 @@gen_label1364 DS    0H
0000CFC0 05EF                              19471          BALR  14,15
0000CFC2                                   19472 @@gen_label1365 DS    0H
0000CFC2 41F8 4000               00000000  19473          LA    15,0(8,4)
0000CFC6 E3F0 D2B8 0024          000002B8  19474          STG   15,696(0,13)
0000CFCC 4110 D2B8               000002B8  19475          LA    1,696(0,13)
0000CFD0 E3F0 C098 0004          0000CC18  19476          LG    15,@lit_2022_985 ; mtx_unlock
0000CFD6                                   19477 @@gen_label1366 DS    0H
0000CFD6 05EF                              19478          BALR  14,15
0000CFD8                                   19479 @@gen_label1367 DS    0H
0000CFD8 E340 D2B8 0024          000002B8  19480          STG   4,696(0,13)
0000CFDE 4110 D2B8               000002B8  19481          LA    1,696(0,13)
0000CFE2 E3F0 C058 0004          0000CBD8  19482          LG    15,@lit_2022_971 ; rd_kafka_broker_name
0000CFE8                                   19483 @@gen_label1368 DS    0H
                                                                                                                           Page  389 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000CFE8 05EF                              19484          BALR  14,15
0000CFEA                                   19485 @@gen_label1369 DS    0H
0000CFEA B904 008F                         19486          LGR   8,15
0000CFEE B914 00F3                         19487          LGFR  15,3
0000CFF2 E3F0 D2B8 0024          000002B8  19488          STG   15,696(0,13)
0000CFF8 4110 D2B8               000002B8  19489          LA    1,696(0,13)
0000CFFC E3F0 C078 0004          0000CBF8  19490          LG    15,@lit_2022_977 ; rd_kafka_err2str
0000D002                                   19491 @@gen_label1370 DS    0H
0000D002 05EF                              19492          BALR  14,15
0000D004                                   19493 @@gen_label1371 DS    0H
0000D004 E310 4FD0 0004          00000FD0  19494          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
0000D00A 4110 1210               00000210  19495          LA    1,528(0,1)
0000D00E E310 D2B8 0024          000002B8  19496          STG   1,696(0,13)
0000D014 E310 4FD0 0004          00000FD0  19497          LG    1,4048(0,4)
0000D01A E310 D2C0 0024          000002C0  19498          STG   1,704(0,13)
0000D020 4110 D0B4               000000B4  19499          LA    1,180(0,13)
0000D024 E310 D2C8 0024          000002C8  19500          STG   1,712(0,13)
0000D02A E548 D2D0 0007          000002D0  19501          MVGHI 720(13),7
0000D030 C01F 0000 8000                    19502          LLILF 1,X'00008000' ; 32768
0000D036 E310 D2D8 0024          000002D8  19503          STG   1,728(0,13)
0000D03C E310 C060 0004          0000CBE0  19504          LG    1,@lit_2022_972
0000D042 4190 1ADE               00000ADE  19505          LA    9,2782(0,1)
0000D046 E390 D2E0 0024          000002E0  19506          STG   9,736(0,13)
0000D04C 4110 1B48               00000B48  19507          LA    1,2888(0,1)
0000D050 E310 D2E8 0024          000002E8  19508          STG   1,744(0,13)
0000D056 E380 D2F0 0024          000002F0  19509          STG   8,752(0,13)
0000D05C E3F0 D2F8 0024          000002F8  19510          STG   15,760(0,13)
0000D062 E390 7158 0004          00000158  19511          LG    9,344(0,7)  ; offset of rkbuf_ts_sent in rd_kafka_buf_s
0000D068 E380 C0A0 001D          0000CC20  19512          DSGF  8,@lit_2022_990
0000D06E B914 00F9                         19513          LGFR  15,9
0000D072 E3F0 D300 0024          00000300  19514          STG   15,768(0,13)
0000D078 4110 D2B8               000002B8  19515          LA    1,696(0,13)
0000D07C E3F0 C070 0004          0000CBF0  19516          LG    15,@lit_2022_976 ; rd_kafka_log0
0000D082                                   19517 @@gen_label1372 DS    0H
0000D082 05EF                              19518          BALR  14,15
0000D084                                   19519 @@gen_label1373 DS    0H
0000D084                                   19520 @L1426   DS    0H
                                           19521 * ***
                                           19522 * ***   # 1908 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           19523 * ***                   if (!rd_timeout_expired(remains_ms) &&
0000D084 B914 00F2                         19524          LGFR  15,2
0000D088 E3F0 D2B8 0024          000002B8  19525          STG   15,696(0,13)
0000D08E 4110 D2B8               000002B8  19526          LA    1,696(0,13)
0000D092 E3F0 C0A8 0004          0000CC28  19527          LG    15,@lit_2022_992 ; rd_timeout_expired
0000D098                                   19528 @@gen_label1374 DS    0H
0000D098 05EF                              19529          BALR  14,15
0000D09A                                   19530 @@gen_label1375 DS    0H
0000D09A 12FF                              19531          LTR   15,15
0000D09C 4770 C554               0000D0D4  19532          BNZ   @L1421
                                           19533 * ***                       rd_kafka_buf_retry(rk->rk_eos.txn_coord, r\
                                           19534 * equest)) {
0000D0A0 E3F0 6D48 0004          00000D48  19535          LG    15,3400(0,6)
                                                                                                                           Page  390 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D0A6 E3F0 D2B8 0024          000002B8  19536          STG   15,696(0,13)
0000D0AC E370 D2C0 0024          000002C0  19537          STG   7,704(0,13)
0000D0B2 4110 D2B8               000002B8  19538          LA    1,696(0,13)
0000D0B6 E3F0 C0B0 0004          0000CC30  19539          LG    15,@lit_2022_993 ; rd_kafka_buf_retry
0000D0BC                                   19540 @@gen_label1377 DS    0H
0000D0BC 05EF                              19541          BALR  14,15
0000D0BE                                   19542 @@gen_label1378 DS    0H
0000D0BE 12FF                              19543          LTR   15,15
0000D0C0 4780 C554               0000D0D4  19544          BZ    @L1421
                                           19545 * ***                           rk->rk_eos.txn_req_cnt++;
0000D0C4 58F0 6E10               00000E10  19546          L     15,3600(0,6)
0000D0C8 A7FA 0001               00000001  19547          AHI   15,1
0000D0CC 50F0 6E10               00000E10  19548          ST    15,3600(0,6)
                                           19549 * ***                           return;
0000D0D0 47F0 C85A               0000D3DA  19550          B     @ret_lab_2022
                                           19551 * ***                   }
                                           19552 * ***
                                           19553 * ***
                                           19554 * ***           }
                                           19555 * ***
                                           19556 * ***           if (err)
0000D0D4                                   19557 @L1421   DS    0H
0000D0D4 1233                              19558          LTR   3,3
0000D0D6 4780 C65C               0000D1DC  19559          BZ    @L1431
                                           19560 * ***                   do { char _logname[256]; mtx_lock(&(rkb)->rkb_\
                                           19561 * logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_lognam\
                                           19562 * e)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb\
                                           19563 * _rk->rk_conf, (rkb)->rkb_rk, _logname, 3, 0x0, "ADDOFFSETS", "Failed\
                                           19564 *  to add offsets to transaction on broker %s: " "%s", rkb ? rd_kafka_\
                                           19565 * broker_name(rkb) : "(none)", rd_kafka_err2str(err)); } while (0);
0000D0DA                                   19566 @L1432   DS    0H
0000D0DA A789 1638               00001638  19567          LGHI  8,5688      ; 5688
0000D0DE 41F8 4000               00000000  19568          LA    15,0(8,4)
0000D0E2 E3F0 D2B8 0024          000002B8  19569          STG   15,696(0,13)
0000D0E8 4110 D2B8               000002B8  19570          LA    1,696(0,13)
0000D0EC E3F0 C088 0004          0000CC08  19571          LG    15,@lit_2022_981 ; mtx_lock
0000D0F2                                   19572 @@gen_label1381 DS    0H
0000D0F2 05EF                              19573          BALR  14,15
0000D0F4                                   19574 @@gen_label1382 DS    0H
0000D0F4 41F0 D0B4               000000B4  19575          LA    15,180(0,13)
0000D0F8 E3F0 D2B8 0024          000002B8  19576          STG   15,696(0,13)
0000D0FE A7F9 1630               00001630  19577          LGHI  15,5680     ; 5680
0000D102 E3FF 4000 0004          00000000  19578          LG    15,0(15,4)
0000D108 E3F0 D2C0 0024          000002C0  19579          STG   15,704(0,13)
0000D10E E548 D2C8 0100          000002C8  19580          MVGHI 712(13),256
0000D114 4110 D2B8               000002B8  19581          LA    1,696(0,13)
0000D118 E3F0 C090 0004          0000CC10  19582          LG    15,@lit_2022_983 ; rd_strlcpy
0000D11E                                   19583 @@gen_label1383 DS    0H
0000D11E 05EF                              19584          BALR  14,15
0000D120                                   19585 @@gen_label1384 DS    0H
0000D120 41F8 4000               00000000  19586          LA    15,0(8,4)
0000D124 E3F0 D2B8 0024          000002B8  19587          STG   15,696(0,13)
                                                                                                                           Page  391 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D12A 4110 D2B8               000002B8  19588          LA    1,696(0,13)
0000D12E E3F0 C098 0004          0000CC18  19589          LG    15,@lit_2022_985 ; mtx_unlock
0000D134                                   19590 @@gen_label1385 DS    0H
0000D134 05EF                              19591          BALR  14,15
0000D136                                   19592 @@gen_label1386 DS    0H
0000D136 B902 00F4                         19593          LTGR  15,4
0000D13A 4780 C5D8               0000D158  19594          BZ    @L1435
0000D13E E340 D2B8 0024          000002B8  19595          STG   4,696(0,13)
0000D144 4110 D2B8               000002B8  19596          LA    1,696(0,13)
0000D148 E3F0 C058 0004          0000CBD8  19597          LG    15,@lit_2022_971 ; rd_kafka_broker_name
0000D14E                                   19598 @@gen_label1388 DS    0H
0000D14E 05EF                              19599          BALR  14,15
0000D150                                   19600 @@gen_label1389 DS    0H
0000D150 B904 008F                         19601          LGR   8,15
0000D154 47F0 C5E2               0000D162  19602          B     @L1436
0000D158                                   19603 @L1435   DS    0H
0000D158 E3F0 C060 0004          0000CBE0  19604          LG    15,@lit_2022_972
0000D15E 4180 FA8E               00000A8E  19605          LA    8,2702(0,15)
0000D162                                   19606 @L1436   DS    0H
0000D162 B914 00F3                         19607          LGFR  15,3
0000D166 E3F0 D2B8 0024          000002B8  19608          STG   15,696(0,13)
0000D16C 4110 D2B8               000002B8  19609          LA    1,696(0,13)
0000D170 E3F0 C078 0004          0000CBF8  19610          LG    15,@lit_2022_977 ; rd_kafka_err2str
0000D176                                   19611 @@gen_label1390 DS    0H
0000D176 05EF                              19612          BALR  14,15
0000D178                                   19613 @@gen_label1391 DS    0H
0000D178 E310 4FD0 0004          00000FD0  19614          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
0000D17E 4110 1210               00000210  19615          LA    1,528(0,1)
0000D182 E310 D2B8 0024          000002B8  19616          STG   1,696(0,13)
0000D188 E310 4FD0 0004          00000FD0  19617          LG    1,4048(0,4)
0000D18E E310 D2C0 0024          000002C0  19618          STG   1,704(0,13)
0000D194 4110 D0B4               000000B4  19619          LA    1,180(0,13)
0000D198 E310 D2C8 0024          000002C8  19620          STG   1,712(0,13)
0000D19E E548 D2D0 0003          000002D0  19621          MVGHI 720(13),3
0000D1A4 D707 D2D8 D2D8 000002D8 000002D8  19622          XC    728(8,13),728(13)
0000D1AA E310 C060 0004          0000CBE0  19623          LG    1,@lit_2022_972
0000D1B0 4190 1ADE               00000ADE  19624          LA    9,2782(0,1)
0000D1B4 E390 D2E0 0024          000002E0  19625          STG   9,736(0,13)
0000D1BA 4110 1BA0               00000BA0  19626          LA    1,2976(0,1)
0000D1BE E310 D2E8 0024          000002E8  19627          STG   1,744(0,13)
0000D1C4 E380 D2F0 0024          000002F0  19628          STG   8,752(0,13)
0000D1CA E3F0 D2F8 0024          000002F8  19629          STG   15,760(0,13)
0000D1D0 4110 D2B8               000002B8  19630          LA    1,696(0,13)
0000D1D4 E3F0 C070 0004          0000CBF0  19631          LG    15,@lit_2022_976 ; rd_kafka_log0
0000D1DA                                   19632 @@gen_label1392 DS    0H
0000D1DA 05EF                              19633          BALR  14,15
0000D1DC                                   19634 @@gen_label1393 DS    0H
                                           19635 * ***
                                           19636 * ***
                                           19637 * ***
                                           19638 * ***
                                           19639 * ***
                                                                                                                           Page  392 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19640 * ***           if (actions & 0x1)
0000D1DC                                   19641 @L1431   DS    0H
0000D1DC A751 0001               00000001  19642          TML   5,1
0000D1E0 4780 C6E4               0000D264  19643          BZ    @L1437
                                           19644 * ***                   rd_kafka_txn_set_abortable_error0(rk,err,0,"Fa\
                                           19645 * iled to add offsets to " "transaction on broker %s: " "%s (after %dm\
                                           19646 * s)", rd_kafka_broker_name(rkb), rd_kafka_err2str(err), (int)(request\
                                           19647 * ->rkbuf_ts_sent/1000));
0000D1E4 E340 D2B8 0024          000002B8  19648          STG   4,696(0,13)
0000D1EA 4110 D2B8               000002B8  19649          LA    1,696(0,13)
0000D1EE E3F0 C058 0004          0000CBD8  19650          LG    15,@lit_2022_971 ; rd_kafka_broker_name
0000D1F4                                   19651 @@gen_label1395 DS    0H
0000D1F4 05EF                              19652          BALR  14,15
0000D1F6                                   19653 @@gen_label1396 DS    0H
0000D1F6 B904 008F                         19654          LGR   8,15
0000D1FA B914 00F3                         19655          LGFR  15,3
0000D1FE E3F0 D2B8 0024          000002B8  19656          STG   15,696(0,13)
0000D204 4110 D2B8               000002B8  19657          LA    1,696(0,13)
0000D208 E3F0 C078 0004          0000CBF8  19658          LG    15,@lit_2022_977 ; rd_kafka_err2str
0000D20E                                   19659 @@gen_label1397 DS    0H
0000D20E 05EF                              19660          BALR  14,15
0000D210                                   19661 @@gen_label1398 DS    0H
0000D210 E360 D2B8 0024          000002B8  19662          STG   6,696(0,13)
0000D216 B914 0013                         19663          LGFR  1,3
0000D21A E310 D2C0 0024          000002C0  19664          STG   1,704(0,13)
0000D220 D707 D2C8 D2C8 000002C8 000002C8  19665          XC    712(8,13),712(13)
0000D226 E310 C060 0004          0000CBE0  19666          LG    1,@lit_2022_972
0000D22C 4110 1BD6               00000BD6  19667          LA    1,3030(0,1)
0000D230 E310 D2D0 0024          000002D0  19668          STG   1,720(0,13)
0000D236 E380 D2D8 0024          000002D8  19669          STG   8,728(0,13)
0000D23C E3F0 D2E0 0024          000002E0  19670          STG   15,736(0,13)
0000D242 E390 7158 0004          00000158  19671          LG    9,344(0,7)  ; offset of rkbuf_ts_sent in rd_kafka_buf_s
0000D248 E380 C0A0 001D          0000CC20  19672          DSGF  8,@lit_2022_990
0000D24E B914 00F9                         19673          LGFR  15,9
0000D252 E3F0 D2E8 0024          000002E8  19674          STG   15,744(0,13)
0000D258 4110 D2B8               000002B8  19675          LA    1,696(0,13)
0000D25C E3F0 C0B8 0004          0000CC38  19676          LG    15,@lit_2022_1009 ; rd_kafka_txn_set_abortable_error0
0000D262                                   19677 @@gen_label1399 DS    0H
0000D262 05EF                              19678          BALR  14,15
0000D264                                   19679 @@gen_label1400 DS    0H
0000D264                                   19680 @L1437   DS    0H
                                           19681 * ***
                                           19682 * ***   # 1934 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           19683 * ***           if (!err) {
0000D264 1233                              19684          LTR   3,3
0000D266 4770 C7A8               0000D328  19685          BNZ   @L1438
                                           19686 * ***
                                           19687 * ***
                                           19688 * ***
                                           19689 * ***                   rd_kafka_coord_req(rk,
                                           19690 * ***                                      RD_KAFKA_COORD_GROUP,
                                           19691 * ***                                      rko->rko_u.txn.cgmetadata->\
                                                                                                                           Page  393 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19692 * group_id,
                                           19693 * ***                                      rd_kafka_txn_send_TxnOffset\
                                           19694 * CommitRequest,
                                           19695 * ***                                      rko,
                                           19696 * ***                                      rd_timeout_remains_limit0(
                                           19697 * ***                                      rd_kafka_replyq_make(rk->rk\
                                           19698 * _ops,0,__FUNCTION__),
                                           19699 * ***                                      rd_kafka_txn_handle_TxnOffs\
                                           19700 * etCommit,
                                           19701 * ***                                      rko);
                                           19702 * ***                                              remains_ms,
                                           19703 * ***                                              rk->rk_conf.socket_\
                                           19704 * timeout_ms),
0000D26A B914 00F2                         19705          LGFR  15,2
0000D26E E3F0 D2B8 0024          000002B8  19706          STG   15,696(0,13)
0000D274 E3F0 632C 0014          0000032C  19707          LGF   15,812(0,6)
0000D27A E3F0 D2C0 0024          000002C0  19708          STG   15,704(0,13)
0000D280 4110 D2B8               000002B8  19709          LA    1,696(0,13)
0000D284 E3F0 C0C0 0004          0000CC40  19710          LG    15,@lit_2022_1010 ; rd_timeout_remains_limit0
0000D28A                                   19711 @@gen_label1402 DS    0H
0000D28A 05EF                              19712          BALR  14,15
0000D28C                                   19713 @@gen_label1403 DS    0H
0000D28C 182F                              19714          LR    2,15
0000D28E 41F0 D0B8               000000B8  19715          LA    15,184(0,13)
0000D292 E3F0 D2B8 0024          000002B8  19716          STG   15,696(0,13)
0000D298 E3F0 6008 0004          00000008  19717          LG    15,8(0,6)
0000D29E E3F0 D2C0 0024          000002C0  19718          STG   15,704(0,13)
0000D2A4 D707 D2C8 D2C8 000002C8 000002C8  19719          XC    712(8,13),712(13)
0000D2AA E3F0 C0D0 0004          0000CC50  19720          LG    15,@lit_2022_1011
0000D2B0 41F0 F2EA               000002EA  19721          LA    15,746(0,15)
0000D2B4 E3F0 D2D0 0024          000002D0  19722          STG   15,720(0,13)
0000D2BA 4110 D2B8               000002B8  19723          LA    1,696(0,13)
0000D2BE E3F0 C0C8 0004          0000CC48  19724          LG    15,@lit_2022_1012 ; rd_kafka_replyq_make
0000D2C4                                   19725 @@gen_label1404 DS    0H
0000D2C4 05EF                              19726          BALR  14,15
0000D2C6                                   19727 @@gen_label1405 DS    0H
0000D2C6 E360 D2B8 0024          000002B8  19728          STG   6,696(0,13)
0000D2CC D707 D2C0 D2C0 000002C0 000002C0  19729          XC    704(8,13),704(13)
0000D2D2 E3F0 B070 0004          00000070  19730          LG    15,112(0,11) ; offset of rko_u in rd_kafka_op_s
0000D2D8 E3F0 F000 0004          00000000  19731          LG    15,0(0,15)
0000D2DE E3F0 D2C8 0024          000002C8  19732          STG   15,712(0,13)
0000D2E4 E3F0 C0E8 0004          0000CC68  19733          LG    15,@lit_2022_1013 ; rd_kafka_txn_send_TxnOffsetCommitReq*
                                                                uest
0000D2EA E3F0 D2D0 0024          000002D0  19734          STG   15,720(0,13)
0000D2F0 E3B0 D2D8 0024          000002D8  19735          STG   11,728(0,13)
0000D2F6 B914 00F2                         19736          LGFR  15,2
0000D2FA E3F0 D2E0 0024          000002E0  19737          STG   15,736(0,13)
0000D300 D20F D2E8 D0B8 000002E8 000000B8  19738          MVC   744(16,13),184(13)
0000D306 E3F0 C0E0 0004          0000CC60  19739          LG    15,@lit_2022_1014 ; rd_kafka_txn_handle_TxnOffsetCommit
0000D30C E3F0 D2F8 0024          000002F8  19740          STG   15,760(0,13)
0000D312 E3B0 D300 0024          00000300  19741          STG   11,768(0,13)
0000D318 4110 D2B8               000002B8  19742          LA    1,696(0,13)
                                                                                                                           Page  394 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D31C E3F0 C0D8 0004          0000CC58  19743          LG    15,@lit_2022_1015 ; rd_kafka_coord_req
0000D322                                   19744 @@gen_label1406 DS    0H
0000D322 05EF                              19745          BALR  14,15
0000D324                                   19746 @@gen_label1407 DS    0H
                                           19747 * ***
                                           19748 * ***           } else {
0000D324 47F0 C85A               0000D3DA  19749          B     @L1439
0000D328                                   19750 @L1438   DS    0H
                                           19751 * ***
                                           19752 * ***                   rd_kafka_txn_curr_api_reply(
                                           19753 * ***                           rd_kafka_q_keep(rko->rko_replyq.q), ac\
                                           19754 * tions, err,
                                           19755 * ***                           "Failed to add offsets to transaction \
                                           19756 * on broker %s: "
                                           19757 * ***                           rd_kafka_broker_name(rkb),
                                           19758 * ***                           rd_kafka_err2str(err),
                                           19759 * ***                           (int)(request->rkbuf_ts_sent/1000));
0000D328 E3F0 B040 0004          00000040  19760          LG    15,64(0,11)
0000D32E E3F0 D2B8 0024          000002B8  19761          STG   15,696(0,13)
0000D334 4110 D2B8               000002B8  19762          LA    1,696(0,13)
0000D338 E3F0 C0F0 0004          0000CC70  19763          LG    15,@lit_2022_1016 ; rd_kafka_q_keep
0000D33E                                   19764 @@gen_label1408 DS    0H
0000D33E 05EF                              19765          BALR  14,15
0000D340                                   19766 @@gen_label1409 DS    0H
0000D340 B904 002F                         19767          LGR   2,15
0000D344 E340 D2B8 0024          000002B8  19768          STG   4,696(0,13)
0000D34A 4110 D2B8               000002B8  19769          LA    1,696(0,13)
0000D34E E3F0 C058 0004          0000CBD8  19770          LG    15,@lit_2022_971 ; rd_kafka_broker_name
0000D354                                   19771 @@gen_label1410 DS    0H
0000D354 05EF                              19772          BALR  14,15
0000D356                                   19773 @@gen_label1411 DS    0H
0000D356 B904 004F                         19774          LGR   4,15
0000D35A B914 00F3                         19775          LGFR  15,3
0000D35E E3F0 D2B8 0024          000002B8  19776          STG   15,696(0,13)
0000D364 4110 D2B8               000002B8  19777          LA    1,696(0,13)
0000D368 E3F0 C078 0004          0000CBF8  19778          LG    15,@lit_2022_977 ; rd_kafka_err2str
0000D36E                                   19779 @@gen_label1412 DS    0H
0000D36E 05EF                              19780          BALR  14,15
0000D370                                   19781 @@gen_label1413 DS    0H
0000D370 E320 D2B8 0024          000002B8  19782          STG   2,696(0,13)
0000D376 B914 0015                         19783          LGFR  1,5
0000D37A E310 D2C0 0024          000002C0  19784          STG   1,704(0,13)
0000D380 B914 0013                         19785          LGFR  1,3
0000D384 E310 D2C8 0024          000002C8  19786          STG   1,712(0,13)
                                           19787 * ***                           "%s (after %dms)",
0000D38A E310 C060 0004          0000CBE0  19788          LG    1,@lit_2022_972
0000D390 4110 1BD6               00000BD6  19789          LA    1,3030(0,1)
0000D394 E310 D2D0 0024          000002D0  19790          STG   1,720(0,13)
0000D39A E340 D2D8 0024          000002D8  19791          STG   4,728(0,13)
0000D3A0 E3F0 D2E0 0024          000002E0  19792          STG   15,736(0,13)
0000D3A6 E330 7158 0004          00000158  19793          LG    3,344(0,7)  ; offset of rkbuf_ts_sent in rd_kafka_buf_s
0000D3AC E320 C0A0 001D          0000CC20  19794          DSGF  2,@lit_2022_990
                                                                                                                           Page  395 
  Active Usings: @REGION_2022_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D3B2 B914 00F3                         19795          LGFR  15,3
0000D3B6 E3F0 D2E8 0024          000002E8  19796          STG   15,744(0,13)
0000D3BC 4110 D2B8               000002B8  19797          LA    1,696(0,13)
0000D3C0 E3F0 C0F8 0004          0000CC78  19798          LG    15,@lit_2022_1021 ; rd_kafka_txn_curr_api_reply
0000D3C6                                   19799 @@gen_label1414 DS    0H
0000D3C6 05EF                              19800          BALR  14,15
0000D3C8                                   19801 @@gen_label1415 DS    0H
                                           19802 * ***
                                           19803 * ***                   rd_kafka_op_destroy(rko);
0000D3C8 E3B0 D2B8 0024          000002B8  19804          STG   11,696(0,13)
0000D3CE 4110 D2B8               000002B8  19805          LA    1,696(0,13)
0000D3D2 E3F0 C100 0004          0000CC80  19806          LG    15,@lit_2022_1022 ; rd_kafka_op_destroy
0000D3D8                                   19807 @@gen_label1416 DS    0H
0000D3D8 05EF                              19808          BALR  14,15
0000D3DA                                   19809 @@gen_label1417 DS    0H
                                           19810 * ***           }
0000D3DA                                   19811 @L1439   DS    0H
                                           19812 * ***   }
0000D3DA                                   19813 @ret_lab_2022 DS 0H
                                           19814 * * **** Start of Epilogue
                                           19815          DCCEPIL
0000D3DA                                   19816+         ds 0h                                                          01-DCCEP
                                           19817+* Epilog
0000D3DA D707 D088 D088 00000088 00000088  19818+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000D3E0 E3D0 D080 0004          00000080  19819+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000D3E6 E3C0 D090 0004          00000090  19820+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000D3EC E3B0 C018 0004          00000018  19821+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000D3F2 E3C0 B010 0021          00000010  19822+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000D3F8 E3E0 D008 0004          00000008  19823+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000D3FE EB1C D020 0004          00000020  19824+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000D404 078E                              19825+         bcr 8,14                if same dsab, just return              01-DCCEP
0000D406 E3F0 D010 0024          00000010  19826+         stg 15,16(0,13)         save return code                       01-DCCEP
0000D40C E300 D018 0024          00000018  19827+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000D412 E3F0 D090 0004          00000090  19828+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000D418 E3F0 F018 0004          00000018  19829+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000D41E 47F0 F040               00000040  19830+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           19831+* End of Epilog
                                           19832 * * **** End of Epilogue
                                           19833          DROP  12
                                           19834 *
                                           19835 *   DSECT for automatic variables in "rd_kafka_txn_handle_AddOffsetsTo
                                           19836 *           Txn"
                                           19837 *      (FUNCTION #2022)
                                           19838 *
00000000                00000000 000002B4  19839 @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn DSECT
00000000                                   19840          DS    XL168
000000A8                                   19841 rd_kafka_txn_handle_$Add$Offsets$To$Txn#__len0#13 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  19842          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
000000A8                                   19843 rd_kafka_txn_handle_$Add$Offsets$To$Txn#__len2#12 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  19844          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
000000A8                                   19845 rd_kafka_txn_handle_$Add$Offsets$To$Txn#__len0#5 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  19846          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
                                                                                                                           Page  396 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                   19847 rd_kafka_txn_handle_$Add$Offsets$To$Txn#__len2#4 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  19848          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
000000A8                                   19849 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_throttle_time_ms#2 DS 1F ; _th*
                                                                rottle_time_ms
000000AC                000000AC 000000A8  19850          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
000000A8                                   19851 rd_kafka_txn_handle_$Add$Offsets$To$Txn#remains_ms#0 DS 1F ; remains_ms
000000AC                000000AC 000000A8  19852          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
000000A8                                   19853 rd_kafka_txn_handle_$Add$Offsets$To$Txn#actions#0 DS 1F ; actions
000000AC                000000AC 000000A8  19854          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+168
000000A8                                   19855 rd_kafka_txn_handle_$Add$Offsets$To$Txn#log_decode_errors#0 DS 1F ; log*
                                                                _decode_errors
000000AC                000000AC 000000AC  19856          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+172
000000AC                                   19857 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_v#3 DS 1F ; _v
000000B0                000000B0 000000B0  19858          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+176
000000B0                                   19859 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_v#11 DS 2XL1 ; _v
000000B2                000000B2 000000B2  19860          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+178
000000B2                                   19861 rd_kafka_txn_handle_$Add$Offsets$To$Txn#$Error$Code#0 DS 2XL1 ; ErrorCo*
                                                                de
000000B4                000000B4 000000B4  19862          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+180
000000B4                                   19863 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_logname#28 DS 256XL1 ; _lognam*
                                                                e
000001B4                000001B4 000000B4  19864          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+180
000000B4                                   19865 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_logname#26 DS 256XL1 ; _lognam*
                                                                e
000001B4                000001B4 000000B4  19866          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+180
000000B4                                   19867 rd_kafka_txn_handle_$Add$Offsets$To$Txn#__tmpstr#17 DS 256XL1 ; __tmpst*
                                                                r
000001B4                000001B4 000000B4  19868          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+180
000000B4                                   19869 rd_kafka_txn_handle_$Add$Offsets$To$Txn#__tmpstr#9 DS 256XL1 ; __tmpstr
000001B4                000001B4 000001B4  19870          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+436
000001B4                                   19871 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_logname#18 DS 256XL1 ; _lognam*
                                                                e
000002B4                000002B4 000001B4  19872          ORG   @AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn+436
000001B4                                   19873 rd_kafka_txn_handle_$Add$Offsets$To$Txn#_logname#10 DS 256XL1 ; _lognam*
                                                                e
                                           19874 *
0000D422                00000000 00014658  19875 @CODE    CSECT
                                           19876 *
                                           19877 *
                                           19878 *
                                           19879 * ....... start of rd_kafka_txn_op_send_offsets_to_transaction
0000D422                                   19880 @LNAME2023 DS  0H
0000D422 0000002B                          19881          DC    X'0000002B'
0000D426 99846D9281869281                  19882          DC    C'rd_kafka_txn_op_send_offsets_to_'
0000D446 A3998195A28183A3                  19883          DC    C'transaction'
0000D451 00                                19884          DC    X'00'
                                           19885 rd_kafka_txn_op_send_offsets_to_transaction DCCPRLG CINDEX=2023,BASER=1*
                                                                2,FRAME=808,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2023
                                           19886          macro
                                           19887          dccextrn &m
                                           19888          gblc    &$dccext(1000)
                                           19889          gbla    &$dccexti
                                                                                                                           Page  397 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19890          lcla    &i
                                           19891 &$dccext(&$dccexti+1) setc    '&m'
                                           19892 &i       seta    1
                                           19893 .loop    aif    (&i gt &$dccexti).around
                                           19894          aif    ('&$dccext(&i)' eq '&m').getout
                                           19895 &i       seta    &i+1
                                           19896          ago     .loop
                                           19897 .around  anop
                                           19898 &$dccexti seta &$dccexti+1
                                           19899          extrn  &m
                                           19900 .getout  anop
                                           19901          mend
0000D458                                   19902+$eye0270    ds    0d                                                    02-DCCCA
0000D458 C4C3C3                            19903+         dc cl3'DCC'                                                    02-DCCCA
0000D45B 01                                19904+         dc xl1'01' format one                                          02-DCCCA
0000D45C 00000000                          19905+         dc a(0)                                                        02-DCCCA
0000D460 000000000000D4CA                  19906+         dc ad(@PER_2023)                                               02-DCCCA
0000D468 0000000000000328                  19907+         dc ad(808)                                                     02-DCCCA
0000D470 0000000000000000                  19908+         dc ad(0)                                                       02-DCCCA
0000D478 0000000000001000                  19909+         dc ad(4096)                                                    02-DCCCA
0000D480 20                                19910+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000D481 03                                19911+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000D482 03                                19912+         dc al1(3)                                                      02-DCCCA
0000D483 08                                19913+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000D484 00                                19914+         dc bl.8'00000000'                                              02-DCCCA
0000D485 000000                            19915+         dc al3(0)                                                      02-DCCCA
0000D488 000000000000D422                  19916+         dc ad(@LNAME2023)                                              02-DCCCA
0000D490                                   19917+         ds 0d                                                          02-DCCCA
0000D490 000000000000D458                  19918+         dc ad($eye0270)                                                02-DCCCA
0000D498 0000000000000000                  19919+         dc ad(0)                                                       02-DCCCA
0000D4A0                                   19920+         ds    0d                                                       01-DCCPR
0000D4A0                                   19921+rd_kafka_txn_op_send_offsets_to_transaction ds 0d                       01-DCCPR
0000D4A0                                   19922+@REGION_2023_1 ds 0h                                                    01-DCCPR
0000D4A0 EBEC D008 0024          00000008  19923+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000D4A6 E3E0 D088 0004          00000088  19924+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000D4AC E3C0 D090 0004          00000090  19925+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000D4B2 B904 002E                         19926+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000D4B6 E3B0 C018 0004          00000018  19927+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000D4BC A7EB 0328               00000328  19928+         aghi  14,808              increase by frame size               01-DCCPR
0000D4C0 E3E0 C020 0021          00000020  19929+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000D4C6 4720 B020               00000020  19930+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000D4CA                                   19931+@PER_2023 ds   0h                                                       01-DCCPR
0000D4CA EBDE 2080 0024          00000080  19932+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000D4D0 E3C0 2090 0024          00000090  19933+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000D4D6 B904 00D2                         19934+         lgr   13,2                set real frame pointer               01-DCCPR
0000D4DA B904 00CF                         19935+         lgr   12,15               set base reg                         01-DCCPR
                        0000D4A0           19936+         using @REGION_2023_1,12                                        01-DCCPR
                                           19937 * ******* End of Prologue
                                           19938 * *
                                           19939 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
0000D4DE E330 1000 0004          00000000  19940          LG    3,0(0,1)    ; rk
0000D4E4 E340 1010 0004          00000010  19941          LG    4,16(0,1)   ; rko
                                                                                                                           Page  398 
  Active Usings: @REGION_2023_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           19942 * ***           char errstr[512];
                                           19943 * ***           rd_kafka_error_t *error;
                                           19944 * ***           rd_kafka_pid_t pid;
                                           19945 * ***
                                           19946 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000D4EA E55C 4020 FF3B          00000020  19947          CHSI  32(4),-197
0000D4F0 4770 C0D0               0000D570  19948          BNE   @L1440
                                           19949 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000D4F4 A7F9 0001               00000001  19950          LGHI  15,1        ; 1
0000D4F8 47F0 C2E6               0000D786  19951          B     @ret_lab_2023
0000D500                                   19952          DS    0D
0000D500 00000328                          19953 @FRAMESIZE_2023 DC F'808'
0000D504 00000000
0000D508 0000000000000000                  19954 @lit_2023_1054 DC AD(rwlock_wrlock)
0000D510 0000000000004700                  19955 @lit_2023_1055 DC AD(rd_kafka_txn_require_states0)
0000D518 0000000000000000                  19956 @lit_2023_1056 DC AD(rwlock_wrunlock)
0000D520 0000000000004340                  19957 @lit_2023_1058 DC AD(rd_kafka_idemp_get_pid0)
0000D528 0000000000004110                  19958 @lit_2023_1059 DC AD(rd_kafka_idemp_state2str)
0000D530 0000000000000000                  19959 @lit_2023_1061 DC AD(rd_kafka_error_new_retriable)
0000D538 0000000000014A98                  19960 @lit_2023_1060 DC AD(@strings@)
0000D540 0000000000002D40                  19961 @lit_2023_1063 DC AD(rd_kafka_replyq_make)
0000D548 0000000000014658                  19962 @lit_2023_1062 DC AD(@DATA)
0000D550 0000000000000000                  19963 @lit_2023_1065 DC AD(rd_kafka_$Add$Offsets$To$Txn$Request)
0000D558 000000000000C310                  19964 @lit_2023_1064 DC AD(rd_kafka_txn_handle_$Add$Offsets$To$Txn)
0000D560 0000000000001D48                  19965 @lit_2023_1069 DC AD(rd_kafka_q_keep)
0000D568 00000000000058A0                  19966 @lit_2023_1070 DC AD(rd_kafka_txn_curr_api_reply_error)
0000D570                                   19967 @L1440   DS    0H
                                           19968 * ***
                                           19969 * ***           *errstr = '\0';
0000D570 9200 D0C0      000000C0 00000000  19970          MVI   192(13),0
                                           19971 * ***
                                           19972 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000D574 41F0 39A0               000009A0  19973          LA    15,2464(0,3)
0000D578 E3F0 D2D0 0024          000002D0  19974          STG   15,720(0,13)
0000D57E 4110 D2D0               000002D0  19975          LA    1,720(0,13)
0000D582 E3F0 C068 0004          0000D508  19976          LG    15,@lit_2023_1054 ; rwlock_wrlock
0000D588                                   19977 @@gen_label1419 DS    0H
0000D588 05EF                              19978          BALR  14,15
0000D58A                                   19979 @@gen_label1420 DS    0H
                                           19980 * ***
                                           19981 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           19982 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_IN_TRANSACTION, -1 }))) {
0000D58A E54C D0A8 0004          000000A8  19983          MVHI  168(13),4
0000D590 E54C D0AC FFFF          000000AC  19984          MVHI  172(13),-1
0000D596 E330 D2D0 0024          000002D0  19985          STG   3,720(0,13)
0000D59C 41F0 D0A8               000000A8  19986          LA    15,168(0,13)
0000D5A0 E3F0 D2D8 0024          000002D8  19987          STG   15,728(0,13)
0000D5A6 4110 D2D0               000002D0  19988          LA    1,720(0,13)
0000D5AA E3F0 C070 0004          0000D510  19989          LG    15,@lit_2023_1055 ; rd_kafka_txn_require_states0
0000D5B0                                   19990 @@gen_label1421 DS    0H
0000D5B0 05EF                              19991          BALR  14,15
0000D5B2                                   19992 @@gen_label1422 DS    0H
                                                                                                                           Page  399 
  Active Usings: @REGION_2023_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D5B2 B902 002F                         19993          LTGR  2,15        ; error
0000D5B6 4780 C134               0000D5D4  19994          BZ    @L1441
                                           19995 * ***
                                           19996 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000D5BA 41F0 39A0               000009A0  19997          LA    15,2464(0,3)
0000D5BE E3F0 D2D0 0024          000002D0  19998          STG   15,720(0,13)
0000D5C4 4110 D2D0               000002D0  19999          LA    1,720(0,13)
0000D5C8 E3F0 C078 0004          0000D518  20000          LG    15,@lit_2023_1056 ; rwlock_wrunlock
0000D5CE                                   20001 @@gen_label1424 DS    0H
0000D5CE 05EF                              20002          BALR  14,15
0000D5D0                                   20003 @@gen_label1425 DS    0H
                                           20004 * ***                   goto err;
0000D5D0 47F0 C2B2               0000D752  20005          B     @_err@2023@8
                                           20006 * ***           }
0000D5D4                                   20007 @L1441   DS    0H
                                           20008 * ***
                                           20009 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000D5D4 41F0 39A0               000009A0  20010          LA    15,2464(0,3)
0000D5D8 E3F0 D2D0 0024          000002D0  20011          STG   15,720(0,13)
0000D5DE 4110 D2D0               000002D0  20012          LA    1,720(0,13)
0000D5E2 E3F0 C078 0004          0000D518  20013          LG    15,@lit_2023_1056 ; rwlock_wrunlock
0000D5E8                                   20014 @@gen_label1426 DS    0H
0000D5E8 05EF                              20015          BALR  14,15
0000D5EA                                   20016 @@gen_label1427 DS    0H
                                           20017 * ***
                                           20018 * ***           pid = rd_kafka_idemp_get_pid0(rk, 0);
0000D5EA 41F0 D2C0               000002C0  20019          LA    15,704(0,13)
0000D5EE E3F0 D2D0 0024          000002D0  20020          STG   15,720(0,13)
0000D5F4 E330 D2D8 0024          000002D8  20021          STG   3,728(0,13)
0000D5FA D707 D2E0 D2E0 000002E0 000002E0  20022          XC    736(8,13),736(13)
0000D600 4110 D2D0               000002D0  20023          LA    1,720(0,13)
0000D604 E3F0 C080 0004          0000D520  20024          LG    15,@lit_2023_1058 ; rd_kafka_idemp_get_pid0
0000D60A                                   20025 @@gen_label1428 DS    0H
0000D60A 05EF                              20026          BALR  14,15
0000D60C                                   20027 @@gen_label1429 DS    0H
0000D60C D20F D0B0 D2C0 000000B0 000002C0  20028          MVC   176(16,13),704(13)
                                           20029 * ***           if (!((pid).id != -1)) {
0000D612 E558 D0B0 FFFF          000000B0  20030          CGHSI 176(13),-1
0000D618 4770 C1C4               0000D664  20031          BNE   @L1442
                                           20032 * ***                   do {} while (0);
0000D61C                                   20033 @L1443   DS    0H
                                           20034 * ***                   error = rd_kafka_error_new_retriable(
                                           20035 * ***                           RD_KAFKA_RESP_ERR__STATE,
                                           20036 * ***                           "No PID available (idempotence state %\
                                           20037 * s)",
                                           20038 * ***                           rd_kafka_idemp_state2str(rk->rk_eos.id\
                                           20039 * emp_state));
0000D61C E3F0 3C70 0014          00000C70  20040          LGF   15,3184(0,3)
0000D622 E3F0 D2D0 0024          000002D0  20041          STG   15,720(0,13)
0000D628 4110 D2D0               000002D0  20042          LA    1,720(0,13)
0000D62C E3F0 C088 0004          0000D528  20043          LG    15,@lit_2023_1059 ; rd_kafka_idemp_state2str
0000D632                                   20044 @@gen_label1431 DS    0H
                                                                                                                           Page  400 
  Active Usings: @REGION_2023_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D632 05EF                              20045          BALR  14,15
0000D634                                   20046 @@gen_label1432 DS    0H
0000D634 E548 D2D0 FF54          000002D0  20047          MVGHI 720(13),-172
0000D63A E310 C098 0004          0000D538  20048          LG    1,@lit_2023_1060
0000D640 4110 1C1A               00000C1A  20049          LA    1,3098(0,1)
0000D644 E310 D2D8 0024          000002D8  20050          STG   1,728(0,13)
0000D64A E3F0 D2E0 0024          000002E0  20051          STG   15,736(0,13)
0000D650 4110 D2D0               000002D0  20052          LA    1,720(0,13)
0000D654 E3F0 C090 0004          0000D530  20053          LG    15,@lit_2023_1061 ; rd_kafka_error_new_retriable
0000D65A                                   20054 @@gen_label1433 DS    0H
0000D65A 05EF                              20055          BALR  14,15
0000D65C                                   20056 @@gen_label1434 DS    0H
0000D65C B904 002F                         20057          LGR   2,15        ; error
                                           20058 * ***                   goto err;
0000D660 47F0 C2B2               0000D752  20059          B     @_err@2023@8
                                           20060 * ***           }
0000D664                                   20061 @L1442   DS    0H
                                           20062 * ***
                                           20063 * ***
                                           20064 * ***
                                           20065 * ***
                                           20066 * ***
                                           20067 * ***           err = rd_kafka_AddOffsetsToTxnRequest(
                                           20068 * ***                   rk->rk_eos.txn_coord,
                                           20069 * ***                   rk->rk_conf.eos.transactional_id,
                                           20070 * ***                   pid,
                                           20071 * ***                   rko->rko_u.txn.cgmetadata->group_id,
                                           20072 * ***                   errstr, sizeof(errstr),
                                           20073 * ***                   rd_kafka_replyq_make(rk->rk_ops,0,__FUNCTION__\
                                           20074 * ),
                                           20075 * ***                   rd_kafka_txn_handle_AddOffsetsToTxn,
                                           20076 * ***                   rko);
0000D664 41F0 D2C0               000002C0  20077          LA    15,704(0,13)
0000D668 E3F0 D2D0 0024          000002D0  20078          STG   15,720(0,13)
0000D66E E3F0 3008 0004          00000008  20079          LG    15,8(0,3)
0000D674 E3F0 D2D8 0024          000002D8  20080          STG   15,728(0,13)
0000D67A D707 D2E0 D2E0 000002E0 000002E0  20081          XC    736(8,13),736(13)
0000D680 E3F0 C0A8 0004          0000D548  20082          LG    15,@lit_2023_1062
0000D686 41F0 F30E               0000030E  20083          LA    15,782(0,15)
0000D68A E3F0 D2E8 0024          000002E8  20084          STG   15,744(0,13)
0000D690 4110 D2D0               000002D0  20085          LA    1,720(0,13)
0000D694 E3F0 C0A0 0004          0000D540  20086          LG    15,@lit_2023_1063 ; rd_kafka_replyq_make
0000D69A                                   20087 @@gen_label1435 DS    0H
0000D69A 05EF                              20088          BALR  14,15
0000D69C                                   20089 @@gen_label1436 DS    0H
0000D69C E3F0 3D48 0004          00000D48  20090          LG    15,3400(0,3)
0000D6A2 E3F0 D2D0 0024          000002D0  20091          STG   15,720(0,13)
0000D6A8 E3F0 37E8 0004          000007E8  20092          LG    15,2024(0,3)
0000D6AE E3F0 D2D8 0024          000002D8  20093          STG   15,728(0,13)
0000D6B4 D20F D2E0 D0B0 000002E0 000000B0  20094          MVC   736(16,13),176(13)
0000D6BA E3F0 4070 0004          00000070  20095          LG    15,112(0,4) ; offset of rko_u in rd_kafka_op_s
0000D6C0 E3F0 F000 0004          00000000  20096          LG    15,0(0,15)
                                                                                                                           Page  401 
  Active Usings: @REGION_2023_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D6C6 E3F0 D2F0 0024          000002F0  20097          STG   15,752(0,13)
0000D6CC 41F0 D0C0               000000C0  20098          LA    15,192(0,13)
0000D6D0 E3F0 D2F8 0024          000002F8  20099          STG   15,760(0,13)
0000D6D6 E548 D300 0200          00000300  20100          MVGHI 768(13),512
0000D6DC D20F D308 D2C0 00000308 000002C0  20101          MVC   776(16,13),704(13)
0000D6E2 E3F0 C0B8 0004          0000D558  20102          LG    15,@lit_2023_1064 ; rd_kafka_txn_handle_AddOffsetsToTxn
0000D6E8 E3F0 D318 0024          00000318  20103          STG   15,792(0,13)
0000D6EE E340 D320 0024          00000320  20104          STG   4,800(0,13)
0000D6F4 4110 D2D0               000002D0  20105          LA    1,720(0,13)
0000D6F8 E3F0 C0B0 0004          0000D550  20106          LG    15,@lit_2023_1065 ; rd_kafka_AddOffsetsToTxnRequest
0000D6FE                                   20107 @@gen_label1437 DS    0H
0000D6FE 05EF                              20108          BALR  14,15
0000D700                                   20109 @@gen_label1438 DS    0H
                                           20110 * ***
                                           20111 * ***           if (err) {
0000D700 12FF                              20112          LTR   15,15
0000D702 4780 C29E               0000D73E  20113          BZ    @L1446
                                           20114 * ***                   error = rd_kafka_error_new_retriable(err, "%s"\
                                           20115 * , errstr);
0000D706 B914 00FF                         20116          LGFR  15,15
0000D70A E3F0 D2D0 0024          000002D0  20117          STG   15,720(0,13)
0000D710 E3F0 C098 0004          0000D538  20118          LG    15,@lit_2023_1060
0000D716 41F0 F122               00000122  20119          LA    15,290(0,15)
0000D71A E3F0 D2D8 0024          000002D8  20120          STG   15,728(0,13)
0000D720 41F0 D0C0               000000C0  20121          LA    15,192(0,13)
0000D724 E3F0 D2E0 0024          000002E0  20122          STG   15,736(0,13)
0000D72A 4110 D2D0               000002D0  20123          LA    1,720(0,13)
0000D72E E3F0 C090 0004          0000D530  20124          LG    15,@lit_2023_1061 ; rd_kafka_error_new_retriable
0000D734                                   20125 @@gen_label1440 DS    0H
0000D734 05EF                              20126          BALR  14,15
0000D736                                   20127 @@gen_label1441 DS    0H
0000D736 B904 002F                         20128          LGR   2,15        ; error
                                           20129 * ***                   goto err;
0000D73A 47F0 C2B2               0000D752  20130          B     @_err@2023@8
                                           20131 * ***           }
0000D73E                                   20132 @L1446   DS    0H
                                           20133 * ***
                                           20134 * ***           rk->rk_eos.txn_req_cnt++;
0000D73E 58F0 3E10               00000E10  20135          L     15,3600(0,3)
0000D742 A7FA 0001               00000001  20136          AHI   15,1
0000D746 50F0 3E10               00000E10  20137          ST    15,3600(0,3)
                                           20138 * ***
                                           20139 * ***           return RD_KAFKA_OP_RES_KEEP;
0000D74A A7F9 0002               00000002  20140          LGHI  15,2        ; 2
0000D74E 47F0 C2E6               0000D786  20141          B     @ret_lab_2023
                                           20142 * ***
                                           20143 * ***    err:
                                           20144 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           20145 * >rko_replyq.q),
0000D752                                   20146 @_err@2023@8 DS 0H
                                           20147 * ***                                             error);
0000D752 E3F0 4040 0004          00000040  20148          LG    15,64(0,4)
                                                                                                                           Page  402 
  Active Usings: @REGION_2023_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D758 E3F0 D2D0 0024          000002D0  20149          STG   15,720(0,13)
0000D75E 4110 D2D0               000002D0  20150          LA    1,720(0,13)
0000D762 E3F0 C0C0 0004          0000D560  20151          LG    15,@lit_2023_1069 ; rd_kafka_q_keep
0000D768                                   20152 @@gen_label1442 DS    0H
0000D768 05EF                              20153          BALR  14,15
0000D76A                                   20154 @@gen_label1443 DS    0H
0000D76A E3F0 D2D0 0024          000002D0  20155          STG   15,720(0,13)
0000D770 E320 D2D8 0024          000002D8  20156          STG   2,728(0,13)
0000D776 4110 D2D0               000002D0  20157          LA    1,720(0,13)
0000D77A E3F0 C0C8 0004          0000D568  20158          LG    15,@lit_2023_1070 ; rd_kafka_txn_curr_api_reply_error
0000D780                                   20159 @@gen_label1444 DS    0H
0000D780 05EF                              20160          BALR  14,15
0000D782                                   20161 @@gen_label1445 DS    0H
                                           20162 * ***
                                           20163 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000D782 A7F9 0001               00000001  20164          LGHI  15,1        ; 1
                                           20165 * ***   }
0000D786                                   20166 @ret_lab_2023 DS 0H
                                           20167 * * **** Start of Epilogue
                                           20168          DCCEPIL
0000D786                                   20169+         ds 0h                                                          01-DCCEP
                                           20170+* Epilog
0000D786 D707 D088 D088 00000088 00000088  20171+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000D78C E3D0 D080 0004          00000080  20172+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000D792 E3C0 D090 0004          00000090  20173+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000D798 E3B0 C018 0004          00000018  20174+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000D79E E3C0 B010 0021          00000010  20175+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000D7A4 E3E0 D008 0004          00000008  20176+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000D7AA EB1C D020 0004          00000020  20177+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000D7B0 078E                              20178+         bcr 8,14                if same dsab, just return              01-DCCEP
0000D7B2 E3F0 D010 0024          00000010  20179+         stg 15,16(0,13)         save return code                       01-DCCEP
0000D7B8 E300 D018 0024          00000018  20180+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000D7BE E3F0 D090 0004          00000090  20181+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000D7C4 E3F0 F018 0004          00000018  20182+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000D7CA 47F0 F040               00000040  20183+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           20184+* End of Epilog
                                           20185 * * **** End of Epilogue
                                           20186          DROP  12
                                           20187 *
                                           20188 *   DSECT for automatic variables in "rd_kafka_txn_op_send_offsets_to_
                                           20189 *           transaction"
                                           20190 *      (FUNCTION #2023)
                                           20191 *
00000000                00000000 000002C0  20192 @AUTO#rd_kafka_txn_op_send_offsets_to_transaction DSECT
00000000                                   20193          DS    XL168
000000A8                                   20194 rd_kafka_txn_op_send_offsets_to_transaction#__cl4#0 DS 8XL1 ; __cl4
000000B0                000000B0 000000A8  20195          ORG   @AUTO#rd_kafka_txn_op_send_offsets_to_transaction+168
000000A8                                   20196 rd_kafka_txn_op_send_offsets_to_transaction#err#0 DS 1F ; err
000000AC                000000AC 000000B0  20197          ORG   @AUTO#rd_kafka_txn_op_send_offsets_to_transaction+176
000000B0                                   20198 rd_kafka_txn_op_send_offsets_to_transaction#pid#0 DS 16XL1 ; pid
000000C0                000000C0 000000C0  20199          ORG   @AUTO#rd_kafka_txn_op_send_offsets_to_transaction+192
000000C0                                   20200 rd_kafka_txn_op_send_offsets_to_transaction#errstr#0 DS 512XL1 ; errstr
                                                                                                                           Page  403 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           20201 *
0000D7CE                00000000 00014658  20202 @CODE    CSECT
                                           20203 *
                                           20204 *
                                           20205 *
                                           20206 * ....... start of rd_kafka_send_offsets_to_transaction
                                           20207 rd_kafka_send_offsets_to_transaction ALIAS X'99846D92818692816DA2859584*
                                                                6D968686A285A3A26DA3966DA3998195A28183A3899695'
0000D7CE                                   20208 @LNAME1082 DS  0H
0000D7CE 00000024                          20209          DC    X'00000024'
0000D7D2 99846D9281869281                  20210          DC    C'rd_kafka_send_offsets_to_transac'
0000D7F2 A3899695                          20211          DC    C'tion'
0000D7F6 00                                20212          DC    X'00'
                                           20213 rd_kafka_send_offsets_to_transaction DCCPRLG CINDEX=1082,BASER=12,FRAME*
                                                                =216,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1082
                                           20214          macro
                                           20215          dccextrn &m
                                           20216          gblc    &$dccext(1000)
                                           20217          gbla    &$dccexti
                                           20218          lcla    &i
                                           20219 &$dccext(&$dccexti+1) setc    '&m'
                                           20220 &i       seta    1
                                           20221 .loop    aif    (&i gt &$dccexti).around
                                           20222          aif    ('&$dccext(&i)' eq '&m').getout
                                           20223 &i       seta    &i+1
                                           20224          ago     .loop
                                           20225 .around  anop
                                           20226 &$dccexti seta &$dccexti+1
                                           20227          extrn  &m
                                           20228 .getout  anop
                                           20229          mend
0000D7F8                                   20230+$eye0273    ds    0d                                                    02-DCCCA
0000D7F8 C4C3C3                            20231+         dc cl3'DCC'                                                    02-DCCCA
0000D7FB 01                                20232+         dc xl1'01' format one                                          02-DCCCA
0000D7FC 00000000                          20233+         dc a(0)                                                        02-DCCCA
0000D800 000000000000D86A                  20234+         dc ad(@PER_1082)                                               02-DCCCA
0000D808 00000000000000D8                  20235+         dc ad(216)                                                     02-DCCCA
0000D810 0000000000000000                  20236+         dc ad(0)                                                       02-DCCCA
0000D818 0000000000001000                  20237+         dc ad(4096)                                                    02-DCCCA
0000D820 20                                20238+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000D821 03                                20239+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000D822 03                                20240+         dc al1(3)                                                      02-DCCCA
0000D823 08                                20241+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000D824 00                                20242+         dc bl.8'00000000'                                              02-DCCCA
0000D825 000000                            20243+         dc al3(0)                                                      02-DCCCA
0000D828 000000000000D7CE                  20244+         dc ad(@LNAME1082)                                              02-DCCCA
0000D830                                   20245+         ds 0d                                                          02-DCCCA
0000D830 000000000000D7F8                  20246+         dc ad($eye0273)                                                02-DCCCA
0000D838 0000000000000000                  20247+         dc ad(0)                                                       02-DCCCA
0000D840                                   20248+         ds    0d                                                       01-DCCPR
                                           20249+         entry rd_kafka_send_offsets_to_transaction                     01-DCCPR
0000D840                                   20250+rd_kafka_send_offsets_to_transaction ds 0d                              01-DCCPR
                                                                                                                           Page  404 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D840                                   20251+@REGION_1082_1 ds 0h                                                    01-DCCPR
0000D840 EBEC D008 0024          00000008  20252+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000D846 E3E0 D088 0004          00000088  20253+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000D84C E3C0 D090 0004          00000090  20254+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000D852 B904 002E                         20255+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000D856 E3B0 C018 0004          00000018  20256+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000D85C A7EB 00D8               000000D8  20257+         aghi  14,216              increase by frame size               01-DCCPR
0000D860 E3E0 C020 0021          00000020  20258+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000D866 4720 B020               00000020  20259+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000D86A                                   20260+@PER_1082 ds   0h                                                       01-DCCPR
0000D86A EBDE 2080 0024          00000080  20261+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000D870 E3C0 2090 0024          00000090  20262+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000D876 B904 00D2                         20263+         lgr   13,2                set real frame pointer               01-DCCPR
0000D87A B904 00CF                         20264+         lgr   12,15               set base reg                         01-DCCPR
                        0000D840           20265+         using @REGION_1082_1,12                                        01-DCCPR
0000D87E B904 0041                         20266          LGR   4,1         ; ptr to parm area
                                           20267 * ******* End of Prologue
                                           20268 * *
0000D882 E330 4000 0004          00000000  20269          LG    3,0(0,4)    ; rk
0000D888 5820 401C               0000001C  20270          L     2,28(0,4)   ; timeout_ms
                                           20271 * ***           rd_kafka_error_t *error;
                                           20272 * ***           rd_kafka_op_t *rko;
                                           20273 * ***           rd_kafka_topic_partition_list_t *valid_offsets;
                                           20274 * ***
                                           20275 * ***           if ((error = rd_kafka_ensure_transactional(rk)))
0000D88C E330 D0B0 0024          000000B0  20276          STG   3,176(0,13)
0000D892 4110 D0B0               000000B0  20277          LA    1,176(0,13)
0000D896 E3F0 C078 0004          0000D8B8  20278          LG    15,@lit_1082_1073 ; rd_kafka_ensure_transactional
0000D89C                                   20279 @@gen_label1446 DS    0H
0000D89C 05EF                              20280          BALR  14,15
0000D89E                                   20281 @@gen_label1447 DS    0H
0000D89E B902 001F                         20282          LTGR  1,15
0000D8A2 4780 C0E0               0000D920  20283          BZ    @L1447
                                           20284 * ***                   return error;
0000D8A6 47F0 C222               0000DA62  20285          B     @ret_lab_1082
0000D8B0                                   20286          DS    0D
0000D8B0 000000D8                          20287 @FRAMESIZE_1082 DC F'216'
0000D8B4 00000000
0000D8B8 0000000000004588                  20288 @lit_1082_1073 DC AD(rd_kafka_ensure_transactional)
0000D8C0 0000000000000000                  20289 @lit_1082_1075 DC AD(rd_kafka_error_new)
0000D8C8 0000000000014A98                  20290 @lit_1082_1074 DC AD(@strings@)
0000D8D0 0000000000000000                  20291 @lit_1082_1077 DC AD(rd_kafka_topic_partition_list_match)
0000D8D8 0000000000003F98                  20292 @lit_1082_1076 DC AD(rd_kafka_topic_partition_match_valid_offset)
0000D8E0 0000000000000000                  20293 @lit_1082_1078 DC AD(rd_kafka_topic_partition_list_destroy)
0000D8E8 0000000000000000                  20294 @lit_1082_1080 DC AD(rd_kafka_topic_partition_list_sort_by_topic)
0000D8F0 0000000000000000                  20295 @lit_1082_1082 DC AD(rd_kafka_op_new_cb)
0000D8F8 000000000000D4A0                  20296 @lit_1082_1081 DC AD(rd_kafka_txn_op_send_offsets_to_transaction)
0000D900 0000000000000000                  20297 @lit_1082_1083 DC AD(rd_kafka_consumer_group_metadata_dup)
0000D908 0000000000001268                  20298 @lit_1082_1084 DC AD(rd_timeout_init)
0000D910 000000000000A0A0                  20299 @lit_1082_1086 DC AD(rd_kafka_txn_curr_api_req)
0000D918 0000000000014658                  20300 @lit_1082_1085 DC AD(@DATA)
0000D920                                   20301 @L1447   DS    0H
                                                                                                                           Page  405 
  Active Usings: @REGION_1082_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           20302 * ***
                                           20303 * ***           if (!cgmetadata || !offsets)
0000D920 E360 4010 0004          00000010  20304          LG    6,16(0,4)   ; cgmetadata
0000D926 B902 00F6                         20305          LTGR  15,6
0000D92A 4780 C0FC               0000D93C  20306          BZ    @L1449
0000D92E E3F0 4008 0004          00000008  20307          LG    15,8(0,4)   ; offsets
0000D934 B902 001F                         20308          LTGR  1,15
0000D938 4770 C122               0000D962  20309          BNZ   @L1448
0000D93C                                   20310 @L1449   DS    0H
                                           20311 * ***                   return rd_kafka_error_new(
                                           20312 * ***                           RD_KAFKA_RESP_ERR__INVALID_ARG,
                                           20313 * ***                           "cgmetadata and offsets are required p\
                                           20314 * arameters");
0000D93C E548 D0B0 FF46          000000B0  20315          MVGHI 176(13),-186
0000D942 E3F0 C088 0004          0000D8C8  20316          LG    15,@lit_1082_1074
0000D948 41F0 FC42               00000C42  20317          LA    15,3138(0,15)
0000D94C E3F0 D0B8 0024          000000B8  20318          STG   15,184(0,13)
0000D952 4110 D0B0               000000B0  20319          LA    1,176(0,13)
0000D956 E3F0 C080 0004          0000D8C0  20320          LG    15,@lit_1082_1075 ; rd_kafka_error_new
0000D95C                                   20321 @@gen_label1451 DS    0H
0000D95C 05EF                              20322          BALR  14,15
0000D95E                                   20323 @@gen_label1452 DS    0H
0000D95E 47F0 C222               0000DA62  20324          B     @ret_lab_1082
0000D962                                   20325 @L1448   DS    0H
                                           20326 * ***
                                           20327 * ***           valid_offsets = rd_kafka_topic_partition_list_match(
                                           20328 * ***                   offsets, rd_kafka_topic_partition_match_valid_\
                                           20329 * offset, ((void *)0));
0000D962 E3F0 D0B0 0024          000000B0  20330          STG   15,176(0,13)
0000D968 E3F0 C098 0004          0000D8D8  20331          LG    15,@lit_1082_1076 ; rd_kafka_topic_partition_match_valid*
                                                                _offset
0000D96E E3F0 D0B8 0024          000000B8  20332          STG   15,184(0,13)
0000D974 D707 D0C0 D0C0 000000C0 000000C0  20333          XC    192(8,13),192(13)
0000D97A 4110 D0B0               000000B0  20334          LA    1,176(0,13)
0000D97E E3F0 C090 0004          0000D8D0  20335          LG    15,@lit_1082_1077 ; rd_kafka_topic_partition_list_match
0000D984                                   20336 @@gen_label1453 DS    0H
0000D984 05EF                              20337          BALR  14,15
0000D986                                   20338 @@gen_label1454 DS    0H
0000D986 B904 005F                         20339          LGR   5,15
                                           20340 * ***
                                           20341 * ***           if (valid_offsets->cnt == 0) {
0000D98A E55C 5000 0000          00000000  20342          CHSI  0(5),0
0000D990 4770 C16E               0000D9AE  20343          BNE   @L1450
                                           20344 * ***
                                           20345 * ***
                                           20346 * ***                   rd_kafka_topic_partition_list_destroy(valid_of\
                                           20347 * fsets);
0000D994 E350 D0B0 0024          000000B0  20348          STG   5,176(0,13)
0000D99A 4110 D0B0               000000B0  20349          LA    1,176(0,13)
0000D99E E3F0 C0A0 0004          0000D8E0  20350          LG    15,@lit_1082_1078 ; rd_kafka_topic_partition_list_destro*
                                                                y
0000D9A4                                   20351 @@gen_label1456 DS    0H
                                                                                                                           Page  406 
  Active Usings: @REGION_1082_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000D9A4 05EF                              20352          BALR  14,15
0000D9A6                                   20353 @@gen_label1457 DS    0H
                                           20354 * ***                   return ((void *)0);
0000D9A6 A7F9 0000               00000000  20355          LGHI  15,0        ; 0
0000D9AA 47F0 C222               0000DA62  20356          B     @ret_lab_1082
                                           20357 * ***           }
0000D9AE                                   20358 @L1450   DS    0H
                                           20359 * ***
                                           20360 * ***           rd_kafka_topic_partition_list_sort_by_topic(valid_offs\
                                           20361 * ets);
0000D9AE E350 D0B0 0024          000000B0  20362          STG   5,176(0,13)
0000D9B4 4110 D0B0               000000B0  20363          LA    1,176(0,13)
0000D9B8 E3F0 C0A8 0004          0000D8E8  20364          LG    15,@lit_1082_1080 ; rd_kafka_topic_partition_list_sort_b*
                                                                y_topic
0000D9BE                                   20365 @@gen_label1458 DS    0H
0000D9BE 05EF                              20366          BALR  14,15
0000D9C0                                   20367 @@gen_label1459 DS    0H
                                           20368 * ***
                                           20369 * ***           rko = rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           20370 * ***                                    rd_kafka_txn_op_send_offsets_\
                                           20371 * to_transaction);
0000D9C0 E330 D0B0 0024          000000B0  20372          STG   3,176(0,13)
0000D9C6 E548 D0B8 002F          000000B8  20373          MVGHI 184(13),47
0000D9CC E3F0 C0B8 0004          0000D8F8  20374          LG    15,@lit_1082_1081 ; rd_kafka_txn_op_send_offsets_to_tran*
                                                                saction
0000D9D2 E3F0 D0C0 0024          000000C0  20375          STG   15,192(0,13)
0000D9D8 4110 D0B0               000000B0  20376          LA    1,176(0,13)
0000D9DC E3F0 C0B0 0004          0000D8F0  20377          LG    15,@lit_1082_1082 ; rd_kafka_op_new_cb
0000D9E2                                   20378 @@gen_label1460 DS    0H
0000D9E2 05EF                              20379          BALR  14,15
0000D9E4                                   20380 @@gen_label1461 DS    0H
0000D9E4 B904 004F                         20381          LGR   4,15
                                           20382 * ***           rko->rko_u.txn.offsets = valid_offsets;
0000D9E8 E350 4090 0024          00000090  20383          STG   5,144(0,4)  ; offset of offsets in 0000084
                                           20384 * ***           rko->rko_u.txn.cgmetadata =
                                           20385 * ***                   rd_kafka_consumer_group_metadata_dup(cgmetadat\
                                           20386 * a);
0000D9EE E360 D0B0 0024          000000B0  20387          STG   6,176(0,13)
0000D9F4 4110 D0B0               000000B0  20388          LA    1,176(0,13)
0000D9F8 E3F0 C0C0 0004          0000D900  20389          LG    15,@lit_1082_1083 ; rd_kafka_consumer_group_metadata_dup
0000D9FE                                   20390 @@gen_label1462 DS    0H
0000D9FE 05EF                              20391          BALR  14,15
0000DA00                                   20392 @@gen_label1463 DS    0H
0000DA00 E3F0 4070 0024          00000070  20393          STG   15,112(0,4)
                                           20394 * ***           if (timeout_ms > rk->rk_conf.eos.transaction_timeout_m\
                                           20395 * s)
0000DA06 5920 37F0               000007F0  20396          C     2,2032(0,3)
0000DA0A 47D0 C1D2               0000DA12  20397          BNH   @L1451
                                           20398 * ***                   timeout_ms = rk->rk_conf.eos.transaction_timeo\
                                           20399 * ut_ms;
0000DA0E 5820 37F0               000007F0  20400          L     2,2032(0,3) ; offset of transaction_timeout_ms in 000010*
                                                                5
                                                                                                                           Page  407 
  Active Usings: @REGION_1082_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DA12                                   20401 @L1451   DS    0H
                                           20402 * ***           rko->rko_u.txn.abs_timeout = rd_timeout_init(timeout_m\
                                           20403 * s);
0000DA12 B914 00F2                         20404          LGFR  15,2
0000DA16 E3F0 D0B0 0024          000000B0  20405          STG   15,176(0,13)
0000DA1C 4110 D0B0               000000B0  20406          LA    1,176(0,13)
0000DA20 E3F0 C0C8 0004          0000D908  20407          LG    15,@lit_1082_1084 ; rd_timeout_init
0000DA26                                   20408 @@gen_label1465 DS    0H
0000DA26 05EF                              20409          BALR  14,15
0000DA28                                   20410 @@gen_label1466 DS    0H
0000DA28 E3F0 4088 0024          00000088  20411          STG   15,136(0,4)
                                           20412 * ***
                                           20413 * ***           return rd_kafka_txn_curr_api_req(
                                           20414 * ***                   rk, __FUNCTION__, rko,
                                           20415 * ***                   -1,
                                           20416 * ***                   0x2);
0000DA2E E330 D0B0 0024          000000B0  20417          STG   3,176(0,13)
0000DA34 E3F0 C0D8 0004          0000D918  20418          LG    15,@lit_1082_1085
0000DA3A 41F0 F33A               0000033A  20419          LA    15,826(0,15)
0000DA3E E3F0 D0B8 0024          000000B8  20420          STG   15,184(0,13)
0000DA44 E340 D0C0 0024          000000C0  20421          STG   4,192(0,13)
0000DA4A E548 D0C8 FFFF          000000C8  20422          MVGHI 200(13),-1
0000DA50 E548 D0D0 0002          000000D0  20423          MVGHI 208(13),2
0000DA56 4110 D0B0               000000B0  20424          LA    1,176(0,13)
0000DA5A E3F0 C0D0 0004          0000D910  20425          LG    15,@lit_1082_1086 ; rd_kafka_txn_curr_api_req
0000DA60                                   20426 @@gen_label1467 DS    0H
0000DA60 05EF                              20427          BALR  14,15
0000DA62                                   20428 @@gen_label1468 DS    0H
                                           20429 * ***   }
0000DA62                                   20430 @ret_lab_1082 DS 0H
                                           20431 * * **** Start of Epilogue
                                           20432          DCCEPIL
0000DA62                                   20433+         ds 0h                                                          01-DCCEP
                                           20434+* Epilog
0000DA62 D707 D088 D088 00000088 00000088  20435+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000DA68 E3D0 D080 0004          00000080  20436+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000DA6E E3C0 D090 0004          00000090  20437+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000DA74 E3B0 C018 0004          00000018  20438+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000DA7A E3C0 B010 0021          00000010  20439+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000DA80 E3E0 D008 0004          00000008  20440+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000DA86 EB1C D020 0004          00000020  20441+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000DA8C 078E                              20442+         bcr 8,14                if same dsab, just return              01-DCCEP
0000DA8E E3F0 D010 0024          00000010  20443+         stg 15,16(0,13)         save return code                       01-DCCEP
0000DA94 E300 D018 0024          00000018  20444+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000DA9A E3F0 D090 0004          00000090  20445+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000DAA0 E3F0 F018 0004          00000018  20446+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000DAA6 47F0 F040               00000040  20447+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           20448+* End of Epilog
                                           20449 * * **** End of Epilogue
                                           20450          DROP  12
                                           20451 *
                                           20452 *   DSECT for automatic variables in "rd_kafka_send_offsets_to_transac
                                                                                                                           Page  408 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           20453 *           tion"
                                           20454 *      (FUNCTION #1082)
                                           20455 *
00000000                00000000 000000A8  20456 @AUTO#rd_kafka_send_offsets_to_transaction DSECT
00000000                                   20457          DS    XL168
                                           20458 *
0000DAAA                00000000 00014658  20459 @CODE    CSECT
                                           20460 *
                                           20461 *
                                           20462 *
                                           20463 * ....... start of rd_kafka_txn_complete
0000DAAA                                   20464 @LNAME2024 DS  0H
0000DAAA 00000015                          20465          DC    X'00000015'
0000DAAE 99846D9281869281                  20466          DC    C'rd_kafka_txn_complete'
0000DAC3 00                                20467          DC    X'00'
                                           20468 rd_kafka_txn_complete DCCPRLG CINDEX=2024,BASER=12,FRAME=232,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME2024
                                           20469          macro
                                           20470          dccextrn &m
                                           20471          gblc    &$dccext(1000)
                                           20472          gbla    &$dccexti
                                           20473          lcla    &i
                                           20474 &$dccext(&$dccexti+1) setc    '&m'
                                           20475 &i       seta    1
                                           20476 .loop    aif    (&i gt &$dccexti).around
                                           20477          aif    ('&$dccext(&i)' eq '&m').getout
                                           20478 &i       seta    &i+1
                                           20479          ago     .loop
                                           20480 .around  anop
                                           20481 &$dccexti seta &$dccexti+1
                                           20482          extrn  &m
                                           20483 .getout  anop
                                           20484          mend
0000DAC8                                   20485+$eye0276    ds    0d                                                    02-DCCCA
0000DAC8 C4C3C3                            20486+         dc cl3'DCC'                                                    02-DCCCA
0000DACB 01                                20487+         dc xl1'01' format one                                          02-DCCCA
0000DACC 00000000                          20488+         dc a(0)                                                        02-DCCCA
0000DAD0 000000000000DB3A                  20489+         dc ad(@PER_2024)                                               02-DCCCA
0000DAD8 00000000000000E8                  20490+         dc ad(232)                                                     02-DCCCA
0000DAE0 0000000000000000                  20491+         dc ad(0)                                                       02-DCCCA
0000DAE8 0000000000001000                  20492+         dc ad(4096)                                                    02-DCCCA
0000DAF0 20                                20493+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000DAF1 03                                20494+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000DAF2 03                                20495+         dc al1(3)                                                      02-DCCCA
0000DAF3 08                                20496+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000DAF4 00                                20497+         dc bl.8'00000000'                                              02-DCCCA
0000DAF5 000000                            20498+         dc al3(0)                                                      02-DCCCA
0000DAF8 000000000000DAAA                  20499+         dc ad(@LNAME2024)                                              02-DCCCA
0000DB00                                   20500+         ds 0d                                                          02-DCCCA
0000DB00 000000000000DAC8                  20501+         dc ad($eye0276)                                                02-DCCCA
0000DB08 0000000000000000                  20502+         dc ad(0)                                                       02-DCCCA
0000DB10                                   20503+         ds    0d                                                       01-DCCPR
                                                                                                                           Page  409 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DB10                                   20504+rd_kafka_txn_complete ds 0d                                             01-DCCPR
0000DB10                                   20505+@REGION_2024_1 ds 0h                                                    01-DCCPR
0000DB10 EBEC D008 0024          00000008  20506+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000DB16 E3E0 D088 0004          00000088  20507+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000DB1C E3C0 D090 0004          00000090  20508+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000DB22 B904 002E                         20509+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000DB26 E3B0 C018 0004          00000018  20510+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000DB2C A7EB 00E8               000000E8  20511+         aghi  14,232              increase by frame size               01-DCCPR
0000DB30 E3E0 C020 0021          00000020  20512+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000DB36 4720 B020               00000020  20513+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000DB3A                                   20514+@PER_2024 ds   0h                                                       01-DCCPR
0000DB3A EBDE 2080 0024          00000080  20515+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000DB40 E3C0 2090 0024          00000090  20516+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000DB46 B904 00D2                         20517+         lgr   13,2                set real frame pointer               01-DCCPR
0000DB4A B904 00CF                         20518+         lgr   12,15               set base reg                         01-DCCPR
                        0000DB10           20519+         using @REGION_2024_1,12                                        01-DCCPR
                                           20520 * ******* End of Prologue
                                           20521 * *
                                           20522 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           20523 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMPLETE","Transac\
                                           20524 * tion successfully %s", is_commit ? "committed" : "aborted"); } while\
                                           20525 *  (0);
0000DB4E E320 1000 0004          00000000  20526          LG    2,0(0,1)    ; rk
0000DB54                                   20527 @L1452   DS    0H
0000DB54 9180 2322      00000322 00000080  20528          TM    802(2),128
0000DB58 4780 C0F0               0000DC00  20529          BZ    @L1455
0000DB5C 9500 100F      0000000F 00000000  20530          CLI   15(1),0
0000DB60 4780 C098               0000DBA8  20531          BE    @L1456
0000DB64 E3F0 C070 0004          0000DB80  20532          LG    15,@lit_2024_1088
0000DB6A 41F0 FC72               00000C72  20533          LA    15,3186(0,15)
0000DB6E 47F0 C0A2               0000DBB2  20534          B     @L1457
0000DB78                                   20535          DS    0D
0000DB78 000000E8                          20536 @FRAMESIZE_2024 DC F'232'
0000DB7C 00000000
0000DB80 0000000000014A98                  20537 @lit_2024_1088 DC AD(@strings@)
0000DB88 0000000000000000                  20538 @lit_2024_1092 DC AD(rd_kafka_log0)
0000DB90 0000000000009680                  20539 @lit_2024_1093 DC AD(rd_kafka_txn_clear_pending_partitions)
0000DB98 00000000000097C8                  20540 @lit_2024_1094 DC AD(rd_kafka_txn_clear_partitions)
0000DBA0 0000000000004DE8                  20541 @lit_2024_1095 DC AD(rd_kafka_txn_set_state)
0000DBA8                                   20542 @L1456   DS    0H
0000DBA8 E3F0 C070 0004          0000DB80  20543          LG    15,@lit_2024_1088
0000DBAE 41F0 FC7C               00000C7C  20544          LA    15,3196(0,15)
0000DBB2                                   20545 @L1457   DS    0H
0000DBB2 4110 2210               00000210  20546          LA    1,528(0,2)
0000DBB6 EB12 D0A8 0024          000000A8  20547          STMG  1,2,168(13)
0000DBBC D707 D0B8 D0B8 000000B8 000000B8  20548          XC    184(8,13),184(13)
0000DBC2 E548 D0C0 0007          000000C0  20549          MVGHI 192(13),7
0000DBC8 C01F 0000 8000                    20550          LLILF 1,X'00008000' ; 32768
0000DBCE E310 D0C8 0024          000000C8  20551          STG   1,200(0,13)
0000DBD4 E310 C070 0004          0000DB80  20552          LG    1,@lit_2024_1088
0000DBDA 4130 1C84               00000C84  20553          LA    3,3204(0,1)
0000DBDE E330 D0D0 0024          000000D0  20554          STG   3,208(0,13)
                                                                                                                           Page  410 
  Active Usings: @REGION_2024_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DBE4 4110 1C90               00000C90  20555          LA    1,3216(0,1)
0000DBE8 E310 D0D8 0024          000000D8  20556          STG   1,216(0,13)
0000DBEE E3F0 D0E0 0024          000000E0  20557          STG   15,224(0,13)
0000DBF4 4110 D0A8               000000A8  20558          LA    1,168(0,13)
0000DBF8 E3F0 C078 0004          0000DB88  20559          LG    15,@lit_2024_1092 ; rd_kafka_log0
0000DBFE                                   20560 @@gen_label1471 DS    0H
0000DBFE 05EF                              20561          BALR  14,15
0000DC00                                   20562 @@gen_label1472 DS    0H
0000DC00                                   20563 @L1455   DS    0H
                                           20564 * ***
                                           20565 * ***
                                           20566 * ***
                                           20567 * ***
                                           20568 * ***           rd_kafka_txn_clear_pending_partitions(rk);
0000DC00 E320 D0A8 0024          000000A8  20569          STG   2,168(0,13)
0000DC06 4110 D0A8               000000A8  20570          LA    1,168(0,13)
0000DC0A E3F0 C080 0004          0000DB90  20571          LG    15,@lit_2024_1093 ; rd_kafka_txn_clear_pending_partition*
                                                                s
0000DC10                                   20572 @@gen_label1473 DS    0H
0000DC10 05EF                              20573          BALR  14,15
0000DC12                                   20574 @@gen_label1474 DS    0H
                                           20575 * ***           rd_kafka_txn_clear_partitions(rk);
0000DC12 E320 D0A8 0024          000000A8  20576          STG   2,168(0,13)
0000DC18 4110 D0A8               000000A8  20577          LA    1,168(0,13)
0000DC1C E3F0 C088 0004          0000DB98  20578          LG    15,@lit_2024_1094 ; rd_kafka_txn_clear_partitions
0000DC22                                   20579 @@gen_label1475 DS    0H
0000DC22 05EF                              20580          BALR  14,15
0000DC24                                   20581 @@gen_label1476 DS    0H
                                           20582 * ***
                                           20583 * ***           rk->rk_eos.txn_requires_epoch_bump = 0;
0000DC24 9200 2D80      00000D80 00000000  20584          MVI   3456(2),0   ; offset of txn_requires_epoch_bump in 00001*
                                                                46
                                           20585 * ***           rk->rk_eos.txn_req_cnt = 0;
0000DC28 E54C 2E10 0000          00000E10  20586          MVHI  3600(2),0   ; offset of txn_req_cnt in 0000146
                                           20587 * ***
                                           20588 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_READY);
0000DC2E E320 D0A8 0024          000000A8  20589          STG   2,168(0,13)
0000DC34 E548 D0B0 0003          000000B0  20590          MVGHI 176(13),3
0000DC3A 4110 D0A8               000000A8  20591          LA    1,168(0,13)
0000DC3E E3F0 C090 0004          0000DBA0  20592          LG    15,@lit_2024_1095 ; rd_kafka_txn_set_state
0000DC44                                   20593 @@gen_label1477 DS    0H
0000DC44 05EF                              20594          BALR  14,15
0000DC46                                   20595 @@gen_label1478 DS    0H
                                           20596 * ***   }
0000DC46                                   20597 @ret_lab_2024 DS 0H
                                           20598 * * **** Start of Epilogue
                                           20599          DCCEPIL
0000DC46                                   20600+         ds 0h                                                          01-DCCEP
                                           20601+* Epilog
0000DC46 D707 D088 D088 00000088 00000088  20602+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000DC4C E3D0 D080 0004          00000080  20603+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000DC52 E3C0 D090 0004          00000090  20604+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page  411 
  Active Usings: @REGION_2024_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DC58 E3B0 C018 0004          00000018  20605+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000DC5E E3C0 B010 0021          00000010  20606+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000DC64 E3E0 D008 0004          00000008  20607+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000DC6A EB1C D020 0004          00000020  20608+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000DC70 078E                              20609+         bcr 8,14                if same dsab, just return              01-DCCEP
0000DC72 E3F0 D010 0024          00000010  20610+         stg 15,16(0,13)         save return code                       01-DCCEP
0000DC78 E300 D018 0024          00000018  20611+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000DC7E E3F0 D090 0004          00000090  20612+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000DC84 E3F0 F018 0004          00000018  20613+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000DC8A 47F0 F040               00000040  20614+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           20615+* End of Epilog
                                           20616 * * **** End of Epilogue
                                           20617          DROP  12
                                           20618 *
                                           20619 *   DSECT for automatic variables in "rd_kafka_txn_complete"
                                           20620 *      (FUNCTION #2024)
                                           20621 *
00000000                00000000 000000A8  20622 @AUTO#rd_kafka_txn_complete DSECT
00000000                                   20623          DS    XL168
                                           20624 *
0000DC8E                00000000 00014658  20625 @CODE    CSECT
                                           20626 *
                                           20627 *
                                           20628 *
                                           20629 * ....... start of rd_kafka_txn_handle_EndTxn
0000DC8E                                   20630 @LNAME2025 DS  0H
0000DC8E 0000001A                          20631          DC    X'0000001A'
0000DC92 99846D9281869281                  20632          DC    C'rd_kafka_txn_handle_EndTxn'
0000DCAC 00                                20633          DC    X'00'
                                           20634 rd_kafka_txn_handle_$End$Txn DCCPRLG CINDEX=2025,BASER=12,FRAME=832,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2025
                                           20635          macro
                                           20636          dccextrn &m
                                           20637          gblc    &$dccext(1000)
                                           20638          gbla    &$dccexti
                                           20639          lcla    &i
                                           20640 &$dccext(&$dccexti+1) setc    '&m'
                                           20641 &i       seta    1
                                           20642 .loop    aif    (&i gt &$dccexti).around
                                           20643          aif    ('&$dccext(&i)' eq '&m').getout
                                           20644 &i       seta    &i+1
                                           20645          ago     .loop
                                           20646 .around  anop
                                           20647 &$dccexti seta &$dccexti+1
                                           20648          extrn  &m
                                           20649 .getout  anop
                                           20650          mend
0000DCB0                                   20651+$eye0279    ds    0d                                                    02-DCCCA
0000DCB0 C4C3C3                            20652+         dc cl3'DCC'                                                    02-DCCCA
0000DCB3 01                                20653+         dc xl1'01' format one                                          02-DCCCA
0000DCB4 00000000                          20654+         dc a(0)                                                        02-DCCCA
0000DCB8 000000000000DD22                  20655+         dc ad(@PER_2025)                                               02-DCCCA
                                                                                                                           Page  412 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DCC0 0000000000000340                  20656+         dc ad(832)                                                     02-DCCCA
0000DCC8 0000000000000000                  20657+         dc ad(0)                                                       02-DCCCA
0000DCD0 0000000000001000                  20658+         dc ad(4096)                                                    02-DCCCA
0000DCD8 20                                20659+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000DCD9 03                                20660+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000DCDA 03                                20661+         dc al1(3)                                                      02-DCCCA
0000DCDB 08                                20662+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000DCDC 00                                20663+         dc bl.8'00000000'                                              02-DCCCA
0000DCDD 000000                            20664+         dc al3(0)                                                      02-DCCCA
0000DCE0 000000000000DC8E                  20665+         dc ad(@LNAME2025)                                              02-DCCCA
0000DCE8                                   20666+         ds 0d                                                          02-DCCCA
0000DCE8 000000000000DCB0                  20667+         dc ad($eye0279)                                                02-DCCCA
0000DCF0 0000000000000000                  20668+         dc ad(0)                                                       02-DCCCA
0000DCF8                                   20669+         ds    0d                                                       01-DCCPR
0000DCF8                                   20670+rd_kafka_txn_handle_$End$Txn ds 0d                                      01-DCCPR
0000DCF8                                   20671+@REGION_2025_1 ds 0h                                                    01-DCCPR
0000DCF8 EBEC D008 0024          00000008  20672+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000DCFE E3E0 D088 0004          00000088  20673+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000DD04 E3C0 D090 0004          00000090  20674+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000DD0A B904 002E                         20675+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000DD0E E3B0 C018 0004          00000018  20676+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000DD14 A7EB 0340               00000340  20677+         aghi  14,832              increase by frame size               01-DCCPR
0000DD18 E3E0 C020 0021          00000020  20678+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000DD1E 4720 B020               00000020  20679+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000DD22                                   20680+@PER_2025 ds   0h                                                       01-DCCPR
0000DD22 EBDE 2080 0024          00000080  20681+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000DD28 E3C0 2090 0024          00000090  20682+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000DD2E B904 00D2                         20683+         lgr   13,2                set real frame pointer               01-DCCPR
0000DD32 B904 00CF                         20684+         lgr   12,15               set base reg                         01-DCCPR
                        0000DCF8           20685+         using @REGION_2025_1,12                                        01-DCCPR
0000DD36 B904 0081                         20686          LGR   8,1         ; ptr to parm area
                                           20687 * ******* End of Prologue
                                           20688 * *
                                           20689 * ***           const int log_decode_errors = 3;
0000DD3A E340 8018 0004          00000018  20690          LG    4,24(0,8)   ; rkbuf
0000DD40 E370 8000 0004          00000000  20691          LG    7,0(0,8)    ; rk
0000DD46 5820 8014               00000014  20692          L     2,20(0,8)   ; err
0000DD4A A758 0003               00000003  20693          LHI   5,3         ; 3
                                           20694 * ***           rd_kafka_q_t *rkq = opaque;
0000DD4E E360 8028 0004          00000028  20695          LG    6,40(0,8)   ; opaque
                                           20696 * ***           int16_t ErrorCode;
                                           20697 * ***           int actions = 0;
0000DD54 A738 0000               00000000  20698          LHI   3,0         ; 0
                                           20699 * ***           rd_bool_t is_commit, may_retry = 0;
0000DD58 9200 D2B4      000002B4 00000000  20700          MVI   692(13),0   ; may_retry
                                           20701 * ***
                                           20702 * ***           if (err == RD_KAFKA_RESP_ERR__DESTROY) {
0000DD5C A72E FF3B               0000FF3B  20703          CHI   2,-197
0000DD60 4770 C138               0000DE30  20704          BNE   @L1458
                                           20705 * ***                   rd_kafka_q_destroy0(rkq, 0 );
0000DD64 E360 D2B8 0024          000002B8  20706          STG   6,696(0,13)
0000DD6A D707 D2C0 D2C0 000002C0 000002C0  20707          XC    704(8,13),704(13)
                                                                                                                           Page  413 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DD70 4110 D2B8               000002B8  20708          LA    1,696(0,13)
0000DD74 E3F0 C098 0004          0000DD90  20709          LG    15,@lit_2025_1099 ; rd_kafka_q_destroy0
0000DD7A                                   20710 @@gen_label1480 DS    0H
0000DD7A 05EF                              20711          BALR  14,15
0000DD7C                                   20712 @@gen_label1481 DS    0H
                                           20713 * ***                   return;
0000DD7C E3C0 C0A0 001A          0000DD98  20714          ALGF  12,@lit_region_diff_2025_1_2
                                           20715          DROP  12
                        0000E5B0           20716          USING @REGION_2025_2,12
0000DD82 47F0 C500               0000EAB0  20717          B     @ret_lab_2025
                                           20718          DROP  12
                        0000DCF8           20719          USING @REGION_2025_1,12
0000DD88                                   20720          DS    0D
0000DD88 00000340                          20721 @FRAMESIZE_2025 DC F'832'
0000DD8C 00000000
0000DD90 0000000000001FC8                  20722 @lit_2025_1099 DC AD(rd_kafka_q_destroy0)
0000DD98 000008B8                          20723 @lit_region_diff_2025_1_2  DC A(@REGION_2025_2-@REGION_2025_1)
0000DD9C 00000000
0000DDA0 0000000000000000                  20724 @lit_2025_1101 DC AD(rd_slice_read)
0000DDA8 0000000000001730                  20725 @lit_2025_1102 DC AD(rd_slice_abs_offset)
0000DDB0 0000000000000000                  20726 @lit_2025_1105 DC AD(rd_kafka_crash)
0000DDB8 0000000000014658                  20727 @lit_2025_1104 DC AD(@DATA)
0000DDC0 0000000000014A98                  20728 @lit_2025_1103 DC AD(@strings@)
0000DDC8 0000000000000000                  20729 @lit_2025_1107 DC AD(snprintf)
0000DDD0 0000000000000000                  20730 @lit_2025_1109 DC AD(mtx_lock)
0000DDD8 0000000000001BA8                  20731 @lit_2025_1111 DC AD(rd_strlcpy)
0000DDE0 0000000000000000                  20732 @lit_2025_1113 DC AD(mtx_unlock)
0000DDE8 0000000000001988                  20733 @lit_2025_1114 DC AD(rd_kafka_$Api$Key2str)
0000DDF0 00000000000017D8                  20734 @lit_2025_1115 DC AD(rd_slice_offset)
0000DDF8 0000000000000000                  20735 @lit_2025_1120 DC AD(rd_kafka_log0)
0000DE00 0000000000000000                  20736 @lit_2025_1121 DC AD(rd_kafka_op_throttle_time)
0000DE08 0000000000000000                  20737 @lit_2025_1143 DC AD(rwlock_wrlock)
0000DE10 0000000000000000                  20738 @lit_2025_1144 DC AD(rwlock_wrunlock)
0000DE18 0000000000000000                  20739 @lit_2025_1145 DC AD(rd_kafka_err2name)
0000DE20 0000000000005A68                  20740 @lit_2025_1147 DC AD(rd_kafka_txn_curr_api_reply)
0000DE28 0000000000004228                  20741 @lit_2025_1154 DC AD(rd_kafka_txn_state2str)
                                           20742 * ***           }
0000DE30                                   20743 @L1458   DS    0H
                                           20744 * ***
                                           20745 * ***           is_commit = request->rkbuf_u.EndTxn.commit;
0000DE30 E3F0 8020 0004          00000020  20746          LG    15,32(0,8)  ; request
0000DE36 43F0 F190               00000190  20747          IC    15,400(0,15) ; offset of rkbuf_u in rd_kafka_buf_s
0000DE3A 42F0 D2B5               000002B5  20748          STC   15,693(0,13) ; is_commit
                                           20749 * ***
                                           20750 * ***           if (err)
0000DE3E 1222                              20751          LTR   2,2
0000DE40 4780 C150               0000DE48  20752          BZ    @L1466
                                           20753 * ***                   goto err;
0000DE44 47F0 C702               0000E3FA  20754          B     @_err@2025@9
                                           20755 * ***
                                           20756 * ***           do { int32_t _throttle_time_ms; do { int32_t _v; do { \
                                           20757 * size_t __len2 = (size_t)(sizeof(_v)); if (!rd_slice_read(&(rkbuf)->r\
                                                                                                                           Page  414 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           20758 * kbuf_reader, &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if\
                                           20759 *  (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(\
                                           20760 * rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { i\
                                           20761 * f (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\
                                           20762 * \\src\\rdkafka_txnmgr.c",2141, __FUNCTION__, (((void *)0)), "assert:\
                                           20763 *  " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__\
                                           20764 * tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmps\
                                           20765 * tr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)-\
                                           20766 * >rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logna\
                                           20767 * me, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_l\
                                           20768 * ock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rk\
                                           20769 * buf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "P\
                                           20770 * rotocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu"\
                                           20771 *  " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining byt\
                                           20772 * es (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf-\
                                           20773 * >rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&\
                                           20774 * rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTI\
                                           20775 * ON__, 2141, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offs\
                                           20776 * et(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rk\
                                           20777 * buf_uflow_mitigation : "incorrect broker.version.fallback?", __tmpst\
                                           20778 * r); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW\
                                           20779 * ; goto err_parse; } while (0); } } while (0); } while (0); *(&_throt\
                                           20780 * tle_time_ms) = (_v); } while (0); rd_kafka_op_throttle_time((rkbuf)-\
                                           20781 * >rkbuf_rkb, (rkbuf)->rkbuf_rkb->rkb_rk->rk_rep, _throttle_time_ms); \
                                           20782 * } while (0);
0000DE48                                   20783 @L1466   DS    0H
0000DE48 A729 0004               00000004  20784          LGHI  2,4         ; 4
0000DE4C 41F0 4078               00000078  20785          LA    15,120(0,4)
0000DE50 E3F0 D2B8 0024          000002B8  20786          STG   15,696(0,13)
0000DE56 41F0 D0AC               000000AC  20787          LA    15,172(0,13)
0000DE5A E3F0 D2C0 0024          000002C0  20788          STG   15,704(0,13)
0000DE60 E320 D2C8 0024          000002C8  20789          STG   2,712(0,13)
0000DE66 4110 D2B8               000002B8  20790          LA    1,696(0,13)
0000DE6A E3F0 C0A8 0004          0000DDA0  20791          LG    15,@lit_2025_1101 ; rd_slice_read
0000DE70                                   20792 @@gen_label1483 DS    0H
0000DE70 05EF                              20793          BALR  14,15
0000DE72                                   20794 @@gen_label1484 DS    0H
0000DE72 B902 00FF                         20795          LTGR  15,15
0000DE76 4770 C3FE               0000E0F6  20796          BNZ   @L1469
0000DE7A                                   20797 @L1470   DS    0H
0000DE7A E390 4098 0004          00000098  20798          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000DE80 41F0 4078               00000078  20799          LA    15,120(0,4)
0000DE84 E3F0 D2B8 0024          000002B8  20800          STG   15,696(0,13)
0000DE8A 4110 D2B8               000002B8  20801          LA    1,696(0,13)
0000DE8E E3F0 C0B0 0004          0000DDA8  20802          LG    15,@lit_2025_1102 ; rd_slice_abs_offset
0000DE94                                   20803 @@gen_label1486 DS    0H
0000DE94 05EF                              20804          BALR  14,15
0000DE96                                   20805 @@gen_label1487 DS    0H
0000DE96 B90B 009F                         20806          SLGR  9,15
0000DE9A B921 0029                         20807          CLGR  2,9
0000DE9E 47D0 C3FE               0000E0F6  20808          BNH   @L1473
0000DEA2                                   20809 @L1474   DS    0H
                                                                                                                           Page  415 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DEA2 1255                              20810          LTR   5,5
0000DEA4 47D0 C3F4               0000E0EC  20811          BNH   @L1477
0000DEA8                                   20812 @L1478   DS    0H
0000DEA8 E3F0 4100 0002          00000100  20813          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DEAE 4770 C1FC               0000DEF4  20814          BNZ   @L1481
0000DEB2 E3F0 C0C8 0004          0000DDC0  20815          LG    15,@lit_2025_1103
0000DEB8 4110 F1B2               000001B2  20816          LA    1,434(0,15)
0000DEBC E310 D2B8 0024          000002B8  20817          STG   1,696(0,13)
0000DEC2 E548 D2C0 085D          000002C0  20818          MVGHI 704(13),2141
0000DEC8 E310 C0C0 0004          0000DDB8  20819          LG    1,@lit_2025_1104
0000DECE 4110 1360               00000360  20820          LA    1,864(0,1)
0000DED2 E310 D2C8 0024          000002C8  20821          STG   1,712(0,13)
0000DED8 D707 D2D0 D2D0 000002D0 000002D0  20822          XC    720(8,13),720(13)
0000DEDE 41F0 F582               00000582  20823          LA    15,1410(0,15)
0000DEE2 E3F0 D2D8 0024          000002D8  20824          STG   15,728(0,13)
0000DEE8 4110 D2B8               000002B8  20825          LA    1,696(0,13)
0000DEEC E3F0 C0B8 0004          0000DDB0  20826          LG    15,@lit_2025_1105 ; rd_kafka_crash
0000DEF2                                   20827 @@gen_label1491 DS    0H
0000DEF2 05EF                              20828          BALR  14,15
0000DEF4                                   20829 @@gen_label1492 DS    0H
0000DEF4                                   20830 @L1481   DS    0H
0000DEF4 41F0 D0B4               000000B4  20831          LA    15,180(0,13)
0000DEF8 E3F0 D2B8 0024          000002B8  20832          STG   15,696(0,13)
0000DEFE E548 D2C0 0100          000002C0  20833          MVGHI 704(13),256
0000DF04 E3F0 C0C8 0004          0000DDC0  20834          LG    15,@lit_2025_1103
0000DF0A 41F0 F59C               0000059C  20835          LA    15,1436(0,15)
0000DF0E E3F0 D2C8 0024          000002C8  20836          STG   15,712(0,13)
0000DF14 4110 D2B8               000002B8  20837          LA    1,696(0,13)
0000DF18 E3F0 C0D0 0004          0000DDC8  20838          LG    15,@lit_2025_1107 ; snprintf
0000DF1E                                   20839 @@gen_label1493 DS    0H
0000DF1E 05EF                              20840          BALR  14,15
0000DF20                                   20841 @@gen_label1494 DS    0H
0000DF20 41F0 D0B4               000000B4  20842          LA    15,180(0,13)
0000DF24 B904 001F                         20843          LGR   1,15
0000DF28 A709 0000               00000000  20844          LGHI  0,0
0000DF2C                                   20845 @@gen_label1495 DS 0H
0000DF2C B25E 000F                         20846          SRST  0,15
0000DF30 4710 C234               0000DF2C  20847          BC  1,@@gen_label1495
0000DF34 B90B 0001                         20848          SLGR  0,1
0000DF38 A70F 0002               00000002  20849          CGHI  0,2
0000DF3C 4770 C24C               0000DF44  20850          BNE   @L1483
0000DF40 9200 D0B4      000000B4 00000000  20851          MVI   180(13),0
0000DF44                                   20852 @L1482   DS    0H
0000DF44                                   20853 @L1483   DS    0H
0000DF44 E3F0 4100 0004          00000100  20854          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DF4A A799 1638               00001638  20855          LGHI  9,5688      ; 5688
0000DF4E 41F9 F000               00000000  20856          LA    15,0(9,15)
0000DF52 E3F0 D2B8 0024          000002B8  20857          STG   15,696(0,13)
0000DF58 4110 D2B8               000002B8  20858          LA    1,696(0,13)
0000DF5C E3F0 C0D8 0004          0000DDD0  20859          LG    15,@lit_2025_1109 ; mtx_lock
0000DF62                                   20860 @@gen_label1497 DS    0H
0000DF62 05EF                              20861          BALR  14,15
                                                                                                                           Page  416 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000DF64                                   20862 @@gen_label1498 DS    0H
0000DF64 41F0 D1B4               000001B4  20863          LA    15,436(0,13)
0000DF68 E3F0 D2B8 0024          000002B8  20864          STG   15,696(0,13)
0000DF6E E3F0 4100 0004          00000100  20865          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DF74 A719 1630               00001630  20866          LGHI  1,5680      ; 5680
0000DF78 E3F1 F000 0004          00000000  20867          LG    15,0(1,15)
0000DF7E E3F0 D2C0 0024          000002C0  20868          STG   15,704(0,13)
0000DF84 E548 D2C8 0100          000002C8  20869          MVGHI 712(13),256
0000DF8A 4110 D2B8               000002B8  20870          LA    1,696(0,13)
0000DF8E E3F0 C0E0 0004          0000DDD8  20871          LG    15,@lit_2025_1111 ; rd_strlcpy
0000DF94                                   20872 @@gen_label1499 DS    0H
0000DF94 05EF                              20873          BALR  14,15
0000DF96                                   20874 @@gen_label1500 DS    0H
0000DF96 E3F0 4100 0004          00000100  20875          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DF9C 41F9 F000               00000000  20876          LA    15,0(9,15)
0000DFA0 E3F0 D2B8 0024          000002B8  20877          STG   15,696(0,13)
0000DFA6 4110 D2B8               000002B8  20878          LA    1,696(0,13)
0000DFAA E3F0 C0E8 0004          0000DDE0  20879          LG    15,@lit_2025_1113 ; mtx_unlock
0000DFB0                                   20880 @@gen_label1501 DS    0H
0000DFB0 05EF                              20881          BALR  14,15
0000DFB2                                   20882 @@gen_label1502 DS    0H
0000DFB2 E3F0 40B8 0015          000000B8  20883          LGH   15,184(0,4)
0000DFB8 E3F0 D2B8 0024          000002B8  20884          STG   15,696(0,13)
0000DFBE 4110 D2B8               000002B8  20885          LA    1,696(0,13)
0000DFC2 E3F0 C0F0 0004          0000DDE8  20886          LG    15,@lit_2025_1114 ; rd_kafka_ApiKey2str
0000DFC8                                   20887 @@gen_label1503 DS    0H
0000DFC8 05EF                              20888          BALR  14,15
0000DFCA                                   20889 @@gen_label1504 DS    0H
0000DFCA B904 009F                         20890          LGR   9,15
0000DFCE 41F0 4078               00000078  20891          LA    15,120(0,4)
0000DFD2 E3F0 D2B8 0024          000002B8  20892          STG   15,696(0,13)
0000DFD8 4110 D2B8               000002B8  20893          LA    1,696(0,13)
0000DFDC E3F0 C0F8 0004          0000DDF0  20894          LG    15,@lit_2025_1115 ; rd_slice_offset
0000DFE2                                   20895 @@gen_label1505 DS    0H
0000DFE2 05EF                              20896          BALR  14,15
0000DFE4                                   20897 @@gen_label1506 DS    0H
0000DFE4 B904 00AF                         20898          LGR   10,15
0000DFE8 E3B0 4098 0004          00000098  20899          LG    11,152(0,4) ; offset of end in rd_slice_s
0000DFEE 41F0 4078               00000078  20900          LA    15,120(0,4)
0000DFF2 E3F0 D2B8 0024          000002B8  20901          STG   15,696(0,13)
0000DFF8 4110 D2B8               000002B8  20902          LA    1,696(0,13)
0000DFFC E3F0 C0B0 0004          0000DDA8  20903          LG    15,@lit_2025_1102 ; rd_slice_abs_offset
0000E002                                   20904 @@gen_label1507 DS    0H
0000E002 05EF                              20905          BALR  14,15
0000E004                                   20906 @@gen_label1508 DS    0H
0000E004 B90B 00BF                         20907          SLGR  11,15
0000E008 E3F0 41E8 0002          000001E8  20908          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E00E 4780 C324               0000E01C  20909          BZ    @L1486
0000E012 E3F0 41E8 0004          000001E8  20910          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E018 47F0 C32E               0000E026  20911          B     @L1487
                                                                                                                           Page  417 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E01C                                   20912 @L1486   DS    0H
0000E01C E3F0 C0C8 0004          0000DDC0  20913          LG    15,@lit_2025_1103
0000E022 41F0 F5A0               000005A0  20914          LA    15,1440(0,15)
0000E026                                   20915 @L1487   DS    0H
0000E026 E310 4100 0004          00000100  20916          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E02C E310 1FD0 0004          00000FD0  20917          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000E032 4110 1210               00000210  20918          LA    1,528(0,1)
0000E036 E310 D2B8 0024          000002B8  20919          STG   1,696(0,13)
0000E03C E310 4100 0004          00000100  20920          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E042 E310 1FD0 0004          00000FD0  20921          LG    1,4048(0,1)
0000E048 E310 D2C0 0024          000002C0  20922          STG   1,704(0,13)
0000E04E 4110 D1B4               000001B4  20923          LA    1,436(0,13)
0000E052 E310 D2C8 0024          000002C8  20924          STG   1,712(0,13)
0000E058 B914 0015                         20925          LGFR  1,5
0000E05C E310 D2D0 0024          000002D0  20926          STG   1,720(0,13)
0000E062 D707 D2D8 D2D8 000002D8 000002D8  20927          XC    728(8,13),728(13)
0000E068 E310 C0C8 0004          0000DDC0  20928          LG    1,@lit_2025_1103
0000E06E 4150 15C4               000005C4  20929          LA    5,1476(0,1)
0000E072 E350 D2E0 0024          000002E0  20930          STG   5,736(0,13)
0000E078 4110 15D0               000005D0  20931          LA    1,1488(0,1)
0000E07C E310 D2E8 0024          000002E8  20932          STG   1,744(0,13)
0000E082 E390 D2F0 0024          000002F0  20933          STG   9,752(0,13)
0000E088 4810 40BA               000000BA  20934          LH    1,186(0,4)
0000E08C B914 0011                         20935          LGFR  1,1
0000E090 E310 D2F8 0024          000002F8  20936          STG   1,760(0,13)
0000E096 E3A0 D300 0024          00000300  20937          STG   10,768(0,13)
0000E09C E310 4098 0004          00000098  20938          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000E0A2 E310 4090 000B          00000090  20939          SLG   1,144(0,4)
0000E0A8 E310 D308 0024          00000308  20940          STG   1,776(0,13)
0000E0AE E310 C0C0 0004          0000DDB8  20941          LG    1,@lit_2025_1104
0000E0B4 4110 1360               00000360  20942          LA    1,864(0,1)
0000E0B8 E310 D310 0024          00000310  20943          STG   1,784(0,13)
0000E0BE E548 D318 085D          00000318  20944          MVGHI 792(13),2141
0000E0C4 E320 D320 0024          00000320  20945          STG   2,800(0,13)
0000E0CA E3B0 D328 0024          00000328  20946          STG   11,808(0,13)
0000E0D0 E3F0 D330 0024          00000330  20947          STG   15,816(0,13)
0000E0D6 41F0 D0B4               000000B4  20948          LA    15,180(0,13)
0000E0DA E3F0 D338 0024          00000338  20949          STG   15,824(0,13)
0000E0E0 4110 D2B8               000002B8  20950          LA    1,696(0,13)
0000E0E4 E3F0 C100 0004          0000DDF8  20951          LG    15,@lit_2025_1120 ; rd_kafka_log0
0000E0EA                                   20952 @@gen_label1510 DS    0H
0000E0EA 05EF                              20953          BALR  14,15
0000E0EC                                   20954 @@gen_label1511 DS    0H
0000E0EC                                   20955 @L1477   DS    0H
0000E0EC E54C 4188 FF65          00000188  20956          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000E0F2 47F0 C6FE               0000E3F6  20957          B     @_err_parse@2025@10
0000E0F6                                   20958 @L1473   DS    0H
0000E0F6                                   20959 @L1469   DS    0H
0000E0F6 58F0 D0AC               000000AC  20960          L     15,172(0,13) ; _v
0000E0FA 50F0 D0A8               000000A8  20961          ST    15,168(0,13)
0000E0FE E3F0 4100 0004          00000100  20962          LG    15,256(0,4)
0000E104 E3F0 D2B8 0024          000002B8  20963          STG   15,696(0,13)
                                                                                                                           Page  418 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E10A E3F0 4100 0004          00000100  20964          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E110 E3F0 FFD0 0004          00000FD0  20965          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000E116 E3F0 F000 0004          00000000  20966          LG    15,0(0,15)
0000E11C E3F0 D2C0 0024          000002C0  20967          STG   15,704(0,13)
0000E122 E3F0 D0A8 0014          000000A8  20968          LGF   15,168(0,13) ; _throttle_time_ms
0000E128 E3F0 D2C8 0024          000002C8  20969          STG   15,712(0,13)
0000E12E 4110 D2B8               000002B8  20970          LA    1,696(0,13)
0000E132 E3F0 C108 0004          0000DE00  20971          LG    15,@lit_2025_1121 ; rd_kafka_op_throttle_time
0000E138                                   20972 @@gen_label1512 DS    0H
0000E138 05EF                              20973          BALR  14,15
0000E13A                                   20974 @@gen_label1513 DS    0H
                                           20975 * ***           do { int16_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           20976 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           20977 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           20978 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           20979 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           20980 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",2142, _\
                                           20981 * _FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while \
                                           20982 * (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": ");\
                                           20983 *  if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname\
                                           20984 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                           20985 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                           20986 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                           20987 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                           20988 * decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " \
                                           20989 * "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" \
                                           20990 * " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(\
                                           20991 * rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_sli\
                                           20992 * ce_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rk\
                                           20993 * buf->rkbuf_reader)->start), __FUNCTION__, 2142, __len0, ((&rkbuf->rk\
                                           20994 * buf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf\
                                           20995 * ->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrec\
                                           20996 * t broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbu\
                                           20997 * f_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); }\
                                           20998 *  } while (0); } while (0); *(&ErrorCode) = (int16_t)(_v); } while (0\
                                           20999 * );
0000E13A                                   21000 @L1488   DS    0H
0000E13A                                   21001 @L1491   DS    0H
0000E13A A729 0002               00000002  21002          LGHI  2,2         ; 2
0000E13E 41F0 4078               00000078  21003          LA    15,120(0,4)
0000E142 E3F0 D2B8 0024          000002B8  21004          STG   15,696(0,13)
0000E148 41F0 D0B0               000000B0  21005          LA    15,176(0,13)
0000E14C E3F0 D2C0 0024          000002C0  21006          STG   15,704(0,13)
0000E152 E320 D2C8 0024          000002C8  21007          STG   2,712(0,13)
0000E158 4110 D2B8               000002B8  21008          LA    1,696(0,13)
0000E15C E3F0 C0A8 0004          0000DDA0  21009          LG    15,@lit_2025_1101 ; rd_slice_read
0000E162                                   21010 @@gen_label1514 DS    0H
0000E162 05EF                              21011          BALR  14,15
0000E164                                   21012 @@gen_label1515 DS    0H
0000E164 B902 00FF                         21013          LTGR  15,15
0000E168 4770 C6F0               0000E3E8  21014          BNZ   @L1494
0000E16C                                   21015 @L1495   DS    0H
                                                                                                                           Page  419 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E16C E390 4098 0004          00000098  21016          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000E172 41F0 4078               00000078  21017          LA    15,120(0,4)
0000E176 E3F0 D2B8 0024          000002B8  21018          STG   15,696(0,13)
0000E17C 4110 D2B8               000002B8  21019          LA    1,696(0,13)
0000E180 E3F0 C0B0 0004          0000DDA8  21020          LG    15,@lit_2025_1102 ; rd_slice_abs_offset
0000E186                                   21021 @@gen_label1517 DS    0H
0000E186 05EF                              21022          BALR  14,15
0000E188                                   21023 @@gen_label1518 DS    0H
0000E188 B90B 009F                         21024          SLGR  9,15
0000E18C B921 0029                         21025          CLGR  2,9
0000E190 47D0 C6F0               0000E3E8  21026          BNH   @L1498
0000E194                                   21027 @L1499   DS    0H
0000E194 1255                              21028          LTR   5,5
0000E196 47D0 C6E6               0000E3DE  21029          BNH   @L1502
0000E19A                                   21030 @L1503   DS    0H
0000E19A E3F0 4100 0002          00000100  21031          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E1A0 4770 C4EE               0000E1E6  21032          BNZ   @L1506
0000E1A4 E3F0 C0C8 0004          0000DDC0  21033          LG    15,@lit_2025_1103
0000E1AA 4110 F1B2               000001B2  21034          LA    1,434(0,15)
0000E1AE E310 D2B8 0024          000002B8  21035          STG   1,696(0,13)
0000E1B4 E548 D2C0 085E          000002C0  21036          MVGHI 704(13),2142
0000E1BA E310 C0C0 0004          0000DDB8  21037          LG    1,@lit_2025_1104
0000E1C0 4110 1360               00000360  21038          LA    1,864(0,1)
0000E1C4 E310 D2C8 0024          000002C8  21039          STG   1,712(0,13)
0000E1CA D707 D2D0 D2D0 000002D0 000002D0  21040          XC    720(8,13),720(13)
0000E1D0 41F0 F582               00000582  21041          LA    15,1410(0,15)
0000E1D4 E3F0 D2D8 0024          000002D8  21042          STG   15,728(0,13)
0000E1DA 4110 D2B8               000002B8  21043          LA    1,696(0,13)
0000E1DE E3F0 C0B8 0004          0000DDB0  21044          LG    15,@lit_2025_1105 ; rd_kafka_crash
0000E1E4                                   21045 @@gen_label1522 DS    0H
0000E1E4 05EF                              21046          BALR  14,15
0000E1E6                                   21047 @@gen_label1523 DS    0H
0000E1E6                                   21048 @L1506   DS    0H
0000E1E6 41F0 D0B4               000000B4  21049          LA    15,180(0,13)
0000E1EA E3F0 D2B8 0024          000002B8  21050          STG   15,696(0,13)
0000E1F0 E548 D2C0 0100          000002C0  21051          MVGHI 704(13),256
0000E1F6 E3F0 C0C8 0004          0000DDC0  21052          LG    15,@lit_2025_1103
0000E1FC 41F0 F59C               0000059C  21053          LA    15,1436(0,15)
0000E200 E3F0 D2C8 0024          000002C8  21054          STG   15,712(0,13)
0000E206 4110 D2B8               000002B8  21055          LA    1,696(0,13)
0000E20A E3F0 C0D0 0004          0000DDC8  21056          LG    15,@lit_2025_1107 ; snprintf
0000E210                                   21057 @@gen_label1524 DS    0H
0000E210 05EF                              21058          BALR  14,15
0000E212                                   21059 @@gen_label1525 DS    0H
0000E212 41F0 D0B4               000000B4  21060          LA    15,180(0,13)
0000E216 B904 001F                         21061          LGR   1,15
0000E21A A709 0000               00000000  21062          LGHI  0,0
0000E21E                                   21063 @@gen_label1526 DS 0H
0000E21E B25E 000F                         21064          SRST  0,15
0000E222 4710 C526               0000E21E  21065          BC  1,@@gen_label1526
0000E226 B90B 0001                         21066          SLGR  0,1
0000E22A A70F 0002               00000002  21067          CGHI  0,2
                                                                                                                           Page  420 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E22E 4770 C53E               0000E236  21068          BNE   @L1508
0000E232 9200 D0B4      000000B4 00000000  21069          MVI   180(13),0
0000E236                                   21070 @L1507   DS    0H
0000E236                                   21071 @L1508   DS    0H
0000E236 E3F0 4100 0004          00000100  21072          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E23C A799 1638               00001638  21073          LGHI  9,5688      ; 5688
0000E240 41F9 F000               00000000  21074          LA    15,0(9,15)
0000E244 E3F0 D2B8 0024          000002B8  21075          STG   15,696(0,13)
0000E24A 4110 D2B8               000002B8  21076          LA    1,696(0,13)
0000E24E E3F0 C0D8 0004          0000DDD0  21077          LG    15,@lit_2025_1109 ; mtx_lock
0000E254                                   21078 @@gen_label1528 DS    0H
0000E254 05EF                              21079          BALR  14,15
0000E256                                   21080 @@gen_label1529 DS    0H
0000E256 41F0 D1B4               000001B4  21081          LA    15,436(0,13)
0000E25A E3F0 D2B8 0024          000002B8  21082          STG   15,696(0,13)
0000E260 E3F0 4100 0004          00000100  21083          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E266 A719 1630               00001630  21084          LGHI  1,5680      ; 5680
0000E26A E3F1 F000 0004          00000000  21085          LG    15,0(1,15)
0000E270 E3F0 D2C0 0024          000002C0  21086          STG   15,704(0,13)
0000E276 E548 D2C8 0100          000002C8  21087          MVGHI 712(13),256
0000E27C 4110 D2B8               000002B8  21088          LA    1,696(0,13)
0000E280 E3F0 C0E0 0004          0000DDD8  21089          LG    15,@lit_2025_1111 ; rd_strlcpy
0000E286                                   21090 @@gen_label1530 DS    0H
0000E286 05EF                              21091          BALR  14,15
0000E288                                   21092 @@gen_label1531 DS    0H
0000E288 E3F0 4100 0004          00000100  21093          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E28E 41F9 F000               00000000  21094          LA    15,0(9,15)
0000E292 E3F0 D2B8 0024          000002B8  21095          STG   15,696(0,13)
0000E298 4110 D2B8               000002B8  21096          LA    1,696(0,13)
0000E29C E3F0 C0E8 0004          0000DDE0  21097          LG    15,@lit_2025_1113 ; mtx_unlock
0000E2A2                                   21098 @@gen_label1532 DS    0H
0000E2A2 05EF                              21099          BALR  14,15
0000E2A4                                   21100 @@gen_label1533 DS    0H
0000E2A4 E3F0 40B8 0015          000000B8  21101          LGH   15,184(0,4)
0000E2AA E3F0 D2B8 0024          000002B8  21102          STG   15,696(0,13)
0000E2B0 4110 D2B8               000002B8  21103          LA    1,696(0,13)
0000E2B4 E3F0 C0F0 0004          0000DDE8  21104          LG    15,@lit_2025_1114 ; rd_kafka_ApiKey2str
0000E2BA                                   21105 @@gen_label1534 DS    0H
0000E2BA 05EF                              21106          BALR  14,15
0000E2BC                                   21107 @@gen_label1535 DS    0H
0000E2BC B904 009F                         21108          LGR   9,15
0000E2C0 41F0 4078               00000078  21109          LA    15,120(0,4)
0000E2C4 E3F0 D2B8 0024          000002B8  21110          STG   15,696(0,13)
0000E2CA 4110 D2B8               000002B8  21111          LA    1,696(0,13)
0000E2CE E3F0 C0F8 0004          0000DDF0  21112          LG    15,@lit_2025_1115 ; rd_slice_offset
0000E2D4                                   21113 @@gen_label1536 DS    0H
0000E2D4 05EF                              21114          BALR  14,15
0000E2D6                                   21115 @@gen_label1537 DS    0H
0000E2D6 B904 00AF                         21116          LGR   10,15
0000E2DA E3B0 4098 0004          00000098  21117          LG    11,152(0,4) ; offset of end in rd_slice_s
0000E2E0 41F0 4078               00000078  21118          LA    15,120(0,4)
0000E2E4 E3F0 D2B8 0024          000002B8  21119          STG   15,696(0,13)
                                                                                                                           Page  421 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E2EA 4110 D2B8               000002B8  21120          LA    1,696(0,13)
0000E2EE E3F0 C0B0 0004          0000DDA8  21121          LG    15,@lit_2025_1102 ; rd_slice_abs_offset
0000E2F4                                   21122 @@gen_label1538 DS    0H
0000E2F4 05EF                              21123          BALR  14,15
0000E2F6                                   21124 @@gen_label1539 DS    0H
0000E2F6 B90B 00BF                         21125          SLGR  11,15
0000E2FA E3F0 41E8 0002          000001E8  21126          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E300 4780 C616               0000E30E  21127          BZ    @L1511
0000E304 E3F0 41E8 0004          000001E8  21128          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E30A 47F0 C620               0000E318  21129          B     @L1512
0000E30E                                   21130 @L1511   DS    0H
0000E30E E3F0 C0C8 0004          0000DDC0  21131          LG    15,@lit_2025_1103
0000E314 41F0 F5A0               000005A0  21132          LA    15,1440(0,15)
0000E318                                   21133 @L1512   DS    0H
0000E318 E310 4100 0004          00000100  21134          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E31E E310 1FD0 0004          00000FD0  21135          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000E324 4110 1210               00000210  21136          LA    1,528(0,1)
0000E328 E310 D2B8 0024          000002B8  21137          STG   1,696(0,13)
0000E32E E310 4100 0004          00000100  21138          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E334 E310 1FD0 0004          00000FD0  21139          LG    1,4048(0,1)
0000E33A E310 D2C0 0024          000002C0  21140          STG   1,704(0,13)
0000E340 4110 D1B4               000001B4  21141          LA    1,436(0,13)
0000E344 E310 D2C8 0024          000002C8  21142          STG   1,712(0,13)
0000E34A B914 0015                         21143          LGFR  1,5
0000E34E E310 D2D0 0024          000002D0  21144          STG   1,720(0,13)
0000E354 D707 D2D8 D2D8 000002D8 000002D8  21145          XC    728(8,13),728(13)
0000E35A E310 C0C8 0004          0000DDC0  21146          LG    1,@lit_2025_1103
0000E360 4150 15C4               000005C4  21147          LA    5,1476(0,1)
0000E364 E350 D2E0 0024          000002E0  21148          STG   5,736(0,13)
0000E36A 4110 15D0               000005D0  21149          LA    1,1488(0,1)
0000E36E E310 D2E8 0024          000002E8  21150          STG   1,744(0,13)
0000E374 E390 D2F0 0024          000002F0  21151          STG   9,752(0,13)
0000E37A 4810 40BA               000000BA  21152          LH    1,186(0,4)
0000E37E B914 0011                         21153          LGFR  1,1
0000E382 E310 D2F8 0024          000002F8  21154          STG   1,760(0,13)
0000E388 E3A0 D300 0024          00000300  21155          STG   10,768(0,13)
0000E38E E310 4098 0004          00000098  21156          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000E394 E310 4090 000B          00000090  21157          SLG   1,144(0,4)
0000E39A E310 D308 0024          00000308  21158          STG   1,776(0,13)
0000E3A0 E310 C0C0 0004          0000DDB8  21159          LG    1,@lit_2025_1104
0000E3A6 4110 1360               00000360  21160          LA    1,864(0,1)
0000E3AA E310 D310 0024          00000310  21161          STG   1,784(0,13)
0000E3B0 E548 D318 085E          00000318  21162          MVGHI 792(13),2142
0000E3B6 E320 D320 0024          00000320  21163          STG   2,800(0,13)
0000E3BC E3B0 D328 0024          00000328  21164          STG   11,808(0,13)
0000E3C2 E3F0 D330 0024          00000330  21165          STG   15,816(0,13)
0000E3C8 41F0 D0B4               000000B4  21166          LA    15,180(0,13)
0000E3CC E3F0 D338 0024          00000338  21167          STG   15,824(0,13)
0000E3D2 4110 D2B8               000002B8  21168          LA    1,696(0,13)
0000E3D6 E3F0 C100 0004          0000DDF8  21169          LG    15,@lit_2025_1120 ; rd_kafka_log0
                                                                                                                           Page  422 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E3DC                                   21170 @@gen_label1541 DS    0H
0000E3DC 05EF                              21171          BALR  14,15
0000E3DE                                   21172 @@gen_label1542 DS    0H
0000E3DE                                   21173 @L1502   DS    0H
0000E3DE E54C 4188 FF65          00000188  21174          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000E3E4 47F0 C6FE               0000E3F6  21175          B     @_err_parse@2025@10
0000E3E8                                   21176 @L1498   DS    0H
0000E3E8                                   21177 @L1494   DS    0H
0000E3E8 D201 D0B2 D0B0 000000B2 000000B0  21178          MVC   178(2,13),176(13)
                                           21179 * ***           err = ErrorCode;
0000E3EE 4820 D0B2               000000B2  21180          LH    2,178(0,13) ; ErrorCode
                                           21181 * ***           goto err;
0000E3F2 47F0 C702               0000E3FA  21182          B     @_err@2025@9
                                           21183 * ***
                                           21184 * ***    err_parse:
                                           21185 * ***           err = rkbuf->rkbuf_err;
0000E3F6                                   21186 @_err_parse@2025@10 DS 0H
0000E3F6 5820 4188               00000188  21187          L     2,392(0,4)  ; offset of rkbuf_err in rd_kafka_buf_s
                                           21188 * ***
                                           21189 * ***
                                           21190 * ***    err:
                                           21191 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000E3FA                                   21192 @_err@2025@9 DS 0H
0000E3FA 41F0 79A0               000009A0  21193          LA    15,2464(0,7)
0000E3FE E3F0 D2B8 0024          000002B8  21194          STG   15,696(0,13)
0000E404 4110 D2B8               000002B8  21195          LA    1,696(0,13)
0000E408 E3F0 C110 0004          0000DE08  21196          LG    15,@lit_2025_1143 ; rwlock_wrlock
0000E40E                                   21197 @@gen_label1543 DS    0H
0000E40E 05EF                              21198          BALR  14,15
0000E410                                   21199 @@gen_label1544 DS    0H
                                           21200 * ***
                                           21201 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_COMMITT\
                                           21202 * ING_TRANSACTION) {
0000E410 E55C 7D38 0006          00000D38  21203          CHSI  3384(7),6
0000E416 4770 C72A               0000E422  21204          BNE   @L1513
                                           21205 * ***                   may_retry = 1;
0000E41A 9201 D2B4      000002B4 00000001  21206          MVI   692(13),1   ; may_retry
                                           21207 * ***
                                           21208 * ***           } else if (rk->rk_eos.txn_state ==
0000E41E 47F0 C86E               0000E566  21209          B     @L1524
0000E422                                   21210 @L1513   DS    0H
                                           21211 * ***                      RD_KAFKA_TXN_STATE_ABORTING_TRANSACTION) {
0000E422 E55C 7D38 0008          00000D38  21212          CHSI  3384(7),8
0000E428 4770 C73C               0000E434  21213          BNE   @L1515
                                           21214 * ***                   may_retry = 1;
0000E42C 9201 D2B4      000002B4 00000001  21215          MVI   692(13),1   ; may_retry
                                           21216 * ***
                                           21217 * ***           } else if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_\
                                           21218 * ABORTABLE_ERROR) {
0000E430 47F0 C86E               0000E566  21219          B     @L1524
0000E434                                   21220 @L1515   DS    0H
0000E434 E55C 7D38 000A          00000D38  21221          CHSI  3384(7),10
                                                                                                                           Page  423 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E43A 4770 C864               0000E55C  21222          BNE   @L1517
                                           21223 * ***
                                           21224 * ***
                                           21225 * ***
                                           21226 * ***
                                           21227 * ***
                                           21228 * ***
                                           21229 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000E43E 41F0 79A0               000009A0  21230          LA    15,2464(0,7)
0000E442 E3F0 D2B8 0024          000002B8  21231          STG   15,696(0,13)
0000E448 4110 D2B8               000002B8  21232          LA    1,696(0,13)
0000E44C E3F0 C118 0004          0000DE10  21233          LG    15,@lit_2025_1144 ; rwlock_wrunlock
0000E452                                   21234 @@gen_label1548 DS    0H
0000E452 05EF                              21235          BALR  14,15
0000E454                                   21236 @@gen_label1549 DS    0H
                                           21237 * ***
                                           21238 * ***                   if (err) {
0000E454 1222                              21239          LTR   2,2
0000E456 4780 C7C8               0000E4C0  21240          BZ    @L1518
                                           21241 * ***                           rd_kafka_txn_curr_api_reply(
                                           21242 * ***                                   rkq,
                                           21243 * ***                                   0x1,
                                           21244 * ***                                   rk->rk_eos.txn_err,
                                           21245 * ***                                   "EndTxn failed with %s but tra\
                                           21246 * nsaction "
                                           21247 * ***                                   rd_kafka_err2name(err),
                                           21248 * ***                                   rk->rk_eos.txn_errstr);
0000E45A B914 00F2                         21249          LGFR  15,2
0000E45E E3F0 D2B8 0024          000002B8  21250          STG   15,696(0,13)
0000E464 4110 D2B8               000002B8  21251          LA    1,696(0,13)
0000E468 E3F0 C120 0004          0000DE18  21252          LG    15,@lit_2025_1145 ; rd_kafka_err2name
0000E46E                                   21253 @@gen_label1551 DS    0H
0000E46E 05EF                              21254          BALR  14,15
0000E470                                   21255 @@gen_label1552 DS    0H
0000E470 E360 D2B8 0024          000002B8  21256          STG   6,696(0,13)
0000E476 E548 D2C0 0001          000002C0  21257          MVGHI 704(13),1
0000E47C E310 7ED8 0014          00000ED8  21258          LGF   1,3800(0,7)
0000E482 E310 D2C8 0024          000002C8  21259          STG   1,712(0,13)
                                           21260 * ***                                   "had already failed due to: %s\
                                           21261 * ",
0000E488 E310 C0C8 0004          0000DDC0  21262          LG    1,@lit_2025_1103
0000E48E 4110 1CAC               00000CAC  21263          LA    1,3244(0,1)
0000E492 E310 D2D0 0024          000002D0  21264          STG   1,720(0,13)
0000E498 E3F0 D2D8 0024          000002D8  21265          STG   15,728(0,13)
0000E49E E3F0 7EE0 0004          00000EE0  21266          LG    15,3808(0,7)
0000E4A4 E3F0 D2E0 0024          000002E0  21267          STG   15,736(0,13)
0000E4AA 4110 D2B8               000002B8  21268          LA    1,696(0,13)
0000E4AE E3F0 C128 0004          0000DE20  21269          LG    15,@lit_2025_1147 ; rd_kafka_txn_curr_api_reply
0000E4B4                                   21270 @@gen_label1553 DS    0H
0000E4B4 05EF                              21271          BALR  14,15
0000E4B6                                   21272 @@gen_label1554 DS    0H
                                           21273 * ***                   } else {
                                                                                                                           Page  424 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E4B6 E3C0 C0A0 001A          0000DD98  21274          ALGF  12,@lit_region_diff_2025_1_2
                                           21275          DROP  12
                        0000E5B0           21276          USING @REGION_2025_2,12
0000E4BC 47F0 C500               0000EAB0  21277          B     @ret_lab_2025
                                           21278          DROP  12
                        0000DCF8           21279          USING @REGION_2025_1,12
0000E4C0                                   21280 @L1518   DS    0H
                                           21281 * ***
                                           21282 * ***
                                           21283 * ***
                                           21284 * ***                           if (is_commit)
0000E4C0 9500 D2B5      000002B5 00000000  21285          CLI   693(13),0
0000E4C4 4780 C81A               0000E512  21286          BE    @L1520
                                           21287 * ***                                   rd_kafka_txn_curr_api_reply(
                                           21288 * ***                                           rkq,
                                           21289 * ***                                           0x200,
                                           21290 * ***                                           rk->rk_eos.txn_err,
                                           21291 * ***                                           "Transaction commit su\
                                           21292 * cceeded on the "
                                           21293 * ***                                           rk->rk_eos.txn_errstr)\
                                           21294 * ;
0000E4C8 E360 D2B8 0024          000002B8  21295          STG   6,696(0,13)
0000E4CE E548 D2C0 0200          000002C0  21296          MVGHI 704(13),512
0000E4D4 E3F0 7ED8 0014          00000ED8  21297          LGF   15,3800(0,7)
0000E4DA E3F0 D2C8 0024          000002C8  21298          STG   15,712(0,13)
                                           21299 * ***                                           "broker but the transa\
                                           21300 * ction "
                                           21301 * ***                                           "had already failed lo\
                                           21302 * cally due to: %s",
0000E4E0 E3F0 C0C8 0004          0000DDC0  21303          LG    15,@lit_2025_1103
0000E4E6 41F0 FCF0               00000CF0  21304          LA    15,3312(0,15)
0000E4EA E3F0 D2D0 0024          000002D0  21305          STG   15,720(0,13)
0000E4F0 E3F0 7EE0 0004          00000EE0  21306          LG    15,3808(0,7)
0000E4F6 E3F0 D2D8 0024          000002D8  21307          STG   15,728(0,13)
0000E4FC 4110 D2B8               000002B8  21308          LA    1,696(0,13)
0000E500 E3F0 C128 0004          0000DE20  21309          LG    15,@lit_2025_1147 ; rd_kafka_txn_curr_api_reply
0000E506                                   21310 @@gen_label1556 DS    0H
0000E506 05EF                              21311          BALR  14,15
0000E508                                   21312 @@gen_label1557 DS    0H
0000E508 E3C0 C0A0 001A          0000DD98  21313          ALGF  12,@lit_region_diff_2025_1_2
                                           21314          DROP  12
                        0000E5B0           21315          USING @REGION_2025_2,12
0000E50E 47F0 C500               0000EAB0  21316          B     @ret_lab_2025
                                           21317          DROP  12
                        0000DCF8           21318          USING @REGION_2025_1,12
                                           21319 * ***
                                           21320 * ***                           else
0000E512                                   21321 @L1520   DS    0H
                                           21322 * ***                                   rd_kafka_txn_curr_api_reply(
                                           21323 * ***                                           rkq,
                                           21324 * ***                                           0x1,
                                           21325 * ***                                           rk->rk_eos.txn_err,
                                                                                                                           Page  425 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           21326 * ***                                           "Transaction abort suc\
                                           21327 * ceeded on the "
                                           21328 * ***                                           rk->rk_eos.txn_errstr)\
                                           21329 * ;
0000E512 E360 D2B8 0024          000002B8  21330          STG   6,696(0,13)
0000E518 E548 D2C0 0001          000002C0  21331          MVGHI 704(13),1
0000E51E E3F0 7ED8 0014          00000ED8  21332          LGF   15,3800(0,7)
0000E524 E3F0 D2C8 0024          000002C8  21333          STG   15,712(0,13)
                                           21334 * ***                                           "broker but the transa\
                                           21335 * ction"
                                           21336 * ***                                           "had already failed lo\
                                           21337 * cally due to: %s",
0000E52A E3F0 C0C8 0004          0000DDC0  21338          LG    15,@lit_2025_1103
0000E530 41F0 FD56               00000D56  21339          LA    15,3414(0,15)
0000E534 E3F0 D2D0 0024          000002D0  21340          STG   15,720(0,13)
0000E53A E3F0 7EE0 0004          00000EE0  21341          LG    15,3808(0,7)
0000E540 E3F0 D2D8 0024          000002D8  21342          STG   15,728(0,13)
0000E546 4110 D2B8               000002B8  21343          LA    1,696(0,13)
0000E54A E3F0 C128 0004          0000DE20  21344          LG    15,@lit_2025_1147 ; rd_kafka_txn_curr_api_reply
0000E550                                   21345 @@gen_label1558 DS    0H
0000E550 05EF                              21346          BALR  14,15
0000E552                                   21347 @@gen_label1559 DS    0H
0000E552                                   21348 @L1521   DS    0H
                                           21349 * ***                   }
0000E552                                   21350 @L1519   DS    0H
                                           21351 * ***
                                           21352 * ***                   return;
0000E552 E3C0 C0A0 001A          0000DD98  21353          ALGF  12,@lit_region_diff_2025_1_2
                                           21354          DROP  12
                        0000E5B0           21355          USING @REGION_2025_2,12
0000E558 47F0 C500               0000EAB0  21356          B     @ret_lab_2025
                                           21357          DROP  12
                        0000DCF8           21358          USING @REGION_2025_1,12
                                           21359 * ***
                                           21360 * ***           } else if (!err) {
0000E55C                                   21361 @L1517   DS    0H
0000E55C 1222                              21362          LTR   2,2
0000E55E 4770 C86E               0000E566  21363          BNZ   @L1524
                                           21364 * ***
                                           21365 * ***                   err = RD_KAFKA_RESP_ERR__OUTDATED;
0000E562 A728 FF59               0000FF59  21366          LHI   2,-167      ; -167
                                           21367 * ***           }
0000E566                                   21368 @L1523   DS    0H
                                           21369 * ***
                                           21370 * ***
                                           21371 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           21372 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "ENDTXN","EndTxn retur\
                                           21373 * ned %s in state %s (may_retry=%s)", rd_kafka_err2name(err), rd_kafka\
                                           21374 * _txn_state2str(rk->rk_eos.txn_state), ((may_retry) ? "true" : "false\
                                           21375 * ")); } while (0);
0000E566                                   21376 @L1522   DS    0H
0000E566                                   21377 @L1516   DS    0H
                                                                                                                           Page  426 
  Active Usings: @REGION_2025_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E566                                   21378 @L1514   DS    0H
0000E566                                   21379 @L1524   DS    0H
0000E566 9180 7322      00000322 00000080  21380          TM    802(7),128
0000E56A 4770 C880               0000E578  21381          BNZ   *+14  Around region break
0000E56E E3C0 C0A0 001A          0000DD98  21382          ALGF  12,@lit_region_diff_2025_1_2
                                           21383          DROP  12
                        0000E5B0           21384          USING @REGION_2025_2,12
0000E574 47F0 C10A               0000E6BA  21385          B     @L1527
                                           21386          DROP  12
                        0000DCF8           21387          USING @REGION_2025_1,12
0000E578 B914 00F2                         21388          LGFR  15,2
0000E57C E3F0 D2B8 0024          000002B8  21389          STG   15,696(0,13)
0000E582 4110 D2B8               000002B8  21390          LA    1,696(0,13)
0000E586 E3F0 C120 0004          0000DE18  21391          LG    15,@lit_2025_1145 ; rd_kafka_err2name
0000E58C                                   21392 @@gen_label1562 DS    0H
0000E58C 05EF                              21393          BALR  14,15
0000E58E                                   21394 @@gen_label1563 DS    0H
0000E58E B904 004F                         21395          LGR   4,15
0000E592 E3F0 7D38 0014          00000D38  21396          LGF   15,3384(0,7)
0000E598 E3F0 D2B8 0024          000002B8  21397          STG   15,696(0,13)
0000E59E 4110 D2B8               000002B8  21398          LA    1,696(0,13)
0000E5A2 E3F0 C130 0004          0000DE28  21399          LG    15,@lit_2025_1154 ; rd_kafka_txn_state2str
0000E5A8                                   21400 @@gen_label1564 DS    0H
0000E5A8 05EF                              21401          BALR  14,15
0000E5AA                                   21402 @@gen_label1565 DS    0H
0000E5AA E3C0 C0A0 001A          0000DD98  21403          ALGF  12,@lit_region_diff_2025_1_2
0000E5B0                                   21404 @REGION_2025_2 DS 0H
                                           21405          DROP  12
                        0000E5B0           21406          USING @REGION_2025_2,12
0000E5B0 9500 D2B4      000002B4 00000000  21407          CLI   692(13),0
0000E5B4 4780 C0A0               0000E650  21408          BE    @L1528
0000E5B8 E310 C018 0004          0000E5C8  21409          LG    1,@lit_2025_1155
0000E5BE 4110 1DBA               00000DBA  21410          LA    1,3514(0,1)
0000E5C2 47F0 C0AA               0000E65A  21411          B     @L1529
0000E5C8                                   21412          DS    0D
0000E5C8 0000000000014A98                  21413 @lit_2025_1155 DC AD(@strings@)
0000E5D0 0000000000000000                  21414 @lit_2025_1159 DC AD(rd_kafka_log0)
0000E5D8 0000000000004DE8                  21415 @lit_2025_1160 DC AD(rd_kafka_txn_set_state)
0000E5E0 0000000000000000                  21416 @lit_2025_1162 DC AD(rwlock_wrunlock)
0000E5E8 0000000000000000                  21417 @lit_2025_1163 DC AD(rwlock_wrlock)
0000E5F0 0000000000000000                  21418 @lit_2025_1164 DC AD(rd_kafka_err2str)
0000E5F8 0000000000013A18                  21419 @lit_2025_1166 DC AD(rd_kafka_txn_coord_set)
0000E600 0000000000000001                  21420 @lit_2025_1168 DC FD'1' 0x0000000000000001
0000E608 0000000000000006                  21421 @lit_2025_1169 DC FD'6' 0x0000000000000006
0000E610 0000000000000003                  21422 @lit_2025_1170 DC FD'3' 0x0000000000000003
0000E618 0000000000000004                  21423 @lit_2025_1171 DC FD'4' 0x0000000000000004
0000E620 00000000000044D0                  21424 @lit_2025_1172 DC AD(rd_kafka_txn_normalize_err)
0000E628 0000000000005118                  21425 @lit_2025_1175 DC AD(rd_kafka_txn_set_fatal_error)
0000E630 0000000000010BF8                  21426 @lit_2025_1176 DC AD(rd_kafka_txn_coord_timer_restart)
0000E638 0000000000005448                  21427 @lit_2025_1179 DC AD(rd_kafka_txn_set_abortable_error0)
0000E640 0000000000000000                  21428 @lit_2025_1180 DC AD(rd_kafka_buf_retry)
0000E648 0000000000005A68                  21429 @lit_2025_1185 DC AD(rd_kafka_txn_curr_api_reply)
                                                                                                                           Page  427 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E650                                   21430 @L1528   DS    0H
0000E650 E310 C018 0004          0000E5C8  21431          LG    1,@lit_2025_1155
0000E656 4110 1DC0               00000DC0  21432          LA    1,3520(0,1)
0000E65A                                   21433 @L1529   DS    0H
0000E65A 4150 7210               00000210  21434          LA    5,528(0,7)
0000E65E E350 D2B8 0024          000002B8  21435          STG   5,696(0,13)
0000E664 E370 D2C0 0024          000002C0  21436          STG   7,704(0,13)
0000E66A D707 D2C8 D2C8 000002C8 000002C8  21437          XC    712(8,13),712(13)
0000E670 E548 D2D0 0007          000002D0  21438          MVGHI 720(13),7
0000E676 C05F 0000 8000                    21439          LLILF 5,X'00008000' ; 32768
0000E67C E350 D2D8 0024          000002D8  21440          STG   5,728(0,13)
0000E682 E350 C018 0004          0000E5C8  21441          LG    5,@lit_2025_1155
0000E688 4190 5DC6               00000DC6  21442          LA    9,3526(0,5)
0000E68C E390 D2E0 0024          000002E0  21443          STG   9,736(0,13)
0000E692 4150 5DCE               00000DCE  21444          LA    5,3534(0,5)
0000E696 E350 D2E8 0024          000002E8  21445          STG   5,744(0,13)
0000E69C E340 D2F0 0024          000002F0  21446          STG   4,752(0,13)
0000E6A2 E3F0 D2F8 0024          000002F8  21447          STG   15,760(0,13)
0000E6A8 E310 D300 0024          00000300  21448          STG   1,768(0,13)
0000E6AE 4110 D2B8               000002B8  21449          LA    1,696(0,13)
0000E6B2 E3F0 C020 0004          0000E5D0  21450          LG    15,@lit_2025_1159 ; rd_kafka_log0
0000E6B8                                   21451 @@gen_label1567 DS    0H
0000E6B8 05EF                              21452          BALR  14,15
0000E6BA                                   21453 @@gen_label1568 DS    0H
0000E6BA                                   21454 @L1527   DS    0H
                                           21455 * ***
                                           21456 * ***
                                           21457 * ***
                                           21458 * ***
                                           21459 * ***
                                           21460 * ***           if (!err) {
0000E6BA 1222                              21461          LTR   2,2
0000E6BC 4770 C14C               0000E6FC  21462          BNZ   @L1530
                                           21463 * ***
                                           21464 * ***                   if (is_commit)
0000E6C0 9500 D2B5      000002B5 00000000  21465          CLI   693(13),0
0000E6C4 4780 C134               0000E6E4  21466          BE    @L1531
                                           21467 * ***                           rd_kafka_txn_set_state(
                                           21468 * ***                                   rk, RD_KAFKA_TXN_STATE_COMMIT_\
                                           21469 * NOT_ACKED);
0000E6C8 E370 D2B8 0024          000002B8  21470          STG   7,696(0,13)
0000E6CE E548 D2C0 0007          000002C0  21471          MVGHI 704(13),7
0000E6D4 4110 D2B8               000002B8  21472          LA    1,696(0,13)
0000E6D8 E3F0 C028 0004          0000E5D8  21473          LG    15,@lit_2025_1160 ; rd_kafka_txn_set_state
0000E6DE                                   21474 @@gen_label1571 DS    0H
0000E6DE 05EF                              21475          BALR  14,15
0000E6E0                                   21476 @@gen_label1572 DS    0H
0000E6E0 47F0 C14C               0000E6FC  21477          B     @L1530
                                           21478 * ***                   else
0000E6E4                                   21479 @L1531   DS    0H
                                           21480 * ***                           rd_kafka_txn_set_state(
                                           21481 * ***                                   rk, RD_KAFKA_TXN_STATE_ABORT_N\
                                                                                                                           Page  428 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           21482 * OT_ACKED);
0000E6E4 E370 D2B8 0024          000002B8  21483          STG   7,696(0,13)
0000E6EA E548 D2C0 0009          000002C0  21484          MVGHI 704(13),9
0000E6F0 4110 D2B8               000002B8  21485          LA    1,696(0,13)
0000E6F4 E3F0 C028 0004          0000E5D8  21486          LG    15,@lit_2025_1160 ; rd_kafka_txn_set_state
0000E6FA                                   21487 @@gen_label1573 DS    0H
0000E6FA 05EF                              21488          BALR  14,15
0000E6FC                                   21489 @@gen_label1574 DS    0H
0000E6FC                                   21490 @L1532   DS    0H
                                           21491 * ***           }
0000E6FC                                   21492 @L1530   DS    0H
                                           21493 * ***
                                           21494 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000E6FC 41F0 79A0               000009A0  21495          LA    15,2464(0,7)
0000E700 E3F0 D2B8 0024          000002B8  21496          STG   15,696(0,13)
0000E706 4110 D2B8               000002B8  21497          LA    1,696(0,13)
0000E70A E3F0 C030 0004          0000E5E0  21498          LG    15,@lit_2025_1162 ; rwlock_wrunlock
0000E710                                   21499 @@gen_label1575 DS    0H
0000E710 05EF                              21500          BALR  14,15
0000E712                                   21501 @@gen_label1576 DS    0H
                                           21502 * ***
                                           21503 * ***           switch (err)
0000E712 47F0 C206               0000E7B6  21504          B     @L1533
                                           21505 * ***           {
                                           21506 * ***           case RD_KAFKA_RESP_ERR_NO_ERROR:
                                           21507 * ***                   break;
                                           21508 * ***
                                           21509 * ***           case RD_KAFKA_RESP_ERR__DESTROY:
                                           21510 * ***
                                           21511 * ***           case RD_KAFKA_RESP_ERR__TIMED_OUT:
                                           21512 * ***
                                           21513 * ***
                                           21514 * ***           case RD_KAFKA_RESP_ERR__OUTDATED:
                                           21515 * ***
                                           21516 * ***
                                           21517 * ***                   break;
                                           21518 * ***
                                           21519 * ***           case RD_KAFKA_RESP_ERR__TRANSPORT:
0000E716                                   21520 @L1539   DS    0H
                                           21521 * ***                   actions |= 0x8|
                                           21522 * ***                           0x4;
0000E716 A53B 000C               0000000C  21523          OILL  3,12
                                           21524 * ***                   break;
0000E71A 47F0 C336               0000E8E6  21525          B     @L1534
                                           21526 * ***
                                           21527 * ***           case RD_KAFKA_RESP_ERR_COORDINATOR_NOT_AVAILABLE:
                                           21528 * ***           case RD_KAFKA_RESP_ERR_NOT_COORDINATOR:
0000E71E                                   21529 @L1541   DS    0H
                                           21530 * ***                   rwlock_wrlock(&(rk)->rk_lock);
0000E71E 41F0 79A0               000009A0  21531          LA    15,2464(0,7)
0000E722 E3F0 D2B8 0024          000002B8  21532          STG   15,696(0,13)
0000E728 4110 D2B8               000002B8  21533          LA    1,696(0,13)
                                                                                                                           Page  429 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E72C E3F0 C038 0004          0000E5E8  21534          LG    15,@lit_2025_1163 ; rwlock_wrlock
0000E732                                   21535 @@gen_label1577 DS    0H
0000E732 05EF                              21536          BALR  14,15
0000E734                                   21537 @@gen_label1578 DS    0H
                                           21538 * ***                   rd_kafka_txn_coord_set(rk, ((void *)0),
                                           21539 * ***                                          "EndTxn failed: %s",
                                           21540 * ***                                          rd_kafka_err2str(err));
0000E734 B914 00F2                         21541          LGFR  15,2
0000E738 E3F0 D2B8 0024          000002B8  21542          STG   15,696(0,13)
0000E73E 4110 D2B8               000002B8  21543          LA    1,696(0,13)
0000E742 E3F0 C040 0004          0000E5F0  21544          LG    15,@lit_2025_1164 ; rd_kafka_err2str
0000E748                                   21545 @@gen_label1579 DS    0H
0000E748 05EF                              21546          BALR  14,15
0000E74A                                   21547 @@gen_label1580 DS    0H
0000E74A E370 D2B8 0024          000002B8  21548          STG   7,696(0,13)
0000E750 D707 D2C0 D2C0 000002C0 000002C0  21549          XC    704(8,13),704(13)
0000E756 E310 C018 0004          0000E5C8  21550          LG    1,@lit_2025_1155
0000E75C 4110 1DFC               00000DFC  21551          LA    1,3580(0,1)
0000E760 E310 D2C8 0024          000002C8  21552          STG   1,712(0,13)
0000E766 E3F0 D2D0 0024          000002D0  21553          STG   15,720(0,13)
0000E76C 4110 D2B8               000002B8  21554          LA    1,696(0,13)
0000E770 E3F0 C048 0004          0000E5F8  21555          LG    15,@lit_2025_1166 ; rd_kafka_txn_coord_set
0000E776                                   21556 @@gen_label1581 DS    0H
0000E776 05EF                              21557          BALR  14,15
0000E778                                   21558 @@gen_label1582 DS    0H
                                           21559 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000E778 41F0 79A0               000009A0  21560          LA    15,2464(0,7)
0000E77C E3F0 D2B8 0024          000002B8  21561          STG   15,696(0,13)
0000E782 4110 D2B8               000002B8  21562          LA    1,696(0,13)
0000E786 E3F0 C030 0004          0000E5E0  21563          LG    15,@lit_2025_1162 ; rwlock_wrunlock
0000E78C                                   21564 @@gen_label1583 DS    0H
0000E78C 05EF                              21565          BALR  14,15
0000E78E                                   21566 @@gen_label1584 DS    0H
                                           21567 * ***                   actions |= 0x8;
0000E78E A53B 0008               00000008  21568          OILL  3,8
                                           21569 * ***                   break;
0000E792 47F0 C336               0000E8E6  21570          B     @L1534
                                           21571 * ***
                                           21572 * ***           case RD_KAFKA_RESP_ERR_COORDINATOR_LOAD_IN_PROGRESS:
                                           21573 * ***           case RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS:
0000E796                                   21574 @L1543   DS    0H
                                           21575 * ***                   actions |= 0x8;
0000E796 A53B 0008               00000008  21576          OILL  3,8
                                           21577 * ***                   break;
0000E79A 47F0 C336               0000E8E6  21578          B     @L1534
                                           21579 * ***
                                           21580 * ***           case RD_KAFKA_RESP_ERR_UNKNOWN_PRODUCER_ID:
                                           21581 * ***           case RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING:
0000E79E                                   21582 @L1545   DS    0H
                                           21583 * ***                   actions |= 0x1;
0000E79E A53B 0001               00000001  21584          OILL  3,1
                                           21585 * ***                   break;
                                                                                                                           Page  430 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E7A2 47F0 C336               0000E8E6  21586          B     @L1534
                                           21587 * ***
                                           21588 * ***           case RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH:
                                           21589 * ***           case RD_KAFKA_RESP_ERR_PRODUCER_FENCED:
                                           21590 * ***           case RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_\
                                           21591 * FAILED:
                                           21592 * ***           case RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED:
                                           21593 * ***           case RD_KAFKA_RESP_ERR_INVALID_TXN_STATE:
0000E7A6                                   21594 @L1550   DS    0H
                                           21595 * ***                   actions |= 0x200;
0000E7A6 A53B 0200               00000200  21596          OILL  3,512
                                           21597 * ***                   break;
0000E7AA 47F0 C336               0000E8E6  21598          B     @L1534
                                           21599 * ***
                                           21600 * ***           default:
                                           21601 * ***
                                           21602 * ***                   actions |= 0x1;
0000E7AE                                   21603 @L1551   DS    0H
0000E7AE A53B 0001               00000001  21604          OILL  3,1
                                           21605 * ***           }
0000E7B2 47F0 C336               0000E8E6  21606          B     @L1534
0000E7B6                                   21607 @L1533   DS    0H
0000E7B6 A72E FF47               0000FF47  21608          CHI   2,-185
0000E7BA 47B0 C22A               0000E7DA  21609          BNL   @@gen_label1585
0000E7BE A72E FF3B               0000FF3B  21610          CHI   2,-197
0000E7C2 4740 C1FE               0000E7AE  21611          BL    @L1551
0000E7C6 A72E FF3B               0000FF3B  21612          CHI   2,-197
0000E7CA 4780 C336               0000E8E6  21613          BE    @L1534
0000E7CE A72E FF3D               0000FF3D  21614          CHI   2,-195
0000E7D2 4780 C166               0000E716  21615          BE    @L1539
0000E7D6 47F0 C1FE               0000E7AE  21616          B     @L1551
0000E7DA                                   21617 @@gen_label1585 DS 0H
0000E7DA A72E FF59               0000FF59  21618          CHI   2,-167
0000E7DE 47B0 C23E               0000E7EE  21619          BNL   @@gen_label1586
0000E7E2 A72E FF47               0000FF47  21620          CHI   2,-185
0000E7E6 4780 C336               0000E8E6  21621          BE    @L1534
0000E7EA 47F0 C1FE               0000E7AE  21622          B     @L1551
0000E7EE                                   21623 @@gen_label1586 DS 0H
0000E7EE 1222                              21624          LTR   2,2
0000E7F0 47B0 C250               0000E800  21625          BNL   @@gen_label1587
0000E7F4 A72E FF59               0000FF59  21626          CHI   2,-167
0000E7F8 4780 C336               0000E8E6  21627          BE    @L1534
0000E7FC 47F0 C1FE               0000E7AE  21628          B     @L1551
0000E800                                   21629 @@gen_label1587 DS 0H
0000E800 A72E 000E               0000000E  21630          CHI   2,14
0000E804 47B0 C262               0000E812  21631          BNL   @@gen_label1588
0000E808 1222                              21632          LTR   2,2
0000E80A 4780 C336               0000E8E6  21633          BE    @L1534
0000E80E 47F0 C1FE               0000E7AE  21634          B     @L1551
0000E812                                   21635 @@gen_label1588 DS 0H
0000E812 A72E 001F               0000001F  21636          CHI   2,31
0000E816 47B0 C2A4               0000E854  21637          BNL   @@gen_label1589
                                                                                                                           Page  431 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E81A 18F2                              21638          LR    15,2
0000E81C A7FA FFF2               0000FFF2  21639          AHI   15,-14
0000E820 C2FF 0000 0002                    21640          CLFI  15,X'00000002'
0000E826 4720 C1FE               0000E7AE  21641          BH    @L1551
0000E82A B914 00FF                         21642          LGFR  15,15
0000E82E A719 0001               00000001  21643          LGHI  1,1
0000E832 EB11 F000 000D          00000000  21644          SLLG  1,1,0(15)
0000E838 B904 00F1                         21645          LGR   15,1
0000E83C E3F0 C050 0080          0000E600  21646          NG    15,@lit_2025_1168
0000E842 4770 C1E6               0000E796  21647          BNZ   @L1543
0000E846 E310 C058 0080          0000E608  21648          NG    1,@lit_2025_1169
0000E84C 4770 C16E               0000E71E  21649          BNZ   @L1541
0000E850 47F0 C1FE               0000E7AE  21650          B     @L1551
0000E854                                   21651 @@gen_label1589 DS 0H
0000E854 A72E 002F               0000002F  21652          CHI   2,47
0000E858 47B0 C2B8               0000E868  21653          BNL   @@gen_label1590
0000E85C A72E 001F               0000001F  21654          CHI   2,31
0000E860 4780 C1F6               0000E7A6  21655          BE    @L1550
0000E864 47F0 C1FE               0000E7AE  21656          B     @L1551
0000E868                                   21657 @@gen_label1590 DS 0H
0000E868 A72E 005A               0000005A  21658          CHI   2,90
0000E86C 47B0 C32A               0000E8DA  21659          BNL   @@gen_label1591
0000E870 A72E 003B               0000003B  21660          CHI   2,59
0000E874 47B0 C31E               0000E8CE  21661          BNL   @@gen_label1592
0000E878 A72E 0033               00000033  21662          CHI   2,51
0000E87C 47B0 C30A               0000E8BA  21663          BNL   @@gen_label1593
0000E880 18F2                              21664          LR    15,2
0000E882 A7FA FFD1               0000FFD1  21665          AHI   15,-47
0000E886 C2FF 0000 0002                    21666          CLFI  15,X'00000002'
0000E88C 4720 C1FE               0000E7AE  21667          BH    @L1551
0000E890 B914 00FF                         21668          LGFR  15,15
0000E894 A719 0001               00000001  21669          LGHI  1,1
0000E898 EB11 F000 000D          00000000  21670          SLLG  1,1,0(15)
0000E89E B904 00F1                         21671          LGR   15,1
0000E8A2 E3F0 C060 0080          0000E610  21672          NG    15,@lit_2025_1170
0000E8A8 4770 C1F6               0000E7A6  21673          BNZ   @L1550
0000E8AC E310 C068 0080          0000E618  21674          NG    1,@lit_2025_1171
0000E8B2 4770 C1EE               0000E79E  21675          BNZ   @L1545
0000E8B6 47F0 C1FE               0000E7AE  21676          B     @L1551
0000E8BA                                   21677 @@gen_label1593 DS 0H
0000E8BA A72E 0033               00000033  21678          CHI   2,51
0000E8BE 4780 C1E6               0000E796  21679          BE    @L1543
0000E8C2 A72E 0035               00000035  21680          CHI   2,53
0000E8C6 4780 C1F6               0000E7A6  21681          BE    @L1550
0000E8CA 47F0 C1FE               0000E7AE  21682          B     @L1551
0000E8CE                                   21683 @@gen_label1592 DS 0H
0000E8CE A72E 003B               0000003B  21684          CHI   2,59
0000E8D2 4780 C1EE               0000E79E  21685          BE    @L1545
0000E8D6 47F0 C1FE               0000E7AE  21686          B     @L1551
0000E8DA                                   21687 @@gen_label1591 DS 0H
0000E8DA A72E 005A               0000005A  21688          CHI   2,90
0000E8DE 4780 C1F6               0000E7A6  21689          BE    @L1550
                                                                                                                           Page  432 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E8E2 47F0 C1FE               0000E7AE  21690          B     @L1551
0000E8E6                                   21691 @L1534   DS    0H
                                           21692 * ***
                                           21693 * ***           err = rd_kafka_txn_normalize_err(err);
0000E8E6 B914 00F2                         21694          LGFR  15,2
0000E8EA E3F0 D2B8 0024          000002B8  21695          STG   15,696(0,13)
0000E8F0 4110 D2B8               000002B8  21696          LA    1,696(0,13)
0000E8F4 E3F0 C070 0004          0000E620  21697          LG    15,@lit_2025_1172 ; rd_kafka_txn_normalize_err
0000E8FA                                   21698 @@gen_label1594 DS    0H
0000E8FA 05EF                              21699          BALR  14,15
0000E8FC                                   21700 @@gen_label1595 DS    0H
0000E8FC 182F                              21701          LR    2,15        ; err
                                           21702 * ***
                                           21703 * ***           if (actions & 0x200) {
0000E8FE 18F3                              21704          LR    15,3
0000E900 C0FB 0000 0200                    21705          NILF  15,X'00000200'
0000E906 12FF                              21706          LTR   15,15
0000E908 4780 C3AE               0000E95E  21707          BZ    @L1552
                                           21708 * ***                   rd_kafka_txn_set_fatal_error(rk, RD_DO_LOCK, e\
                                           21709 * rr,
                                           21710 * ***                                                "Failed to end tr\
                                           21711 * ansaction: %s",
                                           21712 * ***                                                rd_kafka_err2str(\
                                           21713 * err));
0000E90C B914 00F2                         21714          LGFR  15,2
0000E910 E3F0 D2B8 0024          000002B8  21715          STG   15,696(0,13)
0000E916 4110 D2B8               000002B8  21716          LA    1,696(0,13)
0000E91A E3F0 C040 0004          0000E5F0  21717          LG    15,@lit_2025_1164 ; rd_kafka_err2str
0000E920                                   21718 @@gen_label1597 DS    0H
0000E920 05EF                              21719          BALR  14,15
0000E922                                   21720 @@gen_label1598 DS    0H
0000E922 E370 D2B8 0024          000002B8  21721          STG   7,696(0,13)
0000E928 E548 D2C0 0001          000002C0  21722          MVGHI 704(13),1
0000E92E B914 0012                         21723          LGFR  1,2
0000E932 E310 D2C8 0024          000002C8  21724          STG   1,712(0,13)
0000E938 E310 C018 0004          0000E5C8  21725          LG    1,@lit_2025_1155
0000E93E 4110 1E0E               00000E0E  21726          LA    1,3598(0,1)
0000E942 E310 D2D0 0024          000002D0  21727          STG   1,720(0,13)
0000E948 E3F0 D2D8 0024          000002D8  21728          STG   15,728(0,13)
0000E94E 4110 D2B8               000002B8  21729          LA    1,696(0,13)
0000E952 E3F0 C078 0004          0000E628  21730          LG    15,@lit_2025_1175 ; rd_kafka_txn_set_fatal_error
0000E958                                   21731 @@gen_label1599 DS    0H
0000E958 05EF                              21732          BALR  14,15
0000E95A                                   21733 @@gen_label1600 DS    0H
                                           21734 * ***           } else {
0000E95A 47F0 C466               0000EA16  21735          B     @L1553
0000E95E                                   21736 @L1552   DS    0H
                                           21737 * ***                   if (actions & 0x4)
0000E95E A731 0004               00000004  21738          TML   3,4
0000E962 4780 C3CE               0000E97E  21739          BZ    @L1554
                                           21740 * ***                           rd_kafka_txn_coord_timer_restart(rk, 5\
                                           21741 * 00);
                                                                                                                           Page  433 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000E966 E370 D2B8 0024          000002B8  21742          STG   7,696(0,13)
0000E96C E548 D2C0 01F4          000002C0  21743          MVGHI 704(13),500
0000E972 4110 D2B8               000002B8  21744          LA    1,696(0,13)
0000E976 E3F0 C080 0004          0000E630  21745          LG    15,@lit_2025_1176 ; rd_kafka_txn_coord_timer_restart
0000E97C                                   21746 @@gen_label1602 DS    0H
0000E97C 05EF                              21747          BALR  14,15
0000E97E                                   21748 @@gen_label1603 DS    0H
0000E97E                                   21749 @L1554   DS    0H
                                           21750 * ***
                                           21751 * ***                   if (actions & 0x1)
0000E97E A731 0001               00000001  21752          TML   3,1
0000E982 4780 C428               0000E9D8  21753          BZ    @L1555
                                           21754 * ***                           rd_kafka_txn_set_abortable_error0(rk,e\
                                           21755 * rr,0,"Failed to end transaction: " "%s", rd_kafka_err2str(err));
0000E986 B914 00F2                         21756          LGFR  15,2
0000E98A E3F0 D2B8 0024          000002B8  21757          STG   15,696(0,13)
0000E990 4110 D2B8               000002B8  21758          LA    1,696(0,13)
0000E994 E3F0 C040 0004          0000E5F0  21759          LG    15,@lit_2025_1164 ; rd_kafka_err2str
0000E99A                                   21760 @@gen_label1605 DS    0H
0000E99A 05EF                              21761          BALR  14,15
0000E99C                                   21762 @@gen_label1606 DS    0H
0000E99C E370 D2B8 0024          000002B8  21763          STG   7,696(0,13)
0000E9A2 B914 0012                         21764          LGFR  1,2
0000E9A6 E310 D2C0 0024          000002C0  21765          STG   1,704(0,13)
0000E9AC D707 D2C8 D2C8 000002C8 000002C8  21766          XC    712(8,13),712(13)
0000E9B2 E310 C018 0004          0000E5C8  21767          LG    1,@lit_2025_1155
0000E9B8 4110 1E0E               00000E0E  21768          LA    1,3598(0,1)
0000E9BC E310 D2D0 0024          000002D0  21769          STG   1,720(0,13)
0000E9C2 E3F0 D2D8 0024          000002D8  21770          STG   15,728(0,13)
0000E9C8 4110 D2B8               000002B8  21771          LA    1,696(0,13)
0000E9CC E3F0 C088 0004          0000E638  21772          LG    15,@lit_2025_1179 ; rd_kafka_txn_set_abortable_error0
0000E9D2                                   21773 @@gen_label1607 DS    0H
0000E9D2 05EF                              21774          BALR  14,15
0000E9D4                                   21775 @@gen_label1608 DS    0H
0000E9D4 47F0 C466               0000EA16  21776          B     @L1553
                                           21777 * ***
                                           21778 * ***
                                           21779 * ***
                                           21780 * ***                   else if (may_retry && actions & 0x8 &&
0000E9D8                                   21781 @L1555   DS    0H
0000E9D8 9500 D2B4      000002B4 00000000  21782          CLI   692(13),0
0000E9DC 4780 C466               0000EA16  21783          BE    @L1553
0000E9E0 A731 0008               00000008  21784          TML   3,8
0000E9E4 4780 C466               0000EA16  21785          BZ    @L1553
                                           21786 * ***                            rd_kafka_buf_retry(rkb, request))
0000E9E8 E3F0 8008 0004          00000008  21787          LG    15,8(0,8)   ; rkb
0000E9EE E3F0 D2B8 0024          000002B8  21788          STG   15,696(0,13)
0000E9F4 E3F0 8020 0004          00000020  21789          LG    15,32(0,8)  ; request
0000E9FA E3F0 D2C0 0024          000002C0  21790          STG   15,704(0,13)
0000EA00 4110 D2B8               000002B8  21791          LA    1,696(0,13)
0000EA04 E3F0 C090 0004          0000E640  21792          LG    15,@lit_2025_1180 ; rd_kafka_buf_retry
0000EA0A                                   21793 @@gen_label1611 DS    0H
                                                                                                                           Page  434 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EA0A 05EF                              21794          BALR  14,15
0000EA0C                                   21795 @@gen_label1612 DS    0H
0000EA0C 12FF                              21796          LTR   15,15
0000EA0E 4780 C466               0000EA16  21797          BZ    @L1553
                                           21798 * ***                           return;
0000EA12 47F0 C500               0000EAB0  21799          B     @ret_lab_2025
                                           21800 * ***           }
0000EA16                                   21801 @L1553   DS    0H
                                           21802 * ***
                                           21803 * ***           if (err)
0000EA16 1222                              21804          LTR   2,2
0000EA18 4780 C4E8               0000EA98  21805          BZ    @L1558
                                           21806 * ***                   rd_kafka_txn_curr_api_reply(
                                           21807 * ***                           rkq, actions, err,
                                           21808 * ***                           "EndTxn %s failed: %s", is_commit ? "c\
                                           21809 * ommit" : "abort",
                                           21810 * ***                           rd_kafka_err2str(err));
0000EA1C 9500 D2B5      000002B5 00000000  21811          CLI   693(13),0
0000EA20 4780 C482               0000EA32  21812          BE    @L1559
0000EA24 E3F0 C018 0004          0000E5C8  21813          LG    15,@lit_2025_1155
0000EA2A 4140 FE2C               00000E2C  21814          LA    4,3628(0,15)
0000EA2E 47F0 C48C               0000EA3C  21815          B     @L1560
0000EA32                                   21816 @L1559   DS    0H
0000EA32 E3F0 C018 0004          0000E5C8  21817          LG    15,@lit_2025_1155
0000EA38 4140 FE34               00000E34  21818          LA    4,3636(0,15)
0000EA3C                                   21819 @L1560   DS    0H
0000EA3C B914 00F2                         21820          LGFR  15,2
0000EA40 E3F0 D2B8 0024          000002B8  21821          STG   15,696(0,13)
0000EA46 4110 D2B8               000002B8  21822          LA    1,696(0,13)
0000EA4A E3F0 C040 0004          0000E5F0  21823          LG    15,@lit_2025_1164 ; rd_kafka_err2str
0000EA50                                   21824 @@gen_label1616 DS    0H
0000EA50 05EF                              21825          BALR  14,15
0000EA52                                   21826 @@gen_label1617 DS    0H
0000EA52 E360 D2B8 0024          000002B8  21827          STG   6,696(0,13)
0000EA58 B914 0013                         21828          LGFR  1,3
0000EA5C E310 D2C0 0024          000002C0  21829          STG   1,704(0,13)
0000EA62 B914 0012                         21830          LGFR  1,2
0000EA66 E310 D2C8 0024          000002C8  21831          STG   1,712(0,13)
0000EA6C E310 C018 0004          0000E5C8  21832          LG    1,@lit_2025_1155
0000EA72 4110 1E3A               00000E3A  21833          LA    1,3642(0,1)
0000EA76 E310 D2D0 0024          000002D0  21834          STG   1,720(0,13)
0000EA7C E340 D2D8 0024          000002D8  21835          STG   4,728(0,13)
0000EA82 E3F0 D2E0 0024          000002E0  21836          STG   15,736(0,13)
0000EA88 4110 D2B8               000002B8  21837          LA    1,696(0,13)
0000EA8C E3F0 C098 0004          0000E648  21838          LG    15,@lit_2025_1185 ; rd_kafka_txn_curr_api_reply
0000EA92                                   21839 @@gen_label1618 DS    0H
0000EA92 05EF                              21840          BALR  14,15
0000EA94                                   21841 @@gen_label1619 DS    0H
0000EA94 47F0 C500               0000EAB0  21842          B     @L1561
                                           21843 * ***           else
0000EA98                                   21844 @L1558   DS    0H
                                           21845 * ***                   rd_kafka_txn_curr_api_reply(rkq, 0, RD_KAFKA_R\
                                                                                                                           Page  435 
  Active Usings: @REGION_2025_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           21846 * ESP_ERR_NO_ERROR,
                                           21847 * ***                                               ((void *)0));
0000EA98 E360 D2B8 0024          000002B8  21848          STG   6,696(0,13)
0000EA9E D717 D2C0 D2C0 000002C0 000002C0  21849          XC    704(24,13),704(13)
0000EAA4 4110 D2B8               000002B8  21850          LA    1,696(0,13)
0000EAA8 E3F0 C098 0004          0000E648  21851          LG    15,@lit_2025_1185 ; rd_kafka_txn_curr_api_reply
0000EAAE                                   21852 @@gen_label1620 DS    0H
0000EAAE 05EF                              21853          BALR  14,15
0000EAB0                                   21854 @@gen_label1621 DS    0H
0000EAB0                                   21855 @L1561   DS    0H
                                           21856 * ***   }
0000EAB0                                   21857 @ret_lab_2025 DS 0H
                                           21858 * * **** Start of Epilogue
                                           21859          DCCEPIL
0000EAB0                                   21860+         ds 0h                                                          01-DCCEP
                                           21861+* Epilog
0000EAB0 D707 D088 D088 00000088 00000088  21862+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000EAB6 E3D0 D080 0004          00000080  21863+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000EABC E3C0 D090 0004          00000090  21864+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000EAC2 E3B0 C018 0004          00000018  21865+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000EAC8 E3C0 B010 0021          00000010  21866+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000EACE E3E0 D008 0004          00000008  21867+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000EAD4 EB1C D020 0004          00000020  21868+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000EADA 078E                              21869+         bcr 8,14                if same dsab, just return              01-DCCEP
0000EADC E3F0 D010 0024          00000010  21870+         stg 15,16(0,13)         save return code                       01-DCCEP
0000EAE2 E300 D018 0024          00000018  21871+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000EAE8 E3F0 D090 0004          00000090  21872+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000EAEE E3F0 F018 0004          00000018  21873+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000EAF4 47F0 F040               00000040  21874+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21875+* End of Epilog
                                           21876 * * **** End of Epilogue
                                           21877          DROP  12
                                           21878 *
                                           21879 *   DSECT for automatic variables in "rd_kafka_txn_handle_EndTxn"
                                           21880 *      (FUNCTION #2025)
                                           21881 *
00000000                00000000 000002B6  21882 @AUTO#rd_kafka_txn_handle_$End$Txn DSECT
00000000                                   21883          DS    XL168
000000A8                                   21884 rd_kafka_txn_handle_$End$Txn#__len0#13 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  21885          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+168
000000A8                                   21886 rd_kafka_txn_handle_$End$Txn#__len2#12 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  21887          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+168
000000A8                                   21888 rd_kafka_txn_handle_$End$Txn#__len0#5 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  21889          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+168
000000A8                                   21890 rd_kafka_txn_handle_$End$Txn#__len2#4 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  21891          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+168
000000A8                                   21892 rd_kafka_txn_handle_$End$Txn#_throttle_time_ms#2 DS 1F ; _throttle_time*
                                                                _ms
000000AC                000000AC 000000A8  21893          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+168
000000A8                                   21894 rd_kafka_txn_handle_$End$Txn#actions#0 DS 1F ; actions
000000AC                000000AC 000000A8  21895          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+168
000000A8                                   21896 rd_kafka_txn_handle_$End$Txn#log_decode_errors#0 DS 1F ; log_decode_err*
                                                                                                                           Page  436 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                ors
000000AC                000000AC 000000AC  21897          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+172
000000AC                                   21898 rd_kafka_txn_handle_$End$Txn#_v#3 DS 1F ; _v
000000B0                000000B0 000000B0  21899          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+176
000000B0                                   21900 rd_kafka_txn_handle_$End$Txn#_v#11 DS 2XL1 ; _v
000000B2                000000B2 000000B2  21901          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+178
000000B2                                   21902 rd_kafka_txn_handle_$End$Txn#$Error$Code#0 DS 2XL1 ; ErrorCode
000000B4                000000B4 000000B4  21903          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+180
000000B4                                   21904 rd_kafka_txn_handle_$End$Txn#__tmpstr#17 DS 256XL1 ; __tmpstr
000001B4                000001B4 000000B4  21905          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+180
000000B4                                   21906 rd_kafka_txn_handle_$End$Txn#__tmpstr#9 DS 256XL1 ; __tmpstr
000001B4                000001B4 000001B4  21907          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+436
000001B4                                   21908 rd_kafka_txn_handle_$End$Txn#_logname#18 DS 256XL1 ; _logname
000002B4                000002B4 000001B4  21909          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+436
000001B4                                   21910 rd_kafka_txn_handle_$End$Txn#_logname#10 DS 256XL1 ; _logname
000002B4                000002B4 000002B4  21911          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+692
000002B4                                   21912 rd_kafka_txn_handle_$End$Txn#may_retry#0 DS 1CL1 ; may_retry
000002B5                000002B5 000002B5  21913          ORG   @AUTO#rd_kafka_txn_handle_$End$Txn+693
000002B5                                   21914 rd_kafka_txn_handle_$End$Txn#is_commit#0 DS 1CL1 ; is_commit
                                           21915 *
0000EAF8                00000000 00014658  21916 @CODE    CSECT
                                           21917 *
                                           21918 *
                                           21919 *
                                           21920 * ....... start of rd_kafka_txn_op_commit_transaction
0000EAF8                                   21921 @LNAME2026 DS  0H
0000EAF8 00000022                          21922          DC    X'00000022'
0000EAFC 99846D9281869281                  21923          DC    C'rd_kafka_txn_op_commit_transacti'
0000EB1C 9695                              21924          DC    C'on'
0000EB1E 00                                21925          DC    X'00'
                                           21926 rd_kafka_txn_op_commit_transaction DCCPRLG CINDEX=2026,BASER=12,FRAME=8*
                                                                16,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2026
                                           21927          macro
                                           21928          dccextrn &m
                                           21929          gblc    &$dccext(1000)
                                           21930          gbla    &$dccexti
                                           21931          lcla    &i
                                           21932 &$dccext(&$dccexti+1) setc    '&m'
                                           21933 &i       seta    1
                                           21934 .loop    aif    (&i gt &$dccexti).around
                                           21935          aif    ('&$dccext(&i)' eq '&m').getout
                                           21936 &i       seta    &i+1
                                           21937          ago     .loop
                                           21938 .around  anop
                                           21939 &$dccexti seta &$dccexti+1
                                           21940          extrn  &m
                                           21941 .getout  anop
                                           21942          mend
0000EB20                                   21943+$eye0282    ds    0d                                                    02-DCCCA
0000EB20 C4C3C3                            21944+         dc cl3'DCC'                                                    02-DCCCA
0000EB23 01                                21945+         dc xl1'01' format one                                          02-DCCCA
0000EB24 00000000                          21946+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page  437 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EB28 000000000000EB92                  21947+         dc ad(@PER_2026)                                               02-DCCCA
0000EB30 0000000000000330                  21948+         dc ad(816)                                                     02-DCCCA
0000EB38 0000000000000000                  21949+         dc ad(0)                                                       02-DCCCA
0000EB40 0000000000001000                  21950+         dc ad(4096)                                                    02-DCCCA
0000EB48 20                                21951+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000EB49 03                                21952+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000EB4A 03                                21953+         dc al1(3)                                                      02-DCCCA
0000EB4B 08                                21954+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000EB4C 00                                21955+         dc bl.8'00000000'                                              02-DCCCA
0000EB4D 000000                            21956+         dc al3(0)                                                      02-DCCCA
0000EB50 000000000000EAF8                  21957+         dc ad(@LNAME2026)                                              02-DCCCA
0000EB58                                   21958+         ds 0d                                                          02-DCCCA
0000EB58 000000000000EB20                  21959+         dc ad($eye0282)                                                02-DCCCA
0000EB60 0000000000000000                  21960+         dc ad(0)                                                       02-DCCCA
0000EB68                                   21961+         ds    0d                                                       01-DCCPR
0000EB68                                   21962+rd_kafka_txn_op_commit_transaction ds 0d                                01-DCCPR
0000EB68                                   21963+@REGION_2026_1 ds 0h                                                    01-DCCPR
0000EB68 EBEC D008 0024          00000008  21964+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000EB6E E3E0 D088 0004          00000088  21965+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000EB74 E3C0 D090 0004          00000090  21966+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000EB7A B904 002E                         21967+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000EB7E E3B0 C018 0004          00000018  21968+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000EB84 A7EB 0330               00000330  21969+         aghi  14,816              increase by frame size               01-DCCPR
0000EB88 E3E0 C020 0021          00000020  21970+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000EB8E 4720 B020               00000020  21971+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000EB92                                   21972+@PER_2026 ds   0h                                                       01-DCCPR
0000EB92 EBDE 2080 0024          00000080  21973+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000EB98 E3C0 2090 0024          00000090  21974+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000EB9E B904 00D2                         21975+         lgr   13,2                set real frame pointer               01-DCCPR
0000EBA2 B904 00CF                         21976+         lgr   12,15               set base reg                         01-DCCPR
                        0000EB68           21977+         using @REGION_2026_1,12                                        01-DCCPR
                                           21978 * ******* End of Prologue
                                           21979 * *
0000EBA6 E330 1000 0004          00000000  21980          LG    3,0(0,1)    ; rk
0000EBAC E340 1010 0004          00000010  21981          LG    4,16(0,1)   ; rko
                                           21982 * ***           rd_kafka_error_t *error;
                                           21983 * ***           rd_kafka_resp_err_t err;
                                           21984 * ***           char errstr[512];
                                           21985 * ***           rd_kafka_pid_t pid;
                                           21986 * ***           int64_t dr_fails;
                                           21987 * ***
                                           21988 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000EBB2 E55C 4020 FF3B          00000020  21989          CHSI  32(4),-197
0000EBB8 4770 C110               0000EC78  21990          BNE   @L1562
                                           21991 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000EBBC A7F9 0001               00000001  21992          LGHI  15,1        ; 1
0000EBC0 47F0 C48A               0000EFF2  21993          B     @ret_lab_2026
0000EBC8                                   21994          DS    0D
0000EBC8 00000330                          21995 @FRAMESIZE_2026 DC F'816'
0000EBCC 00000000
0000EBD0 0000000000000000                  21996 @lit_2026_1195 DC AD(rwlock_wrlock)
0000EBD8 0000000000004700                  21997 @lit_2026_1196 DC AD(rd_kafka_txn_require_states0)
                                                                                                                           Page  438 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EBE0 0000000000000A30                  21998 @lit_2026_1197 DC AD(rd_atomic64_get)
0000EBE8 0000000000000000                  21999 @lit_2026_1199 DC AD(rd_kafka_error_new_txn_requires_abort)
0000EBF0 0000000000014A98                  22000 @lit_2026_1198 DC AD(@strings@)
0000EBF8 0000000000000000                  22001 @lit_2026_1202 DC AD(rd_kafka_log0)
0000EC00 0000000000004DE8                  22002 @lit_2026_1203 DC AD(rd_kafka_txn_set_state)
0000EC08 0000000000004340                  22003 @lit_2026_1204 DC AD(rd_kafka_idemp_get_pid0)
0000EC10 0000000000004110                  22004 @lit_2026_1205 DC AD(rd_kafka_idemp_state2str)
0000EC18 0000000000000000                  22005 @lit_2026_1207 DC AD(rd_kafka_error_new_retriable)
0000EC20 0000000000002D40                  22006 @lit_2026_1209 DC AD(rd_kafka_replyq_make)
0000EC28 0000000000014658                  22007 @lit_2026_1208 DC AD(@DATA)
0000EC30 0000000000001D48                  22008 @lit_2026_1210 DC AD(rd_kafka_q_keep)
0000EC38 0000000000000000                  22009 @lit_2026_1212 DC AD(rd_kafka_$End$Txn$Request)
0000EC40 000000000000DCF8                  22010 @lit_2026_1211 DC AD(rd_kafka_txn_handle_$End$Txn)
0000EC48 0000000000000000                  22011 @lit_2026_1216 DC AD(rwlock_wrunlock)
0000EC50 0000000000000000                  22012 @lit_2026_1219 DC AD(rd_kafka_error_txn_requires_abort)
0000EC58 0000000000000000                  22013 @lit_2026_1220 DC AD(rd_kafka_error_code)
0000EC60 0000000000000000                  22014 @lit_2026_1221 DC AD(rd_kafka_error_string)
0000EC68 0000000000005448                  22015 @lit_2026_1223 DC AD(rd_kafka_txn_set_abortable_error0)
0000EC70 00000000000058A0                  22016 @lit_2026_1225 DC AD(rd_kafka_txn_curr_api_reply_error)
0000EC78                                   22017 @L1562   DS    0H
                                           22018 * ***
                                           22019 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000EC78 41F0 39A0               000009A0  22020          LA    15,2464(0,3)
0000EC7C E3F0 D2D8 0024          000002D8  22021          STG   15,728(0,13)
0000EC82 4110 D2D8               000002D8  22022          LA    1,728(0,13)
0000EC86 E3F0 C068 0004          0000EBD0  22023          LG    15,@lit_2026_1195 ; rwlock_wrlock
0000EC8C                                   22024 @@gen_label1623 DS    0H
0000EC8C 05EF                              22025          BALR  14,15
0000EC8E                                   22026 @@gen_label1624 DS    0H
                                           22027 * ***
                                           22028 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           22029 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_BEGIN_COMMIT, RD_KAFKA_TXN_STAT\
                                           22030 * E_COMMIT_NOT_ACKED, -1 })))
0000EC8E E54C D0A8 0005          000000A8  22031          MVHI  168(13),5
0000EC94 E54C D0AC 0007          000000AC  22032          MVHI  172(13),7
0000EC9A E54C D0B0 FFFF          000000B0  22033          MVHI  176(13),-1
0000ECA0 E330 D2D8 0024          000002D8  22034          STG   3,728(0,13)
0000ECA6 41F0 D0A8               000000A8  22035          LA    15,168(0,13)
0000ECAA E3F0 D2E0 0024          000002E0  22036          STG   15,736(0,13)
0000ECB0 4110 D2D8               000002D8  22037          LA    1,728(0,13)
0000ECB4 E3F0 C070 0004          0000EBD8  22038          LG    15,@lit_2026_1196 ; rd_kafka_txn_require_states0
0000ECBA                                   22039 @@gen_label1625 DS    0H
0000ECBA 05EF                              22040          BALR  14,15
0000ECBC                                   22041 @@gen_label1626 DS    0H
0000ECBC B902 002F                         22042          LTGR  2,15        ; error
0000ECC0 4770 C3CA               0000EF32  22043          BNZ   @_done@2026@11
                                           22044 * ***
                                           22045 * ***
                                           22046 * ***
                                           22047 * ***                   goto done;
0000ECC4                                   22048 @L1563   DS    0H
                                           22049 * ***
                                                                                                                           Page  439 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22050 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_COMMIT_\
                                           22051 * NOT_ACKED) {
0000ECC4 E55C 3D38 0007          00000D38  22052          CHSI  3384(3),7
0000ECCA 4770 C16A               0000ECD2  22053          BNE   @L1564
                                           22054 * ***
                                           22055 * ***
                                           22056 * ***
                                           22057 * ***
                                           22058 * ***                   goto done;
0000ECCE 47F0 C3CA               0000EF32  22059          B     @_done@2026@11
                                           22060 * ***           }
0000ECD2                                   22061 @L1564   DS    0H
                                           22062 * ***
                                           22063 * ***
                                           22064 * ***           dr_fails = rd_atomic64_get(&rk->rk_eos.txn_dr_fails);
0000ECD2 41F0 3EA8               00000EA8  22065          LA    15,3752(0,3)
0000ECD6 E3F0 D2D8 0024          000002D8  22066          STG   15,728(0,13)
0000ECDC 4110 D2D8               000002D8  22067          LA    1,728(0,13)
0000ECE0 E3F0 C078 0004          0000EBE0  22068          LG    15,@lit_2026_1197 ; rd_atomic64_get
0000ECE6                                   22069 @@gen_label1629 DS    0H
0000ECE6 05EF                              22070          BALR  14,15
0000ECE8                                   22071 @@gen_label1630 DS    0H
                                           22072 * ***           if (((dr_fails > 0))) {
0000ECE8 B902 001F                         22073          LTGR  1,15
0000ECEC 47D0 C1B8               0000ED20  22074          BNH   @L1565
                                           22075 * ***                   error = rd_kafka_error_new_txn_requires_abort(
                                           22076 * ***                           RD_KAFKA_RESP_ERR__INCONSISTENT,
                                           22077 * ***                           "%" "lld" " message(s) failed delivery\
                                           22078 *  "
                                           22079 * ***                           dr_fails);
0000ECF0 E548 D2D8 FF6B          000002D8  22080          MVGHI 728(13),-149
                                           22081 * ***                           "(see individual delivery reports)",
0000ECF6 E310 C088 0004          0000EBF0  22082          LG    1,@lit_2026_1198
0000ECFC 4110 1E50               00000E50  22083          LA    1,3664(0,1)
0000ED00 E310 D2E0 0024          000002E0  22084          STG   1,736(0,13)
0000ED06 E3F0 D2E8 0024          000002E8  22085          STG   15,744(0,13)
0000ED0C 4110 D2D8               000002D8  22086          LA    1,728(0,13)
0000ED10 E3F0 C080 0004          0000EBE8  22087          LG    15,@lit_2026_1199 ; rd_kafka_error_new_txn_requires_abor*
                                                                t
0000ED16                                   22088 @@gen_label1632 DS    0H
0000ED16 05EF                              22089          BALR  14,15
0000ED18                                   22090 @@gen_label1633 DS    0H
0000ED18 B904 002F                         22091          LGR   2,15        ; error
                                           22092 * ***                   goto done;
0000ED1C 47F0 C3CA               0000EF32  22093          B     @_done@2026@11
                                           22094 * ***           }
0000ED20                                   22095 @L1565   DS    0H
                                           22096 * ***
                                           22097 * ***           if (!rk->rk_eos.txn_req_cnt) {
0000ED20 E3F0 3E10 0012          00000E10  22098          LT    15,3600(0,3) ; offset of txn_req_cnt in 0000146
0000ED26 4770 C234               0000ED9C  22099          BNZ   @L1566
                                           22100 * ***
                                                                                                                           Page  440 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22101 * ***
                                           22102 * ***
                                           22103 * ***
                                           22104 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           22105 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMMIT","N\
                                           22106 * o partitions registered: not sending EndTxn"); } while (0);
0000ED2A                                   22107 @L1567   DS    0H
0000ED2A 9180 3322      00000322 00000080  22108          TM    802(3),128
0000ED2E 4780 C218               0000ED80  22109          BZ    @L1570
0000ED32 41F0 3210               00000210  22110          LA    15,528(0,3)
0000ED36 E3F0 D2D8 0024          000002D8  22111          STG   15,728(0,13)
0000ED3C E330 D2E0 0024          000002E0  22112          STG   3,736(0,13)
0000ED42 D707 D2E8 D2E8 000002E8 000002E8  22113          XC    744(8,13),744(13)
0000ED48 E548 D2F0 0007          000002F0  22114          MVGHI 752(13),7
0000ED4E C0FF 0000 8000                    22115          LLILF 15,X'00008000' ; 32768
0000ED54 E3F0 D2F8 0024          000002F8  22116          STG   15,760(0,13)
0000ED5A E3F0 C088 0004          0000EBF0  22117          LG    15,@lit_2026_1198
0000ED60 4110 FE92               00000E92  22118          LA    1,3730(0,15)
0000ED64 E310 D300 0024          00000300  22119          STG   1,768(0,13)
0000ED6A 41F0 FE9C               00000E9C  22120          LA    15,3740(0,15)
0000ED6E E3F0 D308 0024          00000308  22121          STG   15,776(0,13)
0000ED74 4110 D2D8               000002D8  22122          LA    1,728(0,13)
0000ED78 E3F0 C090 0004          0000EBF8  22123          LG    15,@lit_2026_1202 ; rd_kafka_log0
0000ED7E                                   22124 @@gen_label1636 DS    0H
0000ED7E 05EF                              22125          BALR  14,15
0000ED80                                   22126 @@gen_label1637 DS    0H
0000ED80                                   22127 @L1570   DS    0H
                                           22128 * ***
                                           22129 * ***                   rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_\
                                           22130 * COMMIT_NOT_ACKED);
0000ED80 E330 D2D8 0024          000002D8  22131          STG   3,728(0,13)
0000ED86 E548 D2E0 0007          000002E0  22132          MVGHI 736(13),7
0000ED8C 4110 D2D8               000002D8  22133          LA    1,728(0,13)
0000ED90 E3F0 C098 0004          0000EC00  22134          LG    15,@lit_2026_1203 ; rd_kafka_txn_set_state
0000ED96                                   22135 @@gen_label1638 DS    0H
0000ED96 05EF                              22136          BALR  14,15
0000ED98                                   22137 @@gen_label1639 DS    0H
                                           22138 * ***                   goto done;
0000ED98 47F0 C3CA               0000EF32  22139          B     @_done@2026@11
                                           22140 * ***           }
0000ED9C                                   22141 @L1566   DS    0H
                                           22142 * ***
                                           22143 * ***           pid = rd_kafka_idemp_get_pid0(rk, 0);
0000ED9C 41F0 D2C8               000002C8  22144          LA    15,712(0,13)
0000EDA0 E3F0 D2D8 0024          000002D8  22145          STG   15,728(0,13)
0000EDA6 E330 D2E0 0024          000002E0  22146          STG   3,736(0,13)
0000EDAC D707 D2E8 D2E8 000002E8 000002E8  22147          XC    744(8,13),744(13)
0000EDB2 4110 D2D8               000002D8  22148          LA    1,728(0,13)
0000EDB6 E3F0 C0A0 0004          0000EC08  22149          LG    15,@lit_2026_1204 ; rd_kafka_idemp_get_pid0
0000EDBC                                   22150 @@gen_label1640 DS    0H
0000EDBC 05EF                              22151          BALR  14,15
0000EDBE                                   22152 @@gen_label1641 DS    0H
                                                                                                                           Page  441 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EDBE D20F D2B8 D2C8 000002B8 000002C8  22153          MVC   696(16,13),712(13)
                                           22154 * ***           if (!((pid).id != -1)) {
0000EDC4 E558 D2B8 FFFF          000002B8  22155          CGHSI 696(13),-1
0000EDCA 4770 C2AE               0000EE16  22156          BNE   @L1571
                                           22157 * ***                   do {} while (0);
0000EDCE                                   22158 @L1572   DS    0H
                                           22159 * ***                   error = rd_kafka_error_new_retriable(
                                           22160 * ***                           RD_KAFKA_RESP_ERR__STATE,
                                           22161 * ***                           "No PID available (idempotence state %\
                                           22162 * s)",
                                           22163 * ***                           rd_kafka_idemp_state2str(rk->rk_eos.id\
                                           22164 * emp_state));
0000EDCE E3F0 3C70 0014          00000C70  22165          LGF   15,3184(0,3)
0000EDD4 E3F0 D2D8 0024          000002D8  22166          STG   15,728(0,13)
0000EDDA 4110 D2D8               000002D8  22167          LA    1,728(0,13)
0000EDDE E3F0 C0A8 0004          0000EC10  22168          LG    15,@lit_2026_1205 ; rd_kafka_idemp_state2str
0000EDE4                                   22169 @@gen_label1643 DS    0H
0000EDE4 05EF                              22170          BALR  14,15
0000EDE6                                   22171 @@gen_label1644 DS    0H
0000EDE6 E548 D2D8 FF54          000002D8  22172          MVGHI 728(13),-172
0000EDEC E310 C088 0004          0000EBF0  22173          LG    1,@lit_2026_1198
0000EDF2 4110 1C1A               00000C1A  22174          LA    1,3098(0,1)
0000EDF6 E310 D2E0 0024          000002E0  22175          STG   1,736(0,13)
0000EDFC E3F0 D2E8 0024          000002E8  22176          STG   15,744(0,13)
0000EE02 4110 D2D8               000002D8  22177          LA    1,728(0,13)
0000EE06 E3F0 C0B0 0004          0000EC18  22178          LG    15,@lit_2026_1207 ; rd_kafka_error_new_retriable
0000EE0C                                   22179 @@gen_label1645 DS    0H
0000EE0C 05EF                              22180          BALR  14,15
0000EE0E                                   22181 @@gen_label1646 DS    0H
0000EE0E B904 002F                         22182          LGR   2,15        ; error
                                           22183 * ***                   goto done;
0000EE12 47F0 C3CA               0000EF32  22184          B     @_done@2026@11
                                           22185 * ***           }
0000EE16                                   22186 @L1571   DS    0H
                                           22187 * ***
                                           22188 * ***           err = rd_kafka_EndTxnRequest(rk->rk_eos.txn_coord,
                                           22189 * ***                                        rk->rk_conf.eos.transacti\
                                           22190 * onal_id,
                                           22191 * ***                                        pid,
                                           22192 * ***                                        1 ,
                                           22193 * ***                                        errstr, sizeof(errstr),
                                           22194 * ***                                        rd_kafka_replyq_make(rk->\
                                           22195 * rk_ops,0,__FUNCTION__),
                                           22196 * ***                                        rd_kafka_txn_handle_EndTx\
                                           22197 * n,
                                           22198 * ***                                        rd_kafka_q_keep(rko->rko_\
                                           22199 * replyq.q));
0000EE16 41F0 D2C8               000002C8  22200          LA    15,712(0,13)
0000EE1A E3F0 D2D8 0024          000002D8  22201          STG   15,728(0,13)
0000EE20 E3F0 3008 0004          00000008  22202          LG    15,8(0,3)
0000EE26 E3F0 D2E0 0024          000002E0  22203          STG   15,736(0,13)
0000EE2C D707 D2E8 D2E8 000002E8 000002E8  22204          XC    744(8,13),744(13)
                                                                                                                           Page  442 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EE32 E3F0 C0C0 0004          0000EC28  22205          LG    15,@lit_2026_1208
0000EE38 41F0 F37C               0000037C  22206          LA    15,892(0,15)
0000EE3C E3F0 D2F0 0024          000002F0  22207          STG   15,752(0,13)
0000EE42 4110 D2D8               000002D8  22208          LA    1,728(0,13)
0000EE46 E3F0 C0B8 0004          0000EC20  22209          LG    15,@lit_2026_1209 ; rd_kafka_replyq_make
0000EE4C                                   22210 @@gen_label1647 DS    0H
0000EE4C 05EF                              22211          BALR  14,15
0000EE4E                                   22212 @@gen_label1648 DS    0H
0000EE4E E3F0 4040 0004          00000040  22213          LG    15,64(0,4)
0000EE54 E3F0 D2D8 0024          000002D8  22214          STG   15,728(0,13)
0000EE5A 4110 D2D8               000002D8  22215          LA    1,728(0,13)
0000EE5E E3F0 C0C8 0004          0000EC30  22216          LG    15,@lit_2026_1210 ; rd_kafka_q_keep
0000EE64                                   22217 @@gen_label1649 DS    0H
0000EE64 05EF                              22218          BALR  14,15
0000EE66                                   22219 @@gen_label1650 DS    0H
0000EE66 E310 3D48 0004          00000D48  22220          LG    1,3400(0,3)
0000EE6C E310 D2D8 0024          000002D8  22221          STG   1,728(0,13)
0000EE72 E310 37E8 0004          000007E8  22222          LG    1,2024(0,3)
0000EE78 E310 D2E0 0024          000002E0  22223          STG   1,736(0,13)
0000EE7E D20F D2E8 D2B8 000002E8 000002B8  22224          MVC   744(16,13),696(13)
0000EE84 E548 D2F8 0001          000002F8  22225          MVGHI 760(13),1
0000EE8A 4110 D0B4               000000B4  22226          LA    1,180(0,13)
0000EE8E E310 D300 0024          00000300  22227          STG   1,768(0,13)
0000EE94 E548 D308 0200          00000308  22228          MVGHI 776(13),512
0000EE9A D20F D310 D2C8 00000310 000002C8  22229          MVC   784(16,13),712(13)
0000EEA0 E310 C0D8 0004          0000EC40  22230          LG    1,@lit_2026_1211 ; rd_kafka_txn_handle_EndTxn
0000EEA6 E310 D320 0024          00000320  22231          STG   1,800(0,13)
0000EEAC E3F0 D328 0024          00000328  22232          STG   15,808(0,13)
0000EEB2 4110 D2D8               000002D8  22233          LA    1,728(0,13)
0000EEB6 E3F0 C0D0 0004          0000EC38  22234          LG    15,@lit_2026_1212 ; rd_kafka_EndTxnRequest
0000EEBC                                   22235 @@gen_label1651 DS    0H
0000EEBC 05EF                              22236          BALR  14,15
0000EEBE                                   22237 @@gen_label1652 DS    0H
                                           22238 * ***           if (err) {
0000EEBE 12FF                              22239          LTR   15,15
0000EEC0 4780 C394               0000EEFC  22240          BZ    @L1575
                                           22241 * ***                   error = rd_kafka_error_new_retriable(err, "%s"\
                                           22242 * , errstr);
0000EEC4 B914 00FF                         22243          LGFR  15,15
0000EEC8 E3F0 D2D8 0024          000002D8  22244          STG   15,728(0,13)
0000EECE E3F0 C088 0004          0000EBF0  22245          LG    15,@lit_2026_1198
0000EED4 41F0 F122               00000122  22246          LA    15,290(0,15)
0000EED8 E3F0 D2E0 0024          000002E0  22247          STG   15,736(0,13)
0000EEDE 41F0 D0B4               000000B4  22248          LA    15,180(0,13)
0000EEE2 E3F0 D2E8 0024          000002E8  22249          STG   15,744(0,13)
0000EEE8 4110 D2D8               000002D8  22250          LA    1,728(0,13)
0000EEEC E3F0 C0B0 0004          0000EC18  22251          LG    15,@lit_2026_1207 ; rd_kafka_error_new_retriable
0000EEF2                                   22252 @@gen_label1654 DS    0H
0000EEF2 05EF                              22253          BALR  14,15
0000EEF4                                   22254 @@gen_label1655 DS    0H
0000EEF4 B904 002F                         22255          LGR   2,15        ; error
                                           22256 * ***                   goto done;
                                                                                                                           Page  443 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EEF8 47F0 C3CA               0000EF32  22257          B     @_done@2026@11
                                           22258 * ***           }
0000EEFC                                   22259 @L1575   DS    0H
                                           22260 * ***
                                           22261 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_COMMITTI\
                                           22262 * NG_TRANSACTION);
0000EEFC E330 D2D8 0024          000002D8  22263          STG   3,728(0,13)
0000EF02 E548 D2E0 0006          000002E0  22264          MVGHI 736(13),6
0000EF08 4110 D2D8               000002D8  22265          LA    1,728(0,13)
0000EF0C E3F0 C098 0004          0000EC00  22266          LG    15,@lit_2026_1203 ; rd_kafka_txn_set_state
0000EF12                                   22267 @@gen_label1656 DS    0H
0000EF12 05EF                              22268          BALR  14,15
0000EF14                                   22269 @@gen_label1657 DS    0H
                                           22270 * ***
                                           22271 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000EF14 41F0 39A0               000009A0  22272          LA    15,2464(0,3)
0000EF18 E3F0 D2D8 0024          000002D8  22273          STG   15,728(0,13)
0000EF1E 4110 D2D8               000002D8  22274          LA    1,728(0,13)
0000EF22 E3F0 C0E0 0004          0000EC48  22275          LG    15,@lit_2026_1216 ; rwlock_wrunlock
0000EF28                                   22276 @@gen_label1658 DS    0H
0000EF28 05EF                              22277          BALR  14,15
0000EF2A                                   22278 @@gen_label1659 DS    0H
                                           22279 * ***
                                           22280 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000EF2A A7F9 0001               00000001  22281          LGHI  15,1        ; 1
0000EF2E 47F0 C48A               0000EFF2  22282          B     @ret_lab_2026
                                           22283 * ***
                                           22284 * ***    done:
                                           22285 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000EF32                                   22286 @_done@2026@11 DS 0H
0000EF32 41F0 39A0               000009A0  22287          LA    15,2464(0,3)
0000EF36 E3F0 D2D8 0024          000002D8  22288          STG   15,728(0,13)
0000EF3C 4110 D2D8               000002D8  22289          LA    1,728(0,13)
0000EF40 E3F0 C0E0 0004          0000EC48  22290          LG    15,@lit_2026_1216 ; rwlock_wrunlock
0000EF46                                   22291 @@gen_label1660 DS    0H
0000EF46 05EF                              22292          BALR  14,15
0000EF48                                   22293 @@gen_label1661 DS    0H
                                           22294 * ***
                                           22295 * ***
                                           22296 * ***
                                           22297 * ***           if (rd_kafka_error_txn_requires_abort(error))
0000EF48 E320 D2D8 0024          000002D8  22298          STG   2,728(0,13)
0000EF4E 4110 D2D8               000002D8  22299          LA    1,728(0,13)
0000EF52 E3F0 C0E8 0004          0000EC50  22300          LG    15,@lit_2026_1219 ; rd_kafka_error_txn_requires_abort
0000EF58                                   22301 @@gen_label1662 DS    0H
0000EF58 05EF                              22302          BALR  14,15
0000EF5A                                   22303 @@gen_label1663 DS    0H
0000EF5A 12FF                              22304          LTR   15,15
0000EF5C 4780 C456               0000EFBE  22305          BZ    @L1576
                                           22306 * ***                   rd_kafka_txn_set_abortable_error0(rk,rd_kafka_\
                                           22307 * error_code(error),0,"%s", rd_kafka_error_string(error));
0000EF60 E320 D2D8 0024          000002D8  22308          STG   2,728(0,13)
                                                                                                                           Page  444 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000EF66 4110 D2D8               000002D8  22309          LA    1,728(0,13)
0000EF6A E3F0 C0F0 0004          0000EC58  22310          LG    15,@lit_2026_1220 ; rd_kafka_error_code
0000EF70                                   22311 @@gen_label1665 DS    0H
0000EF70 05EF                              22312          BALR  14,15
0000EF72                                   22313 @@gen_label1666 DS    0H
0000EF72 185F                              22314          LR    5,15
0000EF74 E320 D2D8 0024          000002D8  22315          STG   2,728(0,13)
0000EF7A 4110 D2D8               000002D8  22316          LA    1,728(0,13)
0000EF7E E3F0 C0F8 0004          0000EC60  22317          LG    15,@lit_2026_1221 ; rd_kafka_error_string
0000EF84                                   22318 @@gen_label1667 DS    0H
0000EF84 05EF                              22319          BALR  14,15
0000EF86                                   22320 @@gen_label1668 DS    0H
0000EF86 E330 D2D8 0024          000002D8  22321          STG   3,728(0,13)
0000EF8C B914 0015                         22322          LGFR  1,5
0000EF90 E310 D2E0 0024          000002E0  22323          STG   1,736(0,13)
0000EF96 D707 D2E8 D2E8 000002E8 000002E8  22324          XC    744(8,13),744(13)
0000EF9C E310 C088 0004          0000EBF0  22325          LG    1,@lit_2026_1198
0000EFA2 4110 1122               00000122  22326          LA    1,290(0,1)
0000EFA6 E310 D2F0 0024          000002F0  22327          STG   1,752(0,13)
0000EFAC E3F0 D2F8 0024          000002F8  22328          STG   15,760(0,13)
0000EFB2 4110 D2D8               000002D8  22329          LA    1,728(0,13)
0000EFB6 E3F0 C100 0004          0000EC68  22330          LG    15,@lit_2026_1223 ; rd_kafka_txn_set_abortable_error0
0000EFBC                                   22331 @@gen_label1669 DS    0H
0000EFBC 05EF                              22332          BALR  14,15
0000EFBE                                   22333 @@gen_label1670 DS    0H
0000EFBE                                   22334 @L1576   DS    0H
                                           22335 * ***
                                           22336 * ***
                                           22337 * ***
                                           22338 * ***
                                           22339 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           22340 * >rko_replyq.q),
                                           22341 * ***                                             error);
0000EFBE E3F0 4040 0004          00000040  22342          LG    15,64(0,4)
0000EFC4 E3F0 D2D8 0024          000002D8  22343          STG   15,728(0,13)
0000EFCA 4110 D2D8               000002D8  22344          LA    1,728(0,13)
0000EFCE E3F0 C0C8 0004          0000EC30  22345          LG    15,@lit_2026_1210 ; rd_kafka_q_keep
0000EFD4                                   22346 @@gen_label1671 DS    0H
0000EFD4 05EF                              22347          BALR  14,15
0000EFD6                                   22348 @@gen_label1672 DS    0H
0000EFD6 E3F0 D2D8 0024          000002D8  22349          STG   15,728(0,13)
0000EFDC E320 D2E0 0024          000002E0  22350          STG   2,736(0,13)
0000EFE2 4110 D2D8               000002D8  22351          LA    1,728(0,13)
0000EFE6 E3F0 C108 0004          0000EC70  22352          LG    15,@lit_2026_1225 ; rd_kafka_txn_curr_api_reply_error
0000EFEC                                   22353 @@gen_label1673 DS    0H
0000EFEC 05EF                              22354          BALR  14,15
0000EFEE                                   22355 @@gen_label1674 DS    0H
                                           22356 * ***
                                           22357 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000EFEE A7F9 0001               00000001  22358          LGHI  15,1        ; 1
                                           22359 * ***   }
0000EFF2                                   22360 @ret_lab_2026 DS 0H
                                                                                                                           Page  445 
  Active Usings: @REGION_2026_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22361 * * **** Start of Epilogue
                                           22362          DCCEPIL
0000EFF2                                   22363+         ds 0h                                                          01-DCCEP
                                           22364+* Epilog
0000EFF2 D707 D088 D088 00000088 00000088  22365+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000EFF8 E3D0 D080 0004          00000080  22366+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000EFFE E3C0 D090 0004          00000090  22367+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000F004 E3B0 C018 0004          00000018  22368+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000F00A E3C0 B010 0021          00000010  22369+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000F010 E3E0 D008 0004          00000008  22370+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000F016 EB1C D020 0004          00000020  22371+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000F01C 078E                              22372+         bcr 8,14                if same dsab, just return              01-DCCEP
0000F01E E3F0 D010 0024          00000010  22373+         stg 15,16(0,13)         save return code                       01-DCCEP
0000F024 E300 D018 0024          00000018  22374+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000F02A E3F0 D090 0004          00000090  22375+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000F030 E3F0 F018 0004          00000018  22376+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000F036 47F0 F040               00000040  22377+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22378+* End of Epilog
                                           22379 * * **** End of Epilogue
                                           22380          DROP  12
                                           22381 *
                                           22382 *   DSECT for automatic variables in "rd_kafka_txn_op_commit_transacti
                                           22383 *           on"
                                           22384 *      (FUNCTION #2026)
                                           22385 *
00000000                00000000 000002C8  22386 @AUTO#rd_kafka_txn_op_commit_transaction DSECT
00000000                                   22387          DS    XL168
000000A8                                   22388 rd_kafka_txn_op_commit_transaction#__cl5#0 DS 12XL1 ; __cl5
000000B4                000000B4 000000A8  22389          ORG   @AUTO#rd_kafka_txn_op_commit_transaction+168
000000A8                                   22390 rd_kafka_txn_op_commit_transaction#dr_fails#0 DS 8XL1 ; dr_fails
000000B0                000000B0 000000A8  22391          ORG   @AUTO#rd_kafka_txn_op_commit_transaction+168
000000A8                                   22392 rd_kafka_txn_op_commit_transaction#err#0 DS 1F ; err
000000AC                000000AC 000000B4  22393          ORG   @AUTO#rd_kafka_txn_op_commit_transaction+180
000000B4                                   22394 rd_kafka_txn_op_commit_transaction#errstr#0 DS 512XL1 ; errstr
000002B4                000002B4 000002B8  22395          ORG   @AUTO#rd_kafka_txn_op_commit_transaction+696
000002B8                                   22396 rd_kafka_txn_op_commit_transaction#pid#0 DS 16XL1 ; pid
                                           22397 *
0000F03A                00000000 00014658  22398 @CODE    CSECT
                                           22399 *
                                           22400 *
                                           22401 *
                                           22402 * ....... start of rd_kafka_txn_op_begin_commit
0000F03A                                   22403 @LNAME2027 DS  0H
0000F03A 0000001C                          22404          DC    X'0000001C'
0000F03E 99846D9281869281                  22405          DC    C'rd_kafka_txn_op_begin_commit'
0000F05A 00                                22406          DC    X'00'
                                           22407 rd_kafka_txn_op_begin_commit DCCPRLG CINDEX=2027,BASER=12,FRAME=200,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2027
                                           22408          macro
                                           22409          dccextrn &m
                                           22410          gblc    &$dccext(1000)
                                           22411          gbla    &$dccexti
                                                                                                                           Page  446 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22412          lcla    &i
                                           22413 &$dccext(&$dccexti+1) setc    '&m'
                                           22414 &i       seta    1
                                           22415 .loop    aif    (&i gt &$dccexti).around
                                           22416          aif    ('&$dccext(&i)' eq '&m').getout
                                           22417 &i       seta    &i+1
                                           22418          ago     .loop
                                           22419 .around  anop
                                           22420 &$dccexti seta &$dccexti+1
                                           22421          extrn  &m
                                           22422 .getout  anop
                                           22423          mend
0000F060                                   22424+$eye0285    ds    0d                                                    02-DCCCA
0000F060 C4C3C3                            22425+         dc cl3'DCC'                                                    02-DCCCA
0000F063 01                                22426+         dc xl1'01' format one                                          02-DCCCA
0000F064 00000000                          22427+         dc a(0)                                                        02-DCCCA
0000F068 000000000000F0D2                  22428+         dc ad(@PER_2027)                                               02-DCCCA
0000F070 00000000000000C8                  22429+         dc ad(200)                                                     02-DCCCA
0000F078 0000000000000000                  22430+         dc ad(0)                                                       02-DCCCA
0000F080 0000000000001000                  22431+         dc ad(4096)                                                    02-DCCCA
0000F088 20                                22432+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000F089 03                                22433+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000F08A 03                                22434+         dc al1(3)                                                      02-DCCCA
0000F08B 08                                22435+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000F08C 00                                22436+         dc bl.8'00000000'                                              02-DCCCA
0000F08D 000000                            22437+         dc al3(0)                                                      02-DCCCA
0000F090 000000000000F03A                  22438+         dc ad(@LNAME2027)                                              02-DCCCA
0000F098                                   22439+         ds 0d                                                          02-DCCCA
0000F098 000000000000F060                  22440+         dc ad($eye0285)                                                02-DCCCA
0000F0A0 0000000000000000                  22441+         dc ad(0)                                                       02-DCCCA
0000F0A8                                   22442+         ds    0d                                                       01-DCCPR
0000F0A8                                   22443+rd_kafka_txn_op_begin_commit ds 0d                                      01-DCCPR
0000F0A8                                   22444+@REGION_2027_1 ds 0h                                                    01-DCCPR
0000F0A8 EBEC D008 0024          00000008  22445+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000F0AE E3E0 D088 0004          00000088  22446+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000F0B4 E3C0 D090 0004          00000090  22447+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000F0BA B904 002E                         22448+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000F0BE E3B0 C018 0004          00000018  22449+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000F0C4 A7EB 00C8               000000C8  22450+         aghi  14,200              increase by frame size               01-DCCPR
0000F0C8 E3E0 C020 0021          00000020  22451+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000F0CE 4720 B020               00000020  22452+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000F0D2                                   22453+@PER_2027 ds   0h                                                       01-DCCPR
0000F0D2 EBDE 2080 0024          00000080  22454+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000F0D8 E3C0 2090 0024          00000090  22455+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000F0DE B904 00D2                         22456+         lgr   13,2                set real frame pointer               01-DCCPR
0000F0E2 B904 00CF                         22457+         lgr   12,15               set base reg                         01-DCCPR
                        0000F0A8           22458+         using @REGION_2027_1,12                                        01-DCCPR
                                           22459 * ******* End of Prologue
                                           22460 * *
0000F0E6 E320 1000 0004          00000000  22461          LG    2,0(0,1)    ; rk
                                           22462 * ***           rd_kafka_error_t *error;
                                           22463 * ***
                                                                                                                           Page  447 
  Active Usings: @REGION_2027_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22464 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000F0EC E340 1010 0004          00000010  22465          LG    4,16(0,1)   ; rko
0000F0F2 E55C 4020 FF3B          00000020  22466          CHSI  32(4),-197
0000F0F8 4770 C098               0000F140  22467          BNE   @L1577
                                           22468 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000F0FC A7F9 0001               00000001  22469          LGHI  15,1        ; 1
0000F100 47F0 C15A               0000F202  22470          B     @ret_lab_2027
0000F108                                   22471          DS    0D
0000F108 000000C8                          22472 @FRAMESIZE_2027 DC F'200'
0000F10C 00000000
0000F110 0000000000000000                  22473 @lit_2027_1229 DC AD(rwlock_wrlock)
0000F118 0000000000004700                  22474 @lit_2027_1230 DC AD(rd_kafka_txn_require_states0)
0000F120 0000000000004DE8                  22475 @lit_2027_1231 DC AD(rd_kafka_txn_set_state)
0000F128 0000000000000000                  22476 @lit_2027_1232 DC AD(rwlock_wrunlock)
0000F130 0000000000001D48                  22477 @lit_2027_1233 DC AD(rd_kafka_q_keep)
0000F138 00000000000058A0                  22478 @lit_2027_1234 DC AD(rd_kafka_txn_curr_api_reply_error)
0000F140                                   22479 @L1577   DS    0H
                                           22480 * ***
                                           22481 * ***
                                           22482 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000F140 41F0 29A0               000009A0  22483          LA    15,2464(0,2)
0000F144 E3F0 D0B8 0024          000000B8  22484          STG   15,184(0,13)
0000F14A 4110 D0B8               000000B8  22485          LA    1,184(0,13)
0000F14E E3F0 C068 0004          0000F110  22486          LG    15,@lit_2027_1229 ; rwlock_wrlock
0000F154                                   22487 @@gen_label1676 DS    0H
0000F154 05EF                              22488          BALR  14,15
0000F156                                   22489 @@gen_label1677 DS    0H
                                           22490 * ***
                                           22491 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           22492 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_IN_TRANSACTION, RD_KAFKA_TXN_ST\
                                           22493 * ATE_BEGIN_COMMIT, RD_KAFKA_TXN_STATE_COMMIT_NOT_ACKED, -1 })))
0000F156 E54C D0A8 0004          000000A8  22494          MVHI  168(13),4
0000F15C E54C D0AC 0005          000000AC  22495          MVHI  172(13),5
0000F162 E54C D0B0 0007          000000B0  22496          MVHI  176(13),7
0000F168 E54C D0B4 FFFF          000000B4  22497          MVHI  180(13),-1
0000F16E E320 D0B8 0024          000000B8  22498          STG   2,184(0,13)
0000F174 41F0 D0A8               000000A8  22499          LA    15,168(0,13)
0000F178 E3F0 D0C0 0024          000000C0  22500          STG   15,192(0,13)
0000F17E 4110 D0B8               000000B8  22501          LA    1,184(0,13)
0000F182 E3F0 C070 0004          0000F118  22502          LG    15,@lit_2027_1230 ; rd_kafka_txn_require_states0
0000F188                                   22503 @@gen_label1678 DS    0H
0000F188 05EF                              22504          BALR  14,15
0000F18A                                   22505 @@gen_label1679 DS    0H
0000F18A B904 003F                         22506          LGR   3,15
0000F18E B902 00F3                         22507          LTGR  15,3
0000F192 4770 C110               0000F1B8  22508          BNZ   @_done@2027@12
                                           22509 * ***
                                           22510 * ***
                                           22511 * ***
                                           22512 * ***
                                           22513 * ***                   goto done;
0000F196                                   22514 @L1578   DS    0H
                                                                                                                           Page  448 
  Active Usings: @REGION_2027_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22515 * ***
                                           22516 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_COMMIT_\
                                           22517 * NOT_ACKED)
0000F196 E55C 2D38 0007          00000D38  22518          CHSI  3384(2),7
0000F19C 4780 C110               0000F1B8  22519          BE    @_done@2027@12
                                           22520 * ***                   goto done;
0000F1A0                                   22521 @L1579   DS    0H
                                           22522 * ***
                                           22523 * ***           rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_BEGIN_CO\
                                           22524 * MMIT);
0000F1A0 E320 D0B8 0024          000000B8  22525          STG   2,184(0,13)
0000F1A6 E548 D0C0 0005          000000C0  22526          MVGHI 192(13),5
0000F1AC 4110 D0B8               000000B8  22527          LA    1,184(0,13)
0000F1B0 E3F0 C078 0004          0000F120  22528          LG    15,@lit_2027_1231 ; rd_kafka_txn_set_state
0000F1B6                                   22529 @@gen_label1682 DS    0H
0000F1B6 05EF                              22530          BALR  14,15
0000F1B8                                   22531 @@gen_label1683 DS    0H
                                           22532 * ***
                                           22533 * ***
                                           22534 * ***    done:
                                           22535 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000F1B8                                   22536 @_done@2027@12 DS 0H
0000F1B8 41F0 29A0               000009A0  22537          LA    15,2464(0,2)
0000F1BC E3F0 D0B8 0024          000000B8  22538          STG   15,184(0,13)
0000F1C2 4110 D0B8               000000B8  22539          LA    1,184(0,13)
0000F1C6 E3F0 C080 0004          0000F128  22540          LG    15,@lit_2027_1232 ; rwlock_wrunlock
0000F1CC                                   22541 @@gen_label1684 DS    0H
0000F1CC 05EF                              22542          BALR  14,15
0000F1CE                                   22543 @@gen_label1685 DS    0H
                                           22544 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           22545 * >rko_replyq.q),
                                           22546 * ***                                             error);
0000F1CE E3F0 4040 0004          00000040  22547          LG    15,64(0,4)
0000F1D4 E3F0 D0B8 0024          000000B8  22548          STG   15,184(0,13)
0000F1DA 4110 D0B8               000000B8  22549          LA    1,184(0,13)
0000F1DE E3F0 C088 0004          0000F130  22550          LG    15,@lit_2027_1233 ; rd_kafka_q_keep
0000F1E4                                   22551 @@gen_label1686 DS    0H
0000F1E4 05EF                              22552          BALR  14,15
0000F1E6                                   22553 @@gen_label1687 DS    0H
0000F1E6 E3F0 D0B8 0024          000000B8  22554          STG   15,184(0,13)
0000F1EC E330 D0C0 0024          000000C0  22555          STG   3,192(0,13)
0000F1F2 4110 D0B8               000000B8  22556          LA    1,184(0,13)
0000F1F6 E3F0 C090 0004          0000F138  22557          LG    15,@lit_2027_1234 ; rd_kafka_txn_curr_api_reply_error
0000F1FC                                   22558 @@gen_label1688 DS    0H
0000F1FC 05EF                              22559          BALR  14,15
0000F1FE                                   22560 @@gen_label1689 DS    0H
                                           22561 * ***
                                           22562 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000F1FE A7F9 0001               00000001  22563          LGHI  15,1        ; 1
                                           22564 * ***   }
0000F202                                   22565 @ret_lab_2027 DS 0H
                                           22566 * * **** Start of Epilogue
                                                                                                                           Page  449 
  Active Usings: @REGION_2027_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22567          DCCEPIL
0000F202                                   22568+         ds 0h                                                          01-DCCEP
                                           22569+* Epilog
0000F202 D707 D088 D088 00000088 00000088  22570+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000F208 E3D0 D080 0004          00000080  22571+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000F20E E3C0 D090 0004          00000090  22572+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000F214 E3B0 C018 0004          00000018  22573+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000F21A E3C0 B010 0021          00000010  22574+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000F220 E3E0 D008 0004          00000008  22575+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000F226 EB1C D020 0004          00000020  22576+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000F22C 078E                              22577+         bcr 8,14                if same dsab, just return              01-DCCEP
0000F22E E3F0 D010 0024          00000010  22578+         stg 15,16(0,13)         save return code                       01-DCCEP
0000F234 E300 D018 0024          00000018  22579+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000F23A E3F0 D090 0004          00000090  22580+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000F240 E3F0 F018 0004          00000018  22581+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000F246 47F0 F040               00000040  22582+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22583+* End of Epilog
                                           22584 * * **** End of Epilogue
                                           22585          DROP  12
                                           22586 *
                                           22587 *   DSECT for automatic variables in "rd_kafka_txn_op_begin_commit"
                                           22588 *      (FUNCTION #2027)
                                           22589 *
00000000                00000000 000000B8  22590 @AUTO#rd_kafka_txn_op_begin_commit DSECT
00000000                                   22591          DS    XL168
000000A8                                   22592 rd_kafka_txn_op_begin_commit#__cl6#0 DS 16XL1 ; __cl6
                                           22593 *
0000F24A                00000000 00014658  22594 @CODE    CSECT
                                           22595 *
                                           22596 *
                                           22597 *
                                           22598 * ....... start of rd_kafka_txn_op_commit_transaction_ack
0000F24A                                   22599 @LNAME2028 DS  0H
0000F24A 00000026                          22600          DC    X'00000026'
0000F24E 99846D9281869281                  22601          DC    C'rd_kafka_txn_op_commit_transacti'
0000F26E 96956D818392                      22602          DC    C'on_ack'
0000F274 00                                22603          DC    X'00'
                                           22604 rd_kafka_txn_op_commit_transaction_ack DCCPRLG CINDEX=2028,BASER=12,FRA*
                                                                ME=232,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2028
                                           22605          macro
                                           22606          dccextrn &m
                                           22607          gblc    &$dccext(1000)
                                           22608          gbla    &$dccexti
                                           22609          lcla    &i
                                           22610 &$dccext(&$dccexti+1) setc    '&m'
                                           22611 &i       seta    1
                                           22612 .loop    aif    (&i gt &$dccexti).around
                                           22613          aif    ('&$dccext(&i)' eq '&m').getout
                                           22614 &i       seta    &i+1
                                           22615          ago     .loop
                                           22616 .around  anop
                                           22617 &$dccexti seta &$dccexti+1
                                                                                                                           Page  450 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22618          extrn  &m
                                           22619 .getout  anop
                                           22620          mend
0000F278                                   22621+$eye0288    ds    0d                                                    02-DCCCA
0000F278 C4C3C3                            22622+         dc cl3'DCC'                                                    02-DCCCA
0000F27B 01                                22623+         dc xl1'01' format one                                          02-DCCCA
0000F27C 00000000                          22624+         dc a(0)                                                        02-DCCCA
0000F280 000000000000F2EA                  22625+         dc ad(@PER_2028)                                               02-DCCCA
0000F288 00000000000000E8                  22626+         dc ad(232)                                                     02-DCCCA
0000F290 0000000000000000                  22627+         dc ad(0)                                                       02-DCCCA
0000F298 0000000000001000                  22628+         dc ad(4096)                                                    02-DCCCA
0000F2A0 20                                22629+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000F2A1 03                                22630+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000F2A2 03                                22631+         dc al1(3)                                                      02-DCCCA
0000F2A3 08                                22632+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000F2A4 00                                22633+         dc bl.8'00000000'                                              02-DCCCA
0000F2A5 000000                            22634+         dc al3(0)                                                      02-DCCCA
0000F2A8 000000000000F24A                  22635+         dc ad(@LNAME2028)                                              02-DCCCA
0000F2B0                                   22636+         ds 0d                                                          02-DCCCA
0000F2B0 000000000000F278                  22637+         dc ad($eye0288)                                                02-DCCCA
0000F2B8 0000000000000000                  22638+         dc ad(0)                                                       02-DCCCA
0000F2C0                                   22639+         ds    0d                                                       01-DCCPR
0000F2C0                                   22640+rd_kafka_txn_op_commit_transaction_ack ds 0d                            01-DCCPR
0000F2C0                                   22641+@REGION_2028_1 ds 0h                                                    01-DCCPR
0000F2C0 EBEC D008 0024          00000008  22642+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000F2C6 E3E0 D088 0004          00000088  22643+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000F2CC E3C0 D090 0004          00000090  22644+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000F2D2 B904 002E                         22645+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000F2D6 E3B0 C018 0004          00000018  22646+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000F2DC A7EB 00E8               000000E8  22647+         aghi  14,232              increase by frame size               01-DCCPR
0000F2E0 E3E0 C020 0021          00000020  22648+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000F2E6 4720 B020               00000020  22649+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000F2EA                                   22650+@PER_2028 ds   0h                                                       01-DCCPR
0000F2EA EBDE 2080 0024          00000080  22651+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000F2F0 E3C0 2090 0024          00000090  22652+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000F2F6 B904 00D2                         22653+         lgr   13,2                set real frame pointer               01-DCCPR
0000F2FA B904 00CF                         22654+         lgr   12,15               set base reg                         01-DCCPR
                        0000F2C0           22655+         using @REGION_2028_1,12                                        01-DCCPR
0000F2FE B904 0041                         22656          LGR   4,1         ; ptr to parm area
                                           22657 * ******* End of Prologue
                                           22658 * *
0000F302 E320 4000 0004          00000000  22659          LG    2,0(0,4)    ; rk
                                           22660 * ***           rd_kafka_error_t *error;
                                           22661 * ***
                                           22662 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000F308 E3F0 4010 0004          00000010  22663          LG    15,16(0,4)  ; rko
0000F30E E55C F020 FF3B          00000020  22664          CHSI  32(15),-197
0000F314 4770 C0A8               0000F368  22665          BNE   @L1580
                                           22666 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000F318 A7F9 0001               00000001  22667          LGHI  15,1        ; 1
0000F31C 47F0 C1B4               0000F474  22668          B     @ret_lab_2028
0000F320                                   22669          DS    0D
                                                                                                                           Page  451 
  Active Usings: @REGION_2028_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F320 000000E8                          22670 @FRAMESIZE_2028 DC F'232'
0000F324 00000000
0000F328 0000000000000000                  22671 @lit_2028_1238 DC AD(rwlock_wrlock)
0000F330 0000000000004700                  22672 @lit_2028_1239 DC AD(rd_kafka_txn_require_states0)
0000F338 0000000000000000                  22673 @lit_2028_1242 DC AD(rd_kafka_log0)
0000F340 0000000000014A98                  22674 @lit_2028_1241 DC AD(@strings@)
0000F348 000000000000DB10                  22675 @lit_2028_1243 DC AD(rd_kafka_txn_complete)
0000F350 0000000000000000                  22676 @lit_2028_1244 DC AD(rwlock_wrunlock)
0000F358 0000000000001D48                  22677 @lit_2028_1245 DC AD(rd_kafka_q_keep)
0000F360 00000000000058A0                  22678 @lit_2028_1246 DC AD(rd_kafka_txn_curr_api_reply_error)
0000F368                                   22679 @L1580   DS    0H
                                           22680 * ***
                                           22681 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000F368 41F0 29A0               000009A0  22682          LA    15,2464(0,2)
0000F36C E3F0 D0B0 0024          000000B0  22683          STG   15,176(0,13)
0000F372 4110 D0B0               000000B0  22684          LA    1,176(0,13)
0000F376 E3F0 C068 0004          0000F328  22685          LG    15,@lit_2028_1238 ; rwlock_wrlock
0000F37C                                   22686 @@gen_label1691 DS    0H
0000F37C 05EF                              22687          BALR  14,15
0000F37E                                   22688 @@gen_label1692 DS    0H
                                           22689 * ***
                                           22690 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           22691 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_COMMIT_NOT_ACKED, -1 })))
0000F37E E54C D0A8 0007          000000A8  22692          MVHI  168(13),7
0000F384 E54C D0AC FFFF          000000AC  22693          MVHI  172(13),-1
0000F38A E320 D0B0 0024          000000B0  22694          STG   2,176(0,13)
0000F390 41F0 D0A8               000000A8  22695          LA    15,168(0,13)
0000F394 E3F0 D0B8 0024          000000B8  22696          STG   15,184(0,13)
0000F39A 4110 D0B0               000000B0  22697          LA    1,176(0,13)
0000F39E E3F0 C070 0004          0000F330  22698          LG    15,@lit_2028_1239 ; rd_kafka_txn_require_states0
0000F3A4                                   22699 @@gen_label1693 DS    0H
0000F3A4 05EF                              22700          BALR  14,15
0000F3A6                                   22701 @@gen_label1694 DS    0H
0000F3A6 B904 003F                         22702          LGR   3,15
0000F3AA B902 00F3                         22703          LTGR  15,3
0000F3AE 4780 C0F6               0000F3B6  22704          BZ    @L1582
                                           22705 * ***
                                           22706 * ***
                                           22707 * ***                   goto done;
0000F3B2 47F0 C164               0000F424  22708          B     @_done@2028@13
                                           22709 * ***
                                           22710 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           22711 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMMIT","Committed\
                                           22712 *  transaction now acked by application"); } while (0);
0000F3B6                                   22713 @L1582   DS    0H
0000F3B6 9180 2322      00000322 00000080  22714          TM    802(2),128
0000F3BA 4780 C14C               0000F40C  22715          BZ    @L1585
0000F3BE 41F0 2210               00000210  22716          LA    15,528(0,2)
0000F3C2 E3F0 D0B0 0024          000000B0  22717          STG   15,176(0,13)
0000F3C8 E320 D0B8 0024          000000B8  22718          STG   2,184(0,13)
0000F3CE D707 D0C0 D0C0 000000C0 000000C0  22719          XC    192(8,13),192(13)
0000F3D4 E548 D0C8 0007          000000C8  22720          MVGHI 200(13),7
                                                                                                                           Page  452 
  Active Usings: @REGION_2028_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F3DA C0FF 0000 8000                    22721          LLILF 15,X'00008000' ; 32768
0000F3E0 E3F0 D0D0 0024          000000D0  22722          STG   15,208(0,13)
0000F3E6 E3F0 C080 0004          0000F340  22723          LG    15,@lit_2028_1241
0000F3EC 4110 FE92               00000E92  22724          LA    1,3730(0,15)
0000F3F0 E310 D0D8 0024          000000D8  22725          STG   1,216(0,13)
0000F3F6 41F0 FECA               00000ECA  22726          LA    15,3786(0,15)
0000F3FA E3F0 D0E0 0024          000000E0  22727          STG   15,224(0,13)
0000F400 4110 D0B0               000000B0  22728          LA    1,176(0,13)
0000F404 E3F0 C078 0004          0000F338  22729          LG    15,@lit_2028_1242 ; rd_kafka_log0
0000F40A                                   22730 @@gen_label1697 DS    0H
0000F40A 05EF                              22731          BALR  14,15
0000F40C                                   22732 @@gen_label1698 DS    0H
0000F40C                                   22733 @L1585   DS    0H
                                           22734 * ***
                                           22735 * ***           rd_kafka_txn_complete(rk, 1);
0000F40C E320 D0B0 0024          000000B0  22736          STG   2,176(0,13)
0000F412 E548 D0B8 0001          000000B8  22737          MVGHI 184(13),1
0000F418 4110 D0B0               000000B0  22738          LA    1,176(0,13)
0000F41C E3F0 C088 0004          0000F348  22739          LG    15,@lit_2028_1243 ; rd_kafka_txn_complete
0000F422                                   22740 @@gen_label1699 DS    0H
0000F422 05EF                              22741          BALR  14,15
0000F424                                   22742 @@gen_label1700 DS    0H
                                           22743 * ***
                                           22744 * ***
                                           22745 * ***    done:
                                           22746 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000F424                                   22747 @_done@2028@13 DS 0H
0000F424 41F0 29A0               000009A0  22748          LA    15,2464(0,2)
0000F428 E3F0 D0B0 0024          000000B0  22749          STG   15,176(0,13)
0000F42E 4110 D0B0               000000B0  22750          LA    1,176(0,13)
0000F432 E3F0 C090 0004          0000F350  22751          LG    15,@lit_2028_1244 ; rwlock_wrunlock
0000F438                                   22752 @@gen_label1701 DS    0H
0000F438 05EF                              22753          BALR  14,15
0000F43A                                   22754 @@gen_label1702 DS    0H
                                           22755 * ***
                                           22756 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           22757 * >rko_replyq.q),
                                           22758 * ***                                             error);
0000F43A E3F0 4010 0004          00000010  22759          LG    15,16(0,4)  ; rko
0000F440 E3F0 F040 0004          00000040  22760          LG    15,64(0,15)
0000F446 E3F0 D0B0 0024          000000B0  22761          STG   15,176(0,13)
0000F44C 4110 D0B0               000000B0  22762          LA    1,176(0,13)
0000F450 E3F0 C098 0004          0000F358  22763          LG    15,@lit_2028_1245 ; rd_kafka_q_keep
0000F456                                   22764 @@gen_label1703 DS    0H
0000F456 05EF                              22765          BALR  14,15
0000F458                                   22766 @@gen_label1704 DS    0H
0000F458 E3F0 D0B0 0024          000000B0  22767          STG   15,176(0,13)
0000F45E E330 D0B8 0024          000000B8  22768          STG   3,184(0,13)
0000F464 4110 D0B0               000000B0  22769          LA    1,176(0,13)
0000F468 E3F0 C0A0 0004          0000F360  22770          LG    15,@lit_2028_1246 ; rd_kafka_txn_curr_api_reply_error
0000F46E                                   22771 @@gen_label1705 DS    0H
0000F46E 05EF                              22772          BALR  14,15
                                                                                                                           Page  453 
  Active Usings: @REGION_2028_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F470                                   22773 @@gen_label1706 DS    0H
                                           22774 * ***
                                           22775 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000F470 A7F9 0001               00000001  22776          LGHI  15,1        ; 1
                                           22777 * ***   }
0000F474                                   22778 @ret_lab_2028 DS 0H
                                           22779 * * **** Start of Epilogue
                                           22780          DCCEPIL
0000F474                                   22781+         ds 0h                                                          01-DCCEP
                                           22782+* Epilog
0000F474 D707 D088 D088 00000088 00000088  22783+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000F47A E3D0 D080 0004          00000080  22784+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000F480 E3C0 D090 0004          00000090  22785+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000F486 E3B0 C018 0004          00000018  22786+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000F48C E3C0 B010 0021          00000010  22787+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000F492 E3E0 D008 0004          00000008  22788+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000F498 EB1C D020 0004          00000020  22789+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000F49E 078E                              22790+         bcr 8,14                if same dsab, just return              01-DCCEP
0000F4A0 E3F0 D010 0024          00000010  22791+         stg 15,16(0,13)         save return code                       01-DCCEP
0000F4A6 E300 D018 0024          00000018  22792+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000F4AC E3F0 D090 0004          00000090  22793+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000F4B2 E3F0 F018 0004          00000018  22794+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000F4B8 47F0 F040               00000040  22795+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22796+* End of Epilog
                                           22797 * * **** End of Epilogue
                                           22798          DROP  12
                                           22799 *
                                           22800 *   DSECT for automatic variables in "rd_kafka_txn_op_commit_transacti
                                           22801 *           on_ack"
                                           22802 *      (FUNCTION #2028)
                                           22803 *
00000000                00000000 000000B0  22804 @AUTO#rd_kafka_txn_op_commit_transaction_ack DSECT
00000000                                   22805          DS    XL168
000000A8                                   22806 rd_kafka_txn_op_commit_transaction_ack#__cl7#0 DS 8XL1 ; __cl7
                                           22807 *
0000F4BC                00000000 00014658  22808 @CODE    CSECT
                                           22809 *
                                           22810 *
                                           22811 *
                                           22812 * ....... start of rd_kafka_commit_transaction
                                           22813 rd_kafka_commit_transaction ALIAS X'99846D92818692816D8396949489A36DA39*
                                                                98195A28183A3899695'
0000F4BC                                   22814 @LNAME1083 DS  0H
0000F4BC 0000001B                          22815          DC    X'0000001B'
0000F4C0 99846D9281869281                  22816          DC    C'rd_kafka_commit_transaction'
0000F4DB 00                                22817          DC    X'00'
                                           22818 rd_kafka_commit_transaction DCCPRLG CINDEX=1083,BASER=12,FRAME=248,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1083
                                           22819          macro
                                           22820          dccextrn &m
                                           22821          gblc    &$dccext(1000)
                                           22822          gbla    &$dccexti
                                                                                                                           Page  454 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22823          lcla    &i
                                           22824 &$dccext(&$dccexti+1) setc    '&m'
                                           22825 &i       seta    1
                                           22826 .loop    aif    (&i gt &$dccexti).around
                                           22827          aif    ('&$dccext(&i)' eq '&m').getout
                                           22828 &i       seta    &i+1
                                           22829          ago     .loop
                                           22830 .around  anop
                                           22831 &$dccexti seta &$dccexti+1
                                           22832          extrn  &m
                                           22833 .getout  anop
                                           22834          mend
0000F4E0                                   22835+$eye0291    ds    0d                                                    02-DCCCA
0000F4E0 C4C3C3                            22836+         dc cl3'DCC'                                                    02-DCCCA
0000F4E3 01                                22837+         dc xl1'01' format one                                          02-DCCCA
0000F4E4 00000000                          22838+         dc a(0)                                                        02-DCCCA
0000F4E8 000000000000F552                  22839+         dc ad(@PER_1083)                                               02-DCCCA
0000F4F0 00000000000000F8                  22840+         dc ad(248)                                                     02-DCCCA
0000F4F8 0000000000000000                  22841+         dc ad(0)                                                       02-DCCCA
0000F500 0000000000001000                  22842+         dc ad(4096)                                                    02-DCCCA
0000F508 20                                22843+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000F509 03                                22844+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000F50A 03                                22845+         dc al1(3)                                                      02-DCCCA
0000F50B 08                                22846+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000F50C 00                                22847+         dc bl.8'00000000'                                              02-DCCCA
0000F50D 000000                            22848+         dc al3(0)                                                      02-DCCCA
0000F510 000000000000F4BC                  22849+         dc ad(@LNAME1083)                                              02-DCCCA
0000F518                                   22850+         ds 0d                                                          02-DCCCA
0000F518 000000000000F4E0                  22851+         dc ad($eye0291)                                                02-DCCCA
0000F520 0000000000000000                  22852+         dc ad(0)                                                       02-DCCCA
0000F528                                   22853+         ds    0d                                                       01-DCCPR
                                           22854+         entry rd_kafka_commit_transaction                              01-DCCPR
0000F528                                   22855+rd_kafka_commit_transaction ds 0d                                       01-DCCPR
0000F528                                   22856+@REGION_1083_1 ds 0h                                                    01-DCCPR
0000F528 EBEC D008 0024          00000008  22857+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000F52E E3E0 D088 0004          00000088  22858+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000F534 E3C0 D090 0004          00000090  22859+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000F53A B904 002E                         22860+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000F53E E3B0 C018 0004          00000018  22861+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000F544 A7EB 00F8               000000F8  22862+         aghi  14,248              increase by frame size               01-DCCPR
0000F548 E3E0 C020 0021          00000020  22863+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000F54E 4720 B020               00000020  22864+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000F552                                   22865+@PER_1083 ds   0h                                                       01-DCCPR
0000F552 EBDE 2080 0024          00000080  22866+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000F558 E3C0 2090 0024          00000090  22867+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000F55E B904 00D2                         22868+         lgr   13,2                set real frame pointer               01-DCCPR
0000F562 B904 00CF                         22869+         lgr   12,15               set base reg                         01-DCCPR
                        0000F528           22870+         using @REGION_1083_1,12                                        01-DCCPR
0000F566 B904 0031                         22871          LGR   3,1         ; ptr to parm area
                                           22872 * ******* End of Prologue
                                           22873 * *
0000F56A E340 3000 0004          00000000  22874          LG    4,0(0,3)    ; rk
                                                                                                                           Page  455 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22875 * ***           rd_kafka_error_t *error;
                                           22876 * ***           rd_kafka_resp_err_t err;
                                           22877 * ***           rd_ts_t abs_timeout;
                                           22878 * ***
                                           22879 * ***           if ((error = rd_kafka_ensure_transactional(rk)))
0000F570 E340 D0B0 0024          000000B0  22880          STG   4,176(0,13)
0000F576 4110 D0B0               000000B0  22881          LA    1,176(0,13)
0000F57A E3F0 C078 0004          0000F5A0  22882          LG    15,@lit_1083_1249 ; rd_kafka_ensure_transactional
0000F580                                   22883 @@gen_label1707 DS    0H
0000F580 05EF                              22884          BALR  14,15
0000F582                                   22885 @@gen_label1708 DS    0H
0000F582 B902 002F                         22886          LTGR  2,15        ; error
0000F586 4780 C0F8               0000F620  22887          BZ    @L1586
                                           22888 * ***                   return error;
0000F58A B904 00F2                         22889          LGR   15,2
0000F58E 47F0 C4FC               0000FA24  22890          B     @ret_lab_1083
0000F598                                   22891          DS    0D
0000F598 000000F8                          22892 @FRAMESIZE_1083 DC F'248'
0000F59C 00000000
0000F5A0 0000000000004588                  22893 @lit_1083_1249 DC AD(rd_kafka_ensure_transactional)
0000F5A8 0000000000001268                  22894 @lit_1083_1250 DC AD(rd_timeout_init)
0000F5B0 0000000000000000                  22895 @lit_1083_1252 DC AD(rd_kafka_op_new_cb)
0000F5B8 000000000000F0A8                  22896 @lit_1083_1251 DC AD(rd_kafka_txn_op_begin_commit)
0000F5C0 00000000000014C8                  22897 @lit_1083_1253 DC AD(rd_timeout_remains)
0000F5C8 000000000000A0A0                  22898 @lit_1083_1255 DC AD(rd_kafka_txn_curr_api_req)
0000F5D0 0000000000014A98                  22899 @lit_1083_1254 DC AD(@strings@)
0000F5D8 0000000000000000                  22900 @lit_1083_1256 DC AD(rd_kafka_outq_len)
0000F5E0 0000000000000000                  22901 @lit_1083_1259 DC AD(rd_kafka_log0)
0000F5E8 0000000000000000                  22902 @lit_1083_1261 DC AD(rd_kafka_flush)
0000F5F0 0000000000000000                  22903 @lit_1083_1263 DC AD(rd_kafka_err2str)
0000F5F8 0000000000000000                  22904 @lit_1083_1271 DC AD(rd_kafka_error_new_retriable)
0000F600 0000000000015A98                  22905 @lit_1083_1273 DC AD(@strings@+4096)
0000F608 0000000000009F18                  22906 @lit_1083_1275 DC AD(rd_kafka_txn_curr_api_reset)
0000F610 000000000000EB68                  22907 @lit_1083_1280 DC AD(rd_kafka_txn_op_commit_transaction)
0000F618 000000000000F2C0                  22908 @lit_1083_1285 DC AD(rd_kafka_txn_op_commit_transaction_ack)
0000F620                                   22909 @L1586   DS    0H
                                           22910 * ***
                                           22911 * ***
                                           22912 * ***
                                           22913 * ***   # 2511 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           22914 * ***           abs_timeout = rd_timeout_init(timeout_ms);
0000F620 E3F0 300C 0014          0000000C  22915          LGF   15,12(0,3)  ; timeout_ms
0000F626 E3F0 D0B0 0024          000000B0  22916          STG   15,176(0,13)
0000F62C 4110 D0B0               000000B0  22917          LA    1,176(0,13)
0000F630 E3F0 C080 0004          0000F5A8  22918          LG    15,@lit_1083_1250 ; rd_timeout_init
0000F636                                   22919 @@gen_label1710 DS    0H
0000F636 05EF                              22920          BALR  14,15
0000F638                                   22921 @@gen_label1711 DS    0H
0000F638 B904 003F                         22922          LGR   3,15
                                           22923 * ***
                                           22924 * ***
                                           22925 * ***           error = rd_kafka_txn_curr_api_req(
                                                                                                                           Page  456 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           22926 * ***                   rk, "commit_transaction (begin)",
                                           22927 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           22928 * ***                   rd_timeout_remains(abs_timeout),
                                           22929 * ***                   0x4|
                                           22930 * ***                                      rd_kafka_txn_op_begin_commi\
                                           22931 * t),
0000F63C E340 D0B0 0024          000000B0  22932          STG   4,176(0,13)
0000F642 E548 D0B8 002F          000000B8  22933          MVGHI 184(13),47
0000F648 E3F0 C090 0004          0000F5B8  22934          LG    15,@lit_1083_1251 ; rd_kafka_txn_op_begin_commit
0000F64E E3F0 D0C0 0024          000000C0  22935          STG   15,192(0,13)
0000F654 4110 D0B0               000000B0  22936          LA    1,176(0,13)
0000F658 E3F0 C088 0004          0000F5B0  22937          LG    15,@lit_1083_1252 ; rd_kafka_op_new_cb
0000F65E                                   22938 @@gen_label1712 DS    0H
0000F65E 05EF                              22939          BALR  14,15
0000F660                                   22940 @@gen_label1713 DS    0H
0000F660 B904 002F                         22941          LGR   2,15
0000F664 E330 D0B0 0024          000000B0  22942          STG   3,176(0,13)
0000F66A 4110 D0B0               000000B0  22943          LA    1,176(0,13)
0000F66E E3F0 C098 0004          0000F5C0  22944          LG    15,@lit_1083_1253 ; rd_timeout_remains
0000F674                                   22945 @@gen_label1714 DS    0H
0000F674 05EF                              22946          BALR  14,15
0000F676                                   22947 @@gen_label1715 DS    0H
0000F676 E340 D0B0 0024          000000B0  22948          STG   4,176(0,13)
0000F67C E310 C0A8 0004          0000F5D0  22949          LG    1,@lit_1083_1254
0000F682 4110 1EFA               00000EFA  22950          LA    1,3834(0,1)
0000F686 EB12 D0B8 0024          000000B8  22951          STMG  1,2,184(13)
0000F68C B914 00FF                         22952          LGFR  15,15
0000F690 E3F0 D0C8 0024          000000C8  22953          STG   15,200(0,13)
                                           22954 * ***                   0x1);
0000F696 E548 D0D0 0005          000000D0  22955          MVGHI 208(13),5
0000F69C 4110 D0B0               000000B0  22956          LA    1,176(0,13)
0000F6A0 E3F0 C0A0 0004          0000F5C8  22957          LG    15,@lit_1083_1255 ; rd_kafka_txn_curr_api_req
0000F6A6                                   22958 @@gen_label1716 DS    0H
0000F6A6 05EF                              22959          BALR  14,15
0000F6A8                                   22960 @@gen_label1717 DS    0H
0000F6A8 B902 002F                         22961          LTGR  2,15        ; error
                                           22962 * ***           if (error)
0000F6AC 4780 C190               0000F6B8  22963          BZ    @L1588
                                           22964 * ***                   return error;
0000F6B0 B904 00F2                         22965          LGR   15,2
0000F6B4 47F0 C4FC               0000FA24  22966          B     @ret_lab_1083
                                           22967 * ***
                                           22968 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           22969 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMMIT","Flushing \
                                           22970 * %d outstanding message(s) prior to commit", rd_kafka_outq_len(rk)); \
                                           22971 * } while (0);
0000F6B8                                   22972 @L1588   DS    0H
0000F6B8 9180 4322      00000322 00000080  22973          TM    802(4),128
0000F6BC 4780 C202               0000F72A  22974          BZ    @L1591
0000F6C0 E340 D0B0 0024          000000B0  22975          STG   4,176(0,13)
0000F6C6 4110 D0B0               000000B0  22976          LA    1,176(0,13)
0000F6CA E3F0 C0B0 0004          0000F5D8  22977          LG    15,@lit_1083_1256 ; rd_kafka_outq_len
                                                                                                                           Page  457 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F6D0                                   22978 @@gen_label1720 DS    0H
0000F6D0 05EF                              22979          BALR  14,15
0000F6D2                                   22980 @@gen_label1721 DS    0H
0000F6D2 4110 4210               00000210  22981          LA    1,528(0,4)
0000F6D6 E310 D0B0 0024          000000B0  22982          STG   1,176(0,13)
0000F6DC E340 D0B8 0024          000000B8  22983          STG   4,184(0,13)
0000F6E2 D707 D0C0 D0C0 000000C0 000000C0  22984          XC    192(8,13),192(13)
0000F6E8 E548 D0C8 0007          000000C8  22985          MVGHI 200(13),7
0000F6EE C01F 0000 8000                    22986          LLILF 1,X'00008000' ; 32768
0000F6F4 E310 D0D0 0024          000000D0  22987          STG   1,208(0,13)
0000F6FA E310 C0A8 0004          0000F5D0  22988          LG    1,@lit_1083_1254
0000F700 4120 1E92               00000E92  22989          LA    2,3730(0,1)
0000F704 E320 D0D8 0024          000000D8  22990          STG   2,216(0,13)
0000F70A 4110 1F16               00000F16  22991          LA    1,3862(0,1)
0000F70E E310 D0E0 0024          000000E0  22992          STG   1,224(0,13)
0000F714 B914 00FF                         22993          LGFR  15,15
0000F718 E3F0 D0E8 0024          000000E8  22994          STG   15,232(0,13)
0000F71E 4110 D0B0               000000B0  22995          LA    1,176(0,13)
0000F722 E3F0 C0B8 0004          0000F5E0  22996          LG    15,@lit_1083_1259 ; rd_kafka_log0
0000F728                                   22997 @@gen_label1722 DS    0H
0000F728 05EF                              22998          BALR  14,15
0000F72A                                   22999 @@gen_label1723 DS    0H
0000F72A                                   23000 @L1591   DS    0H
                                           23001 * ***
                                           23002 * ***
                                           23003 * ***
                                           23004 * ***
                                           23005 * ***
                                           23006 * ***           if ((err = rd_kafka_flush(rk, rd_timeout_remains(abs_t\
                                           23007 * imeout)))) {
0000F72A E330 D0B0 0024          000000B0  23008          STG   3,176(0,13)
0000F730 4110 D0B0               000000B0  23009          LA    1,176(0,13)
0000F734 E3F0 C098 0004          0000F5C0  23010          LG    15,@lit_1083_1253 ; rd_timeout_remains
0000F73A                                   23011 @@gen_label1724 DS    0H
0000F73A 05EF                              23012          BALR  14,15
0000F73C                                   23013 @@gen_label1725 DS    0H
0000F73C E340 D0B0 0024          000000B0  23014          STG   4,176(0,13)
0000F742 B914 00FF                         23015          LGFR  15,15
0000F746 E3F0 D0B8 0024          000000B8  23016          STG   15,184(0,13)
0000F74C 4110 D0B0               000000B0  23017          LA    1,176(0,13)
0000F750 E3F0 C0C0 0004          0000F5E8  23018          LG    15,@lit_1083_1261 ; rd_kafka_flush
0000F756                                   23019 @@gen_label1726 DS    0H
0000F756 05EF                              23020          BALR  14,15
0000F758                                   23021 @@gen_label1727 DS    0H
0000F758 122F                              23022          LTR   2,15
0000F75A 4780 C3B8               0000F8E0  23023          BZ    @L1601
                                           23024 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           23025 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMMIT","F\
                                           23026 * lush failed (with %d messages remaining): %s", rd_kafka_outq_len(rk)\
                                           23027 * , rd_kafka_err2str(err)); } while (0);
0000F75E                                   23028 @L1593   DS    0H
0000F75E 9180 4322      00000322 00000080  23029          TM    802(4),128
                                                                                                                           Page  458 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F762 4780 C2C6               0000F7EE  23030          BZ    @L1596
0000F766 E340 D0B0 0024          000000B0  23031          STG   4,176(0,13)
0000F76C 4110 D0B0               000000B0  23032          LA    1,176(0,13)
0000F770 E3F0 C0B0 0004          0000F5D8  23033          LG    15,@lit_1083_1256 ; rd_kafka_outq_len
0000F776                                   23034 @@gen_label1730 DS    0H
0000F776 05EF                              23035          BALR  14,15
0000F778                                   23036 @@gen_label1731 DS    0H
0000F778 183F                              23037          LR    3,15
0000F77A B914 00F2                         23038          LGFR  15,2
0000F77E E3F0 D0B0 0024          000000B0  23039          STG   15,176(0,13)
0000F784 4110 D0B0               000000B0  23040          LA    1,176(0,13)
0000F788 E3F0 C0C8 0004          0000F5F0  23041          LG    15,@lit_1083_1263 ; rd_kafka_err2str
0000F78E                                   23042 @@gen_label1732 DS    0H
0000F78E 05EF                              23043          BALR  14,15
0000F790                                   23044 @@gen_label1733 DS    0H
0000F790 4110 4210               00000210  23045          LA    1,528(0,4)
0000F794 E310 D0B0 0024          000000B0  23046          STG   1,176(0,13)
0000F79A E340 D0B8 0024          000000B8  23047          STG   4,184(0,13)
0000F7A0 D707 D0C0 D0C0 000000C0 000000C0  23048          XC    192(8,13),192(13)
0000F7A6 E548 D0C8 0007          000000C8  23049          MVGHI 200(13),7
0000F7AC C01F 0000 8000                    23050          LLILF 1,X'00008000' ; 32768
0000F7B2 E310 D0D0 0024          000000D0  23051          STG   1,208(0,13)
0000F7B8 E310 C0A8 0004          0000F5D0  23052          LG    1,@lit_1083_1254
0000F7BE 4150 1E92               00000E92  23053          LA    5,3730(0,1)
0000F7C2 E350 D0D8 0024          000000D8  23054          STG   5,216(0,13)
0000F7C8 4110 1F4A               00000F4A  23055          LA    1,3914(0,1)
0000F7CC E310 D0E0 0024          000000E0  23056          STG   1,224(0,13)
0000F7D2 B914 0013                         23057          LGFR  1,3
0000F7D6 E310 D0E8 0024          000000E8  23058          STG   1,232(0,13)
0000F7DC E3F0 D0F0 0024          000000F0  23059          STG   15,240(0,13)
0000F7E2 4110 D0B0               000000B0  23060          LA    1,176(0,13)
0000F7E6 E3F0 C0B8 0004          0000F5E0  23061          LG    15,@lit_1083_1259 ; rd_kafka_log0
0000F7EC                                   23062 @@gen_label1734 DS    0H
0000F7EC 05EF                              23063          BALR  14,15
0000F7EE                                   23064 @@gen_label1735 DS    0H
0000F7EE                                   23065 @L1596   DS    0H
                                           23066 * ***
                                           23067 * ***
                                           23068 * ***
                                           23069 * ***                   if (err == RD_KAFKA_RESP_ERR__TIMED_OUT)
0000F7EE A72E FF47               0000FF47  23070          CHI   2,-185
0000F7F2 4770 C352               0000F87A  23071          BNE   @L1597
                                           23072 * ***                           error = rd_kafka_error_new_retriable(
                                           23073 * ***                                   err,
                                           23074 * ***                                   "Failed to flush all outstandi\
                                           23075 * ng messages "
                                           23076 * ***                                   rd_kafka_outq_len(rk),
                                           23077 * ***
                                           23078 * ***
                                           23079 * ***
                                           23080 * ***
                                           23081 * ***
                                                                                                                           Page  459 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23082 * ***                                   ((rk->rk_conf.enabled_events &
0000F7F6 E340 D0B0 0024          000000B0  23083          STG   4,176(0,13)
0000F7FC 4110 D0B0               000000B0  23084          LA    1,176(0,13)
0000F800 E3F0 C0B0 0004          0000F5D8  23085          LG    15,@lit_1083_1256 ; rd_kafka_outq_len
0000F806                                   23086 @@gen_label1737 DS    0H
0000F806 05EF                              23087          BALR  14,15
0000F808                                   23088 @@gen_label1738 DS    0H
                                           23089 * ***                                    0x1) &&
0000F808 9101 42F3      000002F3 00000001  23090          TM    755(4),1
0000F80C 4780 C30A               0000F832  23091          BZ    @L1598
                                           23092 * ***                                    !rk->rk_conf.dr_msg_cb &&
0000F810 E310 4838 0002          00000838  23093          LTG   1,2104(0,4) ; offset of dr_msg_cb in rd_kafka_conf_s
0000F816 4770 C30A               0000F832  23094          BNZ   @L1598
                                           23095 * ***                                    !rk->rk_conf.dr_cb) ?
0000F81A E310 4830 0002          00000830  23096          LTG   1,2096(0,4) ; offset of dr_cb in rd_kafka_conf_s
0000F820 4770 C30A               0000F832  23097          BNZ   @L1598
                                           23098 * ***                                   ": the event queue must be pol\
                                           23099 * led "
                                           23100 * ***                                   "for delivery report events in\
                                           23101 *  a separate "
                                           23102 * ***                                   "thread or prior to calling co\
                                           23103 * mmit" : "");
0000F824 E310 C0A8 0004          0000F5D0  23104          LG    1,@lit_1083_1254
0000F82A 4110 1F78               00000F78  23105          LA    1,3960(0,1)
0000F82E 47F0 C314               0000F83C  23106          B     @L1599
0000F832                                   23107 @L1598   DS    0H
0000F832 E310 C0A8 0004          0000F5D0  23108          LG    1,@lit_1083_1254
0000F838 4110 13C4               000003C4  23109          LA    1,964(0,1)
0000F83C                                   23110 @L1599   DS    0H
0000F83C B914 0022                         23111          LGFR  2,2
0000F840 E320 D0B0 0024          000000B0  23112          STG   2,176(0,13)
                                           23113 * ***                                   "within the transaction timeou\
                                           23114 * t: "
                                           23115 * ***                                   "%d message(s) remaining%s",
0000F846 E320 C0A8 0004          0000F5D0  23116          LG    2,@lit_1083_1254
0000F84C 4120 2FE4               00000FE4  23117          LA    2,4068(0,2)
0000F850 E320 D0B8 0024          000000B8  23118          STG   2,184(0,13)
0000F856 B914 00FF                         23119          LGFR  15,15
0000F85A E3F0 D0C0 0024          000000C0  23120          STG   15,192(0,13)
0000F860 E310 D0C8 0024          000000C8  23121          STG   1,200(0,13)
0000F866 4110 D0B0               000000B0  23122          LA    1,176(0,13)
0000F86A E3F0 C0D0 0004          0000F5F8  23123          LG    15,@lit_1083_1271 ; rd_kafka_error_new_retriable
0000F870                                   23124 @@gen_label1742 DS    0H
0000F870 05EF                              23125          BALR  14,15
0000F872                                   23126 @@gen_label1743 DS    0H
0000F872 B904 002F                         23127          LGR   2,15        ; error
0000F876 47F0 C398               0000F8C0  23128          B     @L1600
                                           23129 * ***                   else
0000F87A                                   23130 @L1597   DS    0H
                                           23131 * ***                           error = rd_kafka_error_new_retriable(
                                           23132 * ***                                   err,
                                           23133 * ***                                   "Failed to flush outstanding m\
                                                                                                                           Page  460 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23134 * essages: %s",
                                           23135 * ***                                   rd_kafka_err2str(err));
0000F87A B914 00F2                         23136          LGFR  15,2
0000F87E E3F0 D0B0 0024          000000B0  23137          STG   15,176(0,13)
0000F884 4110 D0B0               000000B0  23138          LA    1,176(0,13)
0000F888 E3F0 C0C8 0004          0000F5F0  23139          LG    15,@lit_1083_1263 ; rd_kafka_err2str
0000F88E                                   23140 @@gen_label1744 DS    0H
0000F88E 05EF                              23141          BALR  14,15
0000F890                                   23142 @@gen_label1745 DS    0H
0000F890 B914 0012                         23143          LGFR  1,2
0000F894 E310 D0B0 0024          000000B0  23144          STG   1,176(0,13)
0000F89A E310 C0D8 0004          0000F600  23145          LG    1,@lit_1083_1273
0000F8A0 4110 1048               00000048  23146          LA    1,72(0,1)
0000F8A4 E310 D0B8 0024          000000B8  23147          STG   1,184(0,13)
0000F8AA E3F0 D0C0 0024          000000C0  23148          STG   15,192(0,13)
0000F8B0 4110 D0B0               000000B0  23149          LA    1,176(0,13)
0000F8B4 E3F0 C0D0 0004          0000F5F8  23150          LG    15,@lit_1083_1271 ; rd_kafka_error_new_retriable
0000F8BA                                   23151 @@gen_label1746 DS    0H
0000F8BA 05EF                              23152          BALR  14,15
0000F8BC                                   23153 @@gen_label1747 DS    0H
0000F8BC B904 002F                         23154          LGR   2,15        ; error
0000F8C0                                   23155 @L1600   DS    0H
                                           23156 * ***
                                           23157 * ***                   rd_kafka_txn_curr_api_reset(rk, 0);
0000F8C0 E340 D0B0 0024          000000B0  23158          STG   4,176(0,13)
0000F8C6 D707 D0B8 D0B8 000000B8 000000B8  23159          XC    184(8,13),184(13)
0000F8CC 4110 D0B0               000000B0  23160          LA    1,176(0,13)
0000F8D0 E3F0 C0E0 0004          0000F608  23161          LG    15,@lit_1083_1275 ; rd_kafka_txn_curr_api_reset
0000F8D6                                   23162 @@gen_label1748 DS    0H
0000F8D6 05EF                              23163          BALR  14,15
0000F8D8                                   23164 @@gen_label1749 DS    0H
                                           23165 * ***
                                           23166 * ***
                                           23167 * ***
                                           23168 * ***                   return error;
0000F8D8 B904 00F2                         23169          LGR   15,2
0000F8DC 47F0 C4FC               0000FA24  23170          B     @ret_lab_1083
                                           23171 * ***           }
                                           23172 * ***
                                           23173 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           23174 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMMIT","Transacti\
                                           23175 * on commit message flush complete"); } while (0);
0000F8E0                                   23176 @L1601   DS    0H
0000F8E0 9180 4322      00000322 00000080  23177          TM    802(4),128
0000F8E4 4780 C414               0000F93C  23178          BZ    @L1604
0000F8E8 41F0 4210               00000210  23179          LA    15,528(0,4)
0000F8EC E3F0 D0B0 0024          000000B0  23180          STG   15,176(0,13)
0000F8F2 E340 D0B8 0024          000000B8  23181          STG   4,184(0,13)
0000F8F8 D707 D0C0 D0C0 000000C0 000000C0  23182          XC    192(8,13),192(13)
0000F8FE E548 D0C8 0007          000000C8  23183          MVGHI 200(13),7
0000F904 C0FF 0000 8000                    23184          LLILF 15,X'00008000' ; 32768
0000F90A E3F0 D0D0 0024          000000D0  23185          STG   15,208(0,13)
                                                                                                                           Page  461 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F910 E3F0 C0A8 0004          0000F5D0  23186          LG    15,@lit_1083_1254
0000F916 41F0 FE92               00000E92  23187          LA    15,3730(0,15)
0000F91A E3F0 D0D8 0024          000000D8  23188          STG   15,216(0,13)
0000F920 E3F0 C0D8 0004          0000F600  23189          LG    15,@lit_1083_1273
0000F926 41F0 F072               00000072  23190          LA    15,114(0,15)
0000F92A E3F0 D0E0 0024          000000E0  23191          STG   15,224(0,13)
0000F930 4110 D0B0               000000B0  23192          LA    1,176(0,13)
0000F934 E3F0 C0B8 0004          0000F5E0  23193          LG    15,@lit_1083_1259 ; rd_kafka_log0
0000F93A                                   23194 @@gen_label1751 DS    0H
0000F93A 05EF                              23195          BALR  14,15
0000F93C                                   23196 @@gen_label1752 DS    0H
0000F93C                                   23197 @L1604   DS    0H
                                           23198 * ***
                                           23199 * ***
                                           23200 * ***
                                           23201 * ***           error = rd_kafka_txn_curr_api_req(
                                           23202 * ***                   rk, "commit_transaction",
                                           23203 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           23204 * ***                   rd_timeout_remains(abs_timeout),
                                           23205 * ***                   0x8|
                                           23206 * ***                                      rd_kafka_txn_op_commit_tran\
                                           23207 * saction),
0000F93C E340 D0B0 0024          000000B0  23208          STG   4,176(0,13)
0000F942 E548 D0B8 002F          000000B8  23209          MVGHI 184(13),47
0000F948 E3F0 C0E8 0004          0000F610  23210          LG    15,@lit_1083_1280 ; rd_kafka_txn_op_commit_transaction
0000F94E E3F0 D0C0 0024          000000C0  23211          STG   15,192(0,13)
0000F954 4110 D0B0               000000B0  23212          LA    1,176(0,13)
0000F958 E350 C088 0004          0000F5B0  23213          LG    5,@lit_1083_1252 ; rd_kafka_op_new_cb
0000F95E B904 00F5                         23214          LGR   15,5
0000F962                                   23215 @@gen_label1753 DS    0H
0000F962 05EF                              23216          BALR  14,15
0000F964                                   23217 @@gen_label1754 DS    0H
0000F964 B904 002F                         23218          LGR   2,15
0000F968 E330 D0B0 0024          000000B0  23219          STG   3,176(0,13)
0000F96E 4110 D0B0               000000B0  23220          LA    1,176(0,13)
0000F972 E360 C098 0004          0000F5C0  23221          LG    6,@lit_1083_1253 ; rd_timeout_remains
0000F978 B904 00F6                         23222          LGR   15,6
0000F97C                                   23223 @@gen_label1755 DS    0H
0000F97C 05EF                              23224          BALR  14,15
0000F97E                                   23225 @@gen_label1756 DS    0H
0000F97E E340 D0B0 0024          000000B0  23226          STG   4,176(0,13)
0000F984 E370 C0D8 0004          0000F600  23227          LG    7,@lit_1083_1273
0000F98A 4110 709C               0000009C  23228          LA    1,156(0,7)
0000F98E EB12 D0B8 0024          000000B8  23229          STMG  1,2,184(13)
0000F994 B914 00FF                         23230          LGFR  15,15
0000F998 E3F0 D0C8 0024          000000C8  23231          STG   15,200(0,13)
                                           23232 * ***                   0x4|
                                           23233 * ***                   0x1);
0000F99E E548 D0D0 000D          000000D0  23234          MVGHI 208(13),13
0000F9A4 4110 D0B0               000000B0  23235          LA    1,176(0,13)
0000F9A8 E380 C0A0 0004          0000F5C8  23236          LG    8,@lit_1083_1255 ; rd_kafka_txn_curr_api_req
0000F9AE B904 00F8                         23237          LGR   15,8
                                                                                                                           Page  462 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000F9B2                                   23238 @@gen_label1757 DS    0H
0000F9B2 05EF                              23239          BALR  14,15
0000F9B4                                   23240 @@gen_label1758 DS    0H
0000F9B4 B902 002F                         23241          LTGR  2,15        ; error
                                           23242 * ***           if (error)
0000F9B8 4780 C49C               0000F9C4  23243          BZ    @L1605
                                           23244 * ***                   return error;
0000F9BC B904 00F2                         23245          LGR   15,2
0000F9C0 47F0 C4FC               0000FA24  23246          B     @ret_lab_1083
0000F9C4                                   23247 @L1605   DS    0H
                                           23248 * ***
                                           23249 * ***
                                           23250 * ***           return rd_kafka_txn_curr_api_req(
                                           23251 * ***                   rk, "commit_transaction (ack)",
                                           23252 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           23253 * ***                   rd_timeout_remains(abs_timeout),
                                           23254 * ***                   0x8|
                                           23255 * ***                                      rd_kafka_txn_op_commit_tran\
                                           23256 * saction_ack),
0000F9C4 E340 D0B0 0024          000000B0  23257          STG   4,176(0,13)
0000F9CA E548 D0B8 002F          000000B8  23258          MVGHI 184(13),47
0000F9D0 E3F0 C0F0 0004          0000F618  23259          LG    15,@lit_1083_1285 ; rd_kafka_txn_op_commit_transaction_a*
                                                                ck
0000F9D6 E3F0 D0C0 0024          000000C0  23260          STG   15,192(0,13)
0000F9DC 4110 D0B0               000000B0  23261          LA    1,176(0,13)
0000F9E0 B904 00F5                         23262          LGR   15,5
0000F9E4                                   23263 @@gen_label1760 DS    0H
0000F9E4 05EF                              23264          BALR  14,15
0000F9E6                                   23265 @@gen_label1761 DS    0H
0000F9E6 B904 002F                         23266          LGR   2,15
0000F9EA E330 D0B0 0024          000000B0  23267          STG   3,176(0,13)
0000F9F0 4110 D0B0               000000B0  23268          LA    1,176(0,13)
0000F9F4 B904 00F6                         23269          LGR   15,6
0000F9F8                                   23270 @@gen_label1762 DS    0H
0000F9F8 05EF                              23271          BALR  14,15
0000F9FA                                   23272 @@gen_label1763 DS    0H
0000F9FA E340 D0B0 0024          000000B0  23273          STG   4,176(0,13)
0000FA00 4110 70B0               000000B0  23274          LA    1,176(0,7)
0000FA04 EB12 D0B8 0024          000000B8  23275          STMG  1,2,184(13)
0000FA0A B914 00FF                         23276          LGFR  15,15
0000FA0E E3F0 D0C8 0024          000000C8  23277          STG   15,200(0,13)
                                           23278 * ***                   0x1);
0000FA14 E548 D0D0 0009          000000D0  23279          MVGHI 208(13),9
0000FA1A 4110 D0B0               000000B0  23280          LA    1,176(0,13)
0000FA1E B904 00F8                         23281          LGR   15,8
0000FA22                                   23282 @@gen_label1764 DS    0H
0000FA22 05EF                              23283          BALR  14,15
0000FA24                                   23284 @@gen_label1765 DS    0H
                                           23285 * ***   }
0000FA24                                   23286 @ret_lab_1083 DS 0H
                                           23287 * * **** Start of Epilogue
                                           23288          DCCEPIL
                                                                                                                           Page  463 
  Active Usings: @REGION_1083_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000FA24                                   23289+         ds 0h                                                          01-DCCEP
                                           23290+* Epilog
0000FA24 D707 D088 D088 00000088 00000088  23291+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000FA2A E3D0 D080 0004          00000080  23292+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000FA30 E3C0 D090 0004          00000090  23293+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000FA36 E3B0 C018 0004          00000018  23294+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000FA3C E3C0 B010 0021          00000010  23295+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000FA42 E3E0 D008 0004          00000008  23296+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000FA48 EB1C D020 0004          00000020  23297+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000FA4E 078E                              23298+         bcr 8,14                if same dsab, just return              01-DCCEP
0000FA50 E3F0 D010 0024          00000010  23299+         stg 15,16(0,13)         save return code                       01-DCCEP
0000FA56 E300 D018 0024          00000018  23300+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000FA5C E3F0 D090 0004          00000090  23301+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000FA62 E3F0 F018 0004          00000018  23302+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000FA68 47F0 F040               00000040  23303+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23304+* End of Epilog
                                           23305 * * **** End of Epilogue
                                           23306          DROP  12
                                           23307 *
                                           23308 *   DSECT for automatic variables in "rd_kafka_commit_transaction"
                                           23309 *      (FUNCTION #1083)
                                           23310 *
00000000                00000000 000000B0  23311 @AUTO#rd_kafka_commit_transaction DSECT
00000000                                   23312          DS    XL168
000000A8                                   23313 rd_kafka_commit_transaction#abs_timeout#0 DS 8XL1 ; abs_timeout
000000B0                000000B0 000000A8  23314          ORG   @AUTO#rd_kafka_commit_transaction+168
000000A8                                   23315 rd_kafka_commit_transaction#err#0 DS 1F ; err
                                           23316 *
0000FA6C                00000000 00014658  23317 @CODE    CSECT
                                           23318 *
                                           23319 *
                                           23320 *
                                           23321 * ....... start of rd_kafka_txn_op_begin_abort
0000FA6C                                   23322 @LNAME2029 DS  0H
0000FA6C 0000001B                          23323          DC    X'0000001B'
0000FA70 99846D9281869281                  23324          DC    C'rd_kafka_txn_op_begin_abort'
0000FA8B 00                                23325          DC    X'00'
                                           23326 rd_kafka_txn_op_begin_abort DCCPRLG CINDEX=2029,BASER=12,FRAME=208,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2029
                                           23327          macro
                                           23328          dccextrn &m
                                           23329          gblc    &$dccext(1000)
                                           23330          gbla    &$dccexti
                                           23331          lcla    &i
                                           23332 &$dccext(&$dccexti+1) setc    '&m'
                                           23333 &i       seta    1
                                           23334 .loop    aif    (&i gt &$dccexti).around
                                           23335          aif    ('&$dccext(&i)' eq '&m').getout
                                           23336 &i       seta    &i+1
                                           23337          ago     .loop
                                           23338 .around  anop
                                           23339 &$dccexti seta &$dccexti+1
                                                                                                                           Page  464 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23340          extrn  &m
                                           23341 .getout  anop
                                           23342          mend
0000FA90                                   23343+$eye0294    ds    0d                                                    02-DCCCA
0000FA90 C4C3C3                            23344+         dc cl3'DCC'                                                    02-DCCCA
0000FA93 01                                23345+         dc xl1'01' format one                                          02-DCCCA
0000FA94 00000000                          23346+         dc a(0)                                                        02-DCCCA
0000FA98 000000000000FB02                  23347+         dc ad(@PER_2029)                                               02-DCCCA
0000FAA0 00000000000000D0                  23348+         dc ad(208)                                                     02-DCCCA
0000FAA8 0000000000000000                  23349+         dc ad(0)                                                       02-DCCCA
0000FAB0 0000000000001000                  23350+         dc ad(4096)                                                    02-DCCCA
0000FAB8 20                                23351+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000FAB9 03                                23352+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000FABA 03                                23353+         dc al1(3)                                                      02-DCCCA
0000FABB 08                                23354+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000FABC 00                                23355+         dc bl.8'00000000'                                              02-DCCCA
0000FABD 000000                            23356+         dc al3(0)                                                      02-DCCCA
0000FAC0 000000000000FA6C                  23357+         dc ad(@LNAME2029)                                              02-DCCCA
0000FAC8                                   23358+         ds 0d                                                          02-DCCCA
0000FAC8 000000000000FA90                  23359+         dc ad($eye0294)                                                02-DCCCA
0000FAD0 0000000000000000                  23360+         dc ad(0)                                                       02-DCCCA
0000FAD8                                   23361+         ds    0d                                                       01-DCCPR
0000FAD8                                   23362+rd_kafka_txn_op_begin_abort ds 0d                                       01-DCCPR
0000FAD8                                   23363+@REGION_2029_1 ds 0h                                                    01-DCCPR
0000FAD8 EBEC D008 0024          00000008  23364+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000FADE E3E0 D088 0004          00000088  23365+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000FAE4 E3C0 D090 0004          00000090  23366+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000FAEA B904 002E                         23367+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000FAEE E3B0 C018 0004          00000018  23368+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000FAF4 A7EB 00D0               000000D0  23369+         aghi  14,208              increase by frame size               01-DCCPR
0000FAF8 E3E0 C020 0021          00000020  23370+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000FAFE 4720 B020               00000020  23371+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000FB02                                   23372+@PER_2029 ds   0h                                                       01-DCCPR
0000FB02 EBDE 2080 0024          00000080  23373+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000FB08 E3C0 2090 0024          00000090  23374+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000FB0E B904 00D2                         23375+         lgr   13,2                set real frame pointer               01-DCCPR
0000FB12 B904 00CF                         23376+         lgr   12,15               set base reg                         01-DCCPR
                        0000FAD8           23377+         using @REGION_2029_1,12                                        01-DCCPR
                                           23378 * ******* End of Prologue
                                           23379 * *
0000FB16 E320 1000 0004          00000000  23380          LG    2,0(0,1)    ; rk
                                           23381 * ***           rd_kafka_error_t *error;
                                           23382 * ***           rd_bool_t clear_pending = 0;
0000FB1C 9200 D0BC      000000BC 00000000  23383          MVI   188(13),0   ; clear_pending
                                           23384 * ***
                                           23385 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000FB20 E340 1010 0004          00000010  23386          LG    4,16(0,1)   ; rko
0000FB26 E55C 4020 FF3B          00000020  23387          CHSI  32(4),-197
0000FB2C 4770 C0B0               0000FB88  23388          BNE   @L1606
                                           23389 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000FB30 A7F9 0001               00000001  23390          LGHI  15,1        ; 1
0000FB34 47F0 C1C2               0000FC9A  23391          B     @ret_lab_2029
                                                                                                                           Page  465 
  Active Usings: @REGION_2029_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000FB38                                   23392          DS    0D
0000FB38 000000D0                          23393 @FRAMESIZE_2029 DC F'208'
0000FB3C 00000000
0000FB40 0000000000000000                  23394 @lit_2029_1291 DC AD(rwlock_wrlock)
0000FB48 0000000000004700                  23395 @lit_2029_1292 DC AD(rd_kafka_txn_require_states0)
0000FB50 0000000000004DE8                  23396 @lit_2029_1293 DC AD(rd_kafka_txn_set_state)
0000FB58 0000000000000000                  23397 @lit_2029_1294 DC AD(rwlock_wrunlock)
0000FB60 0000000000000000                  23398 @lit_2029_1295 DC AD(mtx_lock)
0000FB68 0000000000009680                  23399 @lit_2029_1296 DC AD(rd_kafka_txn_clear_pending_partitions)
0000FB70 0000000000000000                  23400 @lit_2029_1297 DC AD(mtx_unlock)
0000FB78 0000000000001D48                  23401 @lit_2029_1298 DC AD(rd_kafka_q_keep)
0000FB80 00000000000058A0                  23402 @lit_2029_1299 DC AD(rd_kafka_txn_curr_api_reply_error)
0000FB88                                   23403 @L1606   DS    0H
                                           23404 * ***
                                           23405 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000FB88 41F0 29A0               000009A0  23406          LA    15,2464(0,2)
0000FB8C E3F0 D0C0 0024          000000C0  23407          STG   15,192(0,13)
0000FB92 4110 D0C0               000000C0  23408          LA    1,192(0,13)
0000FB96 E3F0 C068 0004          0000FB40  23409          LG    15,@lit_2029_1291 ; rwlock_wrlock
0000FB9C                                   23410 @@gen_label1767 DS    0H
0000FB9C 05EF                              23411          BALR  14,15
0000FB9E                                   23412 @@gen_label1768 DS    0H
                                           23413 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           23414 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_IN_TRANSACTION, RD_KAFKA_TXN_ST\
                                           23415 * ATE_ABORTING_TRANSACTION, RD_KAFKA_TXN_STATE_ABORTABLE_ERROR, RD_KAF\
                                           23416 * KA_TXN_STATE_ABORT_NOT_ACKED, -1 })))
0000FB9E E54C D0A8 0004          000000A8  23417          MVHI  168(13),4
0000FBA4 E54C D0AC 0008          000000AC  23418          MVHI  172(13),8
0000FBAA E54C D0B0 000A          000000B0  23419          MVHI  176(13),10
0000FBB0 E54C D0B4 0009          000000B4  23420          MVHI  180(13),9
0000FBB6 E54C D0B8 FFFF          000000B8  23421          MVHI  184(13),-1
0000FBBC E320 D0C0 0024          000000C0  23422          STG   2,192(0,13)
0000FBC2 41F0 D0A8               000000A8  23423          LA    15,168(0,13)
0000FBC6 E3F0 D0C8 0024          000000C8  23424          STG   15,200(0,13)
0000FBCC 4110 D0C0               000000C0  23425          LA    1,192(0,13)
0000FBD0 E3F0 C070 0004          0000FB48  23426          LG    15,@lit_2029_1292 ; rd_kafka_txn_require_states0
0000FBD6                                   23427 @@gen_label1769 DS    0H
0000FBD6 05EF                              23428          BALR  14,15
0000FBD8                                   23429 @@gen_label1770 DS    0H
0000FBD8 B904 003F                         23430          LGR   3,15
0000FBDC B902 00F3                         23431          LTGR  15,3
0000FBE0 4770 C132               0000FC0A  23432          BNZ   @_done@2029@14
                                           23433 * ***   # 2617 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           23434 * ***                   goto done;
0000FBE4                                   23435 @L1607   DS    0H
                                           23436 * ***
                                           23437 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_ABORT_N\
                                           23438 * OT_ACKED)
0000FBE4 E55C 2D38 0009          00000D38  23439          CHSI  3384(2),9
0000FBEA 4780 C132               0000FC0A  23440          BE    @_done@2029@14
                                           23441 * ***                   goto done;
0000FBEE                                   23442 @L1608   DS    0H
                                                                                                                           Page  466 
  Active Usings: @REGION_2029_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23443 * ***
                                           23444 * ***           rd_kafka_txn_set_state(
                                           23445 * ***                   rk, RD_KAFKA_TXN_STATE_ABORTING_TRANSACTION);
0000FBEE E320 D0C0 0024          000000C0  23446          STG   2,192(0,13)
0000FBF4 E548 D0C8 0008          000000C8  23447          MVGHI 200(13),8
0000FBFA 4110 D0C0               000000C0  23448          LA    1,192(0,13)
0000FBFE E3F0 C078 0004          0000FB50  23449          LG    15,@lit_2029_1293 ; rd_kafka_txn_set_state
0000FC04                                   23450 @@gen_label1773 DS    0H
0000FC04 05EF                              23451          BALR  14,15
0000FC06                                   23452 @@gen_label1774 DS    0H
                                           23453 * ***           clear_pending = 1;
0000FC06 9201 D0BC      000000BC 00000001  23454          MVI   188(13),1   ; clear_pending
                                           23455 * ***
                                           23456 * ***
                                           23457 * ***    done:
                                           23458 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0000FC0A                                   23459 @_done@2029@14 DS 0H
0000FC0A 41F0 29A0               000009A0  23460          LA    15,2464(0,2)
0000FC0E E3F0 D0C0 0024          000000C0  23461          STG   15,192(0,13)
0000FC14 4110 D0C0               000000C0  23462          LA    1,192(0,13)
0000FC18 E3F0 C080 0004          0000FB58  23463          LG    15,@lit_2029_1294 ; rwlock_wrunlock
0000FC1E                                   23464 @@gen_label1775 DS    0H
0000FC1E 05EF                              23465          BALR  14,15
0000FC20                                   23466 @@gen_label1776 DS    0H
                                           23467 * ***
                                           23468 * ***           if (clear_pending) {
0000FC20 9500 D0BC      000000BC 00000000  23469          CLI   188(13),0
0000FC24 4780 C18E               0000FC66  23470          BE    @L1609
                                           23471 * ***                   mtx_lock(&rk->rk_eos.txn_pending_lock);
0000FC28 41F0 2E50               00000E50  23472          LA    15,3664(0,2)
0000FC2C E3F0 D0C0 0024          000000C0  23473          STG   15,192(0,13)
0000FC32 4110 D0C0               000000C0  23474          LA    1,192(0,13)
0000FC36 E3F0 C088 0004          0000FB60  23475          LG    15,@lit_2029_1295 ; mtx_lock
0000FC3C                                   23476 @@gen_label1778 DS    0H
0000FC3C 05EF                              23477          BALR  14,15
0000FC3E                                   23478 @@gen_label1779 DS    0H
                                           23479 * ***                   rd_kafka_txn_clear_pending_partitions(rk);
0000FC3E E320 D0C0 0024          000000C0  23480          STG   2,192(0,13)
0000FC44 4110 D0C0               000000C0  23481          LA    1,192(0,13)
0000FC48 E3F0 C090 0004          0000FB68  23482          LG    15,@lit_2029_1296 ; rd_kafka_txn_clear_pending_partition*
                                                                s
0000FC4E                                   23483 @@gen_label1780 DS    0H
0000FC4E 05EF                              23484          BALR  14,15
0000FC50                                   23485 @@gen_label1781 DS    0H
                                           23486 * ***                   mtx_unlock(&rk->rk_eos.txn_pending_lock);
0000FC50 41F0 2E50               00000E50  23487          LA    15,3664(0,2)
0000FC54 E3F0 D0C0 0024          000000C0  23488          STG   15,192(0,13)
0000FC5A 4110 D0C0               000000C0  23489          LA    1,192(0,13)
0000FC5E E3F0 C098 0004          0000FB70  23490          LG    15,@lit_2029_1297 ; mtx_unlock
0000FC64                                   23491 @@gen_label1782 DS    0H
0000FC64 05EF                              23492          BALR  14,15
0000FC66                                   23493 @@gen_label1783 DS    0H
                                                                                                                           Page  467 
  Active Usings: @REGION_2029_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23494 * ***           }
0000FC66                                   23495 @L1609   DS    0H
                                           23496 * ***
                                           23497 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           23498 * >rko_replyq.q),
                                           23499 * ***                                             error);
0000FC66 E3F0 4040 0004          00000040  23500          LG    15,64(0,4)
0000FC6C E3F0 D0C0 0024          000000C0  23501          STG   15,192(0,13)
0000FC72 4110 D0C0               000000C0  23502          LA    1,192(0,13)
0000FC76 E3F0 C0A0 0004          0000FB78  23503          LG    15,@lit_2029_1298 ; rd_kafka_q_keep
0000FC7C                                   23504 @@gen_label1784 DS    0H
0000FC7C 05EF                              23505          BALR  14,15
0000FC7E                                   23506 @@gen_label1785 DS    0H
0000FC7E E3F0 D0C0 0024          000000C0  23507          STG   15,192(0,13)
0000FC84 E330 D0C8 0024          000000C8  23508          STG   3,200(0,13)
0000FC8A 4110 D0C0               000000C0  23509          LA    1,192(0,13)
0000FC8E E3F0 C0A8 0004          0000FB80  23510          LG    15,@lit_2029_1299 ; rd_kafka_txn_curr_api_reply_error
0000FC94                                   23511 @@gen_label1786 DS    0H
0000FC94 05EF                              23512          BALR  14,15
0000FC96                                   23513 @@gen_label1787 DS    0H
                                           23514 * ***
                                           23515 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000FC96 A7F9 0001               00000001  23516          LGHI  15,1        ; 1
                                           23517 * ***   }
0000FC9A                                   23518 @ret_lab_2029 DS 0H
                                           23519 * * **** Start of Epilogue
                                           23520          DCCEPIL
0000FC9A                                   23521+         ds 0h                                                          01-DCCEP
                                           23522+* Epilog
0000FC9A D707 D088 D088 00000088 00000088  23523+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000FCA0 E3D0 D080 0004          00000080  23524+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000FCA6 E3C0 D090 0004          00000090  23525+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000FCAC E3B0 C018 0004          00000018  23526+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000FCB2 E3C0 B010 0021          00000010  23527+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000FCB8 E3E0 D008 0004          00000008  23528+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000FCBE EB1C D020 0004          00000020  23529+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000FCC4 078E                              23530+         bcr 8,14                if same dsab, just return              01-DCCEP
0000FCC6 E3F0 D010 0024          00000010  23531+         stg 15,16(0,13)         save return code                       01-DCCEP
0000FCCC E300 D018 0024          00000018  23532+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000FCD2 E3F0 D090 0004          00000090  23533+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000FCD8 E3F0 F018 0004          00000018  23534+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000FCDE 47F0 F040               00000040  23535+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23536+* End of Epilog
                                           23537 * * **** End of Epilogue
                                           23538          DROP  12
                                           23539 *
                                           23540 *   DSECT for automatic variables in "rd_kafka_txn_op_begin_abort"
                                           23541 *      (FUNCTION #2029)
                                           23542 *
00000000                00000000 000000BD  23543 @AUTO#rd_kafka_txn_op_begin_abort DSECT
00000000                                   23544          DS    XL168
000000A8                                   23545 rd_kafka_txn_op_begin_abort#__cl8#0 DS 20XL1 ; __cl8
                                                                                                                           Page  468 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000BC                                   23546 rd_kafka_txn_op_begin_abort#clear_pending#0 DS 1CL1 ; clear_pending
                                           23547 *
0000FCE2                00000000 00014658  23548 @CODE    CSECT
                                           23549 *
                                           23550 *
                                           23551 *
                                           23552 * ....... start of rd_kafka_txn_op_abort_transaction
0000FCE2                                   23553 @LNAME2030 DS  0H
0000FCE2 00000021                          23554          DC    X'00000021'
0000FCE6 99846D9281869281                  23555          DC    C'rd_kafka_txn_op_abort_transactio'
0000FD06 95                                23556          DC    C'n'
0000FD07 00                                23557          DC    X'00'
                                           23558 rd_kafka_txn_op_abort_transaction DCCPRLG CINDEX=2030,BASER=12,FRAME=81*
                                                                6,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2030
                                           23559          macro
                                           23560          dccextrn &m
                                           23561          gblc    &$dccext(1000)
                                           23562          gbla    &$dccexti
                                           23563          lcla    &i
                                           23564 &$dccext(&$dccexti+1) setc    '&m'
                                           23565 &i       seta    1
                                           23566 .loop    aif    (&i gt &$dccexti).around
                                           23567          aif    ('&$dccext(&i)' eq '&m').getout
                                           23568 &i       seta    &i+1
                                           23569          ago     .loop
                                           23570 .around  anop
                                           23571 &$dccexti seta &$dccexti+1
                                           23572          extrn  &m
                                           23573 .getout  anop
                                           23574          mend
0000FD08                                   23575+$eye0297    ds    0d                                                    02-DCCCA
0000FD08 C4C3C3                            23576+         dc cl3'DCC'                                                    02-DCCCA
0000FD0B 01                                23577+         dc xl1'01' format one                                          02-DCCCA
0000FD0C 00000000                          23578+         dc a(0)                                                        02-DCCCA
0000FD10 000000000000FD7A                  23579+         dc ad(@PER_2030)                                               02-DCCCA
0000FD18 0000000000000330                  23580+         dc ad(816)                                                     02-DCCCA
0000FD20 0000000000000000                  23581+         dc ad(0)                                                       02-DCCCA
0000FD28 0000000000001000                  23582+         dc ad(4096)                                                    02-DCCCA
0000FD30 20                                23583+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000FD31 03                                23584+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000FD32 03                                23585+         dc al1(3)                                                      02-DCCCA
0000FD33 08                                23586+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000FD34 00                                23587+         dc bl.8'00000000'                                              02-DCCCA
0000FD35 000000                            23588+         dc al3(0)                                                      02-DCCCA
0000FD38 000000000000FCE2                  23589+         dc ad(@LNAME2030)                                              02-DCCCA
0000FD40                                   23590+         ds 0d                                                          02-DCCCA
0000FD40 000000000000FD08                  23591+         dc ad($eye0297)                                                02-DCCCA
0000FD48 0000000000000000                  23592+         dc ad(0)                                                       02-DCCCA
0000FD50                                   23593+         ds    0d                                                       01-DCCPR
0000FD50                                   23594+rd_kafka_txn_op_abort_transaction ds 0d                                 01-DCCPR
0000FD50                                   23595+@REGION_2030_1 ds 0h                                                    01-DCCPR
0000FD50 EBEC D008 0024          00000008  23596+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page  469 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000FD56 E3E0 D088 0004          00000088  23597+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000FD5C E3C0 D090 0004          00000090  23598+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000FD62 B904 002E                         23599+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000FD66 E3B0 C018 0004          00000018  23600+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000FD6C A7EB 0330               00000330  23601+         aghi  14,816              increase by frame size               01-DCCPR
0000FD70 E3E0 C020 0021          00000020  23602+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000FD76 4720 B020               00000020  23603+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000FD7A                                   23604+@PER_2030 ds   0h                                                       01-DCCPR
0000FD7A EBDE 2080 0024          00000080  23605+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000FD80 E3C0 2090 0024          00000090  23606+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000FD86 B904 00D2                         23607+         lgr   13,2                set real frame pointer               01-DCCPR
0000FD8A B904 00CF                         23608+         lgr   12,15               set base reg                         01-DCCPR
                        0000FD50           23609+         using @REGION_2030_1,12                                        01-DCCPR
                                           23610 * ******* End of Prologue
                                           23611 * *
0000FD8E E330 1000 0004          00000000  23612          LG    3,0(0,1)    ; rk
0000FD94 E340 1010 0004          00000010  23613          LG    4,16(0,1)   ; rko
                                           23614 * ***           rd_kafka_error_t *error;
                                           23615 * ***           rd_kafka_resp_err_t err;
                                           23616 * ***           char errstr[512];
                                           23617 * ***           rd_kafka_pid_t pid;
                                           23618 * ***
                                           23619 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
0000FD9A E55C 4020 FF3B          00000020  23620          CHSI  32(4),-197
0000FDA0 4770 C0F0               0000FE40  23621          BNE   @L1610
                                           23622 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000FDA4 A7F9 0001               00000001  23623          LGHI  15,1        ; 1
0000FDA8 47F0 C4FA               0001024A  23624          B     @ret_lab_2030
0000FDB0                                   23625          DS    0D
0000FDB0 00000330                          23626 @FRAMESIZE_2030 DC F'816'
0000FDB4 00000000
0000FDB8 0000000000000000                  23627 @lit_2030_1303 DC AD(rwlock_wrlock)
0000FDC0 0000000000004700                  23628 @lit_2030_1304 DC AD(rd_kafka_txn_require_states0)
0000FDC8 0000000000000000                  23629 @lit_2030_1307 DC AD(rd_kafka_log0)
0000FDD0 0000000000015A98                  23630 @lit_2030_1306 DC AD(@strings@+4096)
0000FDD8 0000000000004DE8                  23631 @lit_2030_1308 DC AD(rd_kafka_txn_set_state)
0000FDE0 0000000000004110                  23632 @lit_2030_1309 DC AD(rd_kafka_idemp_state2str)
0000FDE8 0000000000001FC8                  23633 @lit_2030_1313 DC AD(rd_kafka_q_destroy0)
0000FDF0 0000000000001D48                  23634 @lit_2030_1314 DC AD(rd_kafka_q_keep)
0000FDF8 0000000000000000                  23635 @lit_2030_1315 DC AD(rwlock_wrunlock)
0000FE00 0000000000014A98                  23636 @lit_2030_1319 DC AD(@strings@)
0000FE08 0000000000004340                  23637 @lit_2030_1322 DC AD(rd_kafka_idemp_get_pid0)
0000FE10 0000000000000000                  23638 @lit_2030_1325 DC AD(rd_kafka_error_new_retriable)
0000FE18 0000000000002D40                  23639 @lit_2030_1327 DC AD(rd_kafka_replyq_make)
0000FE20 0000000000014658                  23640 @lit_2030_1326 DC AD(@DATA)
0000FE28 0000000000000000                  23641 @lit_2030_1330 DC AD(rd_kafka_$End$Txn$Request)
0000FE30 000000000000DCF8                  23642 @lit_2030_1329 DC AD(rd_kafka_txn_handle_$End$Txn)
0000FE38 00000000000058A0                  23643 @lit_2030_1337 DC AD(rd_kafka_txn_curr_api_reply_error)
0000FE40                                   23644 @L1610   DS    0H
                                           23645 * ***
                                           23646 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000FE40 41F0 39A0               000009A0  23647          LA    15,2464(0,3)
                                                                                                                           Page  470 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000FE44 E3F0 D2D8 0024          000002D8  23648          STG   15,728(0,13)
0000FE4A 4110 D2D8               000002D8  23649          LA    1,728(0,13)
0000FE4E E3F0 C068 0004          0000FDB8  23650          LG    15,@lit_2030_1303 ; rwlock_wrlock
0000FE54                                   23651 @@gen_label1789 DS    0H
0000FE54 05EF                              23652          BALR  14,15
0000FE56                                   23653 @@gen_label1790 DS    0H
                                           23654 * ***
                                           23655 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           23656 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_ABORTING_TRANSACTION, RD_KAFKA_\
                                           23657 * TXN_STATE_ABORT_NOT_ACKED, -1 })))
0000FE56 E54C D0A8 0008          000000A8  23658          MVHI  168(13),8
0000FE5C E54C D0AC 0009          000000AC  23659          MVHI  172(13),9
0000FE62 E54C D0B0 FFFF          000000B0  23660          MVHI  176(13),-1
0000FE68 E330 D2D8 0024          000002D8  23661          STG   3,728(0,13)
0000FE6E 41F0 D0A8               000000A8  23662          LA    15,168(0,13)
0000FE72 E3F0 D2E0 0024          000002E0  23663          STG   15,736(0,13)
0000FE78 4110 D2D8               000002D8  23664          LA    1,728(0,13)
0000FE7C E3F0 C070 0004          0000FDC0  23665          LG    15,@lit_2030_1304 ; rd_kafka_txn_require_states0
0000FE82                                   23666 @@gen_label1791 DS    0H
0000FE82 05EF                              23667          BALR  14,15
0000FE84                                   23668 @@gen_label1792 DS    0H
0000FE84 B902 002F                         23669          LTGR  2,15        ; error
0000FE88 4770 C4B0               00010200  23670          BNZ   @_done@2030@15
                                           23671 * ***
                                           23672 * ***
                                           23673 * ***
                                           23674 * ***                   goto done;
0000FE8C                                   23675 @L1611   DS    0H
                                           23676 * ***
                                           23677 * ***           if (rk->rk_eos.txn_state == RD_KAFKA_TXN_STATE_ABORT_N\
                                           23678 * OT_ACKED) {
0000FE8C E55C 3D38 0009          00000D38  23679          CHSI  3384(3),9
0000FE92 4770 C14A               0000FE9A  23680          BNE   @L1612
                                           23681 * ***
                                           23682 * ***
                                           23683 * ***
                                           23684 * ***
                                           23685 * ***                   goto done;
0000FE96 47F0 C4B0               00010200  23686          B     @_done@2030@15
                                           23687 * ***           }
0000FE9A                                   23688 @L1612   DS    0H
                                           23689 * ***
                                           23690 * ***           if (rk->rk_eos.txn_requires_epoch_bump ||
0000FE9A 9500 3D80      00000D80 00000000  23691          CLI   3456(3),0
0000FE9E 4770 C15C               0000FEAC  23692          BNE   @L1614
                                           23693 * ***               rk->rk_eos.idemp_state != RD_KAFKA_IDEMP_STATE_ASS\
                                           23694 * IGNED) {
0000FEA2 E55C 3C70 0006          00000C70  23695          CHSI  3184(3),6
0000FEA8 4780 C2B0               00010000  23696          BE    @L1613
0000FEAC                                   23697 @L1614   DS    0H
                                           23698 * ***
                                           23699 * ***
                                                                                                                           Page  471 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23700 * ***   # 2693 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           23701 * ***                   if (rk->rk_eos.idemp_state == RD_KAFKA_IDEMP_S\
                                           23702 * TATE_ASSIGNED) {
0000FEAC E55C 3C70 0006          00000C70  23703          CHSI  3184(3),6
0000FEB2 4770 C1D8               0000FF28  23704          BNE   @L1620
                                           23705 * ***                           do { if ((((rk)->rk_conf.debug & (0x80\
                                           23706 * 00)))) rd_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNAB\
                                           23707 * ORT","PID already bumped"); } while (0);
0000FEB6                                   23708 @L1616   DS    0H
0000FEB6 9180 3322      00000322 00000080  23709          TM    802(3),128
0000FEBA 4780 C1BC               0000FF0C  23710          BZ    @L1619
0000FEBE 41F0 3210               00000210  23711          LA    15,528(0,3)
0000FEC2 E3F0 D2D8 0024          000002D8  23712          STG   15,728(0,13)
0000FEC8 E330 D2E0 0024          000002E0  23713          STG   3,736(0,13)
0000FECE D707 D2E8 D2E8 000002E8 000002E8  23714          XC    744(8,13),744(13)
0000FED4 E548 D2F0 0007          000002F0  23715          MVGHI 752(13),7
0000FEDA C0FF 0000 8000                    23716          LLILF 15,X'00008000' ; 32768
0000FEE0 E3F0 D2F8 0024          000002F8  23717          STG   15,760(0,13)
0000FEE6 E3F0 C080 0004          0000FDD0  23718          LG    15,@lit_2030_1306
0000FEEC 4110 F0CA               000000CA  23719          LA    1,202(0,15)
0000FEF0 E310 D300 0024          00000300  23720          STG   1,768(0,13)
0000FEF6 41F0 F0D4               000000D4  23721          LA    15,212(0,15)
0000FEFA E3F0 D308 0024          00000308  23722          STG   15,776(0,13)
0000FF00 4110 D2D8               000002D8  23723          LA    1,728(0,13)
0000FF04 E3F0 C078 0004          0000FDC8  23724          LG    15,@lit_2030_1307 ; rd_kafka_log0
0000FF0A                                   23725 @@gen_label1799 DS    0H
0000FF0A 05EF                              23726          BALR  14,15
0000FF0C                                   23727 @@gen_label1800 DS    0H
0000FF0C                                   23728 @L1619   DS    0H
                                           23729 * ***
                                           23730 * ***                           rd_kafka_txn_set_state(
                                           23731 * ***                                   rk, RD_KAFKA_TXN_STATE_ABORT_N\
                                           23732 * OT_ACKED);
0000FF0C E330 D2D8 0024          000002D8  23733          STG   3,728(0,13)
0000FF12 E548 D2E0 0009          000002E0  23734          MVGHI 736(13),9
0000FF18 4110 D2D8               000002D8  23735          LA    1,728(0,13)
0000FF1C E3F0 C088 0004          0000FDD8  23736          LG    15,@lit_2030_1308 ; rd_kafka_txn_set_state
0000FF22                                   23737 @@gen_label1801 DS    0H
0000FF22 05EF                              23738          BALR  14,15
0000FF24                                   23739 @@gen_label1802 DS    0H
                                           23740 * ***                           goto done;
0000FF24 47F0 C4B0               00010200  23741          B     @_done@2030@15
                                           23742 * ***                   }
                                           23743 * ***
                                           23744 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           23745 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNABORT","Wa\
                                           23746 * iting for transaction coordinator " "PID bump to complete before abo\
                                           23747 * rting " "transaction (idempotent producer state %s)", rd_kafka_idemp\
                                           23748 * _state2str(rk->rk_eos.idemp_state)); } while (0);
0000FF28                                   23749 @L1620   DS    0H
0000FF28 9180 3322      00000322 00000080  23750          TM    802(3),128
0000FF2C 4780 C24C               0000FF9C  23751          BZ    @L1623
                                                                                                                           Page  472 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000FF30 E3F0 3C70 0014          00000C70  23752          LGF   15,3184(0,3)
0000FF36 E3F0 D2D8 0024          000002D8  23753          STG   15,728(0,13)
0000FF3C 4110 D2D8               000002D8  23754          LA    1,728(0,13)
0000FF40 E3F0 C090 0004          0000FDE0  23755          LG    15,@lit_2030_1309 ; rd_kafka_idemp_state2str
0000FF46                                   23756 @@gen_label1804 DS    0H
0000FF46 05EF                              23757          BALR  14,15
0000FF48                                   23758 @@gen_label1805 DS    0H
0000FF48 4110 3210               00000210  23759          LA    1,528(0,3)
0000FF4C E310 D2D8 0024          000002D8  23760          STG   1,728(0,13)
0000FF52 E330 D2E0 0024          000002E0  23761          STG   3,736(0,13)
0000FF58 D707 D2E8 D2E8 000002E8 000002E8  23762          XC    744(8,13),744(13)
0000FF5E E548 D2F0 0007          000002F0  23763          MVGHI 752(13),7
0000FF64 C01F 0000 8000                    23764          LLILF 1,X'00008000' ; 32768
0000FF6A E310 D2F8 0024          000002F8  23765          STG   1,760(0,13)
0000FF70 E310 C080 0004          0000FDD0  23766          LG    1,@lit_2030_1306
0000FF76 4120 10CA               000000CA  23767          LA    2,202(0,1)
0000FF7A E320 D300 0024          00000300  23768          STG   2,768(0,13)
0000FF80 4110 10E8               000000E8  23769          LA    1,232(0,1)
0000FF84 E310 D308 0024          00000308  23770          STG   1,776(0,13)
0000FF8A E3F0 D310 0024          00000310  23771          STG   15,784(0,13)
0000FF90 4110 D2D8               000002D8  23772          LA    1,728(0,13)
0000FF94 E3F0 C078 0004          0000FDC8  23773          LG    15,@lit_2030_1307 ; rd_kafka_log0
0000FF9A                                   23774 @@gen_label1806 DS    0H
0000FF9A 05EF                              23775          BALR  14,15
0000FF9C                                   23776 @@gen_label1807 DS    0H
0000FF9C                                   23777 @L1623   DS    0H
                                           23778 * ***
                                           23779 * ***
                                           23780 * ***
                                           23781 * ***
                                           23782 * ***
                                           23783 * ***
                                           23784 * ***
                                           23785 * ***                   do { if ((rk->rk_eos.txn_init_rkq)) rd_kafka_q\
                                           23786 * _destroy0(rk->rk_eos.txn_init_rkq, 0 ); } while (0);
0000FF9C                                   23787 @L1624   DS    0H
0000FF9C E3F0 3E08 0002          00000E08  23788          LTG   15,3592(0,3) ; offset of txn_init_rkq in 0000146
0000FFA2 4780 C274               0000FFC4  23789          BZ    @L1627
0000FFA6 E3F0 3E08 0004          00000E08  23790          LG    15,3592(0,3)
0000FFAC E3F0 D2D8 0024          000002D8  23791          STG   15,728(0,13)
0000FFB2 D707 D2E0 D2E0 000002E0 000002E0  23792          XC    736(8,13),736(13)
0000FFB8 4110 D2D8               000002D8  23793          LA    1,728(0,13)
0000FFBC E3F0 C098 0004          0000FDE8  23794          LG    15,@lit_2030_1313 ; rd_kafka_q_destroy0
0000FFC2                                   23795 @@gen_label1809 DS    0H
0000FFC2 05EF                              23796          BALR  14,15
0000FFC4                                   23797 @@gen_label1810 DS    0H
0000FFC4                                   23798 @L1627   DS    0H
                                           23799 * ***
                                           23800 * ***
                                           23801 * ***
                                           23802 * ***
                                           23803 * ***
                                                                                                                           Page  473 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           23804 * ***                   rk->rk_eos.txn_init_rkq = rd_kafka_q_keep(rko-\
                                           23805 * >rko_replyq.q);
0000FFC4 E3F0 4040 0004          00000040  23806          LG    15,64(0,4)
0000FFCA E3F0 D2D8 0024          000002D8  23807          STG   15,728(0,13)
0000FFD0 4110 D2D8               000002D8  23808          LA    1,728(0,13)
0000FFD4 E3F0 C0A0 0004          0000FDF0  23809          LG    15,@lit_2030_1314 ; rd_kafka_q_keep
0000FFDA                                   23810 @@gen_label1811 DS    0H
0000FFDA 05EF                              23811          BALR  14,15
0000FFDC                                   23812 @@gen_label1812 DS    0H
0000FFDC E3F0 3E08 0024          00000E08  23813          STG   15,3592(0,3)
                                           23814 * ***
                                           23815 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
0000FFE2 41F0 39A0               000009A0  23816          LA    15,2464(0,3)
0000FFE6 E3F0 D2D8 0024          000002D8  23817          STG   15,728(0,13)
0000FFEC 4110 D2D8               000002D8  23818          LA    1,728(0,13)
0000FFF0 E3F0 C0A8 0004          0000FDF8  23819          LG    15,@lit_2030_1315 ; rwlock_wrunlock
0000FFF6                                   23820 @@gen_label1813 DS    0H
0000FFF6 05EF                              23821          BALR  14,15
0000FFF8                                   23822 @@gen_label1814 DS    0H
                                           23823 * ***                   return RD_KAFKA_OP_RES_HANDLED;
0000FFF8 A7F9 0001               00000001  23824          LGHI  15,1        ; 1
0000FFFC 47F0 C4FA               0001024A  23825          B     @ret_lab_2030
                                           23826 * ***           }
00010000                                   23827 @L1613   DS    0H
                                           23828 * ***
                                           23829 * ***           if (!rk->rk_eos.txn_req_cnt) {
00010000 E3F0 3E10 0012          00000E10  23830          LT    15,3600(0,3) ; offset of txn_req_cnt in 0000146
00010006 4770 C332               00010082  23831          BNZ   @L1628
                                           23832 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           23833 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNABORT","No\
                                           23834 *  partitions registered: not sending EndTxn"); } while (0);
0001000A                                   23835 @L1629   DS    0H
0001000A 9180 3322      00000322 00000080  23836          TM    802(3),128
0001000E 4780 C316               00010066  23837          BZ    @L1632
00010012 41F0 3210               00000210  23838          LA    15,528(0,3)
00010016 E3F0 D2D8 0024          000002D8  23839          STG   15,728(0,13)
0001001C E330 D2E0 0024          000002E0  23840          STG   3,736(0,13)
00010022 D707 D2E8 D2E8 000002E8 000002E8  23841          XC    744(8,13),744(13)
00010028 E548 D2F0 0007          000002F0  23842          MVGHI 752(13),7
0001002E C0FF 0000 8000                    23843          LLILF 15,X'00008000' ; 32768
00010034 E3F0 D2F8 0024          000002F8  23844          STG   15,760(0,13)
0001003A E3F0 C080 0004          0000FDD0  23845          LG    15,@lit_2030_1306
00010040 41F0 F0CA               000000CA  23846          LA    15,202(0,15)
00010044 E3F0 D300 0024          00000300  23847          STG   15,768(0,13)
0001004A E3F0 C0B0 0004          0000FE00  23848          LG    15,@lit_2030_1319
00010050 41F0 FE9C               00000E9C  23849          LA    15,3740(0,15)
00010054 E3F0 D308 0024          00000308  23850          STG   15,776(0,13)
0001005A 4110 D2D8               000002D8  23851          LA    1,728(0,13)
0001005E E3F0 C078 0004          0000FDC8  23852          LG    15,@lit_2030_1307 ; rd_kafka_log0
00010064                                   23853 @@gen_label1817 DS    0H
00010064 05EF                              23854          BALR  14,15
00010066                                   23855 @@gen_label1818 DS    0H
                                                                                                                           Page  474 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010066                                   23856 @L1632   DS    0H
                                           23857 * ***
                                           23858 * ***                   rd_kafka_txn_set_state(rk, RD_KAFKA_TXN_STATE_\
                                           23859 * ABORT_NOT_ACKED);
00010066 E330 D2D8 0024          000002D8  23860          STG   3,728(0,13)
0001006C E548 D2E0 0009          000002E0  23861          MVGHI 736(13),9
00010072 4110 D2D8               000002D8  23862          LA    1,728(0,13)
00010076 E3F0 C088 0004          0000FDD8  23863          LG    15,@lit_2030_1308 ; rd_kafka_txn_set_state
0001007C                                   23864 @@gen_label1819 DS    0H
0001007C 05EF                              23865          BALR  14,15
0001007E                                   23866 @@gen_label1820 DS    0H
                                           23867 * ***                   goto done;
0001007E 47F0 C4B0               00010200  23868          B     @_done@2030@15
                                           23869 * ***           }
00010082                                   23870 @L1628   DS    0H
                                           23871 * ***
                                           23872 * ***           pid = rd_kafka_idemp_get_pid0(rk, 0);
00010082 41F0 D2C8               000002C8  23873          LA    15,712(0,13)
00010086 E3F0 D2D8 0024          000002D8  23874          STG   15,728(0,13)
0001008C E330 D2E0 0024          000002E0  23875          STG   3,736(0,13)
00010092 D707 D2E8 D2E8 000002E8 000002E8  23876          XC    744(8,13),744(13)
00010098 4110 D2D8               000002D8  23877          LA    1,728(0,13)
0001009C E3F0 C0B8 0004          0000FE08  23878          LG    15,@lit_2030_1322 ; rd_kafka_idemp_get_pid0
000100A2                                   23879 @@gen_label1821 DS    0H
000100A2 05EF                              23880          BALR  14,15
000100A4                                   23881 @@gen_label1822 DS    0H
000100A4 D20F D0B8 D2C8 000000B8 000002C8  23882          MVC   184(16,13),712(13)
                                           23883 * ***           if (!((pid).id != -1)) {
000100AA E558 D0B8 FFFF          000000B8  23884          CGHSI 184(13),-1
000100B0 4770 C3AC               000100FC  23885          BNE   @L1633
                                           23886 * ***                   do {} while (0);
000100B4                                   23887 @L1634   DS    0H
                                           23888 * ***                   error = rd_kafka_error_new_retriable(
                                           23889 * ***                           RD_KAFKA_RESP_ERR__STATE,
                                           23890 * ***                           "No PID available (idempotence state %\
                                           23891 * s)",
                                           23892 * ***                           rd_kafka_idemp_state2str(rk->rk_eos.id\
                                           23893 * emp_state));
000100B4 E3F0 3C70 0014          00000C70  23894          LGF   15,3184(0,3)
000100BA E3F0 D2D8 0024          000002D8  23895          STG   15,728(0,13)
000100C0 4110 D2D8               000002D8  23896          LA    1,728(0,13)
000100C4 E3F0 C090 0004          0000FDE0  23897          LG    15,@lit_2030_1309 ; rd_kafka_idemp_state2str
000100CA                                   23898 @@gen_label1824 DS    0H
000100CA 05EF                              23899          BALR  14,15
000100CC                                   23900 @@gen_label1825 DS    0H
000100CC E548 D2D8 FF54          000002D8  23901          MVGHI 728(13),-172
000100D2 E310 C0B0 0004          0000FE00  23902          LG    1,@lit_2030_1319
000100D8 4110 1C1A               00000C1A  23903          LA    1,3098(0,1)
000100DC E310 D2E0 0024          000002E0  23904          STG   1,736(0,13)
000100E2 E3F0 D2E8 0024          000002E8  23905          STG   15,744(0,13)
000100E8 4110 D2D8               000002D8  23906          LA    1,728(0,13)
000100EC E3F0 C0C0 0004          0000FE10  23907          LG    15,@lit_2030_1325 ; rd_kafka_error_new_retriable
                                                                                                                           Page  475 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000100F2                                   23908 @@gen_label1826 DS    0H
000100F2 05EF                              23909          BALR  14,15
000100F4                                   23910 @@gen_label1827 DS    0H
000100F4 B904 002F                         23911          LGR   2,15        ; error
                                           23912 * ***                   goto done;
000100F8 47F0 C4B0               00010200  23913          B     @_done@2030@15
                                           23914 * ***           }
000100FC                                   23915 @L1633   DS    0H
                                           23916 * ***
                                           23917 * ***           err = rd_kafka_EndTxnRequest(rk->rk_eos.txn_coord,
                                           23918 * ***                                        rk->rk_conf.eos.transacti\
                                           23919 * onal_id,
                                           23920 * ***                                        pid,
                                           23921 * ***                                        0 ,
                                           23922 * ***                                        errstr, sizeof(errstr),
                                           23923 * ***                                        rd_kafka_replyq_make(rk->\
                                           23924 * rk_ops,0,__FUNCTION__),
                                           23925 * ***                                        rd_kafka_txn_handle_EndTx\
                                           23926 * n,
                                           23927 * ***                                        rd_kafka_q_keep(rko->rko_\
                                           23928 * replyq.q));
000100FC 41F0 D2C8               000002C8  23929          LA    15,712(0,13)
00010100 E3F0 D2D8 0024          000002D8  23930          STG   15,728(0,13)
00010106 E3F0 3008 0004          00000008  23931          LG    15,8(0,3)
0001010C E3F0 D2E0 0024          000002E0  23932          STG   15,736(0,13)
00010112 D707 D2E8 D2E8 000002E8 000002E8  23933          XC    744(8,13),744(13)
00010118 E3F0 C0D0 0004          0000FE20  23934          LG    15,@lit_2030_1326
0001011E 41F0 F3A0               000003A0  23935          LA    15,928(0,15)
00010122 E3F0 D2F0 0024          000002F0  23936          STG   15,752(0,13)
00010128 4110 D2D8               000002D8  23937          LA    1,728(0,13)
0001012C E3F0 C0C8 0004          0000FE18  23938          LG    15,@lit_2030_1327 ; rd_kafka_replyq_make
00010132                                   23939 @@gen_label1828 DS    0H
00010132 05EF                              23940          BALR  14,15
00010134                                   23941 @@gen_label1829 DS    0H
00010134 E3F0 4040 0004          00000040  23942          LG    15,64(0,4)
0001013A E3F0 D2D8 0024          000002D8  23943          STG   15,728(0,13)
00010140 4110 D2D8               000002D8  23944          LA    1,728(0,13)
00010144 E3F0 C0A0 0004          0000FDF0  23945          LG    15,@lit_2030_1314 ; rd_kafka_q_keep
0001014A                                   23946 @@gen_label1830 DS    0H
0001014A 05EF                              23947          BALR  14,15
0001014C                                   23948 @@gen_label1831 DS    0H
0001014C E310 3D48 0004          00000D48  23949          LG    1,3400(0,3)
00010152 E310 D2D8 0024          000002D8  23950          STG   1,728(0,13)
00010158 E310 37E8 0004          000007E8  23951          LG    1,2024(0,3)
0001015E E310 D2E0 0024          000002E0  23952          STG   1,736(0,13)
00010164 D20F D2E8 D0B8 000002E8 000000B8  23953          MVC   744(16,13),184(13)
0001016A D707 D2F8 D2F8 000002F8 000002F8  23954          XC    760(8,13),760(13)
00010170 4110 D0C8               000000C8  23955          LA    1,200(0,13)
00010174 E310 D300 0024          00000300  23956          STG   1,768(0,13)
0001017A E548 D308 0200          00000308  23957          MVGHI 776(13),512
00010180 D20F D310 D2C8 00000310 000002C8  23958          MVC   784(16,13),712(13)
00010186 E310 C0E0 0004          0000FE30  23959          LG    1,@lit_2030_1329 ; rd_kafka_txn_handle_EndTxn
                                                                                                                           Page  476 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001018C E310 D320 0024          00000320  23960          STG   1,800(0,13)
00010192 E3F0 D328 0024          00000328  23961          STG   15,808(0,13)
00010198 4110 D2D8               000002D8  23962          LA    1,728(0,13)
0001019C E3F0 C0D8 0004          0000FE28  23963          LG    15,@lit_2030_1330 ; rd_kafka_EndTxnRequest
000101A2                                   23964 @@gen_label1832 DS    0H
000101A2 05EF                              23965          BALR  14,15
000101A4                                   23966 @@gen_label1833 DS    0H
                                           23967 * ***           if (err) {
000101A4 12FF                              23968          LTR   15,15
000101A6 4780 C492               000101E2  23969          BZ    @L1637
                                           23970 * ***                   error = rd_kafka_error_new_retriable(err, "%s"\
                                           23971 * , errstr);
000101AA B914 00FF                         23972          LGFR  15,15
000101AE E3F0 D2D8 0024          000002D8  23973          STG   15,728(0,13)
000101B4 E3F0 C0B0 0004          0000FE00  23974          LG    15,@lit_2030_1319
000101BA 41F0 F122               00000122  23975          LA    15,290(0,15)
000101BE E3F0 D2E0 0024          000002E0  23976          STG   15,736(0,13)
000101C4 41F0 D0C8               000000C8  23977          LA    15,200(0,13)
000101C8 E3F0 D2E8 0024          000002E8  23978          STG   15,744(0,13)
000101CE 4110 D2D8               000002D8  23979          LA    1,728(0,13)
000101D2 E3F0 C0C0 0004          0000FE10  23980          LG    15,@lit_2030_1325 ; rd_kafka_error_new_retriable
000101D8                                   23981 @@gen_label1835 DS    0H
000101D8 05EF                              23982          BALR  14,15
000101DA                                   23983 @@gen_label1836 DS    0H
000101DA B904 002F                         23984          LGR   2,15        ; error
                                           23985 * ***                   goto done;
000101DE 47F0 C4B0               00010200  23986          B     @_done@2030@15
                                           23987 * ***           }
000101E2                                   23988 @L1637   DS    0H
                                           23989 * ***
                                           23990 * ***           rwlock_wrunlock(&(rk)->rk_lock);
000101E2 41F0 39A0               000009A0  23991          LA    15,2464(0,3)
000101E6 E3F0 D2D8 0024          000002D8  23992          STG   15,728(0,13)
000101EC 4110 D2D8               000002D8  23993          LA    1,728(0,13)
000101F0 E3F0 C0A8 0004          0000FDF8  23994          LG    15,@lit_2030_1315 ; rwlock_wrunlock
000101F6                                   23995 @@gen_label1837 DS    0H
000101F6 05EF                              23996          BALR  14,15
000101F8                                   23997 @@gen_label1838 DS    0H
                                           23998 * ***
                                           23999 * ***           return RD_KAFKA_OP_RES_HANDLED;
000101F8 A7F9 0001               00000001  24000          LGHI  15,1        ; 1
000101FC 47F0 C4FA               0001024A  24001          B     @ret_lab_2030
                                           24002 * ***
                                           24003 * ***    done:
                                           24004 * ***           rwlock_wrunlock(&(rk)->rk_lock);
00010200                                   24005 @_done@2030@15 DS 0H
00010200 41F0 39A0               000009A0  24006          LA    15,2464(0,3)
00010204 E3F0 D2D8 0024          000002D8  24007          STG   15,728(0,13)
0001020A 4110 D2D8               000002D8  24008          LA    1,728(0,13)
0001020E E3F0 C0A8 0004          0000FDF8  24009          LG    15,@lit_2030_1315 ; rwlock_wrunlock
00010214                                   24010 @@gen_label1839 DS    0H
00010214 05EF                              24011          BALR  14,15
                                                                                                                           Page  477 
  Active Usings: @REGION_2030_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010216                                   24012 @@gen_label1840 DS    0H
                                           24013 * ***
                                           24014 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           24015 * >rko_replyq.q),
                                           24016 * ***                                             error);
00010216 E3F0 4040 0004          00000040  24017          LG    15,64(0,4)
0001021C E3F0 D2D8 0024          000002D8  24018          STG   15,728(0,13)
00010222 4110 D2D8               000002D8  24019          LA    1,728(0,13)
00010226 E3F0 C0A0 0004          0000FDF0  24020          LG    15,@lit_2030_1314 ; rd_kafka_q_keep
0001022C                                   24021 @@gen_label1841 DS    0H
0001022C 05EF                              24022          BALR  14,15
0001022E                                   24023 @@gen_label1842 DS    0H
0001022E E3F0 D2D8 0024          000002D8  24024          STG   15,728(0,13)
00010234 E320 D2E0 0024          000002E0  24025          STG   2,736(0,13)
0001023A 4110 D2D8               000002D8  24026          LA    1,728(0,13)
0001023E E3F0 C0E8 0004          0000FE38  24027          LG    15,@lit_2030_1337 ; rd_kafka_txn_curr_api_reply_error
00010244                                   24028 @@gen_label1843 DS    0H
00010244 05EF                              24029          BALR  14,15
00010246                                   24030 @@gen_label1844 DS    0H
                                           24031 * ***
                                           24032 * ***
                                           24033 * ***
                                           24034 * ***           return RD_KAFKA_OP_RES_HANDLED;
00010246 A7F9 0001               00000001  24035          LGHI  15,1        ; 1
                                           24036 * ***   }
0001024A                                   24037 @ret_lab_2030 DS 0H
                                           24038 * * **** Start of Epilogue
                                           24039          DCCEPIL
0001024A                                   24040+         ds 0h                                                          01-DCCEP
                                           24041+* Epilog
0001024A D707 D088 D088 00000088 00000088  24042+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010250 E3D0 D080 0004          00000080  24043+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00010256 E3C0 D090 0004          00000090  24044+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0001025C E3B0 C018 0004          00000018  24045+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010262 E3C0 B010 0021          00000010  24046+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010268 E3E0 D008 0004          00000008  24047+         lg  14,8(0,13)          load up return address                 01-DCCEP
0001026E EB1C D020 0004          00000020  24048+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010274 078E                              24049+         bcr 8,14                if same dsab, just return              01-DCCEP
00010276 E3F0 D010 0024          00000010  24050+         stg 15,16(0,13)         save return code                       01-DCCEP
0001027C E300 D018 0024          00000018  24051+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010282 E3F0 D090 0004          00000090  24052+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010288 E3F0 F018 0004          00000018  24053+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0001028E 47F0 F040               00000040  24054+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           24055+* End of Epilog
                                           24056 * * **** End of Epilogue
                                           24057          DROP  12
                                           24058 *
                                           24059 *   DSECT for automatic variables in "rd_kafka_txn_op_abort_transactio
                                           24060 *           n"
                                           24061 *      (FUNCTION #2030)
                                           24062 *
00000000                00000000 000002BC  24063 @AUTO#rd_kafka_txn_op_abort_transaction DSECT
                                                                                                                           Page  478 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                   24064          DS    XL168
000000A8                                   24065 rd_kafka_txn_op_abort_transaction#__cl9#0 DS 12XL1 ; __cl9
000000B4                000000B4 000000A8  24066          ORG   @AUTO#rd_kafka_txn_op_abort_transaction+168
000000A8                                   24067 rd_kafka_txn_op_abort_transaction#err#0 DS 1F ; err
000000AC                                   24068 rd_kafka_txn_op_abort_transaction#pid#0 DS 16XL1 ; pid
000000BC                                   24069 rd_kafka_txn_op_abort_transaction#errstr#0 DS 512XL1 ; errstr
                                           24070 *
00010292                00000000 00014658  24071 @CODE    CSECT
                                           24072 *
                                           24073 *
                                           24074 *
                                           24075 * ....... start of rd_kafka_txn_op_abort_transaction_ack
00010292                                   24076 @LNAME2031 DS  0H
00010292 00000025                          24077          DC    X'00000025'
00010296 99846D9281869281                  24078          DC    C'rd_kafka_txn_op_abort_transactio'
000102B6 956D818392                        24079          DC    C'n_ack'
000102BB 00                                24080          DC    X'00'
                                           24081 rd_kafka_txn_op_abort_transaction_ack DCCPRLG CINDEX=2031,BASER=12,FRAM*
                                                                E=232,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2031
                                           24082          macro
                                           24083          dccextrn &m
                                           24084          gblc    &$dccext(1000)
                                           24085          gbla    &$dccexti
                                           24086          lcla    &i
                                           24087 &$dccext(&$dccexti+1) setc    '&m'
                                           24088 &i       seta    1
                                           24089 .loop    aif    (&i gt &$dccexti).around
                                           24090          aif    ('&$dccext(&i)' eq '&m').getout
                                           24091 &i       seta    &i+1
                                           24092          ago     .loop
                                           24093 .around  anop
                                           24094 &$dccexti seta &$dccexti+1
                                           24095          extrn  &m
                                           24096 .getout  anop
                                           24097          mend
000102C0                                   24098+$eye0300    ds    0d                                                    02-DCCCA
000102C0 C4C3C3                            24099+         dc cl3'DCC'                                                    02-DCCCA
000102C3 01                                24100+         dc xl1'01' format one                                          02-DCCCA
000102C4 00000000                          24101+         dc a(0)                                                        02-DCCCA
000102C8 0000000000010332                  24102+         dc ad(@PER_2031)                                               02-DCCCA
000102D0 00000000000000E8                  24103+         dc ad(232)                                                     02-DCCCA
000102D8 0000000000000000                  24104+         dc ad(0)                                                       02-DCCCA
000102E0 0000000000001000                  24105+         dc ad(4096)                                                    02-DCCCA
000102E8 20                                24106+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000102E9 03                                24107+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000102EA 03                                24108+         dc al1(3)                                                      02-DCCCA
000102EB 08                                24109+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000102EC 00                                24110+         dc bl.8'00000000'                                              02-DCCCA
000102ED 000000                            24111+         dc al3(0)                                                      02-DCCCA
000102F0 0000000000010292                  24112+         dc ad(@LNAME2031)                                              02-DCCCA
000102F8                                   24113+         ds 0d                                                          02-DCCCA
000102F8 00000000000102C0                  24114+         dc ad($eye0300)                                                02-DCCCA
                                                                                                                           Page  479 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010300 0000000000000000                  24115+         dc ad(0)                                                       02-DCCCA
00010308                                   24116+         ds    0d                                                       01-DCCPR
00010308                                   24117+rd_kafka_txn_op_abort_transaction_ack ds 0d                             01-DCCPR
00010308                                   24118+@REGION_2031_1 ds 0h                                                    01-DCCPR
00010308 EBEC D008 0024          00000008  24119+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0001030E E3E0 D088 0004          00000088  24120+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010314 E3C0 D090 0004          00000090  24121+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0001031A B904 002E                         24122+         lgr   2,14                copy addr of our savearea            01-DCCPR
0001031E E3B0 C018 0004          00000018  24123+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010324 A7EB 00E8               000000E8  24124+         aghi  14,232              increase by frame size               01-DCCPR
00010328 E3E0 C020 0021          00000020  24125+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0001032E 4720 B020               00000020  24126+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010332                                   24127+@PER_2031 ds   0h                                                       01-DCCPR
00010332 EBDE 2080 0024          00000080  24128+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010338 E3C0 2090 0024          00000090  24129+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0001033E B904 00D2                         24130+         lgr   13,2                set real frame pointer               01-DCCPR
00010342 B904 00CF                         24131+         lgr   12,15               set base reg                         01-DCCPR
                        00010308           24132+         using @REGION_2031_1,12                                        01-DCCPR
00010346 B904 0041                         24133          LGR   4,1         ; ptr to parm area
                                           24134 * ******* End of Prologue
                                           24135 * *
0001034A E320 4000 0004          00000000  24136          LG    2,0(0,4)    ; rk
                                           24137 * ***           rd_kafka_error_t *error;
                                           24138 * ***
                                           24139 * ***           if (rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
00010350 E3F0 4010 0004          00000010  24140          LG    15,16(0,4)  ; rko
00010356 E55C F020 FF3B          00000020  24141          CHSI  32(15),-197
0001035C 4770 C0A8               000103B0  24142          BNE   @L1638
                                           24143 * ***                   return RD_KAFKA_OP_RES_HANDLED;
00010360 A7F9 0001               00000001  24144          LGHI  15,1        ; 1
00010364 47F0 C1B4               000104BC  24145          B     @ret_lab_2031
00010368                                   24146          DS    0D
00010368 000000E8                          24147 @FRAMESIZE_2031 DC F'232'
0001036C 00000000
00010370 0000000000000000                  24148 @lit_2031_1341 DC AD(rwlock_wrlock)
00010378 0000000000004700                  24149 @lit_2031_1342 DC AD(rd_kafka_txn_require_states0)
00010380 0000000000000000                  24150 @lit_2031_1345 DC AD(rd_kafka_log0)
00010388 0000000000015A98                  24151 @lit_2031_1344 DC AD(@strings@+4096)
00010390 000000000000DB10                  24152 @lit_2031_1346 DC AD(rd_kafka_txn_complete)
00010398 0000000000000000                  24153 @lit_2031_1347 DC AD(rwlock_wrunlock)
000103A0 0000000000001D48                  24154 @lit_2031_1348 DC AD(rd_kafka_q_keep)
000103A8 00000000000058A0                  24155 @lit_2031_1349 DC AD(rd_kafka_txn_curr_api_reply_error)
000103B0                                   24156 @L1638   DS    0H
                                           24157 * ***
                                           24158 * ***           rwlock_wrlock(&(rk)->rk_lock);
000103B0 41F0 29A0               000009A0  24159          LA    15,2464(0,2)
000103B4 E3F0 D0B0 0024          000000B0  24160          STG   15,176(0,13)
000103BA 4110 D0B0               000000B0  24161          LA    1,176(0,13)
000103BE E3F0 C068 0004          00010370  24162          LG    15,@lit_2031_1341 ; rwlock_wrlock
000103C4                                   24163 @@gen_label1846 DS    0H
000103C4 05EF                              24164          BALR  14,15
000103C6                                   24165 @@gen_label1847 DS    0H
                                                                                                                           Page  480 
  Active Usings: @REGION_2031_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24166 * ***
                                           24167 * ***           if ((error = rd_kafka_txn_require_states0(rk, (rd_kafk\
                                           24168 * a_txn_state_t[]){ RD_KAFKA_TXN_STATE_ABORT_NOT_ACKED, -1 })))
000103C6 E54C D0A8 0009          000000A8  24169          MVHI  168(13),9
000103CC E54C D0AC FFFF          000000AC  24170          MVHI  172(13),-1
000103D2 E320 D0B0 0024          000000B0  24171          STG   2,176(0,13)
000103D8 41F0 D0A8               000000A8  24172          LA    15,168(0,13)
000103DC E3F0 D0B8 0024          000000B8  24173          STG   15,184(0,13)
000103E2 4110 D0B0               000000B0  24174          LA    1,176(0,13)
000103E6 E3F0 C070 0004          00010378  24175          LG    15,@lit_2031_1342 ; rd_kafka_txn_require_states0
000103EC                                   24176 @@gen_label1848 DS    0H
000103EC 05EF                              24177          BALR  14,15
000103EE                                   24178 @@gen_label1849 DS    0H
000103EE B904 003F                         24179          LGR   3,15
000103F2 B902 00F3                         24180          LTGR  15,3
000103F6 4780 C0F6               000103FE  24181          BZ    @L1640
                                           24182 * ***
                                           24183 * ***
                                           24184 * ***                   goto done;
000103FA 47F0 C164               0001046C  24185          B     @_done@2031@16
                                           24186 * ***
                                           24187 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           24188 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNABORT","Aborted tr\
                                           24189 * ansaction now acked by application"); } while (0);
000103FE                                   24190 @L1640   DS    0H
000103FE 9180 2322      00000322 00000080  24191          TM    802(2),128
00010402 4780 C14C               00010454  24192          BZ    @L1643
00010406 41F0 2210               00000210  24193          LA    15,528(0,2)
0001040A E3F0 D0B0 0024          000000B0  24194          STG   15,176(0,13)
00010410 E320 D0B8 0024          000000B8  24195          STG   2,184(0,13)
00010416 D707 D0C0 D0C0 000000C0 000000C0  24196          XC    192(8,13),192(13)
0001041C E548 D0C8 0007          000000C8  24197          MVGHI 200(13),7
00010422 C0FF 0000 8000                    24198          LLILF 15,X'00008000' ; 32768
00010428 E3F0 D0D0 0024          000000D0  24199          STG   15,208(0,13)
0001042E E3F0 C080 0004          00010388  24200          LG    15,@lit_2031_1344
00010434 4110 F0CA               000000CA  24201          LA    1,202(0,15)
00010438 E310 D0D8 0024          000000D8  24202          STG   1,216(0,13)
0001043E 41F0 F15C               0000015C  24203          LA    15,348(0,15)
00010442 E3F0 D0E0 0024          000000E0  24204          STG   15,224(0,13)
00010448 4110 D0B0               000000B0  24205          LA    1,176(0,13)
0001044C E3F0 C078 0004          00010380  24206          LG    15,@lit_2031_1345 ; rd_kafka_log0
00010452                                   24207 @@gen_label1852 DS    0H
00010452 05EF                              24208          BALR  14,15
00010454                                   24209 @@gen_label1853 DS    0H
00010454                                   24210 @L1643   DS    0H
                                           24211 * ***
                                           24212 * ***           rd_kafka_txn_complete(rk, 0);
00010454 E320 D0B0 0024          000000B0  24213          STG   2,176(0,13)
0001045A D707 D0B8 D0B8 000000B8 000000B8  24214          XC    184(8,13),184(13)
00010460 4110 D0B0               000000B0  24215          LA    1,176(0,13)
00010464 E3F0 C088 0004          00010390  24216          LG    15,@lit_2031_1346 ; rd_kafka_txn_complete
0001046A                                   24217 @@gen_label1854 DS    0H
                                                                                                                           Page  481 
  Active Usings: @REGION_2031_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001046A 05EF                              24218          BALR  14,15
0001046C                                   24219 @@gen_label1855 DS    0H
                                           24220 * ***
                                           24221 * ***
                                           24222 * ***    done:
                                           24223 * ***           rwlock_wrunlock(&(rk)->rk_lock);
0001046C                                   24224 @_done@2031@16 DS 0H
0001046C 41F0 29A0               000009A0  24225          LA    15,2464(0,2)
00010470 E3F0 D0B0 0024          000000B0  24226          STG   15,176(0,13)
00010476 4110 D0B0               000000B0  24227          LA    1,176(0,13)
0001047A E3F0 C090 0004          00010398  24228          LG    15,@lit_2031_1347 ; rwlock_wrunlock
00010480                                   24229 @@gen_label1856 DS    0H
00010480 05EF                              24230          BALR  14,15
00010482                                   24231 @@gen_label1857 DS    0H
                                           24232 * ***
                                           24233 * ***           rd_kafka_txn_curr_api_reply_error(rd_kafka_q_keep(rko-\
                                           24234 * >rko_replyq.q),
                                           24235 * ***                                             error);
00010482 E3F0 4010 0004          00000010  24236          LG    15,16(0,4)  ; rko
00010488 E3F0 F040 0004          00000040  24237          LG    15,64(0,15)
0001048E E3F0 D0B0 0024          000000B0  24238          STG   15,176(0,13)
00010494 4110 D0B0               000000B0  24239          LA    1,176(0,13)
00010498 E3F0 C098 0004          000103A0  24240          LG    15,@lit_2031_1348 ; rd_kafka_q_keep
0001049E                                   24241 @@gen_label1858 DS    0H
0001049E 05EF                              24242          BALR  14,15
000104A0                                   24243 @@gen_label1859 DS    0H
000104A0 E3F0 D0B0 0024          000000B0  24244          STG   15,176(0,13)
000104A6 E330 D0B8 0024          000000B8  24245          STG   3,184(0,13)
000104AC 4110 D0B0               000000B0  24246          LA    1,176(0,13)
000104B0 E3F0 C0A0 0004          000103A8  24247          LG    15,@lit_2031_1349 ; rd_kafka_txn_curr_api_reply_error
000104B6                                   24248 @@gen_label1860 DS    0H
000104B6 05EF                              24249          BALR  14,15
000104B8                                   24250 @@gen_label1861 DS    0H
                                           24251 * ***
                                           24252 * ***           return RD_KAFKA_OP_RES_HANDLED;
000104B8 A7F9 0001               00000001  24253          LGHI  15,1        ; 1
                                           24254 * ***   }
000104BC                                   24255 @ret_lab_2031 DS 0H
                                           24256 * * **** Start of Epilogue
                                           24257          DCCEPIL
000104BC                                   24258+         ds 0h                                                          01-DCCEP
                                           24259+* Epilog
000104BC D707 D088 D088 00000088 00000088  24260+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000104C2 E3D0 D080 0004          00000080  24261+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000104C8 E3C0 D090 0004          00000090  24262+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000104CE E3B0 C018 0004          00000018  24263+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000104D4 E3C0 B010 0021          00000010  24264+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000104DA E3E0 D008 0004          00000008  24265+         lg  14,8(0,13)          load up return address                 01-DCCEP
000104E0 EB1C D020 0004          00000020  24266+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000104E6 078E                              24267+         bcr 8,14                if same dsab, just return              01-DCCEP
000104E8 E3F0 D010 0024          00000010  24268+         stg 15,16(0,13)         save return code                       01-DCCEP
000104EE E300 D018 0024          00000018  24269+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  482 
  Active Usings: @REGION_2031_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000104F4 E3F0 D090 0004          00000090  24270+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000104FA E3F0 F018 0004          00000018  24271+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010500 47F0 F040               00000040  24272+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           24273+* End of Epilog
                                           24274 * * **** End of Epilogue
                                           24275          DROP  12
                                           24276 *
                                           24277 *   DSECT for automatic variables in "rd_kafka_txn_op_abort_transactio
                                           24278 *           n_ack"
                                           24279 *      (FUNCTION #2031)
                                           24280 *
00000000                00000000 000000B0  24281 @AUTO#rd_kafka_txn_op_abort_transaction_ack DSECT
00000000                                   24282          DS    XL168
000000A8                                   24283 rd_kafka_txn_op_abort_transaction_ack#__cl10#0 DS 8XL1 ; __cl10
                                           24284 *
00010504                00000000 00014658  24285 @CODE    CSECT
                                           24286 *
                                           24287 *
                                           24288 *
                                           24289 * ....... start of rd_kafka_abort_transaction
                                           24290 rd_kafka_abort_transaction ALIAS X'99846D92818692816D81829699A36DA39981*
                                                                95A28183A3899695'
00010504                                   24291 @LNAME1084 DS  0H
00010504 0000001A                          24292          DC    X'0000001A'
00010508 99846D9281869281                  24293          DC    C'rd_kafka_abort_transaction'
00010522 00                                24294          DC    X'00'
                                           24295 rd_kafka_abort_transaction DCCPRLG CINDEX=1084,BASER=12,FRAME=240,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1084
                                           24296          macro
                                           24297          dccextrn &m
                                           24298          gblc    &$dccext(1000)
                                           24299          gbla    &$dccexti
                                           24300          lcla    &i
                                           24301 &$dccext(&$dccexti+1) setc    '&m'
                                           24302 &i       seta    1
                                           24303 .loop    aif    (&i gt &$dccexti).around
                                           24304          aif    ('&$dccext(&i)' eq '&m').getout
                                           24305 &i       seta    &i+1
                                           24306          ago     .loop
                                           24307 .around  anop
                                           24308 &$dccexti seta &$dccexti+1
                                           24309          extrn  &m
                                           24310 .getout  anop
                                           24311          mend
00010528                                   24312+$eye0303    ds    0d                                                    02-DCCCA
00010528 C4C3C3                            24313+         dc cl3'DCC'                                                    02-DCCCA
0001052B 01                                24314+         dc xl1'01' format one                                          02-DCCCA
0001052C 00000000                          24315+         dc a(0)                                                        02-DCCCA
00010530 000000000001059A                  24316+         dc ad(@PER_1084)                                               02-DCCCA
00010538 00000000000000F0                  24317+         dc ad(240)                                                     02-DCCCA
00010540 0000000000000000                  24318+         dc ad(0)                                                       02-DCCCA
00010548 0000000000001000                  24319+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page  483 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010550 20                                24320+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010551 03                                24321+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010552 03                                24322+         dc al1(3)                                                      02-DCCCA
00010553 08                                24323+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010554 00                                24324+         dc bl.8'00000000'                                              02-DCCCA
00010555 000000                            24325+         dc al3(0)                                                      02-DCCCA
00010558 0000000000010504                  24326+         dc ad(@LNAME1084)                                              02-DCCCA
00010560                                   24327+         ds 0d                                                          02-DCCCA
00010560 0000000000010528                  24328+         dc ad($eye0303)                                                02-DCCCA
00010568 0000000000000000                  24329+         dc ad(0)                                                       02-DCCCA
00010570                                   24330+         ds    0d                                                       01-DCCPR
                                           24331+         entry rd_kafka_abort_transaction                               01-DCCPR
00010570                                   24332+rd_kafka_abort_transaction ds 0d                                        01-DCCPR
00010570                                   24333+@REGION_1084_1 ds 0h                                                    01-DCCPR
00010570 EBEC D008 0024          00000008  24334+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010576 E3E0 D088 0004          00000088  24335+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001057C E3C0 D090 0004          00000090  24336+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010582 B904 002E                         24337+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010586 E3B0 C018 0004          00000018  24338+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001058C A7EB 00F0               000000F0  24339+         aghi  14,240              increase by frame size               01-DCCPR
00010590 E3E0 C020 0021          00000020  24340+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010596 4720 B020               00000020  24341+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0001059A                                   24342+@PER_1084 ds   0h                                                       01-DCCPR
0001059A EBDE 2080 0024          00000080  24343+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000105A0 E3C0 2090 0024          00000090  24344+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000105A6 B904 00D2                         24345+         lgr   13,2                set real frame pointer               01-DCCPR
000105AA B904 00CF                         24346+         lgr   12,15               set base reg                         01-DCCPR
                        00010570           24347+         using @REGION_1084_1,12                                        01-DCCPR
                                           24348 * ******* End of Prologue
                                           24349 * *
000105AE E330 1000 0004          00000000  24350          LG    3,0(0,1)    ; rk
                                           24351 * ***           rd_kafka_error_t *error;
                                           24352 * ***           rd_kafka_resp_err_t err;
                                           24353 * ***           rd_ts_t abs_timeout = rd_timeout_init(timeout_ms);
000105B4 E3F0 100C 0014          0000000C  24354          LGF   15,12(0,1)  ; timeout_ms
000105BA E3F0 D0B0 0024          000000B0  24355          STG   15,176(0,13)
000105C0 4110 D0B0               000000B0  24356          LA    1,176(0,13)
000105C4 E3F0 C090 0004          00010600  24357          LG    15,@lit_1084_1352 ; rd_timeout_init
000105CA                                   24358 @@gen_label1862 DS    0H
000105CA 05EF                              24359          BALR  14,15
000105CC                                   24360 @@gen_label1863 DS    0H
000105CC B904 004F                         24361          LGR   4,15
                                           24362 * ***
                                           24363 * ***           if ((error = rd_kafka_ensure_transactional(rk)))
000105D0 E330 D0B0 0024          000000B0  24364          STG   3,176(0,13)
000105D6 4110 D0B0               000000B0  24365          LA    1,176(0,13)
000105DA E3F0 C098 0004          00010608  24366          LG    15,@lit_1084_1353 ; rd_kafka_ensure_transactional
000105E0                                   24367 @@gen_label1864 DS    0H
000105E0 05EF                              24368          BALR  14,15
000105E2                                   24369 @@gen_label1865 DS    0H
000105E2 B902 002F                         24370          LTGR  2,15        ; error
000105E6 4780 C118               00010688  24371          BZ    @L1644
                                                                                                                           Page  484 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24372 * ***                   return error;
000105EA B904 00F2                         24373          LGR   15,2
000105EE 47F0 C460               000109D0  24374          B     @ret_lab_1084
000105F8                                   24375          DS    0D
000105F8 000000F0                          24376 @FRAMESIZE_1084 DC F'240'
000105FC 00000000
00010600 0000000000001268                  24377 @lit_1084_1352 DC AD(rd_timeout_init)
00010608 0000000000004588                  24378 @lit_1084_1353 DC AD(rd_kafka_ensure_transactional)
00010610 0000000000000000                  24379 @lit_1084_1355 DC AD(rd_kafka_op_new_cb)
00010618 000000000000FAD8                  24380 @lit_1084_1354 DC AD(rd_kafka_txn_op_begin_abort)
00010620 000000000000A0A0                  24381 @lit_1084_1357 DC AD(rd_kafka_txn_curr_api_req)
00010628 0000000000015A98                  24382 @lit_1084_1356 DC AD(@strings@+4096)
00010630 0000000000000000                  24383 @lit_1084_1358 DC AD(rd_kafka_outq_len)
00010638 0000000000000000                  24384 @lit_1084_1361 DC AD(rd_kafka_log0)
00010640 0000000000000000                  24385 @lit_1084_1362 DC AD(rd_kafka_purge)
00010648 00000000000014C8                  24386 @lit_1084_1363 DC AD(rd_timeout_remains)
00010650 0000000000000000                  24387 @lit_1084_1364 DC AD(rd_kafka_flush)
00010658 0000000000014A98                  24388 @lit_1084_1367 DC AD(@strings@)
00010660 0000000000000000                  24389 @lit_1084_1369 DC AD(rd_kafka_error_new_retriable)
00010668 0000000000000000                  24390 @lit_1084_1370 DC AD(rd_kafka_err2str)
00010670 0000000000009F18                  24391 @lit_1084_1373 DC AD(rd_kafka_txn_curr_api_reset)
00010678 000000000000FD50                  24392 @lit_1084_1378 DC AD(rd_kafka_txn_op_abort_transaction)
00010680 0000000000010308                  24393 @lit_1084_1383 DC AD(rd_kafka_txn_op_abort_transaction_ack)
00010688                                   24394 @L1644   DS    0H
                                           24395 * ***
                                           24396 * ***
                                           24397 * ***
                                           24398 * ***   # 2825 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           24399 * ***           error = rd_kafka_txn_curr_api_req(
                                           24400 * ***                   rk, "abort_transaction (begin)",
                                           24401 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           24402 * ***                   -1,
                                           24403 * ***                   0x4|
                                           24404 * ***                                      rd_kafka_txn_op_begin_abort\
                                           24405 * ),
00010688 E330 D0B0 0024          000000B0  24406          STG   3,176(0,13)
0001068E E548 D0B8 002F          000000B8  24407          MVGHI 184(13),47
00010694 E3F0 C0A8 0004          00010618  24408          LG    15,@lit_1084_1354 ; rd_kafka_txn_op_begin_abort
0001069A E3F0 D0C0 0024          000000C0  24409          STG   15,192(0,13)
000106A0 4110 D0B0               000000B0  24410          LA    1,176(0,13)
000106A4 E3F0 C0A0 0004          00010610  24411          LG    15,@lit_1084_1355 ; rd_kafka_op_new_cb
000106AA                                   24412 @@gen_label1867 DS    0H
000106AA 05EF                              24413          BALR  14,15
000106AC                                   24414 @@gen_label1868 DS    0H
000106AC E330 D0B0 0024          000000B0  24415          STG   3,176(0,13)
000106B2 E310 C0B8 0004          00010628  24416          LG    1,@lit_1084_1356
000106B8 4110 118A               0000018A  24417          LA    1,394(0,1)
000106BC E310 D0B8 0024          000000B8  24418          STG   1,184(0,13)
000106C2 E3F0 D0C0 0024          000000C0  24419          STG   15,192(0,13)
000106C8 E548 D0C8 FFFF          000000C8  24420          MVGHI 200(13),-1
                                           24421 * ***                   0x2);
000106CE E548 D0D0 0006          000000D0  24422          MVGHI 208(13),6
                                                                                                                           Page  485 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000106D4 4110 D0B0               000000B0  24423          LA    1,176(0,13)
000106D8 E3F0 C0B0 0004          00010620  24424          LG    15,@lit_1084_1357 ; rd_kafka_txn_curr_api_req
000106DE                                   24425 @@gen_label1869 DS    0H
000106DE 05EF                              24426          BALR  14,15
000106E0                                   24427 @@gen_label1870 DS    0H
000106E0 B902 002F                         24428          LTGR  2,15        ; error
                                           24429 * ***           if (error)
000106E4 4780 C180               000106F0  24430          BZ    @L1646
                                           24431 * ***                   return error;
000106E8 B904 00F2                         24432          LGR   15,2
000106EC 47F0 C460               000109D0  24433          B     @ret_lab_1084
                                           24434 * ***
                                           24435 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           24436 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNABORT","Purging an\
                                           24437 * d flushing %d outstanding message(s) prior " "to abort", rd_kafka_ou\
                                           24438 * tq_len(rk)); } while (0);
000106F0                                   24439 @L1646   DS    0H
000106F0 9180 3322      00000322 00000080  24440          TM    802(3),128
000106F4 4780 C1F2               00010762  24441          BZ    @L1649
000106F8 E330 D0B0 0024          000000B0  24442          STG   3,176(0,13)
000106FE 4110 D0B0               000000B0  24443          LA    1,176(0,13)
00010702 E3F0 C0C0 0004          00010630  24444          LG    15,@lit_1084_1358 ; rd_kafka_outq_len
00010708                                   24445 @@gen_label1873 DS    0H
00010708 05EF                              24446          BALR  14,15
0001070A                                   24447 @@gen_label1874 DS    0H
0001070A 4110 3210               00000210  24448          LA    1,528(0,3)
0001070E E310 D0B0 0024          000000B0  24449          STG   1,176(0,13)
00010714 E330 D0B8 0024          000000B8  24450          STG   3,184(0,13)
0001071A D707 D0C0 D0C0 000000C0 000000C0  24451          XC    192(8,13),192(13)
00010720 E548 D0C8 0007          000000C8  24452          MVGHI 200(13),7
00010726 C01F 0000 8000                    24453          LLILF 1,X'00008000' ; 32768
0001072C E310 D0D0 0024          000000D0  24454          STG   1,208(0,13)
00010732 E310 C0B8 0004          00010628  24455          LG    1,@lit_1084_1356
00010738 4120 10CA               000000CA  24456          LA    2,202(0,1)
0001073C E320 D0D8 0024          000000D8  24457          STG   2,216(0,13)
00010742 4110 11A4               000001A4  24458          LA    1,420(0,1)
00010746 E310 D0E0 0024          000000E0  24459          STG   1,224(0,13)
0001074C B914 00FF                         24460          LGFR  15,15
00010750 E3F0 D0E8 0024          000000E8  24461          STG   15,232(0,13)
00010756 4110 D0B0               000000B0  24462          LA    1,176(0,13)
0001075A E3F0 C0C8 0004          00010638  24463          LG    15,@lit_1084_1361 ; rd_kafka_log0
00010760                                   24464 @@gen_label1875 DS    0H
00010760 05EF                              24465          BALR  14,15
00010762                                   24466 @@gen_label1876 DS    0H
00010762                                   24467 @L1649   DS    0H
                                           24468 * ***
                                           24469 * ***
                                           24470 * ***
                                           24471 * ***
                                           24472 * ***
                                           24473 * ***
                                           24474 * ***
                                                                                                                           Page  486 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24475 * ***           err = rd_kafka_purge(rk,
                                           24476 * ***                                0x1|
00010762 E330 D0B0 0024          000000B0  24477          STG   3,176(0,13)
                                           24478 * ***                                0x100);
00010768 E548 D0B8 0101          000000B8  24479          MVGHI 184(13),257
0001076E 4110 D0B0               000000B0  24480          LA    1,176(0,13)
00010772 E3F0 C0D0 0004          00010640  24481          LG    15,@lit_1084_1362 ; rd_kafka_purge
00010778                                   24482 @@gen_label1877 DS    0H
00010778 05EF                              24483          BALR  14,15
0001077A                                   24484 @@gen_label1878 DS    0H
                                           24485 * ***
                                           24486 * ***
                                           24487 * ***           if ((err = rd_kafka_flush(rk, rd_timeout_remains(abs_t\
                                           24488 * imeout)))) {
0001077A E340 D0B0 0024          000000B0  24489          STG   4,176(0,13)
00010780 4110 D0B0               000000B0  24490          LA    1,176(0,13)
00010784 E3F0 C0D8 0004          00010648  24491          LG    15,@lit_1084_1363 ; rd_timeout_remains
0001078A                                   24492 @@gen_label1879 DS    0H
0001078A 05EF                              24493          BALR  14,15
0001078C                                   24494 @@gen_label1880 DS    0H
0001078C E330 D0B0 0024          000000B0  24495          STG   3,176(0,13)
00010792 B914 00FF                         24496          LGFR  15,15
00010796 E3F0 D0B8 0024          000000B8  24497          STG   15,184(0,13)
0001079C 4110 D0B0               000000B0  24498          LA    1,176(0,13)
000107A0 E3F0 C0E0 0004          00010650  24499          LG    15,@lit_1084_1364 ; rd_kafka_flush
000107A6                                   24500 @@gen_label1881 DS    0H
000107A6 05EF                              24501          BALR  14,15
000107A8                                   24502 @@gen_label1882 DS    0H
000107A8 122F                              24503          LTR   2,15
000107AA 4780 C31C               0001088C  24504          BZ    @L1655
                                           24505 * ***
                                           24506 * ***                   if (err == RD_KAFKA_RESP_ERR__TIMED_OUT)
000107AE A72E FF47               0000FF47  24507          CHI   2,-185
000107B2 4770 C2B6               00010826  24508          BNE   @L1651
                                           24509 * ***                           error = rd_kafka_error_new_retriable(
                                           24510 * ***                                   err,
                                           24511 * ***                                   "Failed to flush all outstandi\
                                           24512 * ng messages "
                                           24513 * ***                                   rd_kafka_outq_len(rk),
                                           24514 * ***                                   (rk->rk_conf.enabled_events &
000107B6 E330 D0B0 0024          000000B0  24515          STG   3,176(0,13)
000107BC 4110 D0B0               000000B0  24516          LA    1,176(0,13)
000107C0 E3F0 C0C0 0004          00010630  24517          LG    15,@lit_1084_1358 ; rd_kafka_outq_len
000107C6                                   24518 @@gen_label1885 DS    0H
000107C6 05EF                              24519          BALR  14,15
000107C8                                   24520 @@gen_label1886 DS    0H
                                           24521 * ***                                    0x1) ?
000107C8 9101 32F3      000002F3 00000001  24522          TM    755(3),1
000107CC 4780 C26E               000107DE  24523          BZ    @L1652
                                           24524 * ***                                   ": the event queue must be pol\
                                           24525 * led "
                                           24526 * ***                                   "for delivery report events in\
                                                                                                                           Page  487 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24527 *  a separate "
                                           24528 * ***                                   "thread or prior to calling ab\
                                           24529 * ort" : "");
000107D0 E310 C0B8 0004          00010628  24530          LG    1,@lit_1084_1356
000107D6 4110 11E2               000001E2  24531          LA    1,482(0,1)
000107DA 47F0 C278               000107E8  24532          B     @L1653
000107DE                                   24533 @L1652   DS    0H
000107DE E310 C0E8 0004          00010658  24534          LG    1,@lit_1084_1367
000107E4 4110 13C4               000003C4  24535          LA    1,964(0,1)
000107E8                                   24536 @L1653   DS    0H
000107E8 B914 0022                         24537          LGFR  2,2
000107EC E320 D0B0 0024          000000B0  24538          STG   2,176(0,13)
                                           24539 * ***                                   "within the transaction timeou\
                                           24540 * t: "
                                           24541 * ***                                   "%d message(s) remaining%s",
000107F2 E320 C0E8 0004          00010658  24542          LG    2,@lit_1084_1367
000107F8 4120 2FE4               00000FE4  24543          LA    2,4068(0,2)
000107FC E320 D0B8 0024          000000B8  24544          STG   2,184(0,13)
00010802 B914 00FF                         24545          LGFR  15,15
00010806 E3F0 D0C0 0024          000000C0  24546          STG   15,192(0,13)
0001080C E310 D0C8 0024          000000C8  24547          STG   1,200(0,13)
00010812 4110 D0B0               000000B0  24548          LA    1,176(0,13)
00010816 E3F0 C0F0 0004          00010660  24549          LG    15,@lit_1084_1369 ; rd_kafka_error_new_retriable
0001081C                                   24550 @@gen_label1888 DS    0H
0001081C 05EF                              24551          BALR  14,15
0001081E                                   24552 @@gen_label1889 DS    0H
0001081E B904 002F                         24553          LGR   2,15        ; error
00010822 47F0 C2FC               0001086C  24554          B     @L1654
                                           24555 * ***
                                           24556 * ***                   else
00010826                                   24557 @L1651   DS    0H
                                           24558 * ***                           error = rd_kafka_error_new_retriable(
                                           24559 * ***                                   err,
                                           24560 * ***                                   "Failed to flush outstanding m\
                                           24561 * essages: %s",
                                           24562 * ***                                   rd_kafka_err2str(err));
00010826 B914 00F2                         24563          LGFR  15,2
0001082A E3F0 D0B0 0024          000000B0  24564          STG   15,176(0,13)
00010830 4110 D0B0               000000B0  24565          LA    1,176(0,13)
00010834 E3F0 C0F8 0004          00010668  24566          LG    15,@lit_1084_1370 ; rd_kafka_err2str
0001083A                                   24567 @@gen_label1890 DS    0H
0001083A 05EF                              24568          BALR  14,15
0001083C                                   24569 @@gen_label1891 DS    0H
0001083C B914 0012                         24570          LGFR  1,2
00010840 E310 D0B0 0024          000000B0  24571          STG   1,176(0,13)
00010846 E310 C0B8 0004          00010628  24572          LG    1,@lit_1084_1356
0001084C 4110 1048               00000048  24573          LA    1,72(0,1)
00010850 E310 D0B8 0024          000000B8  24574          STG   1,184(0,13)
00010856 E3F0 D0C0 0024          000000C0  24575          STG   15,192(0,13)
0001085C 4110 D0B0               000000B0  24576          LA    1,176(0,13)
00010860 E3F0 C0F0 0004          00010660  24577          LG    15,@lit_1084_1369 ; rd_kafka_error_new_retriable
00010866                                   24578 @@gen_label1892 DS    0H
                                                                                                                           Page  488 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010866 05EF                              24579          BALR  14,15
00010868                                   24580 @@gen_label1893 DS    0H
00010868 B904 002F                         24581          LGR   2,15        ; error
0001086C                                   24582 @L1654   DS    0H
                                           24583 * ***
                                           24584 * ***                   rd_kafka_txn_curr_api_reset(rk, 0);
0001086C E330 D0B0 0024          000000B0  24585          STG   3,176(0,13)
00010872 D707 D0B8 D0B8 000000B8 000000B8  24586          XC    184(8,13),184(13)
00010878 4110 D0B0               000000B0  24587          LA    1,176(0,13)
0001087C E3F0 C100 0004          00010670  24588          LG    15,@lit_1084_1373 ; rd_kafka_txn_curr_api_reset
00010882                                   24589 @@gen_label1894 DS    0H
00010882 05EF                              24590          BALR  14,15
00010884                                   24591 @@gen_label1895 DS    0H
                                           24592 * ***
                                           24593 * ***
                                           24594 * ***
                                           24595 * ***                   return error;
00010884 B904 00F2                         24596          LGR   15,2
00010888 47F0 C460               000109D0  24597          B     @ret_lab_1084
                                           24598 * ***           }
                                           24599 * ***
                                           24600 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           24601 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOMMIT","Transacti\
                                           24602 * on abort message purge and flush complete"); } while (0);
0001088C                                   24603 @L1655   DS    0H
0001088C 9180 3322      00000322 00000080  24604          TM    802(3),128
00010890 4780 C378               000108E8  24605          BZ    @L1658
00010894 41F0 3210               00000210  24606          LA    15,528(0,3)
00010898 E3F0 D0B0 0024          000000B0  24607          STG   15,176(0,13)
0001089E E330 D0B8 0024          000000B8  24608          STG   3,184(0,13)
000108A4 D707 D0C0 D0C0 000000C0 000000C0  24609          XC    192(8,13),192(13)
000108AA E548 D0C8 0007          000000C8  24610          MVGHI 200(13),7
000108B0 C0FF 0000 8000                    24611          LLILF 15,X'00008000' ; 32768
000108B6 E3F0 D0D0 0024          000000D0  24612          STG   15,208(0,13)
000108BC E3F0 C0E8 0004          00010658  24613          LG    15,@lit_1084_1367
000108C2 41F0 FE92               00000E92  24614          LA    15,3730(0,15)
000108C6 E3F0 D0D8 0024          000000D8  24615          STG   15,216(0,13)
000108CC E3F0 C0B8 0004          00010628  24616          LG    15,@lit_1084_1356
000108D2 41F0 F24E               0000024E  24617          LA    15,590(0,15)
000108D6 E3F0 D0E0 0024          000000E0  24618          STG   15,224(0,13)
000108DC 4110 D0B0               000000B0  24619          LA    1,176(0,13)
000108E0 E3F0 C0C8 0004          00010638  24620          LG    15,@lit_1084_1361 ; rd_kafka_log0
000108E6                                   24621 @@gen_label1897 DS    0H
000108E6 05EF                              24622          BALR  14,15
000108E8                                   24623 @@gen_label1898 DS    0H
000108E8                                   24624 @L1658   DS    0H
                                           24625 * ***
                                           24626 * ***
                                           24627 * ***           error = rd_kafka_txn_curr_api_req(
                                           24628 * ***                   rk, "abort_transaction",
                                           24629 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           24630 * ***                   rd_timeout_remains(abs_timeout),
                                                                                                                           Page  489 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24631 * ***                   0x4|
                                           24632 * ***                                      rd_kafka_txn_op_abort_trans\
                                           24633 * action),
000108E8 E330 D0B0 0024          000000B0  24634          STG   3,176(0,13)
000108EE E548 D0B8 002F          000000B8  24635          MVGHI 184(13),47
000108F4 E3F0 C108 0004          00010678  24636          LG    15,@lit_1084_1378 ; rd_kafka_txn_op_abort_transaction
000108FA E3F0 D0C0 0024          000000C0  24637          STG   15,192(0,13)
00010900 4110 D0B0               000000B0  24638          LA    1,176(0,13)
00010904 E350 C0A0 0004          00010610  24639          LG    5,@lit_1084_1355 ; rd_kafka_op_new_cb
0001090A B904 00F5                         24640          LGR   15,5
0001090E                                   24641 @@gen_label1899 DS    0H
0001090E 05EF                              24642          BALR  14,15
00010910                                   24643 @@gen_label1900 DS    0H
00010910 B904 002F                         24644          LGR   2,15
00010914 E340 D0B0 0024          000000B0  24645          STG   4,176(0,13)
0001091A 4110 D0B0               000000B0  24646          LA    1,176(0,13)
0001091E E360 C0D8 0004          00010648  24647          LG    6,@lit_1084_1363 ; rd_timeout_remains
00010924 B904 00F6                         24648          LGR   15,6
00010928                                   24649 @@gen_label1901 DS    0H
00010928 05EF                              24650          BALR  14,15
0001092A                                   24651 @@gen_label1902 DS    0H
0001092A E330 D0B0 0024          000000B0  24652          STG   3,176(0,13)
00010930 E370 C0B8 0004          00010628  24653          LG    7,@lit_1084_1356
00010936 4110 7282               00000282  24654          LA    1,642(0,7)
0001093A EB12 D0B8 0024          000000B8  24655          STMG  1,2,184(13)
00010940 B914 00FF                         24656          LGFR  15,15
00010944 E3F0 D0C8 0024          000000C8  24657          STG   15,200(0,13)
                                           24658 * ***                   0x8|
                                           24659 * ***                   0x2);
0001094A E548 D0D0 000E          000000D0  24660          MVGHI 208(13),14
00010950 4110 D0B0               000000B0  24661          LA    1,176(0,13)
00010954 E380 C0B0 0004          00010620  24662          LG    8,@lit_1084_1357 ; rd_kafka_txn_curr_api_req
0001095A B904 00F8                         24663          LGR   15,8
0001095E                                   24664 @@gen_label1903 DS    0H
0001095E 05EF                              24665          BALR  14,15
00010960                                   24666 @@gen_label1904 DS    0H
00010960 B902 002F                         24667          LTGR  2,15        ; error
                                           24668 * ***           if (error)
00010964 4780 C400               00010970  24669          BZ    @L1659
                                           24670 * ***                   return error;
00010968 B904 00F2                         24671          LGR   15,2
0001096C 47F0 C460               000109D0  24672          B     @ret_lab_1084
00010970                                   24673 @L1659   DS    0H
                                           24674 * ***
                                           24675 * ***
                                           24676 * ***           return rd_kafka_txn_curr_api_req(
                                           24677 * ***                   rk, "abort_transaction (ack)",
                                           24678 * ***                   rd_kafka_op_new_cb(rk, RD_KAFKA_OP_TXN,
                                           24679 * ***                   rd_timeout_remains(abs_timeout),
                                           24680 * ***                   0x8);
                                           24681 * ***                                      rd_kafka_txn_op_abort_trans\
                                           24682 * action_ack),
                                                                                                                           Page  490 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010970 E330 D0B0 0024          000000B0  24683          STG   3,176(0,13)
00010976 E548 D0B8 002F          000000B8  24684          MVGHI 184(13),47
0001097C E3F0 C110 0004          00010680  24685          LG    15,@lit_1084_1383 ; rd_kafka_txn_op_abort_transaction_ac*
                                                                k
00010982 E3F0 D0C0 0024          000000C0  24686          STG   15,192(0,13)
00010988 4110 D0B0               000000B0  24687          LA    1,176(0,13)
0001098C B904 00F5                         24688          LGR   15,5
00010990                                   24689 @@gen_label1906 DS    0H
00010990 05EF                              24690          BALR  14,15
00010992                                   24691 @@gen_label1907 DS    0H
00010992 B904 002F                         24692          LGR   2,15
00010996 E340 D0B0 0024          000000B0  24693          STG   4,176(0,13)
0001099C 4110 D0B0               000000B0  24694          LA    1,176(0,13)
000109A0 B904 00F6                         24695          LGR   15,6
000109A4                                   24696 @@gen_label1908 DS    0H
000109A4 05EF                              24697          BALR  14,15
000109A6                                   24698 @@gen_label1909 DS    0H
000109A6 E330 D0B0 0024          000000B0  24699          STG   3,176(0,13)
000109AC 4110 7294               00000294  24700          LA    1,660(0,7)
000109B0 EB12 D0B8 0024          000000B8  24701          STMG  1,2,184(13)
000109B6 B914 00FF                         24702          LGFR  15,15
000109BA E3F0 D0C8 0024          000000C8  24703          STG   15,200(0,13)
000109C0 E548 D0D0 0008          000000D0  24704          MVGHI 208(13),8
000109C6 4110 D0B0               000000B0  24705          LA    1,176(0,13)
000109CA B904 00F8                         24706          LGR   15,8
000109CE                                   24707 @@gen_label1910 DS    0H
000109CE 05EF                              24708          BALR  14,15
000109D0                                   24709 @@gen_label1911 DS    0H
                                           24710 * ***
                                           24711 * ***   }
000109D0                                   24712 @ret_lab_1084 DS 0H
                                           24713 * * **** Start of Epilogue
                                           24714          DCCEPIL
000109D0                                   24715+         ds 0h                                                          01-DCCEP
                                           24716+* Epilog
000109D0 D707 D088 D088 00000088 00000088  24717+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000109D6 E3D0 D080 0004          00000080  24718+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000109DC E3C0 D090 0004          00000090  24719+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000109E2 E3B0 C018 0004          00000018  24720+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000109E8 E3C0 B010 0021          00000010  24721+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000109EE E3E0 D008 0004          00000008  24722+         lg  14,8(0,13)          load up return address                 01-DCCEP
000109F4 EB1C D020 0004          00000020  24723+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000109FA 078E                              24724+         bcr 8,14                if same dsab, just return              01-DCCEP
000109FC E3F0 D010 0024          00000010  24725+         stg 15,16(0,13)         save return code                       01-DCCEP
00010A02 E300 D018 0024          00000018  24726+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010A08 E3F0 D090 0004          00000090  24727+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010A0E E3F0 F018 0004          00000018  24728+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010A14 47F0 F040               00000040  24729+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           24730+* End of Epilog
                                           24731 * * **** End of Epilogue
                                           24732          DROP  12
                                           24733 *
                                                                                                                           Page  491 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24734 *   DSECT for automatic variables in "rd_kafka_abort_transaction"
                                           24735 *      (FUNCTION #1084)
                                           24736 *
00000000                00000000 000000B0  24737 @AUTO#rd_kafka_abort_transaction DSECT
00000000                                   24738          DS    XL168
000000A8                                   24739 rd_kafka_abort_transaction#abs_timeout#0 DS 8XL1 ; abs_timeout
000000B0                000000B0 000000A8  24740          ORG   @AUTO#rd_kafka_abort_transaction+168
000000A8                                   24741 rd_kafka_abort_transaction#err#0 DS 1F ; err
                                           24742 *
00010A18                00000000 00014658  24743 @CODE    CSECT
                                           24744 *
                                           24745 *
                                           24746 *
                                           24747 * ....... start of rd_kafka_txn_coord_timer_cb
00010A18                                   24748 @LNAME2032 DS  0H
00010A18 0000001B                          24749          DC    X'0000001B'
00010A1C 99846D9281869281                  24750          DC    C'rd_kafka_txn_coord_timer_cb'
00010A37 00                                24751          DC    X'00'
                                           24752 rd_kafka_txn_coord_timer_cb DCCPRLG CINDEX=2032,BASER=12,FRAME=192,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2032
                                           24753          macro
                                           24754          dccextrn &m
                                           24755          gblc    &$dccext(1000)
                                           24756          gbla    &$dccexti
                                           24757          lcla    &i
                                           24758 &$dccext(&$dccexti+1) setc    '&m'
                                           24759 &i       seta    1
                                           24760 .loop    aif    (&i gt &$dccexti).around
                                           24761          aif    ('&$dccext(&i)' eq '&m').getout
                                           24762 &i       seta    &i+1
                                           24763          ago     .loop
                                           24764 .around  anop
                                           24765 &$dccexti seta &$dccexti+1
                                           24766          extrn  &m
                                           24767 .getout  anop
                                           24768          mend
00010A38                                   24769+$eye0306    ds    0d                                                    02-DCCCA
00010A38 C4C3C3                            24770+         dc cl3'DCC'                                                    02-DCCCA
00010A3B 01                                24771+         dc xl1'01' format one                                          02-DCCCA
00010A3C 00000000                          24772+         dc a(0)                                                        02-DCCCA
00010A40 0000000000010AAA                  24773+         dc ad(@PER_2032)                                               02-DCCCA
00010A48 00000000000000C0                  24774+         dc ad(192)                                                     02-DCCCA
00010A50 0000000000000000                  24775+         dc ad(0)                                                       02-DCCCA
00010A58 0000000000001000                  24776+         dc ad(4096)                                                    02-DCCCA
00010A60 20                                24777+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010A61 03                                24778+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010A62 03                                24779+         dc al1(3)                                                      02-DCCCA
00010A63 08                                24780+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010A64 00                                24781+         dc bl.8'00000000'                                              02-DCCCA
00010A65 000000                            24782+         dc al3(0)                                                      02-DCCCA
00010A68 0000000000010A18                  24783+         dc ad(@LNAME2032)                                              02-DCCCA
00010A70                                   24784+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  492 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010A70 0000000000010A38                  24785+         dc ad($eye0306)                                                02-DCCCA
00010A78 0000000000000000                  24786+         dc ad(0)                                                       02-DCCCA
00010A80                                   24787+         ds    0d                                                       01-DCCPR
00010A80                                   24788+rd_kafka_txn_coord_timer_cb ds 0d                                       01-DCCPR
00010A80                                   24789+@REGION_2032_1 ds 0h                                                    01-DCCPR
00010A80 EBEC D008 0024          00000008  24790+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010A86 E3E0 D088 0004          00000088  24791+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010A8C E3C0 D090 0004          00000090  24792+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010A92 B904 002E                         24793+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010A96 E3B0 C018 0004          00000018  24794+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010A9C A7EB 00C0               000000C0  24795+         aghi  14,192              increase by frame size               01-DCCPR
00010AA0 E3E0 C020 0021          00000020  24796+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010AA6 4720 B020               00000020  24797+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010AAA                                   24798+@PER_2032 ds   0h                                                       01-DCCPR
00010AAA EBDE 2080 0024          00000080  24799+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010AB0 E3C0 2090 0024          00000090  24800+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010AB6 B904 00D2                         24801+         lgr   13,2                set real frame pointer               01-DCCPR
00010ABA B904 00CF                         24802+         lgr   12,15               set base reg                         01-DCCPR
                        00010A80           24803+         using @REGION_2032_1,12                                        01-DCCPR
                                           24804 * ******* End of Prologue
                                           24805 * *
                                           24806 * ***           rd_kafka_t *rk = arg;
00010ABE E320 1008 0004          00000008  24807          LG    2,8(0,1)    ; arg
                                           24808 * ***
                                           24809 * ***           rwlock_wrlock(&(rk)->rk_lock);
00010AC4 41F0 29A0               000009A0  24810          LA    15,2464(0,2)
00010AC8 E3F0 D0B0 0024          000000B0  24811          STG   15,176(0,13)
00010ACE 4110 D0B0               000000B0  24812          LA    1,176(0,13)
00010AD2 E3F0 C0E8 0004          00010B68  24813          LG    15,@lit_2032_1388 ; rwlock_wrlock
00010AD8                                   24814 @@gen_label1912 DS    0H
00010AD8 05EF                              24815          BALR  14,15
00010ADA                                   24816 @@gen_label1913 DS    0H
                                           24817 * ***           rd_kafka_txn_coord_query(rk, "Coordinator query timer"\
                                           24818 * );
00010ADA E320 D0B0 0024          000000B0  24819          STG   2,176(0,13)
00010AE0 E3F0 C0F8 0004          00010B78  24820          LG    15,@lit_2032_1389
00010AE6 41F0 F2AC               000002AC  24821          LA    15,684(0,15)
00010AEA E3F0 D0B8 0024          000000B8  24822          STG   15,184(0,13)
00010AF0 4110 D0B0               000000B0  24823          LA    1,176(0,13)
00010AF4 E3F0 C0F0 0004          00010B70  24824          LG    15,@lit_2032_1390 ; rd_kafka_txn_coord_query
00010AFA                                   24825 @@gen_label1914 DS    0H
00010AFA 05EF                              24826          BALR  14,15
00010AFC                                   24827 @@gen_label1915 DS    0H
                                           24828 * ***           rwlock_wrunlock(&(rk)->rk_lock);
00010AFC 41F0 29A0               000009A0  24829          LA    15,2464(0,2)
00010B00 E3F0 D0B0 0024          000000B0  24830          STG   15,176(0,13)
00010B06 4110 D0B0               000000B0  24831          LA    1,176(0,13)
00010B0A E3F0 C100 0004          00010B80  24832          LG    15,@lit_2032_1391 ; rwlock_wrunlock
00010B10                                   24833 @@gen_label1916 DS    0H
00010B10 05EF                              24834          BALR  14,15
00010B12                                   24835 @@gen_label1917 DS    0H
                                           24836 * ***   }
                                                                                                                           Page  493 
  Active Usings: @REGION_2032_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010B12                                   24837 @ret_lab_2032 DS 0H
                                           24838 * * **** Start of Epilogue
                                           24839          DCCEPIL
00010B12                                   24840+         ds 0h                                                          01-DCCEP
                                           24841+* Epilog
00010B12 D707 D088 D088 00000088 00000088  24842+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010B18 E3D0 D080 0004          00000080  24843+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00010B1E E3C0 D090 0004          00000090  24844+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00010B24 E3B0 C018 0004          00000018  24845+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010B2A E3C0 B010 0021          00000010  24846+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010B30 E3E0 D008 0004          00000008  24847+         lg  14,8(0,13)          load up return address                 01-DCCEP
00010B36 EB1C D020 0004          00000020  24848+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010B3C 078E                              24849+         bcr 8,14                if same dsab, just return              01-DCCEP
00010B3E E3F0 D010 0024          00000010  24850+         stg 15,16(0,13)         save return code                       01-DCCEP
00010B44 E300 D018 0024          00000018  24851+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010B4A E3F0 D090 0004          00000090  24852+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010B50 E3F0 F018 0004          00000018  24853+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010B56 47F0 F040               00000040  24854+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           24855+* End of Epilog
                                           24856 * * **** End of Epilogue
00010B60                                   24857          DS    0D
00010B60 000000C0                          24858 @FRAMESIZE_2032 DC F'192'
00010B64 00000000
00010B68 0000000000000000                  24859 @lit_2032_1388 DC AD(rwlock_wrlock)
00010B70 00000000000134D8                  24860 @lit_2032_1390 DC AD(rd_kafka_txn_coord_query)
00010B78 0000000000015A98                  24861 @lit_2032_1389 DC AD(@strings@+4096)
00010B80 0000000000000000                  24862 @lit_2032_1391 DC AD(rwlock_wrunlock)
                                           24863          DROP  12
                                           24864 *
                                           24865 *   DSECT for automatic variables in "rd_kafka_txn_coord_timer_cb"
                                           24866 *      (FUNCTION #2032)
                                           24867 *
00000000                00000000 000000A8  24868 @AUTO#rd_kafka_txn_coord_timer_cb DSECT
00000000                                   24869          DS    XL168
                                           24870 *
00010B88                00000000 00014658  24871 @CODE    CSECT
                                           24872 *
                                           24873 *
                                           24874 *
                                           24875 * ....... start of rd_kafka_txn_coord_timer_restart
00010B88                                   24876 @LNAME1997 DS  0H
00010B88 00000020                          24877          DC    X'00000020'
00010B8C 99846D9281869281                  24878          DC    C'rd_kafka_txn_coord_timer_restart'
00010BAC 00                                24879          DC    X'00'
                                           24880 rd_kafka_txn_coord_timer_restart DCCPRLG CINDEX=1997,BASER=12,FRAME=224*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1997
                                           24881          macro
                                           24882          dccextrn &m
                                           24883          gblc    &$dccext(1000)
                                           24884          gbla    &$dccexti
                                           24885          lcla    &i
                                           24886 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  494 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           24887 &i       seta    1
                                           24888 .loop    aif    (&i gt &$dccexti).around
                                           24889          aif    ('&$dccext(&i)' eq '&m').getout
                                           24890 &i       seta    &i+1
                                           24891          ago     .loop
                                           24892 .around  anop
                                           24893 &$dccexti seta &$dccexti+1
                                           24894          extrn  &m
                                           24895 .getout  anop
                                           24896          mend
00010BB0                                   24897+$eye0309    ds    0d                                                    02-DCCCA
00010BB0 C4C3C3                            24898+         dc cl3'DCC'                                                    02-DCCCA
00010BB3 01                                24899+         dc xl1'01' format one                                          02-DCCCA
00010BB4 00000000                          24900+         dc a(0)                                                        02-DCCCA
00010BB8 0000000000010C22                  24901+         dc ad(@PER_1997)                                               02-DCCCA
00010BC0 00000000000000E0                  24902+         dc ad(224)                                                     02-DCCCA
00010BC8 0000000000000000                  24903+         dc ad(0)                                                       02-DCCCA
00010BD0 0000000000001000                  24904+         dc ad(4096)                                                    02-DCCCA
00010BD8 20                                24905+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010BD9 03                                24906+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010BDA 03                                24907+         dc al1(3)                                                      02-DCCCA
00010BDB 08                                24908+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010BDC 00                                24909+         dc bl.8'00000000'                                              02-DCCCA
00010BDD 000000                            24910+         dc al3(0)                                                      02-DCCCA
00010BE0 0000000000010B88                  24911+         dc ad(@LNAME1997)                                              02-DCCCA
00010BE8                                   24912+         ds 0d                                                          02-DCCCA
00010BE8 0000000000010BB0                  24913+         dc ad($eye0309)                                                02-DCCCA
00010BF0 0000000000000000                  24914+         dc ad(0)                                                       02-DCCCA
00010BF8                                   24915+         ds    0d                                                       01-DCCPR
00010BF8                                   24916+rd_kafka_txn_coord_timer_restart ds 0d                                  01-DCCPR
00010BF8                                   24917+@REGION_1997_1 ds 0h                                                    01-DCCPR
00010BF8 EBEC D008 0024          00000008  24918+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010BFE E3E0 D088 0004          00000088  24919+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010C04 E3C0 D090 0004          00000090  24920+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010C0A B904 002E                         24921+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010C0E E3B0 C018 0004          00000018  24922+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010C14 A7EB 00E0               000000E0  24923+         aghi  14,224              increase by frame size               01-DCCPR
00010C18 E3E0 C020 0021          00000020  24924+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010C1E 4720 B020               00000020  24925+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010C22                                   24926+@PER_1997 ds   0h                                                       01-DCCPR
00010C22 EBDE 2080 0024          00000080  24927+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010C28 E3C0 2090 0024          00000090  24928+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010C2E B904 00D2                         24929+         lgr   13,2                set real frame pointer               01-DCCPR
00010C32 B904 00CF                         24930+         lgr   12,15               set base reg                         01-DCCPR
                        00010BF8           24931+         using @REGION_1997_1,12                                        01-DCCPR
00010C36 B904 0031                         24932          LGR   3,1         ; ptr to parm area
                                           24933 * ******* End of Prologue
                                           24934 * *
                                           24935 * ***           ((((rk)->rk_conf.eos.transactional_id != ((void *)0)))\
                                           24936 *  ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdka\
                                           24937 * fka_txnmgr.c", 2924, "((rk)->rk_conf.eos.transactional_id != ((void \
                                           24938 * *)0))"));
                                                                                                                           Page  495 
  Active Usings: @REGION_1997_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010C3A E320 3000 0004          00000000  24939          LG    2,0(0,3)    ; rk
00010C40 E3F0 27E8 0002          000007E8  24940          LTG   15,2024(0,2) ; offset of transactional_id in 0000105
00010C46 4770 C094               00010C8C  24941          BNE   @L1661
00010C4A                                   24942 @L1660   DS    0H
00010C4A E3F0 C150 0004          00010D48  24943          LG    15,@lit_1997_1393
00010C50 41F0 F3C2               000003C2  24944          LA    15,962(0,15)
00010C54 E3F0 D0A8 0024          000000A8  24945          STG   15,168(0,13)
00010C5A E3F0 C148 0004          00010D40  24946          LG    15,@lit_1997_1394
00010C60 41F0 F1B2               000001B2  24947          LA    15,434(0,15)
00010C64 E3F0 D0B0 0024          000000B0  24948          STG   15,176(0,13)
00010C6A E548 D0B8 0B6C          000000B8  24949          MVGHI 184(13),2924
00010C70 E3F0 C140 0004          00010D38  24950          LG    15,@lit_1997_1395
00010C76 41F0 F2C4               000002C4  24951          LA    15,708(0,15)
00010C7A E3F0 D0C0 0024          000000C0  24952          STG   15,192(0,13)
00010C80 4110 D0A8               000000A8  24953          LA    1,168(0,13)
00010C84 E3F0 C138 0004          00010D30  24954          LG    15,@lit_1997_1396 ; __assert
00010C8A                                   24955 @@gen_label1919 DS    0H
00010C8A 05EF                              24956          BALR  14,15
00010C8C                                   24957 @@gen_label1920 DS    0H
00010C8C                                   24958 @L1661   DS    0H
                                           24959 * ***           rd_kafka_timer_start0(&rk->rk_timers,&rk->rk_eos.txn_c\
                                           24960 * oord_tmr,1000 * timeout_ms,1,1,rd_kafka_txn_coord_timer_cb,rk);
00010C8C A7F9 1010               00001010  24961          LGHI  15,4112     ; 4112
00010C90 41FF 2000               00000000  24962          LA    15,0(15,2)
00010C94 E3F0 D0A8 0024          000000A8  24963          STG   15,168(0,13)
00010C9A 41F0 2EF0               00000EF0  24964          LA    15,3824(0,2)
00010C9E E3F0 D0B0 0024          000000B0  24965          STG   15,176(0,13)
00010CA4 58F0 300C               0000000C  24966          L     15,12(0,3)  ; timeout_ms
00010CA8 A7FC 03E8               000003E8  24967          MHI   15,1000
00010CAC B914 00FF                         24968          LGFR  15,15
00010CB0 E3F0 D0B8 0024          000000B8  24969          STG   15,184(0,13)
00010CB6 E548 D0C0 0001          000000C0  24970          MVGHI 192(13),1
00010CBC E548 D0C8 0001          000000C8  24971          MVGHI 200(13),1
00010CC2 E3F0 C160 0004          00010D58  24972          LG    15,@lit_1997_1398 ; rd_kafka_txn_coord_timer_cb
00010CC8 E3F0 D0D0 0024          000000D0  24973          STG   15,208(0,13)
00010CCE E320 D0D8 0024          000000D8  24974          STG   2,216(0,13)
00010CD4 4110 D0A8               000000A8  24975          LA    1,168(0,13)
00010CD8 E3F0 C158 0004          00010D50  24976          LG    15,@lit_1997_1399 ; rd_kafka_timer_start0
00010CDE                                   24977 @@gen_label1921 DS    0H
00010CDE 05EF                              24978          BALR  14,15
00010CE0                                   24979 @@gen_label1922 DS    0H
                                           24980 * ***
                                           24981 * ***
                                           24982 * ***
                                           24983 * ***   }
00010CE0                                   24984 @ret_lab_1997 DS 0H
                                           24985 * * **** Start of Epilogue
                                           24986          DCCEPIL
00010CE0                                   24987+         ds 0h                                                          01-DCCEP
                                           24988+* Epilog
00010CE0 D707 D088 D088 00000088 00000088  24989+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010CE6 E3D0 D080 0004          00000080  24990+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  496 
  Active Usings: @REGION_1997_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010CEC E3C0 D090 0004          00000090  24991+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00010CF2 E3B0 C018 0004          00000018  24992+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010CF8 E3C0 B010 0021          00000010  24993+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010CFE E3E0 D008 0004          00000008  24994+         lg  14,8(0,13)          load up return address                 01-DCCEP
00010D04 EB1C D020 0004          00000020  24995+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010D0A 078E                              24996+         bcr 8,14                if same dsab, just return              01-DCCEP
00010D0C E3F0 D010 0024          00000010  24997+         stg 15,16(0,13)         save return code                       01-DCCEP
00010D12 E300 D018 0024          00000018  24998+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010D18 E3F0 D090 0004          00000090  24999+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010D1E E3F0 F018 0004          00000018  25000+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010D24 47F0 F040               00000040  25001+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           25002+* End of Epilog
                                           25003 * * **** End of Epilogue
00010D28                                   25004          DS    0D
00010D28 000000E0                          25005 @FRAMESIZE_1997 DC F'224'
00010D2C 00000000
00010D30 0000000000000000                  25006 @lit_1997_1396 DC AD(__assert)
00010D38 0000000000015A98                  25007 @lit_1997_1395 DC AD(@strings@+4096)
00010D40 0000000000014A98                  25008 @lit_1997_1394 DC AD(@strings@)
00010D48 0000000000014658                  25009 @lit_1997_1393 DC AD(@DATA)
00010D50 0000000000000000                  25010 @lit_1997_1399 DC AD(rd_kafka_timer_start0)
00010D58 0000000000010A80                  25011 @lit_1997_1398 DC AD(rd_kafka_txn_coord_timer_cb)
                                           25012          DROP  12
                                           25013 *
                                           25014 *   DSECT for automatic variables in "rd_kafka_txn_coord_timer_restart"
                                           25015 *      (FUNCTION #1997)
                                           25016 *
00000000                00000000 000000A8  25017 @AUTO#rd_kafka_txn_coord_timer_restart DSECT
00000000                                   25018          DS    XL168
                                           25019 *
00010D60                00000000 00014658  25020 @CODE    CSECT
                                           25021 *
                                           25022 *
                                           25023 *
                                           25024 * ....... start of rd_kafka_txn_handle_FindCoordinator
00010D60                                   25025 @LNAME2033 DS  0H
00010D60 00000023                          25026          DC    X'00000023'
00010D64 99846D9281869281                  25027          DC    C'rd_kafka_txn_handle_FindCoordina'
00010D84 A39699                            25028          DC    C'tor'
00010D87 00                                25029          DC    X'00'
                                           25030 rd_kafka_txn_handle_$Find$Coordinator DCCPRLG CINDEX=2033,BASER=12,FRAM*
                                                                E=1440,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME2033
                                           25031          macro
                                           25032          dccextrn &m
                                           25033          gblc    &$dccext(1000)
                                           25034          gbla    &$dccexti
                                           25035          lcla    &i
                                           25036 &$dccext(&$dccexti+1) setc    '&m'
                                           25037 &i       seta    1
                                           25038 .loop    aif    (&i gt &$dccexti).around
                                           25039          aif    ('&$dccext(&i)' eq '&m').getout
                                           25040 &i       seta    &i+1
                                                                                                                           Page  497 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           25041          ago     .loop
                                           25042 .around  anop
                                           25043 &$dccexti seta &$dccexti+1
                                           25044          extrn  &m
                                           25045 .getout  anop
                                           25046          mend
00010D88                                   25047+$eye0312    ds    0d                                                    02-DCCCA
00010D88 C4C3C3                            25048+         dc cl3'DCC'                                                    02-DCCCA
00010D8B 01                                25049+         dc xl1'01' format one                                          02-DCCCA
00010D8C 00000000                          25050+         dc a(0)                                                        02-DCCCA
00010D90 0000000000010DFA                  25051+         dc ad(@PER_2033)                                               02-DCCCA
00010D98 00000000000005A0                  25052+         dc ad(1440)                                                    02-DCCCA
00010DA0 0000000000000000                  25053+         dc ad(0)                                                       02-DCCCA
00010DA8 0000000000001000                  25054+         dc ad(4096)                                                    02-DCCCA
00010DB0 20                                25055+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010DB1 03                                25056+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010DB2 03                                25057+         dc al1(3)                                                      02-DCCCA
00010DB3 08                                25058+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010DB4 00                                25059+         dc bl.8'00000000'                                              02-DCCCA
00010DB5 000000                            25060+         dc al3(0)                                                      02-DCCCA
00010DB8 0000000000010D60                  25061+         dc ad(@LNAME2033)                                              02-DCCCA
00010DC0                                   25062+         ds 0d                                                          02-DCCCA
00010DC0 0000000000010D88                  25063+         dc ad($eye0312)                                                02-DCCCA
00010DC8 0000000000000000                  25064+         dc ad(0)                                                       02-DCCCA
00010DD0                                   25065+         ds    0d                                                       01-DCCPR
00010DD0                                   25066+rd_kafka_txn_handle_$Find$Coordinator ds 0d                             01-DCCPR
00010DD0                                   25067+@REGION_2033_1 ds 0h                                                    01-DCCPR
00010DD0 EBEC D008 0024          00000008  25068+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010DD6 E3E0 D088 0004          00000088  25069+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010DDC E3C0 D090 0004          00000090  25070+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010DE2 B904 002E                         25071+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010DE6 E3B0 C018 0004          00000018  25072+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010DEC A7EB 05A0               000005A0  25073+         aghi  14,1440             increase by frame size               01-DCCPR
00010DF0 E3E0 C020 0021          00000020  25074+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010DF6 4720 B020               00000020  25075+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010DFA                                   25076+@PER_2033 ds   0h                                                       01-DCCPR
00010DFA EBDE 2080 0024          00000080  25077+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010E00 E3C0 2090 0024          00000090  25078+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010E06 B904 00D2                         25079+         lgr   13,2                set real frame pointer               01-DCCPR
00010E0A B904 00CF                         25080+         lgr   12,15               set base reg                         01-DCCPR
                        00010DD0           25081+         using @REGION_2033_1,12                                        01-DCCPR
00010E0E B904 0041                         25082          LGR   4,1         ; ptr to parm area
                                           25083 * ******* End of Prologue
                                           25084 * *
                                           25085 * ***           const int log_decode_errors = 3;
00010E12 E350 4000 0004          00000000  25086          LG    5,0(0,4)    ; rk
00010E18 E320 4008 0004          00000008  25087          LG    2,8(0,4)    ; rkb
00010E1E 5830 4014               00000014  25088          L     3,20(0,4)   ; err
00010E22 E360 4018 0004          00000018  25089          LG    6,24(0,4)   ; rkbuf
00010E28 A778 0003               00000003  25090          LHI   7,3         ; 3
                                           25091 * ***           int16_t ErrorCode;
                                           25092 * ***           rd_kafkap_str_t Host;
                                                                                                                           Page  498 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           25093 * ***           int32_t NodeId, Port;
                                           25094 * ***           char errstr[512];
                                           25095 * ***
                                           25096 * ***           *errstr = '\0';
00010E2C 9200 D0E8      000000E8 00000000  25097          MVI   232(13),0
                                           25098 * ***
                                           25099 * ***           rk->rk_eos.txn_wait_coord = 0;
00010E30 9200 5EEC      00000EEC 00000000  25100          MVI   3820(5),0   ; offset of txn_wait_coord in 0000146
                                           25101 * ***
                                           25102 * ***           if (err)
00010E34 1233                              25103          LTR   3,3
00010E36 4780 C074               00010E44  25104          BZ    *+14  Around region break
00010E3A E3C0 C264 001A          00011034  25105          ALGF  12,@lit_region_diff_2033_1_4
                                           25106          DROP  12
                        000129F0           25107          USING @REGION_2033_4,12
00010E40 47F0 C932               00013322  25108          B     @L1941
                                           25109          DROP  12
                        00010DD0           25110          USING @REGION_2033_1,12
                                           25111 * ***                   goto err;
00010E44                                   25112 @L1662   DS    0H
                                           25113 * ***
                                           25114 * ***           if (request->rkbuf_reqhdr.ApiVersion >= 1)
00010E44 E3F0 4020 0004          00000020  25115          LG    15,32(0,4)  ; request
00010E4A 48F0 F0BA               000000BA  25116          LH    15,186(0,15)
00010E4E A7FE 0001               00000001  25117          CHI   15,1
00010E52 4740 C404               000111D4  25118          BL    @L1695
                                           25119 * ***                   do { int32_t _throttle_time_ms; do { int32_t _\
                                           25120 * v; do { size_t __len2 = (size_t)(sizeof(_v)); if (!rd_slice_read(&(r\
                                           25121 * kbuf)->rkbuf_reader, &_v, __len2)) do { size_t __len0 = (size_t)(__l\
                                           25122 * en2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_o\
                                           25123 * ffset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) \
                                           25124 * { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\li\
                                           25125 * brdkafka\\src\\rdkafka_txnmgr.c",2959, __FUNCTION__, (((void *)0)), \
                                           25126 * "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snp\
                                           25127 * rintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2\
                                           25128 * ) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkb\
                                           25129 * uf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->r\
                                           25130 * kb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_l\
                                           25131 * ogname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (r\
                                           25132 * kbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUF\
                                           25133 * LOW", "Protocol read buffer underflow " "for %s v%hd " "at %" "zu" "\
                                           25134 * /%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remai\
                                           25135 * ning bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey)\
                                           25136 * , rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_read\
                                           25137 * er), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), \
                                           25138 * __FUNCTION__, 2959, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_\
                                           25139 * abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? r\
                                           25140 * kbuf->rkbuf_uflow_mitigation : "incorrect broker.version.fallback?",\
                                           25141 *  __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__U\
                                           25142 * NDERFLOW; goto err_parse; } while (0); } } while (0); } while (0); *\
                                           25143 * (&_throttle_time_ms) = (_v); } while (0); rd_kafka_op_throttle_time(\
                                           25144 * (rkbuf)->rkbuf_rkb, (rkbuf)->rkbuf_rkb->rkb_rk->rk_rep, _throttle_ti\
                                                                                                                           Page  499 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           25145 * me_ms); } while (0);
00010E56                                   25146 @L1664   DS    0H
00010E56                                   25147 @L1667   DS    0H
00010E56                                   25148 @L1670   DS    0H
00010E56 A739 0004               00000004  25149          LGHI  3,4         ; 4
00010E5A 41F0 6078               00000078  25150          LA    15,120(0,6)
00010E5E E3F0 D518 0024          00000518  25151          STG   15,1304(0,13)
00010E64 41F0 D0AC               000000AC  25152          LA    15,172(0,13)
00010E68 E3F0 D520 0024          00000520  25153          STG   15,1312(0,13)
00010E6E E330 D528 0024          00000528  25154          STG   3,1320(0,13)
00010E74 4110 D518               00000518  25155          LA    1,1304(0,13)
00010E78 E3F0 C268 0004          00011038  25156          LG    15,@lit_2033_1403 ; rd_slice_read
00010E7E                                   25157 @@gen_label1925 DS    0H
00010E7E 05EF                              25158          BALR  14,15
00010E80                                   25159 @@gen_label1926 DS    0H
00010E80 B902 00FF                         25160          LTGR  15,15
00010E84 4770 C3C0               00011190  25161          BNZ   @L1673
00010E88                                   25162 @L1674   DS    0H
00010E88 E380 6098 0004          00000098  25163          LG    8,152(0,6)  ; offset of end in rd_slice_s
00010E8E 41F0 6078               00000078  25164          LA    15,120(0,6)
00010E92 E3F0 D518 0024          00000518  25165          STG   15,1304(0,13)
00010E98 4110 D518               00000518  25166          LA    1,1304(0,13)
00010E9C E3F0 C270 0004          00011040  25167          LG    15,@lit_2033_1404 ; rd_slice_abs_offset
00010EA2                                   25168 @@gen_label1928 DS    0H
00010EA2 05EF                              25169          BALR  14,15
00010EA4                                   25170 @@gen_label1929 DS    0H
00010EA4 B90B 008F                         25171          SLGR  8,15
00010EA8 B921 0038                         25172          CLGR  3,8
00010EAC 47D0 C3C0               00011190  25173          BNH   @L1677
00010EB0                                   25174 @L1678   DS    0H
00010EB0 1277                              25175          LTR   7,7
00010EB2 47D0 C3B0               00011180  25176          BNH   @L1681
00010EB6                                   25177 @L1682   DS    0H
00010EB6 E3F0 6100 0002          00000100  25178          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00010EBC 4770 C132               00010F02  25179          BNZ   @L1685
00010EC0 E3F0 C288 0004          00011058  25180          LG    15,@lit_2033_1405
00010EC6 4110 F1B2               000001B2  25181          LA    1,434(0,15)
00010ECA E310 D518 0024          00000518  25182          STG   1,1304(0,13)
00010ED0 E548 D520 0B8F          00000520  25183          MVGHI 1312(13),2959
00010ED6 E310 C280 0004          00011050  25184          LG    1,@lit_2033_1406
00010EDC 4110 13E4               000003E4  25185          LA    1,996(0,1)
00010EE0 E310 D528 0024          00000528  25186          STG   1,1320(0,13)
00010EE6 D707 D530 D530 00000530 00000530  25187          XC    1328(8,13),1328(13)
00010EEC 41F0 F582               00000582  25188          LA    15,1410(0,15)
00010EF0 E3F0 D538 0024          00000538  25189          STG   15,1336(0,13)
00010EF6 4110 D518               00000518  25190          LA    1,1304(0,13)
00010EFA E3F0 C278 0004          00011048  25191          LG    15,@lit_2033_1407 ; rd_kafka_crash
00010F00                                   25192 @@gen_label1933 DS    0H
00010F00 05EF                              25193          BALR  14,15
00010F02                                   25194 @@gen_label1934 DS    0H
00010F02                                   25195 @L1685   DS    0H
00010F02 41F0 D302               00000302  25196          LA    15,770(0,13)
                                                                                                                           Page  500 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010F06 E3F0 D518 0024          00000518  25197          STG   15,1304(0,13)
00010F0C E548 D520 0100          00000520  25198          MVGHI 1312(13),256
00010F12 E3F0 C288 0004          00011058  25199          LG    15,@lit_2033_1405
00010F18 41F0 F59C               0000059C  25200          LA    15,1436(0,15)
00010F1C E3F0 D528 0024          00000528  25201          STG   15,1320(0,13)
00010F22 4110 D518               00000518  25202          LA    1,1304(0,13)
00010F26 E3F0 C290 0004          00011060  25203          LG    15,@lit_2033_1409 ; snprintf
00010F2C                                   25204 @@gen_label1935 DS    0H
00010F2C 05EF                              25205          BALR  14,15
00010F2E                                   25206 @@gen_label1936 DS    0H
00010F2E 41F0 D302               00000302  25207          LA    15,770(0,13)
00010F32 B904 001F                         25208          LGR   1,15
00010F36 A709 0000               00000000  25209          LGHI  0,0
00010F3A                                   25210 @@gen_label1937 DS 0H
00010F3A B25E 000F                         25211          SRST  0,15
00010F3E 4710 C16A               00010F3A  25212          BC  1,@@gen_label1937
00010F42 B90B 0001                         25213          SLGR  0,1
00010F46 A70F 0002               00000002  25214          CGHI  0,2
00010F4A 4770 C182               00010F52  25215          BNE   @L1687
00010F4E 9200 D302      00000302 00000000  25216          MVI   770(13),0
00010F52                                   25217 @L1686   DS    0H
00010F52                                   25218 @L1687   DS    0H
00010F52 E3F0 6100 0004          00000100  25219          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00010F58 A749 1638               00001638  25220          LGHI  4,5688      ; 5688
00010F5C 41F4 F000               00000000  25221          LA    15,0(4,15)
00010F60 E3F0 D518 0024          00000518  25222          STG   15,1304(0,13)
00010F66 4110 D518               00000518  25223          LA    1,1304(0,13)
00010F6A E3F0 C298 0004          00011068  25224          LG    15,@lit_2033_1411 ; mtx_lock
00010F70                                   25225 @@gen_label1939 DS    0H
00010F70 05EF                              25226          BALR  14,15
00010F72                                   25227 @@gen_label1940 DS    0H
00010F72 41F0 D402               00000402  25228          LA    15,1026(0,13)
00010F76 E3F0 D518 0024          00000518  25229          STG   15,1304(0,13)
00010F7C E3F0 6100 0004          00000100  25230          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00010F82 A719 1630               00001630  25231          LGHI  1,5680      ; 5680
00010F86 E3F1 F000 0004          00000000  25232          LG    15,0(1,15)
00010F8C E3F0 D520 0024          00000520  25233          STG   15,1312(0,13)
00010F92 E548 D528 0100          00000528  25234          MVGHI 1320(13),256
00010F98 4110 D518               00000518  25235          LA    1,1304(0,13)
00010F9C E3F0 C2A0 0004          00011070  25236          LG    15,@lit_2033_1413 ; rd_strlcpy
00010FA2                                   25237 @@gen_label1941 DS    0H
00010FA2 05EF                              25238          BALR  14,15
00010FA4                                   25239 @@gen_label1942 DS    0H
00010FA4 E3F0 6100 0004          00000100  25240          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00010FAA 41F4 F000               00000000  25241          LA    15,0(4,15)
00010FAE E3F0 D518 0024          00000518  25242          STG   15,1304(0,13)
00010FB4 4110 D518               00000518  25243          LA    1,1304(0,13)
00010FB8 E3F0 C2A8 0004          00011078  25244          LG    15,@lit_2033_1415 ; mtx_unlock
00010FBE                                   25245 @@gen_label1943 DS    0H
00010FBE 05EF                              25246          BALR  14,15
00010FC0                                   25247 @@gen_label1944 DS    0H
00010FC0 E3F0 60B8 0015          000000B8  25248          LGH   15,184(0,6)
                                                                                                                           Page  501 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00010FC6 E3F0 D518 0024          00000518  25249          STG   15,1304(0,13)
00010FCC 4110 D518               00000518  25250          LA    1,1304(0,13)
00010FD0 E3F0 C2B0 0004          00011080  25251          LG    15,@lit_2033_1416 ; rd_kafka_ApiKey2str
00010FD6                                   25252 @@gen_label1945 DS    0H
00010FD6 05EF                              25253          BALR  14,15
00010FD8                                   25254 @@gen_label1946 DS    0H
00010FD8 B904 004F                         25255          LGR   4,15
00010FDC 41F0 6078               00000078  25256          LA    15,120(0,6)
00010FE0 E3F0 D518 0024          00000518  25257          STG   15,1304(0,13)
00010FE6 4110 D518               00000518  25258          LA    1,1304(0,13)
00010FEA E3F0 C2B8 0004          00011088  25259          LG    15,@lit_2033_1417 ; rd_slice_offset
00010FF0                                   25260 @@gen_label1947 DS    0H
00010FF0 05EF                              25261          BALR  14,15
00010FF2                                   25262 @@gen_label1948 DS    0H
00010FF2 B904 008F                         25263          LGR   8,15
00010FF6 E390 6098 0004          00000098  25264          LG    9,152(0,6)  ; offset of end in rd_slice_s
00010FFC 41F0 6078               00000078  25265          LA    15,120(0,6)
00011000 E3F0 D518 0024          00000518  25266          STG   15,1304(0,13)
00011006 4110 D518               00000518  25267          LA    1,1304(0,13)
0001100A E3F0 C270 0004          00011040  25268          LG    15,@lit_2033_1404 ; rd_slice_abs_offset
00011010                                   25269 @@gen_label1949 DS    0H
00011010 05EF                              25270          BALR  14,15
00011012                                   25271 @@gen_label1950 DS    0H
00011012 B90B 009F                         25272          SLGR  9,15
00011016 E3F0 61E8 0002          000001E8  25273          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0001101C 4780 C2E0               000110B0  25274          BZ    @L1690
00011020 E3F0 61E8 0004          000001E8  25275          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00011026 47F0 C2EA               000110BA  25276          B     @L1691
00011030                                   25277          DS    0D
00011030 000005A0                          25278 @FRAMESIZE_2033 DC F'1440'
00011034 00001C20                          25279 @lit_region_diff_2033_1_4  DC A(@REGION_2033_4-@REGION_2033_1)
00011038 0000000000000000                  25280 @lit_2033_1403 DC AD(rd_slice_read)
00011040 0000000000001730                  25281 @lit_2033_1404 DC AD(rd_slice_abs_offset)
00011048 0000000000000000                  25282 @lit_2033_1407 DC AD(rd_kafka_crash)
00011050 0000000000014658                  25283 @lit_2033_1406 DC AD(@DATA)
00011058 0000000000014A98                  25284 @lit_2033_1405 DC AD(@strings@)
00011060 0000000000000000                  25285 @lit_2033_1409 DC AD(snprintf)
00011068 0000000000000000                  25286 @lit_2033_1411 DC AD(mtx_lock)
00011070 0000000000001BA8                  25287 @lit_2033_1413 DC AD(rd_strlcpy)
00011078 0000000000000000                  25288 @lit_2033_1415 DC AD(mtx_unlock)
00011080 0000000000001988                  25289 @lit_2033_1416 DC AD(rd_kafka_$Api$Key2str)
00011088 00000000000017D8                  25290 @lit_2033_1417 DC AD(rd_slice_offset)
00011090 0000000000000000                  25291 @lit_2033_1422 DC AD(rd_kafka_log0)
00011098 0000000000000000                  25292 @lit_2033_1423 DC AD(rd_kafka_op_throttle_time)
000110A0 000008B8                          25293 @lit_region_diff_2033_1_2  DC A(@REGION_2033_2-@REGION_2033_1)
000110A4 00000000
000110A8 0000000000000000                  25294 @lit_2033_1445 DC AD(rd_slice_read_uvarint)
000110B0                                   25295 @L1690   DS    0H
000110B0 E3F0 C288 0004          00011058  25296          LG    15,@lit_2033_1405
000110B6 41F0 F5A0               000005A0  25297          LA    15,1440(0,15)
                                                                                                                           Page  502 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000110BA                                   25298 @L1691   DS    0H
000110BA E310 6100 0004          00000100  25299          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000110C0 E310 1FD0 0004          00000FD0  25300          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000110C6 4110 1210               00000210  25301          LA    1,528(0,1)
000110CA E310 D518 0024          00000518  25302          STG   1,1304(0,13)
000110D0 E310 6100 0004          00000100  25303          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000110D6 E310 1FD0 0004          00000FD0  25304          LG    1,4048(0,1)
000110DC E310 D520 0024          00000520  25305          STG   1,1312(0,13)
000110E2 4110 D402               00000402  25306          LA    1,1026(0,13)
000110E6 E310 D528 0024          00000528  25307          STG   1,1320(0,13)
000110EC B914 0017                         25308          LGFR  1,7
000110F0 E310 D530 0024          00000530  25309          STG   1,1328(0,13)
000110F6 D707 D538 D538 00000538 00000538  25310          XC    1336(8,13),1336(13)
000110FC E310 C288 0004          00011058  25311          LG    1,@lit_2033_1405
00011102 4170 15C4               000005C4  25312          LA    7,1476(0,1)
00011106 E370 D540 0024          00000540  25313          STG   7,1344(0,13)
0001110C 4110 15D0               000005D0  25314          LA    1,1488(0,1)
00011110 E310 D548 0024          00000548  25315          STG   1,1352(0,13)
00011116 E340 D550 0024          00000550  25316          STG   4,1360(0,13)
0001111C 4810 60BA               000000BA  25317          LH    1,186(0,6)
00011120 B914 0011                         25318          LGFR  1,1
00011124 E310 D558 0024          00000558  25319          STG   1,1368(0,13)
0001112A E380 D560 0024          00000560  25320          STG   8,1376(0,13)
00011130 E310 6098 0004          00000098  25321          LG    1,152(0,6)  ; offset of end in rd_slice_s
00011136 E310 6090 000B          00000090  25322          SLG   1,144(0,6)
0001113C E310 D568 0024          00000568  25323          STG   1,1384(0,13)
00011142 E310 C280 0004          00011050  25324          LG    1,@lit_2033_1406
00011148 4110 13E4               000003E4  25325          LA    1,996(0,1)
0001114C E310 D570 0024          00000570  25326          STG   1,1392(0,13)
00011152 E548 D578 0B8F          00000578  25327          MVGHI 1400(13),2959
00011158 E330 D580 0024          00000580  25328          STG   3,1408(0,13)
0001115E E390 D588 0024          00000588  25329          STG   9,1416(0,13)
00011164 E3F0 D590 0024          00000590  25330          STG   15,1424(0,13)
0001116A 41F0 D302               00000302  25331          LA    15,770(0,13)
0001116E E3F0 D598 0024          00000598  25332          STG   15,1432(0,13)
00011174 4110 D518               00000518  25333          LA    1,1304(0,13)
00011178 E3F0 C2C0 0004          00011090  25334          LG    15,@lit_2033_1422 ; rd_kafka_log0
0001117E                                   25335 @@gen_label1952 DS    0H
0001117E 05EF                              25336          BALR  14,15
00011180                                   25337 @@gen_label1953 DS    0H
00011180                                   25338 @L1681   DS    0H
00011180 E54C 6188 FF65          00000188  25339          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00011186 E3C0 C264 001A          00011034  25340          ALGF  12,@lit_region_diff_2033_1_4
                                           25341          DROP  12
                        000129F0           25342          USING @REGION_2033_4,12
0001118C 47F0 C816               00013206  25343          B     @_err_parse@2033@18
                                           25344          DROP  12
                        00010DD0           25345          USING @REGION_2033_1,12
00011190                                   25346 @L1677   DS    0H
00011190                                   25347 @L1673   DS    0H
00011190 58F0 D0AC               000000AC  25348          L     15,172(0,13) ; _v
00011194 50F0 D0A8               000000A8  25349          ST    15,168(0,13)
                                                                                                                           Page  503 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011198 E3F0 6100 0004          00000100  25350          LG    15,256(0,6)
0001119E E3F0 D518 0024          00000518  25351          STG   15,1304(0,13)
000111A4 E3F0 6100 0004          00000100  25352          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000111AA E3F0 FFD0 0004          00000FD0  25353          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000111B0 E3F0 F000 0004          00000000  25354          LG    15,0(0,15)
000111B6 E3F0 D520 0024          00000520  25355          STG   15,1312(0,13)
000111BC E3F0 D0A8 0014          000000A8  25356          LGF   15,168(0,13) ; _throttle_time_ms
000111C2 E3F0 D528 0024          00000528  25357          STG   15,1320(0,13)
000111C8 4110 D518               00000518  25358          LA    1,1304(0,13)
000111CC E3F0 C2C8 0004          00011098  25359          LG    15,@lit_2033_1423 ; rd_kafka_op_throttle_time
000111D2                                   25360 @@gen_label1954 DS    0H
000111D2 05EF                              25361          BALR  14,15
000111D4                                   25362 @@gen_label1955 DS    0H
                                           25363 * ***
                                           25364 * ***           do { int16_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           25365 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           25366 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           25367 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           25368 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           25369 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",2961, _\
                                           25370 * _FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while \
                                           25371 * (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": ");\
                                           25372 *  if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname\
                                           25373 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                           25374 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                           25375 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                           25376 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                           25377 * decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " \
                                           25378 * "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" \
                                           25379 * " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(\
                                           25380 * rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_sli\
                                           25381 * ce_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rk\
                                           25382 * buf->rkbuf_reader)->start), __FUNCTION__, 2961, __len0, ((&rkbuf->rk\
                                           25383 * buf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf\
                                           25384 * ->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrec\
                                           25385 * t broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbu\
                                           25386 * f_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); }\
                                           25387 *  } while (0); } while (0); *(&ErrorCode) = (int16_t)(_v); } while (0\
                                           25388 * );
000111D4                                   25389 @L1663   DS    0H
000111D4                                   25390 @L1692   DS    0H
000111D4                                   25391 @L1695   DS    0H
000111D4 A739 0002               00000002  25392          LGHI  3,2         ; 2
000111D8 41F0 6078               00000078  25393          LA    15,120(0,6)
000111DC E3F0 D518 0024          00000518  25394          STG   15,1304(0,13)
000111E2 41F0 D0B0               000000B0  25395          LA    15,176(0,13)
000111E6 E3F0 D520 0024          00000520  25396          STG   15,1312(0,13)
000111EC E330 D528 0024          00000528  25397          STG   3,1320(0,13)
000111F2 4110 D518               00000518  25398          LA    1,1304(0,13)
000111F6 E3F0 C268 0004          00011038  25399          LG    15,@lit_2033_1403 ; rd_slice_read
000111FC                                   25400 @@gen_label1956 DS    0H
000111FC 05EF                              25401          BALR  14,15
                                                                                                                           Page  504 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000111FE                                   25402 @@gen_label1957 DS    0H
000111FE B902 00FF                         25403          LTGR  15,15
00011202 4770 C6B8               00011488  25404          BNZ   @L1698
00011206                                   25405 @L1699   DS    0H
00011206 E380 6098 0004          00000098  25406          LG    8,152(0,6)  ; offset of end in rd_slice_s
0001120C 41F0 6078               00000078  25407          LA    15,120(0,6)
00011210 E3F0 D518 0024          00000518  25408          STG   15,1304(0,13)
00011216 4110 D518               00000518  25409          LA    1,1304(0,13)
0001121A E3F0 C270 0004          00011040  25410          LG    15,@lit_2033_1404 ; rd_slice_abs_offset
00011220                                   25411 @@gen_label1959 DS    0H
00011220 05EF                              25412          BALR  14,15
00011222                                   25413 @@gen_label1960 DS    0H
00011222 B90B 008F                         25414          SLGR  8,15
00011226 B921 0038                         25415          CLGR  3,8
0001122A 47D0 C6B8               00011488  25416          BNH   @L1702
0001122E                                   25417 @L1703   DS    0H
0001122E 1277                              25418          LTR   7,7
00011230 47D0 C6A8               00011478  25419          BNH   @L1706
00011234                                   25420 @L1707   DS    0H
00011234 E3F0 6100 0002          00000100  25421          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0001123A 4770 C4B0               00011280  25422          BNZ   @L1710
0001123E E3F0 C288 0004          00011058  25423          LG    15,@lit_2033_1405
00011244 4110 F1B2               000001B2  25424          LA    1,434(0,15)
00011248 E310 D518 0024          00000518  25425          STG   1,1304(0,13)
0001124E E548 D520 0B91          00000520  25426          MVGHI 1312(13),2961
00011254 E310 C280 0004          00011050  25427          LG    1,@lit_2033_1406
0001125A 4110 13E4               000003E4  25428          LA    1,996(0,1)
0001125E E310 D528 0024          00000528  25429          STG   1,1320(0,13)
00011264 D707 D530 D530 00000530 00000530  25430          XC    1328(8,13),1328(13)
0001126A 41F0 F582               00000582  25431          LA    15,1410(0,15)
0001126E E3F0 D538 0024          00000538  25432          STG   15,1336(0,13)
00011274 4110 D518               00000518  25433          LA    1,1304(0,13)
00011278 E3F0 C278 0004          00011048  25434          LG    15,@lit_2033_1407 ; rd_kafka_crash
0001127E                                   25435 @@gen_label1964 DS    0H
0001127E 05EF                              25436          BALR  14,15
00011280                                   25437 @@gen_label1965 DS    0H
00011280                                   25438 @L1710   DS    0H
00011280 41F0 D302               00000302  25439          LA    15,770(0,13)
00011284 E3F0 D518 0024          00000518  25440          STG   15,1304(0,13)
0001128A E548 D520 0100          00000520  25441          MVGHI 1312(13),256
00011290 E3F0 C288 0004          00011058  25442          LG    15,@lit_2033_1405
00011296 41F0 F59C               0000059C  25443          LA    15,1436(0,15)
0001129A E3F0 D528 0024          00000528  25444          STG   15,1320(0,13)
000112A0 4110 D518               00000518  25445          LA    1,1304(0,13)
000112A4 E3F0 C290 0004          00011060  25446          LG    15,@lit_2033_1409 ; snprintf
000112AA                                   25447 @@gen_label1966 DS    0H
000112AA 05EF                              25448          BALR  14,15
000112AC                                   25449 @@gen_label1967 DS    0H
000112AC 41F0 D302               00000302  25450          LA    15,770(0,13)
000112B0 B904 001F                         25451          LGR   1,15
000112B4 A709 0000               00000000  25452          LGHI  0,0
000112B8                                   25453 @@gen_label1968 DS 0H
                                                                                                                           Page  505 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000112B8 B25E 000F                         25454          SRST  0,15
000112BC 4710 C4E8               000112B8  25455          BC  1,@@gen_label1968
000112C0 B90B 0001                         25456          SLGR  0,1
000112C4 A70F 0002               00000002  25457          CGHI  0,2
000112C8 4770 C500               000112D0  25458          BNE   @L1712
000112CC 9200 D302      00000302 00000000  25459          MVI   770(13),0
000112D0                                   25460 @L1711   DS    0H
000112D0                                   25461 @L1712   DS    0H
000112D0 E3F0 6100 0004          00000100  25462          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000112D6 A749 1638               00001638  25463          LGHI  4,5688      ; 5688
000112DA 41F4 F000               00000000  25464          LA    15,0(4,15)
000112DE E3F0 D518 0024          00000518  25465          STG   15,1304(0,13)
000112E4 4110 D518               00000518  25466          LA    1,1304(0,13)
000112E8 E3F0 C298 0004          00011068  25467          LG    15,@lit_2033_1411 ; mtx_lock
000112EE                                   25468 @@gen_label1970 DS    0H
000112EE 05EF                              25469          BALR  14,15
000112F0                                   25470 @@gen_label1971 DS    0H
000112F0 41F0 D402               00000402  25471          LA    15,1026(0,13)
000112F4 E3F0 D518 0024          00000518  25472          STG   15,1304(0,13)
000112FA E3F0 6100 0004          00000100  25473          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011300 A719 1630               00001630  25474          LGHI  1,5680      ; 5680
00011304 E3F1 F000 0004          00000000  25475          LG    15,0(1,15)
0001130A E3F0 D520 0024          00000520  25476          STG   15,1312(0,13)
00011310 E548 D528 0100          00000528  25477          MVGHI 1320(13),256
00011316 4110 D518               00000518  25478          LA    1,1304(0,13)
0001131A E3F0 C2A0 0004          00011070  25479          LG    15,@lit_2033_1413 ; rd_strlcpy
00011320                                   25480 @@gen_label1972 DS    0H
00011320 05EF                              25481          BALR  14,15
00011322                                   25482 @@gen_label1973 DS    0H
00011322 E3F0 6100 0004          00000100  25483          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011328 41F4 F000               00000000  25484          LA    15,0(4,15)
0001132C E3F0 D518 0024          00000518  25485          STG   15,1304(0,13)
00011332 4110 D518               00000518  25486          LA    1,1304(0,13)
00011336 E3F0 C2A8 0004          00011078  25487          LG    15,@lit_2033_1415 ; mtx_unlock
0001133C                                   25488 @@gen_label1974 DS    0H
0001133C 05EF                              25489          BALR  14,15
0001133E                                   25490 @@gen_label1975 DS    0H
0001133E E3F0 60B8 0015          000000B8  25491          LGH   15,184(0,6)
00011344 E3F0 D518 0024          00000518  25492          STG   15,1304(0,13)
0001134A 4110 D518               00000518  25493          LA    1,1304(0,13)
0001134E E3F0 C2B0 0004          00011080  25494          LG    15,@lit_2033_1416 ; rd_kafka_ApiKey2str
00011354                                   25495 @@gen_label1976 DS    0H
00011354 05EF                              25496          BALR  14,15
00011356                                   25497 @@gen_label1977 DS    0H
00011356 B904 004F                         25498          LGR   4,15
0001135A 41F0 6078               00000078  25499          LA    15,120(0,6)
0001135E E3F0 D518 0024          00000518  25500          STG   15,1304(0,13)
00011364 4110 D518               00000518  25501          LA    1,1304(0,13)
00011368 E3F0 C2B8 0004          00011088  25502          LG    15,@lit_2033_1417 ; rd_slice_offset
0001136E                                   25503 @@gen_label1978 DS    0H
0001136E 05EF                              25504          BALR  14,15
00011370                                   25505 @@gen_label1979 DS    0H
                                                                                                                           Page  506 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011370 B904 008F                         25506          LGR   8,15
00011374 E390 6098 0004          00000098  25507          LG    9,152(0,6)  ; offset of end in rd_slice_s
0001137A 41F0 6078               00000078  25508          LA    15,120(0,6)
0001137E E3F0 D518 0024          00000518  25509          STG   15,1304(0,13)
00011384 4110 D518               00000518  25510          LA    1,1304(0,13)
00011388 E3F0 C270 0004          00011040  25511          LG    15,@lit_2033_1404 ; rd_slice_abs_offset
0001138E                                   25512 @@gen_label1980 DS    0H
0001138E 05EF                              25513          BALR  14,15
00011390                                   25514 @@gen_label1981 DS    0H
00011390 B90B 009F                         25515          SLGR  9,15
00011394 E3F0 61E8 0002          000001E8  25516          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0001139A 4780 C5D8               000113A8  25517          BZ    @L1715
0001139E E3F0 61E8 0004          000001E8  25518          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000113A4 47F0 C5E2               000113B2  25519          B     @L1716
000113A8                                   25520 @L1715   DS    0H
000113A8 E3F0 C288 0004          00011058  25521          LG    15,@lit_2033_1405
000113AE 41F0 F5A0               000005A0  25522          LA    15,1440(0,15)
000113B2                                   25523 @L1716   DS    0H
000113B2 E310 6100 0004          00000100  25524          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000113B8 E310 1FD0 0004          00000FD0  25525          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000113BE 4110 1210               00000210  25526          LA    1,528(0,1)
000113C2 E310 D518 0024          00000518  25527          STG   1,1304(0,13)
000113C8 E310 6100 0004          00000100  25528          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000113CE E310 1FD0 0004          00000FD0  25529          LG    1,4048(0,1)
000113D4 E310 D520 0024          00000520  25530          STG   1,1312(0,13)
000113DA 4110 D402               00000402  25531          LA    1,1026(0,13)
000113DE E310 D528 0024          00000528  25532          STG   1,1320(0,13)
000113E4 B914 0017                         25533          LGFR  1,7
000113E8 E310 D530 0024          00000530  25534          STG   1,1328(0,13)
000113EE D707 D538 D538 00000538 00000538  25535          XC    1336(8,13),1336(13)
000113F4 E310 C288 0004          00011058  25536          LG    1,@lit_2033_1405
000113FA 4170 15C4               000005C4  25537          LA    7,1476(0,1)
000113FE E370 D540 0024          00000540  25538          STG   7,1344(0,13)
00011404 4110 15D0               000005D0  25539          LA    1,1488(0,1)
00011408 E310 D548 0024          00000548  25540          STG   1,1352(0,13)
0001140E E340 D550 0024          00000550  25541          STG   4,1360(0,13)
00011414 4810 60BA               000000BA  25542          LH    1,186(0,6)
00011418 B914 0011                         25543          LGFR  1,1
0001141C E310 D558 0024          00000558  25544          STG   1,1368(0,13)
00011422 E380 D560 0024          00000560  25545          STG   8,1376(0,13)
00011428 E310 6098 0004          00000098  25546          LG    1,152(0,6)  ; offset of end in rd_slice_s
0001142E E310 6090 000B          00000090  25547          SLG   1,144(0,6)
00011434 E310 D568 0024          00000568  25548          STG   1,1384(0,13)
0001143A E310 C280 0004          00011050  25549          LG    1,@lit_2033_1406
00011440 4110 13E4               000003E4  25550          LA    1,996(0,1)
00011444 E310 D570 0024          00000570  25551          STG   1,1392(0,13)
0001144A E548 D578 0B91          00000578  25552          MVGHI 1400(13),2961
00011450 E330 D580 0024          00000580  25553          STG   3,1408(0,13)
00011456 E390 D588 0024          00000588  25554          STG   9,1416(0,13)
0001145C E3F0 D590 0024          00000590  25555          STG   15,1424(0,13)
                                                                                                                           Page  507 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011462 41F0 D302               00000302  25556          LA    15,770(0,13)
00011466 E3F0 D598 0024          00000598  25557          STG   15,1432(0,13)
0001146C 4110 D518               00000518  25558          LA    1,1304(0,13)
00011470 E3F0 C2C0 0004          00011090  25559          LG    15,@lit_2033_1422 ; rd_kafka_log0
00011476                                   25560 @@gen_label1983 DS    0H
00011476 05EF                              25561          BALR  14,15
00011478                                   25562 @@gen_label1984 DS    0H
00011478                                   25563 @L1706   DS    0H
00011478 E54C 6188 FF65          00000188  25564          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0001147E E3C0 C264 001A          00011034  25565          ALGF  12,@lit_region_diff_2033_1_4
                                           25566          DROP  12
                        000129F0           25567          USING @REGION_2033_4,12
00011484 47F0 C816               00013206  25568          B     @_err_parse@2033@18
                                           25569          DROP  12
                        00010DD0           25570          USING @REGION_2033_1,12
00011488                                   25571 @L1702   DS    0H
00011488                                   25572 @L1698   DS    0H
00011488 D201 D300 D0B0 00000300 000000B0  25573          MVC   768(2,13),176(13)
                                           25574 * ***
                                           25575 * ***           if (request->rkbuf_reqhdr.ApiVersion >= 1) {
0001148E E3F0 4020 0004          00000020  25576          LG    15,32(0,4)  ; request
00011494 48F0 F0BA               000000BA  25577          LH    15,186(0,15)
00011498 A7FE 0001               00000001  25578          CHI   15,1
0001149C 47B0 C6DA               000114AA  25579          BNL   *+14  Around region break
000114A0 E3C0 C2D0 001A          000110A0  25580          ALGF  12,@lit_region_diff_2033_1_2
                                           25581          DROP  12
                        00011688           25582          USING @REGION_2033_2,12
000114A6 47F0 C882               00011F0A  25583          B     @L1717
                                           25584          DROP  12
                        00010DD0           25585          USING @REGION_2033_1,12
                                           25586 * ***                   rd_kafkap_str_t ErrorMsg;
                                           25587 * ***                   do { int _klen; if ((rkbuf)->rkbuf_flags & 0x4\
                                           25588 * 0) { uint64_t _uva; do { uint64_t _v; size_t _r = rd_slice_read_uvar\
                                           25589 * int(&(rkbuf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_de\
                                           25590 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                           25591 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",2965, __FUNCTION__\
                                           25592 * , (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char _\
                                           25593 * _tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "uvarint par\
                                           25594 * sing failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do {\
                                           25595 *  char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock)\
                                           25596 * ; rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_lognam\
                                           25597 * e)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log\
                                           25598 * 0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, \
                                           25599 * _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffe\
                                           25600 * r underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "exp\
                                           25601 * ected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kaf\
                                           25602 * ka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiV\
                                           25603 * ersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reade\
                                           25604 * r)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 2965, (size_\
                                           25605 * t)0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbu\
                                           25606 * f_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitig\
                                           25607 * ation : "incorrect broker.version.fallback?", __tmpstr); } while (0)\
                                                                                                                           Page  508 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           25608 * ; } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_pars\
                                           25609 * e; } while (0); *(&_uva) = _v; } while (0); (&ErrorMsg)->len = ((int\
                                           25610 * 32_t)_uva) - 1; _klen = (&ErrorMsg)->len; } else { do { int16_t _v; \
                                           25611 * do { size_t __len2 = (size_t)(2); if (!rd_slice_read(&(rkbuf)->rkbuf\
                                           25612 * _reader, &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if (((\
                                           25613 * __len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbu\
                                           25614 * f)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { if ((\
                                           25615 * (!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\sr\
                                           25616 * c\\rdkafka_txnmgr.c",2965, __FUNCTION__, (((void *)0)), "assert: " "\
                                           25617 * rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmps\
                                           25618 * tr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0\
                                           25619 * ] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb\
                                           25620 * _logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, \
                                           25621 * sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock)\
                                           25622 * ; rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_\
                                           25623 * rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Proto\
                                           25624 * col read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (\
                                           25625 * %s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (\
                                           25626 * %s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkb\
                                           25627 * uf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbu\
                                           25628 * f->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__\
                                           25629 * , 2965, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&\
                                           25630 * rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_\
                                           25631 * uflow_mitigation : "incorrect broker.version.fallback?", __tmpstr); \
                                           25632 * } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; go\
                                           25633 * to err_parse; } while (0); } } while (0); } while (0); (&ErrorMsg)->\
                                           25634 * len = (int16_t)(_v); } while (0); _klen = (((&ErrorMsg)->len) == -1 \
                                           25635 * ? 0 : ((&ErrorMsg)->len)); } if (((&ErrorMsg)->len == -1)) (&ErrorMs\
                                           25636 * g)->str = ((void *)0); else if ((((&ErrorMsg)->len) == -1 ? 0 : ((&E\
                                           25637 * rrorMsg)->len)) == 0) (&ErrorMsg)->str = ""; else if (!((&ErrorMsg)-\
                                           25638 * >str = rd_slice_ensure_contig(&rkbuf->rkbuf_reader, _klen))) do { si\
                                           25639 * ze_t __len0 = (size_t)(_klen); if (((__len0 > ((&(rkbuf)->rkbuf_read\
                                           25640 * er)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if\
                                           25641 *  (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafk\
                                           25642 * a_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",2965, __FU\
                                           25643 * NCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0)\
                                           25644 * ; char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if\
                                           25645 *  (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[25\
                                           25646 * 6]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_log\
                                           25647 * name, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&\
                                           25648 * (rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_\
                                           25649 * rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_dec\
                                           25650 * ode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "fo\
                                           25651 * r %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " b\
                                           25652 * ytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkb\
                                           25653 * uf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_\
                                           25654 * offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf\
                                           25655 * ->rkbuf_reader)->start), __FUNCTION__, 2965, __len0, ((&rkbuf->rkbuf\
                                           25656 * _reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->r\
                                           25657 * kbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect b\
                                           25658 * roker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_e\
                                           25659 * rr = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } \
                                                                                                                           Page  509 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           25660 * while (0); if((&ErrorMsg)->len > 0) { char *tbuf = calloc(1,(&ErrorM\
                                           25661 * sg)->len); __memcpy(tbuf,(&ErrorMsg)->str,(&ErrorMsg)->len); size_t \
                                           25662 * ulen=(size_t)(&ErrorMsg)->len; size_t alen=ulen; utf8_2_ebcdic((&Err\
                                           25663 * orMsg)->str, &alen, tbuf, &ulen); free(tbuf); } } while (0);
000114AA                                   25664 @L1718   DS    0H
000114AA 9140 6023      00000023 00000040  25665          TM    35(6),64
000114AE 4770 C6EC               000114BC  25666          BNZ   *+14  Around region break
000114B2 E3C0 C2D0 001A          000110A0  25667          ALGF  12,@lit_region_diff_2033_1_2
                                           25668          DROP  12
                        00011688           25669          USING @REGION_2033_2,12
000114B8 47F0 C18E               00011816  25670          B     @L1744
                                           25671          DROP  12
                        00010DD0           25672          USING @REGION_2033_1,12
000114BC                                   25673 @L1722   DS    0H
000114BC 41F0 6078               00000078  25674          LA    15,120(0,6)
000114C0 E3F0 D518 0024          00000518  25675          STG   15,1304(0,13)
000114C6 41F0 D0C0               000000C0  25676          LA    15,192(0,13)
000114CA E3F0 D520 0024          00000520  25677          STG   15,1312(0,13)
000114D0 4110 D518               00000518  25678          LA    1,1304(0,13)
000114D4 E3F0 C2D8 0004          000110A8  25679          LG    15,@lit_2033_1445 ; rd_slice_read_uvarint
000114DA                                   25680 @@gen_label1987 DS    0H
000114DA 05EF                              25681          BALR  14,15
000114DC                                   25682 @@gen_label1988 DS    0H
000114DC B902 00FF                         25683          LTGR  15,15
000114E0 4780 C71E               000114EE  25684          BE    *+14  Around region break
000114E4 E3C0 C2D0 001A          000110A0  25685          ALGF  12,@lit_region_diff_2033_1_2
                                           25686          DROP  12
                        00011688           25687          USING @REGION_2033_2,12
000114EA 47F0 C174               000117FC  25688          B     @L1725
                                           25689          DROP  12
                        00010DD0           25690          USING @REGION_2033_1,12
000114EE                                   25691 @L1726   DS    0H
000114EE 1277                              25692          LTR   7,7
000114F0 4720 C72E               000114FE  25693          BH    *+14  Around region break
000114F4 E3C0 C2D0 001A          000110A0  25694          ALGF  12,@lit_region_diff_2033_1_2
                                           25695          DROP  12
                        00011688           25696          USING @REGION_2033_2,12
000114FA 47F0 C0C6               0001174E  25697          B     @L1729
                                           25698          DROP  12
                        00010DD0           25699          USING @REGION_2033_1,12
000114FE                                   25700 @L1730   DS    0H
000114FE E3F0 6100 0002          00000100  25701          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011504 4770 C77A               0001154A  25702          BNZ   @L1733
00011508 E3F0 C288 0004          00011058  25703          LG    15,@lit_2033_1405
0001150E 4110 F1B2               000001B2  25704          LA    1,434(0,15)
00011512 E310 D518 0024          00000518  25705          STG   1,1304(0,13)
00011518 E548 D520 0B95          00000520  25706          MVGHI 1312(13),2965
0001151E E310 C280 0004          00011050  25707          LG    1,@lit_2033_1406
00011524 4110 13E4               000003E4  25708          LA    1,996(0,1)
00011528 E310 D528 0024          00000528  25709          STG   1,1320(0,13)
0001152E D707 D530 D530 00000530 00000530  25710          XC    1328(8,13),1328(13)
00011534 41F0 F582               00000582  25711          LA    15,1410(0,15)
                                                                                                                           Page  510 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011538 E3F0 D538 0024          00000538  25712          STG   15,1336(0,13)
0001153E 4110 D518               00000518  25713          LA    1,1304(0,13)
00011542 E3F0 C278 0004          00011048  25714          LG    15,@lit_2033_1407 ; rd_kafka_crash
00011548                                   25715 @@gen_label1992 DS    0H
00011548 05EF                              25716          BALR  14,15
0001154A                                   25717 @@gen_label1993 DS    0H
0001154A                                   25718 @L1733   DS    0H
0001154A 41F0 D318               00000318  25719          LA    15,792(0,13)
0001154E E3F0 D518 0024          00000518  25720          STG   15,1304(0,13)
00011554 E548 D520 0100          00000520  25721          MVGHI 1312(13),256
0001155A E3F0 C288 0004          00011058  25722          LG    15,@lit_2033_1405
00011560 41F0 F640               00000640  25723          LA    15,1600(0,15)
00011564 E3F0 D528 0024          00000528  25724          STG   15,1320(0,13)
0001156A 4110 D518               00000518  25725          LA    1,1304(0,13)
0001156E E3F0 C290 0004          00011060  25726          LG    15,@lit_2033_1409 ; snprintf
00011574                                   25727 @@gen_label1994 DS    0H
00011574 05EF                              25728          BALR  14,15
00011576                                   25729 @@gen_label1995 DS    0H
00011576 41F0 D318               00000318  25730          LA    15,792(0,13)
0001157A B904 001F                         25731          LGR   1,15
0001157E A709 0000               00000000  25732          LGHI  0,0
00011582                                   25733 @@gen_label1996 DS 0H
00011582 B25E 000F                         25734          SRST  0,15
00011586 4710 C7B2               00011582  25735          BC  1,@@gen_label1996
0001158A B90B 0001                         25736          SLGR  0,1
0001158E A70F 0002               00000002  25737          CGHI  0,2
00011592 4770 C7CA               0001159A  25738          BNE   @L1735
00011596 9200 D318      00000318 00000000  25739          MVI   792(13),0
0001159A                                   25740 @L1734   DS    0H
0001159A                                   25741 @L1735   DS    0H
0001159A E3F0 6100 0004          00000100  25742          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000115A0 A739 1638               00001638  25743          LGHI  3,5688      ; 5688
000115A4 41F3 F000               00000000  25744          LA    15,0(3,15)
000115A8 E3F0 D518 0024          00000518  25745          STG   15,1304(0,13)
000115AE 4110 D518               00000518  25746          LA    1,1304(0,13)
000115B2 E3F0 C298 0004          00011068  25747          LG    15,@lit_2033_1411 ; mtx_lock
000115B8                                   25748 @@gen_label1998 DS    0H
000115B8 05EF                              25749          BALR  14,15
000115BA                                   25750 @@gen_label1999 DS    0H
000115BA 41F0 D418               00000418  25751          LA    15,1048(0,13)
000115BE E3F0 D518 0024          00000518  25752          STG   15,1304(0,13)
000115C4 E3F0 6100 0004          00000100  25753          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000115CA A719 1630               00001630  25754          LGHI  1,5680      ; 5680
000115CE E3F1 F000 0004          00000000  25755          LG    15,0(1,15)
000115D4 E3F0 D520 0024          00000520  25756          STG   15,1312(0,13)
000115DA E548 D528 0100          00000528  25757          MVGHI 1320(13),256
000115E0 4110 D518               00000518  25758          LA    1,1304(0,13)
000115E4 E3F0 C2A0 0004          00011070  25759          LG    15,@lit_2033_1413 ; rd_strlcpy
000115EA                                   25760 @@gen_label2000 DS    0H
000115EA 05EF                              25761          BALR  14,15
000115EC                                   25762 @@gen_label2001 DS    0H
000115EC E3F0 6100 0004          00000100  25763          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  511 
  Active Usings: @REGION_2033_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000115F2 41F3 F000               00000000  25764          LA    15,0(3,15)
000115F6 E3F0 D518 0024          00000518  25765          STG   15,1304(0,13)
000115FC 4110 D518               00000518  25766          LA    1,1304(0,13)
00011600 E3F0 C2A8 0004          00011078  25767          LG    15,@lit_2033_1415 ; mtx_unlock
00011606                                   25768 @@gen_label2002 DS    0H
00011606 05EF                              25769          BALR  14,15
00011608                                   25770 @@gen_label2003 DS    0H
00011608 E3F0 60B8 0015          000000B8  25771          LGH   15,184(0,6)
0001160E E3F0 D518 0024          00000518  25772          STG   15,1304(0,13)
00011614 4110 D518               00000518  25773          LA    1,1304(0,13)
00011618 E3F0 C2B0 0004          00011080  25774          LG    15,@lit_2033_1416 ; rd_kafka_ApiKey2str
0001161E                                   25775 @@gen_label2004 DS    0H
0001161E 05EF                              25776          BALR  14,15
00011620                                   25777 @@gen_label2005 DS    0H
00011620 B904 003F                         25778          LGR   3,15
00011624 41F0 6078               00000078  25779          LA    15,120(0,6)
00011628 E3F0 D518 0024          00000518  25780          STG   15,1304(0,13)
0001162E 4110 D518               00000518  25781          LA    1,1304(0,13)
00011632 E3F0 C2B8 0004          00011088  25782          LG    15,@lit_2033_1417 ; rd_slice_offset
00011638                                   25783 @@gen_label2006 DS    0H
00011638 05EF                              25784          BALR  14,15
0001163A                                   25785 @@gen_label2007 DS    0H
0001163A B904 004F                         25786          LGR   4,15
0001163E E380 6098 0004          00000098  25787          LG    8,152(0,6)  ; offset of end in rd_slice_s
00011644 41F0 6078               00000078  25788          LA    15,120(0,6)
00011648 E3F0 D518 0024          00000518  25789          STG   15,1304(0,13)
0001164E 4110 D518               00000518  25790          LA    1,1304(0,13)
00011652 E3F0 C270 0004          00011040  25791          LG    15,@lit_2033_1404 ; rd_slice_abs_offset
00011658                                   25792 @@gen_label2008 DS    0H
00011658 05EF                              25793          BALR  14,15
0001165A                                   25794 @@gen_label2009 DS    0H
0001165A B90B 008F                         25795          SLGR  8,15
0001165E E3F0 61E8 0002          000001E8  25796          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00011664 4780 C8A8               00011678  25797          BZ    @L1738
00011668 E3F0 61E8 0004          000001E8  25798          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0001166E E3C0 C2D0 001A          000110A0  25799          ALGF  12,@lit_region_diff_2033_1_2
                                           25800          DROP  12
                        00011688           25801          USING @REGION_2033_2,12
00011674 47F0 C000               00011688  25802          B     @L1739
                                           25803          DROP  12
                        00010DD0           25804          USING @REGION_2033_1,12
00011678                                   25805 @L1738   DS    0H
00011678 E3F0 C288 0004          00011058  25806          LG    15,@lit_2033_1405
0001167E 41F0 F5A0               000005A0  25807          LA    15,1440(0,15)
00011682 E3C0 C2D0 001A          000110A0  25808          ALGF  12,@lit_region_diff_2033_1_2
00011688                                   25809 @REGION_2033_2 DS 0H
                                           25810          DROP  12
                        00011688           25811          USING @REGION_2033_2,12
00011688                                   25812 @L1739   DS    0H
00011688 E310 6100 0004          00000100  25813          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  512 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001168E E310 1FD0 0004          00000FD0  25814          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00011694 4110 1210               00000210  25815          LA    1,528(0,1)
00011698 E310 D518 0024          00000518  25816          STG   1,1304(0,13)
0001169E E310 6100 0004          00000100  25817          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000116A4 E310 1FD0 0004          00000FD0  25818          LG    1,4048(0,1)
000116AA E310 D520 0024          00000520  25819          STG   1,1312(0,13)
000116B0 4110 D418               00000418  25820          LA    1,1048(0,13)
000116B4 E310 D528 0024          00000528  25821          STG   1,1320(0,13)
000116BA B914 0017                         25822          LGFR  1,7
000116BE E310 D530 0024          00000530  25823          STG   1,1328(0,13)
000116C4 D707 D538 D538 00000538 00000538  25824          XC    1336(8,13),1336(13)
000116CA E310 C0E8 0004          00011770  25825          LG    1,@lit_2033_1461
000116D0 4170 15C4               000005C4  25826          LA    7,1476(0,1)
000116D4 E370 D540 0024          00000540  25827          STG   7,1344(0,13)
000116DA 4110 15D0               000005D0  25828          LA    1,1488(0,1)
000116DE E310 D548 0024          00000548  25829          STG   1,1352(0,13)
000116E4 E330 D550 0024          00000550  25830          STG   3,1360(0,13)
000116EA 4810 60BA               000000BA  25831          LH    1,186(0,6)
000116EE B914 0011                         25832          LGFR  1,1
000116F2 E310 D558 0024          00000558  25833          STG   1,1368(0,13)
000116F8 E340 D560 0024          00000560  25834          STG   4,1376(0,13)
000116FE E310 6098 0004          00000098  25835          LG    1,152(0,6)  ; offset of end in rd_slice_s
00011704 E310 6090 000B          00000090  25836          SLG   1,144(0,6)
0001170A E310 D568 0024          00000568  25837          STG   1,1384(0,13)
00011710 E310 C0E0 0004          00011768  25838          LG    1,@lit_2033_1462
00011716 4110 13E4               000003E4  25839          LA    1,996(0,1)
0001171A E310 D570 0024          00000570  25840          STG   1,1392(0,13)
00011720 E548 D578 0B95          00000578  25841          MVGHI 1400(13),2965
00011726 D707 D580 D580 00000580 00000580  25842          XC    1408(8,13),1408(13)
0001172C E380 D588 0024          00000588  25843          STG   8,1416(0,13)
00011732 E3F0 D590 0024          00000590  25844          STG   15,1424(0,13)
00011738 41F0 D318               00000318  25845          LA    15,792(0,13)
0001173C E3F0 D598 0024          00000598  25846          STG   15,1432(0,13)
00011742 4110 D518               00000518  25847          LA    1,1304(0,13)
00011746 E3F0 C0D8 0004          00011760  25848          LG    15,@lit_2033_1463 ; rd_kafka_log0
0001174C                                   25849 @@gen_label2011 DS    0H
0001174C 05EF                              25850          BALR  14,15
0001174E                                   25851 @@gen_label2012 DS    0H
0001174E                                   25852 @L1729   DS    0H
0001174E E54C 6188 FF65          00000188  25853          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00011754 E3C0 C0F0 001A          00011778  25854          ALGF  12,@lit_region_diff_2033_2_4
                                           25855          DROP  12
                        000129F0           25856          USING @REGION_2033_4,12
0001175A 47F0 C816               00013206  25857          B     @_err_parse@2033@18
                                           25858          DROP  12
                        00011688           25859          USING @REGION_2033_2,12
00011760                                   25860          DS    0D
00011760 0000000000000000                  25861 @lit_2033_1463 DC AD(rd_kafka_log0)
00011768 0000000000014658                  25862 @lit_2033_1462 DC AD(@DATA)
00011770 0000000000014A98                  25863 @lit_2033_1461 DC AD(@strings@)
00011778 00001368                          25864 @lit_region_diff_2033_2_4  DC A(@REGION_2033_4-@REGION_2033_2)
0001177C 00000000
                                                                                                                           Page  513 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011780 0000000000000000                  25865 @lit_2033_1465 DC AD(rd_slice_read)
00011788 0000000000001730                  25866 @lit_2033_1466 DC AD(rd_slice_abs_offset)
00011790 0000000000000000                  25867 @lit_2033_1469 DC AD(rd_kafka_crash)
00011798 0000000000000000                  25868 @lit_2033_1471 DC AD(snprintf)
000117A0 0000000000000000                  25869 @lit_2033_1473 DC AD(mtx_lock)
000117A8 0000000000001BA8                  25870 @lit_2033_1475 DC AD(rd_strlcpy)
000117B0 0000000000000000                  25871 @lit_2033_1477 DC AD(mtx_unlock)
000117B8 0000000000001988                  25872 @lit_2033_1478 DC AD(rd_kafka_$Api$Key2str)
000117C0 00000000000017D8                  25873 @lit_2033_1479 DC AD(rd_slice_offset)
000117C8 0000000000000000                  25874 @lit_2033_1489 DC AD(rd_slice_ensure_contig)
000117D0 0000000000000000                  25875 @lit_2033_1509 DC AD(calloc)
000117D8 D200 8000 4000 00000000 00000000  25876 @lit_2033_1510          MVC 0(1,8),0(4)
000117DE 0000
000117E0 0000000000000238                  25877 @lit_2033_1511 DC AD(utf8_2_ebcdic)
000117E8 0000000000000000                  25878 @lit_2033_1512 DC AD(free)
000117F0 0000000000015A98                  25879 @lit_2033_1514 DC AD(@strings@+4096)
000117F8 000009C0                          25880 @lit_region_diff_2033_2_3  DC A(@REGION_2033_3-@REGION_2033_2)
000117FC                                   25881 @L1725   DS    0H
000117FC E3F0 D0C0 0004          000000C0  25882          LG    15,192(0,13) ; _v
00011802 E3F0 D0B8 0024          000000B8  25883          STG   15,184(0,13)
00011808 A7FA FFFF               0000FFFF  25884          AHI   15,-1
0001180C 50F0 D308               00000308  25885          ST    15,776(0,13)
00011810 183F                              25886          LR    3,15
00011812 47F0 C460               00011AE8  25887          B     @L1740
00011816                                   25888 @L1744   DS    0H
00011816 A739 0002               00000002  25889          LGHI  3,2         ; 2
0001181A 41F0 6078               00000078  25890          LA    15,120(0,6)
0001181E E3F0 D518 0024          00000518  25891          STG   15,1304(0,13)
00011824 41F0 D0C8               000000C8  25892          LA    15,200(0,13)
00011828 E3F0 D520 0024          00000520  25893          STG   15,1312(0,13)
0001182E E330 D528 0024          00000528  25894          STG   3,1320(0,13)
00011834 4110 D518               00000518  25895          LA    1,1304(0,13)
00011838 E3F0 C0F8 0004          00011780  25896          LG    15,@lit_2033_1465 ; rd_slice_read
0001183E                                   25897 @@gen_label2013 DS    0H
0001183E 05EF                              25898          BALR  14,15
00011840                                   25899 @@gen_label2014 DS    0H
00011840 B902 00FF                         25900          LTGR  15,15
00011844 4770 C442               00011ACA  25901          BNZ   @L1747
00011848                                   25902 @L1748   DS    0H
00011848 E340 6098 0004          00000098  25903          LG    4,152(0,6)  ; offset of end in rd_slice_s
0001184E 41F0 6078               00000078  25904          LA    15,120(0,6)
00011852 E3F0 D518 0024          00000518  25905          STG   15,1304(0,13)
00011858 4110 D518               00000518  25906          LA    1,1304(0,13)
0001185C E3F0 C100 0004          00011788  25907          LG    15,@lit_2033_1466 ; rd_slice_abs_offset
00011862                                   25908 @@gen_label2016 DS    0H
00011862 05EF                              25909          BALR  14,15
00011864                                   25910 @@gen_label2017 DS    0H
00011864 B90B 004F                         25911          SLGR  4,15
00011868 B921 0034                         25912          CLGR  3,4
0001186C 47D0 C442               00011ACA  25913          BNH   @L1751
00011870                                   25914 @L1752   DS    0H
00011870 1277                              25915          LTR   7,7
                                                                                                                           Page  514 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011872 47D0 C432               00011ABA  25916          BNH   @L1755
00011876                                   25917 @L1756   DS    0H
00011876 E3F0 6100 0002          00000100  25918          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0001187C 4770 C23A               000118C2  25919          BNZ   @L1759
00011880 E3F0 C0E8 0004          00011770  25920          LG    15,@lit_2033_1461
00011886 4110 F1B2               000001B2  25921          LA    1,434(0,15)
0001188A E310 D518 0024          00000518  25922          STG   1,1304(0,13)
00011890 E548 D520 0B95          00000520  25923          MVGHI 1312(13),2965
00011896 E310 C0E0 0004          00011768  25924          LG    1,@lit_2033_1462
0001189C 4110 13E4               000003E4  25925          LA    1,996(0,1)
000118A0 E310 D528 0024          00000528  25926          STG   1,1320(0,13)
000118A6 D707 D530 D530 00000530 00000530  25927          XC    1328(8,13),1328(13)
000118AC 41F0 F582               00000582  25928          LA    15,1410(0,15)
000118B0 E3F0 D538 0024          00000538  25929          STG   15,1336(0,13)
000118B6 4110 D518               00000518  25930          LA    1,1304(0,13)
000118BA E3F0 C108 0004          00011790  25931          LG    15,@lit_2033_1469 ; rd_kafka_crash
000118C0                                   25932 @@gen_label2021 DS    0H
000118C0 05EF                              25933          BALR  14,15
000118C2                                   25934 @@gen_label2022 DS    0H
000118C2                                   25935 @L1759   DS    0H
000118C2 41F0 D318               00000318  25936          LA    15,792(0,13)
000118C6 E3F0 D518 0024          00000518  25937          STG   15,1304(0,13)
000118CC E548 D520 0100          00000520  25938          MVGHI 1312(13),256
000118D2 E3F0 C0E8 0004          00011770  25939          LG    15,@lit_2033_1461
000118D8 41F0 F59C               0000059C  25940          LA    15,1436(0,15)
000118DC E3F0 D528 0024          00000528  25941          STG   15,1320(0,13)
000118E2 4110 D518               00000518  25942          LA    1,1304(0,13)
000118E6 E3F0 C110 0004          00011798  25943          LG    15,@lit_2033_1471 ; snprintf
000118EC                                   25944 @@gen_label2023 DS    0H
000118EC 05EF                              25945          BALR  14,15
000118EE                                   25946 @@gen_label2024 DS    0H
000118EE 41F0 D318               00000318  25947          LA    15,792(0,13)
000118F2 B904 001F                         25948          LGR   1,15
000118F6 A709 0000               00000000  25949          LGHI  0,0
000118FA                                   25950 @@gen_label2025 DS 0H
000118FA B25E 000F                         25951          SRST  0,15
000118FE 4710 C272               000118FA  25952          BC  1,@@gen_label2025
00011902 B90B 0001                         25953          SLGR  0,1
00011906 A70F 0002               00000002  25954          CGHI  0,2
0001190A 4770 C28A               00011912  25955          BNE   @L1761
0001190E 9200 D318      00000318 00000000  25956          MVI   792(13),0
00011912                                   25957 @L1760   DS    0H
00011912                                   25958 @L1761   DS    0H
00011912 E3F0 6100 0004          00000100  25959          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011918 A749 1638               00001638  25960          LGHI  4,5688      ; 5688
0001191C 41F4 F000               00000000  25961          LA    15,0(4,15)
00011920 E3F0 D518 0024          00000518  25962          STG   15,1304(0,13)
00011926 4110 D518               00000518  25963          LA    1,1304(0,13)
0001192A E3F0 C118 0004          000117A0  25964          LG    15,@lit_2033_1473 ; mtx_lock
00011930                                   25965 @@gen_label2027 DS    0H
00011930 05EF                              25966          BALR  14,15
00011932                                   25967 @@gen_label2028 DS    0H
                                                                                                                           Page  515 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011932 41F0 D418               00000418  25968          LA    15,1048(0,13)
00011936 E3F0 D518 0024          00000518  25969          STG   15,1304(0,13)
0001193C E3F0 6100 0004          00000100  25970          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011942 A719 1630               00001630  25971          LGHI  1,5680      ; 5680
00011946 E3F1 F000 0004          00000000  25972          LG    15,0(1,15)
0001194C E3F0 D520 0024          00000520  25973          STG   15,1312(0,13)
00011952 E548 D528 0100          00000528  25974          MVGHI 1320(13),256
00011958 4110 D518               00000518  25975          LA    1,1304(0,13)
0001195C E3F0 C120 0004          000117A8  25976          LG    15,@lit_2033_1475 ; rd_strlcpy
00011962                                   25977 @@gen_label2029 DS    0H
00011962 05EF                              25978          BALR  14,15
00011964                                   25979 @@gen_label2030 DS    0H
00011964 E3F0 6100 0004          00000100  25980          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0001196A 41F4 F000               00000000  25981          LA    15,0(4,15)
0001196E E3F0 D518 0024          00000518  25982          STG   15,1304(0,13)
00011974 4110 D518               00000518  25983          LA    1,1304(0,13)
00011978 E3F0 C128 0004          000117B0  25984          LG    15,@lit_2033_1477 ; mtx_unlock
0001197E                                   25985 @@gen_label2031 DS    0H
0001197E 05EF                              25986          BALR  14,15
00011980                                   25987 @@gen_label2032 DS    0H
00011980 E3F0 60B8 0015          000000B8  25988          LGH   15,184(0,6)
00011986 E3F0 D518 0024          00000518  25989          STG   15,1304(0,13)
0001198C 4110 D518               00000518  25990          LA    1,1304(0,13)
00011990 E3F0 C130 0004          000117B8  25991          LG    15,@lit_2033_1478 ; rd_kafka_ApiKey2str
00011996                                   25992 @@gen_label2033 DS    0H
00011996 05EF                              25993          BALR  14,15
00011998                                   25994 @@gen_label2034 DS    0H
00011998 B904 004F                         25995          LGR   4,15
0001199C 41F0 6078               00000078  25996          LA    15,120(0,6)
000119A0 E3F0 D518 0024          00000518  25997          STG   15,1304(0,13)
000119A6 4110 D518               00000518  25998          LA    1,1304(0,13)
000119AA E3F0 C138 0004          000117C0  25999          LG    15,@lit_2033_1479 ; rd_slice_offset
000119B0                                   26000 @@gen_label2035 DS    0H
000119B0 05EF                              26001          BALR  14,15
000119B2                                   26002 @@gen_label2036 DS    0H
000119B2 B904 008F                         26003          LGR   8,15
000119B6 E390 6098 0004          00000098  26004          LG    9,152(0,6)  ; offset of end in rd_slice_s
000119BC 41F0 6078               00000078  26005          LA    15,120(0,6)
000119C0 E3F0 D518 0024          00000518  26006          STG   15,1304(0,13)
000119C6 4110 D518               00000518  26007          LA    1,1304(0,13)
000119CA E3F0 C100 0004          00011788  26008          LG    15,@lit_2033_1466 ; rd_slice_abs_offset
000119D0                                   26009 @@gen_label2037 DS    0H
000119D0 05EF                              26010          BALR  14,15
000119D2                                   26011 @@gen_label2038 DS    0H
000119D2 B90B 009F                         26012          SLGR  9,15
000119D6 E3F0 61E8 0002          000001E8  26013          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000119DC 4780 C362               000119EA  26014          BZ    @L1764
000119E0 E3F0 61E8 0004          000001E8  26015          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000119E6 47F0 C36C               000119F4  26016          B     @L1765
000119EA                                   26017 @L1764   DS    0H
                                                                                                                           Page  516 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000119EA E3F0 C0E8 0004          00011770  26018          LG    15,@lit_2033_1461
000119F0 41F0 F5A0               000005A0  26019          LA    15,1440(0,15)
000119F4                                   26020 @L1765   DS    0H
000119F4 E310 6100 0004          00000100  26021          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000119FA E310 1FD0 0004          00000FD0  26022          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00011A00 4110 1210               00000210  26023          LA    1,528(0,1)
00011A04 E310 D518 0024          00000518  26024          STG   1,1304(0,13)
00011A0A E310 6100 0004          00000100  26025          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00011A10 E310 1FD0 0004          00000FD0  26026          LG    1,4048(0,1)
00011A16 E310 D520 0024          00000520  26027          STG   1,1312(0,13)
00011A1C 4110 D418               00000418  26028          LA    1,1048(0,13)
00011A20 E310 D528 0024          00000528  26029          STG   1,1320(0,13)
00011A26 B914 0017                         26030          LGFR  1,7
00011A2A E310 D530 0024          00000530  26031          STG   1,1328(0,13)
00011A30 D707 D538 D538 00000538 00000538  26032          XC    1336(8,13),1336(13)
00011A36 E310 C0E8 0004          00011770  26033          LG    1,@lit_2033_1461
00011A3C 4170 15C4               000005C4  26034          LA    7,1476(0,1)
00011A40 E370 D540 0024          00000540  26035          STG   7,1344(0,13)
00011A46 4110 15D0               000005D0  26036          LA    1,1488(0,1)
00011A4A E310 D548 0024          00000548  26037          STG   1,1352(0,13)
00011A50 E340 D550 0024          00000550  26038          STG   4,1360(0,13)
00011A56 4810 60BA               000000BA  26039          LH    1,186(0,6)
00011A5A B914 0011                         26040          LGFR  1,1
00011A5E E310 D558 0024          00000558  26041          STG   1,1368(0,13)
00011A64 E380 D560 0024          00000560  26042          STG   8,1376(0,13)
00011A6A E310 6098 0004          00000098  26043          LG    1,152(0,6)  ; offset of end in rd_slice_s
00011A70 E310 6090 000B          00000090  26044          SLG   1,144(0,6)
00011A76 E310 D568 0024          00000568  26045          STG   1,1384(0,13)
00011A7C E310 C0E0 0004          00011768  26046          LG    1,@lit_2033_1462
00011A82 4110 13E4               000003E4  26047          LA    1,996(0,1)
00011A86 E310 D570 0024          00000570  26048          STG   1,1392(0,13)
00011A8C E548 D578 0B95          00000578  26049          MVGHI 1400(13),2965
00011A92 E330 D580 0024          00000580  26050          STG   3,1408(0,13)
00011A98 E390 D588 0024          00000588  26051          STG   9,1416(0,13)
00011A9E E3F0 D590 0024          00000590  26052          STG   15,1424(0,13)
00011AA4 41F0 D318               00000318  26053          LA    15,792(0,13)
00011AA8 E3F0 D598 0024          00000598  26054          STG   15,1432(0,13)
00011AAE 4110 D518               00000518  26055          LA    1,1304(0,13)
00011AB2 E3F0 C0D8 0004          00011760  26056          LG    15,@lit_2033_1463 ; rd_kafka_log0
00011AB8                                   26057 @@gen_label2040 DS    0H
00011AB8 05EF                              26058          BALR  14,15
00011ABA                                   26059 @@gen_label2041 DS    0H
00011ABA                                   26060 @L1755   DS    0H
00011ABA E54C 6188 FF65          00000188  26061          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00011AC0 E3C0 C0F0 001A          00011778  26062          ALGF  12,@lit_region_diff_2033_2_4
                                           26063          DROP  12
                        000129F0           26064          USING @REGION_2033_4,12
00011AC6 47F0 C816               00013206  26065          B     @_err_parse@2033@18
                                           26066          DROP  12
                        00011688           26067          USING @REGION_2033_2,12
00011ACA                                   26068 @L1751   DS    0H
00011ACA                                   26069 @L1747   DS    0H
                                                                                                                           Page  517 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011ACA 48F0 D0C8               000000C8  26070          LH    15,200(0,13) ; _v
00011ACE 50F0 D308               00000308  26071          ST    15,776(0,13)
00011AD2 E55C D308 FFFF          00000308  26072          CHSI  776(13),-1
00011AD8 4770 C45C               00011AE4  26073          BNE   @L1766
00011ADC A738 0000               00000000  26074          LHI   3,0         ; 0
00011AE0 47F0 C460               00011AE8  26075          B     @L1767
00011AE4                                   26076 @L1766   DS    0H
00011AE4 5830 D308               00000308  26077          L     3,776(0,13)
00011AE8                                   26078 @L1767   DS    0H
00011AE8                                   26079 @L1740   DS    0H
00011AE8 E55C D308 FFFF          00000308  26080          CHSI  776(13),-1
00011AEE 4770 C478               00011B00  26081          BNE   @L1768
00011AF2 A7F9 0000               00000000  26082          LGHI  15,0        ; 0
00011AF6 E3F0 D310 0024          00000310  26083          STG   15,784(0,13) ; offset of str in rd_kafkap_str_s
00011AFC 47F0 C75C               00011DE4  26084          B     @L1769
00011B00                                   26085 @L1768   DS    0H
00011B00 E55C D308 FFFF          00000308  26086          CHSI  776(13),-1
00011B06 4770 C48A               00011B12  26087          BNE   @L1770
00011B0A A7F8 0000               00000000  26088          LHI   15,0        ; 0
00011B0E 47F0 C48E               00011B16  26089          B     @L1771
00011B12                                   26090 @L1770   DS    0H
00011B12 58F0 D308               00000308  26091          L     15,776(0,13)
00011B16                                   26092 @L1771   DS    0H
00011B16 12FF                              26093          LTR   15,15
00011B18 4770 C4A8               00011B30  26094          BNE   @L1772
00011B1C E3F0 C0E8 0004          00011770  26095          LG    15,@lit_2033_1461
00011B22 41F0 F3C4               000003C4  26096          LA    15,964(0,15)
00011B26 E3F0 D310 0024          00000310  26097          STG   15,784(0,13) ; offset of str in rd_kafkap_str_s
00011B2C 47F0 C75C               00011DE4  26098          B     @L1769
00011B30                                   26099 @L1772   DS    0H
00011B30 41F0 6078               00000078  26100          LA    15,120(0,6)
00011B34 E3F0 D518 0024          00000518  26101          STG   15,1304(0,13)
00011B3A B914 00F3                         26102          LGFR  15,3
00011B3E E3F0 D520 0024          00000520  26103          STG   15,1312(0,13)
00011B44 4110 D518               00000518  26104          LA    1,1304(0,13)
00011B48 E3F0 C140 0004          000117C8  26105          LG    15,@lit_2033_1489 ; rd_slice_ensure_contig
00011B4E                                   26106 @@gen_label2046 DS    0H
00011B4E 05EF                              26107          BALR  14,15
00011B50                                   26108 @@gen_label2047 DS    0H
00011B50 E3F0 D310 0024          00000310  26109          STG   15,784(0,13)
00011B56 B902 00FF                         26110          LTGR  15,15
00011B5A 4770 C75C               00011DE4  26111          BNZ   @L1769
00011B5E                                   26112 @L1775   DS    0H
00011B5E B914 0033                         26113          LGFR  3,3
00011B62 E340 6098 0004          00000098  26114          LG    4,152(0,6)  ; offset of end in rd_slice_s
00011B68 41F0 6078               00000078  26115          LA    15,120(0,6)
00011B6C E3F0 D518 0024          00000518  26116          STG   15,1304(0,13)
00011B72 4110 D518               00000518  26117          LA    1,1304(0,13)
00011B76 E3F0 C100 0004          00011788  26118          LG    15,@lit_2033_1466 ; rd_slice_abs_offset
00011B7C                                   26119 @@gen_label2049 DS    0H
00011B7C 05EF                              26120          BALR  14,15
00011B7E                                   26121 @@gen_label2050 DS    0H
                                                                                                                           Page  518 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011B7E B90B 004F                         26122          SLGR  4,15
00011B82 B921 0034                         26123          CLGR  3,4
00011B86 47D0 C75C               00011DE4  26124          BNH   @L1778
00011B8A                                   26125 @L1779   DS    0H
00011B8A 1277                              26126          LTR   7,7
00011B8C 47D0 C74C               00011DD4  26127          BNH   @L1782
00011B90                                   26128 @L1783   DS    0H
00011B90 E3F0 6100 0002          00000100  26129          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011B96 4770 C554               00011BDC  26130          BNZ   @L1786
00011B9A E3F0 C0E8 0004          00011770  26131          LG    15,@lit_2033_1461
00011BA0 4110 F1B2               000001B2  26132          LA    1,434(0,15)
00011BA4 E310 D518 0024          00000518  26133          STG   1,1304(0,13)
00011BAA E548 D520 0B95          00000520  26134          MVGHI 1312(13),2965
00011BB0 E310 C0E0 0004          00011768  26135          LG    1,@lit_2033_1462
00011BB6 4110 13E4               000003E4  26136          LA    1,996(0,1)
00011BBA E310 D528 0024          00000528  26137          STG   1,1320(0,13)
00011BC0 D707 D530 D530 00000530 00000530  26138          XC    1328(8,13),1328(13)
00011BC6 41F0 F582               00000582  26139          LA    15,1410(0,15)
00011BCA E3F0 D538 0024          00000538  26140          STG   15,1336(0,13)
00011BD0 4110 D518               00000518  26141          LA    1,1304(0,13)
00011BD4 E3F0 C108 0004          00011790  26142          LG    15,@lit_2033_1469 ; rd_kafka_crash
00011BDA                                   26143 @@gen_label2054 DS    0H
00011BDA 05EF                              26144          BALR  14,15
00011BDC                                   26145 @@gen_label2055 DS    0H
00011BDC                                   26146 @L1786   DS    0H
00011BDC 41F0 D318               00000318  26147          LA    15,792(0,13)
00011BE0 E3F0 D518 0024          00000518  26148          STG   15,1304(0,13)
00011BE6 E548 D520 0100          00000520  26149          MVGHI 1312(13),256
00011BEC E3F0 C0E8 0004          00011770  26150          LG    15,@lit_2033_1461
00011BF2 41F0 F59C               0000059C  26151          LA    15,1436(0,15)
00011BF6 E3F0 D528 0024          00000528  26152          STG   15,1320(0,13)
00011BFC 4110 D518               00000518  26153          LA    1,1304(0,13)
00011C00 E3F0 C110 0004          00011798  26154          LG    15,@lit_2033_1471 ; snprintf
00011C06                                   26155 @@gen_label2056 DS    0H
00011C06 05EF                              26156          BALR  14,15
00011C08                                   26157 @@gen_label2057 DS    0H
00011C08 41F0 D318               00000318  26158          LA    15,792(0,13)
00011C0C B904 001F                         26159          LGR   1,15
00011C10 A709 0000               00000000  26160          LGHI  0,0
00011C14                                   26161 @@gen_label2058 DS 0H
00011C14 B25E 000F                         26162          SRST  0,15
00011C18 4710 C58C               00011C14  26163          BC  1,@@gen_label2058
00011C1C B90B 0001                         26164          SLGR  0,1
00011C20 A70F 0002               00000002  26165          CGHI  0,2
00011C24 4770 C5A4               00011C2C  26166          BNE   @L1788
00011C28 9200 D318      00000318 00000000  26167          MVI   792(13),0
00011C2C                                   26168 @L1787   DS    0H
00011C2C                                   26169 @L1788   DS    0H
00011C2C E3F0 6100 0004          00000100  26170          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011C32 A749 1638               00001638  26171          LGHI  4,5688      ; 5688
00011C36 41F4 F000               00000000  26172          LA    15,0(4,15)
00011C3A E3F0 D518 0024          00000518  26173          STG   15,1304(0,13)
                                                                                                                           Page  519 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011C40 4110 D518               00000518  26174          LA    1,1304(0,13)
00011C44 E3F0 C118 0004          000117A0  26175          LG    15,@lit_2033_1473 ; mtx_lock
00011C4A                                   26176 @@gen_label2060 DS    0H
00011C4A 05EF                              26177          BALR  14,15
00011C4C                                   26178 @@gen_label2061 DS    0H
00011C4C 41F0 D418               00000418  26179          LA    15,1048(0,13)
00011C50 E3F0 D518 0024          00000518  26180          STG   15,1304(0,13)
00011C56 E3F0 6100 0004          00000100  26181          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011C5C A719 1630               00001630  26182          LGHI  1,5680      ; 5680
00011C60 E3F1 F000 0004          00000000  26183          LG    15,0(1,15)
00011C66 E3F0 D520 0024          00000520  26184          STG   15,1312(0,13)
00011C6C E548 D528 0100          00000528  26185          MVGHI 1320(13),256
00011C72 4110 D518               00000518  26186          LA    1,1304(0,13)
00011C76 E3F0 C120 0004          000117A8  26187          LG    15,@lit_2033_1475 ; rd_strlcpy
00011C7C                                   26188 @@gen_label2062 DS    0H
00011C7C 05EF                              26189          BALR  14,15
00011C7E                                   26190 @@gen_label2063 DS    0H
00011C7E E3F0 6100 0004          00000100  26191          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011C84 41F4 F000               00000000  26192          LA    15,0(4,15)
00011C88 E3F0 D518 0024          00000518  26193          STG   15,1304(0,13)
00011C8E 4110 D518               00000518  26194          LA    1,1304(0,13)
00011C92 E3F0 C128 0004          000117B0  26195          LG    15,@lit_2033_1477 ; mtx_unlock
00011C98                                   26196 @@gen_label2064 DS    0H
00011C98 05EF                              26197          BALR  14,15
00011C9A                                   26198 @@gen_label2065 DS    0H
00011C9A E3F0 60B8 0015          000000B8  26199          LGH   15,184(0,6)
00011CA0 E3F0 D518 0024          00000518  26200          STG   15,1304(0,13)
00011CA6 4110 D518               00000518  26201          LA    1,1304(0,13)
00011CAA E3F0 C130 0004          000117B8  26202          LG    15,@lit_2033_1478 ; rd_kafka_ApiKey2str
00011CB0                                   26203 @@gen_label2066 DS    0H
00011CB0 05EF                              26204          BALR  14,15
00011CB2                                   26205 @@gen_label2067 DS    0H
00011CB2 B904 004F                         26206          LGR   4,15
00011CB6 41F0 6078               00000078  26207          LA    15,120(0,6)
00011CBA E3F0 D518 0024          00000518  26208          STG   15,1304(0,13)
00011CC0 4110 D518               00000518  26209          LA    1,1304(0,13)
00011CC4 E3F0 C138 0004          000117C0  26210          LG    15,@lit_2033_1479 ; rd_slice_offset
00011CCA                                   26211 @@gen_label2068 DS    0H
00011CCA 05EF                              26212          BALR  14,15
00011CCC                                   26213 @@gen_label2069 DS    0H
00011CCC B904 008F                         26214          LGR   8,15
00011CD0 E390 6098 0004          00000098  26215          LG    9,152(0,6)  ; offset of end in rd_slice_s
00011CD6 41F0 6078               00000078  26216          LA    15,120(0,6)
00011CDA E3F0 D518 0024          00000518  26217          STG   15,1304(0,13)
00011CE0 4110 D518               00000518  26218          LA    1,1304(0,13)
00011CE4 E3F0 C100 0004          00011788  26219          LG    15,@lit_2033_1466 ; rd_slice_abs_offset
00011CEA                                   26220 @@gen_label2070 DS    0H
00011CEA 05EF                              26221          BALR  14,15
00011CEC                                   26222 @@gen_label2071 DS    0H
00011CEC B90B 009F                         26223          SLGR  9,15
00011CF0 E3F0 61E8 0002          000001E8  26224          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
                                                                                                                           Page  520 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011CF6 4780 C67C               00011D04  26225          BZ    @L1791
00011CFA E3F0 61E8 0004          000001E8  26226          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00011D00 47F0 C686               00011D0E  26227          B     @L1792
00011D04                                   26228 @L1791   DS    0H
00011D04 E3F0 C0E8 0004          00011770  26229          LG    15,@lit_2033_1461
00011D0A 41F0 F5A0               000005A0  26230          LA    15,1440(0,15)
00011D0E                                   26231 @L1792   DS    0H
00011D0E E310 6100 0004          00000100  26232          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00011D14 E310 1FD0 0004          00000FD0  26233          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00011D1A 4110 1210               00000210  26234          LA    1,528(0,1)
00011D1E E310 D518 0024          00000518  26235          STG   1,1304(0,13)
00011D24 E310 6100 0004          00000100  26236          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00011D2A E310 1FD0 0004          00000FD0  26237          LG    1,4048(0,1)
00011D30 E310 D520 0024          00000520  26238          STG   1,1312(0,13)
00011D36 4110 D418               00000418  26239          LA    1,1048(0,13)
00011D3A E310 D528 0024          00000528  26240          STG   1,1320(0,13)
00011D40 B914 0017                         26241          LGFR  1,7
00011D44 E310 D530 0024          00000530  26242          STG   1,1328(0,13)
00011D4A D707 D538 D538 00000538 00000538  26243          XC    1336(8,13),1336(13)
00011D50 E310 C0E8 0004          00011770  26244          LG    1,@lit_2033_1461
00011D56 4170 15C4               000005C4  26245          LA    7,1476(0,1)
00011D5A E370 D540 0024          00000540  26246          STG   7,1344(0,13)
00011D60 4110 15D0               000005D0  26247          LA    1,1488(0,1)
00011D64 E310 D548 0024          00000548  26248          STG   1,1352(0,13)
00011D6A E340 D550 0024          00000550  26249          STG   4,1360(0,13)
00011D70 4810 60BA               000000BA  26250          LH    1,186(0,6)
00011D74 B914 0011                         26251          LGFR  1,1
00011D78 E310 D558 0024          00000558  26252          STG   1,1368(0,13)
00011D7E E380 D560 0024          00000560  26253          STG   8,1376(0,13)
00011D84 E310 6098 0004          00000098  26254          LG    1,152(0,6)  ; offset of end in rd_slice_s
00011D8A E310 6090 000B          00000090  26255          SLG   1,144(0,6)
00011D90 E310 D568 0024          00000568  26256          STG   1,1384(0,13)
00011D96 E310 C0E0 0004          00011768  26257          LG    1,@lit_2033_1462
00011D9C 4110 13E4               000003E4  26258          LA    1,996(0,1)
00011DA0 E310 D570 0024          00000570  26259          STG   1,1392(0,13)
00011DA6 E548 D578 0B95          00000578  26260          MVGHI 1400(13),2965
00011DAC E330 D580 0024          00000580  26261          STG   3,1408(0,13)
00011DB2 E390 D588 0024          00000588  26262          STG   9,1416(0,13)
00011DB8 E3F0 D590 0024          00000590  26263          STG   15,1424(0,13)
00011DBE 41F0 D318               00000318  26264          LA    15,792(0,13)
00011DC2 E3F0 D598 0024          00000598  26265          STG   15,1432(0,13)
00011DC8 4110 D518               00000518  26266          LA    1,1304(0,13)
00011DCC E3F0 C0D8 0004          00011760  26267          LG    15,@lit_2033_1463 ; rd_kafka_log0
00011DD2                                   26268 @@gen_label2073 DS    0H
00011DD2 05EF                              26269          BALR  14,15
00011DD4                                   26270 @@gen_label2074 DS    0H
00011DD4                                   26271 @L1782   DS    0H
00011DD4 E54C 6188 FF65          00000188  26272          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00011DDA E3C0 C0F0 001A          00011778  26273          ALGF  12,@lit_region_diff_2033_2_4
                                           26274          DROP  12
                        000129F0           26275          USING @REGION_2033_4,12
                                                                                                                           Page  521 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011DE0 47F0 C816               00013206  26276          B     @_err_parse@2033@18
                                           26277          DROP  12
                        00011688           26278          USING @REGION_2033_2,12
00011DE4                                   26279 @L1778   DS    0H
00011DE4                                   26280 @L1774   DS    0H
00011DE4                                   26281 @L1773   DS    0H
00011DE4                                   26282 @L1769   DS    0H
00011DE4 E55C D308 0000          00000308  26283          CHSI  776(13),0
00011DEA 47D0 C820               00011EA8  26284          BNH   @L1793
00011DEE E548 D518 0001          00000518  26285          MVGHI 1304(13),1
00011DF4 E3F0 D308 0014          00000308  26286          LGF   15,776(0,13)
00011DFA E3F0 D520 0024          00000520  26287          STG   15,1312(0,13)
00011E00 4110 D518               00000518  26288          LA    1,1304(0,13)
00011E04 E3F0 C148 0004          000117D0  26289          LG    15,@lit_2033_1509 ; calloc
00011E0A                                   26290 @@gen_label2076 DS    0H
00011E0A 05EF                              26291          BALR  14,15
00011E0C                                   26292 @@gen_label2077 DS    0H
00011E0C B904 003F                         26293          LGR   3,15
00011E10 E310 D308 0014          00000308  26294          LGF   1,776(0,13)
00011E16 E340 D310 0004          00000310  26295          LG    4,784(0,13)
00011E1C B904 0083                         26296          LGR   8,3
00011E20 B902 00F1                         26297          LTGR  15,1
00011E24 4780 C7CA               00011E52  26298          BZ    @@gen_label2080
00011E28 A7FB FFFF               0000FFFF  26299          AGHI  15,-1
00011E2C EB1F 0008 000A          00000008  26300          SRAG  1,15,8(0)
00011E32 B902 0011                         26301          LTGR  1,1
00011E36 4780 C7C6               00011E4E  26302          BZ    @@gen_label2079
00011E3A                                   26303 @@gen_label2078 DS 0H
00011E3A D2FF 8000 4000 00000000 00000000  26304          MVC   0(256,8),0(4)
00011E40 4180 8100               00000100  26305          LA    8,256(0,8)
00011E44 4140 4100               00000100  26306          LA    4,256(0,4)
00011E48 E310 C7B2 0046          00011E3A  26307          BCTG  1,@@gen_label2078
00011E4E                                   26308 @@gen_label2079 DS 0H
00011E4E 44F0 C150               000117D8  26309          EX    15,@lit_2033_1510
00011E52                                   26310 @@gen_label2080 DS 0H
00011E52 E3F0 D308 0014          00000308  26311          LGF   15,776(0,13)
00011E58 E3F0 D320 0024          00000320  26312          STG   15,800(0,13) ; ulen
00011E5E E3F0 D318 0024          00000318  26313          STG   15,792(0,13) ; alen
00011E64 E3F0 D310 0004          00000310  26314          LG    15,784(0,13)
00011E6A E3F0 D518 0024          00000518  26315          STG   15,1304(0,13)
00011E70 41F0 D318               00000318  26316          LA    15,792(0,13)
00011E74 E3F0 D520 0024          00000520  26317          STG   15,1312(0,13)
00011E7A E330 D528 0024          00000528  26318          STG   3,1320(0,13)
00011E80 41F0 D320               00000320  26319          LA    15,800(0,13)
00011E84 E3F0 D530 0024          00000530  26320          STG   15,1328(0,13)
00011E8A 4110 D518               00000518  26321          LA    1,1304(0,13)
00011E8E E3F0 C158 0004          000117E0  26322          LG    15,@lit_2033_1511 ; utf8_2_ebcdic
00011E94                                   26323 @@gen_label2081 DS    0H
00011E94 05EF                              26324          BALR  14,15
00011E96                                   26325 @@gen_label2082 DS    0H
00011E96 E330 D518 0024          00000518  26326          STG   3,1304(0,13)
00011E9C 4110 D518               00000518  26327          LA    1,1304(0,13)
                                                                                                                           Page  522 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011EA0 E3F0 C160 0004          000117E8  26328          LG    15,@lit_2033_1512 ; free
00011EA6                                   26329 @@gen_label2083 DS    0H
00011EA6 05EF                              26330          BALR  14,15
00011EA8                                   26331 @@gen_label2084 DS    0H
00011EA8                                   26332 @L1793   DS    0H
                                           26333 * ***                   if (ErrorCode)
00011EA8 48F0 D300               00000300  26334          LH    15,768(0,13) ; ErrorCode
00011EAC 12FF                              26335          LTR   15,15
00011EAE 4780 C882               00011F0A  26336          BZ    @L1794
                                           26337 * ***                           snprintf(errstr, sizeof(errstr), "%.*s\
                                           26338 * ", (int)((&ErrorMsg)->len == -1 ? 0 : (&ErrorMsg)->len), (&ErrorMsg)\
                                           26339 * ->str);
00011EB2 E55C D308 FFFF          00000308  26340          CHSI  776(13),-1
00011EB8 4770 C83C               00011EC4  26341          BNE   @L1795
00011EBC A7F8 0000               00000000  26342          LHI   15,0        ; 0
00011EC0 47F0 C840               00011EC8  26343          B     @L1796
00011EC4                                   26344 @L1795   DS    0H
00011EC4 58F0 D308               00000308  26345          L     15,776(0,13)
00011EC8                                   26346 @L1796   DS    0H
00011EC8 4110 D0E8               000000E8  26347          LA    1,232(0,13)
00011ECC E310 D518 0024          00000518  26348          STG   1,1304(0,13)
00011ED2 E548 D520 0200          00000520  26349          MVGHI 1312(13),512
00011ED8 E310 C168 0004          000117F0  26350          LG    1,@lit_2033_1514
00011EDE 4110 12F8               000002F8  26351          LA    1,760(0,1)
00011EE2 E310 D528 0024          00000528  26352          STG   1,1320(0,13)
00011EE8 B914 00FF                         26353          LGFR  15,15
00011EEC E3F0 D530 0024          00000530  26354          STG   15,1328(0,13)
00011EF2 E3F0 D310 0004          00000310  26355          LG    15,784(0,13)
00011EF8 E3F0 D538 0024          00000538  26356          STG   15,1336(0,13)
00011EFE 4110 D518               00000518  26357          LA    1,1304(0,13)
00011F02 E3F0 C110 0004          00011798  26358          LG    15,@lit_2033_1471 ; snprintf
00011F08                                   26359 @@gen_label2087 DS    0H
00011F08 05EF                              26360          BALR  14,15
00011F0A                                   26361 @@gen_label2088 DS    0H
00011F0A                                   26362 @L1794   DS    0H
                                           26363 * ***
                                           26364 * ***           }
00011F0A                                   26365 @L1717   DS    0H
                                           26366 * ***
                                           26367 * ***           if ((err = ErrorCode))
00011F0A 4830 D300               00000300  26368          LH    3,768(0,13) ; ErrorCode
00011F0E 1233                              26369          LTR   3,3
00011F10 4780 C896               00011F1E  26370          BZ    @L1801
                                           26371 * ***                   goto err;
00011F14 E3C0 C0F0 001A          00011778  26372          ALGF  12,@lit_region_diff_2033_2_4
                                           26373          DROP  12
                        000129F0           26374          USING @REGION_2033_4,12
00011F1A 47F0 C932               00013322  26375          B     @L1941
                                           26376          DROP  12
                        00011688           26377          USING @REGION_2033_2,12
                                           26378 * ***
                                           26379 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                                                                                                           Page  523 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           26380 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           26381 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           26382 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           26383 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           26384 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",2974, _\
                                           26385 * _FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while \
                                           26386 * (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": ");\
                                           26387 *  if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname\
                                           26388 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                           26389 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                           26390 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                           26391 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                           26392 * decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " \
                                           26393 * "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" \
                                           26394 * " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(\
                                           26395 * rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_sli\
                                           26396 * ce_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rk\
                                           26397 * buf->rkbuf_reader)->start), __FUNCTION__, 2974, __len0, ((&rkbuf->rk\
                                           26398 * buf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf\
                                           26399 * ->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrec\
                                           26400 * t broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbu\
                                           26401 * f_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); }\
                                           26402 *  } while (0); } while (0); *(&NodeId) = (_v); } while (0);
00011F1E                                   26403 @L1801   DS    0H
00011F1E A749 0004               00000004  26404          LGHI  4,4         ; 4
00011F22 41F0 6078               00000078  26405          LA    15,120(0,6)
00011F26 E3F0 D518 0024          00000518  26406          STG   15,1304(0,13)
00011F2C 41F0 D0CC               000000CC  26407          LA    15,204(0,13)
00011F30 E3F0 D520 0024          00000520  26408          STG   15,1312(0,13)
00011F36 E340 D528 0024          00000528  26409          STG   4,1320(0,13)
00011F3C 4110 D518               00000518  26410          LA    1,1304(0,13)
00011F40 E3F0 C0F8 0004          00011780  26411          LG    15,@lit_2033_1465 ; rd_slice_read
00011F46                                   26412 @@gen_label2090 DS    0H
00011F46 05EF                              26413          BALR  14,15
00011F48                                   26414 @@gen_label2091 DS    0H
00011F48 B902 00FF                         26415          LTGR  15,15
00011F4C 4780 C8D2               00011F5A  26416          BZ    *+14  Around region break
00011F50 E3C0 C170 001A          000117F8  26417          ALGF  12,@lit_region_diff_2033_2_3
                                           26418          DROP  12
                        00012048           26419          USING @REGION_2033_3,12
00011F56 47F0 C230               00012278  26420          B     @L1804
                                           26421          DROP  12
                        00011688           26422          USING @REGION_2033_2,12
00011F5A                                   26423 @L1805   DS    0H
00011F5A E380 6098 0004          00000098  26424          LG    8,152(0,6)  ; offset of end in rd_slice_s
00011F60 41F0 6078               00000078  26425          LA    15,120(0,6)
00011F64 E3F0 D518 0024          00000518  26426          STG   15,1304(0,13)
00011F6A 4110 D518               00000518  26427          LA    1,1304(0,13)
00011F6E E3F0 C100 0004          00011788  26428          LG    15,@lit_2033_1466 ; rd_slice_abs_offset
00011F74                                   26429 @@gen_label2093 DS    0H
00011F74 05EF                              26430          BALR  14,15
00011F76                                   26431 @@gen_label2094 DS    0H
                                                                                                                           Page  524 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00011F76 B90B 008F                         26432          SLGR  8,15
00011F7A B921 0048                         26433          CLGR  4,8
00011F7E 4720 C904               00011F8C  26434          BH    *+14  Around region break
00011F82 E3C0 C170 001A          000117F8  26435          ALGF  12,@lit_region_diff_2033_2_3
                                           26436          DROP  12
                        00012048           26437          USING @REGION_2033_3,12
00011F88 47F0 C230               00012278  26438          B     @L1808
                                           26439          DROP  12
                        00011688           26440          USING @REGION_2033_2,12
00011F8C                                   26441 @L1809   DS    0H
00011F8C 1277                              26442          LTR   7,7
00011F8E 4720 C914               00011F9C  26443          BH    *+14  Around region break
00011F92 E3C0 C170 001A          000117F8  26444          ALGF  12,@lit_region_diff_2033_2_3
                                           26445          DROP  12
                        00012048           26446          USING @REGION_2033_3,12
00011F98 47F0 C220               00012268  26447          B     @L1812
                                           26448          DROP  12
                        00011688           26449          USING @REGION_2033_2,12
00011F9C                                   26450 @L1813   DS    0H
00011F9C E3F0 6100 0002          00000100  26451          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00011FA2 4770 C960               00011FE8  26452          BNZ   @L1816
00011FA6 E3F0 C0E8 0004          00011770  26453          LG    15,@lit_2033_1461
00011FAC 4110 F1B2               000001B2  26454          LA    1,434(0,15)
00011FB0 E310 D518 0024          00000518  26455          STG   1,1304(0,13)
00011FB6 E548 D520 0B9E          00000520  26456          MVGHI 1312(13),2974
00011FBC E310 C0E0 0004          00011768  26457          LG    1,@lit_2033_1462
00011FC2 4110 13E4               000003E4  26458          LA    1,996(0,1)
00011FC6 E310 D528 0024          00000528  26459          STG   1,1320(0,13)
00011FCC D707 D530 D530 00000530 00000530  26460          XC    1328(8,13),1328(13)
00011FD2 41F0 F582               00000582  26461          LA    15,1410(0,15)
00011FD6 E3F0 D538 0024          00000538  26462          STG   15,1336(0,13)
00011FDC 4110 D518               00000518  26463          LA    1,1304(0,13)
00011FE0 E3F0 C108 0004          00011790  26464          LG    15,@lit_2033_1469 ; rd_kafka_crash
00011FE6                                   26465 @@gen_label2098 DS    0H
00011FE6 05EF                              26466          BALR  14,15
00011FE8                                   26467 @@gen_label2099 DS    0H
00011FE8                                   26468 @L1816   DS    0H
00011FE8 41F0 D302               00000302  26469          LA    15,770(0,13)
00011FEC E3F0 D518 0024          00000518  26470          STG   15,1304(0,13)
00011FF2 E548 D520 0100          00000520  26471          MVGHI 1312(13),256
00011FF8 E3F0 C0E8 0004          00011770  26472          LG    15,@lit_2033_1461
00011FFE 41F0 F59C               0000059C  26473          LA    15,1436(0,15)
00012002 E3F0 D528 0024          00000528  26474          STG   15,1320(0,13)
00012008 4110 D518               00000518  26475          LA    1,1304(0,13)
0001200C E3F0 C110 0004          00011798  26476          LG    15,@lit_2033_1471 ; snprintf
00012012                                   26477 @@gen_label2100 DS    0H
00012012 05EF                              26478          BALR  14,15
00012014                                   26479 @@gen_label2101 DS    0H
00012014 41F0 D302               00000302  26480          LA    15,770(0,13)
00012018 B904 001F                         26481          LGR   1,15
0001201C A709 0000               00000000  26482          LGHI  0,0
00012020                                   26483 @@gen_label2102 DS 0H
                                                                                                                           Page  525 
  Active Usings: @REGION_2033_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012020 B25E 000F                         26484          SRST  0,15
00012024 4710 C998               00012020  26485          BC  1,@@gen_label2102
00012028 B90B 0001                         26486          SLGR  0,1
0001202C A70F 0002               00000002  26487          CGHI  0,2
00012030 4780 C9B6               0001203E  26488          BE    *+14  Around region break
00012034 E3C0 C170 001A          000117F8  26489          ALGF  12,@lit_region_diff_2033_2_3
                                           26490          DROP  12
                        00012048           26491          USING @REGION_2033_3,12
0001203A 47F0 C000               00012048  26492          B     @L1818
                                           26493          DROP  12
                        00011688           26494          USING @REGION_2033_2,12
0001203E 9200 D302      00000302 00000000  26495          MVI   770(13),0
00012042                                   26496 @L1817   DS    0H
00012042 E3C0 C170 001A          000117F8  26497          ALGF  12,@lit_region_diff_2033_2_3
00012048                                   26498 @REGION_2033_3 DS 0H
                                           26499          DROP  12
                        00012048           26500          USING @REGION_2033_3,12
00012048                                   26501 @L1818   DS    0H
00012048 E3F0 6100 0004          00000100  26502          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0001204E A739 1638               00001638  26503          LGHI  3,5688      ; 5688
00012052 41F3 F000               00000000  26504          LA    15,0(3,15)
00012056 E3F0 D518 0024          00000518  26505          STG   15,1304(0,13)
0001205C 4110 D518               00000518  26506          LA    1,1304(0,13)
00012060 E3F0 C0D8 0004          00012120  26507          LG    15,@lit_2033_1525 ; mtx_lock
00012066                                   26508 @@gen_label2104 DS    0H
00012066 05EF                              26509          BALR  14,15
00012068                                   26510 @@gen_label2105 DS    0H
00012068 41F0 D402               00000402  26511          LA    15,1026(0,13)
0001206C E3F0 D518 0024          00000518  26512          STG   15,1304(0,13)
00012072 E3F0 6100 0004          00000100  26513          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012078 A719 1630               00001630  26514          LGHI  1,5680      ; 5680
0001207C E3F1 F000 0004          00000000  26515          LG    15,0(1,15)
00012082 E3F0 D520 0024          00000520  26516          STG   15,1312(0,13)
00012088 E548 D528 0100          00000528  26517          MVGHI 1320(13),256
0001208E 4110 D518               00000518  26518          LA    1,1304(0,13)
00012092 E3F0 C0E0 0004          00012128  26519          LG    15,@lit_2033_1527 ; rd_strlcpy
00012098                                   26520 @@gen_label2106 DS    0H
00012098 05EF                              26521          BALR  14,15
0001209A                                   26522 @@gen_label2107 DS    0H
0001209A E3F0 6100 0004          00000100  26523          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000120A0 41F3 F000               00000000  26524          LA    15,0(3,15)
000120A4 E3F0 D518 0024          00000518  26525          STG   15,1304(0,13)
000120AA 4110 D518               00000518  26526          LA    1,1304(0,13)
000120AE E3F0 C0E8 0004          00012130  26527          LG    15,@lit_2033_1529 ; mtx_unlock
000120B4                                   26528 @@gen_label2108 DS    0H
000120B4 05EF                              26529          BALR  14,15
000120B6                                   26530 @@gen_label2109 DS    0H
000120B6 E3F0 60B8 0015          000000B8  26531          LGH   15,184(0,6)
000120BC E3F0 D518 0024          00000518  26532          STG   15,1304(0,13)
000120C2 4110 D518               00000518  26533          LA    1,1304(0,13)
000120C6 E3F0 C0F0 0004          00012138  26534          LG    15,@lit_2033_1530 ; rd_kafka_ApiKey2str
000120CC                                   26535 @@gen_label2110 DS    0H
                                                                                                                           Page  526 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000120CC 05EF                              26536          BALR  14,15
000120CE                                   26537 @@gen_label2111 DS    0H
000120CE B904 003F                         26538          LGR   3,15
000120D2 41F0 6078               00000078  26539          LA    15,120(0,6)
000120D6 E3F0 D518 0024          00000518  26540          STG   15,1304(0,13)
000120DC 4110 D518               00000518  26541          LA    1,1304(0,13)
000120E0 E3F0 C0F8 0004          00012140  26542          LG    15,@lit_2033_1531 ; rd_slice_offset
000120E6                                   26543 @@gen_label2112 DS    0H
000120E6 05EF                              26544          BALR  14,15
000120E8                                   26545 @@gen_label2113 DS    0H
000120E8 B904 008F                         26546          LGR   8,15
000120EC E390 6098 0004          00000098  26547          LG    9,152(0,6)  ; offset of end in rd_slice_s
000120F2 41F0 6078               00000078  26548          LA    15,120(0,6)
000120F6 E3F0 D518 0024          00000518  26549          STG   15,1304(0,13)
000120FC 4110 D518               00000518  26550          LA    1,1304(0,13)
00012100 E3F0 C100 0004          00012148  26551          LG    15,@lit_2033_1532 ; rd_slice_abs_offset
00012106                                   26552 @@gen_label2114 DS    0H
00012106 05EF                              26553          BALR  14,15
00012108                                   26554 @@gen_label2115 DS    0H
00012108 B90B 009F                         26555          SLGR  9,15
0001210C E3F0 61E8 0002          000001E8  26556          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00012112 4780 C150               00012198  26557          BZ    @L1821
00012116 E3F0 61E8 0004          000001E8  26558          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0001211C 47F0 C15A               000121A2  26559          B     @L1822
00012120                                   26560          DS    0D
00012120 0000000000000000                  26561 @lit_2033_1525 DC AD(mtx_lock)
00012128 0000000000001BA8                  26562 @lit_2033_1527 DC AD(rd_strlcpy)
00012130 0000000000000000                  26563 @lit_2033_1529 DC AD(mtx_unlock)
00012138 0000000000001988                  26564 @lit_2033_1530 DC AD(rd_kafka_$Api$Key2str)
00012140 00000000000017D8                  26565 @lit_2033_1531 DC AD(rd_slice_offset)
00012148 0000000000001730                  26566 @lit_2033_1532 DC AD(rd_slice_abs_offset)
00012150 0000000000014A98                  26567 @lit_2033_1533 DC AD(@strings@)
00012158 0000000000000000                  26568 @lit_2033_1536 DC AD(rd_kafka_log0)
00012160 0000000000014658                  26569 @lit_2033_1535 DC AD(@DATA)
00012168 000009A8                          26570 @lit_region_diff_2033_3_4  DC A(@REGION_2033_4-@REGION_2033_3)
0001216C 00000000
00012170 0000000000000000                  26571 @lit_2033_1537 DC AD(rd_slice_read_uvarint)
00012178 0000000000000000                  26572 @lit_2033_1540 DC AD(rd_kafka_crash)
00012180 0000000000000000                  26573 @lit_2033_1542 DC AD(snprintf)
00012188 0000000000000000                  26574 @lit_2033_1557 DC AD(rd_slice_read)
00012190 0000000000000000                  26575 @lit_2033_1581 DC AD(rd_slice_ensure_contig)
00012198                                   26576 @L1821   DS    0H
00012198 E3F0 C108 0004          00012150  26577          LG    15,@lit_2033_1533
0001219E 41F0 F5A0               000005A0  26578          LA    15,1440(0,15)
000121A2                                   26579 @L1822   DS    0H
000121A2 E310 6100 0004          00000100  26580          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000121A8 E310 1FD0 0004          00000FD0  26581          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000121AE 4110 1210               00000210  26582          LA    1,528(0,1)
000121B2 E310 D518 0024          00000518  26583          STG   1,1304(0,13)
000121B8 E310 6100 0004          00000100  26584          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  527 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000121BE E310 1FD0 0004          00000FD0  26585          LG    1,4048(0,1)
000121C4 E310 D520 0024          00000520  26586          STG   1,1312(0,13)
000121CA 4110 D402               00000402  26587          LA    1,1026(0,13)
000121CE E310 D528 0024          00000528  26588          STG   1,1320(0,13)
000121D4 B914 0017                         26589          LGFR  1,7
000121D8 E310 D530 0024          00000530  26590          STG   1,1328(0,13)
000121DE D707 D538 D538 00000538 00000538  26591          XC    1336(8,13),1336(13)
000121E4 E310 C108 0004          00012150  26592          LG    1,@lit_2033_1533
000121EA 4170 15C4               000005C4  26593          LA    7,1476(0,1)
000121EE E370 D540 0024          00000540  26594          STG   7,1344(0,13)
000121F4 4110 15D0               000005D0  26595          LA    1,1488(0,1)
000121F8 E310 D548 0024          00000548  26596          STG   1,1352(0,13)
000121FE E330 D550 0024          00000550  26597          STG   3,1360(0,13)
00012204 4810 60BA               000000BA  26598          LH    1,186(0,6)
00012208 B914 0011                         26599          LGFR  1,1
0001220C E310 D558 0024          00000558  26600          STG   1,1368(0,13)
00012212 E380 D560 0024          00000560  26601          STG   8,1376(0,13)
00012218 E310 6098 0004          00000098  26602          LG    1,152(0,6)  ; offset of end in rd_slice_s
0001221E E310 6090 000B          00000090  26603          SLG   1,144(0,6)
00012224 E310 D568 0024          00000568  26604          STG   1,1384(0,13)
0001222A E310 C118 0004          00012160  26605          LG    1,@lit_2033_1535
00012230 4110 13E4               000003E4  26606          LA    1,996(0,1)
00012234 E310 D570 0024          00000570  26607          STG   1,1392(0,13)
0001223A E548 D578 0B9E          00000578  26608          MVGHI 1400(13),2974
00012240 E340 D580 0024          00000580  26609          STG   4,1408(0,13)
00012246 E390 D588 0024          00000588  26610          STG   9,1416(0,13)
0001224C E3F0 D590 0024          00000590  26611          STG   15,1424(0,13)
00012252 41F0 D302               00000302  26612          LA    15,770(0,13)
00012256 E3F0 D598 0024          00000598  26613          STG   15,1432(0,13)
0001225C 4110 D518               00000518  26614          LA    1,1304(0,13)
00012260 E3F0 C110 0004          00012158  26615          LG    15,@lit_2033_1536 ; rd_kafka_log0
00012266                                   26616 @@gen_label2117 DS    0H
00012266 05EF                              26617          BALR  14,15
00012268                                   26618 @@gen_label2118 DS    0H
00012268                                   26619 @L1812   DS    0H
00012268 E54C 6188 FF65          00000188  26620          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0001226E E3C0 C120 001A          00012168  26621          ALGF  12,@lit_region_diff_2033_3_4
                                           26622          DROP  12
                        000129F0           26623          USING @REGION_2033_4,12
00012274 47F0 C816               00013206  26624          B     @_err_parse@2033@18
                                           26625          DROP  12
                        00012048           26626          USING @REGION_2033_3,12
00012278                                   26627 @L1808   DS    0H
00012278                                   26628 @L1804   DS    0H
00012278 58F0 D0CC               000000CC  26629          L     15,204(0,13) ; _v
0001227C 50F0 D2EC               000002EC  26630          ST    15,748(0,13)
                                           26631 * ***           do { int _klen; if ((rkbuf)->rkbuf_flags & 0x40) { uin\
                                           26632 * t64_t _uva; do { uint64_t _v; size_t _r = rd_slice_read_uvarint(&(rk\
                                           26633 * buf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_decode_err\
                                           26634 * ors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asg\
                                           26635 * kafka\\librdkafka\\src\\rdkafka_txnmgr.c",2975, __FUNCTION__, (((voi\
                                           26636 * d *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[\
                                                                                                                           Page  528 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           26637 * 256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "uvarint parsing fai\
                                           26638 * led"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _l\
                                           26639 * ogname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_str\
                                           26640 * lcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx\
                                           26641 * _unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbu\
                                           26642 * f->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname\
                                           26643 * , log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underf\
                                           26644 * low " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %"\
                                           26645 *  "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKe\
                                           26646 * y2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, \
                                           26647 * rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end \
                                           26648 * - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 2975, (size_t)0, ((&\
                                           26649 * rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader\
                                           26650 * )), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : \
                                           26651 * "incorrect broker.version.fallback?", __tmpstr); } while (0); } (rkb\
                                           26652 * uf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } whi\
                                           26653 * le (0); *(&_uva) = _v; } while (0); (&Host)->len = ((int32_t)_uva) -\
                                           26654 *  1; _klen = (&Host)->len; } else { do { int16_t _v; do { size_t __le\
                                           26655 * n2 = (size_t)(2); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __\
                                           26656 * len2)) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkb\
                                           26657 * uf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader\
                                           26658 * ))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_\
                                           26659 * rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmg\
                                           26660 * r.c",2975, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb\
                                           26661 * "); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmp\
                                           26662 * str), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { c\
                                           26663 * har _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); \
                                           26664 * rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)\
                                           26665 * ); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(\
                                           26666 * &(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _l\
                                           26667 * ogname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer \
                                           26668 * underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expec\
                                           26669 * ted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka\
                                           26670 * _ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVer\
                                           26671 * sion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)\
                                           26672 * ->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 2975, __len0, \
                                           26673 * ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_rea\
                                           26674 * der)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation\
                                           26675 *  : "incorrect broker.version.fallback?", __tmpstr); } while (0); } (\
                                           26676 * rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } \
                                           26677 * while (0); } } while (0); } while (0); (&Host)->len = (int16_t)(_v);\
                                           26678 *  } while (0); _klen = (((&Host)->len) == -1 ? 0 : ((&Host)->len)); }\
                                           26679 *  if (((&Host)->len == -1)) (&Host)->str = ((void *)0); else if ((((&\
                                           26680 * Host)->len) == -1 ? 0 : ((&Host)->len)) == 0) (&Host)->str = ""; els\
                                           26681 * e if (!((&Host)->str = rd_slice_ensure_contig(&rkbuf->rkbuf_reader, \
                                           26682 * _klen))) do { size_t __len0 = (size_t)(_klen); if (((__len0 > ((&(rk\
                                           26683 * buf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reade\
                                           26684 * r))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf\
                                           26685 * _rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnm\
                                           26686 * gr.c",2975, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rk\
                                           26687 * b"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tm\
                                           26688 * pstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { \
                                                                                                                           Page  529 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           26689 * char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock);\
                                           26690 *  rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname\
                                           26691 * )); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0\
                                           26692 * (&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _\
                                           26693 * logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer\
                                           26694 *  underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expe\
                                           26695 * cted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafk\
                                           26696 * a_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVe\
                                           26697 * rsion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader\
                                           26698 * )->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 2975, __len0,\
                                           26699 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           26700 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           26701 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           26702 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           26703 *  while (0); } } while (0); if((&Host)->len > 0) { char *tbuf = callo\
                                           26704 * c(1,(&Host)->len); __memcpy(tbuf,(&Host)->str,(&Host)->len); size_t \
                                           26705 * ulen=(size_t)(&Host)->len; size_t alen=ulen; utf8_2_ebcdic((&Host)->\
                                           26706 * str, &alen, tbuf, &ulen); free(tbuf); } } while (0);
00012280                                   26707 @L1823   DS    0H
00012280 9140 6023      00000023 00000040  26708          TM    35(6),64
00012284 4780 C4DC               00012524  26709          BZ    @L1849
00012288                                   26710 @L1827   DS    0H
00012288 41F0 6078               00000078  26711          LA    15,120(0,6)
0001228C E3F0 D518 0024          00000518  26712          STG   15,1304(0,13)
00012292 41F0 D0D8               000000D8  26713          LA    15,216(0,13)
00012296 E3F0 D520 0024          00000520  26714          STG   15,1312(0,13)
0001229C 4110 D518               00000518  26715          LA    1,1304(0,13)
000122A0 E3F0 C128 0004          00012170  26716          LG    15,@lit_2033_1537 ; rd_slice_read_uvarint
000122A6                                   26717 @@gen_label2120 DS    0H
000122A6 05EF                              26718          BALR  14,15
000122A8                                   26719 @@gen_label2121 DS    0H
000122A8 B902 00FF                         26720          LTGR  15,15
000122AC 4770 C4C2               0001250A  26721          BNE   @L1830
000122B0                                   26722 @L1831   DS    0H
000122B0 1277                              26723          LTR   7,7
000122B2 47D0 C4B2               000124FA  26724          BNH   @L1834
000122B6                                   26725 @L1835   DS    0H
000122B6 E3F0 6100 0002          00000100  26726          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000122BC 4770 C2BA               00012302  26727          BNZ   @L1838
000122C0 E3F0 C108 0004          00012150  26728          LG    15,@lit_2033_1533
000122C6 4110 F1B2               000001B2  26729          LA    1,434(0,15)
000122CA E310 D518 0024          00000518  26730          STG   1,1304(0,13)
000122D0 E548 D520 0B9F          00000520  26731          MVGHI 1312(13),2975
000122D6 E310 C118 0004          00012160  26732          LG    1,@lit_2033_1535
000122DC 4110 13E4               000003E4  26733          LA    1,996(0,1)
000122E0 E310 D528 0024          00000528  26734          STG   1,1320(0,13)
000122E6 D707 D530 D530 00000530 00000530  26735          XC    1328(8,13),1328(13)
000122EC 41F0 F582               00000582  26736          LA    15,1410(0,15)
000122F0 E3F0 D538 0024          00000538  26737          STG   15,1336(0,13)
000122F6 4110 D518               00000518  26738          LA    1,1304(0,13)
000122FA E3F0 C130 0004          00012178  26739          LG    15,@lit_2033_1540 ; rd_kafka_crash
00012300                                   26740 @@gen_label2125 DS    0H
                                                                                                                           Page  530 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012300 05EF                              26741          BALR  14,15
00012302                                   26742 @@gen_label2126 DS    0H
00012302                                   26743 @L1838   DS    0H
00012302 41F0 D302               00000302  26744          LA    15,770(0,13)
00012306 E3F0 D518 0024          00000518  26745          STG   15,1304(0,13)
0001230C E548 D520 0100          00000520  26746          MVGHI 1312(13),256
00012312 E3F0 C108 0004          00012150  26747          LG    15,@lit_2033_1533
00012318 41F0 F640               00000640  26748          LA    15,1600(0,15)
0001231C E3F0 D528 0024          00000528  26749          STG   15,1320(0,13)
00012322 4110 D518               00000518  26750          LA    1,1304(0,13)
00012326 E3F0 C138 0004          00012180  26751          LG    15,@lit_2033_1542 ; snprintf
0001232C                                   26752 @@gen_label2127 DS    0H
0001232C 05EF                              26753          BALR  14,15
0001232E                                   26754 @@gen_label2128 DS    0H
0001232E 41F0 D302               00000302  26755          LA    15,770(0,13)
00012332 B904 001F                         26756          LGR   1,15
00012336 A709 0000               00000000  26757          LGHI  0,0
0001233A                                   26758 @@gen_label2129 DS 0H
0001233A B25E 000F                         26759          SRST  0,15
0001233E 4710 C2F2               0001233A  26760          BC  1,@@gen_label2129
00012342 B90B 0001                         26761          SLGR  0,1
00012346 A70F 0002               00000002  26762          CGHI  0,2
0001234A 4770 C30A               00012352  26763          BNE   @L1840
0001234E 9200 D302      00000302 00000000  26764          MVI   770(13),0
00012352                                   26765 @L1839   DS    0H
00012352                                   26766 @L1840   DS    0H
00012352 E3F0 6100 0004          00000100  26767          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012358 A739 1638               00001638  26768          LGHI  3,5688      ; 5688
0001235C 41F3 F000               00000000  26769          LA    15,0(3,15)
00012360 E3F0 D518 0024          00000518  26770          STG   15,1304(0,13)
00012366 4110 D518               00000518  26771          LA    1,1304(0,13)
0001236A E3F0 C0D8 0004          00012120  26772          LG    15,@lit_2033_1525 ; mtx_lock
00012370                                   26773 @@gen_label2131 DS    0H
00012370 05EF                              26774          BALR  14,15
00012372                                   26775 @@gen_label2132 DS    0H
00012372 41F0 D402               00000402  26776          LA    15,1026(0,13)
00012376 E3F0 D518 0024          00000518  26777          STG   15,1304(0,13)
0001237C E3F0 6100 0004          00000100  26778          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012382 A719 1630               00001630  26779          LGHI  1,5680      ; 5680
00012386 E3F1 F000 0004          00000000  26780          LG    15,0(1,15)
0001238C E3F0 D520 0024          00000520  26781          STG   15,1312(0,13)
00012392 E548 D528 0100          00000528  26782          MVGHI 1320(13),256
00012398 4110 D518               00000518  26783          LA    1,1304(0,13)
0001239C E3F0 C0E0 0004          00012128  26784          LG    15,@lit_2033_1527 ; rd_strlcpy
000123A2                                   26785 @@gen_label2133 DS    0H
000123A2 05EF                              26786          BALR  14,15
000123A4                                   26787 @@gen_label2134 DS    0H
000123A4 E3F0 6100 0004          00000100  26788          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000123AA 41F3 F000               00000000  26789          LA    15,0(3,15)
000123AE E3F0 D518 0024          00000518  26790          STG   15,1304(0,13)
000123B4 4110 D518               00000518  26791          LA    1,1304(0,13)
000123B8 E3F0 C0E8 0004          00012130  26792          LG    15,@lit_2033_1529 ; mtx_unlock
                                                                                                                           Page  531 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000123BE                                   26793 @@gen_label2135 DS    0H
000123BE 05EF                              26794          BALR  14,15
000123C0                                   26795 @@gen_label2136 DS    0H
000123C0 E3F0 60B8 0015          000000B8  26796          LGH   15,184(0,6)
000123C6 E3F0 D518 0024          00000518  26797          STG   15,1304(0,13)
000123CC 4110 D518               00000518  26798          LA    1,1304(0,13)
000123D0 E3F0 C0F0 0004          00012138  26799          LG    15,@lit_2033_1530 ; rd_kafka_ApiKey2str
000123D6                                   26800 @@gen_label2137 DS    0H
000123D6 05EF                              26801          BALR  14,15
000123D8                                   26802 @@gen_label2138 DS    0H
000123D8 B904 003F                         26803          LGR   3,15
000123DC 41F0 6078               00000078  26804          LA    15,120(0,6)
000123E0 E3F0 D518 0024          00000518  26805          STG   15,1304(0,13)
000123E6 4110 D518               00000518  26806          LA    1,1304(0,13)
000123EA E3F0 C0F8 0004          00012140  26807          LG    15,@lit_2033_1531 ; rd_slice_offset
000123F0                                   26808 @@gen_label2139 DS    0H
000123F0 05EF                              26809          BALR  14,15
000123F2                                   26810 @@gen_label2140 DS    0H
000123F2 B904 004F                         26811          LGR   4,15
000123F6 E380 6098 0004          00000098  26812          LG    8,152(0,6)  ; offset of end in rd_slice_s
000123FC 41F0 6078               00000078  26813          LA    15,120(0,6)
00012400 E3F0 D518 0024          00000518  26814          STG   15,1304(0,13)
00012406 4110 D518               00000518  26815          LA    1,1304(0,13)
0001240A E3F0 C100 0004          00012148  26816          LG    15,@lit_2033_1532 ; rd_slice_abs_offset
00012410                                   26817 @@gen_label2141 DS    0H
00012410 05EF                              26818          BALR  14,15
00012412                                   26819 @@gen_label2142 DS    0H
00012412 B90B 008F                         26820          SLGR  8,15
00012416 E3F0 61E8 0002          000001E8  26821          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0001241C 4780 C3E2               0001242A  26822          BZ    @L1843
00012420 E3F0 61E8 0004          000001E8  26823          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00012426 47F0 C3EC               00012434  26824          B     @L1844
0001242A                                   26825 @L1843   DS    0H
0001242A E3F0 C108 0004          00012150  26826          LG    15,@lit_2033_1533
00012430 41F0 F5A0               000005A0  26827          LA    15,1440(0,15)
00012434                                   26828 @L1844   DS    0H
00012434 E310 6100 0004          00000100  26829          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0001243A E310 1FD0 0004          00000FD0  26830          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00012440 4110 1210               00000210  26831          LA    1,528(0,1)
00012444 E310 D518 0024          00000518  26832          STG   1,1304(0,13)
0001244A E310 6100 0004          00000100  26833          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00012450 E310 1FD0 0004          00000FD0  26834          LG    1,4048(0,1)
00012456 E310 D520 0024          00000520  26835          STG   1,1312(0,13)
0001245C 4110 D402               00000402  26836          LA    1,1026(0,13)
00012460 E310 D528 0024          00000528  26837          STG   1,1320(0,13)
00012466 B914 0017                         26838          LGFR  1,7
0001246A E310 D530 0024          00000530  26839          STG   1,1328(0,13)
00012470 D707 D538 D538 00000538 00000538  26840          XC    1336(8,13),1336(13)
00012476 E310 C108 0004          00012150  26841          LG    1,@lit_2033_1533
0001247C 4170 15C4               000005C4  26842          LA    7,1476(0,1)
                                                                                                                           Page  532 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012480 E370 D540 0024          00000540  26843          STG   7,1344(0,13)
00012486 4110 15D0               000005D0  26844          LA    1,1488(0,1)
0001248A E310 D548 0024          00000548  26845          STG   1,1352(0,13)
00012490 E330 D550 0024          00000550  26846          STG   3,1360(0,13)
00012496 4810 60BA               000000BA  26847          LH    1,186(0,6)
0001249A B914 0011                         26848          LGFR  1,1
0001249E E310 D558 0024          00000558  26849          STG   1,1368(0,13)
000124A4 E340 D560 0024          00000560  26850          STG   4,1376(0,13)
000124AA E310 6098 0004          00000098  26851          LG    1,152(0,6)  ; offset of end in rd_slice_s
000124B0 E310 6090 000B          00000090  26852          SLG   1,144(0,6)
000124B6 E310 D568 0024          00000568  26853          STG   1,1384(0,13)
000124BC E310 C118 0004          00012160  26854          LG    1,@lit_2033_1535
000124C2 4110 13E4               000003E4  26855          LA    1,996(0,1)
000124C6 E310 D570 0024          00000570  26856          STG   1,1392(0,13)
000124CC E548 D578 0B9F          00000578  26857          MVGHI 1400(13),2975
000124D2 D707 D580 D580 00000580 00000580  26858          XC    1408(8,13),1408(13)
000124D8 E380 D588 0024          00000588  26859          STG   8,1416(0,13)
000124DE E3F0 D590 0024          00000590  26860          STG   15,1424(0,13)
000124E4 41F0 D302               00000302  26861          LA    15,770(0,13)
000124E8 E3F0 D598 0024          00000598  26862          STG   15,1432(0,13)
000124EE 4110 D518               00000518  26863          LA    1,1304(0,13)
000124F2 E3F0 C110 0004          00012158  26864          LG    15,@lit_2033_1536 ; rd_kafka_log0
000124F8                                   26865 @@gen_label2144 DS    0H
000124F8 05EF                              26866          BALR  14,15
000124FA                                   26867 @@gen_label2145 DS    0H
000124FA                                   26868 @L1834   DS    0H
000124FA E54C 6188 FF65          00000188  26869          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00012500 E3C0 C120 001A          00012168  26870          ALGF  12,@lit_region_diff_2033_3_4
                                           26871          DROP  12
                        000129F0           26872          USING @REGION_2033_4,12
00012506 47F0 C816               00013206  26873          B     @_err_parse@2033@18
                                           26874          DROP  12
                        00012048           26875          USING @REGION_2033_3,12
0001250A                                   26876 @L1830   DS    0H
0001250A E3F0 D0D8 0004          000000D8  26877          LG    15,216(0,13) ; _v
00012510 E3F0 D0D0 0024          000000D0  26878          STG   15,208(0,13)
00012516 A7FA FFFF               0000FFFF  26879          AHI   15,-1
0001251A 50F0 D2F0               000002F0  26880          ST    15,752(0,13)
0001251E 184F                              26881          LR    4,15
00012520 47F0 C7AE               000127F6  26882          B     @L1845
00012524                                   26883 @L1849   DS    0H
00012524 A749 0002               00000002  26884          LGHI  4,2         ; 2
00012528 41F0 6078               00000078  26885          LA    15,120(0,6)
0001252C E3F0 D518 0024          00000518  26886          STG   15,1304(0,13)
00012532 41F0 D0E0               000000E0  26887          LA    15,224(0,13)
00012536 E3F0 D520 0024          00000520  26888          STG   15,1312(0,13)
0001253C E340 D528 0024          00000528  26889          STG   4,1320(0,13)
00012542 4110 D518               00000518  26890          LA    1,1304(0,13)
00012546 E3F0 C140 0004          00012188  26891          LG    15,@lit_2033_1557 ; rd_slice_read
0001254C                                   26892 @@gen_label2146 DS    0H
0001254C 05EF                              26893          BALR  14,15
0001254E                                   26894 @@gen_label2147 DS    0H
                                                                                                                           Page  533 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001254E B902 00FF                         26895          LTGR  15,15
00012552 4770 C790               000127D8  26896          BNZ   @L1852
00012556                                   26897 @L1853   DS    0H
00012556 E380 6098 0004          00000098  26898          LG    8,152(0,6)  ; offset of end in rd_slice_s
0001255C 41F0 6078               00000078  26899          LA    15,120(0,6)
00012560 E3F0 D518 0024          00000518  26900          STG   15,1304(0,13)
00012566 4110 D518               00000518  26901          LA    1,1304(0,13)
0001256A E3F0 C100 0004          00012148  26902          LG    15,@lit_2033_1532 ; rd_slice_abs_offset
00012570                                   26903 @@gen_label2149 DS    0H
00012570 05EF                              26904          BALR  14,15
00012572                                   26905 @@gen_label2150 DS    0H
00012572 B90B 008F                         26906          SLGR  8,15
00012576 B921 0048                         26907          CLGR  4,8
0001257A 47D0 C790               000127D8  26908          BNH   @L1856
0001257E                                   26909 @L1857   DS    0H
0001257E 1277                              26910          LTR   7,7
00012580 47D0 C780               000127C8  26911          BNH   @L1860
00012584                                   26912 @L1861   DS    0H
00012584 E3F0 6100 0002          00000100  26913          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0001258A 4770 C588               000125D0  26914          BNZ   @L1864
0001258E E3F0 C108 0004          00012150  26915          LG    15,@lit_2033_1533
00012594 4110 F1B2               000001B2  26916          LA    1,434(0,15)
00012598 E310 D518 0024          00000518  26917          STG   1,1304(0,13)
0001259E E548 D520 0B9F          00000520  26918          MVGHI 1312(13),2975
000125A4 E310 C118 0004          00012160  26919          LG    1,@lit_2033_1535
000125AA 4110 13E4               000003E4  26920          LA    1,996(0,1)
000125AE E310 D528 0024          00000528  26921          STG   1,1320(0,13)
000125B4 D707 D530 D530 00000530 00000530  26922          XC    1328(8,13),1328(13)
000125BA 41F0 F582               00000582  26923          LA    15,1410(0,15)
000125BE E3F0 D538 0024          00000538  26924          STG   15,1336(0,13)
000125C4 4110 D518               00000518  26925          LA    1,1304(0,13)
000125C8 E3F0 C130 0004          00012178  26926          LG    15,@lit_2033_1540 ; rd_kafka_crash
000125CE                                   26927 @@gen_label2154 DS    0H
000125CE 05EF                              26928          BALR  14,15
000125D0                                   26929 @@gen_label2155 DS    0H
000125D0                                   26930 @L1864   DS    0H
000125D0 41F0 D302               00000302  26931          LA    15,770(0,13)
000125D4 E3F0 D518 0024          00000518  26932          STG   15,1304(0,13)
000125DA E548 D520 0100          00000520  26933          MVGHI 1312(13),256
000125E0 E3F0 C108 0004          00012150  26934          LG    15,@lit_2033_1533
000125E6 41F0 F59C               0000059C  26935          LA    15,1436(0,15)
000125EA E3F0 D528 0024          00000528  26936          STG   15,1320(0,13)
000125F0 4110 D518               00000518  26937          LA    1,1304(0,13)
000125F4 E3F0 C138 0004          00012180  26938          LG    15,@lit_2033_1542 ; snprintf
000125FA                                   26939 @@gen_label2156 DS    0H
000125FA 05EF                              26940          BALR  14,15
000125FC                                   26941 @@gen_label2157 DS    0H
000125FC 41F0 D302               00000302  26942          LA    15,770(0,13)
00012600 B904 001F                         26943          LGR   1,15
00012604 A709 0000               00000000  26944          LGHI  0,0
00012608                                   26945 @@gen_label2158 DS 0H
00012608 B25E 000F                         26946          SRST  0,15
                                                                                                                           Page  534 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001260C 4710 C5C0               00012608  26947          BC  1,@@gen_label2158
00012610 B90B 0001                         26948          SLGR  0,1
00012614 A70F 0002               00000002  26949          CGHI  0,2
00012618 4770 C5D8               00012620  26950          BNE   @L1866
0001261C 9200 D302      00000302 00000000  26951          MVI   770(13),0
00012620                                   26952 @L1865   DS    0H
00012620                                   26953 @L1866   DS    0H
00012620 E3F0 6100 0004          00000100  26954          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012626 A739 1638               00001638  26955          LGHI  3,5688      ; 5688
0001262A 41F3 F000               00000000  26956          LA    15,0(3,15)
0001262E E3F0 D518 0024          00000518  26957          STG   15,1304(0,13)
00012634 4110 D518               00000518  26958          LA    1,1304(0,13)
00012638 E3F0 C0D8 0004          00012120  26959          LG    15,@lit_2033_1525 ; mtx_lock
0001263E                                   26960 @@gen_label2160 DS    0H
0001263E 05EF                              26961          BALR  14,15
00012640                                   26962 @@gen_label2161 DS    0H
00012640 41F0 D402               00000402  26963          LA    15,1026(0,13)
00012644 E3F0 D518 0024          00000518  26964          STG   15,1304(0,13)
0001264A E3F0 6100 0004          00000100  26965          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012650 A719 1630               00001630  26966          LGHI  1,5680      ; 5680
00012654 E3F1 F000 0004          00000000  26967          LG    15,0(1,15)
0001265A E3F0 D520 0024          00000520  26968          STG   15,1312(0,13)
00012660 E548 D528 0100          00000528  26969          MVGHI 1320(13),256
00012666 4110 D518               00000518  26970          LA    1,1304(0,13)
0001266A E3F0 C0E0 0004          00012128  26971          LG    15,@lit_2033_1527 ; rd_strlcpy
00012670                                   26972 @@gen_label2162 DS    0H
00012670 05EF                              26973          BALR  14,15
00012672                                   26974 @@gen_label2163 DS    0H
00012672 E3F0 6100 0004          00000100  26975          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012678 41F3 F000               00000000  26976          LA    15,0(3,15)
0001267C E3F0 D518 0024          00000518  26977          STG   15,1304(0,13)
00012682 4110 D518               00000518  26978          LA    1,1304(0,13)
00012686 E3F0 C0E8 0004          00012130  26979          LG    15,@lit_2033_1529 ; mtx_unlock
0001268C                                   26980 @@gen_label2164 DS    0H
0001268C 05EF                              26981          BALR  14,15
0001268E                                   26982 @@gen_label2165 DS    0H
0001268E E3F0 60B8 0015          000000B8  26983          LGH   15,184(0,6)
00012694 E3F0 D518 0024          00000518  26984          STG   15,1304(0,13)
0001269A 4110 D518               00000518  26985          LA    1,1304(0,13)
0001269E E3F0 C0F0 0004          00012138  26986          LG    15,@lit_2033_1530 ; rd_kafka_ApiKey2str
000126A4                                   26987 @@gen_label2166 DS    0H
000126A4 05EF                              26988          BALR  14,15
000126A6                                   26989 @@gen_label2167 DS    0H
000126A6 B904 003F                         26990          LGR   3,15
000126AA 41F0 6078               00000078  26991          LA    15,120(0,6)
000126AE E3F0 D518 0024          00000518  26992          STG   15,1304(0,13)
000126B4 4110 D518               00000518  26993          LA    1,1304(0,13)
000126B8 E3F0 C0F8 0004          00012140  26994          LG    15,@lit_2033_1531 ; rd_slice_offset
000126BE                                   26995 @@gen_label2168 DS    0H
000126BE 05EF                              26996          BALR  14,15
000126C0                                   26997 @@gen_label2169 DS    0H
000126C0 B904 008F                         26998          LGR   8,15
                                                                                                                           Page  535 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000126C4 E390 6098 0004          00000098  26999          LG    9,152(0,6)  ; offset of end in rd_slice_s
000126CA 41F0 6078               00000078  27000          LA    15,120(0,6)
000126CE E3F0 D518 0024          00000518  27001          STG   15,1304(0,13)
000126D4 4110 D518               00000518  27002          LA    1,1304(0,13)
000126D8 E3F0 C100 0004          00012148  27003          LG    15,@lit_2033_1532 ; rd_slice_abs_offset
000126DE                                   27004 @@gen_label2170 DS    0H
000126DE 05EF                              27005          BALR  14,15
000126E0                                   27006 @@gen_label2171 DS    0H
000126E0 B90B 009F                         27007          SLGR  9,15
000126E4 E3F0 61E8 0002          000001E8  27008          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000126EA 4780 C6B0               000126F8  27009          BZ    @L1869
000126EE E3F0 61E8 0004          000001E8  27010          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000126F4 47F0 C6BA               00012702  27011          B     @L1870
000126F8                                   27012 @L1869   DS    0H
000126F8 E3F0 C108 0004          00012150  27013          LG    15,@lit_2033_1533
000126FE 41F0 F5A0               000005A0  27014          LA    15,1440(0,15)
00012702                                   27015 @L1870   DS    0H
00012702 E310 6100 0004          00000100  27016          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00012708 E310 1FD0 0004          00000FD0  27017          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0001270E 4110 1210               00000210  27018          LA    1,528(0,1)
00012712 E310 D518 0024          00000518  27019          STG   1,1304(0,13)
00012718 E310 6100 0004          00000100  27020          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0001271E E310 1FD0 0004          00000FD0  27021          LG    1,4048(0,1)
00012724 E310 D520 0024          00000520  27022          STG   1,1312(0,13)
0001272A 4110 D402               00000402  27023          LA    1,1026(0,13)
0001272E E310 D528 0024          00000528  27024          STG   1,1320(0,13)
00012734 B914 0017                         27025          LGFR  1,7
00012738 E310 D530 0024          00000530  27026          STG   1,1328(0,13)
0001273E D707 D538 D538 00000538 00000538  27027          XC    1336(8,13),1336(13)
00012744 E310 C108 0004          00012150  27028          LG    1,@lit_2033_1533
0001274A 4170 15C4               000005C4  27029          LA    7,1476(0,1)
0001274E E370 D540 0024          00000540  27030          STG   7,1344(0,13)
00012754 4110 15D0               000005D0  27031          LA    1,1488(0,1)
00012758 E310 D548 0024          00000548  27032          STG   1,1352(0,13)
0001275E E330 D550 0024          00000550  27033          STG   3,1360(0,13)
00012764 4810 60BA               000000BA  27034          LH    1,186(0,6)
00012768 B914 0011                         27035          LGFR  1,1
0001276C E310 D558 0024          00000558  27036          STG   1,1368(0,13)
00012772 E380 D560 0024          00000560  27037          STG   8,1376(0,13)
00012778 E310 6098 0004          00000098  27038          LG    1,152(0,6)  ; offset of end in rd_slice_s
0001277E E310 6090 000B          00000090  27039          SLG   1,144(0,6)
00012784 E310 D568 0024          00000568  27040          STG   1,1384(0,13)
0001278A E310 C118 0004          00012160  27041          LG    1,@lit_2033_1535
00012790 4110 13E4               000003E4  27042          LA    1,996(0,1)
00012794 E310 D570 0024          00000570  27043          STG   1,1392(0,13)
0001279A E548 D578 0B9F          00000578  27044          MVGHI 1400(13),2975
000127A0 E340 D580 0024          00000580  27045          STG   4,1408(0,13)
000127A6 E390 D588 0024          00000588  27046          STG   9,1416(0,13)
000127AC E3F0 D590 0024          00000590  27047          STG   15,1424(0,13)
000127B2 41F0 D302               00000302  27048          LA    15,770(0,13)
                                                                                                                           Page  536 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000127B6 E3F0 D598 0024          00000598  27049          STG   15,1432(0,13)
000127BC 4110 D518               00000518  27050          LA    1,1304(0,13)
000127C0 E3F0 C110 0004          00012158  27051          LG    15,@lit_2033_1536 ; rd_kafka_log0
000127C6                                   27052 @@gen_label2173 DS    0H
000127C6 05EF                              27053          BALR  14,15
000127C8                                   27054 @@gen_label2174 DS    0H
000127C8                                   27055 @L1860   DS    0H
000127C8 E54C 6188 FF65          00000188  27056          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000127CE E3C0 C120 001A          00012168  27057          ALGF  12,@lit_region_diff_2033_3_4
                                           27058          DROP  12
                        000129F0           27059          USING @REGION_2033_4,12
000127D4 47F0 C816               00013206  27060          B     @_err_parse@2033@18
                                           27061          DROP  12
                        00012048           27062          USING @REGION_2033_3,12
000127D8                                   27063 @L1856   DS    0H
000127D8                                   27064 @L1852   DS    0H
000127D8 48F0 D0E0               000000E0  27065          LH    15,224(0,13) ; _v
000127DC 50F0 D2F0               000002F0  27066          ST    15,752(0,13)
000127E0 E55C D2F0 FFFF          000002F0  27067          CHSI  752(13),-1
000127E6 4770 C7AA               000127F2  27068          BNE   @L1871
000127EA A748 0000               00000000  27069          LHI   4,0         ; 0
000127EE 47F0 C7AE               000127F6  27070          B     @L1872
000127F2                                   27071 @L1871   DS    0H
000127F2 5840 D2F0               000002F0  27072          L     4,752(0,13)
000127F6                                   27073 @L1872   DS    0H
000127F6                                   27074 @L1845   DS    0H
000127F6 E55C D2F0 FFFF          000002F0  27075          CHSI  752(13),-1
000127FC 4770 C7CC               00012814  27076          BNE   @L1873
00012800 A7F9 0000               00000000  27077          LGHI  15,0        ; 0
00012804 E3F0 D2F8 0024          000002F8  27078          STG   15,760(0,13) ; offset of str in rd_kafkap_str_s
0001280A E3C0 C120 001A          00012168  27079          ALGF  12,@lit_region_diff_2033_3_4
                                           27080          DROP  12
                        000129F0           27081          USING @REGION_2033_4,12
00012810 47F0 C232               00012C22  27082          B     @L1874
                                           27083          DROP  12
                        00012048           27084          USING @REGION_2033_3,12
00012814                                   27085 @L1873   DS    0H
00012814 E55C D2F0 FFFF          000002F0  27086          CHSI  752(13),-1
0001281A 4770 C7DE               00012826  27087          BNE   @L1875
0001281E A7F8 0000               00000000  27088          LHI   15,0        ; 0
00012822 47F0 C7E2               0001282A  27089          B     @L1876
00012826                                   27090 @L1875   DS    0H
00012826 58F0 D2F0               000002F0  27091          L     15,752(0,13)
0001282A                                   27092 @L1876   DS    0H
0001282A 12FF                              27093          LTR   15,15
0001282C 4770 C802               0001284A  27094          BNE   @L1877
00012830 E3F0 C108 0004          00012150  27095          LG    15,@lit_2033_1533
00012836 41F0 F3C4               000003C4  27096          LA    15,964(0,15)
0001283A E3F0 D2F8 0024          000002F8  27097          STG   15,760(0,13) ; offset of str in rd_kafkap_str_s
00012840 E3C0 C120 001A          00012168  27098          ALGF  12,@lit_region_diff_2033_3_4
                                           27099          DROP  12
                        000129F0           27100          USING @REGION_2033_4,12
                                                                                                                           Page  537 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012846 47F0 C232               00012C22  27101          B     @L1874
                                           27102          DROP  12
                        00012048           27103          USING @REGION_2033_3,12
0001284A                                   27104 @L1877   DS    0H
0001284A 41F0 6078               00000078  27105          LA    15,120(0,6)
0001284E E3F0 D518 0024          00000518  27106          STG   15,1304(0,13)
00012854 B914 00F4                         27107          LGFR  15,4
00012858 E3F0 D520 0024          00000520  27108          STG   15,1312(0,13)
0001285E 4110 D518               00000518  27109          LA    1,1304(0,13)
00012862 E3F0 C148 0004          00012190  27110          LG    15,@lit_2033_1581 ; rd_slice_ensure_contig
00012868                                   27111 @@gen_label2179 DS    0H
00012868 05EF                              27112          BALR  14,15
0001286A                                   27113 @@gen_label2180 DS    0H
0001286A E3F0 D2F8 0024          000002F8  27114          STG   15,760(0,13)
00012870 B902 00FF                         27115          LTGR  15,15
00012874 4780 C83A               00012882  27116          BZ    *+14  Around region break
00012878 E3C0 C120 001A          00012168  27117          ALGF  12,@lit_region_diff_2033_3_4
                                           27118          DROP  12
                        000129F0           27119          USING @REGION_2033_4,12
0001287E 47F0 C232               00012C22  27120          B     @L1874
                                           27121          DROP  12
                        00012048           27122          USING @REGION_2033_3,12
00012882                                   27123 @L1880   DS    0H
00012882 B914 0044                         27124          LGFR  4,4
00012886 E380 6098 0004          00000098  27125          LG    8,152(0,6)  ; offset of end in rd_slice_s
0001288C 41F0 6078               00000078  27126          LA    15,120(0,6)
00012890 E3F0 D518 0024          00000518  27127          STG   15,1304(0,13)
00012896 4110 D518               00000518  27128          LA    1,1304(0,13)
0001289A E3F0 C100 0004          00012148  27129          LG    15,@lit_2033_1532 ; rd_slice_abs_offset
000128A0                                   27130 @@gen_label2182 DS    0H
000128A0 05EF                              27131          BALR  14,15
000128A2                                   27132 @@gen_label2183 DS    0H
000128A2 B90B 008F                         27133          SLGR  8,15
000128A6 B921 0048                         27134          CLGR  4,8
000128AA 4720 C870               000128B8  27135          BH    *+14  Around region break
000128AE E3C0 C120 001A          00012168  27136          ALGF  12,@lit_region_diff_2033_3_4
                                           27137          DROP  12
                        000129F0           27138          USING @REGION_2033_4,12
000128B4 47F0 C232               00012C22  27139          B     @L1883
                                           27140          DROP  12
                        00012048           27141          USING @REGION_2033_3,12
000128B8                                   27142 @L1884   DS    0H
000128B8 1277                              27143          LTR   7,7
000128BA 4720 C880               000128C8  27144          BH    *+14  Around region break
000128BE E3C0 C120 001A          00012168  27145          ALGF  12,@lit_region_diff_2033_3_4
                                           27146          DROP  12
                        000129F0           27147          USING @REGION_2033_4,12
000128C4 47F0 C228               00012C18  27148          B     @L1887
                                           27149          DROP  12
                        00012048           27150          USING @REGION_2033_3,12
000128C8                                   27151 @L1888   DS    0H
000128C8 E3F0 6100 0002          00000100  27152          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  538 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000128CE 4770 C8CC               00012914  27153          BNZ   @L1891
000128D2 E3F0 C108 0004          00012150  27154          LG    15,@lit_2033_1533
000128D8 4110 F1B2               000001B2  27155          LA    1,434(0,15)
000128DC E310 D518 0024          00000518  27156          STG   1,1304(0,13)
000128E2 E548 D520 0B9F          00000520  27157          MVGHI 1312(13),2975
000128E8 E310 C118 0004          00012160  27158          LG    1,@lit_2033_1535
000128EE 4110 13E4               000003E4  27159          LA    1,996(0,1)
000128F2 E310 D528 0024          00000528  27160          STG   1,1320(0,13)
000128F8 D707 D530 D530 00000530 00000530  27161          XC    1328(8,13),1328(13)
000128FE 41F0 F582               00000582  27162          LA    15,1410(0,15)
00012902 E3F0 D538 0024          00000538  27163          STG   15,1336(0,13)
00012908 4110 D518               00000518  27164          LA    1,1304(0,13)
0001290C E3F0 C130 0004          00012178  27165          LG    15,@lit_2033_1540 ; rd_kafka_crash
00012912                                   27166 @@gen_label2187 DS    0H
00012912 05EF                              27167          BALR  14,15
00012914                                   27168 @@gen_label2188 DS    0H
00012914                                   27169 @L1891   DS    0H
00012914 41F0 D302               00000302  27170          LA    15,770(0,13)
00012918 E3F0 D518 0024          00000518  27171          STG   15,1304(0,13)
0001291E E548 D520 0100          00000520  27172          MVGHI 1312(13),256
00012924 E3F0 C108 0004          00012150  27173          LG    15,@lit_2033_1533
0001292A 41F0 F59C               0000059C  27174          LA    15,1436(0,15)
0001292E E3F0 D528 0024          00000528  27175          STG   15,1320(0,13)
00012934 4110 D518               00000518  27176          LA    1,1304(0,13)
00012938 E3F0 C138 0004          00012180  27177          LG    15,@lit_2033_1542 ; snprintf
0001293E                                   27178 @@gen_label2189 DS    0H
0001293E 05EF                              27179          BALR  14,15
00012940                                   27180 @@gen_label2190 DS    0H
00012940 41F0 D302               00000302  27181          LA    15,770(0,13)
00012944 B904 001F                         27182          LGR   1,15
00012948 A709 0000               00000000  27183          LGHI  0,0
0001294C                                   27184 @@gen_label2191 DS 0H
0001294C B25E 000F                         27185          SRST  0,15
00012950 4710 C904               0001294C  27186          BC  1,@@gen_label2191
00012954 B90B 0001                         27187          SLGR  0,1
00012958 A70F 0002               00000002  27188          CGHI  0,2
0001295C 4770 C91C               00012964  27189          BNE   @L1893
00012960 9200 D302      00000302 00000000  27190          MVI   770(13),0
00012964                                   27191 @L1892   DS    0H
00012964                                   27192 @L1893   DS    0H
00012964 E3F0 6100 0004          00000100  27193          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
0001296A A739 1638               00001638  27194          LGHI  3,5688      ; 5688
0001296E 41F3 F000               00000000  27195          LA    15,0(3,15)
00012972 E3F0 D518 0024          00000518  27196          STG   15,1304(0,13)
00012978 4110 D518               00000518  27197          LA    1,1304(0,13)
0001297C E3F0 C0D8 0004          00012120  27198          LG    15,@lit_2033_1525 ; mtx_lock
00012982                                   27199 @@gen_label2193 DS    0H
00012982 05EF                              27200          BALR  14,15
00012984                                   27201 @@gen_label2194 DS    0H
00012984 41F0 D402               00000402  27202          LA    15,1026(0,13)
00012988 E3F0 D518 0024          00000518  27203          STG   15,1304(0,13)
0001298E E3F0 6100 0004          00000100  27204          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  539 
  Active Usings: @REGION_2033_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012994 A719 1630               00001630  27205          LGHI  1,5680      ; 5680
00012998 E3F1 F000 0004          00000000  27206          LG    15,0(1,15)
0001299E E3F0 D520 0024          00000520  27207          STG   15,1312(0,13)
000129A4 E548 D528 0100          00000528  27208          MVGHI 1320(13),256
000129AA 4110 D518               00000518  27209          LA    1,1304(0,13)
000129AE E3F0 C0E0 0004          00012128  27210          LG    15,@lit_2033_1527 ; rd_strlcpy
000129B4                                   27211 @@gen_label2195 DS    0H
000129B4 05EF                              27212          BALR  14,15
000129B6                                   27213 @@gen_label2196 DS    0H
000129B6 E3F0 6100 0004          00000100  27214          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
000129BC 41F3 F000               00000000  27215          LA    15,0(3,15)
000129C0 E3F0 D518 0024          00000518  27216          STG   15,1304(0,13)
000129C6 4110 D518               00000518  27217          LA    1,1304(0,13)
000129CA E3F0 C0E8 0004          00012130  27218          LG    15,@lit_2033_1529 ; mtx_unlock
000129D0                                   27219 @@gen_label2197 DS    0H
000129D0 05EF                              27220          BALR  14,15
000129D2                                   27221 @@gen_label2198 DS    0H
000129D2 E3F0 60B8 0015          000000B8  27222          LGH   15,184(0,6)
000129D8 E3F0 D518 0024          00000518  27223          STG   15,1304(0,13)
000129DE 4110 D518               00000518  27224          LA    1,1304(0,13)
000129E2 E3F0 C0F0 0004          00012138  27225          LG    15,@lit_2033_1530 ; rd_kafka_ApiKey2str
000129E8                                   27226 @@gen_label2199 DS    0H
000129E8 05EF                              27227          BALR  14,15
000129EA                                   27228 @@gen_label2200 DS    0H
000129EA E3C0 C120 001A          00012168  27229          ALGF  12,@lit_region_diff_2033_3_4
000129F0                                   27230 @REGION_2033_4 DS 0H
                                           27231          DROP  12
                        000129F0           27232          USING @REGION_2033_4,12
000129F0 B904 003F                         27233          LGR   3,15
000129F4 41F0 6078               00000078  27234          LA    15,120(0,6)
000129F8 E3F0 D518 0024          00000518  27235          STG   15,1304(0,13)
000129FE 4110 D518               00000518  27236          LA    1,1304(0,13)
00012A02 E3F0 C058 0004          00012A48  27237          LG    15,@lit_2033_1595 ; rd_slice_offset
00012A08                                   27238 @@gen_label2201 DS    0H
00012A08 05EF                              27239          BALR  14,15
00012A0A                                   27240 @@gen_label2202 DS    0H
00012A0A B904 008F                         27241          LGR   8,15
00012A0E E390 6098 0004          00000098  27242          LG    9,152(0,6)  ; offset of end in rd_slice_s
00012A14 41F0 6078               00000078  27243          LA    15,120(0,6)
00012A18 E3F0 D518 0024          00000518  27244          STG   15,1304(0,13)
00012A1E 4110 D518               00000518  27245          LA    1,1304(0,13)
00012A22 E3F0 C060 0004          00012A50  27246          LG    15,@lit_2033_1596 ; rd_slice_abs_offset
00012A28                                   27247 @@gen_label2203 DS    0H
00012A28 05EF                              27248          BALR  14,15
00012A2A                                   27249 @@gen_label2204 DS    0H
00012A2A B90B 009F                         27250          SLGR  9,15
00012A2E E3F0 61E8 0002          000001E8  27251          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00012A34 4780 C158               00012B48  27252          BZ    @L1896
00012A38 E3F0 61E8 0004          000001E8  27253          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00012A3E 47F0 C162               00012B52  27254          B     @L1897
                                                                                                                           Page  540 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012A48                                   27255          DS    0D
00012A48 00000000000017D8                  27256 @lit_2033_1595 DC AD(rd_slice_offset)
00012A50 0000000000001730                  27257 @lit_2033_1596 DC AD(rd_slice_abs_offset)
00012A58 0000000000014A98                  27258 @lit_2033_1597 DC AD(@strings@)
00012A60 0000000000000000                  27259 @lit_2033_1600 DC AD(rd_kafka_log0)
00012A68 0000000000014658                  27260 @lit_2033_1599 DC AD(@DATA)
00012A70 0000000000000000                  27261 @lit_2033_1601 DC AD(calloc)
00012A78 D200 9000 8000 00000000 00000000  27262 @lit_2033_1602          MVC 0(1,9),0(8)
00012A7E 0000
00012A80 0000000000000238                  27263 @lit_2033_1603 DC AD(utf8_2_ebcdic)
00012A88 0000000000000000                  27264 @lit_2033_1604 DC AD(free)
00012A90 0000000000000000                  27265 @lit_2033_1606 DC AD(rd_slice_read)
00012A98 0000000000000000                  27266 @lit_2033_1610 DC AD(rd_kafka_crash)
00012AA0 0000000000000000                  27267 @lit_2033_1612 DC AD(snprintf)
00012AA8 0000000000000000                  27268 @lit_2033_1614 DC AD(mtx_lock)
00012AB0 0000000000001BA8                  27269 @lit_2033_1616 DC AD(rd_strlcpy)
00012AB8 0000000000000000                  27270 @lit_2033_1618 DC AD(mtx_unlock)
00012AC0 0000000000001988                  27271 @lit_2033_1619 DC AD(rd_kafka_$Api$Key2str)
00012AC8 0000000000015A98                  27272 @lit_2033_1634 DC AD(@strings@+4096)
00012AD0 0000000000000000                  27273 @lit_2033_1636 DC AD(rwlock_rdlock)
00012AD8 0000000000000000                  27274 @lit_2033_1639 DC AD(rd_kafka_broker_find_by_nodeid0_fl)
00012AE0 0000000000000000                  27275 @lit_2033_1643 DC AD(rwlock_rdunlock)
00012AE8 0000000000000000                  27276 @lit_2033_1644 DC AD(rwlock_wrlock)
00012AF0 0000000000013A18                  27277 @lit_2033_1646 DC AD(rd_kafka_txn_coord_set)
00012AF8 0000000000000000                  27278 @lit_2033_1647 DC AD(rwlock_wrunlock)
00012B00 0000000000000F28                  27279 @lit_2033_1648 DC AD(rd_refcnt_sub0)
00012B08 000009B8                          27280 @lit_region_diff_2033_4_5  DC A(@REGION_2033_5-@REGION_2033_4)
00012B0C 00000000
00012B10 0000000000000000                  27281 @lit_2033_1649 DC AD(rd_kafka_broker_destroy_final)
00012B18 0000000000000000                  27282 @lit_2033_1651 DC AD(rd_kafka_broker_name)
00012B20 0000000000000000                  27283 @lit_2033_1652 DC AD(rd_kafka_err2str)
00012B28 0000000000005118                  27284 @lit_2033_1656 DC AD(rd_kafka_txn_set_fatal_error)
00012B30 0000000000000000                  27285 @lit_2033_1657 DC AD(rd_kafka_idemp_set_state)
00012B38 0000000000000000                  27286 @lit_2033_1659 DC AD(rd_kafka_metadata_refresh_brokers)
00012B40 0000000000000000                  27287 @lit_2033_1661 DC AD(rd_kafka_err2name)
00012B48                                   27288 @L1896   DS    0H
00012B48 E3F0 C068 0004          00012A58  27289          LG    15,@lit_2033_1597
00012B4E 41F0 F5A0               000005A0  27290          LA    15,1440(0,15)
00012B52                                   27291 @L1897   DS    0H
00012B52 E310 6100 0004          00000100  27292          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00012B58 E310 1FD0 0004          00000FD0  27293          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00012B5E 4110 1210               00000210  27294          LA    1,528(0,1)
00012B62 E310 D518 0024          00000518  27295          STG   1,1304(0,13)
00012B68 E310 6100 0004          00000100  27296          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00012B6E E310 1FD0 0004          00000FD0  27297          LG    1,4048(0,1)
00012B74 E310 D520 0024          00000520  27298          STG   1,1312(0,13)
00012B7A 4110 D402               00000402  27299          LA    1,1026(0,13)
00012B7E E310 D528 0024          00000528  27300          STG   1,1320(0,13)
00012B84 B914 0017                         27301          LGFR  1,7
00012B88 E310 D530 0024          00000530  27302          STG   1,1328(0,13)
00012B8E D707 D538 D538 00000538 00000538  27303          XC    1336(8,13),1336(13)
00012B94 E310 C068 0004          00012A58  27304          LG    1,@lit_2033_1597
                                                                                                                           Page  541 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012B9A 4170 15C4               000005C4  27305          LA    7,1476(0,1)
00012B9E E370 D540 0024          00000540  27306          STG   7,1344(0,13)
00012BA4 4110 15D0               000005D0  27307          LA    1,1488(0,1)
00012BA8 E310 D548 0024          00000548  27308          STG   1,1352(0,13)
00012BAE E330 D550 0024          00000550  27309          STG   3,1360(0,13)
00012BB4 4810 60BA               000000BA  27310          LH    1,186(0,6)
00012BB8 B914 0011                         27311          LGFR  1,1
00012BBC E310 D558 0024          00000558  27312          STG   1,1368(0,13)
00012BC2 E380 D560 0024          00000560  27313          STG   8,1376(0,13)
00012BC8 E310 6098 0004          00000098  27314          LG    1,152(0,6)  ; offset of end in rd_slice_s
00012BCE E310 6090 000B          00000090  27315          SLG   1,144(0,6)
00012BD4 E310 D568 0024          00000568  27316          STG   1,1384(0,13)
00012BDA E310 C078 0004          00012A68  27317          LG    1,@lit_2033_1599
00012BE0 4110 13E4               000003E4  27318          LA    1,996(0,1)
00012BE4 E310 D570 0024          00000570  27319          STG   1,1392(0,13)
00012BEA E548 D578 0B9F          00000578  27320          MVGHI 1400(13),2975
00012BF0 E340 D580 0024          00000580  27321          STG   4,1408(0,13)
00012BF6 E390 D588 0024          00000588  27322          STG   9,1416(0,13)
00012BFC E3F0 D590 0024          00000590  27323          STG   15,1424(0,13)
00012C02 41F0 D302               00000302  27324          LA    15,770(0,13)
00012C06 E3F0 D598 0024          00000598  27325          STG   15,1432(0,13)
00012C0C 4110 D518               00000518  27326          LA    1,1304(0,13)
00012C10 E3F0 C070 0004          00012A60  27327          LG    15,@lit_2033_1600 ; rd_kafka_log0
00012C16                                   27328 @@gen_label2206 DS    0H
00012C16 05EF                              27329          BALR  14,15
00012C18                                   27330 @@gen_label2207 DS    0H
00012C18                                   27331 @L1887   DS    0H
00012C18 E54C 6188 FF65          00000188  27332          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00012C1E 47F0 C816               00013206  27333          B     @_err_parse@2033@18
00012C22                                   27334 @L1883   DS    0H
00012C22                                   27335 @L1879   DS    0H
00012C22                                   27336 @L1878   DS    0H
00012C22                                   27337 @L1874   DS    0H
00012C22 E55C D2F0 0000          000002F0  27338          CHSI  752(13),0
00012C28 47D0 C2F6               00012CE6  27339          BNH   @L1898
00012C2C E548 D518 0001          00000518  27340          MVGHI 1304(13),1
00012C32 E3F0 D2F0 0014          000002F0  27341          LGF   15,752(0,13)
00012C38 E3F0 D520 0024          00000520  27342          STG   15,1312(0,13)
00012C3E 4110 D518               00000518  27343          LA    1,1304(0,13)
00012C42 E3F0 C080 0004          00012A70  27344          LG    15,@lit_2033_1601 ; calloc
00012C48                                   27345 @@gen_label2209 DS    0H
00012C48 05EF                              27346          BALR  14,15
00012C4A                                   27347 @@gen_label2210 DS    0H
00012C4A B904 004F                         27348          LGR   4,15
00012C4E E310 D2F0 0014          000002F0  27349          LGF   1,752(0,13)
00012C54 E380 D2F8 0004          000002F8  27350          LG    8,760(0,13)
00012C5A B904 0094                         27351          LGR   9,4
00012C5E B902 00F1                         27352          LTGR  15,1
00012C62 4780 C2A0               00012C90  27353          BZ    @@gen_label2213
00012C66 A7FB FFFF               0000FFFF  27354          AGHI  15,-1
00012C6A EB1F 0008 000A          00000008  27355          SRAG  1,15,8(0)
00012C70 B902 0011                         27356          LTGR  1,1
                                                                                                                           Page  542 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012C74 4780 C29C               00012C8C  27357          BZ    @@gen_label2212
00012C78                                   27358 @@gen_label2211 DS 0H
00012C78 D2FF 9000 8000 00000000 00000000  27359          MVC   0(256,9),0(8)
00012C7E 4190 9100               00000100  27360          LA    9,256(0,9)
00012C82 4180 8100               00000100  27361          LA    8,256(0,8)
00012C86 E310 C288 0046          00012C78  27362          BCTG  1,@@gen_label2211
00012C8C                                   27363 @@gen_label2212 DS 0H
00012C8C 44F0 C088               00012A78  27364          EX    15,@lit_2033_1602
00012C90                                   27365 @@gen_label2213 DS 0H
00012C90 E3F0 D2F0 0014          000002F0  27366          LGF   15,752(0,13)
00012C96 E3F0 D310 0024          00000310  27367          STG   15,784(0,13) ; ulen
00012C9C E3F0 D308 0024          00000308  27368          STG   15,776(0,13) ; alen
00012CA2 E3F0 D2F8 0004          000002F8  27369          LG    15,760(0,13)
00012CA8 E3F0 D518 0024          00000518  27370          STG   15,1304(0,13)
00012CAE 41F0 D308               00000308  27371          LA    15,776(0,13)
00012CB2 E3F0 D520 0024          00000520  27372          STG   15,1312(0,13)
00012CB8 E340 D528 0024          00000528  27373          STG   4,1320(0,13)
00012CBE 41F0 D310               00000310  27374          LA    15,784(0,13)
00012CC2 E3F0 D530 0024          00000530  27375          STG   15,1328(0,13)
00012CC8 4110 D518               00000518  27376          LA    1,1304(0,13)
00012CCC E3F0 C090 0004          00012A80  27377          LG    15,@lit_2033_1603 ; utf8_2_ebcdic
00012CD2                                   27378 @@gen_label2214 DS    0H
00012CD2 05EF                              27379          BALR  14,15
00012CD4                                   27380 @@gen_label2215 DS    0H
00012CD4 E340 D518 0024          00000518  27381          STG   4,1304(0,13)
00012CDA 4110 D518               00000518  27382          LA    1,1304(0,13)
00012CDE E3F0 C098 0004          00012A88  27383          LG    15,@lit_2033_1604 ; free
00012CE4                                   27384 @@gen_label2216 DS    0H
00012CE4 05EF                              27385          BALR  14,15
00012CE6                                   27386 @@gen_label2217 DS    0H
00012CE6                                   27387 @L1898   DS    0H
                                           27388 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           27389 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           27390 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           27391 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           27392 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           27393 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c",2976, _\
                                           27394 * _FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while \
                                           27395 * (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": ");\
                                           27396 *  if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname\
                                           27397 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                           27398 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                           27399 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                           27400 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                           27401 * decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " \
                                           27402 * "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" \
                                           27403 * " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(\
                                           27404 * rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_sli\
                                           27405 * ce_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rk\
                                           27406 * buf->rkbuf_reader)->start), __FUNCTION__, 2976, __len0, ((&rkbuf->rk\
                                           27407 * buf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf\
                                           27408 * ->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrec\
                                                                                                                           Page  543 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           27409 * t broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbu\
                                           27410 * f_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); }\
                                           27411 *  } while (0); } while (0); *(&Port) = (_v); } while (0);
00012CE6                                   27412 @L1899   DS    0H
00012CE6                                   27413 @L1902   DS    0H
00012CE6 A749 0004               00000004  27414          LGHI  4,4         ; 4
00012CEA 41F0 6078               00000078  27415          LA    15,120(0,6)
00012CEE E3F0 D518 0024          00000518  27416          STG   15,1304(0,13)
00012CF4 41F0 D0E4               000000E4  27417          LA    15,228(0,13)
00012CF8 E3F0 D520 0024          00000520  27418          STG   15,1312(0,13)
00012CFE E340 D528 0024          00000528  27419          STG   4,1320(0,13)
00012D04 4110 D518               00000518  27420          LA    1,1304(0,13)
00012D08 E3F0 C0A0 0004          00012A90  27421          LG    15,@lit_2033_1606 ; rd_slice_read
00012D0E                                   27422 @@gen_label2218 DS    0H
00012D0E 05EF                              27423          BALR  14,15
00012D10                                   27424 @@gen_label2219 DS    0H
00012D10 B902 00FF                         27425          LTGR  15,15
00012D14 4770 C5A4               00012F94  27426          BNZ   @L1905
00012D18                                   27427 @L1906   DS    0H
00012D18 E380 6098 0004          00000098  27428          LG    8,152(0,6)  ; offset of end in rd_slice_s
00012D1E 41F0 6078               00000078  27429          LA    15,120(0,6)
00012D22 E3F0 D518 0024          00000518  27430          STG   15,1304(0,13)
00012D28 4110 D518               00000518  27431          LA    1,1304(0,13)
00012D2C E3F0 C060 0004          00012A50  27432          LG    15,@lit_2033_1596 ; rd_slice_abs_offset
00012D32                                   27433 @@gen_label2221 DS    0H
00012D32 05EF                              27434          BALR  14,15
00012D34                                   27435 @@gen_label2222 DS    0H
00012D34 B90B 008F                         27436          SLGR  8,15
00012D38 B921 0048                         27437          CLGR  4,8
00012D3C 47D0 C5A4               00012F94  27438          BNH   @L1909
00012D40                                   27439 @L1910   DS    0H
00012D40 1277                              27440          LTR   7,7
00012D42 47D0 C59A               00012F8A  27441          BNH   @L1913
00012D46                                   27442 @L1914   DS    0H
00012D46 E3F0 6100 0002          00000100  27443          LTG   15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012D4C 4770 C3A2               00012D92  27444          BNZ   @L1917
00012D50 E3F0 C068 0004          00012A58  27445          LG    15,@lit_2033_1597
00012D56 4110 F1B2               000001B2  27446          LA    1,434(0,15)
00012D5A E310 D518 0024          00000518  27447          STG   1,1304(0,13)
00012D60 E548 D520 0BA0          00000520  27448          MVGHI 1312(13),2976
00012D66 E310 C078 0004          00012A68  27449          LG    1,@lit_2033_1599
00012D6C 4110 13E4               000003E4  27450          LA    1,996(0,1)
00012D70 E310 D528 0024          00000528  27451          STG   1,1320(0,13)
00012D76 D707 D530 D530 00000530 00000530  27452          XC    1328(8,13),1328(13)
00012D7C 41F0 F582               00000582  27453          LA    15,1410(0,15)
00012D80 E3F0 D538 0024          00000538  27454          STG   15,1336(0,13)
00012D86 4110 D518               00000518  27455          LA    1,1304(0,13)
00012D8A E3F0 C0A8 0004          00012A98  27456          LG    15,@lit_2033_1610 ; rd_kafka_crash
00012D90                                   27457 @@gen_label2226 DS    0H
00012D90 05EF                              27458          BALR  14,15
00012D92                                   27459 @@gen_label2227 DS    0H
00012D92                                   27460 @L1917   DS    0H
                                                                                                                           Page  544 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012D92 41F0 D302               00000302  27461          LA    15,770(0,13)
00012D96 E3F0 D518 0024          00000518  27462          STG   15,1304(0,13)
00012D9C E548 D520 0100          00000520  27463          MVGHI 1312(13),256
00012DA2 E3F0 C068 0004          00012A58  27464          LG    15,@lit_2033_1597
00012DA8 41F0 F59C               0000059C  27465          LA    15,1436(0,15)
00012DAC E3F0 D528 0024          00000528  27466          STG   15,1320(0,13)
00012DB2 4110 D518               00000518  27467          LA    1,1304(0,13)
00012DB6 E3F0 C0B0 0004          00012AA0  27468          LG    15,@lit_2033_1612 ; snprintf
00012DBC                                   27469 @@gen_label2228 DS    0H
00012DBC 05EF                              27470          BALR  14,15
00012DBE                                   27471 @@gen_label2229 DS    0H
00012DBE 41F0 D302               00000302  27472          LA    15,770(0,13)
00012DC2 B904 001F                         27473          LGR   1,15
00012DC6 A709 0000               00000000  27474          LGHI  0,0
00012DCA                                   27475 @@gen_label2230 DS 0H
00012DCA B25E 000F                         27476          SRST  0,15
00012DCE 4710 C3DA               00012DCA  27477          BC  1,@@gen_label2230
00012DD2 B90B 0001                         27478          SLGR  0,1
00012DD6 A70F 0002               00000002  27479          CGHI  0,2
00012DDA 4770 C3F2               00012DE2  27480          BNE   @L1919
00012DDE 9200 D302      00000302 00000000  27481          MVI   770(13),0
00012DE2                                   27482 @L1918   DS    0H
00012DE2                                   27483 @L1919   DS    0H
00012DE2 E3F0 6100 0004          00000100  27484          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012DE8 A739 1638               00001638  27485          LGHI  3,5688      ; 5688
00012DEC 41F3 F000               00000000  27486          LA    15,0(3,15)
00012DF0 E3F0 D518 0024          00000518  27487          STG   15,1304(0,13)
00012DF6 4110 D518               00000518  27488          LA    1,1304(0,13)
00012DFA E3F0 C0B8 0004          00012AA8  27489          LG    15,@lit_2033_1614 ; mtx_lock
00012E00                                   27490 @@gen_label2232 DS    0H
00012E00 05EF                              27491          BALR  14,15
00012E02                                   27492 @@gen_label2233 DS    0H
00012E02 41F0 D402               00000402  27493          LA    15,1026(0,13)
00012E06 E3F0 D518 0024          00000518  27494          STG   15,1304(0,13)
00012E0C E3F0 6100 0004          00000100  27495          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012E12 A719 1630               00001630  27496          LGHI  1,5680      ; 5680
00012E16 E3F1 F000 0004          00000000  27497          LG    15,0(1,15)
00012E1C E3F0 D520 0024          00000520  27498          STG   15,1312(0,13)
00012E22 E548 D528 0100          00000528  27499          MVGHI 1320(13),256
00012E28 4110 D518               00000518  27500          LA    1,1304(0,13)
00012E2C E3F0 C0C0 0004          00012AB0  27501          LG    15,@lit_2033_1616 ; rd_strlcpy
00012E32                                   27502 @@gen_label2234 DS    0H
00012E32 05EF                              27503          BALR  14,15
00012E34                                   27504 @@gen_label2235 DS    0H
00012E34 E3F0 6100 0004          00000100  27505          LG    15,256(0,6) ; offset of rkbuf_rkb in rd_kafka_buf_s
00012E3A 41F3 F000               00000000  27506          LA    15,0(3,15)
00012E3E E3F0 D518 0024          00000518  27507          STG   15,1304(0,13)
00012E44 4110 D518               00000518  27508          LA    1,1304(0,13)
00012E48 E3F0 C0C8 0004          00012AB8  27509          LG    15,@lit_2033_1618 ; mtx_unlock
00012E4E                                   27510 @@gen_label2236 DS    0H
00012E4E 05EF                              27511          BALR  14,15
00012E50                                   27512 @@gen_label2237 DS    0H
                                                                                                                           Page  545 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012E50 E3F0 60B8 0015          000000B8  27513          LGH   15,184(0,6)
00012E56 E3F0 D518 0024          00000518  27514          STG   15,1304(0,13)
00012E5C 4110 D518               00000518  27515          LA    1,1304(0,13)
00012E60 E3F0 C0D0 0004          00012AC0  27516          LG    15,@lit_2033_1619 ; rd_kafka_ApiKey2str
00012E66                                   27517 @@gen_label2238 DS    0H
00012E66 05EF                              27518          BALR  14,15
00012E68                                   27519 @@gen_label2239 DS    0H
00012E68 B904 003F                         27520          LGR   3,15
00012E6C 41F0 6078               00000078  27521          LA    15,120(0,6)
00012E70 E3F0 D518 0024          00000518  27522          STG   15,1304(0,13)
00012E76 4110 D518               00000518  27523          LA    1,1304(0,13)
00012E7A E3F0 C058 0004          00012A48  27524          LG    15,@lit_2033_1595 ; rd_slice_offset
00012E80                                   27525 @@gen_label2240 DS    0H
00012E80 05EF                              27526          BALR  14,15
00012E82                                   27527 @@gen_label2241 DS    0H
00012E82 B904 008F                         27528          LGR   8,15
00012E86 E390 6098 0004          00000098  27529          LG    9,152(0,6)  ; offset of end in rd_slice_s
00012E8C 41F0 6078               00000078  27530          LA    15,120(0,6)
00012E90 E3F0 D518 0024          00000518  27531          STG   15,1304(0,13)
00012E96 4110 D518               00000518  27532          LA    1,1304(0,13)
00012E9A E3F0 C060 0004          00012A50  27533          LG    15,@lit_2033_1596 ; rd_slice_abs_offset
00012EA0                                   27534 @@gen_label2242 DS    0H
00012EA0 05EF                              27535          BALR  14,15
00012EA2                                   27536 @@gen_label2243 DS    0H
00012EA2 B90B 009F                         27537          SLGR  9,15
00012EA6 E3F0 61E8 0002          000001E8  27538          LTG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00012EAC 4780 C4CA               00012EBA  27539          BZ    @L1922
00012EB0 E3F0 61E8 0004          000001E8  27540          LG    15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00012EB6 47F0 C4D4               00012EC4  27541          B     @L1923
00012EBA                                   27542 @L1922   DS    0H
00012EBA E3F0 C068 0004          00012A58  27543          LG    15,@lit_2033_1597
00012EC0 41F0 F5A0               000005A0  27544          LA    15,1440(0,15)
00012EC4                                   27545 @L1923   DS    0H
00012EC4 E310 6100 0004          00000100  27546          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00012ECA E310 1FD0 0004          00000FD0  27547          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00012ED0 4110 1210               00000210  27548          LA    1,528(0,1)
00012ED4 E310 D518 0024          00000518  27549          STG   1,1304(0,13)
00012EDA E310 6100 0004          00000100  27550          LG    1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00012EE0 E310 1FD0 0004          00000FD0  27551          LG    1,4048(0,1)
00012EE6 E310 D520 0024          00000520  27552          STG   1,1312(0,13)
00012EEC 4110 D402               00000402  27553          LA    1,1026(0,13)
00012EF0 E310 D528 0024          00000528  27554          STG   1,1320(0,13)
00012EF6 B914 0017                         27555          LGFR  1,7
00012EFA E310 D530 0024          00000530  27556          STG   1,1328(0,13)
00012F00 D707 D538 D538 00000538 00000538  27557          XC    1336(8,13),1336(13)
00012F06 E310 C068 0004          00012A58  27558          LG    1,@lit_2033_1597
00012F0C 4170 15C4               000005C4  27559          LA    7,1476(0,1)
00012F10 E370 D540 0024          00000540  27560          STG   7,1344(0,13)
00012F16 4110 15D0               000005D0  27561          LA    1,1488(0,1)
00012F1A E310 D548 0024          00000548  27562          STG   1,1352(0,13)
                                                                                                                           Page  546 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012F20 E330 D550 0024          00000550  27563          STG   3,1360(0,13)
00012F26 4810 60BA               000000BA  27564          LH    1,186(0,6)
00012F2A B914 0011                         27565          LGFR  1,1
00012F2E E310 D558 0024          00000558  27566          STG   1,1368(0,13)
00012F34 E380 D560 0024          00000560  27567          STG   8,1376(0,13)
00012F3A E310 6098 0004          00000098  27568          LG    1,152(0,6)  ; offset of end in rd_slice_s
00012F40 E310 6090 000B          00000090  27569          SLG   1,144(0,6)
00012F46 E310 D568 0024          00000568  27570          STG   1,1384(0,13)
00012F4C E310 C078 0004          00012A68  27571          LG    1,@lit_2033_1599
00012F52 4110 13E4               000003E4  27572          LA    1,996(0,1)
00012F56 E310 D570 0024          00000570  27573          STG   1,1392(0,13)
00012F5C E548 D578 0BA0          00000578  27574          MVGHI 1400(13),2976
00012F62 E340 D580 0024          00000580  27575          STG   4,1408(0,13)
00012F68 E390 D588 0024          00000588  27576          STG   9,1416(0,13)
00012F6E E3F0 D590 0024          00000590  27577          STG   15,1424(0,13)
00012F74 41F0 D302               00000302  27578          LA    15,770(0,13)
00012F78 E3F0 D598 0024          00000598  27579          STG   15,1432(0,13)
00012F7E 4110 D518               00000518  27580          LA    1,1304(0,13)
00012F82 E3F0 C070 0004          00012A60  27581          LG    15,@lit_2033_1600 ; rd_kafka_log0
00012F88                                   27582 @@gen_label2245 DS    0H
00012F88 05EF                              27583          BALR  14,15
00012F8A                                   27584 @@gen_label2246 DS    0H
00012F8A                                   27585 @L1913   DS    0H
00012F8A E54C 6188 FF65          00000188  27586          MVHI  392(6),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00012F90 47F0 C816               00013206  27587          B     @_err_parse@2033@18
00012F94                                   27588 @L1909   DS    0H
00012F94                                   27589 @L1905   DS    0H
00012F94 58F0 D0E4               000000E4  27590          L     15,228(0,13) ; _v
00012F98 50F0 D2E8               000002E8  27591          ST    15,744(0,13)
                                           27592 * ***
                                           27593 * ***           do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x8000)))) \
                                           27594 * { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_st\
                                           27595 * rlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rk\
                                           27596 * b)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)-\
                                           27597 * >rkb_rk, _logname, 7, (0x8000), "TXNCOORD", "FindCoordinator respons\
                                           27598 * e: " "Transaction coordinator is broker %" "d" " (%.*s:%d)", NodeId,\
                                           27599 *  (int)((&Host)->len == -1 ? 0 : (&Host)->len), (&Host)->str, (int)Po\
                                           27600 * rt); } while (0); } } while (0);
00012F9C                                   27601 @L1924   DS    0H
00012F9C E3F0 2FD0 0004          00000FD0  27602          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00012FA2 9180 F322      00000322 00000080  27603          TM    802(15),128
00012FA6 4780 C6B8               000130A8  27604          BZ    @L1927
00012FAA                                   27605 @L1928   DS    0H
00012FAA A749 1638               00001638  27606          LGHI  4,5688      ; 5688
00012FAE 41F4 2000               00000000  27607          LA    15,0(4,2)
00012FB2 E3F0 D518 0024          00000518  27608          STG   15,1304(0,13)
00012FB8 4110 D518               00000518  27609          LA    1,1304(0,13)
00012FBC E3F0 C0B8 0004          00012AA8  27610          LG    15,@lit_2033_1614 ; mtx_lock
00012FC2                                   27611 @@gen_label2248 DS    0H
00012FC2 05EF                              27612          BALR  14,15
00012FC4                                   27613 @@gen_label2249 DS    0H
00012FC4 41F0 D302               00000302  27614          LA    15,770(0,13)
                                                                                                                           Page  547 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00012FC8 E3F0 D518 0024          00000518  27615          STG   15,1304(0,13)
00012FCE A7F9 1630               00001630  27616          LGHI  15,5680     ; 5680
00012FD2 E3FF 2000 0004          00000000  27617          LG    15,0(15,2)
00012FD8 E3F0 D520 0024          00000520  27618          STG   15,1312(0,13)
00012FDE E548 D528 0100          00000528  27619          MVGHI 1320(13),256
00012FE4 4110 D518               00000518  27620          LA    1,1304(0,13)
00012FE8 E3F0 C0C0 0004          00012AB0  27621          LG    15,@lit_2033_1616 ; rd_strlcpy
00012FEE                                   27622 @@gen_label2250 DS    0H
00012FEE 05EF                              27623          BALR  14,15
00012FF0                                   27624 @@gen_label2251 DS    0H
00012FF0 41F4 2000               00000000  27625          LA    15,0(4,2)
00012FF4 E3F0 D518 0024          00000518  27626          STG   15,1304(0,13)
00012FFA 4110 D518               00000518  27627          LA    1,1304(0,13)
00012FFE E3F0 C0C8 0004          00012AB8  27628          LG    15,@lit_2033_1618 ; mtx_unlock
00013004                                   27629 @@gen_label2252 DS    0H
00013004 05EF                              27630          BALR  14,15
00013006                                   27631 @@gen_label2253 DS    0H
00013006 E55C D2F0 FFFF          000002F0  27632          CHSI  752(13),-1
0001300C 4770 C628               00013018  27633          BNE   @L1931
00013010 A7F8 0000               00000000  27634          LHI   15,0        ; 0
00013014 47F0 C62C               0001301C  27635          B     @L1932
00013018                                   27636 @L1931   DS    0H
00013018 58F0 D2F0               000002F0  27637          L     15,752(0,13)
0001301C                                   27638 @L1932   DS    0H
0001301C E310 2FD0 0004          00000FD0  27639          LG    1,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00013022 4110 1210               00000210  27640          LA    1,528(0,1)
00013026 E310 D518 0024          00000518  27641          STG   1,1304(0,13)
0001302C E310 2FD0 0004          00000FD0  27642          LG    1,4048(0,2)
00013032 E310 D520 0024          00000520  27643          STG   1,1312(0,13)
00013038 4110 D302               00000302  27644          LA    1,770(0,13)
0001303C E310 D528 0024          00000528  27645          STG   1,1320(0,13)
00013042 E548 D530 0007          00000530  27646          MVGHI 1328(13),7
00013048 C01F 0000 8000                    27647          LLILF 1,X'00008000' ; 32768
0001304E E310 D538 0024          00000538  27648          STG   1,1336(0,13)
00013054 E310 C0D8 0004          00012AC8  27649          LG    1,@lit_2033_1634
0001305A 4140 12FE               000002FE  27650          LA    4,766(0,1)
0001305E E340 D540 0024          00000540  27651          STG   4,1344(0,13)
00013064 4110 1308               00000308  27652          LA    1,776(0,1)
00013068 E310 D548 0024          00000548  27653          STG   1,1352(0,13)
0001306E E310 D2EC 0014          000002EC  27654          LGF   1,748(0,13) ; NodeId
00013074 E310 D550 0024          00000550  27655          STG   1,1360(0,13)
0001307A B914 00FF                         27656          LGFR  15,15
0001307E E3F0 D558 0024          00000558  27657          STG   15,1368(0,13)
00013084 E3F0 D2F8 0004          000002F8  27658          LG    15,760(0,13)
0001308A E3F0 D560 0024          00000560  27659          STG   15,1376(0,13)
00013090 E3F0 D2E8 0014          000002E8  27660          LGF   15,744(0,13) ; Port
00013096 E3F0 D568 0024          00000568  27661          STG   15,1384(0,13)
0001309C 4110 D518               00000518  27662          LA    1,1304(0,13)
000130A0 E3F0 C070 0004          00012A60  27663          LG    15,@lit_2033_1600 ; rd_kafka_log0
000130A6                                   27664 @@gen_label2255 DS    0H
000130A6 05EF                              27665          BALR  14,15
000130A8                                   27666 @@gen_label2256 DS    0H
                                                                                                                           Page  548 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000130A8                                   27667 @L1927   DS    0H
                                           27668 * ***
                                           27669 * ***
                                           27670 * ***
                                           27671 * ***
                                           27672 * ***           rwlock_rdlock(&(rk)->rk_lock);
000130A8 41F0 59A0               000009A0  27673          LA    15,2464(0,5)
000130AC E3F0 D518 0024          00000518  27674          STG   15,1304(0,13)
000130B2 4110 D518               00000518  27675          LA    1,1304(0,13)
000130B6 E3F0 C0E0 0004          00012AD0  27676          LG    15,@lit_2033_1636 ; rwlock_rdlock
000130BC                                   27677 @@gen_label2257 DS    0H
000130BC 05EF                              27678          BALR  14,15
000130BE                                   27679 @@gen_label2258 DS    0H
                                           27680 * ***           if (NodeId == -1)
000130BE E55C D2EC FFFF          000002EC  27681          CHSI  748(13),-1
000130C4 4770 C6E0               000130D0  27682          BNE   @L1933
                                           27683 * ***                   err = RD_KAFKA_RESP_ERR_COORDINATOR_NOT_AVAILA\
                                           27684 * BLE;
000130C8 A738 000F               0000000F  27685          LHI   3,15        ; 15
000130CC 47F0 C764               00013154  27686          B     @L1934
                                           27687 * ***           else if (!(rkb = rd_kafka_broker_find_by_nodeid0_fl(__\
                                           27688 * FUNCTION__,2986, rk,NodeId,-1,0))) {
000130D0                                   27689 @L1933   DS    0H
000130D0 E3F0 C078 0004          00012A68  27690          LG    15,@lit_2033_1599
000130D6 41F0 F3E4               000003E4  27691          LA    15,996(0,15)
000130DA E3F0 D518 0024          00000518  27692          STG   15,1304(0,13)
000130E0 E548 D520 0BAA          00000520  27693          MVGHI 1312(13),2986
000130E6 E350 D528 0024          00000528  27694          STG   5,1320(0,13)
000130EC E3F0 D2EC 0014          000002EC  27695          LGF   15,748(0,13) ; NodeId
000130F2 E3F0 D530 0024          00000530  27696          STG   15,1328(0,13)
000130F8 E548 D538 FFFF          00000538  27697          MVGHI 1336(13),-1
000130FE D707 D540 D540 00000540 00000540  27698          XC    1344(8,13),1344(13)
00013104 4110 D518               00000518  27699          LA    1,1304(0,13)
00013108 E3F0 C0E8 0004          00012AD8  27700          LG    15,@lit_2033_1639 ; rd_kafka_broker_find_by_nodeid0_fl
0001310E                                   27701 @@gen_label2260 DS    0H
0001310E 05EF                              27702          BALR  14,15
00013110                                   27703 @@gen_label2261 DS    0H
00013110 B902 002F                         27704          LTGR  2,15        ; rkb
00013114 4770 C764               00013154  27705          BNZ   @L1934
                                           27706 * ***                   snprintf(errstr, sizeof(errstr), "Transaction \
                                           27707 * coordinator %" "d" " is unknown", NodeId);
00013118 41F0 D0E8               000000E8  27708          LA    15,232(0,13)
0001311C E3F0 D518 0024          00000518  27709          STG   15,1304(0,13)
00013122 E548 D520 0200          00000520  27710          MVGHI 1312(13),512
00013128 E3F0 C0D8 0004          00012AC8  27711          LG    15,@lit_2033_1634
0001312E 41F0 F352               00000352  27712          LA    15,850(0,15)
00013132 E3F0 D528 0024          00000528  27713          STG   15,1320(0,13)
00013138 E3F0 D2EC 0014          000002EC  27714          LGF   15,748(0,13) ; NodeId
0001313E E3F0 D530 0024          00000530  27715          STG   15,1328(0,13)
00013144 4110 D518               00000518  27716          LA    1,1304(0,13)
00013148 E3F0 C0B0 0004          00012AA0  27717          LG    15,@lit_2033_1612 ; snprintf
0001314E                                   27718 @@gen_label2263 DS    0H
                                                                                                                           Page  549 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001314E 05EF                              27719          BALR  14,15
00013150                                   27720 @@gen_label2264 DS    0H
                                           27721 * ***
                                           27722 * ***
                                           27723 * ***                   err = RD_KAFKA_RESP_ERR__UNKNOWN_BROKER;
00013150 A738 FF6E               0000FF6E  27724          LHI   3,-146      ; -146
                                           27725 * ***           }
00013154                                   27726 @L1935   DS    0H
                                           27727 * ***           rwlock_rdunlock(&(rk)->rk_lock);
00013154                                   27728 @L1934   DS    0H
00013154 41F0 59A0               000009A0  27729          LA    15,2464(0,5)
00013158 E3F0 D518 0024          00000518  27730          STG   15,1304(0,13)
0001315E 4110 D518               00000518  27731          LA    1,1304(0,13)
00013162 E3F0 C0F0 0004          00012AE0  27732          LG    15,@lit_2033_1643 ; rwlock_rdunlock
00013168                                   27733 @@gen_label2265 DS    0H
00013168 05EF                              27734          BALR  14,15
0001316A                                   27735 @@gen_label2266 DS    0H
                                           27736 * ***
                                           27737 * ***           if (err)
0001316A 1233                              27738          LTR   3,3
0001316C 4770 C932               00013322  27739          BNZ   @L1941
                                           27740 * ***                   goto err;
00013170                                   27741 @L1936   DS    0H
                                           27742 * ***
                                           27743 * ***           rwlock_wrlock(&(rk)->rk_lock);
00013170 41F0 59A0               000009A0  27744          LA    15,2464(0,5)
00013174 E3F0 D518 0024          00000518  27745          STG   15,1304(0,13)
0001317A 4110 D518               00000518  27746          LA    1,1304(0,13)
0001317E E3F0 C0F8 0004          00012AE8  27747          LG    15,@lit_2033_1644 ; rwlock_wrlock
00013184                                   27748 @@gen_label2268 DS    0H
00013184 05EF                              27749          BALR  14,15
00013186                                   27750 @@gen_label2269 DS    0H
                                           27751 * ***           rd_kafka_txn_coord_set(rk, rkb, "FindCoordinator respo\
                                           27752 * nse");
00013186 E350 D518 0024          00000518  27753          STG   5,1304(0,13)
0001318C E320 D520 0024          00000520  27754          STG   2,1312(0,13)
00013192 E3F0 C0D8 0004          00012AC8  27755          LG    15,@lit_2033_1634
00013198 41F0 F378               00000378  27756          LA    15,888(0,15)
0001319C E3F0 D528 0024          00000528  27757          STG   15,1320(0,13)
000131A2 4110 D518               00000518  27758          LA    1,1304(0,13)
000131A6 E3F0 C100 0004          00012AF0  27759          LG    15,@lit_2033_1646 ; rd_kafka_txn_coord_set
000131AC                                   27760 @@gen_label2270 DS    0H
000131AC 05EF                              27761          BALR  14,15
000131AE                                   27762 @@gen_label2271 DS    0H
                                           27763 * ***           rwlock_wrunlock(&(rk)->rk_lock);
000131AE 41F0 59A0               000009A0  27764          LA    15,2464(0,5)
000131B2 E3F0 D518 0024          00000518  27765          STG   15,1304(0,13)
000131B8 4110 D518               00000518  27766          LA    1,1304(0,13)
000131BC E3F0 C108 0004          00012AF8  27767          LG    15,@lit_2033_1647 ; rwlock_wrunlock
000131C2                                   27768 @@gen_label2272 DS    0H
000131C2 05EF                              27769          BALR  14,15
000131C4                                   27770 @@gen_label2273 DS    0H
                                                                                                                           Page  550 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           27771 * ***
                                           27772 * ***           do { if (rd_refcnt_sub0(&(rkb)->rkb_refcnt) > 0) break\
                                           27773 * ; rd_kafka_broker_destroy_final(rkb); } while (0);
000131C4                                   27774 @L1937   DS    0H
000131C4 41F0 2FA0               00000FA0  27775          LA    15,4000(0,2)
000131C8 E3F0 D518 0024          00000518  27776          STG   15,1304(0,13)
000131CE 4110 D518               00000518  27777          LA    1,1304(0,13)
000131D2 E3F0 C110 0004          00012B00  27778          LG    15,@lit_2033_1648 ; rd_refcnt_sub0
000131D8                                   27779 @@gen_label2274 DS    0H
000131D8 05EF                              27780          BALR  14,15
000131DA                                   27781 @@gen_label2275 DS    0H
000131DA 12FF                              27782          LTR   15,15
000131DC 47D0 C7FA               000131EA  27783          BNH   *+14  Around region break
000131E0 E3C0 C118 001A          00012B08  27784          ALGF  12,@lit_region_diff_2033_4_5
                                           27785          DROP  12
                        000133A8           27786          USING @REGION_2033_5,12
000131E6 47F0 C05A               00013402  27787          B     @ret_lab_2033
                                           27788          DROP  12
                        000129F0           27789          USING @REGION_2033_4,12
000131EA                                   27790 @L1940   DS    0H
000131EA E320 D518 0024          00000518  27791          STG   2,1304(0,13)
000131F0 4110 D518               00000518  27792          LA    1,1304(0,13)
000131F4 E3F0 C120 0004          00012B10  27793          LG    15,@lit_2033_1649 ; rd_kafka_broker_destroy_final
000131FA                                   27794 @@gen_label2277 DS    0H
000131FA 05EF                              27795          BALR  14,15
000131FC                                   27796 @@gen_label2278 DS    0H
000131FC                                   27797 @L1938   DS    0H
                                           27798 * ***
                                           27799 * ***           return;
000131FC E3C0 C118 001A          00012B08  27800          ALGF  12,@lit_region_diff_2033_4_5
                                           27801          DROP  12
                        000133A8           27802          USING @REGION_2033_5,12
00013202 47F0 C05A               00013402  27803          B     @ret_lab_2033
                                           27804          DROP  12
                        000129F0           27805          USING @REGION_2033_4,12
                                           27806 * ***
                                           27807 * ***    err_parse:
                                           27808 * ***           err = rkbuf->rkbuf_err;
00013206                                   27809 @_err_parse@2033@18 DS 0H
00013206 5830 6188               00000188  27810          L     3,392(0,6)  ; offset of rkbuf_err in rd_kafka_buf_s
                                           27811 * ***    err:
                                           27812 * ***
                                           27813 * ***           switch (err)
0001320A                                   27814 @_err@2033@17 DS 0H
0001320A 47F0 C932               00013322  27815          B     @L1941
                                           27816 * ***           {
                                           27817 * ***           case RD_KAFKA_RESP_ERR__DESTROY:
0001320E                                   27818 @L1943   DS    0H
                                           27819 * ***                   return;
                                           27820 * ***
                                           27821 * ***           case RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_\
                                           27822 * FAILED:
                                                                                                                           Page  551 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           27823 * ***           case RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED:
0001320E                                   27824 @L1945   DS    0H
                                           27825 * ***                   rwlock_wrlock(&(rk)->rk_lock);
0001320E 41F0 59A0               000009A0  27826          LA    15,2464(0,5)
00013212 E3F0 D518 0024          00000518  27827          STG   15,1304(0,13)
00013218 4110 D518               00000518  27828          LA    1,1304(0,13)
0001321C E3F0 C0F8 0004          00012AE8  27829          LG    15,@lit_2033_1644 ; rwlock_wrlock
00013222                                   27830 @@gen_label2279 DS    0H
00013222 05EF                              27831          BALR  14,15
00013224                                   27832 @@gen_label2280 DS    0H
                                           27833 * ***                   rd_kafka_txn_set_fatal_error(
                                           27834 * ***                           rkb->rkb_rk, RD_DONT_LOCK, err,
                                           27835 * ***                           "Failed to find transaction coordinato\
                                           27836 * r: %s: %s%s%s",
                                           27837 * ***                           rd_kafka_broker_name(rkb),
                                           27838 * ***                           rd_kafka_err2str(err),
                                           27839 * ***                           *errstr ? ": " : "", errstr);
00013224 E320 D518 0024          00000518  27840          STG   2,1304(0,13)
0001322A 4110 D518               00000518  27841          LA    1,1304(0,13)
0001322E E3F0 C128 0004          00012B18  27842          LG    15,@lit_2033_1651 ; rd_kafka_broker_name
00013234                                   27843 @@gen_label2281 DS    0H
00013234 05EF                              27844          BALR  14,15
00013236                                   27845 @@gen_label2282 DS    0H
00013236 B904 004F                         27846          LGR   4,15
0001323A B914 00F3                         27847          LGFR  15,3
0001323E E3F0 D518 0024          00000518  27848          STG   15,1304(0,13)
00013244 4110 D518               00000518  27849          LA    1,1304(0,13)
00013248 E3F0 C130 0004          00012B20  27850          LG    15,@lit_2033_1652 ; rd_kafka_err2str
0001324E                                   27851 @@gen_label2283 DS    0H
0001324E 05EF                              27852          BALR  14,15
00013250                                   27853 @@gen_label2284 DS    0H
00013250 9500 D0E8      000000E8 00000000  27854          CLI   232(13),0
00013254 4780 C876               00013266  27855          BE    @L1946
00013258 E310 C068 0004          00012A58  27856          LG    1,@lit_2033_1597
0001325E 4110 159C               0000059C  27857          LA    1,1436(0,1)
00013262 47F0 C880               00013270  27858          B     @L1947
00013266                                   27859 @L1946   DS    0H
00013266 E310 C068 0004          00012A58  27860          LG    1,@lit_2033_1597
0001326C 4110 13C4               000003C4  27861          LA    1,964(0,1)
00013270                                   27862 @L1947   DS    0H
00013270 E320 2FD0 0004          00000FD0  27863          LG    2,4048(0,2)
00013276 E320 D518 0024          00000518  27864          STG   2,1304(0,13)
0001327C D707 D520 D520 00000520 00000520  27865          XC    1312(8,13),1312(13)
00013282 B914 0023                         27866          LGFR  2,3
00013286 E320 D528 0024          00000528  27867          STG   2,1320(0,13)
0001328C E320 C0D8 0004          00012AC8  27868          LG    2,@lit_2033_1634
00013292 4120 2392               00000392  27869          LA    2,914(0,2)
00013296 E320 D530 0024          00000530  27870          STG   2,1328(0,13)
0001329C E340 D538 0024          00000538  27871          STG   4,1336(0,13)
000132A2 E3F0 D540 0024          00000540  27872          STG   15,1344(0,13)
000132A8 E310 D548 0024          00000548  27873          STG   1,1352(0,13)
000132AE 41F0 D0E8               000000E8  27874          LA    15,232(0,13)
                                                                                                                           Page  552 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000132B2 E3F0 D550 0024          00000550  27875          STG   15,1360(0,13)
000132B8 4110 D518               00000518  27876          LA    1,1304(0,13)
000132BC E3F0 C138 0004          00012B28  27877          LG    15,@lit_2033_1656 ; rd_kafka_txn_set_fatal_error
000132C2                                   27878 @@gen_label2286 DS    0H
000132C2 05EF                              27879          BALR  14,15
000132C4                                   27880 @@gen_label2287 DS    0H
                                           27881 * ***
                                           27882 * ***                   rd_kafka_idemp_set_state(rk, RD_KAFKA_IDEMP_ST\
                                           27883 * ATE_FATAL_ERROR);
000132C4 E350 D518 0024          00000518  27884          STG   5,1304(0,13)
000132CA E548 D520 0002          00000520  27885          MVGHI 1312(13),2
000132D0 4110 D518               00000518  27886          LA    1,1304(0,13)
000132D4 E3F0 C140 0004          00012B30  27887          LG    15,@lit_2033_1657 ; rd_kafka_idemp_set_state
000132DA                                   27888 @@gen_label2288 DS    0H
000132DA 05EF                              27889          BALR  14,15
000132DC                                   27890 @@gen_label2289 DS    0H
                                           27891 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
000132DC 41F0 59A0               000009A0  27892          LA    15,2464(0,5)
000132E0 E3F0 D518 0024          00000518  27893          STG   15,1304(0,13)
000132E6 4110 D518               00000518  27894          LA    1,1304(0,13)
000132EA E3F0 C108 0004          00012AF8  27895          LG    15,@lit_2033_1647 ; rwlock_wrunlock
000132F0                                   27896 @@gen_label2290 DS    0H
000132F0 05EF                              27897          BALR  14,15
000132F2                                   27898 @@gen_label2291 DS    0H
                                           27899 * ***                   return;
000132F2 E3C0 C118 001A          00012B08  27900          ALGF  12,@lit_region_diff_2033_4_5
                                           27901          DROP  12
                        000133A8           27902          USING @REGION_2033_5,12
000132F8 47F0 C05A               00013402  27903          B     @ret_lab_2033
                                           27904          DROP  12
                        000129F0           27905          USING @REGION_2033_4,12
                                           27906 * ***
                                           27907 * ***           case RD_KAFKA_RESP_ERR__UNKNOWN_BROKER:
000132FC                                   27908 @L1948   DS    0H
                                           27909 * ***                   rd_kafka_metadata_refresh_brokers(rk, ((void *\
                                           27910 * )0), errstr);
000132FC E350 D518 0024          00000518  27911          STG   5,1304(0,13)
00013302 D707 D520 D520 00000520 00000520  27912          XC    1312(8,13),1312(13)
00013308 41F0 D0E8               000000E8  27913          LA    15,232(0,13)
0001330C E3F0 D528 0024          00000528  27914          STG   15,1320(0,13)
00013312 4110 D518               00000518  27915          LA    1,1304(0,13)
00013316 E3F0 C148 0004          00012B38  27916          LG    15,@lit_2033_1659 ; rd_kafka_metadata_refresh_brokers
0001331C                                   27917 @@gen_label2292 DS    0H
0001331C 05EF                              27918          BALR  14,15
0001331E                                   27919 @@gen_label2293 DS    0H
                                           27920 * ***                   break;
0001331E 47F0 C968               00013358  27921          B     @L1942
                                           27922 * ***
                                           27923 * ***           default:
                                           27924 * ***                   break;
                                           27925 * ***           }
00013322                                   27926 @L1941   DS    0H
                                                                                                                           Page  553 
  Active Usings: @REGION_2033_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013322 A73E FF6E               0000FF6E  27927          CHI   3,-146
00013326 47B0 C950               00013340  27928          BNL   @@gen_label2294
0001332A A73E FF3B               0000FF3B  27929          CHI   3,-197
0001332E 4770 C94C               0001333C  27930          BNE   *+14  Around region break
00013332 E3C0 C118 001A          00012B08  27931          ALGF  12,@lit_region_diff_2033_4_5
                                           27932          DROP  12
                        000133A8           27933          USING @REGION_2033_5,12
00013338 47F0 C05A               00013402  27934          B     @ret_lab_2033
                                           27935          DROP  12
                        000129F0           27936          USING @REGION_2033_4,12
0001333C 47F0 C968               00013358  27937          B     @L1942
00013340                                   27938 @@gen_label2294 DS 0H
00013340 A73E FF6E               0000FF6E  27939          CHI   3,-146
00013344 4780 C90C               000132FC  27940          BE    @L1948
00013348 A73E 001F               0000001F  27941          CHI   3,31
0001334C 4780 C81E               0001320E  27942          BE    @L1945
00013350 A73E 0035               00000035  27943          CHI   3,53
00013354 4780 C81E               0001320E  27944          BE    @L1945
00013358                                   27945 @L1942   DS    0H
                                           27946 * ***
                                           27947 * ***           rwlock_wrlock(&(rk)->rk_lock);
00013358 41F0 59A0               000009A0  27948          LA    15,2464(0,5)
0001335C E3F0 D518 0024          00000518  27949          STG   15,1304(0,13)
00013362 4110 D518               00000518  27950          LA    1,1304(0,13)
00013366 E3F0 C0F8 0004          00012AE8  27951          LG    15,@lit_2033_1644 ; rwlock_wrlock
0001336C                                   27952 @@gen_label2295 DS    0H
0001336C 05EF                              27953          BALR  14,15
0001336E                                   27954 @@gen_label2296 DS    0H
                                           27955 * ***           rd_kafka_txn_coord_set(rk, ((void *)0),
                                           27956 * ***                                  "Failed to find transaction coo\
                                           27957 * rdinator: %s: %s",
                                           27958 * ***                                  rd_kafka_err2name(err),
                                           27959 * ***                                  *errstr ? errstr : rd_kafka_err\
                                           27960 * 2str(err));
0001336E B914 00F3                         27961          LGFR  15,3
00013372 E3F0 D518 0024          00000518  27962          STG   15,1304(0,13)
00013378 4110 D518               00000518  27963          LA    1,1304(0,13)
0001337C E3F0 C150 0004          00012B40  27964          LG    15,@lit_2033_1661 ; rd_kafka_err2name
00013382                                   27965 @@gen_label2297 DS    0H
00013382 05EF                              27966          BALR  14,15
00013384                                   27967 @@gen_label2298 DS    0H
00013384 B904 002F                         27968          LGR   2,15
00013388 9500 D0E8      000000E8 00000000  27969          CLI   232(13),0
0001338C 4770 C9AA               0001339A  27970          BNE   *+14  Around region break
00013390 E3C0 C118 001A          00012B08  27971          ALGF  12,@lit_region_diff_2033_4_5
                                           27972          DROP  12
                        000133A8           27973          USING @REGION_2033_5,12
00013396 47F0 C000               000133A8  27974          B     @L1950
                                           27975          DROP  12
                        000129F0           27976          USING @REGION_2033_4,12
0001339A 41F0 D0E8               000000E8  27977          LA    15,232(0,13)
0001339E E3C0 C118 001A          00012B08  27978          ALGF  12,@lit_region_diff_2033_4_5
                                                                                                                           Page  554 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           27979          DROP  12
                        000133A8           27980          USING @REGION_2033_5,12
000133A4 47F0 C016               000133BE  27981          B     @L1951
                                           27982          DROP  12
                        000129F0           27983          USING @REGION_2033_4,12
000133A8                                   27984 @REGION_2033_5 DS 0H
                                           27985          DROP  12
                        000133A8           27986          USING @REGION_2033_5,12
000133A8                                   27987 @L1950   DS    0H
000133A8 B914 00F3                         27988          LGFR  15,3
000133AC E3F0 D518 0024          00000518  27989          STG   15,1304(0,13)
000133B2 4110 D518               00000518  27990          LA    1,1304(0,13)
000133B6 E3F0 C0A8 0004          00013450  27991          LG    15,@lit_2033_1662 ; rd_kafka_err2str
000133BC                                   27992 @@gen_label2300 DS    0H
000133BC 05EF                              27993          BALR  14,15
000133BE                                   27994 @@gen_label2301 DS    0H
000133BE                                   27995 @L1951   DS    0H
000133BE E350 D518 0024          00000518  27996          STG   5,1304(0,13)
000133C4 D707 D520 D520 00000520 00000520  27997          XC    1312(8,13),1312(13)
000133CA E310 C0B8 0004          00013460  27998          LG    1,@lit_2033_1663
000133D0 4110 13C6               000003C6  27999          LA    1,966(0,1)
000133D4 EB12 D528 0024          00000528  28000          STMG  1,2,1320(13)
000133DA E3F0 D538 0024          00000538  28001          STG   15,1336(0,13)
000133E0 4110 D518               00000518  28002          LA    1,1304(0,13)
000133E4 E3F0 C0B0 0004          00013458  28003          LG    15,@lit_2033_1664 ; rd_kafka_txn_coord_set
000133EA                                   28004 @@gen_label2302 DS    0H
000133EA 05EF                              28005          BALR  14,15
000133EC                                   28006 @@gen_label2303 DS    0H
                                           28007 * ***           rwlock_wrunlock(&(rk)->rk_lock);
000133EC 41F0 59A0               000009A0  28008          LA    15,2464(0,5)
000133F0 E3F0 D518 0024          00000518  28009          STG   15,1304(0,13)
000133F6 4110 D518               00000518  28010          LA    1,1304(0,13)
000133FA E3F0 C0C0 0004          00013468  28011          LG    15,@lit_2033_1665 ; rwlock_wrunlock
00013400                                   28012 @@gen_label2304 DS    0H
00013400 05EF                              28013          BALR  14,15
00013402                                   28014 @@gen_label2305 DS    0H
                                           28015 * ***   }
00013402                                   28016 @ret_lab_2033 DS 0H
                                           28017 * * **** Start of Epilogue
                                           28018          DCCEPIL
00013402                                   28019+         ds 0h                                                          01-DCCEP
                                           28020+* Epilog
00013402 D707 D088 D088 00000088 00000088  28021+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00013408 E3D0 D080 0004          00000080  28022+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0001340E E3C0 D090 0004          00000090  28023+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00013414 E3B0 C018 0004          00000018  28024+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0001341A E3C0 B010 0021          00000010  28025+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00013420 E3E0 D008 0004          00000008  28026+         lg  14,8(0,13)          load up return address                 01-DCCEP
00013426 EB1C D020 0004          00000020  28027+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0001342C 078E                              28028+         bcr 8,14                if same dsab, just return              01-DCCEP
0001342E E3F0 D010 0024          00000010  28029+         stg 15,16(0,13)         save return code                       01-DCCEP
00013434 E300 D018 0024          00000018  28030+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  555 
  Active Usings: @REGION_2033_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001343A E3F0 D090 0004          00000090  28031+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00013440 E3F0 F018 0004          00000018  28032+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00013446 47F0 F040               00000040  28033+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           28034+* End of Epilog
                                           28035 * * **** End of Epilogue
00013450                                   28036          DS    0D
00013450 0000000000000000                  28037 @lit_2033_1662 DC AD(rd_kafka_err2str)
00013458 0000000000013A18                  28038 @lit_2033_1664 DC AD(rd_kafka_txn_coord_set)
00013460 0000000000015A98                  28039 @lit_2033_1663 DC AD(@strings@+4096)
00013468 0000000000000000                  28040 @lit_2033_1665 DC AD(rwlock_wrunlock)
                                           28041          DROP  12
                                           28042 *
                                           28043 *   DSECT for automatic variables in "rd_kafka_txn_handle_FindCoordina
                                           28044 *           tor"
                                           28045 *      (FUNCTION #2033)
                                           28046 *
00000000                00000000 00000518  28047 @AUTO#rd_kafka_txn_handle_$Find$Coordinator DSECT
00000000                                   28048          DS    XL168
000000A8                                   28049 rd_kafka_txn_handle_$Find$Coordinator#__len0#75 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28050          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28051 rd_kafka_txn_handle_$Find$Coordinator#__len2#74 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  28052          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28053 rd_kafka_txn_handle_$Find$Coordinator#__len0#66 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28054          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28055 rd_kafka_txn_handle_$Find$Coordinator#__len0#60 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28056          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28057 rd_kafka_txn_handle_$Find$Coordinator#__len2#59 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  28058          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28059 rd_kafka_txn_handle_$Find$Coordinator#_r#52 DS 8XL1 ; _r
000000B0                000000B0 000000A8  28060          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28061 rd_kafka_txn_handle_$Find$Coordinator#_klen#50 DS 1F ; _klen
000000AC                000000AC 000000A8  28062          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28063 rd_kafka_txn_handle_$Find$Coordinator#__len0#44 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28064          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28065 rd_kafka_txn_handle_$Find$Coordinator#__len2#43 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  28066          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28067 rd_kafka_txn_handle_$Find$Coordinator#__len0#35 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28068          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28069 rd_kafka_txn_handle_$Find$Coordinator#__len0#29 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28070          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28071 rd_kafka_txn_handle_$Find$Coordinator#__len2#28 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  28072          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28073 rd_kafka_txn_handle_$Find$Coordinator#_r#21 DS 8XL1 ; _r
000000B0                000000B0 000000A8  28074          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28075 rd_kafka_txn_handle_$Find$Coordinator#_klen#19 DS 1F ; _klen
000000AC                000000AC 000000A8  28076          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28077 rd_kafka_txn_handle_$Find$Coordinator#__len0#12 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28078          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28079 rd_kafka_txn_handle_$Find$Coordinator#__len2#11 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  28080          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28081 rd_kafka_txn_handle_$Find$Coordinator#__len0#4 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  28082          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
                                                                                                                           Page  556 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                   28083 rd_kafka_txn_handle_$Find$Coordinator#__len2#3 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  28084          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28085 rd_kafka_txn_handle_$Find$Coordinator#_throttle_time_ms#1 DS 1F ; _thro*
                                                                ttle_time_ms
000000AC                000000AC 000000A8  28086          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+168
000000A8                                   28087 rd_kafka_txn_handle_$Find$Coordinator#log_decode_errors#0 DS 1F ; log_d*
                                                                ecode_errors
000000AC                000000AC 000000AC  28088          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+172
000000AC                                   28089 rd_kafka_txn_handle_$Find$Coordinator#_v#2 DS 1F ; _v
000000B0                000000B0 000000B0  28090          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+176
000000B0                                   28091 rd_kafka_txn_handle_$Find$Coordinator#_v#10 DS 2XL1 ; _v
000000B2                000000B2 000000B8  28092          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+184
000000B8                                   28093 rd_kafka_txn_handle_$Find$Coordinator#_uva#20 DS 8XL1 ; _uva
000000C0                000000C0 000000C0  28094          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+192
000000C0                                   28095 rd_kafka_txn_handle_$Find$Coordinator#_v#21 DS 8XL1 ; _v
000000C8                000000C8 000000C8  28096          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+200
000000C8                                   28097 rd_kafka_txn_handle_$Find$Coordinator#_v#27 DS 2XL1 ; _v
000000CA                000000CA 000000CC  28098          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+204
000000CC                                   28099 rd_kafka_txn_handle_$Find$Coordinator#_v#42 DS 1F ; _v
000000D0                000000D0 000000D0  28100          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+208
000000D0                                   28101 rd_kafka_txn_handle_$Find$Coordinator#_uva#51 DS 8XL1 ; _uva
000000D8                000000D8 000000D8  28102          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+216
000000D8                                   28103 rd_kafka_txn_handle_$Find$Coordinator#_v#52 DS 8XL1 ; _v
000000E0                000000E0 000000E0  28104          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+224
000000E0                                   28105 rd_kafka_txn_handle_$Find$Coordinator#_v#58 DS 2XL1 ; _v
000000E2                000000E2 000000E4  28106          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+228
000000E4                                   28107 rd_kafka_txn_handle_$Find$Coordinator#_v#73 DS 1F ; _v
000000E8                000000E8 000000E8  28108          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+232
000000E8                                   28109 rd_kafka_txn_handle_$Find$Coordinator#errstr#0 DS 512XL1 ; errstr
000002E8                000002E8 000002E8  28110          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+744
000002E8                                   28111 rd_kafka_txn_handle_$Find$Coordinator#$Port#0 DS 1F ; Port
000002EC                000002EC 000002EC  28112          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+748
000002EC                                   28113 rd_kafka_txn_handle_$Find$Coordinator#$Node$Id#0 DS 1F ; NodeId
000002F0                000002F0 000002F0  28114          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+752
000002F0                                   28115 rd_kafka_txn_handle_$Find$Coordinator#$Host#0 DS 16XL1 ; Host
00000300                00000300 00000300  28116          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+768
00000300                                   28117 rd_kafka_txn_handle_$Find$Coordinator#$Error$Code#0 DS 2XL1 ; ErrorCode
00000302                00000302 00000302  28118          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28119 rd_kafka_txn_handle_$Find$Coordinator#_logname#83 DS 256XL1 ; _logname
00000402                00000402 00000302  28120          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28121 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#79 DS 256XL1 ; __tmpstr
00000402                00000402 00000302  28122          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28123 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#70 DS 256XL1 ; __tmpstr
00000402                00000402 00000302  28124          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28125 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#64 DS 256XL1 ; __tmpstr
00000402                00000402 00000302  28126          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28127 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#55 DS 256XL1 ; __tmpstr
00000402                00000402 00000302  28128          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28129 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#48 DS 256XL1 ; __tmpstr
00000402                00000402 00000302  28130          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
00000302                                   28131 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#16 DS 256XL1 ; __tmpstr
00000402                00000402 00000302  28132          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+770
                                                                                                                           Page  557 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000302                                   28133 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#8 DS 256XL1 ; __tmpstr
00000402                00000402 00000308  28134          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+776
00000308                                   28135 rd_kafka_txn_handle_$Find$Coordinator#alen#72 DS 8XL1 ; alen
00000310                00000310 00000308  28136          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+776
00000308                                   28137 rd_kafka_txn_handle_$Find$Coordinator#$Error$Msg#18 DS 16XL1 ; ErrorMsg
00000318                00000318 00000310  28138          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+784
00000310                                   28139 rd_kafka_txn_handle_$Find$Coordinator#ulen#72 DS 8XL1 ; ulen
00000318                00000318 00000318  28140          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+792
00000318                                   28141 rd_kafka_txn_handle_$Find$Coordinator#alen#41 DS 8XL1 ; alen
00000320                00000320 00000318  28142          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+792
00000318                                   28143 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#39 DS 256XL1 ; __tmpstr
00000418                00000418 00000318  28144          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+792
00000318                                   28145 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#33 DS 256XL1 ; __tmpstr
00000418                00000418 00000318  28146          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+792
00000318                                   28147 rd_kafka_txn_handle_$Find$Coordinator#__tmpstr#24 DS 256XL1 ; __tmpstr
00000418                00000418 00000320  28148          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+800
00000320                                   28149 rd_kafka_txn_handle_$Find$Coordinator#ulen#41 DS 8XL1 ; ulen
00000328                00000328 00000402  28150          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28151 rd_kafka_txn_handle_$Find$Coordinator#_logname#80 DS 256XL1 ; _logname
00000502                00000502 00000402  28152          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28153 rd_kafka_txn_handle_$Find$Coordinator#_logname#71 DS 256XL1 ; _logname
00000502                00000502 00000402  28154          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28155 rd_kafka_txn_handle_$Find$Coordinator#_logname#65 DS 256XL1 ; _logname
00000502                00000502 00000402  28156          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28157 rd_kafka_txn_handle_$Find$Coordinator#_logname#56 DS 256XL1 ; _logname
00000502                00000502 00000402  28158          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28159 rd_kafka_txn_handle_$Find$Coordinator#_logname#49 DS 256XL1 ; _logname
00000502                00000502 00000402  28160          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28161 rd_kafka_txn_handle_$Find$Coordinator#_logname#17 DS 256XL1 ; _logname
00000502                00000502 00000402  28162          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1026
00000402                                   28163 rd_kafka_txn_handle_$Find$Coordinator#_logname#9 DS 256XL1 ; _logname
00000502                00000502 00000418  28164          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1048
00000418                                   28165 rd_kafka_txn_handle_$Find$Coordinator#_logname#40 DS 256XL1 ; _logname
00000518                00000518 00000418  28166          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1048
00000418                                   28167 rd_kafka_txn_handle_$Find$Coordinator#_logname#34 DS 256XL1 ; _logname
00000518                00000518 00000418  28168          ORG   @AUTO#rd_kafka_txn_handle_$Find$Coordinator+1048
00000418                                   28169 rd_kafka_txn_handle_$Find$Coordinator#_logname#25 DS 256XL1 ; _logname
                                           28170 *
00013470                00000000 00014658  28171 @CODE    CSECT
                                           28172 *
                                           28173 *
                                           28174 *
                                           28175 * ....... start of rd_kafka_txn_coord_query
                                           28176 rd_kafka_txn_coord_query ALIAS X'99846D92818692816DA3A7956D83969699846D*
                                                                98A48599A8'
00013470                                   28177 @LNAME1925 DS  0H
00013470 00000018                          28178          DC    X'00000018'
00013474 99846D9281869281                  28179          DC    C'rd_kafka_txn_coord_query'
0001348C 00                                28180          DC    X'00'
                                           28181 rd_kafka_txn_coord_query DCCPRLG CINDEX=1925,BASER=12,FRAME=776,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1925
                                           28182          macro
                                                                                                                           Page  558 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           28183          dccextrn &m
                                           28184          gblc    &$dccext(1000)
                                           28185          gbla    &$dccexti
                                           28186          lcla    &i
                                           28187 &$dccext(&$dccexti+1) setc    '&m'
                                           28188 &i       seta    1
                                           28189 .loop    aif    (&i gt &$dccexti).around
                                           28190          aif    ('&$dccext(&i)' eq '&m').getout
                                           28191 &i       seta    &i+1
                                           28192          ago     .loop
                                           28193 .around  anop
                                           28194 &$dccexti seta &$dccexti+1
                                           28195          extrn  &m
                                           28196 .getout  anop
                                           28197          mend
00013490                                   28198+$eye0315    ds    0d                                                    02-DCCCA
00013490 C4C3C3                            28199+         dc cl3'DCC'                                                    02-DCCCA
00013493 01                                28200+         dc xl1'01' format one                                          02-DCCCA
00013494 00000000                          28201+         dc a(0)                                                        02-DCCCA
00013498 0000000000013502                  28202+         dc ad(@PER_1925)                                               02-DCCCA
000134A0 0000000000000308                  28203+         dc ad(776)                                                     02-DCCCA
000134A8 0000000000000000                  28204+         dc ad(0)                                                       02-DCCCA
000134B0 0000000000001000                  28205+         dc ad(4096)                                                    02-DCCCA
000134B8 20                                28206+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000134B9 03                                28207+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000134BA 03                                28208+         dc al1(3)                                                      02-DCCCA
000134BB 08                                28209+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000134BC 00                                28210+         dc bl.8'00000000'                                              02-DCCCA
000134BD 000000                            28211+         dc al3(0)                                                      02-DCCCA
000134C0 0000000000013470                  28212+         dc ad(@LNAME1925)                                              02-DCCCA
000134C8                                   28213+         ds 0d                                                          02-DCCCA
000134C8 0000000000013490                  28214+         dc ad($eye0315)                                                02-DCCCA
000134D0 0000000000000000                  28215+         dc ad(0)                                                       02-DCCCA
000134D8                                   28216+         ds    0d                                                       01-DCCPR
                                           28217+         entry rd_kafka_txn_coord_query                                 01-DCCPR
000134D8                                   28218+rd_kafka_txn_coord_query ds 0d                                          01-DCCPR
000134D8                                   28219+@REGION_1925_1 ds 0h                                                    01-DCCPR
000134D8 EBEC D008 0024          00000008  28220+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000134DE E3E0 D088 0004          00000088  28221+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000134E4 E3C0 D090 0004          00000090  28222+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000134EA B904 002E                         28223+         lgr   2,14                copy addr of our savearea            01-DCCPR
000134EE E3B0 C018 0004          00000018  28224+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000134F4 A7EB 0308               00000308  28225+         aghi  14,776              increase by frame size               01-DCCPR
000134F8 E3E0 C020 0021          00000020  28226+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000134FE 4720 B020               00000020  28227+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00013502                                   28228+@PER_1925 ds   0h                                                       01-DCCPR
00013502 EBDE 2080 0024          00000080  28229+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00013508 E3C0 2090 0024          00000090  28230+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0001350E B904 00D2                         28231+         lgr   13,2                set real frame pointer               01-DCCPR
00013512 B904 00CF                         28232+         lgr   12,15               set base reg                         01-DCCPR
                        000134D8           28233+         using @REGION_1925_1,12                                        01-DCCPR
                                           28234 * ******* End of Prologue
                                                                                                                           Page  559 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           28235 * *
00013516 EB23 1000 0004          00000000  28236          LMG   2,3,0(1)    ; rk
                                           28237 * ***           rd_kafka_resp_err_t err;
                                           28238 * ***           char errstr[512];
                                           28239 * ***           rd_kafka_broker_t *rkb;
                                           28240 * ***
                                           28241 * ***           ((((rk)->rk_conf.eos.transactional_id != ((void *)0)))\
                                           28242 *  ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdka\
                                           28243 * fka_txnmgr.c", 3060, "((rk)->rk_conf.eos.transactional_id != ((void \
                                           28244 * *)0))"));
0001351C E3F0 27E8 0002          000007E8  28245          LTG   15,2024(0,2) ; offset of transactional_id in 0000105
00013522 4770 C090               00013568  28246          BNE   @L1953
00013526                                   28247 @L1952   DS    0H
00013526 E3F0 C120 0004          000135F8  28248          LG    15,@lit_1925_1702
0001352C 41F0 F408               00000408  28249          LA    15,1032(0,15)
00013530 E3F0 D2C0 0024          000002C0  28250          STG   15,704(0,13)
00013536 E3F0 C118 0004          000135F0  28251          LG    15,@lit_1925_1703
0001353C 41F0 F1B2               000001B2  28252          LA    15,434(0,15)
00013540 E3F0 D2C8 0024          000002C8  28253          STG   15,712(0,13)
00013546 E548 D2D0 0BF4          000002D0  28254          MVGHI 720(13),3060
0001354C E3F0 C110 0004          000135E8  28255          LG    15,@lit_1925_1704
00013552 41F0 F2C4               000002C4  28256          LA    15,708(0,15)
00013556 E3F0 D2D8 0024          000002D8  28257          STG   15,728(0,13)
0001355C 4110 D2C0               000002C0  28258          LA    1,704(0,13)
00013560 E3F0 C108 0004          000135E0  28259          LG    15,@lit_1925_1705 ; __assert
00013566                                   28260 @@gen_label2307 DS    0H
00013566 05EF                              28261          BALR  14,15
00013568                                   28262 @@gen_label2308 DS    0H
00013568                                   28263 @L1953   DS    0H
                                           28264 * ***
                                           28265 * ***           if (rk->rk_eos.txn_wait_coord) {
00013568 9500 2EEC      00000EEC 00000000  28266          CLI   3820(2),0
0001356C 4780 C188               00013660  28267          BE    @L1954
                                           28268 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           28269 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOORD","No\
                                           28270 * t sending coordinator query (%s): " "waiting for previous query to f\
                                           28271 * inish", reason); } while (0);
00013570                                   28272 @L1955   DS    0H
00013570 9180 2322      00000322 00000080  28273          TM    802(2),128
00013574 4780 C0F4               000135CC  28274          BZ    @L1958
00013578 41F0 2210               00000210  28275          LA    15,528(0,2)
0001357C E3F0 D2C0 0024          000002C0  28276          STG   15,704(0,13)
00013582 E320 D2C8 0024          000002C8  28277          STG   2,712(0,13)
00013588 D707 D2D0 D2D0 000002D0 000002D0  28278          XC    720(8,13),720(13)
0001358E E548 D2D8 0007          000002D8  28279          MVGHI 728(13),7
00013594 C0FF 0000 8000                    28280          LLILF 15,X'00008000' ; 32768
0001359A E3F0 D2E0 0024          000002E0  28281          STG   15,736(0,13)
000135A0 E3F0 C110 0004          000135E8  28282          LG    15,@lit_1925_1704
000135A6 4110 F2FE               000002FE  28283          LA    1,766(0,15)
000135AA E310 D2E8 0024          000002E8  28284          STG   1,744(0,13)
000135B0 41F0 F3F6               000003F6  28285          LA    15,1014(0,15)
000135B4 E3F0 D2F0 0024          000002F0  28286          STG   15,752(0,13)
                                                                                                                           Page  560 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000135BA E330 D2F8 0024          000002F8  28287          STG   3,760(0,13)
000135C0 4110 D2C0               000002C0  28288          LA    1,704(0,13)
000135C4 E3F0 C128 0004          00013600  28289          LG    15,@lit_1925_1708 ; rd_kafka_log0
000135CA                                   28290 @@gen_label2311 DS    0H
000135CA 05EF                              28291          BALR  14,15
000135CC                                   28292 @@gen_label2312 DS    0H
000135CC                                   28293 @L1958   DS    0H
                                           28294 * ***
                                           28295 * ***
                                           28296 * ***
                                           28297 * ***                   return 0;
000135CC A7F9 0000               00000000  28298          LGHI  15,0        ; 0
000135D0 47F0 C48E               00013966  28299          B     @ret_lab_1925
000135D8                                   28300          DS    0D
000135D8 00000308                          28301 @FRAMESIZE_1925 DC F'776'
000135DC 00000000
000135E0 0000000000000000                  28302 @lit_1925_1705 DC AD(__assert)
000135E8 0000000000015A98                  28303 @lit_1925_1704 DC AD(@strings@+4096)
000135F0 0000000000014A98                  28304 @lit_1925_1703 DC AD(@strings@)
000135F8 0000000000014658                  28305 @lit_1925_1702 DC AD(@DATA)
00013600 0000000000000000                  28306 @lit_1925_1708 DC AD(rd_kafka_log0)
00013608 0000000000000000                  28307 @lit_1925_1710 DC AD(rd_kafka_idemp_broker_any)
00013610 0000000000000000                  28308 @lit_1925_1714 DC AD(rd_kafka_idemp_check_error)
00013618 0000000000010BF8                  28309 @lit_1925_1716 DC AD(rd_kafka_txn_coord_timer_restart)
00013620 0000000000002D40                  28310 @lit_1925_1722 DC AD(rd_kafka_replyq_make)
00013628 0000000000000000                  28311 @lit_1925_1724 DC AD(rd_kafka_$Find$Coordinator$Request)
00013630 0000000000010DD0                  28312 @lit_1925_1723 DC AD(rd_kafka_txn_handle_$Find$Coordinator)
00013638 0000000000000000                  28313 @lit_1925_1725 DC AD(rd_kafka_broker_name)
00013640 0000000000000000                  28314 @lit_1925_1726 DC AD(rd_kafka_err2str)
00013648 0000000000000000                  28315 @lit_1925_1728 DC AD(snprintf)
00013650 0000000000000F28                  28316 @lit_1925_1729 DC AD(rd_refcnt_sub0)
00013658 0000000000000000                  28317 @lit_1925_1730 DC AD(rd_kafka_broker_destroy_final)
                                           28318 * ***           }
00013660                                   28319 @L1954   DS    0H
                                           28320 * ***
                                           28321 * ***
                                           28322 * ***           rkb = rd_kafka_idemp_broker_any(rk, &err,
                                           28323 * ***                                           errstr, sizeof(errstr)\
                                           28324 * );
00013660 E320 D2C0 0024          000002C0  28325          STG   2,704(0,13)
00013666 41F0 D0A8               000000A8  28326          LA    15,168(0,13)
0001366A E3F0 D2C8 0024          000002C8  28327          STG   15,712(0,13)
00013670 41F0 D0AC               000000AC  28328          LA    15,172(0,13)
00013674 E3F0 D2D0 0024          000002D0  28329          STG   15,720(0,13)
0001367A E548 D2D8 0200          000002D8  28330          MVGHI 728(13),512
00013680 4110 D2C0               000002C0  28331          LA    1,704(0,13)
00013684 E3F0 C130 0004          00013608  28332          LG    15,@lit_1925_1710 ; rd_kafka_idemp_broker_any
0001368A                                   28333 @@gen_label2313 DS    0H
0001368A 05EF                              28334          BALR  14,15
0001368C                                   28335 @@gen_label2314 DS    0H
0001368C B904 004F                         28336          LGR   4,15
                                           28337 * ***           if (!rkb) {
                                                                                                                           Page  561 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013690 B902 00F4                         28338          LTGR  15,4
00013694 4770 C288               00013760  28339          BNZ   @L1965
                                           28340 * ***                   do { if ((((rk)->rk_conf.debug & (0x8000)))) r\
                                           28341 * d_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOORD","Un\
                                           28342 * able to query for transaction coordinator: " "%s: %s", reason, errst\
                                           28343 * r); } while (0);
00013698                                   28344 @L1960   DS    0H
00013698 9180 2322      00000322 00000080  28345          TM    802(2),128
0001369C 4780 C226               000136FE  28346          BZ    @L1963
000136A0 41F0 2210               00000210  28347          LA    15,528(0,2)
000136A4 E3F0 D2C0 0024          000002C0  28348          STG   15,704(0,13)
000136AA E320 D2C8 0024          000002C8  28349          STG   2,712(0,13)
000136B0 D707 D2D0 D2D0 000002D0 000002D0  28350          XC    720(8,13),720(13)
000136B6 E548 D2D8 0007          000002D8  28351          MVGHI 728(13),7
000136BC C0FF 0000 8000                    28352          LLILF 15,X'00008000' ; 32768
000136C2 E3F0 D2E0 0024          000002E0  28353          STG   15,736(0,13)
000136C8 E3F0 C110 0004          000135E8  28354          LG    15,@lit_1925_1704
000136CE 4110 F2FE               000002FE  28355          LA    1,766(0,15)
000136D2 E310 D2E8 0024          000002E8  28356          STG   1,744(0,13)
000136D8 41F0 F440               00000440  28357          LA    15,1088(0,15)
000136DC E3F0 D2F0 0024          000002F0  28358          STG   15,752(0,13)
000136E2 E330 D2F8 0024          000002F8  28359          STG   3,760(0,13)
000136E8 41F0 D0AC               000000AC  28360          LA    15,172(0,13)
000136EC E3F0 D300 0024          00000300  28361          STG   15,768(0,13)
000136F2 4110 D2C0               000002C0  28362          LA    1,704(0,13)
000136F6 E3F0 C128 0004          00013600  28363          LG    15,@lit_1925_1708 ; rd_kafka_log0
000136FC                                   28364 @@gen_label2317 DS    0H
000136FC 05EF                              28365          BALR  14,15
000136FE                                   28366 @@gen_label2318 DS    0H
000136FE                                   28367 @L1963   DS    0H
                                           28368 * ***
                                           28369 * ***
                                           28370 * ***
                                           28371 * ***
                                           28372 * ***                   if (rd_kafka_idemp_check_error(rk, err, errstr\
                                           28373 * , 0))
000136FE E320 D2C0 0024          000002C0  28374          STG   2,704(0,13)
00013704 E3F0 D0A8 0014          000000A8  28375          LGF   15,168(0,13) ; err
0001370A E3F0 D2C8 0024          000002C8  28376          STG   15,712(0,13)
00013710 41F0 D0AC               000000AC  28377          LA    15,172(0,13)
00013714 E3F0 D2D0 0024          000002D0  28378          STG   15,720(0,13)
0001371A D707 D2D8 D2D8 000002D8 000002D8  28379          XC    728(8,13),728(13)
00013720 4110 D2C0               000002C0  28380          LA    1,704(0,13)
00013724 E3F0 C138 0004          00013610  28381          LG    15,@lit_1925_1714 ; rd_kafka_idemp_check_error
0001372A                                   28382 @@gen_label2319 DS    0H
0001372A 05EF                              28383          BALR  14,15
0001372C                                   28384 @@gen_label2320 DS    0H
0001372C C0FB 0000 00FF                    28385          NILF  15,X'000000FF'
00013732 12FF                              28386          LTR   15,15
00013734 4780 C268               00013740  28387          BZ    @L1964
                                           28388 * ***                           return 1;
00013738 A7F9 0001               00000001  28389          LGHI  15,1        ; 1
                                                                                                                           Page  562 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001373C 47F0 C48E               00013966  28390          B     @ret_lab_1925
00013740                                   28391 @L1964   DS    0H
                                           28392 * ***
                                           28393 * ***                   rd_kafka_txn_coord_timer_restart(rk, 500);
00013740 E320 D2C0 0024          000002C0  28394          STG   2,704(0,13)
00013746 E548 D2C8 01F4          000002C8  28395          MVGHI 712(13),500
0001374C 4110 D2C0               000002C0  28396          LA    1,704(0,13)
00013750 E3F0 C140 0004          00013618  28397          LG    15,@lit_1925_1716 ; rd_kafka_txn_coord_timer_restart
00013756                                   28398 @@gen_label2322 DS    0H
00013756 05EF                              28399          BALR  14,15
00013758                                   28400 @@gen_label2323 DS    0H
                                           28401 * ***
                                           28402 * ***                   return 0;
00013758 A7F9 0000               00000000  28403          LGHI  15,0        ; 0
0001375C 47F0 C48E               00013966  28404          B     @ret_lab_1925
                                           28405 * ***           }
                                           28406 * ***
                                           28407 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           28408 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOORD","Querying f\
                                           28409 * or transaction coordinator: %s", reason); } while (0);
00013760                                   28410 @L1965   DS    0H
00013760 9180 2322      00000322 00000080  28411          TM    802(2),128
00013764 4780 C2E4               000137BC  28412          BZ    @L1968
00013768 41F0 2210               00000210  28413          LA    15,528(0,2)
0001376C E3F0 D2C0 0024          000002C0  28414          STG   15,704(0,13)
00013772 E320 D2C8 0024          000002C8  28415          STG   2,712(0,13)
00013778 D707 D2D0 D2D0 000002D0 000002D0  28416          XC    720(8,13),720(13)
0001377E E548 D2D8 0007          000002D8  28417          MVGHI 728(13),7
00013784 C0FF 0000 8000                    28418          LLILF 15,X'00008000' ; 32768
0001378A E3F0 D2E0 0024          000002E0  28419          STG   15,736(0,13)
00013790 E3F0 C110 0004          000135E8  28420          LG    15,@lit_1925_1704
00013796 4110 F2FE               000002FE  28421          LA    1,766(0,15)
0001379A E310 D2E8 0024          000002E8  28422          STG   1,744(0,13)
000137A0 41F0 F474               00000474  28423          LA    15,1140(0,15)
000137A4 E3F0 D2F0 0024          000002F0  28424          STG   15,752(0,13)
000137AA E330 D2F8 0024          000002F8  28425          STG   3,760(0,13)
000137B0 4110 D2C0               000002C0  28426          LA    1,704(0,13)
000137B4 E3F0 C128 0004          00013600  28427          LG    15,@lit_1925_1708 ; rd_kafka_log0
000137BA                                   28428 @@gen_label2325 DS    0H
000137BA 05EF                              28429          BALR  14,15
000137BC                                   28430 @@gen_label2326 DS    0H
000137BC                                   28431 @L1968   DS    0H
                                           28432 * ***
                                           28433 * ***
                                           28434 * ***
                                           28435 * ***           err = rd_kafka_FindCoordinatorRequest(
                                           28436 * ***                   rkb, RD_KAFKA_COORD_TXN,
                                           28437 * ***                   rk->rk_conf.eos.transactional_id,
                                           28438 * ***                   rd_kafka_replyq_make(rk->rk_ops,0,__FUNCTION__\
                                           28439 * ),
                                           28440 * ***                   rd_kafka_txn_handle_FindCoordinator, ((void *)\
                                           28441 * 0));
                                                                                                                           Page  563 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000137BC 41F0 D2B0               000002B0  28442          LA    15,688(0,13)
000137C0 E3F0 D2C0 0024          000002C0  28443          STG   15,704(0,13)
000137C6 E3F0 2008 0004          00000008  28444          LG    15,8(0,2)
000137CC E3F0 D2C8 0024          000002C8  28445          STG   15,712(0,13)
000137D2 D707 D2D0 D2D0 000002D0 000002D0  28446          XC    720(8,13),720(13)
000137D8 E3F0 C120 0004          000135F8  28447          LG    15,@lit_1925_1702
000137DE 41F0 F408               00000408  28448          LA    15,1032(0,15)
000137E2 E3F0 D2D8 0024          000002D8  28449          STG   15,728(0,13)
000137E8 4110 D2C0               000002C0  28450          LA    1,704(0,13)
000137EC E3F0 C148 0004          00013620  28451          LG    15,@lit_1925_1722 ; rd_kafka_replyq_make
000137F2                                   28452 @@gen_label2327 DS    0H
000137F2 05EF                              28453          BALR  14,15
000137F4                                   28454 @@gen_label2328 DS    0H
000137F4 E340 D2C0 0024          000002C0  28455          STG   4,704(0,13)
000137FA E548 D2C8 0001          000002C8  28456          MVGHI 712(13),1
00013800 E3F0 27E8 0004          000007E8  28457          LG    15,2024(0,2)
00013806 E3F0 D2D0 0024          000002D0  28458          STG   15,720(0,13)
0001380C D20F D2D8 D2B0 000002D8 000002B0  28459          MVC   728(16,13),688(13)
00013812 E3F0 C158 0004          00013630  28460          LG    15,@lit_1925_1723 ; rd_kafka_txn_handle_FindCoordinator
00013818 E3F0 D2E8 0024          000002E8  28461          STG   15,744(0,13)
0001381E D707 D2F0 D2F0 000002F0 000002F0  28462          XC    752(8,13),752(13)
00013824 4110 D2C0               000002C0  28463          LA    1,704(0,13)
00013828 E3F0 C150 0004          00013628  28464          LG    15,@lit_1925_1724 ; rd_kafka_FindCoordinatorRequest
0001382E                                   28465 @@gen_label2329 DS    0H
0001382E 05EF                              28466          BALR  14,15
00013830                                   28467 @@gen_label2330 DS    0H
00013830 50F0 D0A8               000000A8  28468          ST    15,168(0,13) ; err
                                           28469 * ***
                                           28470 * ***           if (err) {
00013834 12FF                              28471          LTR   15,15
00013836 4780 C458               00013930  28472          BZ    @L1975
                                           28473 * ***                   snprintf(errstr, sizeof(errstr), "Failed to se\
                                           28474 * nd coordinator query to %s: " "%s", rd_kafka_broker_name(rkb), rd_ka\
                                           28475 * fka_err2str(err));
0001383A E340 D2C0 0024          000002C0  28476          STG   4,704(0,13)
00013840 4110 D2C0               000002C0  28477          LA    1,704(0,13)
00013844 E3F0 C160 0004          00013638  28478          LG    15,@lit_1925_1725 ; rd_kafka_broker_name
0001384A                                   28479 @@gen_label2332 DS    0H
0001384A 05EF                              28480          BALR  14,15
0001384C                                   28481 @@gen_label2333 DS    0H
0001384C B904 003F                         28482          LGR   3,15
00013850 E3F0 D0A8 0014          000000A8  28483          LGF   15,168(0,13) ; err
00013856 E3F0 D2C0 0024          000002C0  28484          STG   15,704(0,13)
0001385C 4110 D2C0               000002C0  28485          LA    1,704(0,13)
00013860 E3F0 C168 0004          00013640  28486          LG    15,@lit_1925_1726 ; rd_kafka_err2str
00013866                                   28487 @@gen_label2334 DS    0H
00013866 05EF                              28488          BALR  14,15
00013868                                   28489 @@gen_label2335 DS    0H
00013868 4110 D0AC               000000AC  28490          LA    1,172(0,13)
0001386C E310 D2C0 0024          000002C0  28491          STG   1,704(0,13)
00013872 E548 D2C8 0200          000002C8  28492          MVGHI 712(13),512
00013878 E310 C110 0004          000135E8  28493          LG    1,@lit_1925_1704
                                                                                                                           Page  564 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001387E 4110 149E               0000049E  28494          LA    1,1182(0,1)
00013882 E310 D2D0 0024          000002D0  28495          STG   1,720(0,13)
00013888 E330 D2D8 0024          000002D8  28496          STG   3,728(0,13)
0001388E E3F0 D2E0 0024          000002E0  28497          STG   15,736(0,13)
00013894 4110 D2C0               000002C0  28498          LA    1,704(0,13)
00013898 E3F0 C170 0004          00013648  28499          LG    15,@lit_1925_1728 ; snprintf
0001389E                                   28500 @@gen_label2336 DS    0H
0001389E 05EF                              28501          BALR  14,15
000138A0                                   28502 @@gen_label2337 DS    0H
                                           28503 * ***
                                           28504 * ***
                                           28505 * ***
                                           28506 * ***
                                           28507 * ***
                                           28508 * ***                   do { if (rd_refcnt_sub0(&(rkb)->rkb_refcnt) > \
                                           28509 * 0) break; rd_kafka_broker_destroy_final(rkb); } while (0);
000138A0                                   28510 @L1970   DS    0H
000138A0 41F0 4FA0               00000FA0  28511          LA    15,4000(0,4)
000138A4 E3F0 D2C0 0024          000002C0  28512          STG   15,704(0,13)
000138AA 4110 D2C0               000002C0  28513          LA    1,704(0,13)
000138AE E3F0 C178 0004          00013650  28514          LG    15,@lit_1925_1729 ; rd_refcnt_sub0
000138B4                                   28515 @@gen_label2338 DS    0H
000138B4 05EF                              28516          BALR  14,15
000138B6                                   28517 @@gen_label2339 DS    0H
000138B6 12FF                              28518          LTR   15,15
000138B8 4720 C3F6               000138CE  28519          BH    @L1971
000138BC                                   28520 @L1973   DS    0H
000138BC E340 D2C0 0024          000002C0  28521          STG   4,704(0,13)
000138C2 4110 D2C0               000002C0  28522          LA    1,704(0,13)
000138C6 E3F0 C180 0004          00013658  28523          LG    15,@lit_1925_1730 ; rd_kafka_broker_destroy_final
000138CC                                   28524 @@gen_label2341 DS    0H
000138CC 05EF                              28525          BALR  14,15
000138CE                                   28526 @@gen_label2342 DS    0H
000138CE                                   28527 @L1971   DS    0H
                                           28528 * ***
                                           28529 * ***                   if (rd_kafka_idemp_check_error(rk, err, errstr\
                                           28530 * , 0))
000138CE E320 D2C0 0024          000002C0  28531          STG   2,704(0,13)
000138D4 E3F0 D0A8 0014          000000A8  28532          LGF   15,168(0,13) ; err
000138DA E3F0 D2C8 0024          000002C8  28533          STG   15,712(0,13)
000138E0 41F0 D0AC               000000AC  28534          LA    15,172(0,13)
000138E4 E3F0 D2D0 0024          000002D0  28535          STG   15,720(0,13)
000138EA D707 D2D8 D2D8 000002D8 000002D8  28536          XC    728(8,13),728(13)
000138F0 4110 D2C0               000002C0  28537          LA    1,704(0,13)
000138F4 E3F0 C138 0004          00013610  28538          LG    15,@lit_1925_1714 ; rd_kafka_idemp_check_error
000138FA                                   28539 @@gen_label2343 DS    0H
000138FA 05EF                              28540          BALR  14,15
000138FC                                   28541 @@gen_label2344 DS    0H
000138FC C0FB 0000 00FF                    28542          NILF  15,X'000000FF'
00013902 12FF                              28543          LTR   15,15
00013904 4780 C438               00013910  28544          BZ    @L1974
                                           28545 * ***                           return 1;
                                                                                                                           Page  565 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013908 A7F9 0001               00000001  28546          LGHI  15,1        ; 1
0001390C 47F0 C48E               00013966  28547          B     @ret_lab_1925
00013910                                   28548 @L1974   DS    0H
                                           28549 * ***
                                           28550 * ***                   rd_kafka_txn_coord_timer_restart(rk, 500);
00013910 E320 D2C0 0024          000002C0  28551          STG   2,704(0,13)
00013916 E548 D2C8 01F4          000002C8  28552          MVGHI 712(13),500
0001391C 4110 D2C0               000002C0  28553          LA    1,704(0,13)
00013920 E3F0 C140 0004          00013618  28554          LG    15,@lit_1925_1716 ; rd_kafka_txn_coord_timer_restart
00013926                                   28555 @@gen_label2346 DS    0H
00013926 05EF                              28556          BALR  14,15
00013928                                   28557 @@gen_label2347 DS    0H
                                           28558 * ***
                                           28559 * ***                   return 0;
00013928 A7F9 0000               00000000  28560          LGHI  15,0        ; 0
0001392C 47F0 C48E               00013966  28561          B     @ret_lab_1925
                                           28562 * ***           }
                                           28563 * ***
                                           28564 * ***           do { if (rd_refcnt_sub0(&(rkb)->rkb_refcnt) > 0) break\
                                           28565 * ; rd_kafka_broker_destroy_final(rkb); } while (0);
00013930                                   28566 @L1975   DS    0H
00013930 41F0 4FA0               00000FA0  28567          LA    15,4000(0,4)
00013934 E3F0 D2C0 0024          000002C0  28568          STG   15,704(0,13)
0001393A 4110 D2C0               000002C0  28569          LA    1,704(0,13)
0001393E E3F0 C178 0004          00013650  28570          LG    15,@lit_1925_1729 ; rd_refcnt_sub0
00013944                                   28571 @@gen_label2348 DS    0H
00013944 05EF                              28572          BALR  14,15
00013946                                   28573 @@gen_label2349 DS    0H
00013946 12FF                              28574          LTR   15,15
00013948 4720 C486               0001395E  28575          BH    @L1976
0001394C                                   28576 @L1978   DS    0H
0001394C E340 D2C0 0024          000002C0  28577          STG   4,704(0,13)
00013952 4110 D2C0               000002C0  28578          LA    1,704(0,13)
00013956 E3F0 C180 0004          00013658  28579          LG    15,@lit_1925_1730 ; rd_kafka_broker_destroy_final
0001395C                                   28580 @@gen_label2351 DS    0H
0001395C 05EF                              28581          BALR  14,15
0001395E                                   28582 @@gen_label2352 DS    0H
0001395E                                   28583 @L1976   DS    0H
                                           28584 * ***
                                           28585 * ***           rk->rk_eos.txn_wait_coord = 1;
0001395E 9201 2EEC      00000EEC 00000001  28586          MVI   3820(2),1   ; offset of txn_wait_coord in 0000146
                                           28587 * ***
                                           28588 * ***           return 0;
00013962 A7F9 0000               00000000  28589          LGHI  15,0        ; 0
                                           28590 * ***   }
00013966                                   28591 @ret_lab_1925 DS 0H
                                           28592 * * **** Start of Epilogue
                                           28593          DCCEPIL
00013966                                   28594+         ds 0h                                                          01-DCCEP
                                           28595+* Epilog
00013966 D707 D088 D088 00000088 00000088  28596+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0001396C E3D0 D080 0004          00000080  28597+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  566 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013972 E3C0 D090 0004          00000090  28598+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00013978 E3B0 C018 0004          00000018  28599+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0001397E E3C0 B010 0021          00000010  28600+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00013984 E3E0 D008 0004          00000008  28601+         lg  14,8(0,13)          load up return address                 01-DCCEP
0001398A EB1C D020 0004          00000020  28602+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00013990 078E                              28603+         bcr 8,14                if same dsab, just return              01-DCCEP
00013992 E3F0 D010 0024          00000010  28604+         stg 15,16(0,13)         save return code                       01-DCCEP
00013998 E300 D018 0024          00000018  28605+         stg 0,24(0,13)          save more return code                  01-DCCEP
0001399E E3F0 D090 0004          00000090  28606+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000139A4 E3F0 F018 0004          00000018  28607+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000139AA 47F0 F040               00000040  28608+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           28609+* End of Epilog
                                           28610 * * **** End of Epilogue
                                           28611          DROP  12
                                           28612 *
                                           28613 *   DSECT for automatic variables in "rd_kafka_txn_coord_query"
                                           28614 *      (FUNCTION #1925)
                                           28615 *
00000000                00000000 000002AC  28616 @AUTO#rd_kafka_txn_coord_query DSECT
00000000                                   28617          DS    XL168
000000A8                                   28618 rd_kafka_txn_coord_query#err#0 DS 1F ; err
000000AC                                   28619 rd_kafka_txn_coord_query#errstr#0 DS 512XL1 ; errstr
                                           28620 *
000139AE                00000000 00014658  28621 @CODE    CSECT
                                           28622 *
                                           28623 *
                                           28624 *
                                           28625 * ....... start of rd_kafka_txn_coord_set
                                           28626 rd_kafka_txn_coord_set ALIAS X'99846D92818692816DA3A7956D83969699846DA2*
                                                                85A3'
000139AE                                   28627 @LNAME1926 DS  0H
000139AE 00000016                          28628          DC    X'00000016'
000139B2 99846D9281869281                  28629          DC    C'rd_kafka_txn_coord_set'
000139C8 00                                28630          DC    X'00'
                                           28631 rd_kafka_txn_coord_set DCCPRLG CINDEX=1926,BASER=12,FRAME=504,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1926
                                           28632          macro
                                           28633          dccextrn &m
                                           28634          gblc    &$dccext(1000)
                                           28635          gbla    &$dccexti
                                           28636          lcla    &i
                                           28637 &$dccext(&$dccexti+1) setc    '&m'
                                           28638 &i       seta    1
                                           28639 .loop    aif    (&i gt &$dccexti).around
                                           28640          aif    ('&$dccext(&i)' eq '&m').getout
                                           28641 &i       seta    &i+1
                                           28642          ago     .loop
                                           28643 .around  anop
                                           28644 &$dccexti seta &$dccexti+1
                                           28645          extrn  &m
                                           28646 .getout  anop
                                           28647          mend
                                                                                                                           Page  567 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000139D0                                   28648+$eye0318    ds    0d                                                    02-DCCCA
000139D0 C4C3C3                            28649+         dc cl3'DCC'                                                    02-DCCCA
000139D3 01                                28650+         dc xl1'01' format one                                          02-DCCCA
000139D4 00000000                          28651+         dc a(0)                                                        02-DCCCA
000139D8 0000000000013A42                  28652+         dc ad(@PER_1926)                                               02-DCCCA
000139E0 00000000000001F8                  28653+         dc ad(504)                                                     02-DCCCA
000139E8 0000000000000000                  28654+         dc ad(0)                                                       02-DCCCA
000139F0 0000000000001000                  28655+         dc ad(4096)                                                    02-DCCCA
000139F8 20                                28656+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000139F9 03                                28657+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000139FA 03                                28658+         dc al1(3)                                                      02-DCCCA
000139FB 08                                28659+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000139FC 00                                28660+         dc bl.8'00000000'                                              02-DCCCA
000139FD 000000                            28661+         dc al3(0)                                                      02-DCCCA
00013A00 00000000000139AE                  28662+         dc ad(@LNAME1926)                                              02-DCCCA
00013A08                                   28663+         ds 0d                                                          02-DCCCA
00013A08 00000000000139D0                  28664+         dc ad($eye0318)                                                02-DCCCA
00013A10 0000000000000000                  28665+         dc ad(0)                                                       02-DCCCA
00013A18                                   28666+         ds    0d                                                       01-DCCPR
                                           28667+         entry rd_kafka_txn_coord_set                                   01-DCCPR
00013A18                                   28668+rd_kafka_txn_coord_set ds 0d                                            01-DCCPR
00013A18                                   28669+@REGION_1926_1 ds 0h                                                    01-DCCPR
00013A18 EBEC D008 0024          00000008  28670+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00013A1E E3E0 D088 0004          00000088  28671+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00013A24 E3C0 D090 0004          00000090  28672+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00013A2A B904 002E                         28673+         lgr   2,14                copy addr of our savearea            01-DCCPR
00013A2E E3B0 C018 0004          00000018  28674+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00013A34 A7EB 01F8               000001F8  28675+         aghi  14,504              increase by frame size               01-DCCPR
00013A38 E3E0 C020 0021          00000020  28676+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00013A3E 4720 B020               00000020  28677+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00013A42                                   28678+@PER_1926 ds   0h                                                       01-DCCPR
00013A42 EBDE 2080 0024          00000080  28679+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00013A48 E3C0 2090 0024          00000090  28680+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00013A4E B904 00D2                         28681+         lgr   13,2                set real frame pointer               01-DCCPR
00013A52 B904 00CF                         28682+         lgr   12,15               set base reg                         01-DCCPR
                        00013A18           28683+         using @REGION_1926_1,12                                        01-DCCPR
                                           28684 * ******* End of Prologue
                                           28685 * *
                                           28686 * ***           char buf[256];
00013A56 EB23 1000 0004          00000000  28687          LMG   2,3,0(1)    ; rk
                                           28688 * ***           va_list ap;
                                           28689 * ***
                                           28690 * ***           ((ap) = (va_list)&(fmt) + ((__builtin_classify_type(fm\
                                           28691 * t) == 1 || __builtin_classify_type(fmt) == 2 || __builtin_classify_t\
                                           28692 * ype(fmt) == 4) ? sizeof(fmt) : (((sizeof(fmt) + sizeof(long) - 1) & \
                                           28693 * ~(sizeof(long) -1)))));
00013A5C 41F0 1018               00000018  28694          LA    15,24(0,1)
                                           28695 * ***           vsnprintf(buf, sizeof(buf), fmt, ap);
00013A60 4140 D0A8               000000A8  28696          LA    4,168(0,13)
00013A64 E340 D1A8 0024          000001A8  28697          STG   4,424(0,13)
00013A6A E548 D1B0 0100          000001B0  28698          MVGHI 432(13),256
00013A70 E310 1010 0004          00000010  28699          LG    1,16(0,1)   ; fmt
                                                                                                                           Page  568 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013A76 E310 D1B8 0024          000001B8  28700          STG   1,440(0,13)
00013A7C E3F0 D1C0 0024          000001C0  28701          STG   15,448(0,13)
00013A82 4110 D1A8               000001A8  28702          LA    1,424(0,13)
00013A86 E3F0 C120 0004          00013B38  28703          LG    15,@lit_1926_1739 ; vsnprintf
00013A8C                                   28704 @@gen_label2353 DS    0H
00013A8C 05EF                              28705          BALR  14,15
00013A8E                                   28706 @@gen_label2354 DS    0H
                                           28707 * ***           ;
                                           28708 * ***
                                           28709 * ***
                                           28710 * ***           if (rk->rk_eos.txn_curr_coord == rkb) {
00013A8E E3F0 2D50 0004          00000D50  28711          LG    15,3408(0,2) ; offset of txn_curr_coord in 0000146
00013A94 B920 00F3                         28712          CGR   15,3
00013A98 4770 C178               00013B90  28713          BNE   @L1985
                                           28714 * ***                   if (!rkb) {
00013A9C B902 00F3                         28715          LTGR  15,3
00013AA0 4770 C10A               00013B22  28716          BNZ   @L1980
                                           28717 * ***                           do { if ((((rk)->rk_conf.debug & (0x80\
                                           28718 * 00)))) rd_kafka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCO\
                                           28719 * ORD","%s", buf); } while (0);
00013AA4                                   28720 @L1981   DS    0H
00013AA4 9180 2322      00000322 00000080  28721          TM    802(2),128
00013AA8 4780 C0F2               00013B0A  28722          BZ    @L1984
00013AAC 41F0 2210               00000210  28723          LA    15,528(0,2)
00013AB0 E3F0 D1A8 0024          000001A8  28724          STG   15,424(0,13)
00013AB6 E320 D1B0 0024          000001B0  28725          STG   2,432(0,13)
00013ABC D707 D1B8 D1B8 000001B8 000001B8  28726          XC    440(8,13),440(13)
00013AC2 E548 D1C0 0007          000001C0  28727          MVGHI 448(13),7
00013AC8 C0FF 0000 8000                    28728          LLILF 15,X'00008000' ; 32768
00013ACE E3F0 D1C8 0024          000001C8  28729          STG   15,456(0,13)
00013AD4 E3F0 C138 0004          00013B50  28730          LG    15,@lit_1926_1741
00013ADA 41F0 F2FE               000002FE  28731          LA    15,766(0,15)
00013ADE E3F0 D1D0 0024          000001D0  28732          STG   15,464(0,13)
00013AE4 E3F0 C130 0004          00013B48  28733          LG    15,@lit_1926_1742
00013AEA 41F0 F122               00000122  28734          LA    15,290(0,15)
00013AEE E3F0 D1D8 0024          000001D8  28735          STG   15,472(0,13)
00013AF4 41F0 D0A8               000000A8  28736          LA    15,168(0,13)
00013AF8 E3F0 D1E0 0024          000001E0  28737          STG   15,480(0,13)
00013AFE 4110 D1A8               000001A8  28738          LA    1,424(0,13)
00013B02 E3F0 C128 0004          00013B40  28739          LG    15,@lit_1926_1743 ; rd_kafka_log0
00013B08                                   28740 @@gen_label2358 DS    0H
00013B08 05EF                              28741          BALR  14,15
00013B0A                                   28742 @@gen_label2359 DS    0H
00013B0A                                   28743 @L1984   DS    0H
                                           28744 * ***
                                           28745 * ***                           rd_kafka_txn_coord_timer_restart(rk, 5\
                                           28746 * 00);
00013B0A E320 D1A8 0024          000001A8  28747          STG   2,424(0,13)
00013B10 E548 D1B0 01F4          000001B0  28748          MVGHI 432(13),500
00013B16 4110 D1A8               000001A8  28749          LA    1,424(0,13)
00013B1A E3F0 C140 0004          00013B58  28750          LG    15,@lit_1926_1744 ; rd_kafka_txn_coord_timer_restart
00013B20                                   28751 @@gen_label2360 DS    0H
                                                                                                                           Page  569 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013B20 05EF                              28752          BALR  14,15
00013B22                                   28753 @@gen_label2361 DS    0H
                                           28754 * ***                   }
00013B22                                   28755 @L1980   DS    0H
                                           28756 * ***                   return 0;
00013B22 A7F9 0000               00000000  28757          LGHI  15,0        ; 0
00013B26 47F0 C306               00013D1E  28758          B     @ret_lab_1926
00013B30                                   28759          DS    0D
00013B30 000001F8                          28760 @FRAMESIZE_1926 DC F'504'
00013B34 00000000
00013B38 0000000000000000                  28761 @lit_1926_1739 DC AD(vsnprintf)
00013B40 0000000000000000                  28762 @lit_1926_1743 DC AD(rd_kafka_log0)
00013B48 0000000000014A98                  28763 @lit_1926_1742 DC AD(@strings@)
00013B50 0000000000015A98                  28764 @lit_1926_1741 DC AD(@strings@+4096)
00013B58 0000000000010BF8                  28765 @lit_1926_1744 DC AD(rd_kafka_txn_coord_timer_restart)
00013B60 0000000000000000                  28766 @lit_1926_1746 DC AD(rd_kafka_broker_name)
00013B68 0000000000000F28                  28767 @lit_1926_1753 DC AD(rd_refcnt_sub0)
00013B70 0000000000000000                  28768 @lit_1926_1754 DC AD(rd_kafka_broker_destroy_final)
00013B78 0000000000000538                  28769 @lit_1926_1755 DC AD(rd_atomic32_add)
00013B80 0000000000000000                  28770 @lit_1926_1756 DC AD(rd_kafka_broker_set_nodename)
00013B88 0000000000000000                  28771 @lit_1926_1758 DC AD(rd_kafka_idemp_pid_fsm)
                                           28772 * ***           }
                                           28773 * ***
                                           28774 * ***           do { if ((((rk)->rk_conf.debug & (0x8000)))) rd_kafka_\
                                           28775 * log0(&rk->rk_conf,rk,((void *)0), 7,(0x8000), "TXNCOORD","Transactio\
                                           28776 * n coordinator changed from %s -> %s: %s", rk->rk_eos.txn_curr_coord \
                                           28777 * ? rd_kafka_broker_name(rk->rk_eos.txn_curr_coord) : "(none)", rkb ? \
                                           28778 * rd_kafka_broker_name(rkb) : "(none)", buf); } while (0);
00013B90                                   28779 @L1985   DS    0H
00013B90 9180 2322      00000322 00000080  28780          TM    802(2),128
00013B94 4780 C23A               00013C52  28781          BZ    @L1988
00013B98 E3F0 2D50 0002          00000D50  28782          LTG   15,3408(0,2) ; offset of txn_curr_coord in 0000146
00013B9E 4780 C1AA               00013BC2  28783          BZ    @L1989
00013BA2 E3F0 2D50 0004          00000D50  28784          LG    15,3408(0,2)
00013BA8 E3F0 D1A8 0024          000001A8  28785          STG   15,424(0,13)
00013BAE 4110 D1A8               000001A8  28786          LA    1,424(0,13)
00013BB2 E3F0 C148 0004          00013B60  28787          LG    15,@lit_1926_1746 ; rd_kafka_broker_name
00013BB8                                   28788 @@gen_label2364 DS    0H
00013BB8 05EF                              28789          BALR  14,15
00013BBA                                   28790 @@gen_label2365 DS    0H
00013BBA B904 004F                         28791          LGR   4,15
00013BBE 47F0 C1B4               00013BCC  28792          B     @L1990
00013BC2                                   28793 @L1989   DS    0H
00013BC2 E3F0 C130 0004          00013B48  28794          LG    15,@lit_1926_1742
00013BC8 4140 FA8E               00000A8E  28795          LA    4,2702(0,15)
00013BCC                                   28796 @L1990   DS    0H
00013BCC B902 00F3                         28797          LTGR  15,3
00013BD0 4780 C1D2               00013BEA  28798          BZ    @L1991
00013BD4 E330 D1A8 0024          000001A8  28799          STG   3,424(0,13)
00013BDA 4110 D1A8               000001A8  28800          LA    1,424(0,13)
00013BDE E3F0 C148 0004          00013B60  28801          LG    15,@lit_1926_1746 ; rd_kafka_broker_name
00013BE4                                   28802 @@gen_label2367 DS    0H
                                                                                                                           Page  570 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013BE4 05EF                              28803          BALR  14,15
00013BE6                                   28804 @@gen_label2368 DS    0H
00013BE6 47F0 C1DC               00013BF4  28805          B     @L1992
00013BEA                                   28806 @L1991   DS    0H
00013BEA E3F0 C130 0004          00013B48  28807          LG    15,@lit_1926_1742
00013BF0 41F0 FA8E               00000A8E  28808          LA    15,2702(0,15)
00013BF4                                   28809 @L1992   DS    0H
00013BF4 4110 2210               00000210  28810          LA    1,528(0,2)
00013BF8 EB12 D1A8 0024          000001A8  28811          STMG  1,2,424(13)
00013BFE D707 D1B8 D1B8 000001B8 000001B8  28812          XC    440(8,13),440(13)
00013C04 E548 D1C0 0007          000001C0  28813          MVGHI 448(13),7
00013C0A C01F 0000 8000                    28814          LLILF 1,X'00008000' ; 32768
00013C10 E310 D1C8 0024          000001C8  28815          STG   1,456(0,13)
00013C16 E310 C138 0004          00013B50  28816          LG    1,@lit_1926_1741
00013C1C 4150 12FE               000002FE  28817          LA    5,766(0,1)
00013C20 E350 D1D0 0024          000001D0  28818          STG   5,464(0,13)
00013C26 4110 14CA               000004CA  28819          LA    1,1226(0,1)
00013C2A E310 D1D8 0024          000001D8  28820          STG   1,472(0,13)
00013C30 E340 D1E0 0024          000001E0  28821          STG   4,480(0,13)
00013C36 E3F0 D1E8 0024          000001E8  28822          STG   15,488(0,13)
00013C3C 41F0 D0A8               000000A8  28823          LA    15,168(0,13)
00013C40 E3F0 D1F0 0024          000001F0  28824          STG   15,496(0,13)
00013C46 4110 D1A8               000001A8  28825          LA    1,424(0,13)
00013C4A E3F0 C128 0004          00013B40  28826          LG    15,@lit_1926_1743 ; rd_kafka_log0
00013C50                                   28827 @@gen_label2369 DS    0H
00013C50 05EF                              28828          BALR  14,15
00013C52                                   28829 @@gen_label2370 DS    0H
00013C52                                   28830 @L1988   DS    0H
                                           28831 * ***
                                           28832 * ***   # 3156 "C:\asgkafka\librdkafka\src\rdkafka_txnmgr.c"
                                           28833 * ***           if (rk->rk_eos.txn_curr_coord)
00013C52 E3F0 2D50 0002          00000D50  28834          LTG   15,3408(0,2) ; offset of txn_curr_coord in 0000146
00013C58 4780 C27E               00013C96  28835          BZ    @L1993
                                           28836 * ***                   do { if (rd_refcnt_sub0(&(rk->rk_eos.txn_curr_\
                                           28837 * coord)->rkb_refcnt) > 0) break; rd_kafka_broker_destroy_final(rk->rk\
                                           28838 * _eos.txn_curr_coord); } while (0);
00013C5C                                   28839 @L1994   DS    0H
00013C5C E3F0 2D50 0004          00000D50  28840          LG    15,3408(0,2) ; offset of txn_curr_coord in 0000146
00013C62 41F0 FFA0               00000FA0  28841          LA    15,4000(0,15)
00013C66 E3F0 D1A8 0024          000001A8  28842          STG   15,424(0,13)
00013C6C 4110 D1A8               000001A8  28843          LA    1,424(0,13)
00013C70 E3F0 C150 0004          00013B68  28844          LG    15,@lit_1926_1753 ; rd_refcnt_sub0
00013C76                                   28845 @@gen_label2372 DS    0H
00013C76 05EF                              28846          BALR  14,15
00013C78                                   28847 @@gen_label2373 DS    0H
00013C78 12FF                              28848          LTR   15,15
00013C7A 4720 C27E               00013C96  28849          BH    @L1993
00013C7E                                   28850 @L1997   DS    0H
00013C7E E3F0 2D50 0004          00000D50  28851          LG    15,3408(0,2)
00013C84 E3F0 D1A8 0024          000001A8  28852          STG   15,424(0,13)
00013C8A 4110 D1A8               000001A8  28853          LA    1,424(0,13)
00013C8E E3F0 C158 0004          00013B70  28854          LG    15,@lit_1926_1754 ; rd_kafka_broker_destroy_final
                                                                                                                           Page  571 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013C94                                   28855 @@gen_label2375 DS    0H
00013C94 05EF                              28856          BALR  14,15
00013C96                                   28857 @@gen_label2376 DS    0H
00013C96                                   28858 @L1995   DS    0H
                                           28859 * ***
                                           28860 * ***           rk->rk_eos.txn_curr_coord = rkb;
00013C96                                   28861 @L1993   DS    0H
00013C96 E330 2D50 0024          00000D50  28862          STG   3,3408(0,2) ; offset of txn_curr_coord in 0000146
                                           28863 * ***           if (rkb)
00013C9C B902 00F3                         28864          LTGR  15,3
00013CA0 4780 C2A8               00013CC0  28865          BZ    @L1998
                                           28866 * ***                   rd_atomic32_add(&(rkb)->rkb_refcnt, 1);
00013CA4 41F0 3FA0               00000FA0  28867          LA    15,4000(0,3)
00013CA8 E3F0 D1A8 0024          000001A8  28868          STG   15,424(0,13)
00013CAE E548 D1B0 0001          000001B0  28869          MVGHI 432(13),1
00013CB4 4110 D1A8               000001A8  28870          LA    1,424(0,13)
00013CB8 E3F0 C160 0004          00013B78  28871          LG    15,@lit_1926_1755 ; rd_atomic32_add
00013CBE                                   28872 @@gen_label2378 DS    0H
00013CBE 05EF                              28873          BALR  14,15
00013CC0                                   28874 @@gen_label2379 DS    0H
00013CC0                                   28875 @L1998   DS    0H
                                           28876 * ***
                                           28877 * ***           rd_kafka_broker_set_nodename(rk->rk_eos.txn_coord,
                                           28878 * ***                                        rk->rk_eos.txn_curr_coord\
                                           28879 * );
00013CC0 E3F0 2D48 0004          00000D48  28880          LG    15,3400(0,2)
00013CC6 E3F0 D1A8 0024          000001A8  28881          STG   15,424(0,13)
00013CCC E3F0 2D50 0004          00000D50  28882          LG    15,3408(0,2)
00013CD2 E3F0 D1B0 0024          000001B0  28883          STG   15,432(0,13)
00013CD8 4110 D1A8               000001A8  28884          LA    1,424(0,13)
00013CDC E3F0 C168 0004          00013B80  28885          LG    15,@lit_1926_1756 ; rd_kafka_broker_set_nodename
00013CE2                                   28886 @@gen_label2380 DS    0H
00013CE2 05EF                              28887          BALR  14,15
00013CE4                                   28888 @@gen_label2381 DS    0H
                                           28889 * ***
                                           28890 * ***           if (!rkb) {
00013CE4 B902 00F3                         28891          LTGR  15,3
00013CE8 4770 C2F0               00013D08  28892          BNZ   @L1999
                                           28893 * ***
                                           28894 * ***                   rd_kafka_txn_coord_timer_restart(rk, 500);
00013CEC E320 D1A8 0024          000001A8  28895          STG   2,424(0,13)
00013CF2 E548 D1B0 01F4          000001B0  28896          MVGHI 432(13),500
00013CF8 4110 D1A8               000001A8  28897          LA    1,424(0,13)
00013CFC E3F0 C140 0004          00013B58  28898          LG    15,@lit_1926_1744 ; rd_kafka_txn_coord_timer_restart
00013D02                                   28899 @@gen_label2383 DS    0H
00013D02 05EF                              28900          BALR  14,15
00013D04                                   28901 @@gen_label2384 DS    0H
                                           28902 * ***           } else {
00013D04 47F0 C302               00013D1A  28903          B     @L2000
00013D08                                   28904 @L1999   DS    0H
                                           28905 * ***
                                           28906 * ***                   rd_kafka_idemp_pid_fsm(rk);
                                                                                                                           Page  572 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013D08 E320 D1A8 0024          000001A8  28907          STG   2,424(0,13)
00013D0E 4110 D1A8               000001A8  28908          LA    1,424(0,13)
00013D12 E3F0 C170 0004          00013B88  28909          LG    15,@lit_1926_1758 ; rd_kafka_idemp_pid_fsm
00013D18                                   28910 @@gen_label2385 DS    0H
00013D18 05EF                              28911          BALR  14,15
00013D1A                                   28912 @@gen_label2386 DS    0H
                                           28913 * ***           }
00013D1A                                   28914 @L2000   DS    0H
                                           28915 * ***
                                           28916 * ***           return 1;
00013D1A A7F9 0001               00000001  28917          LGHI  15,1        ; 1
                                           28918 * ***   }
00013D1E                                   28919 @ret_lab_1926 DS 0H
                                           28920 * * **** Start of Epilogue
                                           28921          DCCEPIL
00013D1E                                   28922+         ds 0h                                                          01-DCCEP
                                           28923+* Epilog
00013D1E D707 D088 D088 00000088 00000088  28924+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00013D24 E3D0 D080 0004          00000080  28925+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00013D2A E3C0 D090 0004          00000090  28926+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00013D30 E3B0 C018 0004          00000018  28927+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00013D36 E3C0 B010 0021          00000010  28928+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00013D3C E3E0 D008 0004          00000008  28929+         lg  14,8(0,13)          load up return address                 01-DCCEP
00013D42 EB1C D020 0004          00000020  28930+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00013D48 078E                              28931+         bcr 8,14                if same dsab, just return              01-DCCEP
00013D4A E3F0 D010 0024          00000010  28932+         stg 15,16(0,13)         save return code                       01-DCCEP
00013D50 E300 D018 0024          00000018  28933+         stg 0,24(0,13)          save more return code                  01-DCCEP
00013D56 E3F0 D090 0004          00000090  28934+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00013D5C E3F0 F018 0004          00000018  28935+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00013D62 47F0 F040               00000040  28936+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           28937+* End of Epilog
                                           28938 * * **** End of Epilogue
                                           28939          DROP  12
                                           28940 *
                                           28941 *   DSECT for automatic variables in "rd_kafka_txn_coord_set"
                                           28942 *      (FUNCTION #1926)
                                           28943 *
00000000                00000000 000001A8  28944 @AUTO#rd_kafka_txn_coord_set DSECT
00000000                                   28945          DS    XL168
000000A8                                   28946 rd_kafka_txn_coord_set#buf#0 DS 256XL1 ; buf
                                           28947 *
00013D66                00000000 00014658  28948 @CODE    CSECT
                                           28949 *
                                           28950 *
                                           28951 *
                                           28952 * ....... start of rd_kafka_txn_coord_monitor_cb
                                           28953 rd_kafka_txn_coord_monitor_cb ALIAS X'99846D92818692816DA3A7956D8396969*
                                                                9846D94969589A396996D8382'
00013D66                                   28954 @LNAME2034 DS  0H
00013D66 0000001D                          28955          DC    X'0000001D'
00013D6A 99846D9281869281                  28956          DC    C'rd_kafka_txn_coord_monitor_cb'
00013D87 00                                28957          DC    X'00'
                                                                                                                           Page  573 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           28958 rd_kafka_txn_coord_monitor_cb DCCPRLG CINDEX=2034,BASER=12,FRAME=496,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME2034
                                           28959          macro
                                           28960          dccextrn &m
                                           28961          gblc    &$dccext(1000)
                                           28962          gbla    &$dccexti
                                           28963          lcla    &i
                                           28964 &$dccext(&$dccexti+1) setc    '&m'
                                           28965 &i       seta    1
                                           28966 .loop    aif    (&i gt &$dccexti).around
                                           28967          aif    ('&$dccext(&i)' eq '&m').getout
                                           28968 &i       seta    &i+1
                                           28969          ago     .loop
                                           28970 .around  anop
                                           28971 &$dccexti seta &$dccexti+1
                                           28972          extrn  &m
                                           28973 .getout  anop
                                           28974          mend
00013D88                                   28975+$eye0321    ds    0d                                                    02-DCCCA
00013D88 C4C3C3                            28976+         dc cl3'DCC'                                                    02-DCCCA
00013D8B 01                                28977+         dc xl1'01' format one                                          02-DCCCA
00013D8C 00000000                          28978+         dc a(0)                                                        02-DCCCA
00013D90 0000000000013DFA                  28979+         dc ad(@PER_2034)                                               02-DCCCA
00013D98 00000000000001F0                  28980+         dc ad(496)                                                     02-DCCCA
00013DA0 0000000000000000                  28981+         dc ad(0)                                                       02-DCCCA
00013DA8 0000000000001000                  28982+         dc ad(4096)                                                    02-DCCCA
00013DB0 20                                28983+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00013DB1 03                                28984+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00013DB2 03                                28985+         dc al1(3)                                                      02-DCCCA
00013DB3 08                                28986+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00013DB4 00                                28987+         dc bl.8'00000000'                                              02-DCCCA
00013DB5 000000                            28988+         dc al3(0)                                                      02-DCCCA
00013DB8 0000000000013D66                  28989+         dc ad(@LNAME2034)                                              02-DCCCA
00013DC0                                   28990+         ds 0d                                                          02-DCCCA
00013DC0 0000000000013D88                  28991+         dc ad($eye0321)                                                02-DCCCA
00013DC8 0000000000000000                  28992+         dc ad(0)                                                       02-DCCCA
00013DD0                                   28993+         ds    0d                                                       01-DCCPR
                                           28994+         entry rd_kafka_txn_coord_monitor_cb                            01-DCCPR
00013DD0                                   28995+rd_kafka_txn_coord_monitor_cb ds 0d                                     01-DCCPR
00013DD0                                   28996+@REGION_2034_1 ds 0h                                                    01-DCCPR
00013DD0 EBEC D008 0024          00000008  28997+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00013DD6 E3E0 D088 0004          00000088  28998+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00013DDC E3C0 D090 0004          00000090  28999+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00013DE2 B904 002E                         29000+         lgr   2,14                copy addr of our savearea            01-DCCPR
00013DE6 E3B0 C018 0004          00000018  29001+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00013DEC A7EB 01F0               000001F0  29002+         aghi  14,496              increase by frame size               01-DCCPR
00013DF0 E3E0 C020 0021          00000020  29003+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00013DF6 4720 B020               00000020  29004+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00013DFA                                   29005+@PER_2034 ds   0h                                                       01-DCCPR
00013DFA EBDE 2080 0024          00000080  29006+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00013E00 E3C0 2090 0024          00000090  29007+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00013E06 B904 00D2                         29008+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  574 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013E0A B904 00CF                         29009+         lgr   12,15               set base reg                         01-DCCPR
                        00013DD0           29010+         using @REGION_2034_1,12                                        01-DCCPR
                                           29011 * ******* End of Prologue
                                           29012 * *
                                           29013 * ***           rd_kafka_t *rk = rkb->rkb_rk;
00013E0E E320 1000 0004          00000000  29014          LG    2,0(0,1)    ; rkb
00013E14 E330 2FD0 0004          00000FD0  29015          LG    3,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
                                           29016 * ***           rd_kafka_broker_state_t state = rd_kafka_broker_get_st\
                                           29017 * ate(rkb);
00013E1A E320 D1B0 0024          000001B0  29018          STG   2,432(0,13)
00013E20 4110 D1B0               000001B0  29019          LA    1,432(0,13)
00013E24 E3F0 C0D0 0004          00013EA0  29020          LG    15,@lit_2034_1761 ; rd_kafka_broker_get_state
00013E2A                                   29021 @@gen_label2387 DS    0H
00013E2A 05EF                              29022          BALR  14,15
00013E2C                                   29023 @@gen_label2388 DS    0H
00013E2C 184F                              29024          LR    4,15
                                           29025 * ***           rd_bool_t is_up;
                                           29026 * ***
                                           29027 * ***           ((rk->rk_eos.txn_coord == rkb) ? (void)0 : __assert(__\
                                           29028 * func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_txnmgr.c", 3189, "rk\
                                           29029 * ->rk_eos.txn_coord == rkb"));
00013E2E E3F0 3D48 0004          00000D48  29030          LG    15,3400(0,3) ; offset of txn_coord in 0000146
00013E34 B920 00F2                         29031          CGR   15,2
00013E38 4780 C0AE               00013E7E  29032          BE    @L2002
00013E3C                                   29033 @L2001   DS    0H
00013E3C E3F0 C0F0 0004          00013EC0  29034          LG    15,@lit_2034_1762
00013E42 41F0 F422               00000422  29035          LA    15,1058(0,15)
00013E46 E3F0 D1B0 0024          000001B0  29036          STG   15,432(0,13)
00013E4C E3F0 C0E8 0004          00013EB8  29037          LG    15,@lit_2034_1763
00013E52 41F0 F1B2               000001B2  29038          LA    15,434(0,15)
00013E56 E3F0 D1B8 0024          000001B8  29039          STG   15,440(0,13)
00013E5C E548 D1C0 0C75          000001C0  29040          MVGHI 448(13),3189
00013E62 E3F0 C0E0 0004          00013EB0  29041          LG    15,@lit_2034_1764
00013E68 41F0 F4FC               000004FC  29042          LA    15,1276(0,15)
00013E6C E3F0 D1C8 0024          000001C8  29043          STG   15,456(0,13)
00013E72 4110 D1B0               000001B0  29044          LA    1,432(0,13)
00013E76 E3F0 C0D8 0004          00013EA8  29045          LG    15,@lit_2034_1765 ; __assert
00013E7C                                   29046 @@gen_label2390 DS    0H
00013E7C 05EF                              29047          BALR  14,15
00013E7E                                   29048 @@gen_label2391 DS    0H
00013E7E                                   29049 @L2002   DS    0H
                                           29050 * ***
                                           29051 * ***           is_up = ((state) == RD_KAFKA_BROKER_STATE_UP || (state\
                                           29052 * ) == RD_KAFKA_BROKER_STATE_UPDATE);
00013E7E A74E 0006               00000006  29053          CHI   4,6
00013E82 4780 C0BE               00013E8E  29054          BE    @L2003
00013E86 A74E 0007               00000007  29055          CHI   4,7
00013E8A 4770 C140               00013F10  29056          BNE   @L2005
00013E8E                                   29057 @L2003   DS    0H
00013E8E A7F8 0001               00000001  29058          LHI   15,1        ; 1
00013E92 47F0 C144               00013F14  29059          B     @L2004
00013E98                                   29060          DS    0D
                                                                                                                           Page  575 
  Active Usings: @REGION_2034_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013E98 000001F0                          29061 @FRAMESIZE_2034 DC F'496'
00013E9C 00000000
00013EA0 0000000000003D00                  29062 @lit_2034_1761 DC AD(rd_kafka_broker_get_state)
00013EA8 0000000000000000                  29063 @lit_2034_1765 DC AD(__assert)
00013EB0 0000000000015A98                  29064 @lit_2034_1764 DC AD(@strings@+4096)
00013EB8 0000000000014A98                  29065 @lit_2034_1763 DC AD(@strings@)
00013EC0 0000000000014658                  29066 @lit_2034_1762 DC AD(@DATA)
00013EC8 0000000000000000                  29067 @lit_2034_1769 DC AD(mtx_lock)
00013ED0 0000000000001BA8                  29068 @lit_2034_1771 DC AD(rd_strlcpy)
00013ED8 0000000000000000                  29069 @lit_2034_1773 DC AD(mtx_unlock)
00013EE0 0000000000000000                  29070 @lit_2034_1778 DC AD(rd_kafka_log0)
00013EE8 0000000000010BF8                  29071 @lit_2034_1779 DC AD(rd_kafka_txn_coord_timer_restart)
00013EF0 0000000000000000                  29072 @lit_2034_1780 DC AD(rwlock_wrlock)
00013EF8 0000000000000000                  29073 @lit_2034_1781 DC AD(rd_kafka_idemp_pid_fsm)
00013F00 0000000000009338                  29074 @lit_2034_1782 DC AD(rd_kafka_txn_schedule_register_partitions)
00013F08 0000000000000000                  29075 @lit_2034_1783 DC AD(rwlock_wrunlock)
00013F10                                   29076 @L2005   DS    0H
00013F10 A7F8 0000               00000000  29077          LHI   15,0        ; 0
00013F14                                   29078 @L2004   DS    0H
00013F14 42F0 D1A8               000001A8  29079          STC   15,424(0,13) ; is_up
                                           29080 * ***           do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x8000)))) \
                                           29081 * { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_st\
                                           29082 * rlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rk\
                                           29083 * b)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)-\
                                           29084 * >rkb_rk, _logname, 7, (0x8000), "COORD", "Transaction coordinator is\
                                           29085 *  now %s", is_up ? "up" : "down"); } while (0); } } while (0);
00013F18                                   29086 @L2006   DS    0H
00013F18 E3F0 2FD0 0004          00000FD0  29087          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00013F1E 9180 F322      00000322 00000080  29088          TM    802(15),128
00013F22 4780 C236               00014006  29089          BZ    @L2009
00013F26                                   29090 @L2010   DS    0H
00013F26 A749 1638               00001638  29091          LGHI  4,5688      ; 5688
00013F2A 41F4 2000               00000000  29092          LA    15,0(4,2)
00013F2E E3F0 D1B0 0024          000001B0  29093          STG   15,432(0,13)
00013F34 4110 D1B0               000001B0  29094          LA    1,432(0,13)
00013F38 E3F0 C0F8 0004          00013EC8  29095          LG    15,@lit_2034_1769 ; mtx_lock
00013F3E                                   29096 @@gen_label2395 DS    0H
00013F3E 05EF                              29097          BALR  14,15
00013F40                                   29098 @@gen_label2396 DS    0H
00013F40 41F0 D0A8               000000A8  29099          LA    15,168(0,13)
00013F44 E3F0 D1B0 0024          000001B0  29100          STG   15,432(0,13)
00013F4A A7F9 1630               00001630  29101          LGHI  15,5680     ; 5680
00013F4E E3FF 2000 0004          00000000  29102          LG    15,0(15,2)
00013F54 E3F0 D1B8 0024          000001B8  29103          STG   15,440(0,13)
00013F5A E548 D1C0 0100          000001C0  29104          MVGHI 448(13),256
00013F60 4110 D1B0               000001B0  29105          LA    1,432(0,13)
00013F64 E3F0 C100 0004          00013ED0  29106          LG    15,@lit_2034_1771 ; rd_strlcpy
00013F6A                                   29107 @@gen_label2397 DS    0H
00013F6A 05EF                              29108          BALR  14,15
00013F6C                                   29109 @@gen_label2398 DS    0H
00013F6C 41F4 2000               00000000  29110          LA    15,0(4,2)
00013F70 E3F0 D1B0 0024          000001B0  29111          STG   15,432(0,13)
                                                                                                                           Page  576 
  Active Usings: @REGION_2034_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00013F76 4110 D1B0               000001B0  29112          LA    1,432(0,13)
00013F7A E3F0 C108 0004          00013ED8  29113          LG    15,@lit_2034_1773 ; mtx_unlock
00013F80                                   29114 @@gen_label2399 DS    0H
00013F80 05EF                              29115          BALR  14,15
00013F82                                   29116 @@gen_label2400 DS    0H
00013F82 9500 D1A8      000001A8 00000000  29117          CLI   424(13),0
00013F86 4780 C1C8               00013F98  29118          BE    @L2013
00013F8A E3F0 C0E0 0004          00013EB0  29119          LG    15,@lit_2034_1764
00013F90 41F0 F518               00000518  29120          LA    15,1304(0,15)
00013F94 47F0 C1D2               00013FA2  29121          B     @L2014
00013F98                                   29122 @L2013   DS    0H
00013F98 E3F0 C0E0 0004          00013EB0  29123          LG    15,@lit_2034_1764
00013F9E 41F0 F51C               0000051C  29124          LA    15,1308(0,15)
00013FA2                                   29125 @L2014   DS    0H
00013FA2 E310 2FD0 0004          00000FD0  29126          LG    1,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00013FA8 4110 1210               00000210  29127          LA    1,528(0,1)
00013FAC E310 D1B0 0024          000001B0  29128          STG   1,432(0,13)
00013FB2 E310 2FD0 0004          00000FD0  29129          LG    1,4048(0,2)
00013FB8 E310 D1B8 0024          000001B8  29130          STG   1,440(0,13)
00013FBE 4110 D0A8               000000A8  29131          LA    1,168(0,13)
00013FC2 E310 D1C0 0024          000001C0  29132          STG   1,448(0,13)
00013FC8 E548 D1C8 0007          000001C8  29133          MVGHI 456(13),7
00013FCE C01F 0000 8000                    29134          LLILF 1,X'00008000' ; 32768
00013FD4 E310 D1D0 0024          000001D0  29135          STG   1,464(0,13)
00013FDA E310 C0E0 0004          00013EB0  29136          LG    1,@lit_2034_1764
00013FE0 4120 1522               00000522  29137          LA    2,1314(0,1)
00013FE4 E320 D1D8 0024          000001D8  29138          STG   2,472(0,13)
00013FEA 4110 1528               00000528  29139          LA    1,1320(0,1)
00013FEE E310 D1E0 0024          000001E0  29140          STG   1,480(0,13)
00013FF4 E3F0 D1E8 0024          000001E8  29141          STG   15,488(0,13)
00013FFA 4110 D1B0               000001B0  29142          LA    1,432(0,13)
00013FFE E3F0 C110 0004          00013EE0  29143          LG    15,@lit_2034_1778 ; rd_kafka_log0
00014004                                   29144 @@gen_label2402 DS    0H
00014004 05EF                              29145          BALR  14,15
00014006                                   29146 @@gen_label2403 DS    0H
00014006                                   29147 @L2009   DS    0H
                                           29148 * ***
                                           29149 * ***
                                           29150 * ***
                                           29151 * ***           if (!is_up) {
00014006 9500 D1A8      000001A8 00000000  29152          CLI   424(13),0
0001400A 4770 C25A               0001402A  29153          BNE   @L2015
                                           29154 * ***
                                           29155 * ***
                                           29156 * ***
                                           29157 * ***                   rd_kafka_txn_coord_timer_restart(rk, 500);
0001400E E330 D1B0 0024          000001B0  29158          STG   3,432(0,13)
00014014 E548 D1B8 01F4          000001B8  29159          MVGHI 440(13),500
0001401A 4110 D1B0               000001B0  29160          LA    1,432(0,13)
0001401E E3F0 C118 0004          00013EE8  29161          LG    15,@lit_2034_1779 ; rd_kafka_txn_coord_timer_restart
00014024                                   29162 @@gen_label2405 DS    0H
00014024 05EF                              29163          BALR  14,15
                                                                                                                           Page  577 
  Active Usings: @REGION_2034_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014026                                   29164 @@gen_label2406 DS    0H
                                           29165 * ***
                                           29166 * ***           } else {
00014026 47F0 C2C8               00014098  29167          B     @L2016
0001402A                                   29168 @L2015   DS    0H
                                           29169 * ***
                                           29170 * ***
                                           29171 * ***                   rwlock_wrlock(&(rk)->rk_lock);
0001402A 41F0 39A0               000009A0  29172          LA    15,2464(0,3)
0001402E E3F0 D1B0 0024          000001B0  29173          STG   15,432(0,13)
00014034 4110 D1B0               000001B0  29174          LA    1,432(0,13)
00014038 E3F0 C120 0004          00013EF0  29175          LG    15,@lit_2034_1780 ; rwlock_wrlock
0001403E                                   29176 @@gen_label2407 DS    0H
0001403E 05EF                              29177          BALR  14,15
00014040                                   29178 @@gen_label2408 DS    0H
                                           29179 * ***                   if (rk->rk_eos.idemp_state < RD_KAFKA_IDEMP_ST\
                                           29180 * ATE_ASSIGNED) {
00014040 E55C 3C70 0006          00000C70  29181          CHSI  3184(3),6
00014046 47B0 C290               00014060  29182          BNL   @L2017
                                           29183 * ***
                                           29184 * ***                           rd_kafka_idemp_pid_fsm(rk);
0001404A E330 D1B0 0024          000001B0  29185          STG   3,432(0,13)
00014050 4110 D1B0               000001B0  29186          LA    1,432(0,13)
00014054 E3F0 C128 0004          00013EF8  29187          LG    15,@lit_2034_1781 ; rd_kafka_idemp_pid_fsm
0001405A                                   29188 @@gen_label2410 DS    0H
0001405A 05EF                              29189          BALR  14,15
0001405C                                   29190 @@gen_label2411 DS    0H
                                           29191 * ***
                                           29192 * ***                   } else if (rk->rk_eos.idemp_state ==
0001405C 47F0 C2B2               00014082  29193          B     @L2018
00014060                                   29194 @L2017   DS    0H
                                           29195 * ***                              RD_KAFKA_IDEMP_STATE_ASSIGNED) {
00014060 E55C 3C70 0006          00000C70  29196          CHSI  3184(3),6
00014066 4770 C2B2               00014082  29197          BNE   @L2018
                                           29198 * ***
                                           29199 * ***
                                           29200 * ***                           rd_kafka_txn_schedule_register_partiti\
                                           29201 * ons(rk,
                                           29202 * ***                                                                 \
                                           29203 *     1);
0001406A E330 D1B0 0024          000001B0  29204          STG   3,432(0,13)
00014070 E548 D1B8 0001          000001B8  29205          MVGHI 440(13),1
00014076 4110 D1B0               000001B0  29206          LA    1,432(0,13)
0001407A E3F0 C130 0004          00013F00  29207          LG    15,@lit_2034_1782 ; rd_kafka_txn_schedule_register_parti*
                                                                tions
00014080                                   29208 @@gen_label2413 DS    0H
00014080 05EF                              29209          BALR  14,15
00014082                                   29210 @@gen_label2414 DS    0H
                                           29211 * ***                   }
00014082                                   29212 @L2019   DS    0H
                                           29213 * ***
                                           29214 * ***                   rwlock_wrunlock(&(rk)->rk_lock);
                                                                                                                           Page  578 
  Active Usings: @REGION_2034_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014082                                   29215 @L2018   DS    0H
00014082 41F0 39A0               000009A0  29216          LA    15,2464(0,3)
00014086 E3F0 D1B0 0024          000001B0  29217          STG   15,432(0,13)
0001408C 4110 D1B0               000001B0  29218          LA    1,432(0,13)
00014090 E3F0 C138 0004          00013F08  29219          LG    15,@lit_2034_1783 ; rwlock_wrunlock
00014096                                   29220 @@gen_label2415 DS    0H
00014096 05EF                              29221          BALR  14,15
00014098                                   29222 @@gen_label2416 DS    0H
                                           29223 * ***           }
00014098                                   29224 @L2016   DS    0H
                                           29225 * ***   }
00014098                                   29226 @ret_lab_2034 DS 0H
                                           29227 * * **** Start of Epilogue
                                           29228          DCCEPIL
00014098                                   29229+         ds 0h                                                          01-DCCEP
                                           29230+* Epilog
00014098 D707 D088 D088 00000088 00000088  29231+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0001409E E3D0 D080 0004          00000080  29232+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000140A4 E3C0 D090 0004          00000090  29233+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000140AA E3B0 C018 0004          00000018  29234+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000140B0 E3C0 B010 0021          00000010  29235+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000140B6 E3E0 D008 0004          00000008  29236+         lg  14,8(0,13)          load up return address                 01-DCCEP
000140BC EB1C D020 0004          00000020  29237+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000140C2 078E                              29238+         bcr 8,14                if same dsab, just return              01-DCCEP
000140C4 E3F0 D010 0024          00000010  29239+         stg 15,16(0,13)         save return code                       01-DCCEP
000140CA E300 D018 0024          00000018  29240+         stg 0,24(0,13)          save more return code                  01-DCCEP
000140D0 E3F0 D090 0004          00000090  29241+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000140D6 E3F0 F018 0004          00000018  29242+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000140DC 47F0 F040               00000040  29243+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           29244+* End of Epilog
                                           29245 * * **** End of Epilogue
                                           29246          DROP  12
                                           29247 *
                                           29248 *   DSECT for automatic variables in "rd_kafka_txn_coord_monitor_cb"
                                           29249 *      (FUNCTION #2034)
                                           29250 *
00000000                00000000 000001A9  29251 @AUTO#rd_kafka_txn_coord_monitor_cb DSECT
00000000                                   29252          DS    XL168
000000A8                                   29253 rd_kafka_txn_coord_monitor_cb#_logname#3 DS 256XL1 ; _logname
000001A8                000001A8 000000A8  29254          ORG   @AUTO#rd_kafka_txn_coord_monitor_cb+168
000000A8                                   29255 rd_kafka_txn_coord_monitor_cb#state#0 DS 1F ; state
000000AC                000000AC 000001A8  29256          ORG   @AUTO#rd_kafka_txn_coord_monitor_cb+424
000001A8                                   29257 rd_kafka_txn_coord_monitor_cb#is_up#0 DS 1CL1 ; is_up
                                           29258 *
000140E0                00000000 00014658  29259 @CODE    CSECT
                                           29260 *
                                           29261 *
                                           29262 *
                                           29263 * ....... start of rd_kafka_txns_term
                                           29264 rd_kafka_txns_term ALIAS X'99846D92818692816DA3A795A26DA3859994'
000140E0                                   29265 @LNAME1927 DS  0H
000140E0 00000012                          29266          DC    X'00000012'
                                                                                                                           Page  579 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000140E4 99846D9281869281                  29267          DC    C'rd_kafka_txns_term'
000140F6 00                                29268          DC    X'00'
                                           29269 rd_kafka_txns_term DCCPRLG CINDEX=1927,BASER=12,FRAME=192,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1927
                                           29270          macro
                                           29271          dccextrn &m
                                           29272          gblc    &$dccext(1000)
                                           29273          gbla    &$dccexti
                                           29274          lcla    &i
                                           29275 &$dccext(&$dccexti+1) setc    '&m'
                                           29276 &i       seta    1
                                           29277 .loop    aif    (&i gt &$dccexti).around
                                           29278          aif    ('&$dccext(&i)' eq '&m').getout
                                           29279 &i       seta    &i+1
                                           29280          ago     .loop
                                           29281 .around  anop
                                           29282 &$dccexti seta &$dccexti+1
                                           29283          extrn  &m
                                           29284 .getout  anop
                                           29285          mend
000140F8                                   29286+$eye0324    ds    0d                                                    02-DCCCA
000140F8 C4C3C3                            29287+         dc cl3'DCC'                                                    02-DCCCA
000140FB 01                                29288+         dc xl1'01' format one                                          02-DCCCA
000140FC 00000000                          29289+         dc a(0)                                                        02-DCCCA
00014100 000000000001416A                  29290+         dc ad(@PER_1927)                                               02-DCCCA
00014108 00000000000000C0                  29291+         dc ad(192)                                                     02-DCCCA
00014110 0000000000000000                  29292+         dc ad(0)                                                       02-DCCCA
00014118 0000000000001000                  29293+         dc ad(4096)                                                    02-DCCCA
00014120 20                                29294+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00014121 03                                29295+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00014122 03                                29296+         dc al1(3)                                                      02-DCCCA
00014123 08                                29297+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00014124 00                                29298+         dc bl.8'00000000'                                              02-DCCCA
00014125 000000                            29299+         dc al3(0)                                                      02-DCCCA
00014128 00000000000140E0                  29300+         dc ad(@LNAME1927)                                              02-DCCCA
00014130                                   29301+         ds 0d                                                          02-DCCCA
00014130 00000000000140F8                  29302+         dc ad($eye0324)                                                02-DCCCA
00014138 0000000000000000                  29303+         dc ad(0)                                                       02-DCCCA
00014140                                   29304+         ds    0d                                                       01-DCCPR
                                           29305+         entry rd_kafka_txns_term                                       01-DCCPR
00014140                                   29306+rd_kafka_txns_term ds 0d                                                01-DCCPR
00014140                                   29307+@REGION_1927_1 ds 0h                                                    01-DCCPR
00014140 EBEC D008 0024          00000008  29308+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00014146 E3E0 D088 0004          00000088  29309+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001414C E3C0 D090 0004          00000090  29310+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00014152 B904 002E                         29311+         lgr   2,14                copy addr of our savearea            01-DCCPR
00014156 E3B0 C018 0004          00000018  29312+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001415C A7EB 00C0               000000C0  29313+         aghi  14,192              increase by frame size               01-DCCPR
00014160 E3E0 C020 0021          00000020  29314+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00014166 4720 B020               00000020  29315+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0001416A                                   29316+@PER_1927 ds   0h                                                       01-DCCPR
0001416A EBDE 2080 0024          00000080  29317+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  580 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014170 E3C0 2090 0024          00000090  29318+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00014176 B904 00D2                         29319+         lgr   13,2                set real frame pointer               01-DCCPR
0001417A B904 00CF                         29320+         lgr   12,15               set base reg                         01-DCCPR
                        00014140           29321+         using @REGION_1927_1,12                                        01-DCCPR
                                           29322 * ******* End of Prologue
                                           29323 * *
                                           29324 * ***           do { if ((rk->rk_eos.txn_init_rkq)) rd_kafka_q_destroy\
                                           29325 * 0(rk->rk_eos.txn_init_rkq, 0 ); } while (0);
0001417E E320 1000 0004          00000000  29326          LG    2,0(0,1)    ; rk
00014184                                   29327 @L2020   DS    0H
00014184 E3F0 2E08 0002          00000E08  29328          LTG   15,3592(0,2) ; offset of txn_init_rkq in 0000146
0001418A 4780 C06C               000141AC  29329          BZ    @L2023
0001418E E3F0 2E08 0004          00000E08  29330          LG    15,3592(0,2)
00014194 E3F0 D0A8 0024          000000A8  29331          STG   15,168(0,13)
0001419A D707 D0B0 D0B0 000000B0 000000B0  29332          XC    176(8,13),176(13)
000141A0 4110 D0A8               000000A8  29333          LA    1,168(0,13)
000141A4 E3F0 C260 0004          000143A0  29334          LG    15,@lit_1927_1785 ; rd_kafka_q_destroy0
000141AA                                   29335 @@gen_label2418 DS    0H
000141AA 05EF                              29336          BALR  14,15
000141AC                                   29337 @@gen_label2419 DS    0H
000141AC                                   29338 @L2023   DS    0H
                                           29339 * ***
                                           29340 * ***           do { if ((rk->rk_eos.txn_errstr)) rd_free(rk->rk_eos.t\
                                           29341 * xn_errstr); } while (0);
000141AC                                   29342 @L2024   DS    0H
000141AC E3F0 2EE0 0002          00000EE0  29343          LTG   15,3808(0,2) ; offset of txn_errstr in 0000146
000141B2 4780 C08E               000141CE  29344          BZ    @L2027
000141B6 E3F0 2EE0 0004          00000EE0  29345          LG    15,3808(0,2)
000141BC E3F0 D0A8 0024          000000A8  29346          STG   15,168(0,13)
000141C2 4110 D0A8               000000A8  29347          LA    1,168(0,13)
000141C6 E3F0 C268 0004          000143A8  29348          LG    15,@lit_1927_1786 ; rd_free
000141CC                                   29349 @@gen_label2421 DS    0H
000141CC 05EF                              29350          BALR  14,15
000141CE                                   29351 @@gen_label2422 DS    0H
000141CE                                   29352 @L2027   DS    0H
                                           29353 * ***
                                           29354 * ***           rd_kafka_timer_stop(&rk->rk_timers,
                                           29355 * ***                               &rk->rk_eos.txn_coord_tmr, 1);
000141CE A739 1010               00001010  29356          LGHI  3,4112      ; 4112
000141D2 41F3 2000               00000000  29357          LA    15,0(3,2)
000141D6 E3F0 D0A8 0024          000000A8  29358          STG   15,168(0,13)
000141DC 41F0 2EF0               00000EF0  29359          LA    15,3824(0,2)
000141E0 E3F0 D0B0 0024          000000B0  29360          STG   15,176(0,13)
000141E6 E548 D0B8 0001          000000B8  29361          MVGHI 184(13),1
000141EC 4110 D0A8               000000A8  29362          LA    1,168(0,13)
000141F0 E340 C270 0004          000143B0  29363          LG    4,@lit_1927_1788 ; rd_kafka_timer_stop
000141F6 B904 00F4                         29364          LGR   15,4
000141FA                                   29365 @@gen_label2423 DS    0H
000141FA 05EF                              29366          BALR  14,15
000141FC                                   29367 @@gen_label2424 DS    0H
                                           29368 * ***           rd_kafka_timer_stop(&rk->rk_timers,
                                           29369 * ***                               &rk->rk_eos.txn_register_parts_tmr\
                                                                                                                           Page  581 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           29370 * , 1);
000141FC 41F3 2000               00000000  29371          LA    15,0(3,2)
00014200 E3F0 D0A8 0024          000000A8  29372          STG   15,168(0,13)
00014206 41F0 2E18               00000E18  29373          LA    15,3608(0,2)
0001420A E3F0 D0B0 0024          000000B0  29374          STG   15,176(0,13)
00014210 E548 D0B8 0001          000000B8  29375          MVGHI 184(13),1
00014216 4110 D0A8               000000A8  29376          LA    1,168(0,13)
0001421A B904 00F4                         29377          LGR   15,4
0001421E                                   29378 @@gen_label2425 DS    0H
0001421E 05EF                              29379          BALR  14,15
00014220                                   29380 @@gen_label2426 DS    0H
                                           29381 * ***
                                           29382 * ***           if (rk->rk_eos.txn_curr_coord)
00014220 E3F0 2D50 0002          00000D50  29383          LTG   15,3408(0,2) ; offset of txn_curr_coord in 0000146
00014226 4780 C124               00014264  29384          BZ    @L2028
                                           29385 * ***                   do { if (rd_refcnt_sub0(&(rk->rk_eos.txn_curr_\
                                           29386 * coord)->rkb_refcnt) > 0) break; rd_kafka_broker_destroy_final(rk->rk\
                                           29387 * _eos.txn_curr_coord); } while (0);
0001422A                                   29388 @L2029   DS    0H
0001422A E3F0 2D50 0004          00000D50  29389          LG    15,3408(0,2) ; offset of txn_curr_coord in 0000146
00014230 41F0 FFA0               00000FA0  29390          LA    15,4000(0,15)
00014234 E3F0 D0A8 0024          000000A8  29391          STG   15,168(0,13)
0001423A 4110 D0A8               000000A8  29392          LA    1,168(0,13)
0001423E E3F0 C278 0004          000143B8  29393          LG    15,@lit_1927_1791 ; rd_refcnt_sub0
00014244                                   29394 @@gen_label2428 DS    0H
00014244 05EF                              29395          BALR  14,15
00014246                                   29396 @@gen_label2429 DS    0H
00014246 12FF                              29397          LTR   15,15
00014248 4720 C124               00014264  29398          BH    @L2028
0001424C                                   29399 @L2032   DS    0H
0001424C E3F0 2D50 0004          00000D50  29400          LG    15,3408(0,2)
00014252 E3F0 D0A8 0024          000000A8  29401          STG   15,168(0,13)
00014258 4110 D0A8               000000A8  29402          LA    1,168(0,13)
0001425C E3F0 C280 0004          000143C0  29403          LG    15,@lit_1927_1792 ; rd_kafka_broker_destroy_final
00014262                                   29404 @@gen_label2431 DS    0H
00014262 05EF                              29405          BALR  14,15
00014264                                   29406 @@gen_label2432 DS    0H
00014264                                   29407 @L2030   DS    0H
                                           29408 * ***
                                           29409 * ***
                                           29410 * ***           rd_kafka_broker_persistent_connection_del(
00014264                                   29411 @L2028   DS    0H
                                           29412 * ***                   rk->rk_eos.txn_coord,
                                           29413 * ***                   &rk->rk_eos.txn_coord->rkb_persistconn.coord);
00014264 E3F0 2D48 0004          00000D48  29414          LG    15,3400(0,2)
0001426A E3F0 D0A8 0024          000000A8  29415          STG   15,168(0,13)
00014270 E3F0 2D48 0004          00000D48  29416          LG    15,3400(0,2) ; offset of txn_coord in 0000146
00014276 A719 1678               00001678  29417          LGHI  1,5752      ; 5752
0001427A 41F1 F008               00000008  29418          LA    15,8(1,15)
0001427E E3F0 D0B0 0024          000000B0  29419          STG   15,176(0,13)
00014284 4110 D0A8               000000A8  29420          LA    1,168(0,13)
00014288 E3F0 C288 0004          000143C8  29421          LG    15,@lit_1927_1794 ; rd_kafka_broker_persistent_connectio*
                                                                                                                           Page  582 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                n_del
0001428E                                   29422 @@gen_label2433 DS    0H
0001428E 05EF                              29423          BALR  14,15
00014290                                   29424 @@gen_label2434 DS    0H
                                           29425 * ***           rd_kafka_broker_monitor_del(&rk->rk_eos.txn_coord_mon)\
                                           29426 * ;
00014290 41F0 2D58               00000D58  29427          LA    15,3416(0,2)
00014294 E3F0 D0A8 0024          000000A8  29428          STG   15,168(0,13)
0001429A 4110 D0A8               000000A8  29429          LA    1,168(0,13)
0001429E E3F0 C290 0004          000143D0  29430          LG    15,@lit_1927_1795 ; rd_kafka_broker_monitor_del
000142A4                                   29431 @@gen_label2435 DS    0H
000142A4 05EF                              29432          BALR  14,15
000142A6                                   29433 @@gen_label2436 DS    0H
                                           29434 * ***           do { if (rd_refcnt_sub0(&(rk->rk_eos.txn_coord)->rkb_r\
                                           29435 * efcnt) > 0) break; rd_kafka_broker_destroy_final(rk->rk_eos.txn_coor\
                                           29436 * d); } while (0);
000142A6                                   29437 @L2033   DS    0H
000142A6 E3F0 2D48 0004          00000D48  29438          LG    15,3400(0,2) ; offset of txn_coord in 0000146
000142AC 41F0 FFA0               00000FA0  29439          LA    15,4000(0,15)
000142B0 E3F0 D0A8 0024          000000A8  29440          STG   15,168(0,13)
000142B6 4110 D0A8               000000A8  29441          LA    1,168(0,13)
000142BA E3F0 C278 0004          000143B8  29442          LG    15,@lit_1927_1791 ; rd_refcnt_sub0
000142C0                                   29443 @@gen_label2437 DS    0H
000142C0 05EF                              29444          BALR  14,15
000142C2                                   29445 @@gen_label2438 DS    0H
000142C2 12FF                              29446          LTR   15,15
000142C4 4720 C1A0               000142E0  29447          BH    @L2034
000142C8                                   29448 @L2036   DS    0H
000142C8 E3F0 2D48 0004          00000D48  29449          LG    15,3400(0,2)
000142CE E3F0 D0A8 0024          000000A8  29450          STG   15,168(0,13)
000142D4 4110 D0A8               000000A8  29451          LA    1,168(0,13)
000142D8 E3F0 C280 0004          000143C0  29452          LG    15,@lit_1927_1792 ; rd_kafka_broker_destroy_final
000142DE                                   29453 @@gen_label2440 DS    0H
000142DE 05EF                              29454          BALR  14,15
000142E0                                   29455 @@gen_label2441 DS    0H
000142E0                                   29456 @L2034   DS    0H
                                           29457 * ***           rk->rk_eos.txn_coord = ((void *)0);
000142E0 A7F9 0000               00000000  29458          LGHI  15,0        ; 0
000142E4 E3F0 2D48 0024          00000D48  29459          STG   15,3400(0,2) ; offset of txn_coord in 0000146
                                           29460 * ***
                                           29461 * ***           mtx_lock(&rk->rk_eos.txn_pending_lock);
000142EA 41F0 2E50               00000E50  29462          LA    15,3664(0,2)
000142EE E3F0 D0A8 0024          000000A8  29463          STG   15,168(0,13)
000142F4 4110 D0A8               000000A8  29464          LA    1,168(0,13)
000142F8 E3F0 C298 0004          000143D8  29465          LG    15,@lit_1927_1799 ; mtx_lock
000142FE                                   29466 @@gen_label2442 DS    0H
000142FE 05EF                              29467          BALR  14,15
00014300                                   29468 @@gen_label2443 DS    0H
                                           29469 * ***           rd_kafka_txn_clear_pending_partitions(rk);
00014300 E320 D0A8 0024          000000A8  29470          STG   2,168(0,13)
00014306 4110 D0A8               000000A8  29471          LA    1,168(0,13)
0001430A E3F0 C2A0 0004          000143E0  29472          LG    15,@lit_1927_1800 ; rd_kafka_txn_clear_pending_partition*
                                                                                                                           Page  583 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                s
00014310                                   29473 @@gen_label2444 DS    0H
00014310 05EF                              29474          BALR  14,15
00014312                                   29475 @@gen_label2445 DS    0H
                                           29476 * ***           mtx_unlock(&rk->rk_eos.txn_pending_lock);
00014312 41F0 2E50               00000E50  29477          LA    15,3664(0,2)
00014316 E3F0 D0A8 0024          000000A8  29478          STG   15,168(0,13)
0001431C 4110 D0A8               000000A8  29479          LA    1,168(0,13)
00014320 E3F0 C2A8 0004          000143E8  29480          LG    15,@lit_1927_1801 ; mtx_unlock
00014326                                   29481 @@gen_label2446 DS    0H
00014326 05EF                              29482          BALR  14,15
00014328                                   29483 @@gen_label2447 DS    0H
                                           29484 * ***           mtx_destroy(&rk->rk_eos.txn_pending_lock);
00014328 41F0 2E50               00000E50  29485          LA    15,3664(0,2)
0001432C E3F0 D0A8 0024          000000A8  29486          STG   15,168(0,13)
00014332 4110 D0A8               000000A8  29487          LA    1,168(0,13)
00014336 E3F0 C2B0 0004          000143F0  29488          LG    15,@lit_1927_1802 ; mtx_destroy
0001433C                                   29489 @@gen_label2448 DS    0H
0001433C 05EF                              29490          BALR  14,15
0001433E                                   29491 @@gen_label2449 DS    0H
                                           29492 * ***
                                           29493 * ***           rd_kafka_txn_clear_partitions(rk);
0001433E E320 D0A8 0024          000000A8  29494          STG   2,168(0,13)
00014344 4110 D0A8               000000A8  29495          LA    1,168(0,13)
00014348 E3F0 C2B8 0004          000143F8  29496          LG    15,@lit_1927_1803 ; rd_kafka_txn_clear_partitions
0001434E                                   29497 @@gen_label2450 DS    0H
0001434E 05EF                              29498          BALR  14,15
00014350                                   29499 @@gen_label2451 DS    0H
                                           29500 * ***   }
00014350                                   29501 @ret_lab_1927 DS 0H
                                           29502 * * **** Start of Epilogue
                                           29503          DCCEPIL
00014350                                   29504+         ds 0h                                                          01-DCCEP
                                           29505+* Epilog
00014350 D707 D088 D088 00000088 00000088  29506+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00014356 E3D0 D080 0004          00000080  29507+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0001435C E3C0 D090 0004          00000090  29508+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00014362 E3B0 C018 0004          00000018  29509+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00014368 E3C0 B010 0021          00000010  29510+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0001436E E3E0 D008 0004          00000008  29511+         lg  14,8(0,13)          load up return address                 01-DCCEP
00014374 EB1C D020 0004          00000020  29512+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0001437A 078E                              29513+         bcr 8,14                if same dsab, just return              01-DCCEP
0001437C E3F0 D010 0024          00000010  29514+         stg 15,16(0,13)         save return code                       01-DCCEP
00014382 E300 D018 0024          00000018  29515+         stg 0,24(0,13)          save more return code                  01-DCCEP
00014388 E3F0 D090 0004          00000090  29516+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0001438E E3F0 F018 0004          00000018  29517+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00014394 47F0 F040               00000040  29518+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           29519+* End of Epilog
                                           29520 * * **** End of Epilogue
00014398                                   29521          DS    0D
00014398 000000C0                          29522 @FRAMESIZE_1927 DC F'192'
0001439C 00000000
                                                                                                                           Page  584 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000143A0 0000000000001FC8                  29523 @lit_1927_1785 DC AD(rd_kafka_q_destroy0)
000143A8 0000000000000CB0                  29524 @lit_1927_1786 DC AD(rd_free)
000143B0 0000000000000000                  29525 @lit_1927_1788 DC AD(rd_kafka_timer_stop)
000143B8 0000000000000F28                  29526 @lit_1927_1791 DC AD(rd_refcnt_sub0)
000143C0 0000000000000000                  29527 @lit_1927_1792 DC AD(rd_kafka_broker_destroy_final)
000143C8 0000000000000000                  29528 @lit_1927_1794 DC AD(rd_kafka_broker_persistent_connection_del)
000143D0 0000000000000000                  29529 @lit_1927_1795 DC AD(rd_kafka_broker_monitor_del)
000143D8 0000000000000000                  29530 @lit_1927_1799 DC AD(mtx_lock)
000143E0 0000000000009680                  29531 @lit_1927_1800 DC AD(rd_kafka_txn_clear_pending_partitions)
000143E8 0000000000000000                  29532 @lit_1927_1801 DC AD(mtx_unlock)
000143F0 0000000000000000                  29533 @lit_1927_1802 DC AD(mtx_destroy)
000143F8 00000000000097C8                  29534 @lit_1927_1803 DC AD(rd_kafka_txn_clear_partitions)
                                           29535          DROP  12
                                           29536 *
                                           29537 *   DSECT for automatic variables in "rd_kafka_txns_term"
                                           29538 *      (FUNCTION #1927)
                                           29539 *
00000000                00000000 000000A8  29540 @AUTO#rd_kafka_txns_term DSECT
00000000                                   29541          DS    XL168
                                           29542 *
00014400                00000000 00014658  29543 @CODE    CSECT
                                           29544 *
                                           29545 *
                                           29546 *
                                           29547 * ....... start of rd_kafka_txns_init
                                           29548 rd_kafka_txns_init ALIAS X'99846D92818692816DA3A795A26D899589A3'
00014400                                   29549 @LNAME1928 DS  0H
00014400 00000012                          29550          DC    X'00000012'
00014404 99846D9281869281                  29551          DC    C'rd_kafka_txns_init'
00014416 00                                29552          DC    X'00'
                                           29553 rd_kafka_txns_init DCCPRLG CINDEX=1928,BASER=12,FRAME=200,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1928
                                           29554          macro
                                           29555          dccextrn &m
                                           29556          gblc    &$dccext(1000)
                                           29557          gbla    &$dccexti
                                           29558          lcla    &i
                                           29559 &$dccext(&$dccexti+1) setc    '&m'
                                           29560 &i       seta    1
                                           29561 .loop    aif    (&i gt &$dccexti).around
                                           29562          aif    ('&$dccext(&i)' eq '&m').getout
                                           29563 &i       seta    &i+1
                                           29564          ago     .loop
                                           29565 .around  anop
                                           29566 &$dccexti seta &$dccexti+1
                                           29567          extrn  &m
                                           29568 .getout  anop
                                           29569          mend
00014418                                   29570+$eye0327    ds    0d                                                    02-DCCCA
00014418 C4C3C3                            29571+         dc cl3'DCC'                                                    02-DCCCA
0001441B 01                                29572+         dc xl1'01' format one                                          02-DCCCA
0001441C 00000000                          29573+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page  585 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014420 000000000001448A                  29574+         dc ad(@PER_1928)                                               02-DCCCA
00014428 00000000000000C8                  29575+         dc ad(200)                                                     02-DCCCA
00014430 0000000000000000                  29576+         dc ad(0)                                                       02-DCCCA
00014438 0000000000001000                  29577+         dc ad(4096)                                                    02-DCCCA
00014440 20                                29578+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00014441 03                                29579+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00014442 03                                29580+         dc al1(3)                                                      02-DCCCA
00014443 08                                29581+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00014444 00                                29582+         dc bl.8'00000000'                                              02-DCCCA
00014445 000000                            29583+         dc al3(0)                                                      02-DCCCA
00014448 0000000000014400                  29584+         dc ad(@LNAME1928)                                              02-DCCCA
00014450                                   29585+         ds 0d                                                          02-DCCCA
00014450 0000000000014418                  29586+         dc ad($eye0327)                                                02-DCCCA
00014458 0000000000000000                  29587+         dc ad(0)                                                       02-DCCCA
00014460                                   29588+         ds    0d                                                       01-DCCPR
                                           29589+         entry rd_kafka_txns_init                                       01-DCCPR
00014460                                   29590+rd_kafka_txns_init ds 0d                                                01-DCCPR
00014460                                   29591+@REGION_1928_1 ds 0h                                                    01-DCCPR
00014460 EBEC D008 0024          00000008  29592+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00014466 E3E0 D088 0004          00000088  29593+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001446C E3C0 D090 0004          00000090  29594+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00014472 B904 002E                         29595+         lgr   2,14                copy addr of our savearea            01-DCCPR
00014476 E3B0 C018 0004          00000018  29596+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001447C A7EB 00C8               000000C8  29597+         aghi  14,200              increase by frame size               01-DCCPR
00014480 E3E0 C020 0021          00000020  29598+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00014486 4720 B020               00000020  29599+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0001448A                                   29600+@PER_1928 ds   0h                                                       01-DCCPR
0001448A EBDE 2080 0024          00000080  29601+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00014490 E3C0 2090 0024          00000090  29602+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00014496 B904 00D2                         29603+         lgr   13,2                set real frame pointer               01-DCCPR
0001449A B904 00CF                         29604+         lgr   12,15               set base reg                         01-DCCPR
                        00014460           29605+         using @REGION_1928_1,12                                        01-DCCPR
                                           29606 * ******* End of Prologue
                                           29607 * *
                                           29608 * ***           rd_atomic32_init(&rk->rk_eos.txn_may_enq, 0);
0001449E E320 1000 0004          00000000  29609          LG    2,0(0,1)    ; rk
000144A4 41F0 2D00               00000D00  29610          LA    15,3328(0,2)
000144A8 E3F0 D0A8 0024          000000A8  29611          STG   15,168(0,13)
000144AE D707 D0B0 D0B0 000000B0 000000B0  29612          XC    176(8,13),176(13)
000144B4 4110 D0A8               000000A8  29613          LA    1,168(0,13)
000144B8 E3F0 C1B8 0004          00014618  29614          LG    15,@lit_1928_1805 ; rd_atomic32_init
000144BE                                   29615 @@gen_label2452 DS    0H
000144BE 05EF                              29616          BALR  14,15
000144C0                                   29617 @@gen_label2453 DS    0H
                                           29618 * ***           mtx_init(&rk->rk_eos.txn_pending_lock, 0);
000144C0 41F0 2E50               00000E50  29619          LA    15,3664(0,2)
000144C4 E3F0 D0A8 0024          000000A8  29620          STG   15,168(0,13)
000144CA D707 D0B0 D0B0 000000B0 000000B0  29621          XC    176(8,13),176(13)
000144D0 4110 D0A8               000000A8  29622          LA    1,168(0,13)
000144D4 E3F0 C1C0 0004          00014620  29623          LG    15,@lit_1928_1806 ; mtx_init
000144DA                                   29624 @@gen_label2454 DS    0H
000144DA 05EF                              29625          BALR  14,15
                                                                                                                           Page  586 
  Active Usings: @REGION_1928_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000144DC                                   29626 @@gen_label2455 DS    0H
                                           29627 * ***           do { (&rk->rk_eos.txn_pending_rktps)->tqh_first = (((v\
                                           29628 * oid *)0)); (&rk->rk_eos.txn_pending_rktps)->tqh_last = &(&rk->rk_eos\
                                           29629 * .txn_pending_rktps)->tqh_first; } while ( 0);
000144DC                                   29630 @L2037   DS    0H
000144DC A7F9 0000               00000000  29631          LGHI  15,0        ; 0
000144E0 E3F0 2E78 0024          00000E78  29632          STG   15,3704(0,2) ; offset of txn_pending_rktps in 0000146
000144E6 41F0 2E78               00000E78  29633          LA    15,3704(0,2)
000144EA E3F0 2E80 0024          00000E80  29634          STG   15,3712(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
                                           29635 * ***           do { (&rk->rk_eos.txn_waitresp_rktps)->tqh_first = (((\
                                           29636 * void *)0)); (&rk->rk_eos.txn_waitresp_rktps)->tqh_last = &(&rk->rk_e\
                                           29637 * os.txn_waitresp_rktps)->tqh_first; } while ( 0);
000144F0                                   29638 @L2040   DS    0H
000144F0 A7F9 0000               00000000  29639          LGHI  15,0        ; 0
000144F4 E3F0 2E88 0024          00000E88  29640          STG   15,3720(0,2) ; offset of txn_waitresp_rktps in 0000146
000144FA 41F0 2E88               00000E88  29641          LA    15,3720(0,2)
000144FE E3F0 2E90 0024          00000E90  29642          STG   15,3728(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
                                           29643 * ***           do { (&rk->rk_eos.txn_rktps)->tqh_first = (((void *)0)\
                                           29644 * ); (&rk->rk_eos.txn_rktps)->tqh_last = &(&rk->rk_eos.txn_rktps)->tqh\
                                           29645 * _first; } while ( 0);
00014504                                   29646 @L2043   DS    0H
00014504 A7F9 0000               00000000  29647          LGHI  15,0        ; 0
00014508 E3F0 2E98 0024          00000E98  29648          STG   15,3736(0,2) ; offset of txn_rktps in 0000146
0001450E 41F0 2E98               00000E98  29649          LA    15,3736(0,2)
00014512 E3F0 2EA0 0024          00000EA0  29650          STG   15,3744(0,2) ; offset of tqh_last in rd_kafka_toppar_tqh*
                                                                ead_s
                                           29651 * ***
                                           29652 * ***
                                           29653 * ***           rk->rk_eos.txn_coord =
                                           29654 * ***                   rd_kafka_broker_add_logical(rk, "TxnCoordinato\
                                           29655 * r");
00014518 E320 D0A8 0024          000000A8  29656          STG   2,168(0,13)
0001451E E3F0 C1D0 0004          00014630  29657          LG    15,@lit_1928_1810
00014524 41F0 F54A               0000054A  29658          LA    15,1354(0,15)
00014528 E3F0 D0B0 0024          000000B0  29659          STG   15,176(0,13)
0001452E 4110 D0A8               000000A8  29660          LA    1,168(0,13)
00014532 E3F0 C1C8 0004          00014628  29661          LG    15,@lit_1928_1811 ; rd_kafka_broker_add_logical
00014538                                   29662 @@gen_label2456 DS    0H
00014538 05EF                              29663          BALR  14,15
0001453A                                   29664 @@gen_label2457 DS    0H
0001453A E3F0 2D48 0024          00000D48  29665          STG   15,3400(0,2)
                                           29666 * ***
                                           29667 * ***           rd_kafka_broker_monitor_add(&rk->rk_eos.txn_coord_mon,
                                           29668 * ***                                       rk->rk_eos.txn_coord,
                                           29669 * ***                                       rk->rk_ops,
                                           29670 * ***                                       rd_kafka_txn_coord_monitor\
                                           29671 * _cb);
00014540 41F0 2D58               00000D58  29672          LA    15,3416(0,2)
00014544 E3F0 D0A8 0024          000000A8  29673          STG   15,168(0,13)
0001454A E3F0 2D48 0004          00000D48  29674          LG    15,3400(0,2)
                                                                                                                           Page  587 
  Active Usings: @REGION_1928_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014550 E3F0 D0B0 0024          000000B0  29675          STG   15,176(0,13)
00014556 E3F0 2008 0004          00000008  29676          LG    15,8(0,2)
0001455C E3F0 D0B8 0024          000000B8  29677          STG   15,184(0,13)
00014562 E3F0 C1E0 0004          00014640  29678          LG    15,@lit_1928_1812 ; rd_kafka_txn_coord_monitor_cb
00014568 E3F0 D0C0 0024          000000C0  29679          STG   15,192(0,13)
0001456E 4110 D0A8               000000A8  29680          LA    1,168(0,13)
00014572 E3F0 C1D8 0004          00014638  29681          LG    15,@lit_1928_1813 ; rd_kafka_broker_monitor_add
00014578                                   29682 @@gen_label2458 DS    0H
00014578 05EF                              29683          BALR  14,15
0001457A                                   29684 @@gen_label2459 DS    0H
                                           29685 * ***
                                           29686 * ***           rd_kafka_broker_persistent_connection_add(
                                           29687 * ***                   rk->rk_eos.txn_coord,
                                           29688 * ***                   &rk->rk_eos.txn_coord->rkb_persistconn.coord);
0001457A E3F0 2D48 0004          00000D48  29689          LG    15,3400(0,2)
00014580 E3F0 D0A8 0024          000000A8  29690          STG   15,168(0,13)
00014586 E3F0 2D48 0004          00000D48  29691          LG    15,3400(0,2) ; offset of txn_coord in 0000146
0001458C A719 1678               00001678  29692          LGHI  1,5752      ; 5752
00014590 41F1 F008               00000008  29693          LA    15,8(1,15)
00014594 E3F0 D0B0 0024          000000B0  29694          STG   15,176(0,13)
0001459A 4110 D0A8               000000A8  29695          LA    1,168(0,13)
0001459E E3F0 C1E8 0004          00014648  29696          LG    15,@lit_1928_1815 ; rd_kafka_broker_persistent_connectio*
                                                                n_add
000145A4                                   29697 @@gen_label2460 DS    0H
000145A4 05EF                              29698          BALR  14,15
000145A6                                   29699 @@gen_label2461 DS    0H
                                           29700 * ***
                                           29701 * ***           rd_atomic64_init(&rk->rk_eos.txn_dr_fails, 0);
000145A6 41F0 2EA8               00000EA8  29702          LA    15,3752(0,2)
000145AA E3F0 D0A8 0024          000000A8  29703          STG   15,168(0,13)
000145B0 D707 D0B0 D0B0 000000B0 000000B0  29704          XC    176(8,13),176(13)
000145B6 4110 D0A8               000000A8  29705          LA    1,168(0,13)
000145BA E3F0 C1F0 0004          00014650  29706          LG    15,@lit_1928_1816 ; rd_atomic64_init
000145C0                                   29707 @@gen_label2462 DS    0H
000145C0 05EF                              29708          BALR  14,15
000145C2                                   29709 @@gen_label2463 DS    0H
                                           29710 * ***   }
000145C2                                   29711 @ret_lab_1928 DS 0H
                                           29712 * * **** Start of Epilogue
                                           29713          DCCEPIL
000145C2                                   29714+         ds 0h                                                          01-DCCEP
                                           29715+* Epilog
000145C2 D707 D088 D088 00000088 00000088  29716+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000145C8 E3D0 D080 0004          00000080  29717+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000145CE E3C0 D090 0004          00000090  29718+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000145D4 E3B0 C018 0004          00000018  29719+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000145DA E3C0 B010 0021          00000010  29720+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000145E0 E3E0 D008 0004          00000008  29721+         lg  14,8(0,13)          load up return address                 01-DCCEP
000145E6 EB1C D020 0004          00000020  29722+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000145EC 078E                              29723+         bcr 8,14                if same dsab, just return              01-DCCEP
000145EE E3F0 D010 0024          00000010  29724+         stg 15,16(0,13)         save return code                       01-DCCEP
000145F4 E300 D018 0024          00000018  29725+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  588 
  Active Usings: @REGION_1928_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000145FA E3F0 D090 0004          00000090  29726+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00014600 E3F0 F018 0004          00000018  29727+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00014606 47F0 F040               00000040  29728+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           29729+* End of Epilog
                                           29730 * * **** End of Epilogue
00014610                                   29731          DS    0D
00014610 000000C8                          29732 @FRAMESIZE_1928 DC F'200'
00014614 00000000
00014618 0000000000000418                  29733 @lit_1928_1805 DC AD(rd_atomic32_init)
00014620 0000000000000000                  29734 @lit_1928_1806 DC AD(mtx_init)
00014628 0000000000000000                  29735 @lit_1928_1811 DC AD(rd_kafka_broker_add_logical)
00014630 0000000000015A98                  29736 @lit_1928_1810 DC AD(@strings@+4096)
00014638 0000000000000000                  29737 @lit_1928_1813 DC AD(rd_kafka_broker_monitor_add)
00014640 0000000000013DD0                  29738 @lit_1928_1812 DC AD(rd_kafka_txn_coord_monitor_cb)
00014648 0000000000000000                  29739 @lit_1928_1815 DC AD(rd_kafka_broker_persistent_connection_add)
00014650 0000000000000908                  29740 @lit_1928_1816 DC AD(rd_atomic64_init)
                                           29741          DROP  12
                                           29742 *
                                           29743 *   DSECT for automatic variables in "rd_kafka_txns_init"
                                           29744 *      (FUNCTION #1928)
                                           29745 *
00000000                00000000 000000A8  29746 @AUTO#rd_kafka_txns_init DSECT
00000000                                   29747          DS    XL168
                                           29748 *
00014658                00000000 00014658  29749 @CODE    CSECT
                                           29750 @@STATIC ALIAS X'7C998492818692816DA3A79594879950'
                                           29751 @@STATIC DXD   219D
                                           29752 *
                                           29753 *  Non-Re-Entrant Data Section
                                           29754 *
00014658                00014658 00001ED4  29755 @DATA    CSECT
                                           29756 @DATA    RMODE ANY
                                           29757 @DATA    AMODE ANY
00014658 99846D8381939396                  29758 @@T349   DC    X'99846D838193939683'               rd.calloc
00014661 00                                29759          DC    1X'00'
00014662 99846D9481939396                  29760 @@T34D   DC    X'99846D948193939683'               rd.malloc
0001466B 00                                29761          DC    1X'00'
0001466C 99846D9985819393                  29762 @@T352   DC    X'99846D99858193939683'             rd.realloc
00014676 0000                              29763          DC    2X'00'
00014678 99846DA2A39984A4                  29764 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00014681 00                                29765          DC    1X'00'
00014682 99846DA2A3999584                  29766 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
0001468C 0000                              29767          DC    2X'00'
0001468E 99846D9985868395                  29768 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0001469C 00000000                          29769          DC    4X'00'
000146A0 00000000                          29770 @@T65A   DC    4X'00'
000146A4 0000001A00000000                  29771          DC    X'0000001A000000000000002200000000' ................
000146B4 00000024                          29772          DC    X'00000024'                         ....
000146B8 99846D9281869281                  29773 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
000146C8 98                                29774          DC    X'98'                               q
000146C9 00                                29775          DC    1X'00'
000146CA 99846D9281869281                  29776 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
                                                                                                                           Page  589 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000146DA 96A8F0                            29777          DC    X'96A8F0'                           oy0
000146DD 00                                29778          DC    1X'00'
000146DE 99846D9281869281                  29779 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000146EE 856D8485A2A39996                  29780          DC    X'856D8485A2A39996A8F0'             e.destroy0
000146F8 0000                              29781          DC    2X'00'
000146FA 99846D9281869281                  29782 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0001470A 856D8485936DA296                  29783          DC    X'856D8485936DA296A4998385'         e.del.source
00014716 0000                              29784          DC    2X'00'
00014718 99846D9281869281                  29785 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00014728 856D8485936DA296                  29786          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00014738 A49995                            29787          DC    X'A49995'                           urn
0001473B 00                                29788          DC    1X'00'
0001473C 99846D9281869281                  29789 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0001474C 856DA39989878785                  29790          DC    X'856DA3998987878599'               e.trigger
00014755 00                                29791          DC    1X'00'
00014756 99846D9281869281                  29792 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00014766 856D8485A2A39996                  29793          DC    X'856D8485A2A39996A8'               e.destroy
0001476F 00                                29794          DC    1X'00'
00014770 99846D9281869281                  29795 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00014780 856D8489A2818293                  29796          DC    X'856D8489A281829385'               e.disable
00014789 00                                29797          DC    1X'00'
0001478A 99846DA394978182                  29798 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
0001479A F0                                29799          DC    X'F0'                               0
0001479B 00                                29800          DC    1X'00'
0001479C 99846D9281869281                  29801 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
000147AC 81A385                            29802          DC    X'81A385'                           ate
000147AF 00                                29803          DC    1X'00'
000147B0 99846D9281869281                  29804 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
000147C0 819389A9856D8199                  29805          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
000147CE 0000                              29806          DC    2X'00'
000147D0 99846D9281869281                  29807 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
000147E0 6D899589A3                        29808          DC    X'6D899589A3'                       .init
000147E5 00                                29809          DC    1X'00'
000147E6 99846D9281869281                  29810 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
000147F6 87A26DA2A482                      29811          DC    X'87A26DA2A482'                     gs.sub
000147FC 0000                              29812          DC    2X'00'
000147FE 99846D9281869281                  29813 @@TA61   DC    X'99846D92818692816DA3A7956D818484' rd.kafka.txn.add
0001480E 6D978199A389A389                  29814          DC    X'6D978199A389A3899695'             .partition
00014818 0000                              29815          DC    2X'00'
0001481A 99846D9281869281                  29816 @@TAC7   DC    X'99846D92818692816DA3A7956DA2A381' rd.kafka.txn.sta
0001482A A3856DA3998195A2                  29817          DC    X'A3856DA3998195A289A38996956D89A2' te.transition.is
0001483A 6DA581938984                      29818          DC    X'6DA581938984'                     .valid
00014840 0000                              29819          DC    2X'00'
00014842 99846D9281869281                  29820 @@TACC   DC    X'99846D92818692816DA3A7956DA285A3' rd.kafka.txn.set
00014852 6DA2A381A385                      29821          DC    X'6DA2A381A385'                     .state
00014858 0000                              29822          DC    2X'00'
0001485A 99846D9281869281                  29823 @@TAEE   DC    X'99846D92818692816DA3A7956D978199' rd.kafka.txn.par
0001486A A389A38996956D99                  29824          DC    X'A389A38996956D99858789A2A3859985' tition.registere
0001487A 84                                29825          DC    X'84'                               d
0001487B 00                                29826          DC    1X'00'
0001487C 99846D9281869281                  29827 @@TAFB   DC    X'99846D92818692816DA3A7956D888195' rd.kafka.txn.han
0001488C 8493856DC18484D7                  29828          DC    X'8493856DC18484D78199A389A3899695' dle.AddPartition
                                                                                                                           Page  590 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001489C A2E396E3A795                      29829          DC    X'A2E396E3A795'                     sToTxn
000148A2 0000                              29830          DC    2X'00'
000148A4 99846D9281869281                  29831 @@TB4E   DC    X'99846D92818692816DA3A7956D998587' rd.kafka.txn.reg
000148B4 89A2A385996D9781                  29832          DC    X'89A2A385996D978199A389A3899695A2' ister.partitions
000148C4 0000                              29833          DC    2X'00'
000148C6 99846D9281869281                  29834 @@TB83   DC    X'99846D92818692816DA3A7956D83A499' rd.kafka.txn.cur
000148D6 996D8197896D9985                  29835          DC    X'996D8197896D998598'               r.api.req
000148DF 00                                29836          DC    1X'00'
000148E0 99846D9281869281                  29837 @@TB96   DC    X'99846D92818692816D899589A36DA399' rd.kafka.init.tr
000148F0 8195A28183A38996                  29838          DC    X'8195A28183A3899695A2'             ansactions
000148FA 0000                              29839          DC    2X'00'
000148FC 99846D9281869281                  29840 @@TB9E   DC    X'99846D92818692816DA3A7956D96976D' rd.kafka.txn.op.
0001490C 82858789956DA399                  29841          DC    X'82858789956DA3998195A28183A38996' begin.transactio
0001491C 95                                29842          DC    X'95'                               n
0001491D 00                                29843          DC    1X'00'
0001491E 99846D9281869281                  29844 @@TBB3   DC    X'99846D92818692816DA3A7956D888195' rd.kafka.txn.han
0001492E 8493856DE3A795D6                  29845          DC    X'8493856DE3A795D68686A285A3C39694' dle.TxnOffsetCom
0001493E 9489A3                            29846          DC    X'9489A3'                           mit
00014941 00                                29847          DC    1X'00'
00014942 99846D9281869281                  29848 @@TBD7   DC    X'99846D92818692816DA3A7956D888195' rd.kafka.txn.han
00014952 8493856DC18484D6                  29849          DC    X'8493856DC18484D68686A285A3A2E396' dle.AddOffsetsTo
00014962 E3A795                            29850          DC    X'E3A795'                           Txn
00014965 00                                29851          DC    1X'00'
00014966 99846D9281869281                  29852 @@TBF1   DC    X'99846D92818692816DA3A7956D96976D' rd.kafka.txn.op.
00014976 A28595846D968686                  29853          DC    X'A28595846D968686A285A3A26DA3966D' send.offsets.to.
00014986 A3998195A28183A3                  29854          DC    X'A3998195A28183A3899695'           transaction
00014991 00                                29855          DC    1X'00'
00014992 99846D9281869281                  29856 @@TBF9   DC    X'99846D92818692816DA28595846D9686' rd.kafka.send.of
000149A2 86A285A3A26DA396                  29857          DC    X'86A285A3A26DA3966DA3998195A28183' fsets.to.transac
000149B2 A3899695                          29858          DC    X'A3899695'                         tion
000149B6 0000                              29859          DC    2X'00'
000149B8 99846D9281869281                  29860 @@TC0F   DC    X'99846D92818692816DA3A7956D888195' rd.kafka.txn.han
000149C8 8493856DC59584E3                  29861          DC    X'8493856DC59584E3A795'             dle.EndTxn
000149D2 0000                              29862          DC    2X'00'
000149D4 99846D9281869281                  29863 @@TC27   DC    X'99846D92818692816DA3A7956D96976D' rd.kafka.txn.op.
000149E4 8396949489A36DA3                  29864          DC    X'8396949489A36DA3998195A28183A389' commit.transacti
000149F4 9695                              29865          DC    X'9695'                             on
000149F6 0000                              29866          DC    2X'00'
000149F8 99846D9281869281                  29867 @@TC4C   DC    X'99846D92818692816DA3A7956D96976D' rd.kafka.txn.op.
00014A08 81829699A36DA399                  29868          DC    X'81829699A36DA3998195A28183A38996' abort.transactio
00014A18 95                                29869          DC    X'95'                               n
00014A19 00                                29870          DC    1X'00'
00014A1A 99846D9281869281                  29871 @@TC5F   DC    X'99846D92818692816DA3A7956D839696' rd.kafka.txn.coo
00014A2A 99846DA389948599                  29872          DC    X'99846DA3899485996D9985A2A38199A3' rd.timer.restart
00014A3A 0000                              29873          DC    2X'00'
00014A3C 99846D9281869281                  29874 @@TC71   DC    X'99846D92818692816DA3A7956D888195' rd.kafka.txn.han
00014A4C 8493856DC6899584                  29875          DC    X'8493856DC6899584C396969984899581' dle.FindCoordina
00014A5C A39699                            29876          DC    X'A39699'                           tor
00014A5F 00                                29877          DC    1X'00'
00014A60 99846D9281869281                  29878 @@TCBE   DC    X'99846D92818692816DA3A7956D839696' rd.kafka.txn.coo
00014A70 99846D98A48599A8                  29879          DC    X'99846D98A48599A8'                 rd.query
00014A78 0000                              29880          DC    2X'00'
                                                                                                                           Page  591 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014A7A 99846D9281869281                  29881 @@TCCC   DC    X'99846D92818692816DA3A7956D839696' rd.kafka.txn.coo
00014A8A 99846D94969589A3                  29882          DC    X'99846D94969589A396996D8382'       rd.monitor.cb
00014A97 00                                29883          DC    1X'00'
00014A98                                   29884 @strings@ DS   0H
00014A98 C37AE081A2879281                  29885          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00014AA8 849281869281E0A2                  29886          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00014AB8 95009985868395A3                  29887          DC    X'95009985868395A340A2A48260A98599' n.refcnt.sub.zer
00014AC8 96005A5C7F998586                  29888          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00014AD8 A98599967F00E495                  29889          DC    X'A98599967F00E495929596A695606C88' zero..Unknown..h
00014AE8 846F0000C37AE081                  29890          DC    X'846F0000C37AE081A2879281869281E0' d...C..asgkafka.
00014AF8 9389829984928186                  29891          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
00014B08 8492818692816D98                  29892          DC    X'8492818692816D98A485A4854B880000' dkafka.queue.h..
00014B18 81A2A28599A37A40                  29893          DC    X'81A2A28599A37A40999298606E999298' assert..rkq..rkq
00014B28 6D9985868395A340                  29894          DC    X'6D9985868395A3406E40F000D3D9D2E3' .refcnt...0.LRKT
00014B38 0000E3888540E399                  29895          DC    X'0000E3888540E3998195A28183A38996' ..The.Transactio
00014B48 95819340C1D7C940                  29896          DC    X'95819340C1D7C94083819540969593A8' nal.API.can.only
00014B58 40828540A4A28584                  29897          DC    X'40828540A4A285844096954097999684' .be.used.on.prod
00014B68 A4838599408995A2                  29898          DC    X'A4838599408995A2A381958385A20000' ucer.instances..
00014B78 E3888540E3998195                  29899          DC    X'E3888540E3998195A28183A389969581' The.Transactiona
00014B88 9340C1D7C9409985                  29900          DC    X'9340C1D7C940998598A4899985A240A3' l.API.requires.t
00014B98 998195A28183A389                  29901          DC    X'998195A28183A389969581934B898440' ransactional.id.
00014BA8 A396408285408396                  29902          DC    X'A39640828540839695868987A4998584' to.be.configured
00014BB8 00006CA20000D697                  29903          DC    X'00006CA20000D697859981A389969540' ...s..Operation.
00014BC8 9596A340A5819389                  29904          DC    X'9596A340A58193898440899540A2A381' not.valid.in.sta
00014BD8 A385406CA200C9D5                  29905          DC    X'A385406CA200C9D5E3C5D9D5C1D340C5' te..s.INTERNAL.E
00014BE8 D9D9D6D97A409389                  29906          DC    X'D9D9D6D97A4093898299849281869281' RROR..librdkafka
00014BF8 406CA27A6C847A40                  29907          DC    X'406CA27A6C847A400000C995A5819389' ..s..d....Invali
00014C08 8440A3A79540A2A3                  29908          DC    X'8440A3A79540A2A381A38540A3998195' d.txn.state.tran
00014C18 A289A38996957A40                  29909          DC    X'A289A38996957A406CA240606E406CA2' sition...s.....s
00014C28 00001500C9D5E3C5                  29910          DC    X'00001500C9D5E3C5D9D5C1D340C5D9D9' ....INTERNAL.ERR
00014C38 D6D940C9D540D3C9                  29911          DC    X'D6D940C9D540D3C9C2D9C4D2C1C6D2C1' OR.IN.LIBRDKAFKA
00014C48 0000C37AE081A287                  29912          DC    X'0000C37AE081A2879281869281E09389' ..C..asgkafka.li
00014C58 8299849281869281                  29913          DC    X'8299849281869281E0A29983E0998492' brdkafka.src.rdk
00014C68 818692816DA3A795                  29914          DC    X'818692816DA3A7959487994B83005A5C' afka.txnmgr.c...
00014C78 7FC9D5E3C5D9D5C1                  29915          DC    X'7FC9D5E3C5D9D5C1D340C5D9D9D6D940' .INTERNAL.ERROR.
00014C88 C9D540D3C9C2D9C4                  29916          DC    X'C9D540D3C9C2D9C4D2C1C6D2C17F0000' IN.LIBRDKAFKA...
00014C98 E3E7D5E2E3C1E3C5                  29917          DC    X'E3E7D5E2E3C1E3C50000C2E4C77A40C9' TXNSTATE..BUG..I
00014CA8 95A58193898440A3                  29918          DC    X'95A58193898440A3998195A28183A389' nvalid.transacti
00014CB8 969540A2A381A385                  29919          DC    X'969540A2A381A38540A3998195A289A3' on.state.transit
00014CC8 8996954081A3A385                  29920          DC    X'8996954081A3A3859497A385847A406C' ion.attempted...
00014CD8 A240606E406CA200                  29921          DC    X'A240606E406CA200C2E4C77A40C995A5' s.....s.BUG..Inv
00014CE8 8193898440A39981                  29922          DC    X'8193898440A3998195A28183A3899695' alid.transaction
00014CF8 40A2A381A38540A3                  29923          DC    X'40A2A381A38540A3998195A289A38996' .state.transitio
00014D08 95005A5C7FC2E4C7                  29924          DC    X'95005A5C7FC2E4C77A40C995A5819389' n....BUG..Invali
00014D18 8440A3998195A281                  29925          DC    X'8440A3998195A28183A389969540A2A3' d.transaction.st
00014D28 81A38540A3998195                  29926          DC    X'81A38540A3998195A289A38996957F00' ate.transition..
00014D38 E3998195A28183A3                  29927          DC    X'E3998195A28183A389969540A2A381A3' Transaction.stat
00014D48 8540838881958785                  29928          DC    X'8540838881958785406CA240606E406C' e.change..s.....
00014D58 A200E3E7D5C5D9D9                  29929          DC    X'A200E3E7D5C5D9D90000C681A3819340' s.TXNERR..Fatal.
00014D68 A3998195A28183A3                  29930          DC    X'A3998195A28183A38996954085999996' transaction.erro
00014D78 997A406CA2404D6C                  29931          DC    X'997A406CA2404D6CA25D0000C6C1E3C1' r...s...s...FATA
00014D88 D300D596A3409799                  29932          DC    X'D300D596A34097999697818781A38995' L.Not.propagatin
                                                                                                                           Page  592 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00014D98 874081829699A381                  29933          DC    X'874081829699A38182938540A3998195' g.abortable.tran
00014DA8 A28183A389969581                  29934          DC    X'A28183A3899695819340859999969940' sactional.error.
00014DB8 4D6CA25D40A28995                  29935          DC    X'4D6CA25D40A28995838540979985A589' ..s..since.previ
00014DC8 96A4A2408681A381                  29936          DC    X'96A4A2408681A3819340859999969940' ous.fatal.error.
00014DD8 819399858184A840                  29937          DC    X'819399858184A840998189A285840000' already.raised..
00014DE8 C987959699899587                  29938          DC    X'C98795969989958740A2A48260A28598' Ignoring.sub.seq
00014DF8 A48595A340818296                  29939          DC    X'A48595A34081829699A38182938540A3' uent.abortable.t
00014E08 998195A28183A389                  29940          DC    X'998195A28183A3899695408599999699' ransaction.error
00014E18 7A406CA2404D6CA2                  29941          DC    X'7A406CA2404D6CA25D7A40979985A589' ...s...s...previ
00014E28 96A4A24085999996                  29942          DC    X'96A4A2408599999699404D6CA25D4081' ous.error...s..a
00014E38 9399858184A84099                  29943          DC    X'9399858184A840998189A28584006B40' lready.raised...
00014E48 998598A4899985A2                  29944          DC    X'998598A4899985A24085979683884082' requires.epoch.b
00014E58 A49497000000C3A4                  29945          DC    X'A49497000000C3A499998595A340A399' ump...Current.tr
00014E68 8195A28183A38996                  29946          DC    X'8195A28183A389969540868189938584' ansaction.failed
00014E78 40899540A2A381A3                  29947          DC    X'40899540A2A381A385406CA27A406CA2' .in.state..s...s
00014E88 404D6CA26CA25D00                  29948          DC    X'404D6CA26CA25D00A2858540979985A5' ...s.s..see.prev
00014E98 8996A4A240939687                  29949          DC    X'8996A4A240939687A200C681A3819340' ious.logs.Fatal.
00014EA8 8599999699409981                  29950          DC    X'859999969940998189A285844082A840' error.raised.by.
00014EB8 898485949796A385                  29951          DC    X'898485949796A38595A34097999684A4' idempotent.produ
00014EC8 83859940A6888993                  29952          DC    X'83859940A688899385409985A3998985' cer.while.retrie
00014ED8 A589958740D7C9C4                  29953          DC    X'A589958740D7C9C47A406CA20000C1C4' ving.PID...s..AD
00014EE8 C4D7C1D9E3E20000                  29954          DC    X'C4D7C1D9E3E200007F6C4B5CA27F40AD' DPARTS......s...
00014EF8 6C84BD4089A24095                  29955          DC    X'6C84BD4089A2409596A3408995409785' .d..is.not.in.pe
00014F08 9584899587409389                  29956          DC    X'9584899587409389A2A34082A4A34099' nding.list.but.r
00014F18 85A3A49995858440                  29957          DC    X'85A3A49995858440899540C18484D781' eturned.in.AddPa
00014F28 99A389A3899695A2                  29958          DC    X'99A389A3899695A2E396E3A795409985' rtitionsToTxn.re
00014F38 A2979695A2857A40                  29959          DC    X'A2979695A2857A408987959699899587' sponse..ignoring
00014F48 00006C4B5CA240AD                  29960          DC    X'00006C4B5CA240AD6C84BD4099858789' .....s...d..regi
00014F58 A2A38599858440A6                  29961          DC    X'A2A38599858440A689A38840A3998195' stered.with.tran
00014F68 A28183A389969500                  29962          DC    X'A28183A3899695004D9992A397606E99' saction..rktp..r
00014F78 92A3976D86938187                  29963          DC    X'92A3976D86938187A24050404DF0A7F1' ktp.flags....0x1
00014F88 F0F04F40F0A7F2F0                  29964          DC    X'F0F04F40F0A7F2F0F05D5D407E7E40F0' 00..0x200......0
00014F98 A7F1F0F000009992                  29965          DC    X'A7F1F0F000009992606E99926D8596A2' x100..rk..rk.eos
00014FA8 4BA3A7956DA2A381                  29966          DC    X'4BA3A7956DA2A381A385405A7E40D9C4' .txn.state....RD
00014FB8 6DD2C1C6D2C16DE3                  29967          DC    X'6DD2C1C6D2C16DE3E7D56DE2E3C1E3C5' .KAFKA.TXN.STATE
00014FC8 6DC3D6D4D4C9E3E3                  29968          DC    X'6DC3D6D4D4C9E3E3C9D5C76DE3D9C1D5' .COMMITTING.TRAN
00014FD8 E2C1C3E3C9D6D500                  29969          DC    X'E2C1C3E3C9D6D500C987959699899587' SACTION.Ignoring
00014FE8 4096A4A38481A385                  29970          DC    X'4096A4A38481A3858440C18484D78199' .outdated.AddPar
00014FF8 A389A3899695A2E3                  29971          DC    X'A389A3899695A2E396E3A795409985A2' titionsToTxn.res
00015008 979695A285408995                  29972          DC    X'979695A28540899540A2A381A385406C' ponse.in.state..
00015018 A20081A2A28599A3                  29973          DC    X'A20081A2A28599A37A40999282A48660' s.assert..rkbuf.
00015028 6E999282A4866D99                  29974          DC    X'6E999282A4866D99928200007A400000' .rkbuf.rkb......
00015038 8995839699998583                  29975          DC    X'8995839699998583A340829996928599' incorrect.broker
00015048 4BA58599A2899695                  29976          DC    X'4BA58599A28996954B86819393828183' .version.fallbac
00015058 926F0000D7D9D6E3                  29977          DC    X'926F0000D7D9D6E3D6E4C6D3D6E60000' k...PROTOUFLOW..
00015068 D79996A396839693                  29978          DC    X'D79996A39683969340998581844082A4' Protocol.read.bu
00015078 8686859940A49584                  29979          DC    X'8686859940A495848599869396A64086' ffer.underflow.f
00015088 9699406CA240A56C                  29980          DC    X'9699406CA240A56C88844081A3406CA9' or..s.v.hd.at..z
00015098 A4616CA9A4404D6C                  29981          DC    X'A4616CA9A4404D6CA27A6C895D7A4085' u..zu...s..i...e
000150A8 A7978583A3858440                  29982          DC    X'A7978583A38584406CA9A44082A8A385' xpected..zu.byte
000150B8 A2406E406CA9A440                  29983          DC    X'A2406E406CA9A4409985948189958995' s....zu.remainin
000150C8 874082A8A385A240                  29984          DC    X'874082A8A385A2404D6CA25D6CA20000' g.bytes...s..s..
                                                                                                                           Page  593 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000150D8 7A40A4A581998995                  29985          DC    X'7A40A4A581998995A340978199A28995' ..uvarint.parsin
000150E8 8740868189938584                  29986          DC    X'87408681899385840000E495929596A6' g.failed..Unknow
000150F8 9540978199A389A3                  29987          DC    X'9540978199A389A3899695407F6C4B5C' n.partition.....
00015108 A27F40AD6C84BD40                  29988          DC    X'A27F40AD6C84BD40899540C18484D781' s....d..in.AddPa
00015118 99A389A3899695A2                  29989          DC    X'99A389A3899695A2E396E3A795409985' rtitionsToTxn.re
00015128 A2979695A2857A40                  29990          DC    X'A2979695A2857A408987959699899587' sponse..ignoring
00015138 0000C18484D78199                  29991          DC    X'0000C18484D78199A389A3899695A2E3' ..AddPartitionsT
00015148 96E3A795409985A2                  29992          DC    X'96E3A795409985A2979695A2857A4097' oTxn.response..p
00015158 8199A389A3899695                  29993          DC    X'8199A389A3899695407F6C4B5CA27F7A' artition.....s..
00015168 40AD6C84BD7A406C                  29994          DC    X'40AD6C84BD7A406CA200C68189938584' ...d....s.Failed
00015178 40A3964081848440                  29995          DC    X'40A3964081848440978199A389A38996' .to.add.partitio
00015188 95407F6C4B5CA27F                  29996          DC    X'95407F6C4B5CA27F40AD6C84BD40A396' n.....s....d..to
00015198 40A3998195A28183                  29997          DC    X'40A3998195A28183A38996957A406CA2' .transaction...s
000151A8 00009992606E9992                  29998          DC    X'00009992606E99926D8596A24BA3A795' ..rk..rk.eos.txn
000151B8 6D9985986D8395A3                  29999          DC    X'6D9985986D8395A3406E40F00000C184' .req.cnt...0..Ad
000151C8 84D78199A389A389                  30000          DC    X'84D78199A389A3899695A2E396E3A795' dPartitionsToTxn
000151D8 408681899385847A                  30001          DC    X'408681899385847A406CA200C6818993' .failed...s.Fail
000151E8 858440A396408184                  30002          DC    X'858440A3964081848440978199A389A3' ed.to.add.partit
000151F8 899695A240A39640                  30003          DC    X'899695A240A39640A3998195A28183A3' ions.to.transact
00015208 8996957A406CA200                  30004          DC    X'8996957A406CA200C6818993858440A3' ion...s.Failed.t
00015218 9640818484409781                  30005          DC    X'964081848440978199A389A38996954D' o.add.partition.
00015228 A25D40A39640A399                  30006          DC    X'A25D40A39640A3998195A28183A38996' s..to.transactio
00015238 9540969540829996                  30007          DC    X'9540969540829996928599406CA27A40' n.on.broker..s..
00015248 6CA2404D8186A385                  30008          DC    X'6CA2404D8186A38599406C844094A25D' .s..after..d.ms.
00015258 0000D596A3409985                  30009          DC    X'0000D596A34099858789A2A385998995' ..Not.registerin
00015268 8740978199A389A3                  30010          DC    X'8740978199A389A3899695A27A406CA2' g.partitions...s
00015278 0000D596A3409985                  30011          DC    X'0000D596A34099858789A2A385998995' ..Not.registerin
00015288 8740978199A389A3                  30012          DC    X'8740978199A389A3899695A27A408396' g.partitions..co
00015298 969984899581A396                  30013          DC    X'969984899581A396994089A2409596A3' ordinator.is.not
000152A8 4081A58189938182                  30014          DC    X'4081A5818993818293850000D596A340' .available..Not.
000152B8 99858789A2A38599                  30015          DC    X'99858789A2A3859989958740978199A3' registering.part
000152C8 89A3899695A27A40                  30016          DC    X'89A3899695A27A40A68189A389958740' itions..waiting.
000152D8 86969940979985A5                  30017          DC    X'86969940979985A58996A4A240C18484' for.previous.Add
000152E8 D78199A389A38996                  30018          DC    X'D78199A389A3899695A2E396E3A79540' PartitionsToTxn.
000152F8 998598A485A2A340                  30019          DC    X'998598A485A2A340A396408396949793' request.to.compl
00015308 85A38500D596A340                  30020          DC    X'85A38500D596A34099858789A2A38599' ete.Not.register
00015318 89958740978199A3                  30021          DC    X'89958740978199A389A3899695A27A40' ing.partitions..
00015328 D59640D7C9C44081                  30022          DC    X'D59640D7C9C44081A581899381829385' No.PID.available
00015338 404D898485949796                  30023          DC    X'404D898485949796A38595838540A2A3' ..idempotence.st
00015348 81A385406CA25D00                  30024          DC    X'81A385406CA25D00D9858789A2A38599' ate..s..Register
00015358 89958740978199A3                  30025          DC    X'89958740978199A389A3899695A240A6' ing.partitions.w
00015368 89A38840A3998195                  30026          DC    X'89A38840A3998195A28183A389969500' ith.transaction.
00015378 E3998195A28183A3                  30027          DC    X'E3998195A28183A3899695819340C1D7' Transactional.AP
00015388 C9409697859981A3                  30028          DC    X'C9409697859981A3899695404D6CA25D' I.operation...s.
00015398 40A3899485844096                  30029          DC    X'40A3899485844096A4A30000E3998195' .timed.out..Tran
000153A8 A28183A389969581                  30030          DC    X'A28183A38996958193409697859981A3' sactional.operat
000153B8 89969540A3899485                  30031          DC    X'89969540A3899485844096A4A300C681' ion.timed.out.Fa
000153C8 8993858440A39640                  30032          DC    X'8993858440A39640899589A389819389' iled.to.initiali
000153D8 A98540D7999684A4                  30033          DC    X'A98540D7999684A483859940C9C47A40' ze.Producer.ID..
000153E8 6CA2000099846D92                  30034          DC    X'6CA2000099846D92818692816D00E3E7' .s..rd.kafka..TX
000153F8 D5C1D7C90000E399                  30035          DC    X'D5C1D7C90000E3998195A28183A38996' NAPI..Transactio
00015408 95819340C1D7C940                  30036          DC    X'95819340C1D7C9408381939385847A40' nal.API.called..
                                                                                                                           Page  594 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00015418 6CA2404D899540A3                  30037          DC    X'6CA2404D899540A3A79540A2A381A385' .s..in.txn.state
00015428 406CA26B40898485                  30038          DC    X'406CA26B40898485949740A2A381A385' ..s..idemp.state
00015438 406CA25D0000C396                  30039          DC    X'406CA25D0000C3969586938983A38995' ..s...Conflictin
00015448 87406CA240838193                  30040          DC    X'87406CA2408381939340819399858184' g..s.call.alread
00015458 A840899540979996                  30041          DC    X'A840899540979996879985A2A2008696' y.in.progress.fo
00015468 996D9985A4A28540                  30042          DC    X'996D9985A4A285407E7E409985A4A285' r.reuse....reuse
00015478 0000899589A36DA3                  30043          DC    X'0000899589A36DA3998195A28183A389' ..init.transacti
00015488 9695A2004D4D4D50                  30044          DC    X'9695A2004D4D4D509992606E99926D85' ons.....rk..rk.e
00015498 96A24BA3A7956D99                  30045          DC    X'96A24BA3A7956D9992A397A25D606EA3' os.txn.rktps...t
000154A8 98886D868999A2A3                  30046          DC    X'98886D868999A2A35D407E7E404D4D4D' qh.first........
000154B8 A5968984405C5DF0                  30047          DC    X'A5968984405C5DF05D5D5D009992606E' void...0....rk..
000154C8 99926D8596A24BA3                  30048          DC    X'99926D8596A24BA3A7956D9985986D83' rk.eos.txn.req.c
000154D8 95A3407E7E40F000                  30049          DC    X'95A3407E7E40F000C6818993858440A3' nt....0.Failed.t
000154E8 96408396949489A3                  30050          DC    X'96408396949489A340968686A285A3A2' o.commit.offsets
000154F8 40A39640A3998195                  30051          DC    X'40A39640A3998195A28183A389969540' .to.transaction.
00015508 9695408299969285                  30052          DC    X'969540829996928599406CA27A406CA2' on.broker..s...s
00015518 404D8186A3859940                  30053          DC    X'404D8186A38599406C8494A25D004D95' ..after..dms...n
00015528 9695855D0000C681                  30054          DC    X'9695855D0000C6818993858440A39640' one...Failed.to.
00015538 8396949489A34096                  30055          DC    X'8396949489A340968686A285A3A240A3' commit.offsets.t
00015548 9640A3998195A281                  30056          DC    X'9640A3998195A28183A3899695409695' o.transaction.on
00015558 4082999692859940                  30057          DC    X'40829996928599406CA27A406CA2404D' .broker..s...s..
00015568 8186A38599406C84                  30058          DC    X'8186A38599406C844094A25D0000C1C4' after..d.ms...AD
00015578 C4D6C6C6E2C5E3E2                  30059          DC    X'C4D6C6C6E2C5E3E20000C18484D68686' DOFFSETS..AddOff
00015588 A285A3A2E396E3A7                  30060          DC    X'A285A3A2E396E3A795409985A2979695' setsToTxn.respon
00015598 A285408699969440                  30061          DC    X'A2854086999694406CA27A406CA2404D' se.from..s...s..
000155A8 8183A3899695A240                  30062          DC    X'8183A3899695A240F0A76CA75D00C681' actions.0x.x..Fa
000155B8 8993858440A39640                  30063          DC    X'8993858440A3964081848440968686A2' iled.to.add.offs
000155C8 85A3A240A39640A3                  30064          DC    X'85A3A240A39640A3998195A28183A389' ets.to.transacti
000155D8 96957A406CA20000                  30065          DC    X'96957A406CA20000C6818993858440A3' on...s..Failed.t
000155E8 9640818484409686                  30066          DC    X'964081848440968686A285A3A240A396' o.add.offsets.to
000155F8 40A3998195A28183                  30067          DC    X'40A3998195A28183A389969540969540' .transaction.on.
00015608 829996928599406C                  30068          DC    X'829996928599406CA27A406CA2404D81' broker..s...s..a
00015618 86A38599406C8494                  30069          DC    X'86A38599406C8494A25D7A4085999996' fter..dms...erro
00015628 994089A2409985A3                  30070          DC    X'994089A2409985A39989818293850000' r.is.retriable..
00015638 C6818993858440A3                  30071          DC    X'C6818993858440A39640818484409686' Failed.to.add.of
00015648 86A285A3A240A396                  30072          DC    X'86A285A3A240A39640A3998195A28183' fsets.to.transac
00015658 A389969540969540                  30073          DC    X'A389969540969540829996928599406C' tion.on.broker..
00015668 A27A406CA200C681                  30074          DC    X'A27A406CA200C6818993858440A39640' s...s.Failed.to.
00015678 81848440968686A2                  30075          DC    X'81848440968686A285A3A240A39640A3' add.offsets.to.t
00015688 998195A28183A389                  30076          DC    X'998195A28183A3899695409695408299' ransaction.on.br
00015698 96928599406CA27A                  30077          DC    X'96928599406CA27A406CA2404D8186A3' oker..s...s..aft
000156A8 8599406C8494A25D                  30078          DC    X'8599406C8494A25D0000D59640D7C9C4' er..dms...No.PID
000156B8 4081A58189938182                  30079          DC    X'4081A581899381829385404D89848594' .available..idem
000156C8 9796A38595838540                  30080          DC    X'9796A38595838540A2A381A385406CA2' potence.state..s
000156D8 5D0083879485A381                  30081          DC    X'5D0083879485A3818481A38140819584' ..cgmetadata.and
000156E8 40968686A285A3A2                  30082          DC    X'40968686A285A3A24081998540998598' .offsets.are.req
000156F8 A489998584409781                  30083          DC    X'A48999858440978199819485A38599A2' uired.parameters
00015708 00008396949489A3                  30084          DC    X'00008396949489A3A385840081829699' ..committed.abor
00015718 A3858400E3E7D5C3                  30085          DC    X'A3858400E3E7D5C3D6D4D7D3C5E3C500' ted.TXNCOMPLETE.
00015728 E3998195A28183A3                  30086          DC    X'E3998195A28183A389969540A2A48383' Transaction.succ
00015738 85A2A286A49393A8                  30087          DC    X'85A2A286A49393A8406CA200C59584E3' essfully..s.EndT
00015748 A795408681899385                  30088          DC    X'A7954086818993858440A689A388406C' xn.failed.with..
                                                                                                                           Page  595 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00015758 A24082A4A340A399                  30089          DC    X'A24082A4A340A3998195A28183A38996' s.but.transactio
00015768 9540888184408193                  30090          DC    X'954088818440819399858184A8408681' n.had.already.fa
00015778 899385844084A485                  30091          DC    X'899385844084A48540A3967A406CA200' iled.due.to...s.
00015788 E3998195A28183A3                  30092          DC    X'E3998195A28183A38996954083969494' Transaction.comm
00015798 89A340A2A4838385                  30093          DC    X'89A340A2A48383858584858440969540' it.succeeded.on.
000157A8 A388854082999692                  30094          DC    X'A38885408299969285994082A4A340A3' the.broker.but.t
000157B8 888540A3998195A2                  30095          DC    X'888540A3998195A28183A38996954088' he.transaction.h
000157C8 8184408193998581                  30096          DC    X'818440819399858184A8408681899385' ad.already.faile
000157D8 8440939683819393                  30097          DC    X'8440939683819393A84084A48540A396' d.locally.due.to
000157E8 7A406CA20000E399                  30098          DC    X'7A406CA20000E3998195A28183A38996' ...s..Transactio
000157F8 954081829699A340                  30099          DC    X'954081829699A340A2A4838385858485' n.abort.succeede
00015808 8440969540A38885                  30100          DC    X'8440969540A388854082999692859940' d.on.the.broker.
00015818 82A4A340A3888540                  30101          DC    X'82A4A340A3888540A3998195A28183A3' but.the.transact
00015828 8996958881844081                  30102          DC    X'89969588818440819399858184A84086' ionhad.already.f
00015838 8189938584409396                  30103          DC    X'818993858440939683819393A84084A4' ailed.locally.du
00015848 8540A3967A406CA2                  30104          DC    X'8540A3967A406CA20000A399A4850000' e.to...s..true..
00015858 868193A28500C5D5                  30105          DC    X'868193A28500C5D5C4E3E7D50000C595' false.ENDTXN..En
00015868 84E3A795409985A3                  30106          DC    X'84E3A795409985A3A499958584406CA2' dTxn.returned..s
00015878 40899540A2A381A3                  30107          DC    X'40899540A2A381A385406CA2404D9481' .in.state..s..ma
00015888 A86D9985A399A87E                  30108          DC    X'A86D9985A399A87E6CA25D00C59584E3' y.retry..s..EndT
00015898 A795408681899385                  30109          DC    X'A795408681899385847A406CA200C681' xn.failed...s.Fa
000158A8 8993858440A39640                  30110          DC    X'8993858440A3964085958440A3998195' iled.to.end.tran
000158B8 A28183A38996957A                  30111          DC    X'A28183A38996957A406CA20083969494' saction...s.comm
000158C8 89A3000081829699                  30112          DC    X'89A3000081829699A300C59584E3A795' it..abort.EndTxn
000158D8 406CA24086818993                  30113          DC    X'406CA2408681899385847A406CA20000' ..s.failed...s..
000158E8 6C939384409485A2                  30114          DC    X'6C939384409485A2A28187854DA25D40' .lld.message.s..
000158F8 8681899385844084                  30115          DC    X'8681899385844084859389A58599A840' failed.delivery.
00015908 4DA2858540899584                  30116          DC    X'4DA285854089958489A58984A4819340' .see.individual.
00015918 84859389A58599A8                  30117          DC    X'84859389A58599A8409985979699A3A2' delivery.reports
00015928 5D00E3E7D5C3D6D4                  30118          DC    X'5D00E3E7D5C3D6D4D4C9E300D5964097' ..TXNCOMMIT.No.p
00015938 8199A389A3899695                  30119          DC    X'8199A389A3899695A24099858789A2A3' artitions.regist
00015948 859985847A409596                  30120          DC    X'859985847A409596A340A28595848995' ered..not.sendin
00015958 8740C59584E3A795                  30121          DC    X'8740C59584E3A7950000C396949489A3' g.EndTxn..Commit
00015968 A3858440A3998195                  30122          DC    X'A3858440A3998195A28183A389969540' ted.transaction.
00015978 9596A64081839285                  30123          DC    X'9596A64081839285844082A840819797' now.acked.by.app
00015988 93898381A3899695                  30124          DC    X'93898381A389969500008396949489A3' lication..commit
00015998 6DA3998195A28183                  30125          DC    X'6DA3998195A28183A3899695404D8285' .transaction..be
000159A8 8789955D0000C693                  30126          DC    X'8789955D0000C693A4A288899587406C' gin...Flushing..
000159B8 844096A4A3A2A381                  30127          DC    X'844096A4A3A2A3819584899587409485' d.outstanding.me
000159C8 A2A28187854DA25D                  30128          DC    X'A2A28187854DA25D40979989969940A3' ssage.s..prior.t
000159D8 96408396949489A3                  30129          DC    X'96408396949489A30000C693A4A28840' o.commit..Flush.
000159E8 868189938584404D                  30130          DC    X'868189938584404DA689A388406C8440' failed..with..d.
000159F8 9485A2A2818785A2                  30131          DC    X'9485A2A2818785A24099859481899589' messages.remaini
00015A08 95875D7A406CA200                  30132          DC    X'95875D7A406CA2007A40A388854085A5' ng....s...the.ev
00015A18 8595A34098A485A4                  30133          DC    X'8595A34098A485A4854094A4A2A34082' ent.queue.must.b
00015A28 8540979693938584                  30134          DC    X'85409796939385844086969940848593' e.polled.for.del
00015A38 89A58599A8409985                  30135          DC    X'89A58599A8409985979699A34085A585' ivery.report.eve
00015A48 95A3A24089954081                  30136          DC    X'95A3A2408995408140A28597819981A3' nts.in.a.separat
00015A58 8540A38899858184                  30137          DC    X'8540A388998581844096994097998996' e.thread.or.prio
00015A68 9940A39640838193                  30138          DC    X'9940A396408381939389958740839694' r.to.calling.com
00015A78 9489A300C6818993                  30139          DC    X'9489A300C6818993858440A396408693' mit.Failed.to.fl
00015A88 A4A2884081939340                  30140          DC    X'A4A288408193934096A4A3A2A3819584' ush.all.outstand
                                                                                                                           Page  596 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00015A98 899587409485A2A2                  30141          DC    X'899587409485A2A2818785A240A689A3' ing.messages.wit
00015AA8 88899540A3888540                  30142          DC    X'88899540A3888540A3998195A28183A3' hin.the.transact
00015AB8 89969540A3899485                  30143          DC    X'89969540A389948596A4A37A406C8440' ion.timeout...d.
00015AC8 9485A2A28187854D                  30144          DC    X'9485A2A28187854DA25D409985948189' message.s..remai
00015AD8 958995876CA20000                  30145          DC    X'958995876CA20000C6818993858440A3' ning.s..Failed.t
00015AE8 96408693A4A28840                  30146          DC    X'96408693A4A2884096A4A3A2A3819584' o.flush.outstand
00015AF8 899587409485A2A2                  30147          DC    X'899587409485A2A2818785A27A406CA2' ing.messages...s
00015B08 0000E3998195A281                  30148          DC    X'0000E3998195A28183A3899695408396' ..Transaction.co
00015B18 949489A3409485A2                  30149          DC    X'949489A3409485A2A2818785408693A4' mmit.message.flu
00015B28 A288408396949793                  30150          DC    X'A28840839694979385A3850083969494' sh.complete.comm
00015B38 89A36DA3998195A2                  30151          DC    X'89A36DA3998195A28183A38996950000' it.transaction..
00015B48 8396949489A36DA3                  30152          DC    X'8396949489A36DA3998195A28183A389' commit.transacti
00015B58 9695404D8183925D                  30153          DC    X'9695404D8183925D0000E3E7D5C1C2D6' on..ack...TXNABO
00015B68 D9E30000D7C9C440                  30154          DC    X'D9E30000D7C9C440819399858184A840' RT..PID.already.
00015B78 82A4949785840000                  30155          DC    X'82A4949785840000E68189A389958740' bumped..Waiting.
00015B88 86969940A3998195                  30156          DC    X'86969940A3998195A28183A389969540' for.transaction.
00015B98 8396969984899581                  30157          DC    X'8396969984899581A3969940D7C9C440' coordinator.PID.
00015BA8 82A4949740A39640                  30158          DC    X'82A4949740A39640839694979385A385' bump.to.complete
00015BB8 4082858696998540                  30159          DC    X'408285869699854081829699A3899587' .before.aborting
00015BC8 40A3998195A28183                  30160          DC    X'40A3998195A28183A3899695404D8984' .transaction..id
00015BD8 85949796A38595A3                  30161          DC    X'85949796A38595A34097999684A48385' empotent.produce
00015BE8 9940A2A381A38540                  30162          DC    X'9940A2A381A385406CA25D00C1829699' r.state..s..Abor
00015BF8 A3858440A3998195                  30163          DC    X'A3858440A3998195A28183A389969540' ted.transaction.
00015C08 9596A64081839285                  30164          DC    X'9596A64081839285844082A840819797' now.acked.by.app
00015C18 93898381A3899695                  30165          DC    X'93898381A3899695000081829699A36D' lication..abort.
00015C28 A3998195A28183A3                  30166          DC    X'A3998195A28183A3899695404D828587' transaction..beg
00015C38 89955D00D7A49987                  30167          DC    X'89955D00D7A499878995874081958440' in..Purging.and.
00015C48 8693A4A288899587                  30168          DC    X'8693A4A288899587406C844096A4A3A2' flushing..d.outs
00015C58 A381958489958740                  30169          DC    X'A3819584899587409485A2A28187854D' tanding.message.
00015C68 A25D409799899699                  30170          DC    X'A25D40979989969940A3964081829699' s..prior.to.abor
00015C78 A3007A40A3888540                  30171          DC    X'A3007A40A388854085A58595A34098A4' t...the.event.qu
00015C88 85A4854094A4A2A3                  30172          DC    X'85A4854094A4A2A34082854097969393' eue.must.be.poll
00015C98 8584408696994084                  30173          DC    X'8584408696994084859389A58599A840' ed.for.delivery.
00015CA8 9985979699A34085                  30174          DC    X'9985979699A34085A58595A3A2408995' report.events.in
00015CB8 408140A285978199                  30175          DC    X'408140A28597819981A38540A3889985' .a.separate.thre
00015CC8 8184409699409799                  30176          DC    X'818440969940979989969940A3964083' ad.or.prior.to.c
00015CD8 8193938995874081                  30177          DC    X'8193938995874081829699A30000E399' alling.abort..Tr
00015CE8 8195A28183A38996                  30178          DC    X'8195A28183A38996954081829699A340' ansaction.abort.
00015CF8 9485A2A281878540                  30179          DC    X'9485A2A28187854097A4998785408195' message.purge.an
00015D08 84408693A4A28840                  30180          DC    X'84408693A4A28840839694979385A385' d.flush.complete
00015D18 000081829699A36D                  30181          DC    X'000081829699A36DA3998195A28183A3' ..abort.transact
00015D28 8996950081829699                  30182          DC    X'8996950081829699A36DA3998195A281' ion.abort.transa
00015D38 83A3899695404D81                  30183          DC    X'83A3899695404D8183925D00C3969699' ction..ack..Coor
00015D48 84899581A3969940                  30184          DC    X'84899581A396994098A48599A840A389' dinator.query.ti
00015D58 948599004D4D9992                  30185          DC    X'948599004D4D99925D606E99926D8396' mer...rk...rk.co
00015D68 95864B8596A24BA3                  30186          DC    X'95864B8596A24BA3998195A28183A389' nf.eos.transacti
00015D78 969581936D898440                  30187          DC    X'969581936D8984405A7E404D4DA59689' onal.id......voi
00015D88 84405C5DF05D5D00                  30188          DC    X'84405C5DF05D5D006C4B5CA20000E3E7' d...0......s..TX
00015D98 D5C3D6D6D9C40000                  30189          DC    X'D5C3D6D6D9C40000C6899584C3969699' NCOORD..FindCoor
00015DA8 84899581A3969940                  30190          DC    X'84899581A39699409985A2979695A285' dinator.response
00015DB8 7A40E3998195A281                  30191          DC    X'7A40E3998195A28183A3899695408396' ..Transaction.co
00015DC8 969984899581A396                  30192          DC    X'969984899581A396994089A240829996' ordinator.is.bro
                                                                                                                           Page  597 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00015DD8 928599406C84404D                  30193          DC    X'928599406C84404D6C4B5CA27A6C845D' ker..d.....s..d.
00015DE8 0000E3998195A281                  30194          DC    X'0000E3998195A28183A3899695408396' ..Transaction.co
00015DF8 969984899581A396                  30195          DC    X'969984899581A39699406C844089A240' ordinator..d.is.
00015E08 A495929596A69500                  30196          DC    X'A495929596A69500C6899584C3969699' unknown.FindCoor
00015E18 84899581A3969940                  30197          DC    X'84899581A39699409985A2979695A285' dinator.response
00015E28 0000C68189938584                  30198          DC    X'0000C6818993858440A3964086899584' ..Failed.to.find
00015E38 40A3998195A28183                  30199          DC    X'40A3998195A28183A389969540839696' .transaction.coo
00015E48 9984899581A39699                  30200          DC    X'9984899581A396997A406CA27A406CA2' rdinator...s...s
00015E58 6CA26CA20000C681                  30201          DC    X'6CA26CA20000C6818993858440A39640' .s.s..Failed.to.
00015E68 8689958440A39981                  30202          DC    X'8689958440A3998195A28183A3899695' find.transaction
00015E78 4083969699848995                  30203          DC    X'408396969984899581A396997A406CA2' .coordinator...s
00015E88 7A406CA20000D596                  30204          DC    X'7A406CA20000D596A340A28595848995' ...s..Not.sendin
00015E98 8740839696998489                  30205          DC    X'87408396969984899581A396994098A4' g.coordinator.qu
00015EA8 8599A8404D6CA25D                  30206          DC    X'8599A8404D6CA25D7A40A68189A38995' ery...s...waitin
00015EB8 8740869699409799                  30207          DC    X'874086969940979985A58996A4A24098' g.for.previous.q
00015EC8 A48599A840A39640                  30208          DC    X'A48599A840A3964086899589A2880000' uery.to.finish..
00015ED8 E4958182938540A3                  30209          DC    X'E4958182938540A3964098A48599A840' Unable.to.query.
00015EE8 86969940A3998195                  30210          DC    X'86969940A3998195A28183A389969540' for.transaction.
00015EF8 8396969984899581                  30211          DC    X'8396969984899581A396997A406CA27A' coordinator...s.
00015F08 406CA200D8A48599                  30212          DC    X'406CA200D8A48599A889958740869699' ..s.Querying.for
00015F18 40A3998195A28183                  30213          DC    X'40A3998195A28183A389969540839696' .transaction.coo
00015F28 9984899581A39699                  30214          DC    X'9984899581A396997A406CA20000C681' rdinator...s..Fa
00015F38 8993858440A39640                  30215          DC    X'8993858440A39640A285958440839696' iled.to.send.coo
00015F48 9984899581A39699                  30216          DC    X'9984899581A396994098A48599A840A3' rdinator.query.t
00015F58 96406CA27A406CA2                  30217          DC    X'96406CA27A406CA20000E3998195A281' o..s...s..Transa
00015F68 83A3899695408396                  30218          DC    X'83A3899695408396969984899581A396' ction.coordinato
00015F78 9940838881958785                  30219          DC    X'9940838881958785844086999694406C' r.changed.from..
00015F88 A240606E406CA27A                  30220          DC    X'A240606E406CA27A406CA2009992606E' s.....s...s.rk..
00015F98 99926D8596A24BA3                  30221          DC    X'99926D8596A24BA3A7956D8396969984' rk.eos.txn.coord
00015FA8 407E7E4099928200                  30222          DC    X'407E7E4099928200A49700008496A695' ....rkb.up..down
00015FB8 0000C3D6D6D9C400                  30223          DC    X'0000C3D6D6D9C400E3998195A28183A3' ..COORD.Transact
00015FC8 8996954083969699                  30224          DC    X'899695408396969984899581A3969940' ion.coordinator.
00015FD8 89A2409596A6406C                  30225          DC    X'89A2409596A6406CA200E3A795C39696' is.now..s.TxnCoo
00015FE8 9984899581A39699                  30226          DC    X'9984899581A396990000D7999684A483' rdinator..Produc
00015FF8 8500C685A3838800                  30227          DC    X'8500C685A3838800D68686A285A30000' e.Fetch.Offset..
00016008 D485A3818481A381                  30228          DC    X'D485A3818481A3810000D38581848599' Metadata..Leader
00016018 C19584C9A2990000                  30229          DC    X'C19584C9A2990000E2A39697D9859793' AndIsr..StopRepl
00016028 89838100E4978481                  30230          DC    X'89838100E4978481A385D485A3818481' ica.UpdateMetada
00016038 A3810000C39695A3                  30231          DC    X'A3810000C39695A3999693938584E288' ta..ControlledSh
00016048 A4A38496A6950000                  30232          DC    X'A4A38496A6950000D68686A285A3C396' utdown..OffsetCo
00016058 949489A30000D686                  30233          DC    X'949489A30000D68686A285A3C685A383' mmit..OffsetFetc
00016068 8800C6899584C396                  30234          DC    X'8800C6899584C396969984899581A396' h.FindCoordinato
00016078 9900D1968995C799                  30235          DC    X'9900D1968995C79996A49700C8858199' r.JoinGroup.Hear
00016088 A3828581A300D385                  30236          DC    X'A3828581A300D38581A585C79996A497' tbeat.LeaveGroup
00016098 0000E2A89583C799                  30237          DC    X'0000E2A89583C79996A49700C485A283' ..SyncGroup.Desc
000160A8 99898285C79996A4                  30238          DC    X'99898285C79996A497A20000D389A2A3' ribeGroups..List
000160B8 C79996A497A20000                  30239          DC    X'C79996A497A20000E281A293C8819584' Groups..SaslHand
000160C8 A28881928500C197                  30240          DC    X'A28881928500C19789E58599A2899695' shake.ApiVersion
000160D8 0000C3998581A385                  30241          DC    X'0000C3998581A385E396978983A20000' ..CreateTopics..
000160E8 C4859385A385E396                  30242          DC    X'C4859385A385E396978983A20000C485' DeleteTopics..De
000160F8 9385A385D9858396                  30243          DC    X'9385A385D98583969984A200C99589A3' leteRecords.Init
00016108 D7999684A4838599                  30244          DC    X'D7999684A4838599C9840000D68686A2' ProducerId..Offs
                                                                                                                           Page  598 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016118 85A3C69699D38581                  30245          DC    X'85A3C69699D38581848599C597968388' etForLeaderEpoch
00016128 0000C18484D78199                  30246          DC    X'0000C18484D78199A389A3899695A2E3' ..AddPartitionsT
00016138 96E3A7950000C184                  30247          DC    X'96E3A7950000C18484D68686A285A3A2' oTxn..AddOffsets
00016148 E396E3A79500C595                  30248          DC    X'E396E3A79500C59584E3A7950000E699' ToTxn.EndTxn..Wr
00016158 89A385E3A795D481                  30249          DC    X'89A385E3A795D48199928599A200E3A7' iteTxnMarkers.Tx
00016168 95D68686A285A3C3                  30250          DC    X'95D68686A285A3C396949489A300C485' nOffsetCommit.De
00016178 A28399898285C183                  30251          DC    X'A28399898285C18393A20000C3998581' scribeAcls..Crea
00016188 A385C18393A20000                  30252          DC    X'A385C18393A20000C4859385A385C183' teAcls..DeleteAc
00016198 93A20000C485A283                  30253          DC    X'93A20000C485A28399898285C3969586' ls..DescribeConf
000161A8 8987A200C193A385                  30254          DC    X'8987A200C193A38599C39695868987A2' igs.AlterConfigs
000161B8 0000C193A38599D9                  30255          DC    X'0000C193A38599D9859793898381D396' ..AlterReplicaLo
000161C8 87C48999A200C485                  30256          DC    X'87C48999A200C485A28399898285D396' gDirs.DescribeLo
000161D8 87C48999A200E281                  30257          DC    X'87C48999A200E281A293C1A4A3888595' gDirs.SaslAuthen
000161E8 A3898381A3850000                  30258          DC    X'A3898381A3850000C3998581A385D781' ticate..CreatePa
000161F8 99A389A3899695A2                  30259          DC    X'99A389A3899695A20000C3998581A385' rtitions..Create
00016208 C48593858781A389                  30260          DC    X'C48593858781A3899695E39692859500' DelegationToken.
00016218 D9859585A6C48593                  30261          DC    X'D9859585A6C48593858781A3899695E3' RenewDelegationT
00016228 969285950000C5A7                  30262          DC    X'969285950000C5A797899985C4859385' oken..ExpireDele
00016238 8781A3899695E396                  30263          DC    X'8781A3899695E39692859500C485A283' gationToken.Desc
00016248 99898285C4859385                  30264          DC    X'99898285C48593858781A3899695E396' ribeDelegationTo
00016258 92859500C4859385                  30265          DC    X'92859500C4859385A385C79996A497A2' ken.DeleteGroups
00016268 0000C5938583A3D3                  30266          DC    X'0000C5938583A3D38581848599A2D985' ..ElectLeadersRe
00016278 98A485A2A300C995                  30267          DC    X'98A485A2A300C995839985948595A381' quest.Incrementa
00016288 93C193A38599C396                  30268          DC    X'93C193A38599C39695868987A2D98598' lAlterConfigsReq
00016298 A485A2A30000C193                  30269          DC    X'A485A2A30000C193A38599D78199A389' uest..AlterParti
000162A8 A3899695D98581A2                  30270          DC    X'A3899695D98581A2A2898795948595A3' tionReassignment
000162B8 A2D98598A485A2A3                  30271          DC    X'A2D98598A485A2A30000D389A2A3D781' sRequest..ListPa
000162C8 99A389A3899695D9                  30272          DC    X'99A389A3899695D98581A2A289879594' rtitionReassignm
000162D8 8595A3A2D98598A4                  30273          DC    X'8595A3A2D98598A485A2A300D68686A2' entsRequest.Offs
000162E8 85A3C4859385A385                  30274          DC    X'85A3C4859385A385D98598A485A2A300' etDeleteRequest.
000162F8 C485A28399898285                  30275          DC    X'C485A28399898285C393898595A3D8A4' DescribeClientQu
00016308 96A381A2D98598A4                  30276          DC    X'96A381A2D98598A485A2A300C193A385' otasRequest.Alte
00016318 99C393898595A3D8                  30277          DC    X'99C393898595A3D8A496A381A2D98598' rClientQuotasReq
00016328 A485A2A30000C485                  30278          DC    X'A485A2A30000C485A28399898285E4A2' uest..DescribeUs
00016338 8599E283998194C3                  30279          DC    X'8599E283998194C39985848595A38981' erScramCredentia
00016348 93A2D98598A485A2                  30280          DC    X'93A2D98598A485A2A300C193A38599E4' lsRequest.AlterU
00016358 A28599E283998194                  30281          DC    X'A28599E283998194C39985848595A389' serScramCredenti
00016368 8193A2D98598A485                  30282          DC    X'8193A2D98598A485A2A30000E596A385' alsRequest..Vote
00016378 D98598A485A2A300                  30283          DC    X'D98598A485A2A300C285878995D8A496' Request.BeginQuo
00016388 99A494C597968388                  30284          DC    X'99A494C597968388D98598A485A2A300' rumEpochRequest.
00016398 C59584D8A49699A4                  30285          DC    X'C59584D8A49699A494C597968388D985' EndQuorumEpochRe
000163A8 98A485A2A300C485                  30286          DC    X'98A485A2A300C485A28399898285D8A4' quest.DescribeQu
000163B8 9699A494D98598A4                  30287          DC    X'9699A494D98598A485A2A300C193A385' orumRequest.Alte
000163C8 99C9A299D98598A4                  30288          DC    X'99C9A299D98598A485A2A300E4978481' rIsrRequest.Upda
000163D8 A385C68581A3A499                  30289          DC    X'A385C68581A3A49985A2D98598A485A2' teFeaturesReques
000163E8 A300C595A5859396                  30290          DC    X'A300C595A58593969785D98598A485A2' t.EnvelopeReques
000163F8 A300959695850000                  30291          DC    X'A30095969585000087A989970000A295' t.none..gzip..sn
00016408 819797A8000093A9                  30292          DC    X'819797A8000093A9F400A9A2A3840000' appy..lz4.zstd..
00016418 899588859989A300                  30293          DC    X'899588859989A300839695868987A499' inherit.configur
00016428 8584000093858199                  30294          DC    X'8584000093858199958584008995A385' ed..learned.inte
00016438 9995819300009396                  30295          DC    X'9995819300009396878983819300C995' rnal..logical.In
00016448 89A30000E3859994                  30296          DC    X'89A30000E3859994899581A38500C681' it..Terminate.Fa
                                                                                                                           Page  599 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016458 A38193C599999699                  30297          DC    X'A38193C5999996990000D98598A485A2' talError..Reques
00016468 A3D7C9C40000E681                  30298          DC    X'A3D7C9C40000E68189A3E3998195A297' tPID..WaitTransp
00016478 9699A300E68189A3                  30299          DC    X'9699A300E68189A3D7C9C400C1A2A289' ort.WaitPID.Assi
00016488 879585840000C499                  30300          DC    X'879585840000C499818995D985A285A3' gned..DrainReset
00016498 0000C499818995C2                  30301          DC    X'0000C499818995C2A4949700D9858184' ..DrainBump.Read
000164A8 A8D596A3C1839285                  30302          DC    X'A8D596A3C18392858400D9858184A800' yNotAcked.Ready.
000164B8 C995E3998195A281                  30303          DC    X'C995E3998195A28183A389969500C285' InTransaction.Be
000164C8 878995C396949489                  30304          DC    X'878995C396949489A300C396949489A3' ginCommit.Commit
000164D8 A3899587E3998195                  30305          DC    X'A3899587E3998195A28183A389969500' tingTransaction.
000164E8 C396949489A3D596                  30306          DC    X'C396949489A3D596A3C1839285840000' CommitNotAcked..
000164F8 C1829699A3899587                  30307          DC    X'C1829699A3899587E3998195A28183A3' AbortingTransact
00016508 89969500C1829699                  30308          DC    X'89969500C1829699A38584D596A3C183' ion.AbortedNotAc
00016518 92858400C1829699                  30309          DC    X'92858400C1829699A381829385C59999' ked.AbortableErr
00016528 96990000                          30310          DC    X'96990000'                         or..
                                           30311 @E__stderrp ALIAS C'@@STDERP'
                                           30312          EXTRN @E__stderrp
                                           30313 @Ecrc_table ALIAS X'8399836DA381829385'
                                           30314          EXTRN @Ecrc_table
                                           30315 *
                                           30316 *
                                           30317 *   Re-entrant Data Initialization Section
                                           30318 *
                                           30319 @@INIT@  ALIAS C'rdkafka_txnmgr:'
00016530                00016530 00001040  30320 @@INIT@  CSECT
                                           30321 @@INIT@  AMODE ANY
                                           30322 @@INIT@  RMODE ANY
00016530 05                                30323          DC    XL1'5'
00016531 000000                            30324          DC    AL3(0)
00016534 00000120                          30325          DC    AL4(288)
00016538 00000000                          30326          DC    4X'00'
0001653C 00000000                          30327          DC    Q(@@STATIC)
00016540 00000000                          30328          DC    X'00000000'
00016544 00000001                          30329          DC    X'00000001'
00016548 00000000                          30330          DC    X'00000000'
0001654C 000000FF                          30331          DC    X'000000FF'
00016550 0102039C09867F97                  30332          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00016560 1112139D85088718                  30333          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00016570 818283840A171B88                  30334          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00016580 9116939495960498                  30335          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00016590 A0E2E4E0E1E3E5E7                  30336          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
000165A0 E9EAEBE8EDEEEFEC                  30337          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
000165B0 2FC2C4C0C1C3C5C7                  30338          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
000165C0 C9CACBC8CDCECFCC                  30339          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
000165D0 6162636465666768                  30340          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
000165E0 6A6B6C6D6E6F7071                  30341          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000165F0 7E73747576777879                  30342          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00016600 A3A5B7A9A7B6BCBD                  30343          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00016610 4142434445464748                  30344          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00016620 4A4B4C4D4E4F5051                  30345          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00016630 F753545556575859                  30346          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00016640 3132333435363738                  30347          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           30348 *
                                                                                                                           Page  600 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016650 05                                30349          DC    XL1'5'
00016651 000000                            30350          DC    AL3(0)
00016654 000001E0                          30351          DC    AL4(480)
00016658 00000000                          30352          DC    4X'00'
0001665C 00000000                          30353          DC    Q(@@STATIC)
00016660 00000000                          30354          DC    X'00000000'
00016664 00000101                          30355          DC    X'00000101'
00016668 00000000                          30356          DC    X'00000000'
0001666C 000000A0                          30357          DC    X'000000A0'
00016670 010203372D2E2F16                  30358          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00016680 1112133C3D322618                  30359          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00016690 5A7F7B5B6C507D4D                  30360          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
000166A0 F1F2F3F4F5F6F7F8                  30361          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
000166B0 C1C2C3C4C5C6C7C8                  30362          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
000166C0 D8D9E2E3E4E5E6E7                  30363          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
000166D0 8182838485868788                  30364          DC    X'81828384858687888991929394959697' abcdefghijklmnop
000166E0 9899A2A3A4A5A6A7                  30365          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000166F0 2122232425061728                  30366          DC    X'2122232425061728292A2B2C090A1B30' ................
00016700 311A333435360838                  30367          DC    X'311A333435360838393A3B04143EFF80' ................
                                           30368 *
00016710 05                                30369          DC    XL1'5'
00016711 000000                            30370          DC    AL3(0)
00016714 00000208                          30371          DC    AL4(520)
00016718 00000000                          30372          DC    4X'00'
0001671C 00000000                          30373          DC    Q(@@STATIC)
00016720 00000000                          30374          DC    X'00000000'
00016724 000001C0                          30375          DC    X'000001C0'
00016728 00000000                          30376          DC    X'00000000'
0001672C 00000001                          30377          DC    X'00000001'
00016730 8A40404040404040                  30378          DC    X'8A40404040404040'                 ........
                                           30379 *
00016738 05                                30380          DC    XL1'5'
00016739 000000                            30381          DC    AL3(0)
0001673C 00000230                          30382          DC    AL4(560)
00016740 00000000                          30383          DC    4X'00'
00016744 00000000                          30384          DC    Q(@@STATIC)
00016748 00000000                          30385          DC    X'00000000'
0001674C 000001E0                          30386          DC    X'000001E0'
00016750 00000000                          30387          DC    X'00000000'
00016754 00000001                          30388          DC    X'00000001'
00016758 8B40404040404040                  30389          DC    X'8B40404040404040'                 ........
                                           30390 *
00016760 0D                                30391          DC    XL1'D'
00016761 000000                            30392          DC    AL3(0)
00016764 00000258                          30393          DC    AL4(600)
00016768 00000000                          30394          DC    4X'00'
0001676C 00000000                          30395          DC    Q(@@STATIC)
00016770 00000000                          30396          DC    X'00000000'
00016774 00000220                          30397          DC    X'00000220'
00016778 0000000000014658                  30398          DC    ADL8(@DATA)
00016780 00000000                          30399          DC    X'00000000'
00016784 0000199A                          30400          DC    X'0000199A'
                                                                                                                           Page  601 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           30401 *
00016788 0D                                30402          DC    XL1'D'
00016789 000000                            30403          DC    AL3(0)
0001678C 00000280                          30404          DC    AL4(640)
00016790 00000000                          30405          DC    4X'00'
00016794 00000000                          30406          DC    Q(@@STATIC)
00016798 00000000                          30407          DC    X'00000000'
0001679C 00000228                          30408          DC    X'00000228'
000167A0 0000000000014658                  30409          DC    ADL8(@DATA)
000167A8 00000000                          30410          DC    X'00000000'
000167AC 000019A2                          30411          DC    X'000019A2'
                                           30412 *
000167B0 0D                                30413          DC    XL1'D'
000167B1 000000                            30414          DC    AL3(0)
000167B4 000002A8                          30415          DC    AL4(680)
000167B8 00000000                          30416          DC    4X'00'
000167BC 00000000                          30417          DC    Q(@@STATIC)
000167C0 00000000                          30418          DC    X'00000000'
000167C4 00000230                          30419          DC    X'00000230'
000167C8 0000000000014658                  30420          DC    ADL8(@DATA)
000167D0 00000000                          30421          DC    X'00000000'
000167D4 000019A8                          30422          DC    X'000019A8'
                                           30423 *
000167D8 0D                                30424          DC    XL1'D'
000167D9 000000                            30425          DC    AL3(0)
000167DC 000002D0                          30426          DC    AL4(720)
000167E0 00000000                          30427          DC    4X'00'
000167E4 00000000                          30428          DC    Q(@@STATIC)
000167E8 00000000                          30429          DC    X'00000000'
000167EC 00000238                          30430          DC    X'00000238'
000167F0 0000000000014658                  30431          DC    ADL8(@DATA)
000167F8 00000000                          30432          DC    X'00000000'
000167FC 000019B0                          30433          DC    X'000019B0'
                                           30434 *
00016800 0D                                30435          DC    XL1'D'
00016801 000000                            30436          DC    AL3(0)
00016804 000002F8                          30437          DC    AL4(760)
00016808 00000000                          30438          DC    4X'00'
0001680C 00000000                          30439          DC    Q(@@STATIC)
00016810 00000000                          30440          DC    X'00000000'
00016814 00000240                          30441          DC    X'00000240'
00016818 0000000000014658                  30442          DC    ADL8(@DATA)
00016820 00000000                          30443          DC    X'00000000'
00016824 000019BA                          30444          DC    X'000019BA'
                                           30445 *
00016828 0D                                30446          DC    XL1'D'
00016829 000000                            30447          DC    AL3(0)
0001682C 00000320                          30448          DC    AL4(800)
00016830 00000000                          30449          DC    4X'00'
00016834 00000000                          30450          DC    Q(@@STATIC)
00016838 00000000                          30451          DC    X'00000000'
0001683C 00000248                          30452          DC    X'00000248'
                                                                                                                           Page  602 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016840 0000000000014658                  30453          DC    ADL8(@DATA)
00016848 00000000                          30454          DC    X'00000000'
0001684C 000019C8                          30455          DC    X'000019C8'
                                           30456 *
00016850 0D                                30457          DC    XL1'D'
00016851 000000                            30458          DC    AL3(0)
00016854 00000348                          30459          DC    AL4(840)
00016858 00000000                          30460          DC    4X'00'
0001685C 00000000                          30461          DC    Q(@@STATIC)
00016860 00000000                          30462          DC    X'00000000'
00016864 00000250                          30463          DC    X'00000250'
00016868 0000000000014658                  30464          DC    ADL8(@DATA)
00016870 00000000                          30465          DC    X'00000000'
00016874 000019D4                          30466          DC    X'000019D4'
                                           30467 *
00016878 0D                                30468          DC    XL1'D'
00016879 000000                            30469          DC    AL3(0)
0001687C 00000370                          30470          DC    AL4(880)
00016880 00000000                          30471          DC    4X'00'
00016884 00000000                          30472          DC    Q(@@STATIC)
00016888 00000000                          30473          DC    X'00000000'
0001688C 00000258                          30474          DC    X'00000258'
00016890 0000000000014658                  30475          DC    ADL8(@DATA)
00016898 00000000                          30476          DC    X'00000000'
0001689C 000019E4                          30477          DC    X'000019E4'
                                           30478 *
000168A0 0D                                30479          DC    XL1'D'
000168A1 000000                            30480          DC    AL3(0)
000168A4 00000398                          30481          DC    AL4(920)
000168A8 00000000                          30482          DC    4X'00'
000168AC 00000000                          30483          DC    Q(@@STATIC)
000168B0 00000000                          30484          DC    X'00000000'
000168B4 00000260                          30485          DC    X'00000260'
000168B8 0000000000014658                  30486          DC    ADL8(@DATA)
000168C0 00000000                          30487          DC    X'00000000'
000168C4 000019F8                          30488          DC    X'000019F8'
                                           30489 *
000168C8 0D                                30490          DC    XL1'D'
000168C9 000000                            30491          DC    AL3(0)
000168CC 000003C0                          30492          DC    AL4(960)
000168D0 00000000                          30493          DC    4X'00'
000168D4 00000000                          30494          DC    Q(@@STATIC)
000168D8 00000000                          30495          DC    X'00000000'
000168DC 00000268                          30496          DC    X'00000268'
000168E0 0000000000014658                  30497          DC    ADL8(@DATA)
000168E8 00000000                          30498          DC    X'00000000'
000168EC 00001A06                          30499          DC    X'00001A06'
                                           30500 *
000168F0 0D                                30501          DC    XL1'D'
000168F1 000000                            30502          DC    AL3(0)
000168F4 000003E8                          30503          DC    AL4(1000)
000168F8 00000000                          30504          DC    4X'00'
                                                                                                                           Page  603 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000168FC 00000000                          30505          DC    Q(@@STATIC)
00016900 00000000                          30506          DC    X'00000000'
00016904 00000270                          30507          DC    X'00000270'
00016908 0000000000014658                  30508          DC    ADL8(@DATA)
00016910 00000000                          30509          DC    X'00000000'
00016914 00001A12                          30510          DC    X'00001A12'
                                           30511 *
00016918 0D                                30512          DC    XL1'D'
00016919 000000                            30513          DC    AL3(0)
0001691C 00000410                          30514          DC    AL4(1040)
00016920 00000000                          30515          DC    4X'00'
00016924 00000000                          30516          DC    Q(@@STATIC)
00016928 00000000                          30517          DC    X'00000000'
0001692C 00000278                          30518          DC    X'00000278'
00016930 0000000000014658                  30519          DC    ADL8(@DATA)
00016938 00000000                          30520          DC    X'00000000'
0001693C 00001A22                          30521          DC    X'00001A22'
                                           30522 *
00016940 0D                                30523          DC    XL1'D'
00016941 000000                            30524          DC    AL3(0)
00016944 00000438                          30525          DC    AL4(1080)
00016948 00000000                          30526          DC    4X'00'
0001694C 00000000                          30527          DC    Q(@@STATIC)
00016950 00000000                          30528          DC    X'00000000'
00016954 00000280                          30529          DC    X'00000280'
00016958 0000000000014658                  30530          DC    ADL8(@DATA)
00016960 00000000                          30531          DC    X'00000000'
00016964 00001A2C                          30532          DC    X'00001A2C'
                                           30533 *
00016968 0D                                30534          DC    XL1'D'
00016969 000000                            30535          DC    AL3(0)
0001696C 00000460                          30536          DC    AL4(1120)
00016970 00000000                          30537          DC    4X'00'
00016974 00000000                          30538          DC    Q(@@STATIC)
00016978 00000000                          30539          DC    X'00000000'
0001697C 00000288                          30540          DC    X'00000288'
00016980 0000000000014658                  30541          DC    ADL8(@DATA)
00016988 00000000                          30542          DC    X'00000000'
0001698C 00001A36                          30543          DC    X'00001A36'
                                           30544 *
00016990 0D                                30545          DC    XL1'D'
00016991 000000                            30546          DC    AL3(0)
00016994 00000488                          30547          DC    AL4(1160)
00016998 00000000                          30548          DC    4X'00'
0001699C 00000000                          30549          DC    Q(@@STATIC)
000169A0 00000000                          30550          DC    X'00000000'
000169A4 00000290                          30551          DC    X'00000290'
000169A8 0000000000014658                  30552          DC    ADL8(@DATA)
000169B0 00000000                          30553          DC    X'00000000'
000169B4 00001A42                          30554          DC    X'00001A42'
                                           30555 *
000169B8 0D                                30556          DC    XL1'D'
                                                                                                                           Page  604 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000169B9 000000                            30557          DC    AL3(0)
000169BC 000004B0                          30558          DC    AL4(1200)
000169C0 00000000                          30559          DC    4X'00'
000169C4 00000000                          30560          DC    Q(@@STATIC)
000169C8 00000000                          30561          DC    X'00000000'
000169CC 00000298                          30562          DC    X'00000298'
000169D0 0000000000014658                  30563          DC    ADL8(@DATA)
000169D8 00000000                          30564          DC    X'00000000'
000169DC 00001A4C                          30565          DC    X'00001A4C'
                                           30566 *
000169E0 0D                                30567          DC    XL1'D'
000169E1 000000                            30568          DC    AL3(0)
000169E4 000004D8                          30569          DC    AL4(1240)
000169E8 00000000                          30570          DC    4X'00'
000169EC 00000000                          30571          DC    Q(@@STATIC)
000169F0 00000000                          30572          DC    X'00000000'
000169F4 000002A0                          30573          DC    X'000002A0'
000169F8 0000000000014658                  30574          DC    ADL8(@DATA)
00016A00 00000000                          30575          DC    X'00000000'
00016A04 00001A5C                          30576          DC    X'00001A5C'
                                           30577 *
00016A08 0D                                30578          DC    XL1'D'
00016A09 000000                            30579          DC    AL3(0)
00016A0C 00000500                          30580          DC    AL4(1280)
00016A10 00000000                          30581          DC    4X'00'
00016A14 00000000                          30582          DC    Q(@@STATIC)
00016A18 00000000                          30583          DC    X'00000000'
00016A1C 000002A8                          30584          DC    X'000002A8'
00016A20 0000000000014658                  30585          DC    ADL8(@DATA)
00016A28 00000000                          30586          DC    X'00000000'
00016A2C 00001A68                          30587          DC    X'00001A68'
                                           30588 *
00016A30 0D                                30589          DC    XL1'D'
00016A31 000000                            30590          DC    AL3(0)
00016A34 00000528                          30591          DC    AL4(1320)
00016A38 00000000                          30592          DC    4X'00'
00016A3C 00000000                          30593          DC    Q(@@STATIC)
00016A40 00000000                          30594          DC    X'00000000'
00016A44 000002B0                          30595          DC    X'000002B0'
00016A48 0000000000014658                  30596          DC    ADL8(@DATA)
00016A50 00000000                          30597          DC    X'00000000'
00016A54 00001A76                          30598          DC    X'00001A76'
                                           30599 *
00016A58 0D                                30600          DC    XL1'D'
00016A59 000000                            30601          DC    AL3(0)
00016A5C 00000550                          30602          DC    AL4(1360)
00016A60 00000000                          30603          DC    4X'00'
00016A64 00000000                          30604          DC    Q(@@STATIC)
00016A68 00000000                          30605          DC    X'00000000'
00016A6C 000002B8                          30606          DC    X'000002B8'
00016A70 0000000000014658                  30607          DC    ADL8(@DATA)
00016A78 00000000                          30608          DC    X'00000000'
                                                                                                                           Page  605 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016A7C 00001A82                          30609          DC    X'00001A82'
                                           30610 *
00016A80 0D                                30611          DC    XL1'D'
00016A81 000000                            30612          DC    AL3(0)
00016A84 00000578                          30613          DC    AL4(1400)
00016A88 00000000                          30614          DC    4X'00'
00016A8C 00000000                          30615          DC    Q(@@STATIC)
00016A90 00000000                          30616          DC    X'00000000'
00016A94 000002C0                          30617          DC    X'000002C0'
00016A98 0000000000014658                  30618          DC    ADL8(@DATA)
00016AA0 00000000                          30619          DC    X'00000000'
00016AA4 00001A90                          30620          DC    X'00001A90'
                                           30621 *
00016AA8 0D                                30622          DC    XL1'D'
00016AA9 000000                            30623          DC    AL3(0)
00016AAC 000005A0                          30624          DC    AL4(1440)
00016AB0 00000000                          30625          DC    4X'00'
00016AB4 00000000                          30626          DC    Q(@@STATIC)
00016AB8 00000000                          30627          DC    X'00000000'
00016ABC 000002C8                          30628          DC    X'000002C8'
00016AC0 0000000000014658                  30629          DC    ADL8(@DATA)
00016AC8 00000000                          30630          DC    X'00000000'
00016ACC 00001A9E                          30631          DC    X'00001A9E'
                                           30632 *
00016AD0 0D                                30633          DC    XL1'D'
00016AD1 000000                            30634          DC    AL3(0)
00016AD4 000005C8                          30635          DC    AL4(1480)
00016AD8 00000000                          30636          DC    4X'00'
00016ADC 00000000                          30637          DC    Q(@@STATIC)
00016AE0 00000000                          30638          DC    X'00000000'
00016AE4 000002D0                          30639          DC    X'000002D0'
00016AE8 0000000000014658                  30640          DC    ADL8(@DATA)
00016AF0 00000000                          30641          DC    X'00000000'
00016AF4 00001AAC                          30642          DC    X'00001AAC'
                                           30643 *
00016AF8 0D                                30644          DC    XL1'D'
00016AF9 000000                            30645          DC    AL3(0)
00016AFC 000005F0                          30646          DC    AL4(1520)
00016B00 00000000                          30647          DC    4X'00'
00016B04 00000000                          30648          DC    Q(@@STATIC)
00016B08 00000000                          30649          DC    X'00000000'
00016B0C 000002D8                          30650          DC    X'000002D8'
00016B10 0000000000014658                  30651          DC    ADL8(@DATA)
00016B18 00000000                          30652          DC    X'00000000'
00016B1C 00001ABC                          30653          DC    X'00001ABC'
                                           30654 *
00016B20 0D                                30655          DC    XL1'D'
00016B21 000000                            30656          DC    AL3(0)
00016B24 00000618                          30657          DC    AL4(1560)
00016B28 00000000                          30658          DC    4X'00'
00016B2C 00000000                          30659          DC    Q(@@STATIC)
00016B30 00000000                          30660          DC    X'00000000'
                                                                                                                           Page  606 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016B34 000002E0                          30661          DC    X'000002E0'
00016B38 0000000000014658                  30662          DC    ADL8(@DATA)
00016B40 00000000                          30663          DC    X'00000000'
00016B44 00001AD2                          30664          DC    X'00001AD2'
                                           30665 *
00016B48 0D                                30666          DC    XL1'D'
00016B49 000000                            30667          DC    AL3(0)
00016B4C 00000640                          30668          DC    AL4(1600)
00016B50 00000000                          30669          DC    4X'00'
00016B54 00000000                          30670          DC    Q(@@STATIC)
00016B58 00000000                          30671          DC    X'00000000'
00016B5C 000002E8                          30672          DC    X'000002E8'
00016B60 0000000000014658                  30673          DC    ADL8(@DATA)
00016B68 00000000                          30674          DC    X'00000000'
00016B6C 00001AE6                          30675          DC    X'00001AE6'
                                           30676 *
00016B70 0D                                30677          DC    XL1'D'
00016B71 000000                            30678          DC    AL3(0)
00016B74 00000668                          30679          DC    AL4(1640)
00016B78 00000000                          30680          DC    4X'00'
00016B7C 00000000                          30681          DC    Q(@@STATIC)
00016B80 00000000                          30682          DC    X'00000000'
00016B84 000002F0                          30683          DC    X'000002F0'
00016B88 0000000000014658                  30684          DC    ADL8(@DATA)
00016B90 00000000                          30685          DC    X'00000000'
00016B94 00001AF6                          30686          DC    X'00001AF6'
                                           30687 *
00016B98 0D                                30688          DC    XL1'D'
00016B99 000000                            30689          DC    AL3(0)
00016B9C 00000690                          30690          DC    AL4(1680)
00016BA0 00000000                          30691          DC    4X'00'
00016BA4 00000000                          30692          DC    Q(@@STATIC)
00016BA8 00000000                          30693          DC    X'00000000'
00016BAC 000002F8                          30694          DC    X'000002F8'
00016BB0 0000000000014658                  30695          DC    ADL8(@DATA)
00016BB8 00000000                          30696          DC    X'00000000'
00016BBC 00001AFE                          30697          DC    X'00001AFE'
                                           30698 *
00016BC0 0D                                30699          DC    XL1'D'
00016BC1 000000                            30700          DC    AL3(0)
00016BC4 000006B8                          30701          DC    AL4(1720)
00016BC8 00000000                          30702          DC    4X'00'
00016BCC 00000000                          30703          DC    Q(@@STATIC)
00016BD0 00000000                          30704          DC    X'00000000'
00016BD4 00000300                          30705          DC    X'00000300'
00016BD8 0000000000014658                  30706          DC    ADL8(@DATA)
00016BE0 00000000                          30707          DC    X'00000000'
00016BE4 00001B0E                          30708          DC    X'00001B0E'
                                           30709 *
00016BE8 0D                                30710          DC    XL1'D'
00016BE9 000000                            30711          DC    AL3(0)
00016BEC 000006E0                          30712          DC    AL4(1760)
                                                                                                                           Page  607 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016BF0 00000000                          30713          DC    4X'00'
00016BF4 00000000                          30714          DC    Q(@@STATIC)
00016BF8 00000000                          30715          DC    X'00000000'
00016BFC 00000308                          30716          DC    X'00000308'
00016C00 0000000000014658                  30717          DC    ADL8(@DATA)
00016C08 00000000                          30718          DC    X'00000000'
00016C0C 00001B1E                          30719          DC    X'00001B1E'
                                           30720 *
00016C10 0D                                30721          DC    XL1'D'
00016C11 000000                            30722          DC    AL3(0)
00016C14 00000708                          30723          DC    AL4(1800)
00016C18 00000000                          30724          DC    4X'00'
00016C1C 00000000                          30725          DC    Q(@@STATIC)
00016C20 00000000                          30726          DC    X'00000000'
00016C24 00000310                          30727          DC    X'00000310'
00016C28 0000000000014658                  30728          DC    ADL8(@DATA)
00016C30 00000000                          30729          DC    X'00000000'
00016C34 00001B2C                          30730          DC    X'00001B2C'
                                           30731 *
00016C38 0D                                30732          DC    XL1'D'
00016C39 000000                            30733          DC    AL3(0)
00016C3C 00000730                          30734          DC    AL4(1840)
00016C40 00000000                          30735          DC    4X'00'
00016C44 00000000                          30736          DC    Q(@@STATIC)
00016C48 00000000                          30737          DC    X'00000000'
00016C4C 00000318                          30738          DC    X'00000318'
00016C50 0000000000014658                  30739          DC    ADL8(@DATA)
00016C58 00000000                          30740          DC    X'00000000'
00016C5C 00001B38                          30741          DC    X'00001B38'
                                           30742 *
00016C60 0D                                30743          DC    XL1'D'
00016C61 000000                            30744          DC    AL3(0)
00016C64 00000758                          30745          DC    AL4(1880)
00016C68 00000000                          30746          DC    4X'00'
00016C6C 00000000                          30747          DC    Q(@@STATIC)
00016C70 00000000                          30748          DC    X'00000000'
00016C74 00000320                          30749          DC    X'00000320'
00016C78 0000000000014658                  30750          DC    ADL8(@DATA)
00016C80 00000000                          30751          DC    X'00000000'
00016C84 00001B44                          30752          DC    X'00001B44'
                                           30753 *
00016C88 0D                                30754          DC    XL1'D'
00016C89 000000                            30755          DC    AL3(0)
00016C8C 00000780                          30756          DC    AL4(1920)
00016C90 00000000                          30757          DC    4X'00'
00016C94 00000000                          30758          DC    Q(@@STATIC)
00016C98 00000000                          30759          DC    X'00000000'
00016C9C 00000328                          30760          DC    X'00000328'
00016CA0 0000000000014658                  30761          DC    ADL8(@DATA)
00016CA8 00000000                          30762          DC    X'00000000'
00016CAC 00001B54                          30763          DC    X'00001B54'
                                           30764 *
                                                                                                                           Page  608 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016CB0 0D                                30765          DC    XL1'D'
00016CB1 000000                            30766          DC    AL3(0)
00016CB4 000007A8                          30767          DC    AL4(1960)
00016CB8 00000000                          30768          DC    4X'00'
00016CBC 00000000                          30769          DC    Q(@@STATIC)
00016CC0 00000000                          30770          DC    X'00000000'
00016CC4 00000330                          30771          DC    X'00000330'
00016CC8 0000000000014658                  30772          DC    ADL8(@DATA)
00016CD0 00000000                          30773          DC    X'00000000'
00016CD4 00001B62                          30774          DC    X'00001B62'
                                           30775 *
00016CD8 0D                                30776          DC    XL1'D'
00016CD9 000000                            30777          DC    AL3(0)
00016CDC 000007D0                          30778          DC    AL4(2000)
00016CE0 00000000                          30779          DC    4X'00'
00016CE4 00000000                          30780          DC    Q(@@STATIC)
00016CE8 00000000                          30781          DC    X'00000000'
00016CEC 00000338                          30782          DC    X'00000338'
00016CF0 0000000000014658                  30783          DC    ADL8(@DATA)
00016CF8 00000000                          30784          DC    X'00000000'
00016CFC 00001B76                          30785          DC    X'00001B76'
                                           30786 *
00016D00 0D                                30787          DC    XL1'D'
00016D01 000000                            30788          DC    AL3(0)
00016D04 000007F8                          30789          DC    AL4(2040)
00016D08 00000000                          30790          DC    4X'00'
00016D0C 00000000                          30791          DC    Q(@@STATIC)
00016D10 00000000                          30792          DC    X'00000000'
00016D14 00000340                          30793          DC    X'00000340'
00016D18 0000000000014658                  30794          DC    ADL8(@DATA)
00016D20 00000000                          30795          DC    X'00000000'
00016D24 00001B86                          30796          DC    X'00001B86'
                                           30797 *
00016D28 0D                                30798          DC    XL1'D'
00016D29 000000                            30799          DC    AL3(0)
00016D2C 00000820                          30800          DC    AL4(2080)
00016D30 00000000                          30801          DC    4X'00'
00016D34 00000000                          30802          DC    Q(@@STATIC)
00016D38 00000000                          30803          DC    X'00000000'
00016D3C 00000348                          30804          DC    X'00000348'
00016D40 0000000000014658                  30805          DC    ADL8(@DATA)
00016D48 00000000                          30806          DC    X'00000000'
00016D4C 00001B98                          30807          DC    X'00001B98'
                                           30808 *
00016D50 0D                                30809          DC    XL1'D'
00016D51 000000                            30810          DC    AL3(0)
00016D54 00000848                          30811          DC    AL4(2120)
00016D58 00000000                          30812          DC    4X'00'
00016D5C 00000000                          30813          DC    Q(@@STATIC)
00016D60 00000000                          30814          DC    X'00000000'
00016D64 00000350                          30815          DC    X'00000350'
00016D68 0000000000014658                  30816          DC    ADL8(@DATA)
                                                                                                                           Page  609 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016D70 00000000                          30817          DC    X'00000000'
00016D74 00001BAA                          30818          DC    X'00001BAA'
                                           30819 *
00016D78 0D                                30820          DC    XL1'D'
00016D79 000000                            30821          DC    AL3(0)
00016D7C 00000870                          30822          DC    AL4(2160)
00016D80 00000000                          30823          DC    4X'00'
00016D84 00000000                          30824          DC    Q(@@STATIC)
00016D88 00000000                          30825          DC    X'00000000'
00016D8C 00000358                          30826          DC    X'00000358'
00016D90 0000000000014658                  30827          DC    ADL8(@DATA)
00016D98 00000000                          30828          DC    X'00000000'
00016D9C 00001BC0                          30829          DC    X'00001BC0'
                                           30830 *
00016DA0 0D                                30831          DC    XL1'D'
00016DA1 000000                            30832          DC    AL3(0)
00016DA4 00000898                          30833          DC    AL4(2200)
00016DA8 00000000                          30834          DC    4X'00'
00016DAC 00000000                          30835          DC    Q(@@STATIC)
00016DB0 00000000                          30836          DC    X'00000000'
00016DB4 00000360                          30837          DC    X'00000360'
00016DB8 0000000000014658                  30838          DC    ADL8(@DATA)
00016DC0 00000000                          30839          DC    X'00000000'
00016DC4 00001BD6                          30840          DC    X'00001BD6'
                                           30841 *
00016DC8 0D                                30842          DC    XL1'D'
00016DC9 000000                            30843          DC    AL3(0)
00016DCC 000008C0                          30844          DC    AL4(2240)
00016DD0 00000000                          30845          DC    4X'00'
00016DD4 00000000                          30846          DC    Q(@@STATIC)
00016DD8 00000000                          30847          DC    X'00000000'
00016DDC 00000368                          30848          DC    X'00000368'
00016DE0 0000000000014658                  30849          DC    ADL8(@DATA)
00016DE8 00000000                          30850          DC    X'00000000'
00016DEC 00001BEC                          30851          DC    X'00001BEC'
                                           30852 *
00016DF0 0D                                30853          DC    XL1'D'
00016DF1 000000                            30854          DC    AL3(0)
00016DF4 000008E8                          30855          DC    AL4(2280)
00016DF8 00000000                          30856          DC    4X'00'
00016DFC 00000000                          30857          DC    Q(@@STATIC)
00016E00 00000000                          30858          DC    X'00000000'
00016E04 00000370                          30859          DC    X'00000370'
00016E08 0000000000014658                  30860          DC    ADL8(@DATA)
00016E10 00000000                          30861          DC    X'00000000'
00016E14 00001C04                          30862          DC    X'00001C04'
                                           30863 *
00016E18 0D                                30864          DC    XL1'D'
00016E19 000000                            30865          DC    AL3(0)
00016E1C 00000910                          30866          DC    AL4(2320)
00016E20 00000000                          30867          DC    4X'00'
00016E24 00000000                          30868          DC    Q(@@STATIC)
                                                                                                                           Page  610 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016E28 00000000                          30869          DC    X'00000000'
00016E2C 00000378                          30870          DC    X'00000378'
00016E30 0000000000014658                  30871          DC    ADL8(@DATA)
00016E38 00000000                          30872          DC    X'00000000'
00016E3C 00001C12                          30873          DC    X'00001C12'
                                           30874 *
00016E40 0D                                30875          DC    XL1'D'
00016E41 000000                            30876          DC    AL3(0)
00016E44 00000938                          30877          DC    AL4(2360)
00016E48 00000000                          30878          DC    4X'00'
00016E4C 00000000                          30879          DC    Q(@@STATIC)
00016E50 00000000                          30880          DC    X'00000000'
00016E54 00000380                          30881          DC    X'00000380'
00016E58 0000000000014658                  30882          DC    ADL8(@DATA)
00016E60 00000000                          30883          DC    X'00000000'
00016E64 00001C26                          30884          DC    X'00001C26'
                                           30885 *
00016E68 0D                                30886          DC    XL1'D'
00016E69 000000                            30887          DC    AL3(0)
00016E6C 00000960                          30888          DC    AL4(2400)
00016E70 00000000                          30889          DC    4X'00'
00016E74 00000000                          30890          DC    Q(@@STATIC)
00016E78 00000000                          30891          DC    X'00000000'
00016E7C 00000388                          30892          DC    X'00000388'
00016E80 0000000000014658                  30893          DC    ADL8(@DATA)
00016E88 00000000                          30894          DC    X'00000000'
00016E8C 00001C46                          30895          DC    X'00001C46'
                                           30896 *
00016E90 0D                                30897          DC    XL1'D'
00016E91 000000                            30898          DC    AL3(0)
00016E94 00000988                          30899          DC    AL4(2440)
00016E98 00000000                          30900          DC    4X'00'
00016E9C 00000000                          30901          DC    Q(@@STATIC)
00016EA0 00000000                          30902          DC    X'00000000'
00016EA4 00000390                          30903          DC    X'00000390'
00016EA8 0000000000014658                  30904          DC    ADL8(@DATA)
00016EB0 00000000                          30905          DC    X'00000000'
00016EB4 00001C6A                          30906          DC    X'00001C6A'
                                           30907 *
00016EB8 0D                                30908          DC    XL1'D'
00016EB9 000000                            30909          DC    AL3(0)
00016EBC 000009B0                          30910          DC    AL4(2480)
00016EC0 00000000                          30911          DC    4X'00'
00016EC4 00000000                          30912          DC    Q(@@STATIC)
00016EC8 00000000                          30913          DC    X'00000000'
00016ECC 00000398                          30914          DC    X'00000398'
00016ED0 0000000000014658                  30915          DC    ADL8(@DATA)
00016ED8 00000000                          30916          DC    X'00000000'
00016EDC 00001C8C                          30917          DC    X'00001C8C'
                                           30918 *
00016EE0 0D                                30919          DC    XL1'D'
00016EE1 000000                            30920          DC    AL3(0)
                                                                                                                           Page  611 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00016EE4 000009D8                          30921          DC    AL4(2520)
00016EE8 00000000                          30922          DC    4X'00'
00016EEC 00000000                          30923          DC    Q(@@STATIC)
00016EF0 00000000                          30924          DC    X'00000000'
00016EF4 000003A0                          30925          DC    X'000003A0'
00016EF8 0000000000014658                  30926          DC    ADL8(@DATA)
00016F00 00000000                          30927          DC    X'00000000'
00016F04 00001CA0                          30928          DC    X'00001CA0'
                                           30929 *
00016F08 0D                                30930          DC    XL1'D'
00016F09 000000                            30931          DC    AL3(0)
00016F0C 00000A00                          30932          DC    AL4(2560)
00016F10 00000000                          30933          DC    4X'00'
00016F14 00000000                          30934          DC    Q(@@STATIC)
00016F18 00000000                          30935          DC    X'00000000'
00016F1C 000003A8                          30936          DC    X'000003A8'
00016F20 0000000000014658                  30937          DC    ADL8(@DATA)
00016F28 00000000                          30938          DC    X'00000000'
00016F2C 00001CBC                          30939          DC    X'00001CBC'
                                           30940 *
00016F30 0D                                30941          DC    XL1'D'
00016F31 000000                            30942          DC    AL3(0)
00016F34 00000A28                          30943          DC    AL4(2600)
00016F38 00000000                          30944          DC    4X'00'
00016F3C 00000000                          30945          DC    Q(@@STATIC)
00016F40 00000000                          30946          DC    X'00000000'
00016F44 000003B0                          30947          DC    X'000003B0'
00016F48 0000000000014658                  30948          DC    ADL8(@DATA)
00016F50 00000000                          30949          DC    X'00000000'
00016F54 00001CD6                          30950          DC    X'00001CD6'
                                           30951 *
00016F58 0D                                30952          DC    XL1'D'
00016F59 000000                            30953          DC    AL3(0)
00016F5C 00000A50                          30954          DC    AL4(2640)
00016F60 00000000                          30955          DC    4X'00'
00016F64 00000000                          30956          DC    Q(@@STATIC)
00016F68 00000000                          30957          DC    X'00000000'
00016F6C 000003B8                          30958          DC    X'000003B8'
00016F70 0000000000014658                  30959          DC    ADL8(@DATA)
00016F78 00000000                          30960          DC    X'00000000'
00016F7C 00001CFA                          30961          DC    X'00001CFA'
                                           30962 *
00016F80 0D                                30963          DC    XL1'D'
00016F81 000000                            30964          DC    AL3(0)
00016F84 00000A78                          30965          DC    AL4(2680)
00016F88 00000000                          30966          DC    4X'00'
00016F8C 00000000                          30967          DC    Q(@@STATIC)
00016F90 00000000                          30968          DC    X'00000000'
00016F94 000003C0                          30969          DC    X'000003C0'
00016F98 0000000000014658                  30970          DC    ADL8(@DATA)
00016FA0 00000000                          30971          DC    X'00000000'
00016FA4 00001D1C                          30972          DC    X'00001D1C'
                                                                                                                           Page  612 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           30973 *
00016FA8 0D                                30974          DC    XL1'D'
00016FA9 000000                            30975          DC    AL3(0)
00016FAC 00000AA0                          30976          DC    AL4(2720)
00016FB0 00000000                          30977          DC    4X'00'
00016FB4 00000000                          30978          DC    Q(@@STATIC)
00016FB8 00000000                          30979          DC    X'00000000'
00016FBC 000003C8                          30980          DC    X'000003C8'
00016FC0 0000000000014658                  30981          DC    ADL8(@DATA)
00016FC8 00000000                          30982          DC    X'00000000'
00016FCC 00001D28                          30983          DC    X'00001D28'
                                           30984 *
00016FD0 0D                                30985          DC    XL1'D'
00016FD1 000000                            30986          DC    AL3(0)
00016FD4 00000AC8                          30987          DC    AL4(2760)
00016FD8 00000000                          30988          DC    4X'00'
00016FDC 00000000                          30989          DC    Q(@@STATIC)
00016FE0 00000000                          30990          DC    X'00000000'
00016FE4 000003D0                          30991          DC    X'000003D0'
00016FE8 0000000000014658                  30992          DC    ADL8(@DATA)
00016FF0 00000000                          30993          DC    X'00000000'
00016FF4 00001D40                          30994          DC    X'00001D40'
                                           30995 *
00016FF8 0D                                30996          DC    XL1'D'
00016FF9 000000                            30997          DC    AL3(0)
00016FFC 00000AF0                          30998          DC    AL4(2800)
00017000 00000000                          30999          DC    4X'00'
00017004 00000000                          31000          DC    Q(@@STATIC)
00017008 00000000                          31001          DC    X'00000000'
0001700C 000003D8                          31002          DC    X'000003D8'
00017010 0000000000014658                  31003          DC    ADL8(@DATA)
00017018 00000000                          31004          DC    X'00000000'
0001701C 00001D56                          31005          DC    X'00001D56'
                                           31006 *
00017020 0D                                31007          DC    XL1'D'
00017021 000000                            31008          DC    AL3(0)
00017024 00000B18                          31009          DC    AL4(2840)
00017028 00000000                          31010          DC    4X'00'
0001702C 00000000                          31011          DC    Q(@@STATIC)
00017030 00000000                          31012          DC    X'00000000'
00017034 000003E0                          31013          DC    X'000003E0'
00017038 0000000000014658                  31014          DC    ADL8(@DATA)
00017040 00000000                          31015          DC    X'00000000'
00017044 00001D6C                          31016          DC    X'00001D6C'
                                           31017 *
00017048 0D                                31018          DC    XL1'D'
00017049 000000                            31019          DC    AL3(0)
0001704C 00000B40                          31020          DC    AL4(2880)
00017050 00000000                          31021          DC    4X'00'
00017054 00000000                          31022          DC    Q(@@STATIC)
00017058 00000000                          31023          DC    X'00000000'
0001705C 000003E8                          31024          DC    X'000003E8'
                                                                                                                           Page  613 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00017060 0000000000014658                  31025          DC    ADL8(@DATA)
00017068 00000000                          31026          DC    X'00000000'
0001706C 00001D7C                          31027          DC    X'00001D7C'
                                           31028 *
00017070 0D                                31029          DC    XL1'D'
00017071 000000                            31030          DC    AL3(0)
00017074 00000B68                          31031          DC    AL4(2920)
00017078 00000000                          31032          DC    4X'00'
0001707C 00000000                          31033          DC    Q(@@STATIC)
00017080 00000000                          31034          DC    X'00000000'
00017084 000003F0                          31035          DC    X'000003F0'
00017088 0000000000014658                  31036          DC    ADL8(@DATA)
00017090 00000000                          31037          DC    X'00000000'
00017094 00001D92                          31038          DC    X'00001D92'
                                           31039 *
00017098 0D                                31040          DC    XL1'D'
00017099 000000                            31041          DC    AL3(0)
0001709C 00000B90                          31042          DC    AL4(2960)
000170A0 00000000                          31043          DC    4X'00'
000170A4 00000000                          31044          DC    Q(@@STATIC)
000170A8 00000000                          31045          DC    X'00000000'
000170AC 000004C0                          31046          DC    X'000004C0'
000170B0 0000000000014658                  31047          DC    ADL8(@DATA)
000170B8 00000000                          31048          DC    X'00000000'
000170BC 00001DA2                          31049          DC    X'00001DA2'
                                           31050 *
000170C0 0D                                31051          DC    XL1'D'
000170C1 000000                            31052          DC    AL3(0)
000170C4 00000BB8                          31053          DC    AL4(3000)
000170C8 00000000                          31054          DC    4X'00'
000170CC 00000000                          31055          DC    Q(@@STATIC)
000170D0 00000000                          31056          DC    X'00000000'
000170D4 000004C8                          31057          DC    X'000004C8'
000170D8 0000000000014658                  31058          DC    ADL8(@DATA)
000170E0 00000000                          31059          DC    X'00000000'
000170E4 00001DA8                          31060          DC    X'00001DA8'
                                           31061 *
000170E8 0D                                31062          DC    XL1'D'
000170E9 000000                            31063          DC    AL3(0)
000170EC 00000BE0                          31064          DC    AL4(3040)
000170F0 00000000                          31065          DC    4X'00'
000170F4 00000000                          31066          DC    Q(@@STATIC)
000170F8 00000000                          31067          DC    X'00000000'
000170FC 000004D0                          31068          DC    X'000004D0'
00017100 0000000000014658                  31069          DC    ADL8(@DATA)
00017108 00000000                          31070          DC    X'00000000'
0001710C 00001DAE                          31071          DC    X'00001DAE'
                                           31072 *
00017110 0D                                31073          DC    XL1'D'
00017111 000000                            31074          DC    AL3(0)
00017114 00000C08                          31075          DC    AL4(3080)
00017118 00000000                          31076          DC    4X'00'
                                                                                                                           Page  614 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001711C 00000000                          31077          DC    Q(@@STATIC)
00017120 00000000                          31078          DC    X'00000000'
00017124 000004D8                          31079          DC    X'000004D8'
00017128 0000000000014658                  31080          DC    ADL8(@DATA)
00017130 00000000                          31081          DC    X'00000000'
00017134 00001DB6                          31082          DC    X'00001DB6'
                                           31083 *
00017138 0D                                31084          DC    XL1'D'
00017139 000000                            31085          DC    AL3(0)
0001713C 00000C30                          31086          DC    AL4(3120)
00017140 00000000                          31087          DC    4X'00'
00017144 00000000                          31088          DC    Q(@@STATIC)
00017148 00000000                          31089          DC    X'00000000'
0001714C 000004E0                          31090          DC    X'000004E0'
00017150 0000000000014658                  31091          DC    ADL8(@DATA)
00017158 00000000                          31092          DC    X'00000000'
0001715C 00001DBA                          31093          DC    X'00001DBA'
                                           31094 *
00017160 0D                                31095          DC    XL1'D'
00017161 000000                            31096          DC    AL3(0)
00017164 00000C58                          31097          DC    AL4(3160)
00017168 00000000                          31098          DC    4X'00'
0001716C 00000000                          31099          DC    Q(@@STATIC)
00017170 00000000                          31100          DC    X'00000000'
00017174 000004E8                          31101          DC    X'000004E8'
00017178 0000000000014658                  31102          DC    ADL8(@DATA)
00017180 00000000                          31103          DC    X'00000000'
00017184 00001DC0                          31104          DC    X'00001DC0'
                                           31105 *
00017188 0D                                31106          DC    XL1'D'
00017189 000000                            31107          DC    AL3(0)
0001718C 00000C80                          31108          DC    AL4(3200)
00017190 00000000                          31109          DC    4X'00'
00017194 00000000                          31110          DC    Q(@@STATIC)
00017198 00000000                          31111          DC    X'00000000'
0001719C 00000510                          31112          DC    X'00000510'
000171A0 0000000000014658                  31113          DC    ADL8(@DATA)
000171A8 00000000                          31114          DC    X'00000000'
000171AC 00001DC8                          31115          DC    X'00001DC8'
                                           31116 *
000171B0 0D                                31117          DC    XL1'D'
000171B1 000000                            31118          DC    AL3(0)
000171B4 00000CA8                          31119          DC    AL4(3240)
000171B8 00000000                          31120          DC    4X'00'
000171BC 00000000                          31121          DC    Q(@@STATIC)
000171C0 00000000                          31122          DC    X'00000000'
000171C4 00000518                          31123          DC    X'00000518'
000171C8 0000000000014658                  31124          DC    ADL8(@DATA)
000171D0 00000000                          31125          DC    X'00000000'
000171D4 00001DD4                          31126          DC    X'00001DD4'
                                           31127 *
000171D8 0D                                31128          DC    XL1'D'
                                                                                                                           Page  615 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000171D9 000000                            31129          DC    AL3(0)
000171DC 00000CD0                          31130          DC    AL4(3280)
000171E0 00000000                          31131          DC    4X'00'
000171E4 00000000                          31132          DC    Q(@@STATIC)
000171E8 00000000                          31133          DC    X'00000000'
000171EC 00000520                          31134          DC    X'00000520'
000171F0 0000000000014658                  31135          DC    ADL8(@DATA)
000171F8 00000000                          31136          DC    X'00000000'
000171FC 00001DDC                          31137          DC    X'00001DDC'
                                           31138 *
00017200 0D                                31139          DC    XL1'D'
00017201 000000                            31140          DC    AL3(0)
00017204 00000CF8                          31141          DC    AL4(3320)
00017208 00000000                          31142          DC    4X'00'
0001720C 00000000                          31143          DC    Q(@@STATIC)
00017210 00000000                          31144          DC    X'00000000'
00017214 00000528                          31145          DC    X'00000528'
00017218 0000000000014658                  31146          DC    ADL8(@DATA)
00017220 00000000                          31147          DC    X'00000000'
00017224 00001DE6                          31148          DC    X'00001DE6'
                                           31149 *
00017228 0D                                31150          DC    XL1'D'
00017229 000000                            31151          DC    AL3(0)
0001722C 00000D20                          31152          DC    AL4(3360)
00017230 00000000                          31153          DC    4X'00'
00017234 00000000                          31154          DC    Q(@@STATIC)
00017238 00000000                          31155          DC    X'00000000'
0001723C 00000630                          31156          DC    X'00000630'
00017240 0000000000014658                  31157          DC    ADL8(@DATA)
00017248 00000000                          31158          DC    X'00000000'
0001724C 00001DEE                          31159          DC    X'00001DEE'
                                           31160 *
00017250 0D                                31161          DC    XL1'D'
00017251 000000                            31162          DC    AL3(0)
00017254 00000D48                          31163          DC    AL4(3400)
00017258 00000000                          31164          DC    4X'00'
0001725C 00000000                          31165          DC    Q(@@STATIC)
00017260 00000000                          31166          DC    X'00000000'
00017264 00000638                          31167          DC    X'00000638'
00017268 0000000000014658                  31168          DC    ADL8(@DATA)
00017270 00000000                          31169          DC    X'00000000'
00017274 00001DF4                          31170          DC    X'00001DF4'
                                           31171 *
00017278 0D                                31172          DC    XL1'D'
00017279 000000                            31173          DC    AL3(0)
0001727C 00000D70                          31174          DC    AL4(3440)
00017280 00000000                          31175          DC    4X'00'
00017284 00000000                          31176          DC    Q(@@STATIC)
00017288 00000000                          31177          DC    X'00000000'
0001728C 00000640                          31178          DC    X'00000640'
00017290 0000000000014658                  31179          DC    ADL8(@DATA)
00017298 00000000                          31180          DC    X'00000000'
                                                                                                                           Page  616 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0001729C 00001DFE                          31181          DC    X'00001DFE'
                                           31182 *
000172A0 0D                                31183          DC    XL1'D'
000172A1 000000                            31184          DC    AL3(0)
000172A4 00000D98                          31185          DC    AL4(3480)
000172A8 00000000                          31186          DC    4X'00'
000172AC 00000000                          31187          DC    Q(@@STATIC)
000172B0 00000000                          31188          DC    X'00000000'
000172B4 00000648                          31189          DC    X'00000648'
000172B8 0000000000014658                  31190          DC    ADL8(@DATA)
000172C0 00000000                          31191          DC    X'00000000'
000172C4 00001E0A                          31192          DC    X'00001E0A'
                                           31193 *
000172C8 0D                                31194          DC    XL1'D'
000172C9 000000                            31195          DC    AL3(0)
000172CC 00000DC0                          31196          DC    AL4(3520)
000172D0 00000000                          31197          DC    4X'00'
000172D4 00000000                          31198          DC    Q(@@STATIC)
000172D8 00000000                          31199          DC    X'00000000'
000172DC 00000650                          31200          DC    X'00000650'
000172E0 0000000000014658                  31201          DC    ADL8(@DATA)
000172E8 00000000                          31202          DC    X'00000000'
000172EC 00001E16                          31203          DC    X'00001E16'
                                           31204 *
000172F0 0D                                31205          DC    XL1'D'
000172F1 000000                            31206          DC    AL3(0)
000172F4 00000DE8                          31207          DC    AL4(3560)
000172F8 00000000                          31208          DC    4X'00'
000172FC 00000000                          31209          DC    Q(@@STATIC)
00017300 00000000                          31210          DC    X'00000000'
00017304 00000658                          31211          DC    X'00000658'
00017308 0000000000014658                  31212          DC    ADL8(@DATA)
00017310 00000000                          31213          DC    X'00000000'
00017314 00001E24                          31214          DC    X'00001E24'
                                           31215 *
00017318 0D                                31216          DC    XL1'D'
00017319 000000                            31217          DC    AL3(0)
0001731C 00000E10                          31218          DC    AL4(3600)
00017320 00000000                          31219          DC    4X'00'
00017324 00000000                          31220          DC    Q(@@STATIC)
00017328 00000000                          31221          DC    X'00000000'
0001732C 00000660                          31222          DC    X'00000660'
00017330 0000000000014658                  31223          DC    ADL8(@DATA)
00017338 00000000                          31224          DC    X'00000000'
0001733C 00001E2C                          31225          DC    X'00001E2C'
                                           31226 *
00017340 0D                                31227          DC    XL1'D'
00017341 000000                            31228          DC    AL3(0)
00017344 00000E38                          31229          DC    AL4(3640)
00017348 00000000                          31230          DC    4X'00'
0001734C 00000000                          31231          DC    Q(@@STATIC)
00017350 00000000                          31232          DC    X'00000000'
                                                                                                                           Page  617 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00017354 00000668                          31233          DC    X'00000668'
00017358 0000000000014658                  31234          DC    ADL8(@DATA)
00017360 00000000                          31235          DC    X'00000000'
00017364 00001E36                          31236          DC    X'00001E36'
                                           31237 *
00017368 0D                                31238          DC    XL1'D'
00017369 000000                            31239          DC    AL3(0)
0001736C 00000E60                          31240          DC    AL4(3680)
00017370 00000000                          31241          DC    4X'00'
00017374 00000000                          31242          DC    Q(@@STATIC)
00017378 00000000                          31243          DC    X'00000000'
0001737C 00000670                          31244          DC    X'00000670'
00017380 0000000000014658                  31245          DC    ADL8(@DATA)
00017388 00000000                          31246          DC    X'00000000'
0001738C 00001E42                          31247          DC    X'00001E42'
                                           31248 *
00017390 0D                                31249          DC    XL1'D'
00017391 000000                            31250          DC    AL3(0)
00017394 00000E88                          31251          DC    AL4(3720)
00017398 00000000                          31252          DC    4X'00'
0001739C 00000000                          31253          DC    Q(@@STATIC)
000173A0 00000000                          31254          DC    X'00000000'
000173A4 00000678                          31255          DC    X'00000678'
000173A8 0000000000014658                  31256          DC    ADL8(@DATA)
000173B0 00000000                          31257          DC    X'00000000'
000173B4 00001DEE                          31258          DC    X'00001DEE'
                                           31259 *
000173B8 0D                                31260          DC    XL1'D'
000173B9 000000                            31261          DC    AL3(0)
000173BC 00000EB0                          31262          DC    AL4(3760)
000173C0 00000000                          31263          DC    4X'00'
000173C4 00000000                          31264          DC    Q(@@STATIC)
000173C8 00000000                          31265          DC    X'00000000'
000173CC 00000680                          31266          DC    X'00000680'
000173D0 0000000000014658                  31267          DC    ADL8(@DATA)
000173D8 00000000                          31268          DC    X'00000000'
000173DC 00001E24                          31269          DC    X'00001E24'
                                           31270 *
000173E0 0D                                31271          DC    XL1'D'
000173E1 000000                            31272          DC    AL3(0)
000173E4 00000ED8                          31273          DC    AL4(3800)
000173E8 00000000                          31274          DC    4X'00'
000173EC 00000000                          31275          DC    Q(@@STATIC)
000173F0 00000000                          31276          DC    X'00000000'
000173F4 00000688                          31277          DC    X'00000688'
000173F8 0000000000014658                  31278          DC    ADL8(@DATA)
00017400 00000000                          31279          DC    X'00000000'
00017404 00001E4C                          31280          DC    X'00001E4C'
                                           31281 *
00017408 0D                                31282          DC    XL1'D'
00017409 000000                            31283          DC    AL3(0)
0001740C 00000F00                          31284          DC    AL4(3840)
                                                                                                                           Page  618 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00017410 00000000                          31285          DC    4X'00'
00017414 00000000                          31286          DC    Q(@@STATIC)
00017418 00000000                          31287          DC    X'00000000'
0001741C 00000690                          31288          DC    X'00000690'
00017420 0000000000014658                  31289          DC    ADL8(@DATA)
00017428 00000000                          31290          DC    X'00000000'
0001742C 00001E5A                          31291          DC    X'00001E5A'
                                           31292 *
00017430 0D                                31293          DC    XL1'D'
00017431 000000                            31294          DC    AL3(0)
00017434 00000F28                          31295          DC    AL4(3880)
00017438 00000000                          31296          DC    4X'00'
0001743C 00000000                          31297          DC    Q(@@STATIC)
00017440 00000000                          31298          DC    X'00000000'
00017444 00000698                          31299          DC    X'00000698'
00017448 0000000000014658                  31300          DC    ADL8(@DATA)
00017450 00000000                          31301          DC    X'00000000'
00017454 00001E60                          31302          DC    X'00001E60'
                                           31303 *
00017458 0D                                31304          DC    XL1'D'
00017459 000000                            31305          DC    AL3(0)
0001745C 00000F50                          31306          DC    AL4(3920)
00017460 00000000                          31307          DC    4X'00'
00017464 00000000                          31308          DC    Q(@@STATIC)
00017468 00000000                          31309          DC    X'00000000'
0001746C 000006A0                          31310          DC    X'000006A0'
00017470 0000000000014658                  31311          DC    ADL8(@DATA)
00017478 00000000                          31312          DC    X'00000000'
0001747C 00001E6E                          31313          DC    X'00001E6E'
                                           31314 *
00017480 0D                                31315          DC    XL1'D'
00017481 000000                            31316          DC    AL3(0)
00017484 00000F78                          31317          DC    AL4(3960)
00017488 00000000                          31318          DC    4X'00'
0001748C 00000000                          31319          DC    Q(@@STATIC)
00017490 00000000                          31320          DC    X'00000000'
00017494 000006A8                          31321          DC    X'000006A8'
00017498 0000000000014658                  31322          DC    ADL8(@DATA)
000174A0 00000000                          31323          DC    X'00000000'
000174A4 00001E7A                          31324          DC    X'00001E7A'
                                           31325 *
000174A8 0D                                31326          DC    XL1'D'
000174A9 000000                            31327          DC    AL3(0)
000174AC 00000FA0                          31328          DC    AL4(4000)
000174B0 00000000                          31329          DC    4X'00'
000174B4 00000000                          31330          DC    Q(@@STATIC)
000174B8 00000000                          31331          DC    X'00000000'
000174BC 000006B0                          31332          DC    X'000006B0'
000174C0 0000000000014658                  31333          DC    ADL8(@DATA)
000174C8 00000000                          31334          DC    X'00000000'
000174CC 00001E90                          31335          DC    X'00001E90'
                                           31336 *
                                                                                                                           Page  619 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000174D0 0D                                31337          DC    XL1'D'
000174D1 000000                            31338          DC    AL3(0)
000174D4 00000FC8                          31339          DC    AL4(4040)
000174D8 00000000                          31340          DC    4X'00'
000174DC 00000000                          31341          DC    Q(@@STATIC)
000174E0 00000000                          31342          DC    X'00000000'
000174E4 000006B8                          31343          DC    X'000006B8'
000174E8 0000000000014658                  31344          DC    ADL8(@DATA)
000174F0 00000000                          31345          DC    X'00000000'
000174F4 00001EA0                          31346          DC    X'00001EA0'
                                           31347 *
000174F8 0D                                31348          DC    XL1'D'
000174F9 000000                            31349          DC    AL3(0)
000174FC 00000FF0                          31350          DC    AL4(4080)
00017500 00000000                          31351          DC    4X'00'
00017504 00000000                          31352          DC    Q(@@STATIC)
00017508 00000000                          31353          DC    X'00000000'
0001750C 000006C0                          31354          DC    X'000006C0'
00017510 0000000000014658                  31355          DC    ADL8(@DATA)
00017518 00000000                          31356          DC    X'00000000'
0001751C 00001EB4                          31357          DC    X'00001EB4'
                                           31358 *
00017520 0D                                31359          DC    XL1'D'
00017521 000000                            31360          DC    AL3(0)
00017524 00001018                          31361          DC    AL4(4120)
00017528 00000000                          31362          DC    4X'00'
0001752C 00000000                          31363          DC    Q(@@STATIC)
00017530 00000000                          31364          DC    X'00000000'
00017534 000006C8                          31365          DC    X'000006C8'
00017538 0000000000014658                  31366          DC    ADL8(@DATA)
00017540 00000000                          31367          DC    X'00000000'
00017544 00001EC4                          31368          DC    X'00001EC4'
                                           31369 *
00017548 0D                                31370          DC    XL1'D'
00017549 000000                            31371          DC    AL3(0)
0001754C 00000000                          31372          DC    AL4(0)
00017550 00000000                          31373          DC    4X'00'
00017554 00000000                          31374          DC    Q(@@STATIC)
00017558 00000000                          31375          DC    X'00000000'
0001755C 000006D0                          31376          DC    X'000006D0'
00017560 0000000000014658                  31377          DC    ADL8(@DATA)
00017568 00000000                          31378          DC    X'00000000'
0001756C 00001DFE                          31379          DC    X'00001DFE'
                                           31380 *
                                           31381          END
                                                 Relocation Dictionary                                                     Page  620 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000067 000000F8   Q 4      +
 00000002 00000002 000001F8   A 4      +
 00000002 00000002 00000220   A 4      +
 00000002 00000002 00000228   A 4      +
 00000002 00000067 000002D0   Q 4      +
 00000002 00000002 000003D8   A 4      +
 00000002 00000002 00000400   A 4      +
 00000002 00000002 00000408   A 4      +
 00000002 00000017 000004D0   A 4      +
 00000002 00000002 000004F8   A 4      +
 00000002 00000002 00000520   A 4      +
 00000002 00000002 00000528   A 4      +
 00000002 00000019 00000610   A 4      +
 00000002 00000021 00000618   A 4      +
 00000002 00000002 00000640   A 4      +
 00000002 00000002 00000668   A 4      +
 00000002 00000002 00000670   A 4      +
 00000002 00000019 00000758   A 4      +
 00000002 00000021 00000760   A 4      +
 00000002 00000002 00000788   A 4      +
 00000002 00000002 000007B0   A 4      +
 00000002 00000002 000007B8   A 4      +
 00000002 00000019 00000898   A 4      +
 00000002 00000021 000008A0   A 4      +
 00000002 00000002 000008C8   A 4      +
 00000002 00000002 000008F0   A 4      +
 00000002 00000002 000008F8   A 4      +
 00000002 00000017 000009C8   A 4      +
 00000002 00000002 000009F0   A 4      +
 00000002 00000002 00000A18   A 4      +
 00000002 00000002 00000A20   A 4      +
 00000002 00000019 00000B00   A 4      +
 00000002 00000021 00000B08   A 4      +
 00000002 00000002 00000B30   A 4      +
 00000002 00000002 00000B58   A 4      +
 00000002 00000002 00000B60   A 4      +
 00000002 00000019 00000C48   A 4      +
 00000002 00000021 00000C50   A 4      +
 00000002 00000002 00000C70   A 4      +
 00000002 00000002 00000C98   A 4      +
 00000002 00000002 00000CA0   A 4      +
 00000002 00000064 00000D58   A 4      +
 00000002 00000002 00000D78   A 4      +
 00000002 00000002 00000DA0   A 4      +
 00000002 00000002 00000DA8   A 4      +
 00000002 00000031 00000EA8   A 4      +
 00000002 00000039 00000EB0   A 4      +
 00000002 00000068 00000EB8   A 4      +
 00000002 00000068 00000EC0   A 4      +
 00000002 00000002 00000EE8   A 4      +
                                                 Relocation Dictionary                                                     Page  621 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000F10   A 4      +
 00000002 00000002 00000F18   A 4      +
 00000002 00000002 00001028   A 4      +
 00000002 00000068 00001030   A 4      +
 00000002 00000039 00001038   A 4      +
 00000002 00000068 00001040   A 4      +
 00000002 00000002 00001060   A 4      +
 00000002 00000002 00001088   A 4      +
 00000002 00000002 00001090   A 4      +
 00000002 00000042 00001160   A 4      +
 00000002 00000002 000011B0   A 4      +
 00000002 00000002 000011B8   A 4      +
 00000002 00000002 00001228   A 4      +
 00000002 00000002 00001250   A 4      +
 00000002 00000002 00001258   A 4      +
 00000002 00000002 000012C8   A 4      +
 00000002 00000002 00001350   A 4      +
 00000002 00000002 00001378   A 4      +
 00000002 00000002 00001380   A 4      +
 00000002 00000002 000013F8   A 4      +
 00000002 00000002 00001488   A 4      +
 00000002 00000002 000014B0   A 4      +
 00000002 00000002 000014B8   A 4      +
 00000002 00000002 00001588   A 4      +
 00000002 00000002 00001590   A 4      +
 00000002 00000002 000015E8   A 4      +
 00000002 00000002 000015F0   A 4      +
 00000002 00000002 00001688   A 4      +
 00000002 00000002 00001690   A 4      +
 00000002 00000002 00001718   A 4      +
 00000002 00000002 00001720   A 4      +
 00000002 00000002 000017C0   A 4      +
 00000002 00000002 000017C8   A 4      +
 00000002 00000002 00001878   A 4      +
 00000002 00000002 00001880   A 4      +
 00000002 00000002 00001948   A 4      +
 00000002 00000002 00001970   A 4      +
 00000002 00000002 00001978   A 4      +
 00000002 00000067 00001A54   Q 4      +
 00000002 0000002F 00001A58   A 4      +
 00000002 00000068 00001A60   A 4      +
 00000002 00000002 00001B10   A 4      +
 00000002 00000002 00001B18   A 4      +
 00000002 00000002 00001B90   A 4      +
 00000002 00000002 00001B98   A 4      +
 00000002 00000002 00001CA8   A 4      +
 00000002 00000002 00001CB0   A 4      +
 00000002 00000002 00001D08   A 4      +
 00000002 00000002 00001D30   A 4      +
 00000002 00000002 00001D38   A 4      +
 00000002 00000041 00001E10   A 4      +
 00000002 00000044 00001E18   A 4      +
 00000002 00000002 00001E40   A 4      +
                                                 Relocation Dictionary                                                     Page  622 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00001E68   A 4      +
 00000002 00000002 00001E70   A 4      +
 00000002 00000041 00001F58   A 4      +
 00000002 00000044 00001F60   A 4      +
 00000002 00000002 00001F88   A 4      +
 00000002 00000002 00001FB0   A 4      +
 00000002 00000002 00001FB8   A 4      +
 00000002 00000002 00002138   A 4      +
 00000002 00000037 00002140   A 4      +
 00000002 00000041 00002148   A 4      +
 00000002 00000058 00002150   A 4      +
 00000002 00000068 00002158   A 4      +
 00000002 00000068 00002160   A 4      +
 00000002 00000044 00002168   A 4      +
 00000002 0000002A 00002170   A 4      +
 00000002 00000002 000021A0   A 4      +
 00000002 00000002 000021C8   A 4      +
 00000002 00000002 000021D0   A 4      +
 00000002 00000002 00002290   A 4      +
 00000002 00000002 000022B8   A 4      +
 00000002 00000002 000022E0   A 4      +
 00000002 00000002 000022E8   A 4      +
 00000002 00000041 000023E8   A 4      +
 00000002 00000002 000023F0   A 4      +
 00000002 00000044 000023F8   A 4      +
 00000002 00000002 00002420   A 4      +
 00000002 00000002 00002448   A 4      +
 00000002 00000002 00002450   A 4      +
 00000002 00000003 00002500   A 4      +
 00000002 00000002 000025F8   A 4      +
 00000002 00000002 00002600   A 4      +
 00000002 00000002 00002680   A 4      +
 00000002 00000002 000026A8   A 4      +
 00000002 00000002 000026B0   A 4      +
 00000002 00000002 00002748   A 4      +
 00000002 00000002 00002908   A 4      +
 00000002 00000002 00002930   A 4      +
 00000002 00000002 00002938   A 4      +
 00000002 00000041 000029F8   A 4      +
 00000002 00000044 00002A00   A 4      +
 00000002 00000014 00002A08   A 4      +
 00000002 00000002 00002A10   A 4      +
 00000002 00000002 00002A18   A 4      +
 00000002 00000047 00002A20   A 4      +
 00000002 00000002 00002A28   A 4      +
 00000002 00000002 00002A30   A 4      +
 00000002 00000002 00002A38   A 4      +
 00000002 00000002 00002BC0   A 4      +
 00000002 00000002 00002BE8   A 4      +
 00000002 00000002 00002BF0   A 4      +
 00000002 00000002 00002CD0   A 4      +
 00000002 00000002 00002D00   A 4      +
 00000002 00000002 00002D28   A 4      +
                                                 Relocation Dictionary                                                     Page  623 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00002D30   A 4      +
 00000002 00000002 00002E18   A 4      +
 00000002 00000002 00002E40   A 4      +
 00000002 00000002 00002E68   A 4      +
 00000002 00000002 00002E70   A 4      +
 00000002 00000022 00002EDC   Q 4      +
 00000002 00000002 00002FC8   A 4      +
 00000002 00000002 00002FD0   A 4      +
 00000002 00000002 00003028   A 4      +
 00000002 00000002 00003050   A 4      +
 00000002 00000002 00003058   A 4      +
 00000002 00000006 00003178   A 4      +
 00000002 00000002 00003180   A 4      +
 00000002 00000002 000031B0   A 4      +
 00000002 00000002 000031D8   A 4      +
 00000002 00000002 000031E0   A 4      +
 00000002 00000002 000032B0   A 4      +
 00000002 00000002 000032E0   A 4      +
 00000002 00000002 00003308   A 4      +
 00000002 00000002 00003310   A 4      +
 00000002 00000002 000033E0   A 4      +
 00000002 00000002 00003410   A 4      +
 00000002 00000002 00003438   A 4      +
 00000002 00000002 00003440   A 4      +
 00000002 00000002 00003510   A 4      +
 00000002 00000002 00003540   A 4      +
 00000002 00000002 00003568   A 4      +
 00000002 00000002 00003570   A 4      +
 00000002 00000002 00003668   A 4      +
 00000002 00000002 00003670   A 4      +
 00000002 00000002 000036A0   A 4      +
 00000002 00000002 000036C8   A 4      +
 00000002 00000002 000036D0   A 4      +
 00000002 00000061 00003758   A 4      +
 00000002 00000002 00003760   A 4      +
 00000002 00000002 00003768   A 4      +
 00000002 00000002 00003770   A 4      +
 00000002 00000064 00003778   A 4      +
 00000002 00000002 00003780   A 4      +
 00000002 00000002 00003970   A 4      +
 00000002 00000002 00003978   A 4      +
 00000002 00000068 000039E0   A 4      +
 00000002 00000002 00003A10   A 4      +
 00000002 00000002 00003A38   A 4      +
 00000002 00000002 00003A40   A 4      +
 00000002 00000002 00003AC8   A 4      +
 00000002 00000002 00003B40   A 4      +
 00000002 00000002 00003B68   A 4      +
 00000002 00000002 00003B70   A 4      +
 00000002 00000002 00003C00   A 4      +
 00000002 00000049 00003C08   A 4      +
 00000002 00000002 00003C10   A 4      +
 00000002 00000051 00003C18   A 4      +
                                                 Relocation Dictionary                                                     Page  624 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00003CC0   A 4      +
 00000002 00000002 00003CE8   A 4      +
 00000002 00000002 00003CF0   A 4      +
 00000002 00000041 00003DC8   A 4      +
 00000002 00000044 00003DD0   A 4      +
 00000002 00000002 00003E00   A 4      +
 00000002 00000002 00003E28   A 4      +
 00000002 00000002 00003E30   A 4      +
 00000002 00000002 00003EB8   A 4      +
 00000002 00000002 00003F80   A 4      +
 00000002 00000002 00003F88   A 4      +
 00000002 00000002 00004020   A 4      +
 00000002 00000002 00004028   A 4      +
 00000002 00000002 000040D0   A 4      +
 00000002 00000002 000040F8   A 4      +
 00000002 00000002 00004100   A 4      +
 00000002 00000067 000041BC   Q 4      +
 00000002 00000002 000041E8   A 4      +
 00000002 00000002 00004210   A 4      +
 00000002 00000002 00004218   A 4      +
 00000002 00000067 000042D4   Q 4      +
 00000002 00000002 00004300   A 4      +
 00000002 00000002 00004328   A 4      +
 00000002 00000002 00004330   A 4      +
 00000002 00000059 000043C8   A 4      +
 00000002 00000002 000043D0   A 4      +
 00000002 0000005D 000043D8   A 4      +
 00000002 00000002 000044B8   A 4      +
 00000002 00000002 000044C0   A 4      +
 00000002 00000002 00004548   A 4      +
 00000002 00000002 00004570   A 4      +
 00000002 00000002 00004578   A 4      +
 00000002 00000035 00004608   A 4      +
 00000002 00000068 00004610   A 4      +
 00000002 00000002 000046C0   A 4      +
 00000002 00000002 000046E8   A 4      +
 00000002 00000002 000046F0   A 4      +
 00000002 00000002 00004778   A 4      +
 00000002 0000001B 00004780   A 4      +
 00000002 00000068 00004788   A 4      +
 00000002 00000035 00004790   A 4      +
 00000002 00000018 00004798   A 4      +
 00000002 00000002 000047A0   A 4      +
 00000002 00000002 00004950   A 4      +
 00000002 00000002 00004978   A 4      +
 00000002 00000002 00004980   A 4      +
 00000002 00000007 00004A00   A 4      +
 00000002 00000068 00004A08   A 4      +
 00000002 00000068 00004A10   A 4      +
 00000002 00000060 00004A18   Q 4      +
 00000002 00000002 00004A20   A 4      +
 00000002 00000039 00004A28   A 4      +
 00000002 00000002 00004DA8   A 4      +
                                                 Relocation Dictionary                                                     Page  625 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00004DD0   A 4      +
 00000002 00000002 00004DD8   A 4      +
 00000002 00000002 00004F48   A 4      +
 00000002 00000002 00004F50   A 4      +
 00000002 00000065 00004F58   A 4      +
 00000002 00000068 00004F60   A 4      +
 00000002 00000039 00004F68   A 4      +
 00000002 00000068 00004F70   A 4      +
 00000002 00000002 00004F78   A 4      +
 00000002 00000002 000050D8   A 4      +
 00000002 00000002 00005100   A 4      +
 00000002 00000002 00005108   A 4      +
 00000002 00000033 00005378   A 4      +
 00000002 00000026 00005380   A 4      +
 00000002 00000065 00005388   A 4      +
 00000002 00000068 00005390   A 4      +
 00000002 0000005B 00005398   A 4      +
 00000002 00000005 000053A0   A 4      +
 00000002 00000002 000053A8   A 4      +
 00000002 00000002 000053B0   A 4      +
 00000002 0000001B 000053B8   A 4      +
 00000002 00000002 000053C0   A 4      +
 00000002 00000002 000053C8   A 4      +
 00000002 0000005F 000053D0   A 4      +
 00000002 00000002 00005408   A 4      +
 00000002 00000002 00005430   A 4      +
 00000002 00000002 00005438   A 4      +
 00000002 0000002B 00005530   A 4      +
 00000002 00000026 00005538   A 4      +
 00000002 00000065 00005540   A 4      +
 00000002 00000068 00005548   A 4      +
 00000002 00000033 00005550   A 4      +
 00000002 0000005B 00005558   A 4      +
 00000002 0000005F 00005560   A 4      +
 00000002 00000002 00005568   A 4      +
 00000002 00000002 00005570   A 4      +
 00000002 00000002 00005578   A 4      +
 00000002 00000002 00005580   A 4      +
 00000002 00000063 00005588   A 4      +
 00000002 00000002 00005860   A 4      +
 00000002 00000002 00005888   A 4      +
 00000002 00000002 00005890   A 4      +
 00000002 00000034 00005918   A 4      +
 00000002 0000000F 00005920   A 4      +
 00000002 0000002D 00005928   A 4      +
 00000002 00000002 00005930   A 4      +
 00000002 00000002 00005938   A 4      +
 00000002 00000002 00005A28   A 4      +
 00000002 00000002 00005A50   A 4      +
 00000002 00000002 00005A58   A 4      +
 00000002 00000013 00005B18   A 4      +
 00000002 00000015 00005B20   A 4      +
 00000002 00000018 00005B28   A 4      +
                                                 Relocation Dictionary                                                     Page  626 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000016 00005B30   A 4      +
 00000002 00000002 00005B38   A 4      +
 00000002 00000002 00005C10   A 4      +
 00000002 00000002 00005C38   A 4      +
 00000002 00000002 00005C40   A 4      +
 00000002 00000002 00005CD8   A 4      +
 00000002 00000068 00005CE0   A 4      +
 00000002 0000001B 00005CE8   A 4      +
 00000002 00000002 00005CF0   A 4      +
 00000002 00000002 00005CF8   A 4      +
 00000002 00000002 00005EA0   A 4      +
 00000002 00000002 00005EC8   A 4      +
 00000002 00000002 00005ED0   A 4      +
 00000002 00000041 00005F88   A 4      +
 00000002 00000065 00005F90   A 4      +
 00000002 00000068 00005F98   A 4      +
 00000002 00000044 00005FA0   A 4      +
 00000002 00000039 00005FA8   A 4      +
 00000002 00000068 00005FB0   A 4      +
 00000002 00000002 000062A0   A 4      +
 00000002 00000002 000062C8   A 4      +
 00000002 00000002 000062D0   A 4      +
 00000002 00000059 000064D8   A 4      +
 00000002 00000039 000064E0   A 4      +
 00000002 00000068 000064E8   A 4      +
 00000002 00000068 000064F0   A 4      +
 00000002 00000041 000064F8   A 4      +
 00000002 00000002 00006500   A 4      +
 00000002 00000044 00006508   A 4      +
 00000002 00000002 00006510   A 4      +
 00000002 00000065 00006518   A 4      +
 00000002 0000005D 00006520   A 4      +
 00000002 00000027 00006528   A 4      +
 00000002 00000002 00006530   A 4      +
 00000002 00000058 00006538   A 4      +
 00000002 0000002F 00006540   A 4      +
 00000002 00000002 00006548   A 4      +
 00000002 00000002 00006550   A 4      +
 00000002 00000023 00006558   A 4      +
 00000002 00000029 00006568   A 4      +
 00000002 00000058 00006D38   A 4      +
 00000002 00000068 00006D40   A 4      +
 00000002 00000068 00006D48   A 4      +
 00000002 0000002F 00006D50   A 4      +
 00000002 00000041 00006D58   A 4      +
 00000002 00000002 00006D60   A 4      +
 00000002 00000044 00006D68   A 4      +
 00000002 00000002 00006D70   A 4      +
 00000002 00000002 00006D78   A 4      +
 00000002 00000002 00006D80   A 4      +
 00000002 00000065 00006D88   A 4      +
 00000002 00000027 00006D98   A 4      +
 00000002 00000030 00006DA0   A 4      +
                                                 Relocation Dictionary                                                     Page  627 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000061 00006DA8   A 4      +
 00000002 00000002 00006DB8   A 4      +
 00000002 00000064 00006DC0   A 4      +
 00000002 00000027 00007750   A 4      +
 00000002 00000002 00007758   A 4      +
 00000002 00000058 00007760   A 4      +
 00000002 00000068 00007768   A 4      +
 00000002 00000068 00007770   A 4      +
 00000002 0000002F 00007778   A 4      +
 00000002 00000041 00007780   A 4      +
 00000002 00000002 00007788   A 4      +
 00000002 00000044 00007790   A 4      +
 00000002 00000002 00007798   A 4      +
 00000002 00000002 000077A0   A 4      +
 00000002 00000065 000077A8   A 4      +
 00000002 00000055 000077B8   A 4      +
 00000002 00000059 000077C0   A 4      +
 00000002 0000002C 000077C8   A 4      +
 00000002 00000041 00007FB8   A 4      +
 00000002 00000002 00007FC0   A 4      +
 00000002 00000044 00007FC8   A 4      +
 00000002 00000065 00007FD0   A 4      +
 00000002 00000068 00007FD8   A 4      +
 00000002 00000002 00007FE0   A 4      +
 00000002 00000025 00008008   A 4      +
 00000002 00000002 00008010   A 4      +
 00000002 00000020 00008018   A 4      +
 00000002 0000005D 00008028   A 4      +
 00000002 00000002 00008030   A 4      +
 00000002 0000005C 00008040   A 4      +
 00000002 00000039 00008048   A 4      +
 00000002 00000068 00008050   A 4      +
 00000002 0000005B 00008060   A 4      +
 00000002 00000002 00008068   A 4      +
 00000002 0000005F 00008070   A 4      +
 00000002 00000002 00008078   A 4      +
 00000002 00000044 00008848   A 4      +
 00000002 00000002 00008850   A 4      +
 00000002 00000025 00008858   A 4      +
 00000002 00000002 00008860   A 4      +
 00000002 00000068 00008868   A 4      +
 00000002 0000005A 00008870   A 4      +
 00000002 00000002 00008878   A 4      +
 00000002 00000002 00008888   A 4      +
 00000002 00000002 00008AE8   A 4      +
 00000002 00000002 00008B10   A 4      +
 00000002 00000002 00008B18   A 4      +
 00000002 00000059 00008C58   A 4      +
 00000002 00000002 00008C60   A 4      +
 00000002 0000005D 00008C68   A 4      +
 00000002 0000002E 00008C70   A 4      +
 00000002 00000065 00008C78   A 4      +
 00000002 00000068 00008C80   A 4      +
                                                 Relocation Dictionary                                                     Page  628 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000034 00008C88   A 4      +
 00000002 00000002 00008C90   A 4      +
 00000002 00000002 00008C98   A 4      +
 00000002 00000041 00008CA0   A 4      +
 00000002 00000044 00008CA8   A 4      +
 00000002 00000002 00008CB0   A 4      +
 00000002 00000002 00008CB8   A 4      +
 00000002 00000068 00008CC0   A 4      +
 00000002 00000008 00008CC8   A 4      +
 00000002 00000002 00008CD0   A 4      +
 00000002 00000002 00008CD8   A 4      +
 00000002 00000002 000091D0   A 4      +
 00000002 00000002 000091F8   A 4      +
 00000002 00000002 00009200   A 4      +
 00000002 00000002 000092B8   A 4      +
 00000002 00000002 000092F8   A 4      +
 00000002 00000002 00009320   A 4      +
 00000002 00000002 00009328   A 4      +
 00000002 0000004B 00009398   A 4      +
 00000002 00000002 000093A0   A 4      +
 00000002 00000002 00009470   A 4      +
 00000002 00000002 00009498   A 4      +
 00000002 00000002 000094A0   A 4      +
 00000002 00000041 00009510   A 4      +
 00000002 00000044 00009518   A 4      +
 00000002 00000002 00009520   A 4      +
 00000002 00000020 00009528   A 4      +
 00000002 00000002 00009640   A 4      +
 00000002 00000002 00009668   A 4      +
 00000002 00000002 00009670   A 4      +
 00000002 00000002 00009750   A 4      +
 00000002 00000002 00009788   A 4      +
 00000002 00000002 000097B0   A 4      +
 00000002 00000002 000097B8   A 4      +
 00000002 00000002 00009878   A 4      +
 00000002 00000002 000098B8   A 4      +
 00000002 00000002 000098E0   A 4      +
 00000002 00000002 000098E8   A 4      +
 00000002 00000002 00009A20   A 4      +
 00000002 00000068 00009A28   A 4      +
 00000002 0000001E 00009A30   A 4      +
 00000002 00000002 00009A38   A 4      +
 00000002 00000002 00009A78   A 4      +
 00000002 00000002 00009AA0   A 4      +
 00000002 00000002 00009AA8   A 4      +
 00000002 0000001C 00009B88   A 4      +
 00000002 00000068 00009B90   A 4      +
 00000002 00000002 00009B98   A 4      +
 00000002 00000002 00009BD0   A 4      +
 00000002 00000002 00009BF8   A 4      +
 00000002 00000002 00009C00   A 4      +
 00000002 00000002 00009CD8   A 4      +
 00000002 00000068 00009CE0   A 4      +
                                                 Relocation Dictionary                                                     Page  629 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00009D20   A 4      +
 00000002 00000002 00009D48   A 4      +
 00000002 00000002 00009D50   A 4      +
 00000002 00000025 00009E88   A 4      +
 00000002 00000035 00009E90   A 4      +
 00000002 00000068 00009E98   A 4      +
 00000002 00000016 00009EA0   A 4      +
 00000002 00000002 00009EA8   A 4      +
 00000002 00000002 00009ED8   A 4      +
 00000002 00000002 00009F00   A 4      +
 00000002 00000002 00009F08   A 4      +
 00000002 00000048 0000A028   A 4      +
 00000002 00000002 0000A030   A 4      +
 00000002 00000002 0000A060   A 4      +
 00000002 00000002 0000A088   A 4      +
 00000002 00000002 0000A090   A 4      +
 00000002 00000068 0000A138   A 4      +
 00000002 0000005B 0000A140   A 4      +
 00000002 00000002 0000A148   A 4      +
 00000002 00000002 0000A150   A 4      +
 00000002 00000065 0000A158   A 4      +
 00000002 00000035 0000A160   A 4      +
 00000002 0000005F 0000A168   A 4      +
 00000002 0000000B 0000A170   A 4      +
 00000002 00000039 0000A178   A 4      +
 00000002 00000068 0000A180   A 4      +
 00000002 0000002F 0000A188   A 4      +
 00000002 00000028 0000A190   A 4      +
 00000002 00000002 0000A198   A 4      +
 00000002 00000002 0000A1A0   A 4      +
 00000002 00000002 0000A1A8   A 4      +
 00000002 00000002 0000A1B0   A 4      +
 00000002 00000002 0000A1B8   A 4      +
 00000002 0000004B 0000A1C0   A 4      +
 00000002 0000001A 0000A1C8   A 4      +
 00000002 00000002 0000A1D0   A 4      +
 00000002 00000002 0000A1D8   A 4      +
 00000002 00000002 0000A630   A 4      +
 00000002 00000002 0000A658   A 4      +
 00000002 00000002 0000A660   A 4      +
 00000002 0000005B 0000A6D8   A 4      +
 00000002 00000002 0000A6E0   A 4      +
 00000002 0000005F 0000A6E8   A 4      +
 00000002 00000002 0000A6F0   A 4      +
 00000002 00000002 0000A6F8   A 4      +
 00000002 00000002 0000A700   A 4      +
 00000002 00000046 0000A708   A 4      +
 00000002 00000002 0000A710   A 4      +
 00000002 00000002 0000A8F8   A 4      +
 00000002 00000002 0000A920   A 4      +
 00000002 00000002 0000A928   A 4      +
 00000002 0000005B 0000A9A0   A 4      +
 00000002 00000002 0000A9A8   A 4      +
                                                 Relocation Dictionary                                                     Page  630 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 0000005F 0000A9B0   A 4      +
 00000002 00000002 0000A9B8   A 4      +
 00000002 00000002 0000A9C0   A 4      +
 00000002 00000002 0000A9C8   A 4      +
 00000002 00000002 0000AB08   A 4      +
 00000002 00000002 0000AB30   A 4      +
 00000002 00000002 0000AB38   A 4      +
 00000002 00000002 0000ABB8   A 4      +
 00000002 00000012 0000ABC0   A 4      +
 00000002 00000002 0000ABC8   A 4      +
 00000002 00000002 0000ABD0   A 4      +
 00000002 00000068 0000ABD8   A 4      +
 00000002 00000002 0000ABE0   A 4      +
 00000002 00000002 0000AD20   A 4      +
 00000002 00000002 0000AD48   A 4      +
 00000002 00000002 0000AD50   A 4      +
 00000002 0000005B 0000ADD0   A 4      +
 00000002 00000002 0000ADD8   A 4      +
 00000002 00000039 0000ADE0   A 4      +
 00000002 00000068 0000ADE8   A 4      +
 00000002 00000068 0000ADF0   A 4      +
 00000002 00000002 0000ADF8   A 4      +
 00000002 00000002 0000AE00   A 4      +
 00000002 00000002 0000AE08   A 4      +
 00000002 0000005F 0000AE10   A 4      +
 00000002 0000005C 0000AE18   A 4      +
 00000002 00000002 0000AE20   A 4      +
 00000002 00000002 0000AE28   A 4      +
 00000002 00000002 0000B050   A 4      +
 00000002 00000002 0000B078   A 4      +
 00000002 00000002 0000B080   A 4      +
 00000002 00000002 0000B100   A 4      +
 00000002 00000012 0000B108   A 4      +
 00000002 00000002 0000B110   A 4      +
 00000002 0000001D 0000B118   A 4      +
 00000002 0000000B 0000B120   A 4      +
 00000002 00000002 0000B218   A 4      +
 00000002 00000002 0000B240   A 4      +
 00000002 00000002 0000B248   A 4      +
 00000002 00000002 0000B2F8   A 4      +
 00000002 00000027 0000B300   A 4      +
 00000002 00000002 0000B308   A 4      +
 00000002 00000058 0000B310   A 4      +
 00000002 00000068 0000B318   A 4      +
 00000002 00000068 0000B320   A 4      +
 00000002 0000002F 0000B328   A 4      +
 00000002 00000041 0000B330   A 4      +
 00000002 00000002 0000B338   A 4      +
 00000002 00000044 0000B340   A 4      +
 00000002 00000002 0000B348   A 4      +
 00000002 00000002 0000B350   A 4      +
 00000002 00000065 0000B358   A 4      +
 00000002 00000023 0000B360   A 4      +
                                                 Relocation Dictionary                                                     Page  631 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 0000004A 0000B368   A 4      +
 00000002 00000004 0000B370   A 4      +
 00000002 0000005E 0000B378   A 4      +
 00000002 0000005A 0000B380   A 4      +
 00000002 00000025 0000B390   A 4      +
 00000002 00000036 0000B398   A 4      +
 00000002 0000003A 0000B3A8   A 4      +
 00000002 00000002 0000BAA8   A 4      +
 00000002 00000002 0000BAB0   A 4      +
 00000002 00000068 0000BAB8   A 4      +
 00000002 00000002 0000BAC0   A 4      +
 00000002 00000002 0000BAC8   A 4      +
 00000002 00000002 0000BAD0   A 4      +
 00000002 00000002 0000BAD8   A 4      +
 00000002 00000068 0000BAE0   A 4      +
 00000002 0000003F 0000BAE8   A 4      +
 00000002 00000002 0000BAF0   A 4      +
 00000002 00000002 0000BAF8   A 4      +
 00000002 00000002 0000BB00   A 4      +
 00000002 00000002 0000BB08   A 4      +
 00000002 00000002 0000BB10   A 4      +
 00000002 0000000B 0000BB18   A 4      +
 00000002 00000002 0000BE18   A 4      +
 00000002 00000002 0000BE40   A 4      +
 00000002 00000002 0000BE48   A 4      +
 00000002 00000059 0000BEF8   A 4      +
 00000002 0000005D 0000BF00   A 4      +
 00000002 00000002 0000BF08   A 4      +
 00000002 0000003B 0000BF10   A 4      +
 00000002 00000053 0000BF18   A 4      +
 00000002 00000002 0000BF28   A 4      +
 00000002 00000002 0000BF30   A 4      +
 00000002 00000002 0000BF38   A 4      +
 00000002 00000002 0000BF40   A 4      +
 00000002 0000004C 0000BF48   A 4      +
 00000002 00000002 0000BF50   A 4      +
 00000002 0000004F 0000BF58   A 4      +
 00000002 00000002 0000BF60   A 4      +
 00000002 00000056 0000BF68   A 4      +
 00000002 00000002 0000C2D0   A 4      +
 00000002 00000002 0000C2F8   A 4      +
 00000002 00000002 0000C300   A 4      +
 00000002 0000000B 0000C3A8   A 4      +
 00000002 00000002 0000C3B8   A 4      +
 00000002 00000027 0000C3C0   A 4      +
 00000002 00000002 0000C3C8   A 4      +
 00000002 00000058 0000C3D0   A 4      +
 00000002 00000068 0000C3D8   A 4      +
 00000002 00000068 0000C3E0   A 4      +
 00000002 0000002F 0000C3E8   A 4      +
 00000002 00000041 0000C3F0   A 4      +
 00000002 00000002 0000C3F8   A 4      +
 00000002 00000044 0000C400   A 4      +
                                                 Relocation Dictionary                                                     Page  632 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 0000C408   A 4      +
 00000002 00000002 0000C410   A 4      +
 00000002 00000065 0000C418   A 4      +
 00000002 00000023 0000C420   A 4      +
 00000002 00000039 0000C428   A 4      +
 00000002 00000002 0000C430   A 4      +
 00000002 00000002 0000C438   A 4      +
 00000002 00000002 0000CBD0   A 4      +
 00000002 0000005A 0000CBD8   A 4      +
 00000002 00000068 0000CBE0   A 4      +
 00000002 00000026 0000CBE8   A 4      +
 00000002 00000065 0000CBF0   A 4      +
 00000002 00000025 0000CBF8   A 4      +
 00000002 00000002 0000CC00   A 4      +
 00000002 00000041 0000CC08   A 4      +
 00000002 00000002 0000CC10   A 4      +
 00000002 00000044 0000CC18   A 4      +
 00000002 00000002 0000CC28   A 4      +
 00000002 00000057 0000CC30   A 4      +
 00000002 00000002 0000CC38   A 4      +
 00000002 00000002 0000CC40   A 4      +
 00000002 00000002 0000CC48   A 4      +
 00000002 00000068 0000CC50   A 4      +
 00000002 0000003F 0000CC58   A 4      +
 00000002 00000002 0000CC60   A 4      +
 00000002 00000002 0000CC68   A 4      +
 00000002 00000002 0000CC70   A 4      +
 00000002 00000002 0000CC78   A 4      +
 00000002 0000000B 0000CC80   A 4      +
 00000002 00000002 0000D460   A 4      +
 00000002 00000002 0000D488   A 4      +
 00000002 00000002 0000D490   A 4      +
 00000002 0000005B 0000D508   A 4      +
 00000002 00000002 0000D510   A 4      +
 00000002 0000005F 0000D518   A 4      +
 00000002 00000002 0000D520   A 4      +
 00000002 00000002 0000D528   A 4      +
 00000002 0000001C 0000D530   A 4      +
 00000002 00000068 0000D538   A 4      +
 00000002 00000002 0000D540   A 4      +
 00000002 00000068 0000D548   A 4      +
 00000002 0000000A 0000D550   A 4      +
 00000002 00000002 0000D558   A 4      +
 00000002 00000002 0000D560   A 4      +
 00000002 00000002 0000D568   A 4      +
 00000002 00000002 0000D800   A 4      +
 00000002 00000002 0000D828   A 4      +
 00000002 00000002 0000D830   A 4      +
 00000002 00000002 0000D8B8   A 4      +
 00000002 00000035 0000D8C0   A 4      +
 00000002 00000068 0000D8C8   A 4      +
 00000002 00000066 0000D8D0   A 4      +
 00000002 00000002 0000D8D8   A 4      +
                                                 Relocation Dictionary                                                     Page  633 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000036 0000D8E0   A 4      +
 00000002 00000054 0000D8E8   A 4      +
 00000002 00000012 0000D8F0   A 4      +
 00000002 00000002 0000D8F8   A 4      +
 00000002 00000024 0000D900   A 4      +
 00000002 00000002 0000D908   A 4      +
 00000002 00000002 0000D910   A 4      +
 00000002 00000068 0000D918   A 4      +
 00000002 00000002 0000DAD0   A 4      +
 00000002 00000002 0000DAF8   A 4      +
 00000002 00000002 0000DB00   A 4      +
 00000002 00000068 0000DB80   A 4      +
 00000002 00000065 0000DB88   A 4      +
 00000002 00000002 0000DB90   A 4      +
 00000002 00000002 0000DB98   A 4      +
 00000002 00000002 0000DBA0   A 4      +
 00000002 00000002 0000DCB8   A 4      +
 00000002 00000002 0000DCE0   A 4      +
 00000002 00000002 0000DCE8   A 4      +
 00000002 00000002 0000DD90   A 4      +
 00000002 00000027 0000DDA0   A 4      +
 00000002 00000002 0000DDA8   A 4      +
 00000002 00000058 0000DDB0   A 4      +
 00000002 00000068 0000DDB8   A 4      +
 00000002 00000068 0000DDC0   A 4      +
 00000002 0000002F 0000DDC8   A 4      +
 00000002 00000041 0000DDD0   A 4      +
 00000002 00000002 0000DDD8   A 4      +
 00000002 00000044 0000DDE0   A 4      +
 00000002 00000002 0000DDE8   A 4      +
 00000002 00000002 0000DDF0   A 4      +
 00000002 00000065 0000DDF8   A 4      +
 00000002 00000023 0000DE00   A 4      +
 00000002 0000005B 0000DE08   A 4      +
 00000002 0000005F 0000DE10   A 4      +
 00000002 00000026 0000DE18   A 4      +
 00000002 00000002 0000DE20   A 4      +
 00000002 00000002 0000DE28   A 4      +
 00000002 00000068 0000E5C8   A 4      +
 00000002 00000065 0000E5D0   A 4      +
 00000002 00000002 0000E5D8   A 4      +
 00000002 0000005F 0000E5E0   A 4      +
 00000002 0000005B 0000E5E8   A 4      +
 00000002 00000025 0000E5F0   A 4      +
 00000002 00000002 0000E5F8   A 4      +
 00000002 00000002 0000E620   A 4      +
 00000002 00000002 0000E628   A 4      +
 00000002 00000002 0000E630   A 4      +
 00000002 00000002 0000E638   A 4      +
 00000002 00000057 0000E640   A 4      +
 00000002 00000002 0000E648   A 4      +
 00000002 00000002 0000EB28   A 4      +
 00000002 00000002 0000EB50   A 4      +
                                                 Relocation Dictionary                                                     Page  634 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 0000EB58   A 4      +
 00000002 0000005B 0000EBD0   A 4      +
 00000002 00000002 0000EBD8   A 4      +
 00000002 00000002 0000EBE0   A 4      +
 00000002 0000001E 0000EBE8   A 4      +
 00000002 00000068 0000EBF0   A 4      +
 00000002 00000065 0000EBF8   A 4      +
 00000002 00000002 0000EC00   A 4      +
 00000002 00000002 0000EC08   A 4      +
 00000002 00000002 0000EC10   A 4      +
 00000002 0000001C 0000EC18   A 4      +
 00000002 00000002 0000EC20   A 4      +
 00000002 00000068 0000EC28   A 4      +
 00000002 00000002 0000EC30   A 4      +
 00000002 0000000D 0000EC38   A 4      +
 00000002 00000002 0000EC40   A 4      +
 00000002 0000005F 0000EC48   A 4      +
 00000002 00000032 0000EC50   A 4      +
 00000002 0000002D 0000EC58   A 4      +
 00000002 0000002E 0000EC60   A 4      +
 00000002 00000002 0000EC68   A 4      +
 00000002 00000002 0000EC70   A 4      +
 00000002 00000002 0000F068   A 4      +
 00000002 00000002 0000F090   A 4      +
 00000002 00000002 0000F098   A 4      +
 00000002 0000005B 0000F110   A 4      +
 00000002 00000002 0000F118   A 4      +
 00000002 00000002 0000F120   A 4      +
 00000002 0000005F 0000F128   A 4      +
 00000002 00000002 0000F130   A 4      +
 00000002 00000002 0000F138   A 4      +
 00000002 00000002 0000F280   A 4      +
 00000002 00000002 0000F2A8   A 4      +
 00000002 00000002 0000F2B0   A 4      +
 00000002 0000005B 0000F328   A 4      +
 00000002 00000002 0000F330   A 4      +
 00000002 00000065 0000F338   A 4      +
 00000002 00000068 0000F340   A 4      +
 00000002 00000002 0000F348   A 4      +
 00000002 0000005F 0000F350   A 4      +
 00000002 00000002 0000F358   A 4      +
 00000002 00000002 0000F360   A 4      +
 00000002 00000002 0000F4E8   A 4      +
 00000002 00000002 0000F510   A 4      +
 00000002 00000002 0000F518   A 4      +
 00000002 00000002 0000F5A0   A 4      +
 00000002 00000002 0000F5A8   A 4      +
 00000002 00000012 0000F5B0   A 4      +
 00000002 00000002 0000F5B8   A 4      +
 00000002 00000002 0000F5C0   A 4      +
 00000002 00000002 0000F5C8   A 4      +
 00000002 00000068 0000F5D0   A 4      +
 00000002 00000011 0000F5D8   A 4      +
                                                 Relocation Dictionary                                                     Page  635 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000065 0000F5E0   A 4      +
 00000002 00000062 0000F5E8   A 4      +
 00000002 00000025 0000F5F0   A 4      +
 00000002 0000001C 0000F5F8   A 4      +
 00000002 00000068 0000F600   A 4      +
 00000002 00000002 0000F608   A 4      +
 00000002 00000002 0000F610   A 4      +
 00000002 00000002 0000F618   A 4      +
 00000002 00000002 0000FA98   A 4      +
 00000002 00000002 0000FAC0   A 4      +
 00000002 00000002 0000FAC8   A 4      +
 00000002 0000005B 0000FB40   A 4      +
 00000002 00000002 0000FB48   A 4      +
 00000002 00000002 0000FB50   A 4      +
 00000002 0000005F 0000FB58   A 4      +
 00000002 00000041 0000FB60   A 4      +
 00000002 00000002 0000FB68   A 4      +
 00000002 00000044 0000FB70   A 4      +
 00000002 00000002 0000FB78   A 4      +
 00000002 00000002 0000FB80   A 4      +
 00000002 00000002 0000FD10   A 4      +
 00000002 00000002 0000FD38   A 4      +
 00000002 00000002 0000FD40   A 4      +
 00000002 0000005B 0000FDB8   A 4      +
 00000002 00000002 0000FDC0   A 4      +
 00000002 00000065 0000FDC8   A 4      +
 00000002 00000068 0000FDD0   A 4      +
 00000002 00000002 0000FDD8   A 4      +
 00000002 00000002 0000FDE0   A 4      +
 00000002 00000002 0000FDE8   A 4      +
 00000002 00000002 0000FDF0   A 4      +
 00000002 0000005F 0000FDF8   A 4      +
 00000002 00000068 0000FE00   A 4      +
 00000002 00000002 0000FE08   A 4      +
 00000002 0000001C 0000FE10   A 4      +
 00000002 00000002 0000FE18   A 4      +
 00000002 00000068 0000FE20   A 4      +
 00000002 0000000D 0000FE28   A 4      +
 00000002 00000002 0000FE30   A 4      +
 00000002 00000002 0000FE38   A 4      +
 00000002 00000002 000102C8   A 4      +
 00000002 00000002 000102F0   A 4      +
 00000002 00000002 000102F8   A 4      +
 00000002 0000005B 00010370   A 4      +
 00000002 00000002 00010378   A 4      +
 00000002 00000065 00010380   A 4      +
 00000002 00000068 00010388   A 4      +
 00000002 00000002 00010390   A 4      +
 00000002 0000005F 00010398   A 4      +
 00000002 00000002 000103A0   A 4      +
 00000002 00000002 000103A8   A 4      +
 00000002 00000002 00010530   A 4      +
 00000002 00000002 00010558   A 4      +
                                                 Relocation Dictionary                                                     Page  636 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00010560   A 4      +
 00000002 00000002 00010600   A 4      +
 00000002 00000002 00010608   A 4      +
 00000002 00000012 00010610   A 4      +
 00000002 00000002 00010618   A 4      +
 00000002 00000002 00010620   A 4      +
 00000002 00000068 00010628   A 4      +
 00000002 00000011 00010630   A 4      +
 00000002 00000065 00010638   A 4      +
 00000002 00000063 00010640   A 4      +
 00000002 00000002 00010648   A 4      +
 00000002 00000062 00010650   A 4      +
 00000002 00000068 00010658   A 4      +
 00000002 0000001C 00010660   A 4      +
 00000002 00000025 00010668   A 4      +
 00000002 00000002 00010670   A 4      +
 00000002 00000002 00010678   A 4      +
 00000002 00000002 00010680   A 4      +
 00000002 00000002 00010A40   A 4      +
 00000002 00000002 00010A68   A 4      +
 00000002 00000002 00010A70   A 4      +
 00000002 0000005B 00010B68   A 4      +
 00000002 00000002 00010B70   A 4      +
 00000002 00000068 00010B78   A 4      +
 00000002 0000005F 00010B80   A 4      +
 00000002 00000002 00010BB8   A 4      +
 00000002 00000002 00010BE0   A 4      +
 00000002 00000002 00010BE8   A 4      +
 00000002 00000039 00010D30   A 4      +
 00000002 00000068 00010D38   A 4      +
 00000002 00000068 00010D40   A 4      +
 00000002 00000068 00010D48   A 4      +
 00000002 0000004B 00010D50   A 4      +
 00000002 00000002 00010D58   A 4      +
 00000002 00000002 00010D90   A 4      +
 00000002 00000002 00010DB8   A 4      +
 00000002 00000002 00010DC0   A 4      +
 00000002 00000027 00011038   A 4      +
 00000002 00000002 00011040   A 4      +
 00000002 00000058 00011048   A 4      +
 00000002 00000068 00011050   A 4      +
 00000002 00000068 00011058   A 4      +
 00000002 0000002F 00011060   A 4      +
 00000002 00000041 00011068   A 4      +
 00000002 00000002 00011070   A 4      +
 00000002 00000044 00011078   A 4      +
 00000002 00000002 00011080   A 4      +
 00000002 00000002 00011088   A 4      +
 00000002 00000065 00011090   A 4      +
 00000002 00000023 00011098   A 4      +
 00000002 00000029 000110A8   A 4      +
 00000002 00000065 00011760   A 4      +
 00000002 00000068 00011768   A 4      +
                                                 Relocation Dictionary                                                     Page  637 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000068 00011770   A 4      +
 00000002 00000027 00011780   A 4      +
 00000002 00000002 00011788   A 4      +
 00000002 00000058 00011790   A 4      +
 00000002 0000002F 00011798   A 4      +
 00000002 00000041 000117A0   A 4      +
 00000002 00000002 000117A8   A 4      +
 00000002 00000044 000117B0   A 4      +
 00000002 00000002 000117B8   A 4      +
 00000002 00000002 000117C0   A 4      +
 00000002 00000030 000117C8   A 4      +
 00000002 00000061 000117D0   A 4      +
 00000002 00000002 000117E0   A 4      +
 00000002 00000064 000117E8   A 4      +
 00000002 00000068 000117F0   A 4      +
 00000002 00000041 00012120   A 4      +
 00000002 00000002 00012128   A 4      +
 00000002 00000044 00012130   A 4      +
 00000002 00000002 00012138   A 4      +
 00000002 00000002 00012140   A 4      +
 00000002 00000002 00012148   A 4      +
 00000002 00000068 00012150   A 4      +
 00000002 00000065 00012158   A 4      +
 00000002 00000068 00012160   A 4      +
 00000002 00000029 00012170   A 4      +
 00000002 00000058 00012178   A 4      +
 00000002 0000002F 00012180   A 4      +
 00000002 00000027 00012188   A 4      +
 00000002 00000030 00012190   A 4      +
 00000002 00000002 00012A48   A 4      +
 00000002 00000002 00012A50   A 4      +
 00000002 00000068 00012A58   A 4      +
 00000002 00000065 00012A60   A 4      +
 00000002 00000068 00012A68   A 4      +
 00000002 00000061 00012A70   A 4      +
 00000002 00000002 00012A80   A 4      +
 00000002 00000064 00012A88   A 4      +
 00000002 00000027 00012A90   A 4      +
 00000002 00000058 00012A98   A 4      +
 00000002 0000002F 00012AA0   A 4      +
 00000002 00000041 00012AA8   A 4      +
 00000002 00000002 00012AB0   A 4      +
 00000002 00000044 00012AB8   A 4      +
 00000002 00000002 00012AC0   A 4      +
 00000002 00000068 00012AC8   A 4      +
 00000002 00000059 00012AD0   A 4      +
 00000002 0000003C 00012AD8   A 4      +
 00000002 0000005D 00012AE0   A 4      +
 00000002 0000005B 00012AE8   A 4      +
 00000002 00000002 00012AF0   A 4      +
 00000002 0000005F 00012AF8   A 4      +
 00000002 00000002 00012B00   A 4      +
 00000002 0000004E 00012B10   A 4      +
                                                 Relocation Dictionary                                                     Page  638 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 0000005A 00012B18   A 4      +
 00000002 00000025 00012B20   A 4      +
 00000002 00000002 00012B28   A 4      +
 00000002 00000038 00012B30   A 4      +
 00000002 0000001F 00012B38   A 4      +
 00000002 00000026 00012B40   A 4      +
 00000002 00000025 00013450   A 4      +
 00000002 00000002 00013458   A 4      +
 00000002 00000068 00013460   A 4      +
 00000002 0000005F 00013468   A 4      +
 00000002 00000002 00013498   A 4      +
 00000002 00000002 000134C0   A 4      +
 00000002 00000002 000134C8   A 4      +
 00000002 00000039 000135E0   A 4      +
 00000002 00000068 000135E8   A 4      +
 00000002 00000068 000135F0   A 4      +
 00000002 00000068 000135F8   A 4      +
 00000002 00000065 00013600   A 4      +
 00000002 00000043 00013608   A 4      +
 00000002 00000045 00013610   A 4      +
 00000002 00000002 00013618   A 4      +
 00000002 00000002 00013620   A 4      +
 00000002 0000004D 00013628   A 4      +
 00000002 00000002 00013630   A 4      +
 00000002 0000005A 00013638   A 4      +
 00000002 00000025 00013640   A 4      +
 00000002 0000002F 00013648   A 4      +
 00000002 00000002 00013650   A 4      +
 00000002 0000004E 00013658   A 4      +
 00000002 00000002 000139D8   A 4      +
 00000002 00000002 00013A00   A 4      +
 00000002 00000002 00013A08   A 4      +
 00000002 00000033 00013B38   A 4      +
 00000002 00000065 00013B40   A 4      +
 00000002 00000068 00013B48   A 4      +
 00000002 00000068 00013B50   A 4      +
 00000002 00000002 00013B58   A 4      +
 00000002 0000005A 00013B60   A 4      +
 00000002 00000002 00013B68   A 4      +
 00000002 0000004E 00013B70   A 4      +
 00000002 00000002 00013B78   A 4      +
 00000002 00000052 00013B80   A 4      +
 00000002 0000003D 00013B88   A 4      +
 00000002 00000002 00013D90   A 4      +
 00000002 00000002 00013DB8   A 4      +
 00000002 00000002 00013DC0   A 4      +
 00000002 00000002 00013EA0   A 4      +
 00000002 00000039 00013EA8   A 4      +
 00000002 00000068 00013EB0   A 4      +
 00000002 00000068 00013EB8   A 4      +
 00000002 00000068 00013EC0   A 4      +
 00000002 00000041 00013EC8   A 4      +
 00000002 00000002 00013ED0   A 4      +
                                                 Relocation Dictionary                                                     Page  639 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000044 00013ED8   A 4      +
 00000002 00000065 00013EE0   A 4      +
 00000002 00000002 00013EE8   A 4      +
 00000002 0000005B 00013EF0   A 4      +
 00000002 0000003D 00013EF8   A 4      +
 00000002 00000002 00013F00   A 4      +
 00000002 0000005F 00013F08   A 4      +
 00000002 00000002 00014100   A 4      +
 00000002 00000002 00014128   A 4      +
 00000002 00000002 00014130   A 4      +
 00000002 00000002 000143A0   A 4      +
 00000002 00000002 000143A8   A 4      +
 00000002 00000048 000143B0   A 4      +
 00000002 00000002 000143B8   A 4      +
 00000002 0000004E 000143C0   A 4      +
 00000002 0000000C 000143C8   A 4      +
 00000002 00000010 000143D0   A 4      +
 00000002 00000041 000143D8   A 4      +
 00000002 00000002 000143E0   A 4      +
 00000002 00000044 000143E8   A 4      +
 00000002 00000040 000143F0   A 4      +
 00000002 00000002 000143F8   A 4      +
 00000002 00000002 00014420   A 4      +
 00000002 00000002 00014448   A 4      +
 00000002 00000002 00014450   A 4      +
 00000002 00000002 00014618   A 4      +
 00000002 0000003E 00014620   A 4      +
 00000002 00000050 00014628   A 4      +
 00000002 00000068 00014630   A 4      +
 00000002 0000000E 00014638   A 4      +
 00000002 00000002 00014640   A 4      +
 00000002 00000009 00014648   A 4      +
 00000002 00000002 00014650   A 4      +
 0000006B 00000067 0001653C   Q 4      +
 0000006B 00000067 0001665C   Q 4      +
 0000006B 00000067 0001671C   Q 4      +
 0000006B 00000067 00016744   Q 4      +
 0000006B 00000067 0001676C   Q 4      +
 0000006B 00000068 00016778   A 4      +
 0000006B 00000067 00016794   Q 4      +
 0000006B 00000068 000167A0   A 4      +
 0000006B 00000067 000167BC   Q 4      +
 0000006B 00000068 000167C8   A 4      +
 0000006B 00000067 000167E4   Q 4      +
 0000006B 00000068 000167F0   A 4      +
 0000006B 00000067 0001680C   Q 4      +
 0000006B 00000068 00016818   A 4      +
 0000006B 00000067 00016834   Q 4      +
 0000006B 00000068 00016840   A 4      +
 0000006B 00000067 0001685C   Q 4      +
 0000006B 00000068 00016868   A 4      +
 0000006B 00000067 00016884   Q 4      +
 0000006B 00000068 00016890   A 4      +
                                                 Relocation Dictionary                                                     Page  640 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000006B 00000067 000168AC   Q 4      +
 0000006B 00000068 000168B8   A 4      +
 0000006B 00000067 000168D4   Q 4      +
 0000006B 00000068 000168E0   A 4      +
 0000006B 00000067 000168FC   Q 4      +
 0000006B 00000068 00016908   A 4      +
 0000006B 00000067 00016924   Q 4      +
 0000006B 00000068 00016930   A 4      +
 0000006B 00000067 0001694C   Q 4      +
 0000006B 00000068 00016958   A 4      +
 0000006B 00000067 00016974   Q 4      +
 0000006B 00000068 00016980   A 4      +
 0000006B 00000067 0001699C   Q 4      +
 0000006B 00000068 000169A8   A 4      +
 0000006B 00000067 000169C4   Q 4      +
 0000006B 00000068 000169D0   A 4      +
 0000006B 00000067 000169EC   Q 4      +
 0000006B 00000068 000169F8   A 4      +
 0000006B 00000067 00016A14   Q 4      +
 0000006B 00000068 00016A20   A 4      +
 0000006B 00000067 00016A3C   Q 4      +
 0000006B 00000068 00016A48   A 4      +
 0000006B 00000067 00016A64   Q 4      +
 0000006B 00000068 00016A70   A 4      +
 0000006B 00000067 00016A8C   Q 4      +
 0000006B 00000068 00016A98   A 4      +
 0000006B 00000067 00016AB4   Q 4      +
 0000006B 00000068 00016AC0   A 4      +
 0000006B 00000067 00016ADC   Q 4      +
 0000006B 00000068 00016AE8   A 4      +
 0000006B 00000067 00016B04   Q 4      +
 0000006B 00000068 00016B10   A 4      +
 0000006B 00000067 00016B2C   Q 4      +
 0000006B 00000068 00016B38   A 4      +
 0000006B 00000067 00016B54   Q 4      +
 0000006B 00000068 00016B60   A 4      +
 0000006B 00000067 00016B7C   Q 4      +
 0000006B 00000068 00016B88   A 4      +
 0000006B 00000067 00016BA4   Q 4      +
 0000006B 00000068 00016BB0   A 4      +
 0000006B 00000067 00016BCC   Q 4      +
 0000006B 00000068 00016BD8   A 4      +
 0000006B 00000067 00016BF4   Q 4      +
 0000006B 00000068 00016C00   A 4      +
 0000006B 00000067 00016C1C   Q 4      +
 0000006B 00000068 00016C28   A 4      +
 0000006B 00000067 00016C44   Q 4      +
 0000006B 00000068 00016C50   A 4      +
 0000006B 00000067 00016C6C   Q 4      +
 0000006B 00000068 00016C78   A 4      +
 0000006B 00000067 00016C94   Q 4      +
 0000006B 00000068 00016CA0   A 4      +
 0000006B 00000067 00016CBC   Q 4      +
                                                 Relocation Dictionary                                                     Page  641 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000006B 00000068 00016CC8   A 4      +
 0000006B 00000067 00016CE4   Q 4      +
 0000006B 00000068 00016CF0   A 4      +
 0000006B 00000067 00016D0C   Q 4      +
 0000006B 00000068 00016D18   A 4      +
 0000006B 00000067 00016D34   Q 4      +
 0000006B 00000068 00016D40   A 4      +
 0000006B 00000067 00016D5C   Q 4      +
 0000006B 00000068 00016D68   A 4      +
 0000006B 00000067 00016D84   Q 4      +
 0000006B 00000068 00016D90   A 4      +
 0000006B 00000067 00016DAC   Q 4      +
 0000006B 00000068 00016DB8   A 4      +
 0000006B 00000067 00016DD4   Q 4      +
 0000006B 00000068 00016DE0   A 4      +
 0000006B 00000067 00016DFC   Q 4      +
 0000006B 00000068 00016E08   A 4      +
 0000006B 00000067 00016E24   Q 4      +
 0000006B 00000068 00016E30   A 4      +
 0000006B 00000067 00016E4C   Q 4      +
 0000006B 00000068 00016E58   A 4      +
 0000006B 00000067 00016E74   Q 4      +
 0000006B 00000068 00016E80   A 4      +
 0000006B 00000067 00016E9C   Q 4      +
 0000006B 00000068 00016EA8   A 4      +
 0000006B 00000067 00016EC4   Q 4      +
 0000006B 00000068 00016ED0   A 4      +
 0000006B 00000067 00016EEC   Q 4      +
 0000006B 00000068 00016EF8   A 4      +
 0000006B 00000067 00016F14   Q 4      +
 0000006B 00000068 00016F20   A 4      +
 0000006B 00000067 00016F3C   Q 4      +
 0000006B 00000068 00016F48   A 4      +
 0000006B 00000067 00016F64   Q 4      +
 0000006B 00000068 00016F70   A 4      +
 0000006B 00000067 00016F8C   Q 4      +
 0000006B 00000068 00016F98   A 4      +
 0000006B 00000067 00016FB4   Q 4      +
 0000006B 00000068 00016FC0   A 4      +
 0000006B 00000067 00016FDC   Q 4      +
 0000006B 00000068 00016FE8   A 4      +
 0000006B 00000067 00017004   Q 4      +
 0000006B 00000068 00017010   A 4      +
 0000006B 00000067 0001702C   Q 4      +
 0000006B 00000068 00017038   A 4      +
 0000006B 00000067 00017054   Q 4      +
 0000006B 00000068 00017060   A 4      +
 0000006B 00000067 0001707C   Q 4      +
 0000006B 00000068 00017088   A 4      +
 0000006B 00000067 000170A4   Q 4      +
 0000006B 00000068 000170B0   A 4      +
 0000006B 00000067 000170CC   Q 4      +
 0000006B 00000068 000170D8   A 4      +
                                                 Relocation Dictionary                                                     Page  642 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000006B 00000067 000170F4   Q 4      +
 0000006B 00000068 00017100   A 4      +
 0000006B 00000067 0001711C   Q 4      +
 0000006B 00000068 00017128   A 4      +
 0000006B 00000067 00017144   Q 4      +
 0000006B 00000068 00017150   A 4      +
 0000006B 00000067 0001716C   Q 4      +
 0000006B 00000068 00017178   A 4      +
 0000006B 00000067 00017194   Q 4      +
 0000006B 00000068 000171A0   A 4      +
 0000006B 00000067 000171BC   Q 4      +
 0000006B 00000068 000171C8   A 4      +
 0000006B 00000067 000171E4   Q 4      +
 0000006B 00000068 000171F0   A 4      +
 0000006B 00000067 0001720C   Q 4      +
 0000006B 00000068 00017218   A 4      +
 0000006B 00000067 00017234   Q 4      +
 0000006B 00000068 00017240   A 4      +
 0000006B 00000067 0001725C   Q 4      +
 0000006B 00000068 00017268   A 4      +
 0000006B 00000067 00017284   Q 4      +
 0000006B 00000068 00017290   A 4      +
 0000006B 00000067 000172AC   Q 4      +
 0000006B 00000068 000172B8   A 4      +
 0000006B 00000067 000172D4   Q 4      +
 0000006B 00000068 000172E0   A 4      +
 0000006B 00000067 000172FC   Q 4      +
 0000006B 00000068 00017308   A 4      +
 0000006B 00000067 00017324   Q 4      +
 0000006B 00000068 00017330   A 4      +
 0000006B 00000067 0001734C   Q 4      +
 0000006B 00000068 00017358   A 4      +
 0000006B 00000067 00017374   Q 4      +
 0000006B 00000068 00017380   A 4      +
 0000006B 00000067 0001739C   Q 4      +
 0000006B 00000068 000173A8   A 4      +
 0000006B 00000067 000173C4   Q 4      +
 0000006B 00000068 000173D0   A 4      +
 0000006B 00000067 000173EC   Q 4      +
 0000006B 00000068 000173F8   A 4      +
 0000006B 00000067 00017414   Q 4      +
 0000006B 00000068 00017420   A 4      +
 0000006B 00000067 0001743C   Q 4      +
 0000006B 00000068 00017448   A 4      +
 0000006B 00000067 00017464   Q 4      +
 0000006B 00000068 00017470   A 4      +
 0000006B 00000067 0001748C   Q 4      +
 0000006B 00000068 00017498   A 4      +
 0000006B 00000067 000174B4   Q 4      +
 0000006B 00000068 000174C0   A 4      +
 0000006B 00000067 000174DC   Q 4      +
 0000006B 00000068 000174E8   A 4      +
 0000006B 00000067 00017504   Q 4      +
                                                 Relocation Dictionary                                                     Page  643 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000006B 00000068 00017510   A 4      +
 0000006B 00000067 0001752C   Q 4      +
 0000006B 00000068 00017538   A 4      +
 0000006B 00000067 00017554   Q 4      +
 0000006B 00000068 00017560   A 4      +
                                                 DSECT Cross Reference                                                     Page  644 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#ebcdic_2_utf8
         000000A9  FFFFFFFF  00392
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFC  00807
@AUTO#rd_atomic32_init
         000000A8  FFFFFFFD  00681
@AUTO#rd_atomic32_set
         000000AC  FFFFFFFA  01059
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFB  00934
@AUTO#rd_atomic64_get
         000000B0  FFFFFFF8  01291
@AUTO#rd_atomic64_init
         000000A8  FFFFFFF9  01170
@AUTO#rd_atomic64_set
         000000B0  FFFFFFF7  01418
@AUTO#rd_clock
         000000B8  FFFFFFF3  01902
@AUTO#rd_crc32_update
         000000AC  FFFFFFDA  05067
@AUTO#rd_free
         000000A8  FFFFFFF6  01522
@AUTO#rd_kafka_$Api$Key2str
         000000A8  FFFFFFE9  03013
@AUTO#rd_kafka_abort_transaction
         000000B0  FFFFFF9D  24737
@AUTO#rd_kafka_begin_transaction
         000000A8  FFFFFFAC  16842
@AUTO#rd_kafka_broker_get_state
         000000AC  FFFFFFCF  06459
@AUTO#rd_kafka_broker_is_up
         000000AC  FFFFFFCE  06577
@AUTO#rd_kafka_buf_$Api$Version_set
         000000A8  FFFFFFD9  05143
@AUTO#rd_kafka_buf_write
         000000B0  FFFFFFD8  05277
@AUTO#rd_kafka_buf_write_i16
         000000A8  FFFFFFD7  05386
@AUTO#rd_kafka_buf_write_i32
         000000A8  FFFFFFD6  05493
@AUTO#rd_kafka_buf_write_i64
         000000A8  FFFFFFD5  05600
@AUTO#rd_kafka_buf_write_str
         000000B8  FFFFFFD3  05994
@AUTO#rd_kafka_buf_write_uvarint
         000000B2  FFFFFFD4  05722
@AUTO#rd_kafka_commit_transaction
         000000B0  FFFFFFA1  23311
@AUTO#rd_kafka_ensure_transactional
         000000A8  FFFFFFC7  07365
@AUTO#rd_kafka_idemp_get_pid0
         000000B8  FFFFFFC9  07129
@AUTO#rd_kafka_idemp_state2str
                                                 DSECT Cross Reference                                                     Page  645 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000A8  FFFFFFCB  06868
@AUTO#rd_kafka_init_transactions
         000000A8  FFFFFFAE  16395
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFDF  04210
@AUTO#rd_kafka_pid_reset
         000000A8  FFFFFFE8  03087
@AUTO#rd_kafka_q_destroy_owner
         000000A8  FFFFFFE2  03817
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFE3  03712
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFE4  03526
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFDC  04809
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFDE  04439
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFDD  04700
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFE1  03954
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFE0  04117
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFE5  03403
@AUTO#rd_kafka_q_ready
         000000A8  FFFFFFE6  03287
@AUTO#rd_kafka_replyq_make
         000000B8  FFFFFFDB  04932
@AUTO#rd_kafka_rkt_get_lw
         000000A8  FFFFFFD1  06204
@AUTO#rd_kafka_rkt_is_lw
         000000A8  FFFFFFD2  06091
@AUTO#rd_kafka_send_offsets_to_transaction
         000000A8  FFFFFFA7  20456
@AUTO#rd_kafka_topic_destroy0
         000000A8  FFFFFFD0  06342
@AUTO#rd_kafka_topic_partition_match_valid_offset
         000000A8  FFFFFFCD  06662
@AUTO#rd_kafka_toppar_topic_cmp
         000000A8  FFFFFFCC  06756
@AUTO#rd_kafka_txn_clear_partitions
         000000A8  FFFFFFB7  14526
@AUTO#rd_kafka_txn_clear_partitions_flag
         000000A8  FFFFFFB9  14298
@AUTO#rd_kafka_txn_clear_pending_partitions
         000000A8  FFFFFFB8  14419
@AUTO#rd_kafka_txn_complete
         000000A8  FFFFFFA6  20622
@AUTO#rd_kafka_txn_coord_monitor_cb
         000001A9  FFFFFF97  29251
@AUTO#rd_kafka_txn_coord_query
         000002AC  FFFFFF99  28616
                                                 DSECT Cross Reference                                                     Page  646 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#rd_kafka_txn_coord_set
         000001A8  FFFFFF98  28944
@AUTO#rd_kafka_txn_coord_timer_cb
         000000A8  FFFFFF9C  24868
@AUTO#rd_kafka_txn_coord_timer_restart
         000000A8  FFFFFF9B  25017
@AUTO#rd_kafka_txn_curr_api_abort_timeout_cb
         000000A8  FFFFFFB6  14679
@AUTO#rd_kafka_txn_curr_api_init_timeout_cb
         000000AC  FFFFFFB3  15080
@AUTO#rd_kafka_txn_curr_api_reply
         000000A8  FFFFFFC0  09280
@AUTO#rd_kafka_txn_curr_api_reply_error
         000000A8  FFFFFFC1  09099
@AUTO#rd_kafka_txn_curr_api_req
         000000AA  FFFFFFB1  15735
@AUTO#rd_kafka_txn_curr_api_reset
         000000A9  FFFFFFB2  15233
@AUTO#rd_kafka_txn_curr_api_retriable_timeout_cb
         000000A8  FFFFFFB5  14802
@AUTO#rd_kafka_txn_curr_api_timeout_cb
         000000A8  FFFFFFB4  14916
@AUTO#rd_kafka_txn_handle_$Add$Offsets$To$Txn
         000002B4  FFFFFFA9  19839
@AUTO#rd_kafka_txn_handle_$Add$Partitions$To$Txn
         000002F8  FFFFFFBD  13188
@AUTO#rd_kafka_txn_handle_$End$Txn
         000002B6  FFFFFFA5  21882
@AUTO#rd_kafka_txn_handle_$Find$Coordinator
         00000518  FFFFFF9A  28047
@AUTO#rd_kafka_txn_handle_$Txn$Offset$Commit
         000004B0  FFFFFFAB  17881
@AUTO#rd_kafka_txn_idemp_state_change
         000000A9  FFFFFFBF  09548
@AUTO#rd_kafka_txn_normalize_err
         000000A8  FFFFFFC8  07227
@AUTO#rd_kafka_txn_op_abort_transaction
         000002BC  FFFFFF9F  24063
@AUTO#rd_kafka_txn_op_abort_transaction_ack
         000000B0  FFFFFF9E  24281
@AUTO#rd_kafka_txn_op_ack_init_transactions
         000000B0  FFFFFFAF  16202
@AUTO#rd_kafka_txn_op_begin_abort
         000000BD  FFFFFFA0  23543
@AUTO#rd_kafka_txn_op_begin_commit
         000000B8  FFFFFFA3  22590
@AUTO#rd_kafka_txn_op_begin_transaction
         000000B1  FFFFFFAD  16677
@AUTO#rd_kafka_txn_op_commit_transaction
         000002C8  FFFFFFA4  22386
@AUTO#rd_kafka_txn_op_commit_transaction_ack
         000000B0  FFFFFFA2  22804
@AUTO#rd_kafka_txn_op_init_transactions
                                                 DSECT Cross Reference                                                     Page  647 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000B8  FFFFFFB0  16008
@AUTO#rd_kafka_txn_op_send_offsets_to_transaction
         000002C0  FFFFFFA8  20192
@AUTO#rd_kafka_txn_partition_registered
         000000A8  FFFFFFBE  09873
@AUTO#rd_kafka_txn_register_partitions
         000003BC  FFFFFFBC  13890
@AUTO#rd_kafka_txn_register_partitions_tmr_cb
         000000A8  FFFFFFBB  14002
@AUTO#rd_kafka_txn_require_states0
         000000B0  FFFFFFC6  07591
@AUTO#rd_kafka_txn_schedule_register_partitions
         000000A8  FFFFFFBA  14131
@AUTO#rd_kafka_txn_send_$Txn$Offset$Commit$Request
         000000BA  FFFFFFAA  18332
@AUTO#rd_kafka_txn_set_abortable_error0
         000002A8  FFFFFFC2  08930
@AUTO#rd_kafka_txn_set_fatal_error
         000002A8  FFFFFFC3  08554
@AUTO#rd_kafka_txn_set_state
         000000A9  FFFFFFC4  08281
@AUTO#rd_kafka_txn_state_transition_is_valid
         000000A8  FFFFFFC5  07995
@AUTO#rd_kafka_txn_state2str
         000000A8  FFFFFFCA  06983
@AUTO#rd_kafka_txns_init
         000000A8  FFFFFF95  29746
@AUTO#rd_kafka_txns_term
         000000A8  FFFFFF96  29540
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF4  01789
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFEC  02594
@AUTO#rd_slice_offset
         000000A8  FFFFFFEB  02684
@AUTO#rd_strdup
         000000A8  FFFFFFF5  01653
@AUTO#rd_strlcpy
         000000B0  FFFFFFE7  03211
@AUTO#rd_timeout_expired
         000000A8  FFFFFFED  02508
@AUTO#rd_timeout_init
         000000A8  FFFFFFF1  02109
@AUTO#rd_timeout_ms
         000000A8  FFFFFFF2  01994
@AUTO#rd_timeout_remains
         000000A8  FFFFFFEF  02347
@AUTO#rd_timeout_remains_limit0
         000000A8  FFFFFFEE  02433
@AUTO#rd_timeout_remains_us
         000000B0  FFFFFFF0  02235
@AUTO#rd_uvarint_enc_u64
         000000B0  FFFFFFEA  02798
                                                 DSECT Cross Reference                                                     Page  648 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#utf8_2_ebcdic
         000000A9  FFFFFFFE  00570
                                          Macro and Copy Code Source Summary                                               Page  649 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  650 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   277  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 00136    355 @REGION_338_1,12
   387  000001DE  00000002 DROP                                           12              12
   456  00000276  00000002 USING  ORDINARY    00000238 00001000 00000002  12 00136    533 @REGION_339_1,12
   565  000003B6  00000002 DROP                                           12              12
   634  00000456  00000002 USING  ORDINARY    00000418 00001000 00000002  12 000B8    647 @REGION_732_1,12
   676  000004D8  00000002 DROP                                           12              12
   744  00000576  00000002 USING  ORDINARY    00000538 00001000 00000002  12 000E0    769 @REGION_733_1,12
   802  00000620  00000002 DROP                                           12              12
   871  000006BE  00000002 USING  ORDINARY    00000680 00001000 00000002  12 000E0    896 @REGION_734_1,12
   929  00000768  00000002 DROP                                           12              12
   998  00000806  00000002 USING  ORDINARY    000007C8 00001000 00000002  12 000D8   1020 @REGION_736_1,12
  1054  000008A8  00000002 DROP                                           12              12
  1123  00000946  00000002 USING  ORDINARY    00000908 00001000 00000002  12 000C0   1136 @REGION_737_1,12
  1165  000009D0  00000002 DROP                                           12              12
  1233  00000A6E  00000002 USING  ORDINARY    00000A30 00001000 00000002  12 000D8   1253 @REGION_740_1,12
  1286  00000B10  00000002 DROP                                           12              12
  1355  00000BAE  00000002 USING  ORDINARY    00000B70 00001000 00000002  12 000E0   1379 @REGION_741_1,12
  1413  00000C58  00000002 DROP                                           12              12
  1482  00000CEE  00000002 USING  ORDINARY    00000CB0 00001000 00000002  12 000A8   1489 @REGION_754_1,12
  1517  00000D60  00000002 DROP                                           12              12
  1585  00000DF6  00000002 USING  ORDINARY    00000DB8 00001000 00000002  12 00108   1615 @REGION_755_1,12
  1648  00000EC8  00000002 DROP                                           12              12
  1716  00000F66  00000002 USING  ORDINARY    00000F28 00001000 00000002  12 00118   1750 @REGION_758_1,12
  1784  00001048  00000002 DROP                                           12              12
  1853  000010DE  00000002 USING  ORDINARY    000010A0 00001000 00000002  12 000C0   1863 @REGION_1088_1,12
  1897  00001168  00000002 DROP                                           12              12
  1955  000011D2  00000002 USING  ORDINARY    000011C8 00001000 00000002  12 00036   1975 @REGION_1092_1,12
  1989  0000120C  00000002 DROP                                           12              12
  2057  000012A6  00000002 USING  ORDINARY    00001268 00001000 00000002  12 00078   2077 @REGION_1093_1,12
  2104  00001328  00000002 DROP                                           12              12
  2172  000013CE  00000002 USING  ORDINARY    00001390 00001000 00000002  12 00090   2204 @REGION_1096_1,12
  2230  00001468  00000002 DROP                                           12              12
  2299  00001506  00000002 USING  ORDINARY    000014C8 00001000 00000002  12 000C8   2313 @REGION_1097_1,12
  2342  00001598  00000002 DROP                                           12              12
  2399  0000160A  00000002 USING  ORDINARY    00001600 00001000 00000002  12 0002C   2411 @REGION_1098_1,12
  2428  0000163A  00000002 DROP                                           12              12
  2560  0000173A  00000002 USING  ORDINARY    00001730 00001000 00000002  12 0003A   2569 @REGION_1286_1,12
  2589  00001778  00000002 DROP                                           12              12
  2646  000017E2  00000002 USING  ORDINARY    000017D8 00001000 00000002  12 0004A   2657 @REGION_1287_1,12
  2679  00001830  00000002 DROP                                           12              12
  2736  0000189A  00000002 USING  ORDINARY    00001890 00001000 00000002  12 00084   2777 @REGION_1308_1,12
  2793  00001922  00000002 DROP                                           12              12
  2862  000019C6  00000002 USING  ORDINARY    00001988 00001000 00000002  12 000F2   2974 @REGION_1314_1,12
  3008  00001AC2  00000002 DROP                                           12              12
  3139  00001BB2  00000002 USING  ORDINARY    00001BA8 00001000 00000002  12 000A6   3185 @REGION_1384_1,12
  3206  00001C5C  00000002 DROP                                           12              12
  3350  00001D86  00000002 USING  ORDINARY    00001D48 00001000 00000002  12 000D0   3368 @REGION_1428_1,12
  3398  00001E20  00000002 DROP                                           12              12
  3466  00001EBE  00000002 USING  ORDINARY    00001E80 00001000 00000002  12 000E0   3491 @REGION_1432_1,12
  3521  00001F68  00000002 DROP                                           12              12
  3589  00002006  00000002 USING  ORDINARY    00001FC8 00001000 00000002  12 001A8   3671 @REGION_1435_1,12
                                                      Using Map                                                            Page  651 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  3707  00002178  00000002 DROP                                           12              12
  3776  0000221E  00000002 USING  ORDINARY    000021E0 00001000 00000002  12 000B0   3784 @REGION_1436_1,12
  3812  00002298  00000002 DROP                                           12              12
  3880  00002336  00000002 USING  ORDINARY    000022F8 00001000 00000002  12 00100   3916 @REGION_1439_1,12
  3949  00002400  00000002 DROP                                           12              12
  4017  0000249E  00000002 USING  ORDINARY    00002460 00001000 00000002  12 00102   4084 @REGION_1441_1,12
  4112  000025AA  00000002 DROP                                           12              12
  4169  0000261A  00000002 USING  ORDINARY    00002610 00001000 00000002  12 00042   4188 @REGION_1442_1,12
  4205  00002664  00000002 DROP                                           12              12
  4273  000026FE  00000002 USING  ORDINARY    000026C0 00001000 00000002  12 001C2   4399 @REGION_1444_1,12
  4434  000028E8  00000002 DROP                                           12              12
  4502  00002986  00000002 USING  ORDINARY    00002948 00001000 00000002  12 00212   4665 @REGION_1445_1,12
  4695  00002BA2  00000002 DROP                                           12              12
  4763  00002C3E  00000002 USING  ORDINARY    00002C00 00001000 00000002  12 000D0   4776 @REGION_1446_1,12
  4804  00002CD8  00000002 DROP                                           12              12
  4872  00002D7E  00000002 USING  ORDINARY    00002D40 00001000 00000002  12 000D8   4888 @REGION_1454_1,12
  4927  00002E20  00000002 DROP                                           12              12
  4996  00002EBE  00000002 USING  ORDINARY    00002E80 00001000 00000002  12 00090   5038 @REGION_1485_1,12
  5062  00002F78  00000002 DROP                                           12              12
  5206  000030A6  00000002 USING  ORDINARY    00003068 00001000 00000002  12 00118   5239 @REGION_1517_1,12
  5272  00003188  00000002 DROP                                           12              12
  5341  0000322E  00000002 USING  ORDINARY    000031F0 00001000 00000002  12 000C0   5354 @REGION_1521_1,12
  5381  000032B8  00000002 DROP                                           12              12
  5449  0000335E  00000002 USING  ORDINARY    00003320 00001000 00000002  12 000C0   5461 @REGION_1523_1,12
  5488  000033E8  00000002 DROP                                           12              12
  5556  0000348E  00000002 USING  ORDINARY    00003450 00001000 00000002  12 000C0   5568 @REGION_1527_1,12
  5595  00003518  00000002 DROP                                           12              12
  5663  000035BE  00000002 USING  ORDINARY    00003580 00001000 00000002  12 000F0   5689 @REGION_1530_1,12
  5717  00003678  00000002 DROP                                           12              12
  5788  0000371E  00000002 USING  ORDINARY    000036E0 00001000 00000002  12 001FC   5959 @REGION_1532_1,12
  5989  00003924  00000002 DROP                                           12              12
  6051  00003992  00000002 USING  ORDINARY    00003988 00001000 00000002  12 00060   6071 @REGION_1670_1,12
  6086  000039F0  00000002 DROP                                           12              12
  6154  00003A8E  00000002 USING  ORDINARY    00003A50 00001000 00000002  12 00084   6171 @REGION_1671_1,12
  6199  00003B1C  00000002 DROP                                           12              12
  6267  00003BBE  00000002 USING  ORDINARY    00003B80 00001000 00000002  12 000CE   6310 @REGION_1678_1,12
  6337  00003C96  00000002 DROP                                           12              12
  6405  00003D3E  00000002 USING  ORDINARY    00003D00 00001000 00000002  12 000D0   6424 @REGION_1726_1,12
  6454  00003DD8  00000002 DROP                                           12              12
  6523  00003E7E  00000002 USING  ORDINARY    00003E40 00001000 00000002  12 0008C   6551 @REGION_1727_1,12
  6572  00003F1A  00000002 DROP                                           12              12
  6631  00003FA2  00000002 USING  ORDINARY    00003F98 00001000 00000002  12 00026   6640 @REGION_1853_1,12
  6656  00003FD0  00000002 DROP                                           12              12
  6714  00004042  00000002 USING  ORDINARY    00004038 00001000 00000002  12 0005E   6733 @REGION_1873_1,12
  6751  000040A8  00000002 DROP                                           12              12
  6819  0000414E  00000002 USING  ORDINARY    00004110 00001000 00000002  12 000AC   6836 @REGION_1892_1,12
  6863  000041C0  00000002 DROP                                           12              12
  6931  00004266  00000002 USING  ORDINARY    00004228 00001000 00000002  12 000AC   6951 @REGION_1893_1,12
  6978  000042D8  00000002 DROP                                           12              12
  7046  0000437E  00000002 USING  ORDINARY    00004340 00001000 00000002  12 000D4   7096 @REGION_1929_1,12
  7124  00004462  00000002 DROP                                           12              12
  7182  000044DA  00000002 USING  ORDINARY    000044D0 00001000 00000002  12 00040   7209 @REGION_1998_1,12
  7222  0000451E  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  652 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  7290  000045C6  00000002 USING  ORDINARY    00004588 00001000 00000002  12 000C4   7334 @REGION_1999_1,12
  7360  00004694  00000002 DROP                                           12              12
  7428  0000473E  00000002 USING  ORDINARY    00004700 00001000 00000002  12 001D4   7554 @REGION_2000_1,12
  7586  0000491C  00000002 DROP                                           12              12
  7656  000049CE  00000002 USING  ORDINARY    00004990 00001000 00000002  12 003A8   7951 @REGION_2001_1,12
  7989  00004D80  00000002 DROP                                           12              12
  8058  00004E26  00000002 USING  ORDINARY    00004DE8 00001000 00000002  12 0027A   8246 @REGION_2002_1,12
  8276  000050AA  00000002 DROP                                           12              12
  8347  00005156  00000002 USING  ORDINARY    00005118 00001000 00000002  12 002B8   8509 @REGION_1924_1,12
  8549  000053D8  00000002 DROP                                           12              12
  8621  00005486  00000002 USING  ORDINARY    00005448 00001000 00000002  12 0039C   8898 @REGION_1923_1,12
  8924  0000582C  00000002 DROP                                           12              12
  8995  000058DE  00000002 USING  ORDINARY    000058A0 00001000 00000002  12 00116   9068 @REGION_1996_1,12
  9093  000059FE  00000002 DROP                                           12              12
  9162  00005AA6  00000002 USING  ORDINARY    00005A68 00001000 00000002  12 00110   9250 @REGION_2003_1,12
  9275  00005BDE  00000002 DROP                                           12              12
  9345  00005C8E  00000002 USING  ORDINARY    00005C50 00001000 00000002  12 001D8   9511 @REGION_1922_1,12
  9543  00005E70  00000002 DROP                                           12              12
  9613  00005F1E  00000002 USING  ORDINARY    00005EE0 00001000 00000002  12 00342   9826 @REGION_2004_1,12
  9867  0000626A  00000002 DROP                                           12              12
  9937  0000631E  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 001F4   9958 @REGION_2005_1,12
  9959  0000634C  00000002 DROP                                           12              12
  9960  0000634C  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00680   9961 @REGION_2005_4,12
  9962  00006350  00000002 DROP                                           12              12
  9963  00006350  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 00290  10089 @REGION_2005_1,12
 10090  000064C6  00000002 DROP                                           12              12
 10091  000064C6  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00680  10092 @REGION_2005_4,12
 10093  000064CA  00000002 DROP                                           12              12
 10094  000064CA  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 00562  10333 @REGION_2005_1,12
 10334  0000683E  00000002 DROP                                           12              12
 10335  0000683E  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  10336 @REGION_2005_4,12
 10337  00006842  00000002 DROP                                           12              12
 10338  00006842  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 00862  10558 @REGION_2005_1,12
 10559  00006B3E  00000002 DROP                                           12              12
 10560  00006B3E  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  10561 @REGION_2005_4,12
 10562  00006B42  00000002 DROP                                           12              12
 10563  00006B42  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 001F4  10570 @REGION_2005_1,12
 10571  00006B50  00000002 DROP                                           12              12
 10572  00006B50  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00638  10573 @REGION_2005_4,12
 10574  00006B54  00000002 DROP                                           12              12
 10575  00006B54  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 0088A  10663 @REGION_2005_1,12
 10664  00006B66  00000002 DROP                                           12              12
 10665  00006B66  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 00300  10666 @REGION_2005_2,12
 10667  00006B6A  00000002 DROP                                           12              12
 10668  00006B6A  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 008BC  10681 @REGION_2005_1,12
 10682  00006B98  00000002 DROP                                           12              12
 10683  00006B98  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 002E6  10684 @REGION_2005_2,12
 10685  00006B9C  00000002 DROP                                           12              12
 10686  00006B9C  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 008D0  10691 @REGION_2005_1,12
 10692  00006BAC  00000002 DROP                                           12              12
 10693  00006BAC  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 002D6  10694 @REGION_2005_2,12
 10695  00006BB0  00000002 DROP                                           12              12
 10696  00006BB0  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 008E4  10700 @REGION_2005_1,12
                                                      Using Map                                                            Page  653 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 10701  00006BC0  00000002 DROP                                           12              12
 10702  00006BC0  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 00042  10703 @REGION_2005_2,12
 10704  00006BC4  00000002 DROP                                           12              12
 10705  00006BC4  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 00280  10706 @REGION_2005_1,12
 10708  00006BCA  00000002 DROP                                           12              12
 10709  00006BCA  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 0020C  10873 @REGION_2005_2,12
 10874  00006EAC  00000002 DROP                                           12              12
 10875  00006EAC  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  10876 @REGION_2005_4,12
 10877  00006EB0  00000002 DROP                                           12              12
 10878  00006EB0  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 005DA  11062 @REGION_2005_2,12
 11063  00007182  00000002 DROP                                           12              12
 11064  00007182  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  11065 @REGION_2005_4,12
 11066  00007186  00000002 DROP                                           12              12
 11067  00007186  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 008DE  11275 @REGION_2005_2,12
 11276  000074A4  00000002 DROP                                           12              12
 11277  000074A4  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  11278 @REGION_2005_4,12
 11279  000074A8  00000002 DROP                                           12              12
 11280  000074A8  00000002 USING  ORDINARY    00006BCA 00001000 00000002  12 009A2  11360 @REGION_2005_2,12
 11362  00007572  00000002 DROP                                           12              12
 11363  00007572  00000002 USING  ORDINARY    00007572 00001000 00000002  12 00342  11557 @REGION_2005_3,12
 11558  000078B0  00000002 DROP                                           12              12
 11559  000078B0  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  11560 @REGION_2005_4,12
 11561  000078B4  00000002 DROP                                           12              12
 11562  000078B4  00000002 USING  ORDINARY    00007572 00001000 00000002  12 0038E  11585 @REGION_2005_3,12
 11586  000078FC  00000002 DROP                                           12              12
 11587  000078FC  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 005E2  11588 @REGION_2005_4,12
 11589  00007900  00000002 DROP                                           12              12
 11590  00007900  00000002 USING  ORDINARY    00007572 00001000 00000002  12 0024E  11602 @REGION_2005_3,12
 11603  0000791C  00000002 DROP                                           12              12
 11604  0000791C  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 005E2  11605 @REGION_2005_4,12
 11606  00007920  00000002 DROP                                           12              12
 11607  00007920  00000002 USING  ORDINARY    00007572 00001000 00000002  12 00686  11822 @REGION_2005_3,12
 11823  00007BF4  00000002 DROP                                           12              12
 11824  00007BF4  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  11825 @REGION_2005_4,12
 11826  00007BF8  00000002 DROP                                           12              12
 11827  00007BF8  00000002 USING  ORDINARY    00007572 00001000 00000002  12 0095E  12038 @REGION_2005_3,12
 12039  00007ECC  00000002 DROP                                           12              12
 12040  00007ECC  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00678  12041 @REGION_2005_4,12
 12042  00007ED0  00000002 DROP                                           12              12
 12043  00007ED0  00000002 USING  ORDINARY    00007572 00001000 00000002  12 009BC  12074 @REGION_2005_3,12
 12075  00007F2A  00000002 DROP                                           12              12
 12076  00007F2A  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00260  12077 @REGION_2005_4,12
 12078  00007F2E  00000002 DROP                                           12              12
 12079  00007F2E  00000002 USING  ORDINARY    00007572 00001000 00000002  12 0023E  12088 @REGION_2005_3,12
 12090  00007F34  00000002 DROP                                           12              12
 12091  00007F34  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00600  12605 @REGION_2005_4,12
 12606  00008530  00000002 DROP                                           12              12
 12607  00008530  00000002 USING  ORDINARY    00007572 00001000 00000002  12 003AE  12608 @REGION_2005_3,12
 12609  00008534  00000002 DROP                                           12              12
 12610  00008534  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00656  12647 @REGION_2005_4,12
 12648  00008586  00000002 DROP                                           12              12
 12649  00008586  00000002 USING  ORDINARY    000062E0 00001000 00000002  12 00874  12650 @REGION_2005_1,12
 12651  0000858A  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  654 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 12652  0000858A  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 0073E  12754 @REGION_2005_4,12
 12755  00008642  00000002 DROP                                           12              12
 12756  00008642  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 00264  12757 @REGION_2005_5,12
 12758  00008646  00000002 DROP                                           12              12
 12759  00008646  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00738  12768 @REGION_2005_4,12
 12769  00008668  00000002 DROP                                           12              12
 12770  00008668  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 00264  12771 @REGION_2005_5,12
 12772  0000866C  00000002 DROP                                           12              12
 12773  0000866C  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00836  12877 @REGION_2005_4,12
 12878  00008718  00000002 DROP                                           12              12
 12879  00008718  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 0011A  12880 @REGION_2005_5,12
 12881  0000871C  00000002 DROP                                           12              12
 12882  0000871C  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00124  12897 @REGION_2005_4,12
 12898  00008766  00000002 DROP                                           12              12
 12899  00008766  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 0011A  12900 @REGION_2005_5,12
 12901  0000876A  00000002 DROP                                           12              12
 12902  0000876A  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00124  12905 @REGION_2005_4,12
 12906  00008776  00000002 DROP                                           12              12
 12907  00008776  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 000EE  12908 @REGION_2005_5,12
 12909  0000877A  00000002 DROP                                           12              12
 12910  0000877A  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 0089C  12930 @REGION_2005_4,12
 12931  000087CC  00000002 DROP                                           12              12
 12932  000087CC  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 000EA  12933 @REGION_2005_5,12
 12934  000087D0  00000002 DROP                                           12              12
 12935  000087D0  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00124  12938 @REGION_2005_4,12
 12939  000087DC  00000002 DROP                                           12              12
 12940  000087DC  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 000D8  12941 @REGION_2005_5,12
 12942  000087E0  00000002 DROP                                           12              12
 12943  000087E0  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 008D4  12954 @REGION_2005_4,12
 12955  00008804  00000002 DROP                                           12              12
 12956  00008804  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 00082  12957 @REGION_2005_5,12
 12958  00008808  00000002 DROP                                           12              12
 12959  00008808  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00124  12960 @REGION_2005_4,12
 12962  0000880E  00000002 DROP                                           12              12
 12963  0000880E  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 000EA  13009 @REGION_2005_5,12
 13010  000088F4  00000002 DROP                                           12              12
 13011  000088F4  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 008AC  13012 @REGION_2005_4,12
 13013  000088F8  00000002 DROP                                           12              12
 13014  000088F8  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 00106  13022 @REGION_2005_5,12
 13023  00008910  00000002 DROP                                           12              12
 13024  00008910  00000002 USING  ORDINARY    00007F34 00001000 00000002  12 00846  13025 @REGION_2005_4,12
 13026  00008914  00000002 DROP                                           12              12
 13027  00008914  00000002 USING  ORDINARY    0000880E 00001000 00000002  12 00264  13153 @REGION_2005_5,12
 13182  00008ABA  00000002 DROP                                           12              12
 13364  00008B66  00000002 USING  ORDINARY    00008B28 00001000 00000002  12 0062A  13858 @REGION_2006_1,12
 13885  0000919A  00000002 DROP                                           12              12
 13960  0000924E  00000002 USING  ORDINARY    00009210 00001000 00000002  12 000A8  13968 @REGION_2007_1,12
 13996  000092C0  00000002 DROP                                           12              12
 14068  00009376  00000002 USING  ORDINARY    00009338 00001000 00000002  12 00074  14099 @REGION_1920_1,12
 14125  00009440  00000002 DROP                                           12              12
 14195  000094EE  00000002 USING  ORDINARY    000094B0 00001000 00000002  12 00102  14263 @REGION_2008_1,12
 14292  0000960A  00000002 DROP                                           12              12
 14362  000096BE  00000002 USING  ORDINARY    00009680 00001000 00000002  12 000D0  14373 @REGION_2009_1,12
                                                      Using Map                                                            Page  655 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 14413  00009758  00000002 DROP                                           12              12
 14482  00009806  00000002 USING  ORDINARY    000097C8 00001000 00000002  12 000B0  14493 @REGION_2010_1,12
 14521  00009880  00000002 DROP                                           12              12
 14590  00009936  00000002 USING  ORDINARY    000098F8 00001000 00000002  12 00140  14642 @REGION_2011_1,12
 14673  00009A40  00000002 DROP                                           12              12
 14743  00009AF6  00000002 USING  ORDINARY    00009AB8 00001000 00000002  12 000E0  14766 @REGION_2012_1,12
 14796  00009BA0  00000002 DROP                                           12              12
 14865  00009C4E  00000002 USING  ORDINARY    00009C10 00001000 00000002  12 000D0  14882 @REGION_2013_1,12
 14911  00009CE8  00000002 DROP                                           12              12
 14980  00009D9E  00000002 USING  ORDINARY    00009D60 00001000 00000002  12 00148  15042 @REGION_2014_1,12
 15074  00009EB0  00000002 DROP                                           12              12
 15144  00009F56  00000002 USING  ORDINARY    00009F18 00001000 00000002  12 00118  15195 @REGION_2015_1,12
 15228  0000A038  00000002 DROP                                           12              12
 15297  0000A0DE  00000002 USING  ORDINARY    0000A0A0 00001000 00000002  12 00516  15702 @REGION_2016_1,12
 15730  0000A5FE  00000002 DROP                                           12              12
 15801  0000A6AE  00000002 USING  ORDINARY    0000A670 00001000 00000002  12 0020A  15974 @REGION_2017_1,12
 16002  0000A8C2  00000002 DROP                                           12              12
 16073  0000A976  00000002 USING  ORDINARY    0000A938 00001000 00000002  12 0015E  16168 @REGION_2018_1,12
 16196  0000AADE  00000002 DROP                                           12              12
 16268  0000AB86  00000002 USING  ORDINARY    0000AB48 00001000 00000002  12 00160  16351 @REGION_1080_1,12
 16390  0000ACF0  00000002 DROP                                           12              12
 16459  0000AD9E  00000002 USING  ORDINARY    0000AD60 00001000 00000002  12 00280  16643 @REGION_2019_1,12
 16671  0000B028  00000002 DROP                                           12              12
 16744  0000B0CE  00000002 USING  ORDINARY    0000B090 00001000 00000002  12 0010E  16809 @REGION_1081_1,12
 16837  0000B1E6  00000002 DROP                                           12              12
 16906  0000B296  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 006A2  17373 @REGION_2021_1,12
 17374  0000B886  00000002 DROP                                           12              12
 17375  0000B886  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 00300  17376 @REGION_2021_2,12
 17377  0000B88A  00000002 DROP                                           12              12
 17378  0000B88A  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00150  17402 @REGION_2021_1,12
 17403  0000B8B0  00000002 DROP                                           12              12
 17404  0000B8B0  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17405 @REGION_2021_2,12
 17406  0000B8B4  00000002 DROP                                           12              12
 17407  0000B8B4  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00148  17416 @REGION_2021_1,12
 17417  0000B8BE  00000002 DROP                                           12              12
 17418  0000B8BE  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17419 @REGION_2021_2,12
 17420  0000B8C2  00000002 DROP                                           12              12
 17421  0000B8C2  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00148  17434 @REGION_2021_1,12
 17435  0000B8CC  00000002 DROP                                           12              12
 17436  0000B8CC  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17437 @REGION_2021_2,12
 17438  0000B8D0  00000002 DROP                                           12              12
 17439  0000B8D0  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00148  17447 @REGION_2021_1,12
 17448  0000B8DA  00000002 DROP                                           12              12
 17449  0000B8DA  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17450 @REGION_2021_2,12
 17451  0000B8DE  00000002 DROP                                           12              12
 17452  0000B8DE  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00148  17461 @REGION_2021_1,12
 17462  0000B8E8  00000002 DROP                                           12              12
 17463  0000B8E8  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17464 @REGION_2021_2,12
 17465  0000B8EC  00000002 DROP                                           12              12
 17466  0000B8EC  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00148  17474 @REGION_2021_1,12
 17475  0000B8F6  00000002 DROP                                           12              12
 17476  0000B8F6  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17477 @REGION_2021_2,12
 17478  0000B8FA  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  656 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 17479  0000B8FA  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 007CC  17512 @REGION_2021_1,12
 17513  0000B968  00000002 DROP                                           12              12
 17514  0000B968  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 000A8  17515 @REGION_2021_2,12
 17516  0000B96C  00000002 DROP                                           12              12
 17517  0000B96C  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 007DE  17568 @REGION_2021_1,12
 17569  0000BA32  00000002 DROP                                           12              12
 17570  0000BA32  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 0008C  17571 @REGION_2021_2,12
 17572  0000BA36  00000002 DROP                                           12              12
 17573  0000BA36  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 007F2  17595 @REGION_2021_1,12
 17597  0000BA94  00000002 DROP                                           12              12
 17598  0000BA94  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 0000C  17599 @REGION_2021_2,12
 17600  0000BA9A  00000002 DROP                                           12              12
 17601  0000BA9A  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00694  17602 @REGION_2021_1,12
 17603  0000BA9E  00000002 DROP                                           12              12
 17604  0000BA9E  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 0009E  17625 @REGION_2021_2,12
 17626  0000BB2E  00000002 DROP                                           12              12
 17627  0000BB2E  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00686  17628 @REGION_2021_1,12
 17629  0000BB32  00000002 DROP                                           12              12
 17630  0000BB32  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 0000C  17631 @REGION_2021_2,12
 17632  0000BB38  00000002 DROP                                           12              12
 17633  0000BB38  00000002 USING  ORDINARY    0000B258 00001000 00000002  12 00694  17634 @REGION_2021_1,12
 17635  0000BB3C  00000002 DROP                                           12              12
 17636  0000BB3C  00000002 USING  ORDINARY    0000BA94 00001000 00000002  12 00300  17850 @REGION_2021_2,12
 17875  0000BDDC  00000002 DROP                                           12              12
 17966  0000BE96  00000002 USING  ORDINARY    0000BE58 00001000 00000002  12 00400  18298 @REGION_2020_1,12
 18326  0000C2A0  00000002 DROP                                           12              12
 18401  0000C34E  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00130  18429 @REGION_2022_1,12
 18430  0000C398  00000002 DROP                                           12              12
 18431  0000C398  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 0085A  18432 @REGION_2022_2,12
 18433  0000C39C  00000002 DROP                                           12              12
 18434  0000C39C  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00812  18990 @REGION_2022_1,12
 18991  0000CACC  00000002 DROP                                           12              12
 18992  0000CACC  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  18993 @REGION_2022_2,12
 18994  0000CAD0  00000002 DROP                                           12              12
 18995  0000CAD0  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 000A0  19022 @REGION_2022_1,12
 19023  0000CAE6  00000002 DROP                                           12              12
 19024  0000CAE6  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  19025 @REGION_2022_2,12
 19026  0000CAEA  00000002 DROP                                           12              12
 19027  0000CAEA  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 000A0  19039 @REGION_2022_1,12
 19040  0000CAF4  00000002 DROP                                           12              12
 19041  0000CAF4  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  19042 @REGION_2022_2,12
 19043  0000CAF8  00000002 DROP                                           12              12
 19044  0000CAF8  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 000A0  19052 @REGION_2022_1,12
 19053  0000CB02  00000002 DROP                                           12              12
 19054  0000CB02  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  19055 @REGION_2022_2,12
 19056  0000CB06  00000002 DROP                                           12              12
 19057  0000CB06  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 000A0  19066 @REGION_2022_1,12
 19067  0000CB10  00000002 DROP                                           12              12
 19068  0000CB10  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  19069 @REGION_2022_2,12
 19070  0000CB14  00000002 DROP                                           12              12
 19071  0000CB14  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 000A0  19079 @REGION_2022_1,12
 19080  0000CB1E  00000002 DROP                                           12              12
 19081  0000CB1E  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  19082 @REGION_2022_2,12
                                                      Using Map                                                            Page  657 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 19083  0000CB22  00000002 DROP                                           12              12
 19084  0000CB22  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 0085A  19105 @REGION_2022_1,12
 19106  0000CB66  00000002 DROP                                           12              12
 19107  0000CB66  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00108  19108 @REGION_2022_2,12
 19109  0000CB6A  00000002 DROP                                           12              12
 19110  0000CB6A  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007CC  19115 @REGION_2022_1,12
 19117  0000CB80  00000002 DROP                                           12              12
 19118  0000CB80  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00010  19119 @REGION_2022_2,12
 19120  0000CB86  00000002 DROP                                           12              12
 19121  0000CB86  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19122 @REGION_2022_1,12
 19123  0000CB8A  00000002 DROP                                           12              12
 19124  0000CB8A  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002B0  19166 @REGION_2022_2,12
 19167  0000CCAC  00000002 DROP                                           12              12
 19168  0000CCAC  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007F6  19169 @REGION_2022_1,12
 19170  0000CCB0  00000002 DROP                                           12              12
 19171  0000CCB0  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00010  19172 @REGION_2022_2,12
 19173  0000CCB6  00000002 DROP                                           12              12
 19174  0000CCB6  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19175 @REGION_2022_1,12
 19176  0000CCBA  00000002 DROP                                           12              12
 19177  0000CCBA  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00154  19183 @REGION_2022_2,12
 19184  0000CCD0  00000002 DROP                                           12              12
 19185  0000CCD0  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19186 @REGION_2022_1,12
 19187  0000CCD4  00000002 DROP                                           12              12
 19188  0000CCD4  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 0017A  19195 @REGION_2022_2,12
 19196  0000CCF6  00000002 DROP                                           12              12
 19197  0000CCF6  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007CC  19198 @REGION_2022_1,12
 19199  0000CCFA  00000002 DROP                                           12              12
 19200  0000CCFA  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00192  19204 @REGION_2022_2,12
 19205  0000CD0E  00000002 DROP                                           12              12
 19206  0000CD0E  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007F6  19207 @REGION_2022_1,12
 19208  0000CD12  00000002 DROP                                           12              12
 19209  0000CD12  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 001A6  19212 @REGION_2022_2,12
 19213  0000CD22  00000002 DROP                                           12              12
 19214  0000CD22  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007CC  19215 @REGION_2022_1,12
 19216  0000CD26  00000002 DROP                                           12              12
 19217  0000CD26  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00010  19218 @REGION_2022_2,12
 19219  0000CD2C  00000002 DROP                                           12              12
 19220  0000CD2C  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19221 @REGION_2022_1,12
 19222  0000CD30  00000002 DROP                                           12              12
 19223  0000CD30  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00216  19231 @REGION_2022_2,12
 19232  0000CD4E  00000002 DROP                                           12              12
 19233  0000CD4E  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19234 @REGION_2022_1,12
 19235  0000CD52  00000002 DROP                                           12              12
 19236  0000CD52  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 001F8  19243 @REGION_2022_2,12
 19244  0000CD74  00000002 DROP                                           12              12
 19245  0000CD74  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007E8  19246 @REGION_2022_1,12
 19247  0000CD78  00000002 DROP                                           12              12
 19248  0000CD78  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 0020C  19251 @REGION_2022_2,12
 19252  0000CD88  00000002 DROP                                           12              12
 19253  0000CD88  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007DA  19254 @REGION_2022_1,12
 19255  0000CD8C  00000002 DROP                                           12              12
 19256  0000CD8C  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00010  19257 @REGION_2022_2,12
 19258  0000CD92  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  658 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 19259  0000CD92  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19260 @REGION_2022_1,12
 19261  0000CD96  00000002 DROP                                           12              12
 19262  0000CD96  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 0023A  19268 @REGION_2022_2,12
 19269  0000CDAC  00000002 DROP                                           12              12
 19270  0000CDAC  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007DA  19271 @REGION_2022_1,12
 19272  0000CDB0  00000002 DROP                                           12              12
 19273  0000CDB0  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00010  19274 @REGION_2022_2,12
 19275  0000CDB6  00000002 DROP                                           12              12
 19276  0000CDB6  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19277 @REGION_2022_1,12
 19278  0000CDBA  00000002 DROP                                           12              12
 19279  0000CDBA  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00254  19285 @REGION_2022_2,12
 19286  0000CDD0  00000002 DROP                                           12              12
 19287  0000CDD0  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19288 @REGION_2022_1,12
 19289  0000CDD4  00000002 DROP                                           12              12
 19290  0000CDD4  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 0027A  19297 @REGION_2022_2,12
 19298  0000CDF6  00000002 DROP                                           12              12
 19299  0000CDF6  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007DA  19300 @REGION_2022_1,12
 19301  0000CDFA  00000002 DROP                                           12              12
 19302  0000CDFA  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00292  19306 @REGION_2022_2,12
 19307  0000CE0E  00000002 DROP                                           12              12
 19308  0000CE0E  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007F6  19309 @REGION_2022_1,12
 19310  0000CE12  00000002 DROP                                           12              12
 19311  0000CE12  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 002A6  19314 @REGION_2022_2,12
 19315  0000CE22  00000002 DROP                                           12              12
 19316  0000CE22  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 007DA  19317 @REGION_2022_1,12
 19318  0000CE26  00000002 DROP                                           12              12
 19319  0000CE26  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 00010  19320 @REGION_2022_2,12
 19321  0000CE2C  00000002 DROP                                           12              12
 19322  0000CE2C  00000002 USING  ORDINARY    0000C310 00001000 00000002  12 00804  19323 @REGION_2022_1,12
 19324  0000CE30  00000002 DROP                                           12              12
 19325  0000CE30  00000002 USING  ORDINARY    0000CB80 00001000 00000002  12 0085A  19806 @REGION_2022_2,12
 19833  0000D422  00000002 DROP                                           12              12
 19936  0000D4DE  00000002 USING  ORDINARY    0000D4A0 00001000 00000002  12 002E6  20158 @REGION_2023_1,12
 20186  0000D7CE  00000002 DROP                                           12              12
 20265  0000D87E  00000002 USING  ORDINARY    0000D840 00001000 00000002  12 00222  20425 @REGION_1082_1,12
 20450  0000DAAA  00000002 DROP                                           12              12
 20519  0000DB4E  00000002 USING  ORDINARY    0000DB10 00001000 00000002  12 000F0  20592 @REGION_2024_1,12
 20617  0000DC8E  00000002 DROP                                           12              12
 20685  0000DD36  00000002 USING  ORDINARY    0000DCF8 00001000 00000002  12 00138  20714 @REGION_2025_1,12
 20715  0000DD82  00000002 DROP                                           12              12
 20716  0000DD82  00000002 USING  ORDINARY    0000E5B0 00001000 00000002  12 00500  20717 @REGION_2025_2,12
 20718  0000DD86  00000002 DROP                                           12              12
 20719  0000DD86  00000002 USING  ORDINARY    0000DCF8 00001000 00000002  12 0086E  21274 @REGION_2025_1,12
 21275  0000E4BC  00000002 DROP                                           12              12
 21276  0000E4BC  00000002 USING  ORDINARY    0000E5B0 00001000 00000002  12 00500  21277 @REGION_2025_2,12
 21278  0000E4C0  00000002 DROP                                           12              12
 21279  0000E4C0  00000002 USING  ORDINARY    0000DCF8 00001000 00000002  12 0081A  21313 @REGION_2025_1,12
 21314  0000E50E  00000002 DROP                                           12              12
 21315  0000E50E  00000002 USING  ORDINARY    0000E5B0 00001000 00000002  12 00500  21316 @REGION_2025_2,12
 21317  0000E512  00000002 DROP                                           12              12
 21318  0000E512  00000002 USING  ORDINARY    0000DCF8 00001000 00000002  12 00128  21353 @REGION_2025_1,12
 21354  0000E558  00000002 DROP                                           12              12
 21355  0000E558  00000002 USING  ORDINARY    0000E5B0 00001000 00000002  12 00500  21356 @REGION_2025_2,12
                                                      Using Map                                                            Page  659 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 21357  0000E55C  00000002 DROP                                           12              12
 21358  0000E55C  00000002 USING  ORDINARY    0000DCF8 00001000 00000002  12 00880  21382 @REGION_2025_1,12
 21383  0000E574  00000002 DROP                                           12              12
 21384  0000E574  00000002 USING  ORDINARY    0000E5B0 00001000 00000002  12 0010A  21385 @REGION_2025_2,12
 21386  0000E578  00000002 DROP                                           12              12
 21387  0000E578  00000002 USING  ORDINARY    0000DCF8 00001000 00000002  12 00130  21403 @REGION_2025_1,12
 21405  0000E5B0  00000002 DROP                                           12              12
 21406  0000E5B0  00000002 USING  ORDINARY    0000E5B0 00001000 00000002  12 00500  21851 @REGION_2025_2,12
 21877  0000EAF8  00000002 DROP                                           12              12
 21977  0000EBA6  00000002 USING  ORDINARY    0000EB68 00001000 00000002  12 0048A  22352 @REGION_2026_1,12
 22380  0000F03A  00000002 DROP                                           12              12
 22458  0000F0E6  00000002 USING  ORDINARY    0000F0A8 00001000 00000002  12 0015A  22557 @REGION_2027_1,12
 22585  0000F24A  00000002 DROP                                           12              12
 22655  0000F2FE  00000002 USING  ORDINARY    0000F2C0 00001000 00000002  12 001B4  22770 @REGION_2028_1,12
 22798  0000F4BC  00000002 DROP                                           12              12
 22870  0000F566  00000002 USING  ORDINARY    0000F528 00001000 00000002  12 004FC  23259 @REGION_1083_1,12
 23306  0000FA6C  00000002 DROP                                           12              12
 23377  0000FB16  00000002 USING  ORDINARY    0000FAD8 00001000 00000002  12 001C2  23510 @REGION_2029_1,12
 23538  0000FCE2  00000002 DROP                                           12              12
 23609  0000FD8E  00000002 USING  ORDINARY    0000FD50 00001000 00000002  12 004FA  24027 @REGION_2030_1,12
 24057  00010292  00000002 DROP                                           12              12
 24132  00010346  00000002 USING  ORDINARY    00010308 00001000 00000002  12 001B4  24247 @REGION_2031_1,12
 24275  00010504  00000002 DROP                                           12              12
 24347  000105AE  00000002 USING  ORDINARY    00010570 00001000 00000002  12 00460  24685 @REGION_1084_1,12
 24732  00010A18  00000002 DROP                                           12              12
 24803  00010ABE  00000002 USING  ORDINARY    00010A80 00001000 00000002  12 00100  24832 @REGION_2032_1,12
 24863  00010B88  00000002 DROP                                           12              12
 24931  00010C36  00000002 USING  ORDINARY    00010BF8 00001000 00000002  12 00160  24976 @REGION_1997_1,12
 25012  00010D60  00000002 DROP                                           12              12
 25081  00010E0E  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 00264  25105 @REGION_2033_1,12
 25106  00010E40  00000002 DROP                                           12              12
 25107  00010E40  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00932  25108 @REGION_2033_4,12
 25109  00010E44  00000002 DROP                                           12              12
 25110  00010E44  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 00404  25340 @REGION_2033_1,12
 25341  0001118C  00000002 DROP                                           12              12
 25342  0001118C  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  25343 @REGION_2033_4,12
 25344  00011190  00000002 DROP                                           12              12
 25345  00011190  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 006B8  25565 @REGION_2033_1,12
 25566  00011484  00000002 DROP                                           12              12
 25567  00011484  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  25568 @REGION_2033_4,12
 25569  00011488  00000002 DROP                                           12              12
 25570  00011488  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 006DA  25580 @REGION_2033_1,12
 25581  000114A6  00000002 DROP                                           12              12
 25582  000114A6  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00882  25583 @REGION_2033_2,12
 25584  000114AA  00000002 DROP                                           12              12
 25585  000114AA  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 006EC  25667 @REGION_2033_1,12
 25668  000114B8  00000002 DROP                                           12              12
 25669  000114B8  00000002 USING  ORDINARY    00011688 00001000 00000002  12 0018E  25670 @REGION_2033_2,12
 25671  000114BC  00000002 DROP                                           12              12
 25672  000114BC  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 0071E  25685 @REGION_2033_1,12
 25686  000114EA  00000002 DROP                                           12              12
 25687  000114EA  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00174  25688 @REGION_2033_2,12
 25689  000114EE  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  660 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 25690  000114EE  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 0072E  25694 @REGION_2033_1,12
 25695  000114FA  00000002 DROP                                           12              12
 25696  000114FA  00000002 USING  ORDINARY    00011688 00001000 00000002  12 000C6  25697 @REGION_2033_2,12
 25698  000114FE  00000002 DROP                                           12              12
 25699  000114FE  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 008A8  25799 @REGION_2033_1,12
 25800  00011674  00000002 DROP                                           12              12
 25801  00011674  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00000  25802 @REGION_2033_2,12
 25803  00011678  00000002 DROP                                           12              12
 25804  00011678  00000002 USING  ORDINARY    00010DD0 00001000 00000002  12 002D0  25808 @REGION_2033_1,12
 25810  00011688  00000002 DROP                                           12              12
 25811  00011688  00000002 USING  ORDINARY    00011688 00001000 00000002  12 000F0  25854 @REGION_2033_2,12
 25855  0001175A  00000002 DROP                                           12              12
 25856  0001175A  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  25857 @REGION_2033_4,12
 25858  0001175E  00000002 DROP                                           12              12
 25859  0001175E  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00460  26062 @REGION_2033_2,12
 26063  00011AC6  00000002 DROP                                           12              12
 26064  00011AC6  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  26065 @REGION_2033_4,12
 26066  00011ACA  00000002 DROP                                           12              12
 26067  00011ACA  00000002 USING  ORDINARY    00011688 00001000 00000002  12 0075C  26273 @REGION_2033_2,12
 26274  00011DE0  00000002 DROP                                           12              12
 26275  00011DE0  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  26276 @REGION_2033_4,12
 26277  00011DE4  00000002 DROP                                           12              12
 26278  00011DE4  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00896  26372 @REGION_2033_2,12
 26373  00011F1A  00000002 DROP                                           12              12
 26374  00011F1A  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00932  26375 @REGION_2033_4,12
 26376  00011F1E  00000002 DROP                                           12              12
 26377  00011F1E  00000002 USING  ORDINARY    00011688 00001000 00000002  12 008D2  26417 @REGION_2033_2,12
 26418  00011F56  00000002 DROP                                           12              12
 26419  00011F56  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00230  26420 @REGION_2033_3,12
 26421  00011F5A  00000002 DROP                                           12              12
 26422  00011F5A  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00904  26435 @REGION_2033_2,12
 26436  00011F88  00000002 DROP                                           12              12
 26437  00011F88  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00230  26438 @REGION_2033_3,12
 26439  00011F8C  00000002 DROP                                           12              12
 26440  00011F8C  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00914  26444 @REGION_2033_2,12
 26445  00011F98  00000002 DROP                                           12              12
 26446  00011F98  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00220  26447 @REGION_2033_3,12
 26448  00011F9C  00000002 DROP                                           12              12
 26449  00011F9C  00000002 USING  ORDINARY    00011688 00001000 00000002  12 009B6  26489 @REGION_2033_2,12
 26490  0001203A  00000002 DROP                                           12              12
 26491  0001203A  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00000  26492 @REGION_2033_3,12
 26493  0001203E  00000002 DROP                                           12              12
 26494  0001203E  00000002 USING  ORDINARY    00011688 00001000 00000002  12 00170  26497 @REGION_2033_2,12
 26499  00012048  00000002 DROP                                           12              12
 26500  00012048  00000002 USING  ORDINARY    00012048 00001000 00000002  12 0015A  26621 @REGION_2033_3,12
 26622  00012274  00000002 DROP                                           12              12
 26623  00012274  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  26624 @REGION_2033_4,12
 26625  00012278  00000002 DROP                                           12              12
 26626  00012278  00000002 USING  ORDINARY    00012048 00001000 00000002  12 004DC  26870 @REGION_2033_3,12
 26871  00012506  00000002 DROP                                           12              12
 26872  00012506  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  26873 @REGION_2033_4,12
 26874  0001250A  00000002 DROP                                           12              12
 26875  0001250A  00000002 USING  ORDINARY    00012048 00001000 00000002  12 007AE  27057 @REGION_2033_3,12
                                                      Using Map                                                            Page  661 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 27058  000127D4  00000002 DROP                                           12              12
 27059  000127D4  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00816  27060 @REGION_2033_4,12
 27061  000127D8  00000002 DROP                                           12              12
 27062  000127D8  00000002 USING  ORDINARY    00012048 00001000 00000002  12 007CC  27079 @REGION_2033_3,12
 27080  00012810  00000002 DROP                                           12              12
 27081  00012810  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00232  27082 @REGION_2033_4,12
 27083  00012814  00000002 DROP                                           12              12
 27084  00012814  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00802  27098 @REGION_2033_3,12
 27099  00012846  00000002 DROP                                           12              12
 27100  00012846  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00232  27101 @REGION_2033_4,12
 27102  0001284A  00000002 DROP                                           12              12
 27103  0001284A  00000002 USING  ORDINARY    00012048 00001000 00000002  12 0083A  27117 @REGION_2033_3,12
 27118  0001287E  00000002 DROP                                           12              12
 27119  0001287E  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00232  27120 @REGION_2033_4,12
 27121  00012882  00000002 DROP                                           12              12
 27122  00012882  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00870  27136 @REGION_2033_3,12
 27137  000128B4  00000002 DROP                                           12              12
 27138  000128B4  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00232  27139 @REGION_2033_4,12
 27140  000128B8  00000002 DROP                                           12              12
 27141  000128B8  00000002 USING  ORDINARY    00012048 00001000 00000002  12 00880  27145 @REGION_2033_3,12
 27146  000128C4  00000002 DROP                                           12              12
 27147  000128C4  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00228  27148 @REGION_2033_4,12
 27149  000128C8  00000002 DROP                                           12              12
 27150  000128C8  00000002 USING  ORDINARY    00012048 00001000 00000002  12 0091C  27229 @REGION_2033_3,12
 27231  000129F0  00000002 DROP                                           12              12
 27232  000129F0  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00932  27784 @REGION_2033_4,12
 27785  000131E6  00000002 DROP                                           12              12
 27786  000131E6  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 0005A  27787 @REGION_2033_5,12
 27788  000131EA  00000002 DROP                                           12              12
 27789  000131EA  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00120  27800 @REGION_2033_4,12
 27801  00013202  00000002 DROP                                           12              12
 27802  00013202  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 0005A  27803 @REGION_2033_5,12
 27804  00013206  00000002 DROP                                           12              12
 27805  00013206  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00932  27900 @REGION_2033_4,12
 27901  000132F8  00000002 DROP                                           12              12
 27902  000132F8  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 0005A  27903 @REGION_2033_5,12
 27904  000132FC  00000002 DROP                                           12              12
 27905  000132FC  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00968  27931 @REGION_2033_4,12
 27932  00013338  00000002 DROP                                           12              12
 27933  00013338  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 0005A  27934 @REGION_2033_5,12
 27935  0001333C  00000002 DROP                                           12              12
 27936  0001333C  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 009AA  27971 @REGION_2033_4,12
 27972  00013396  00000002 DROP                                           12              12
 27973  00013396  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 00000  27974 @REGION_2033_5,12
 27975  0001339A  00000002 DROP                                           12              12
 27976  0001339A  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00118  27978 @REGION_2033_4,12
 27979  000133A4  00000002 DROP                                           12              12
 27980  000133A4  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 00016  27981 @REGION_2033_5,12
 27982  000133A8  00000002 DROP                                           12              12
 27983  000133A8  00000002 USING  ORDINARY    000129F0 00001000 00000002  12 00000        @REGION_2033_4,12
 27985  000133A8  00000002 DROP                                           12              12
 27986  000133A8  00000002 USING  ORDINARY    000133A8 00001000 00000002  12 000C0  28011 @REGION_2033_5,12
 28041  00013470  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  662 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
 28233  00013516  00000002 USING  ORDINARY    000134D8 00001000 00000002  12 0048E  28579 @REGION_1925_1,12
 28611  000139AE  00000002 DROP                                           12              12
 28683  00013A56  00000002 USING  ORDINARY    00013A18 00001000 00000002  12 00306  28909 @REGION_1926_1,12
 28939  00013D66  00000002 DROP                                           12              12
 29010  00013E0E  00000002 USING  ORDINARY    00013DD0 00001000 00000002  12 002C8  29219 @REGION_2034_1,12
 29246  000140E0  00000002 DROP                                           12              12
 29321  0001417E  00000002 USING  ORDINARY    00014140 00001000 00000002  12 002B8  29496 @REGION_1927_1,12
 29535  00014400  00000002 DROP                                           12              12
 29605  0001449E  00000002 USING  ORDINARY    00014460 00001000 00000002  12 001F0  29706 @REGION_1928_1,12
 29741  00014658  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  663 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_TXNMGR ..\asg\asm\rdkafka_txnmgr.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCPRV   C:\DIGNUS\MACLIB\dccprv
  L5  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 12.43.39 Stop Time: 12.43.39 Processor Time: 00.00.00.1990
Return Code 000
