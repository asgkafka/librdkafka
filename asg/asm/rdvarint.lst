                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdvarint.obj ../asg/asm/rdvarint.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdvarint.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
@@ZARCH#  WX 00000001                              00
@RDVARINT SD 00000002 00000000 00001820            07  @CODE
fprintf   ER 00000003                                  FPRINTF
rd_unittest_assert_on_failure
          XD 00000004 00000003 00000000                RD_UNITTEST_ASSERT_ON_FAILURE
rd_buf_push0
          ER 00000005                                  RD_BUF_PUSH0
rd_buf_init
          ER 00000006                                  RD_BUF_INIT
rd_buf_destroy
          ER 00000007                                  RD_BUF_DESTROY
@@ASSERT  ER 00000008                                  __ASSERT
rd_slice_init_full
          ER 00000009                                  RD_SLICE_INIT_FULL
rd_slice_read_uvarint
          ER 0000000A                                  RD_SLICE_READ_UVARINT
rd_slice_narrow_copy
          ER 0000000B                                  RD_SLICE_NARROW_COPY
@@STDERP  XD 0000000C 00000003 00000000                __STDERRP
@rdvarint&
          XD 0000000D 00000007 00000200                @@STATIC
@rdvarint SD 0000000E 00001820 00000438            07  @DATA
@@STDERP  ER 0000000F                                  @E__STDERRP
rd_unittest_assert_on_failure
          ER 00000010                                  @ERD_UNITTEST_ASSERT_ON_FAILURE
rdvarint: SD 00000011 00001C58 00000230            07  @@INIT@
unittest_rdvarint
          LD          00001560          00000002   00  UNITTEST_RDVARINT
                                                                                                                           Page    4 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:36:23 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDVARINT'
00000000                00000000 00001820     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdvarint'
                                              18 fprintf  ALIAS C'fprintf'
                                              19          EXTRN fprintf
                                              20 rd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A2859*
                                                                9A36D96956D86818993A49985'
                                              21 rd_unittest_assert_on_failure DXD   0F
                                              22 rd_buf_push0 ALIAS X'99846D82A4866D97A4A288F0'
                                              23          EXTRN rd_buf_push0
                                              24 rd_buf_init ALIAS X'99846D82A4866D899589A3'
                                              25          EXTRN rd_buf_init
                                              26 rd_buf_destroy ALIAS X'99846D82A4866D8485A2A39996A8'
                                              27          EXTRN rd_buf_destroy
                                              28 __assert ALIAS C'@@ASSERT'
                                              29          EXTRN __assert
                                              30 rd_slice_init_full ALIAS X'99846DA2938983856D899589A36D86A49393'
                                              31          EXTRN rd_slice_init_full
                                              32 rd_slice_read_uvarint ALIAS X'99846DA2938983856D998581846DA4A581998995A*
                                                                3'
                                              33          EXTRN rd_slice_read_uvarint
                                              34 rd_slice_narrow_copy ALIAS X'99846DA2938983856D9581999996A66D839697A8'
                                              35          EXTRN rd_slice_narrow_copy
                                              36 __stderrp ALIAS C'@@STDERP'
                                              37 __stderrp DXD   0F
                                              38 *
                                              39 *
                                              40 *
                                              41 * ....... start of rd_slice_offset
00000000                                      42 @LNAME805 DS   0H
00000000 0000000F                             43          DC    X'0000000F'
00000004 99846DA293898385                     44          DC    C'rd_slice_offset'
00000013 00                                   45          DC    X'00'
                                              46 rd_slice_offset DCCPRLG CINDEX=805,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME805
                                              47          macro
                                              48          dccextrn &m
                                              49          gblc    &$dccext(1000)
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                              50          gbla    &$dccexti
                                              51          lcla    &i
                                              52 &$dccext(&$dccexti+1) setc    '&m'
                                              53 &i       seta    1
                                              54 .loop    aif    (&i gt &$dccexti).around
                                              55          aif    ('&$dccext(&i)' eq '&m').getout
                                              56 &i       seta    &i+1
                                              57          ago     .loop
                                              58 .around  anop
                                              59 &$dccexti seta &$dccexti+1
                                              60          extrn  &m
                                              61 .getout  anop
                                              62          mend
00000018                                      63+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                               64+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                   65+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                             66+         dc a(0)                                                        02-DCCCA
00000020 0000000000000000                     67+         dc ad(0)                                                       02-DCCCA
00000028 00000000000000A8                     68+         dc ad(168)                                                     02-DCCCA
00000030 0000000000000000                     69+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                     70+         dc ad(4096)                                                    02-DCCCA
00000040 20                                   71+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                   72+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                   73+         dc al1(3)                                                      02-DCCCA
00000043 08                                   74+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                   75+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                               76+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                     77+         dc ad(@LNAME805)                                               02-DCCCA
00000050                                      78+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                     79+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                     80+         dc ad(0)                                                       02-DCCCA
00000060                                      81+         ds    0d                                                       01-DCCPR
00000060                                      82+rd_slice_offset ds 0d                                                   01-DCCPR
00000060                                      83+@REGION_805_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008     84+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 B904 00CF                            85+         lgr   12,15               set base reg                         01-DCCPR
                        00000060              86+         using @REGION_805_1,12                                         01-DCCPR
                                              87 * ******* End of Prologue
                                              88 * *
                                              89 * ***           if (((!slice->seg)))
0000006A E3F0 1000 0004          00000000     90          LG    15,0(0,1)   ; slice
00000070 E310 F008 0002          00000008     91          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000076 4770 C02E               0000008E     92          BNZ   @L49
                                              93 * ***                   return ((slice)->end - (slice)->start);
0000007A E310 F020 0004          00000020     94          LG    1,32(0,15)  ; offset of end in rd_slice_s
00000080 E310 F018 000B          00000018     95          SLG   1,24(0,15)
00000086 B904 00F1                            96          LGR   15,1
0000008A 47F0 C04A               000000AA     97          B     @ret_lab_805
0000008E                                      98 @L49     DS    0H
                                              99 * ***
                                             100 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                             101 * tart;
                                                                                                                           Page    6 
  Active Usings: @REGION_805_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000008E E310 F008 0004          00000008    102          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000094 E310 1028 0004          00000028    103          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
0000009A E310 F010 000A          00000010    104          ALG   1,16(0,15)
000000A0 E310 F018 000B          00000018    105          SLG   1,24(0,15)
000000A6 B904 00F1                           106          LGR   15,1
                                             107 * ***   }
000000AA                                     108 @ret_lab_805 DS 0H
                                             109 * * **** Start of Epilogue
                                             110          DCCEPIL
000000AA                                     111+         ds 0h                                                          01-DCCEP
                                             112+* Epilog
                                             113+* Epilog
000000AA E3E0 D008 0004          00000008    114+         lg    14,8(,13) restore the reg                                01-DCCEP
000000B0 EB1C D020 0004          00000020    115+         lmg   1,12,32(13)                                              01-DCCEP
000000B6 07FE                                116+         br   14                                                        01-DCCEP
                                             117+* End of Epilog
                                             118 * * **** End of Epilogue
                                             119          DROP  12
                                             120 *
                                             121 *   DSECT for automatic variables in "rd_slice_offset"
                                             122 *      (FUNCTION #805)
                                             123 *
00000000                00000000 000000A8    124 @AUTO#rd_slice_offset DSECT
00000000                                     125          DS    XL168
                                             126 *
000000B8                00000000 00001820    127 @CODE    CSECT
                                             128 *
                                             129 *
                                             130 *
                                             131 * ....... start of rd_slice_read_varint
000000B8                                     132 @LNAME814 DS   0H
000000B8 00000014                            133          DC    X'00000014'
000000BC 99846DA293898385                    134          DC    C'rd_slice_read_varint'
000000D0 00                                  135          DC    X'00'
                                             136 rd_slice_read_varint DCCPRLG CINDEX=814,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME814
                                             137          macro
                                             138          dccextrn &m
                                             139          gblc    &$dccext(1000)
                                             140          gbla    &$dccexti
                                             141          lcla    &i
                                             142 &$dccext(&$dccexti+1) setc    '&m'
                                             143 &i       seta    1
                                             144 .loop    aif    (&i gt &$dccexti).around
                                             145          aif    ('&$dccext(&i)' eq '&m').getout
                                             146 &i       seta    &i+1
                                             147          ago     .loop
                                             148 .around  anop
                                             149 &$dccexti seta &$dccexti+1
                                             150          extrn  &m
                                             151 .getout  anop
                                             152          mend
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000000D8                                     153+$eye0005    ds    0d                                                    02-DCCCA
000000D8 C4C3C3                              154+         dc cl3'DCC'                                                    02-DCCCA
000000DB 01                                  155+         dc xl1'01' format one                                          02-DCCCA
000000DC 00000000                            156+         dc a(0)                                                        02-DCCCA
000000E0 000000000000014A                    157+         dc ad(@PER_814)                                                02-DCCCA
000000E8 00000000000000C0                    158+         dc ad(192)                                                     02-DCCCA
000000F0 0000000000000000                    159+         dc ad(0)                                                       02-DCCCA
000000F8 0000000000001000                    160+         dc ad(4096)                                                    02-DCCCA
00000100 20                                  161+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000101 03                                  162+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000102 03                                  163+         dc al1(3)                                                      02-DCCCA
00000103 08                                  164+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000104 00                                  165+         dc bl.8'00000000'                                              02-DCCCA
00000105 000000                              166+         dc al3(0)                                                      02-DCCCA
00000108 00000000000000B8                    167+         dc ad(@LNAME814)                                               02-DCCCA
00000110                                     168+         ds 0d                                                          02-DCCCA
00000110 00000000000000D8                    169+         dc ad($eye0005)                                                02-DCCCA
00000118 0000000000000000                    170+         dc ad(0)                                                       02-DCCCA
00000120                                     171+         ds    0d                                                       01-DCCPR
00000120                                     172+rd_slice_read_varint ds 0d                                              01-DCCPR
00000120                                     173+@REGION_814_1 ds 0h                                                     01-DCCPR
00000120 EBEC D008 0024          00000008    174+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000126 E3E0 D088 0004          00000088    175+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000012C E3C0 D090 0004          00000090    176+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000132 B904 002E                           177+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000136 E3B0 C018 0004          00000018    178+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000013C A7EB 00C0               000000C0    179+         aghi  14,192              increase by frame size               01-DCCPR
00000140 E3E0 C020 0021          00000020    180+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000146 4720 B020               00000020    181+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000014A                                     182+@PER_814 ds    0h                                                       01-DCCPR
0000014A EBDE 2080 0024          00000080    183+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000150 E3C0 2090 0024          00000090    184+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000156 B904 00D2                           185+         lgr   13,2                set real frame pointer               01-DCCPR
0000015A B904 00CF                           186+         lgr   12,15               set base reg                         01-DCCPR
                        00000120             187+         using @REGION_814_1,12                                         01-DCCPR
0000015E B904 0021                           188          LGR   2,1         ; ptr to parm area
                                             189 * ******* End of Prologue
                                             190 * *
                                             191 * ***           size_t r;
                                             192 * ***           uint64_t unum;
                                             193 * ***
                                             194 * ***           r = rd_slice_read_uvarint(slice, &unum);
00000162 E3F0 2000 0004          00000000    195          LG    15,0(0,2)   ; slice
00000168 E3F0 D0B0 0024          000000B0    196          STG   15,176(0,13)
0000016E 41F0 D0A8               000000A8    197          LA    15,168(0,13)
00000172 E3F0 D0B8 0024          000000B8    198          STG   15,184(0,13)
00000178 4110 D0B0               000000B0    199          LA    1,176(0,13)
0000017C E3F0 C0E8 0004          00000208    200          LG    15,@lit_814_0 ; rd_slice_read_uvarint
00000182                                     201 @@gen_label1 DS    0H
00000182 05EF                                202          BALR  14,15
00000184                                     203 @@gen_label2 DS    0H
                                             204 * ***           if (((r > 0))) {
                                                                                                                           Page    8 
  Active Usings: @REGION_814_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000184 C2FE 0000 0000                      205          CLGFI 15,X'00000000'
0000018A 47D0 C094               000001B4    206          BNH   @L50
                                             207 * ***
                                             208 * ***                   *nump = (int64_t)((unum >> 1) ^
                                             209 * ***                                     -(int64_t)(unum & 1));
0000018E E310 2008 0004          00000008    210          LG    1,8(0,2)    ; nump
00000194 E320 D0A8 0004          000000A8    211          LG    2,168(0,13) ; unum
0000019A EB32 0001 000C          00000001    212          SRLG  3,2,1(0)
000001A0 E320 C0F0 0080          00000210    213          NG    2,@lit_814_1
000001A6 B903 0022                           214          LCGR  2,2
000001AA B982 0032                           215          XGR   3,2
000001AE E330 1000 0024          00000000    216          STG   3,0(0,1)    ; nump
                                             217 * ***           }
000001B4                                     218 @L50     DS    0H
                                             219 * ***
                                             220 * ***           return r;
                                             221 * ***   }
                                             222 * * **** Start of Epilogue
                                             223          DCCEPIL
000001B4                                     224+         ds 0h                                                          01-DCCEP
                                             225+* Epilog
000001B4 D707 D088 D088 00000088 00000088    226+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000001BA E3D0 D080 0004          00000080    227+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000001C0 E3C0 D090 0004          00000090    228+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000001C6 E3B0 C018 0004          00000018    229+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000001CC E3C0 B010 0021          00000010    230+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000001D2 E3E0 D008 0004          00000008    231+         lg  14,8(0,13)          load up return address                 01-DCCEP
000001D8 EB1C D020 0004          00000020    232+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000001DE 078E                                233+         bcr 8,14                if same dsab, just return              01-DCCEP
000001E0 E3F0 D010 0024          00000010    234+         stg 15,16(0,13)         save return code                       01-DCCEP
000001E6 E300 D018 0024          00000018    235+         stg 0,24(0,13)          save more return code                  01-DCCEP
000001EC E3F0 D090 0004          00000090    236+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000001F2 E3F0 F018 0004          00000018    237+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000001F8 47F0 F040               00000040    238+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             239+* End of Epilog
                                             240 * * **** End of Epilogue
00000200                                     241          DS    0D
00000200 000000C0                            242 @FRAMESIZE_814 DC F'192'
00000204 00000000
00000208 0000000000000000                    243 @lit_814_0 DC  AD(rd_slice_read_uvarint)
00000210 0000000000000001                    244 @lit_814_1 DC  FD'1' 0x0000000000000001
                                             245          DROP  12
                                             246 *
                                             247 *   DSECT for automatic variables in "rd_slice_read_varint"
                                             248 *      (FUNCTION #814)
                                             249 *
00000000                00000000 000000B0    250 @AUTO#rd_slice_read_varint DSECT
00000000                                     251          DS    XL168
000000A8                                     252 rd_slice_read_varint#unum#0 DS 8XL1 ; unum
000000B0                000000B0 000000A8    253          ORG   @AUTO#rd_slice_read_varint+168
000000A8                                     254 rd_slice_read_varint#r#0 DS 8XL1 ; r
                                             255 *
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000218                00000000 00001820    256 @CODE    CSECT
                                             257 *
                                             258 *
                                             259 *
                                             260 * ....... start of rd_uvarint_enc_u64
00000218                                     261 @LNAME826 DS   0H
00000218 00000012                            262          DC    X'00000012'
0000021C 99846DA4A5819989                    263          DC    C'rd_uvarint_enc_u64'
0000022E 00                                  264          DC    X'00'
                                             265 rd_uvarint_enc_u64 DCCPRLG CINDEX=826,BASER=12,FRAME=176,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME826
                                             266          macro
                                             267          dccextrn &m
                                             268          gblc    &$dccext(1000)
                                             269          gbla    &$dccexti
                                             270          lcla    &i
                                             271 &$dccext(&$dccexti+1) setc    '&m'
                                             272 &i       seta    1
                                             273 .loop    aif    (&i gt &$dccexti).around
                                             274          aif    ('&$dccext(&i)' eq '&m').getout
                                             275 &i       seta    &i+1
                                             276          ago     .loop
                                             277 .around  anop
                                             278 &$dccexti seta &$dccexti+1
                                             279          extrn  &m
                                             280 .getout  anop
                                             281          mend
00000230                                     282+$eye0008    ds    0d                                                    02-DCCCA
00000230 C4C3C3                              283+         dc cl3'DCC'                                                    02-DCCCA
00000233 01                                  284+         dc xl1'01' format one                                          02-DCCCA
00000234 00000000                            285+         dc a(0)                                                        02-DCCCA
00000238 0000000000000000                    286+         dc ad(0)                                                       02-DCCCA
00000240 00000000000000B0                    287+         dc ad(176)                                                     02-DCCCA
00000248 0000000000000000                    288+         dc ad(0)                                                       02-DCCCA
00000250 0000000000001000                    289+         dc ad(4096)                                                    02-DCCCA
00000258 20                                  290+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000259 03                                  291+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000025A 03                                  292+         dc al1(3)                                                      02-DCCCA
0000025B 08                                  293+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000025C 00                                  294+         dc bl.8'00000000'                                              02-DCCCA
0000025D 000000                              295+         dc al3(0)                                                      02-DCCCA
00000260 0000000000000218                    296+         dc ad(@LNAME826)                                               02-DCCCA
00000268                                     297+         ds 0d                                                          02-DCCCA
00000268 0000000000000230                    298+         dc ad($eye0008)                                                02-DCCCA
00000270 0000000000000000                    299+         dc ad(0)                                                       02-DCCCA
00000278                                     300+         ds    0d                                                       01-DCCPR
00000278                                     301+rd_uvarint_enc_u64 ds 0d                                                01-DCCPR
00000278                                     302+@REGION_826_1 ds 0h                                                     01-DCCPR
00000278 EBEC D008 0024          00000008    303+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000027E B904 00CF                           304+         lgr   12,15               set base reg                         01-DCCPR
                        00000278             305+         using @REGION_826_1,12                                         01-DCCPR
00000282 B904 0021                           306          LGR   2,1         ; ptr to parm area
                                                                                                                           Page   10 
  Active Usings: @REGION_826_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             307 * ******* End of Prologue
                                             308 * *
                                             309 * ***           size_t of = 0;
00000286 E3F0 2010 0004          00000010    310          LG    15,16(0,2)  ; num
0000028C A719 0000               00000000    311          LGHI  1,0         ; 0
                                             312 * ***
                                             313 * ***           do {
00000290                                     314 @L51     DS    0H
                                             315 * ***                   if (((of >= dstsize)))
00000290 E310 2008 0021          00000008    316          CLG   1,8(0,2)
00000296 4740 C038               000002B0    317          BL    @L54
                                             318 * ***                           return 0;
0000029A A7F9 0000               00000000    319          LGHI  15,0        ; 0
0000029E 47F0 C084               000002FC    320          B     @ret_lab_826
000002A8                                     321          DS    0D
000002A8 000000000000007F                    322 @lit_826_5 DC  FD'127' 0x000000000000007f
000002B0                                     323 @L54     DS    0H
                                             324 * ***
                                             325 * ***                   dst[of++] = (num & 0x7f) | (num > 0x7f ? 0x80 \
                                             326 * : 0);
000002B0 E330 2000 0004          00000000    327          LG    3,0(0,2)    ; dst
000002B6 B904 0041                           328          LGR   4,1
000002BA A71B 0001               00000001    329          AGHI  1,1
000002BE B904 005F                           330          LGR   5,15
000002C2 E350 C030 0080          000002A8    331          NG    5,@lit_826_5
000002C8 C2FE 0000 007F                      332          CLGFI 15,X'0000007F'
000002CE 47D0 C062               000002DA    333          BNH   @L55
000002D2 A768 0080               00000080    334          LHI   6,128       ; 128
000002D6 47F0 C066               000002DE    335          B     @L56
000002DA                                     336 @L55     DS    0H
000002DA A768 0000               00000000    337          LHI   6,0         ; 0
000002DE                                     338 @L56     DS    0H
000002DE B914 0066                           339          LGFR  6,6
000002E2 B981 0056                           340          OGR   5,6
000002E6 4254 3000               00000000    341          STC   5,0(4,3)
                                             342 * ***                   num >>= 7;
000002EA EBFF 0007 000C          00000007    343          SRLG  15,15,7(0)
                                             344 * ***           } while (num);
000002F0 B902 003F                           345          LTGR  3,15
000002F4 4770 C018               00000290    346          BNZ   @L51
                                             347 * ***
                                             348 * ***           return of;
000002F8 B904 00F1                           349          LGR   15,1
                                             350 * ***   }
000002FC                                     351 @ret_lab_826 DS 0H
                                             352 * * **** Start of Epilogue
                                             353          DCCEPIL
000002FC                                     354+         ds 0h                                                          01-DCCEP
                                             355+* Epilog
                                             356+* Epilog
000002FC E3E0 D008 0004          00000008    357+         lg    14,8(,13) restore the reg                                01-DCCEP
00000302 EB1C D020 0004          00000020    358+         lmg   1,12,32(13)                                              01-DCCEP
                                                                                                                           Page   11 
  Active Usings: @REGION_826_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000308 07FE                                359+         br   14                                                        01-DCCEP
                                             360+* End of Epilog
                                             361 * * **** End of Epilogue
                                             362          DROP  12
                                             363 *
                                             364 *   DSECT for automatic variables in "rd_uvarint_enc_u64"
                                             365 *      (FUNCTION #826)
                                             366 *
00000000                00000000 000000B0    367 @AUTO#rd_uvarint_enc_u64 DSECT
00000000                                     368          DS    XL168
000000A8                                     369 rd_uvarint_enc_u64#of#0 DS 8XL1 ; of
                                             370 *
0000030A                00000000 00001820    371 @CODE    CSECT
                                             372 *
                                             373 *
                                             374 *
                                             375 * ....... start of rd_uvarint_enc_i64
0000030A                                     376 @LNAME827 DS   0H
0000030A 00000012                            377          DC    X'00000012'
0000030E 99846DA4A5819989                    378          DC    C'rd_uvarint_enc_i64'
00000320 00                                  379          DC    X'00'
                                             380 rd_uvarint_enc_i64 DCCPRLG CINDEX=827,BASER=12,FRAME=192,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME827
                                             381          macro
                                             382          dccextrn &m
                                             383          gblc    &$dccext(1000)
                                             384          gbla    &$dccexti
                                             385          lcla    &i
                                             386 &$dccext(&$dccexti+1) setc    '&m'
                                             387 &i       seta    1
                                             388 .loop    aif    (&i gt &$dccexti).around
                                             389          aif    ('&$dccext(&i)' eq '&m').getout
                                             390 &i       seta    &i+1
                                             391          ago     .loop
                                             392 .around  anop
                                             393 &$dccexti seta &$dccexti+1
                                             394          extrn  &m
                                             395 .getout  anop
                                             396          mend
00000328                                     397+$eye0011    ds    0d                                                    02-DCCCA
00000328 C4C3C3                              398+         dc cl3'DCC'                                                    02-DCCCA
0000032B 01                                  399+         dc xl1'01' format one                                          02-DCCCA
0000032C 00000000                            400+         dc a(0)                                                        02-DCCCA
00000330 000000000000039A                    401+         dc ad(@PER_827)                                                02-DCCCA
00000338 00000000000000C0                    402+         dc ad(192)                                                     02-DCCCA
00000340 0000000000000000                    403+         dc ad(0)                                                       02-DCCCA
00000348 0000000000001000                    404+         dc ad(4096)                                                    02-DCCCA
00000350 20                                  405+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000351 03                                  406+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000352 03                                  407+         dc al1(3)                                                      02-DCCCA
00000353 08                                  408+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000354 00                                  409+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000355 000000                              410+         dc al3(0)                                                      02-DCCCA
00000358 000000000000030A                    411+         dc ad(@LNAME827)                                               02-DCCCA
00000360                                     412+         ds 0d                                                          02-DCCCA
00000360 0000000000000328                    413+         dc ad($eye0011)                                                02-DCCCA
00000368 0000000000000000                    414+         dc ad(0)                                                       02-DCCCA
00000370                                     415+         ds    0d                                                       01-DCCPR
00000370                                     416+rd_uvarint_enc_i64 ds 0d                                                01-DCCPR
00000370                                     417+@REGION_827_1 ds 0h                                                     01-DCCPR
00000370 EBEC D008 0024          00000008    418+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000376 E3E0 D088 0004          00000088    419+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000037C E3C0 D090 0004          00000090    420+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000382 B904 002E                           421+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000386 E3B0 C018 0004          00000018    422+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000038C A7EB 00C0               000000C0    423+         aghi  14,192              increase by frame size               01-DCCPR
00000390 E3E0 C020 0021          00000020    424+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000396 4720 B020               00000020    425+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000039A                                     426+@PER_827 ds    0h                                                       01-DCCPR
0000039A EBDE 2080 0024          00000080    427+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000003A0 E3C0 2090 0024          00000090    428+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000003A6 B904 00D2                           429+         lgr   13,2                set real frame pointer               01-DCCPR
000003AA B904 00CF                           430+         lgr   12,15               set base reg                         01-DCCPR
                        00000370             431+         using @REGION_827_1,12                                         01-DCCPR
                                             432 * ******* End of Prologue
                                             433 * *
                                             434 * ***           return rd_uvarint_enc_u64(dst, dstsize, (num << 1) ^ (\
                                             435 * num >> 63));
000003AE E3F0 1000 0004          00000000    436          LG    15,0(0,1)   ; dst
000003B4 E3F0 D0A8 0024          000000A8    437          STG   15,168(0,13)
000003BA E3F0 1008 0004          00000008    438          LG    15,8(0,1)   ; dstsize
000003C0 E3F0 D0B0 0024          000000B0    439          STG   15,176(0,13)
000003C6 E3F0 1010 0004          00000010    440          LG    15,16(0,1)  ; num
000003CC EB1F 0001 000D          00000001    441          SLLG  1,15,1(0)
000003D2 EBFF 003F 000A          0000003F    442          SRAG  15,15,63(0)
000003D8 B982 001F                           443          XGR   1,15
000003DC E310 D0B8 0024          000000B8    444          STG   1,184(0,13)
000003E2 4110 D0A8               000000A8    445          LA    1,168(0,13)
000003E6 E3F0 C0D0 0004          00000440    446          LG    15,@lit_827_8 ; rd_uvarint_enc_u64
000003EC                                     447 @@gen_label7 DS    0H
000003EC 05EF                                448          BALR  14,15
000003EE                                     449 @@gen_label8 DS    0H
                                             450 * ***   }
                                             451 * * **** Start of Epilogue
                                             452          DCCEPIL
000003EE                                     453+         ds 0h                                                          01-DCCEP
                                             454+* Epilog
000003EE D707 D088 D088 00000088 00000088    455+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000003F4 E3D0 D080 0004          00000080    456+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000003FA E3C0 D090 0004          00000090    457+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000400 E3B0 C018 0004          00000018    458+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000406 E3C0 B010 0021          00000010    459+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000040C E3E0 D008 0004          00000008    460+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000412 EB1C D020 0004          00000020    461+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   13 
  Active Usings: @REGION_827_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000418 078E                                462+         bcr 8,14                if same dsab, just return              01-DCCEP
0000041A E3F0 D010 0024          00000010    463+         stg 15,16(0,13)         save return code                       01-DCCEP
00000420 E300 D018 0024          00000018    464+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000426 E3F0 D090 0004          00000090    465+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000042C E3F0 F018 0004          00000018    466+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000432 47F0 F040               00000040    467+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             468+* End of Epilog
                                             469 * * **** End of Epilogue
00000438                                     470          DS    0D
00000438 000000C0                            471 @FRAMESIZE_827 DC F'192'
0000043C 00000000
00000440 0000000000000278                    472 @lit_827_8 DC  AD(rd_uvarint_enc_u64)
                                             473          DROP  12
                                             474 *
                                             475 *   DSECT for automatic variables in "rd_uvarint_enc_i64"
                                             476 *      (FUNCTION #827)
                                             477 *
00000000                00000000 000000A8    478 @AUTO#rd_uvarint_enc_i64 DSECT
00000000                                     479          DS    XL168
                                             480 *
00000448                00000000 00001820    481 @CODE    CSECT
                                             482 *
                                             483 *
                                             484 *
                                             485 * ....... start of rd_uvarint_dec
00000448                                     486 @LNAME829 DS   0H
00000448 0000000E                            487          DC    X'0000000E'
0000044C 99846DA4A5819989                    488          DC    C'rd_uvarint_dec'
0000045A 00                                  489          DC    X'00'
                                             490 rd_uvarint_dec DCCPRLG CINDEX=829,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME829
                                             491          macro
                                             492          dccextrn &m
                                             493          gblc    &$dccext(1000)
                                             494          gbla    &$dccexti
                                             495          lcla    &i
                                             496 &$dccext(&$dccexti+1) setc    '&m'
                                             497 &i       seta    1
                                             498 .loop    aif    (&i gt &$dccexti).around
                                             499          aif    ('&$dccext(&i)' eq '&m').getout
                                             500 &i       seta    &i+1
                                             501          ago     .loop
                                             502 .around  anop
                                             503 &$dccexti seta &$dccexti+1
                                             504          extrn  &m
                                             505 .getout  anop
                                             506          mend
00000460                                     507+$eye0014    ds    0d                                                    02-DCCCA
00000460 C4C3C3                              508+         dc cl3'DCC'                                                    02-DCCCA
00000463 01                                  509+         dc xl1'01' format one                                          02-DCCCA
00000464 00000000                            510+         dc a(0)                                                        02-DCCCA
00000468 0000000000000000                    511+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000470 00000000000000B0                    512+         dc ad(176)                                                     02-DCCCA
00000478 0000000000000000                    513+         dc ad(0)                                                       02-DCCCA
00000480 0000000000001000                    514+         dc ad(4096)                                                    02-DCCCA
00000488 20                                  515+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000489 03                                  516+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000048A 03                                  517+         dc al1(3)                                                      02-DCCCA
0000048B 08                                  518+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000048C 00                                  519+         dc bl.8'00000000'                                              02-DCCCA
0000048D 000000                              520+         dc al3(0)                                                      02-DCCCA
00000490 0000000000000448                    521+         dc ad(@LNAME829)                                               02-DCCCA
00000498                                     522+         ds 0d                                                          02-DCCCA
00000498 0000000000000460                    523+         dc ad($eye0014)                                                02-DCCCA
000004A0 0000000000000000                    524+         dc ad(0)                                                       02-DCCCA
000004A8                                     525+         ds    0d                                                       01-DCCPR
000004A8                                     526+rd_uvarint_dec ds 0d                                                    01-DCCPR
000004A8                                     527+@REGION_829_1 ds 0h                                                     01-DCCPR
000004A8 EBEC D008 0024          00000008    528+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000004AE B904 00CF                           529+         lgr   12,15               set base reg                         01-DCCPR
                        000004A8             530+         using @REGION_829_1,12                                         01-DCCPR
000004B2 B904 0031                           531          LGR   3,1         ; ptr to parm area
                                             532 * ******* End of Prologue
                                             533 * *
                                             534 * ***           size_t of = 0;
000004B6 A7F9 0000               00000000    535          LGHI  15,0        ; 0
                                             536 * ***           uint64_t num = 0;
000004BA B904 001F                           537          LGR   1,15        ; num
                                             538 * ***           int shift = 0;
000004BE A728 0000               00000000    539          LHI   2,0         ; 0
                                             540 * ***
                                             541 * ***           do {
000004C2                                     542 @L57     DS    0H
                                             543 * ***                   if (((srcsize-- == 0)))
000004C2 E340 3008 0004          00000008    544          LG    4,8(0,3)    ; srcsize
000004C8 B904 0054                           545          LGR   5,4
000004CC A75B FFFF               0000FFFF    546          AGHI  5,-1
000004D0 E350 3008 0024          00000008    547          STG   5,8(0,3)    ; srcsize
000004D6 B902 0044                           548          LTGR  4,4
000004DA 4770 C03E               000004E6    549          BNE   @L60
                                             550 * ***                           return 0;
000004DE A7F9 0000               00000000    551          LGHI  15,0        ; 0
000004E2 47F0 C088               00000530    552          B     @ret_lab_829
000004E6                                     553 @L60     DS    0H
                                             554 * ***                   num |= (uint64_t)(src[(int)of] & 0x7f) << shif\
                                             555 * t;
000004E6 E340 3000 0004          00000000    556          LG    4,0(0,3)    ; src
000004EC B914 005F                           557          LGFR  5,15
000004F0 4355 4000               00000000    558          IC    5,0(5,4)
000004F4 C05B 0000 007F                      559          NILF  5,X'0000007F'
000004FA B914 0055                           560          LGFR  5,5
000004FE EB55 2000 000D          00000000    561          SLLG  5,5,0(2)
00000504 B981 0015                           562          OGR   1,5
                                             563 * ***                   shift += 7;
                                                                                                                           Page   15 
  Active Usings: @REGION_829_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000508 A72A 0007               00000007    564          AHI   2,7
                                             565 * ***           } while (src[(int)of++] & 0x80);
0000050C B904 005F                           566          LGR   5,15
00000510 A7FB 0001               00000001    567          AGHI  15,1
00000514 B914 0055                           568          LGFR  5,5
00000518 4145 4000               00000000    569          LA    4,0(5,4)
0000051C 9180 4000      00000000 00000080    570          TM    0(4),128
00000520 4770 C01A               000004C2    571          BNZ   @L57
                                             572 * ***
                                             573 * ***           *nump = num;
00000524 E320 3010 0004          00000010    574          LG    2,16(0,3)   ; nump
0000052A E310 2000 0024          00000000    575          STG   1,0(0,2)    ; nump
                                             576 * ***           return of;
                                             577 * ***   }
00000530                                     578 @ret_lab_829 DS 0H
                                             579 * * **** Start of Epilogue
                                             580          DCCEPIL
00000530                                     581+         ds 0h                                                          01-DCCEP
                                             582+* Epilog
                                             583+* Epilog
00000530 E3E0 D008 0004          00000008    584+         lg    14,8(,13) restore the reg                                01-DCCEP
00000536 EB1C D020 0004          00000020    585+         lmg   1,12,32(13)                                              01-DCCEP
0000053C 07FE                                586+         br   14                                                        01-DCCEP
                                             587+* End of Epilog
                                             588 * * **** End of Epilogue
                                             589          DROP  12
                                             590 *
                                             591 *   DSECT for automatic variables in "rd_uvarint_dec"
                                             592 *      (FUNCTION #829)
                                             593 *
00000000                00000000 000000B0    594 @AUTO#rd_uvarint_dec DSECT
00000000                                     595          DS    XL168
000000A8                                     596 rd_uvarint_dec#shift#0 DS 1F ; shift
000000AC                000000AC 000000A8    597          ORG   @AUTO#rd_uvarint_dec+168
000000A8                                     598 rd_uvarint_dec#num#0 DS 8XL1 ; num
000000B0                000000B0 000000A8    599          ORG   @AUTO#rd_uvarint_dec+168
000000A8                                     600 rd_uvarint_dec#of#0 DS 8XL1 ; of
                                             601 *
0000053E                00000000 00001820    602 @CODE    CSECT
                                             603 *
                                             604 *
                                             605 *
                                             606 * ....... start of rd_varint_dec_i64
0000053E                                     607 @LNAME830 DS   0H
0000053E 00000011                            608          DC    X'00000011'
00000542 99846DA581998995                    609          DC    C'rd_varint_dec_i64'
00000553 00                                  610          DC    X'00'
                                             611 rd_varint_dec_i64 DCCPRLG CINDEX=830,BASER=12,FRAME=200,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME830
                                             612          macro
                                             613          dccextrn &m
                                             614          gblc    &$dccext(1000)
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             615          gbla    &$dccexti
                                             616          lcla    &i
                                             617 &$dccext(&$dccexti+1) setc    '&m'
                                             618 &i       seta    1
                                             619 .loop    aif    (&i gt &$dccexti).around
                                             620          aif    ('&$dccext(&i)' eq '&m').getout
                                             621 &i       seta    &i+1
                                             622          ago     .loop
                                             623 .around  anop
                                             624 &$dccexti seta &$dccexti+1
                                             625          extrn  &m
                                             626 .getout  anop
                                             627          mend
00000558                                     628+$eye0017    ds    0d                                                    02-DCCCA
00000558 C4C3C3                              629+         dc cl3'DCC'                                                    02-DCCCA
0000055B 01                                  630+         dc xl1'01' format one                                          02-DCCCA
0000055C 00000000                            631+         dc a(0)                                                        02-DCCCA
00000560 00000000000005CA                    632+         dc ad(@PER_830)                                                02-DCCCA
00000568 00000000000000C8                    633+         dc ad(200)                                                     02-DCCCA
00000570 0000000000000000                    634+         dc ad(0)                                                       02-DCCCA
00000578 0000000000001000                    635+         dc ad(4096)                                                    02-DCCCA
00000580 20                                  636+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000581 03                                  637+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000582 03                                  638+         dc al1(3)                                                      02-DCCCA
00000583 08                                  639+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000584 00                                  640+         dc bl.8'00000000'                                              02-DCCCA
00000585 000000                              641+         dc al3(0)                                                      02-DCCCA
00000588 000000000000053E                    642+         dc ad(@LNAME830)                                               02-DCCCA
00000590                                     643+         ds 0d                                                          02-DCCCA
00000590 0000000000000558                    644+         dc ad($eye0017)                                                02-DCCCA
00000598 0000000000000000                    645+         dc ad(0)                                                       02-DCCCA
000005A0                                     646+         ds    0d                                                       01-DCCPR
000005A0                                     647+rd_varint_dec_i64 ds 0d                                                 01-DCCPR
000005A0                                     648+@REGION_830_1 ds 0h                                                     01-DCCPR
000005A0 EBEC D008 0024          00000008    649+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000005A6 E3E0 D088 0004          00000088    650+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000005AC E3C0 D090 0004          00000090    651+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000005B2 B904 002E                           652+         lgr   2,14                copy addr of our savearea            01-DCCPR
000005B6 E3B0 C018 0004          00000018    653+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000005BC A7EB 00C8               000000C8    654+         aghi  14,200              increase by frame size               01-DCCPR
000005C0 E3E0 C020 0021          00000020    655+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000005C6 4720 B020               00000020    656+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000005CA                                     657+@PER_830 ds    0h                                                       01-DCCPR
000005CA EBDE 2080 0024          00000080    658+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000005D0 E3C0 2090 0024          00000090    659+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000005D6 B904 00D2                           660+         lgr   13,2                set real frame pointer               01-DCCPR
000005DA B904 00CF                           661+         lgr   12,15               set base reg                         01-DCCPR
                        000005A0             662+         using @REGION_830_1,12                                         01-DCCPR
000005DE B904 0021                           663          LGR   2,1         ; ptr to parm area
                                             664 * ******* End of Prologue
                                             665 * *
                                             666 * ***           uint64_t n;
                                                                                                                           Page   17 
  Active Usings: @REGION_830_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             667 * ***           size_t r;
                                             668 * ***
                                             669 * ***           r = rd_uvarint_dec(src, srcsize, &n);
000005E2 E3F0 2000 0004          00000000    670          LG    15,0(0,2)   ; src
000005E8 E3F0 D0B0 0024          000000B0    671          STG   15,176(0,13)
000005EE E3F0 2008 0004          00000008    672          LG    15,8(0,2)   ; srcsize
000005F4 E3F0 D0B8 0024          000000B8    673          STG   15,184(0,13)
000005FA 41F0 D0A8               000000A8    674          LA    15,168(0,13)
000005FE E3F0 D0C0 0024          000000C0    675          STG   15,192(0,13)
00000604 4110 D0B0               000000B0    676          LA    1,176(0,13)
00000608 E3F0 C0F8 0004          00000698    677          LG    15,@lit_830_14 ; rd_uvarint_dec
0000060E                                     678 @@gen_label11 DS    0H
0000060E 05EF                                679          BALR  14,15
00000610                                     680 @@gen_label12 DS    0H
                                             681 * ***           if (((!((r == 0) || (r > 0xffffffffffffffffULL)))))
00000610 B902 001F                           682          LTGR  1,15
00000614 4780 C0A8               00000648    683          BE    @L61
00000618 E3F0 C100 0021          000006A0    684          CLG   15,@lit_830_15
0000061E 4720 C0A8               00000648    685          BH    @L61
00000622                                     686 @L62     DS    0H
                                             687 * ***                   *nump = (int64_t)(n >> 1) ^ -(int64_t)(n & 1);
00000622 E310 2010 0004          00000010    688          LG    1,16(0,2)   ; nump
00000628 E320 D0A8 0004          000000A8    689          LG    2,168(0,13) ; n
0000062E EB32 0001 000C          00000001    690          SRLG  3,2,1(0)
00000634 E320 C108 0080          000006A8    691          NG    2,@lit_830_16
0000063A B903 0022                           692          LCGR  2,2
0000063E B982 0032                           693          XGR   3,2
00000642 E330 1000 0024          00000000    694          STG   3,0(0,1)    ; nump
00000648                                     695 @L61     DS    0H
                                             696 * ***
                                             697 * ***           return r;
                                             698 * ***   }
                                             699 * * **** Start of Epilogue
                                             700          DCCEPIL
00000648                                     701+         ds 0h                                                          01-DCCEP
                                             702+* Epilog
00000648 D707 D088 D088 00000088 00000088    703+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000064E E3D0 D080 0004          00000080    704+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000654 E3C0 D090 0004          00000090    705+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000065A E3B0 C018 0004          00000018    706+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000660 E3C0 B010 0021          00000010    707+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000666 E3E0 D008 0004          00000008    708+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000066C EB1C D020 0004          00000020    709+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000672 078E                                710+         bcr 8,14                if same dsab, just return              01-DCCEP
00000674 E3F0 D010 0024          00000010    711+         stg 15,16(0,13)         save return code                       01-DCCEP
0000067A E300 D018 0024          00000018    712+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000680 E3F0 D090 0004          00000090    713+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000686 E3F0 F018 0004          00000018    714+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000068C 47F0 F040               00000040    715+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             716+* End of Epilog
                                             717 * * **** End of Epilogue
00000690                                     718          DS    0D
                                                                                                                           Page   18 
  Active Usings: @REGION_830_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000690 000000C8                            719 @FRAMESIZE_830 DC F'200'
00000694 00000000
00000698 00000000000004A8                    720 @lit_830_14 DC AD(rd_uvarint_dec)
000006A0 FFFFFFFFFFFFFFFF                    721 @lit_830_15 DC FD'-1' 0xffffffffffffffff
000006A8 0000000000000001                    722 @lit_830_16 DC FD'1' 0x0000000000000001
                                             723          DROP  12
                                             724 *
                                             725 *   DSECT for automatic variables in "rd_varint_dec_i64"
                                             726 *      (FUNCTION #830)
                                             727 *
00000000                00000000 000000B0    728 @AUTO#rd_varint_dec_i64 DSECT
00000000                                     729          DS    XL168
000000A8                                     730 rd_varint_dec_i64#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8    731          ORG   @AUTO#rd_varint_dec_i64+168
000000A8                                     732 rd_varint_dec_i64#n#0 DS 8XL1 ; n
                                             733 *
000006B0                00000000 00001820    734 @CODE    CSECT
                                             735 *
                                             736 *
                                             737 *
                                             738 * ....... start of do_test_rd_uvarint_enc_i64
000006B0                                     739 @LNAME833 DS   0H
000006B0 0000001A                            740          DC    X'0000001A'
000006B4 84966DA385A2A36D                    741          DC    C'do_test_rd_uvarint_enc_i64'
000006CE 00                                  742          DC    X'00'
                                             743 do_test_rd_uvarint_enc_i64 DCCPRLG CINDEX=833,BASER=12,FRAME=392,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME833
                                             744          macro
                                             745          dccextrn &m
                                             746          gblc    &$dccext(1000)
                                             747          gbla    &$dccexti
                                             748          lcla    &i
                                             749 &$dccext(&$dccexti+1) setc    '&m'
                                             750 &i       seta    1
                                             751 .loop    aif    (&i gt &$dccexti).around
                                             752          aif    ('&$dccext(&i)' eq '&m').getout
                                             753 &i       seta    &i+1
                                             754          ago     .loop
                                             755 .around  anop
                                             756 &$dccexti seta &$dccexti+1
                                             757          extrn  &m
                                             758 .getout  anop
                                             759          mend
000006D0                                     760+$eye0020    ds    0d                                                    02-DCCCA
000006D0 C4C3C3                              761+         dc cl3'DCC'                                                    02-DCCCA
000006D3 01                                  762+         dc xl1'01' format one                                          02-DCCCA
000006D4 00000000                            763+         dc a(0)                                                        02-DCCCA
000006D8 0000000000000742                    764+         dc ad(@PER_833)                                                02-DCCCA
000006E0 0000000000000188                    765+         dc ad(392)                                                     02-DCCCA
000006E8 0000000000000000                    766+         dc ad(0)                                                       02-DCCCA
000006F0 0000000000001000                    767+         dc ad(4096)                                                    02-DCCCA
000006F8 20                                  768+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000006F9 03                                  769+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000006FA 03                                  770+         dc al1(3)                                                      02-DCCCA
000006FB 08                                  771+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000006FC 00                                  772+         dc bl.8'00000000'                                              02-DCCCA
000006FD 000000                              773+         dc al3(0)                                                      02-DCCCA
00000700 00000000000006B0                    774+         dc ad(@LNAME833)                                               02-DCCCA
00000708                                     775+         ds 0d                                                          02-DCCCA
00000708 00000000000006D0                    776+         dc ad($eye0020)                                                02-DCCCA
00000710 0000000000000000                    777+         dc ad(0)                                                       02-DCCCA
00000718                                     778+         ds    0d                                                       01-DCCPR
00000718                                     779+do_test_rd_uvarint_enc_i64 ds 0d                                        01-DCCPR
00000718                                     780+@REGION_833_1 ds 0h                                                     01-DCCPR
00000718 EBEC D008 0024          00000008    781+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000071E E3E0 D088 0004          00000088    782+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000724 E3C0 D090 0004          00000090    783+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000072A B904 002E                           784+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000072E E3B0 C018 0004          00000018    785+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000734 A7EB 0188               00000188    786+         aghi  14,392              increase by frame size               01-DCCPR
00000738 E3E0 C020 0021          00000020    787+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000073E 4720 B020               00000020    788+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000742                                     789+@PER_833 ds    0h                                                       01-DCCPR
00000742 EBDE 2080 0024          00000080    790+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000748 E3C0 2090 0024          00000090    791+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000074E B904 00D2                           792+         lgr   13,2                set real frame pointer               01-DCCPR
00000752 B904 00CF                           793+         lgr   12,15               set base reg                         01-DCCPR
                        00000718             794+         using @REGION_833_1,12                                         01-DCCPR
                                             795          DCCPRV REG=5      ; Get PRV from DVT
00000756 E350 B008 0004          00000008    796+         LG 5,8(0,11)                                                   01-DCCPR
0000075C B904 0061                           797          LGR   6,1         ; ptr to parm area
                                             798 * ******* End of Prologue
                                             799 * *
                                             800 * ***           char buf[16] = { 0xff, 0xff, 0xff, 0xff,
00000760 E330 6010 0004          00000010    801          LG    3,16(0,6)   ; num
00000766 E320 6020 0004          00000020    802          LG    2,32(0,6)   ; exp_size
0000076C 92FF D150      00000150 000000FF    803          MVI   336(13),255
00000770 92FF D151      00000151 000000FF    804          MVI   337(13),255
00000774 92FF D152      00000152 000000FF    805          MVI   338(13),255
00000778 92FF D153      00000153 000000FF    806          MVI   339(13),255
                                             807 * ***                            0xff, 0xff, 0xff, 0xff,
0000077C 92FF D154      00000154 000000FF    808          MVI   340(13),255
00000780 92FF D155      00000155 000000FF    809          MVI   341(13),255
00000784 92FF D156      00000156 000000FF    810          MVI   342(13),255
00000788 92FF D157      00000157 000000FF    811          MVI   343(13),255
                                             812 * ***                            0xff, 0xff, 0xff, 0xff,
0000078C 92FF D158      00000158 000000FF    813          MVI   344(13),255
00000790 92FF D159      00000159 000000FF    814          MVI   345(13),255
00000794 92FF D15A      0000015A 000000FF    815          MVI   346(13),255
00000798 92FF D15B      0000015B 000000FF    816          MVI   347(13),255
                                             817 * ***                            0xff, 0xff, 0xff, 0xff };
0000079C 92FF D15C      0000015C 000000FF    818          MVI   348(13),255
000007A0 92FF D15D      0000015D 000000FF    819          MVI   349(13),255
000007A4 92FF D15E      0000015E 000000FF    820          MVI   350(13),255
                                                                                                                           Page   20 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000007A8 92FF D15F      0000015F 000000FF    821          MVI   351(13),255
                                             822 * ***           size_t sz = rd_uvarint_enc_i64(buf, sizeof(buf), num);
000007AC 41F0 D150               00000150    823          LA    15,336(0,13)
000007B0 E3F0 D160 0024          00000160    824          STG   15,352(0,13)
000007B6 E548 D168 0010          00000168    825          MVGHI 360(13),16
000007BC E330 D170 0024          00000170    826          STG   3,368(0,13)
000007C2 4110 D160               00000160    827          LA    1,352(0,13)
000007C6 E3F0 C100 0004          00000818    828          LG    15,@lit_833_18 ; rd_uvarint_enc_i64
000007CC                                     829 @@gen_label15 DS    0H
000007CC 05EF                                830          BALR  14,15
000007CE                                     831 @@gen_label16 DS    0H
000007CE B904 004F                           832          LGR   4,15
                                             833 * ***           size_t r;
                                             834 * ***           int ir;
                                             835 * ***           rd_buf_t b;
                                             836 * ***           rd_slice_t slice, bad_slice;
                                             837 * ***           int64_t ret_num;
                                             838 * ***
                                             839 * ***           if (sz != exp_size || __memcmp(buf,exp,exp_size))
000007D2 B921 0042                           840          CLGR  4,2
000007D6 4770 C18E               000008A6    841          BNE   @L65
000007DA 41F0 D150               00000150    842          LA    15,336(0,13)
000007DE E310 6018 0004          00000018    843          LG    1,24(0,6)
000007E4 A779 0000               00000000    844          LGHI  7,0
000007E8 B902 0062                           845          LTGR  6,2
000007EC 4780 C188               000008A0    846          BZ    @@gen_label18
000007F0                                     847 @@gen_label20 DS 0H
000007F0 D500 F000 1000 00000000 00000000    848          CLC   0(1,15),0(1)
000007F6 4770 C178               00000890    849          BNZ   @@gen_label19
000007FA 41F0 F001               00000001    850          LA    15,1(0,15)
000007FE 4110 1001               00000001    851          LA    1,1(0,1)
00000802 E360 C0D8 0046          000007F0    852          BCTG  6,@@gen_label20
00000808 47F0 C188               000008A0    853          B     @@gen_label18
00000810                                     854          DS    0D
00000810 00000188                            855 @FRAMESIZE_833 DC F'392'
00000814 00000000
00000818 0000000000000370                    856 @lit_833_18 DC AD(rd_uvarint_enc_i64)
00000820 0000000000000000                    857 @lit_833_22 DC AD(fprintf)
00000828 0000000000001820                    858 @lit_833_21 DC AD(@DATA)
00000830 0000000000001882                    859 @lit_833_20 DC AD(@strings@)
00000838 00000000                            860 @lit_833_19 DC Q(__stderrp)
0000083C 00000000                            861 @lit_833_27 DC Q(rd_unittest_assert_on_failure)
00000840 0000000000000000                    862 @lit_833_28 DC AD(__assert)
00000848 000008AA                            863 @lit_region_diff_833_1_2  DC A(@REGION_833_2-@REGION_833_1)
0000084C 00000000
00000850 00000000000005A0                    864 @lit_833_30 DC AD(rd_varint_dec_i64)
00000858 FFFFFFFFFFFFFFFF                    865 @lit_833_31 DC FD'-1' 0xffffffffffffffff
00000860 0000000000000000                    866 @lit_833_55 DC AD(rd_buf_init)
00000868 0000000000000000                    867 @lit_833_56 DC AD(rd_buf_push0)
00000870 0000000000000000                    868 @lit_833_57 DC AD(rd_slice_init_full)
00000878 0000000000000000                    869 @lit_833_58 DC AD(rd_slice_narrow_copy)
00000880 0000000000000120                    870 @lit_833_70 DC AD(rd_slice_read_varint)
                                                                                                                           Page   21 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000888 0000000000000060                    871 @lit_833_84 DC AD(rd_slice_offset)
00000890                                     872 @@gen_label19 DS 0H
00000890 4370 F000               00000000    873          IC    7,0(0,15)
00000894 A7F9 0000               00000000    874          LGHI  15,0
00000898 43F0 1000               00000000    875          IC    15,0(0,1)
0000089C B90B 007F                           876          SLGR  7,15
000008A0                                     877 @@gen_label18 DS 0H
000008A0 1277                                878          LTR   7,7
000008A2 4780 C28A               000009A2    879          BZ    @L63
000008A6                                     880 @L64     DS    0H
                                             881 * ***                   do { fprintf(__stderrp, "\033[31mRDUT: FAIL: %\
                                             882 * s:%d: %s: ", "C:\\asgkafka\\librdkafka\\src\\rdvarint.c", 49, __FUNC\
                                             883 * TION__); fprintf(__stderrp, "i64 encode of %" "lld" ": " "expected s\
                                             884 * ize %" "zu" " (got %" "zu" ")\n", num, exp_size, sz); fprintf(__stde\
                                             885 * rrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!*"unittest \
                                             886 * failure") ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\\
                                             887 * src\\rdvarint.c", 49, "!*\"unittest failure\"")); return 1; } while \
                                             888 * (0);
000008A6                                     889 @L65     DS    0H
000008A6 E360 C120 0016          00000838    890          LLGF  6,@lit_833_19 ; __stderrp
000008AC E3F6 5000 0004          00000000    891          LG    15,0(6,5)   ; __stderrp
000008B2 E3F0 D160 0024          00000160    892          STG   15,352(0,13)
000008B8 E370 C118 0004          00000830    893          LG    7,@lit_833_20
000008BE E370 D168 0024          00000168    894          STG   7,360(0,13)
000008C4 41F0 701E               0000001E    895          LA    15,30(0,7)
000008C8 E3F0 D170 0024          00000170    896          STG   15,368(0,13)
000008CE E548 D178 0031          00000178    897          MVGHI 376(13),49
000008D4 E380 C110 0004          00000828    898          LG    8,@lit_833_21
000008DA 41F0 8046               00000046    899          LA    15,70(0,8)
000008DE E3F0 D180 0024          00000180    900          STG   15,384(0,13)
000008E4 4110 D160               00000160    901          LA    1,352(0,13)
000008E8 E390 C108 0004          00000820    902          LG    9,@lit_833_22 ; fprintf
000008EE B904 00F9                           903          LGR   15,9
000008F2                                     904 @@gen_label22 DS    0H
000008F2 05EF                                905          BALR  14,15
000008F4                                     906 @@gen_label23 DS    0H
000008F4 E3F6 5000 0004          00000000    907          LG    15,0(6,5)   ; __stderrp
000008FA E3F0 D160 0024          00000160    908          STG   15,352(0,13)
00000900 41F0 7044               00000044    909          LA    15,68(0,7)
00000904 E3F0 D168 0024          00000168    910          STG   15,360(0,13)
0000090A E330 D170 0024          00000170    911          STG   3,368(0,13)
00000910 E320 D178 0024          00000178    912          STG   2,376(0,13)
00000916 E340 D180 0024          00000180    913          STG   4,384(0,13)
0000091C 4110 D160               00000160    914          LA    1,352(0,13)
00000920 B904 00F9                           915          LGR   15,9
00000924                                     916 @@gen_label24 DS    0H
00000924 05EF                                917          BALR  14,15
00000926                                     918 @@gen_label25 DS    0H
00000926 E3F6 5000 0004          00000000    919          LG    15,0(6,5)   ; __stderrp
0000092C E3F0 D160 0024          00000160    920          STG   15,352(0,13)
00000932 41F0 7076               00000076    921          LA    15,118(0,7)
00000936 E3F0 D168 0024          00000168    922          STG   15,360(0,13)
                                                                                                                           Page   22 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000093C 4110 D160               00000160    923          LA    1,352(0,13)
00000940 B904 00F9                           924          LGR   15,9
00000944                                     925 @@gen_label26 DS    0H
00000944 05EF                                926          BALR  14,15
00000946                                     927 @@gen_label27 DS    0H
00000946 E3F0 C124 0016          0000083C    928          LLGF  15,@lit_833_27 ; rd_unittest_assert_on_failure
0000094C 41FF 5000               00000000    929          LA    15,0(15,5)
00000950 9500 F000      00000000 00000000    930          CLI   0(15),0
00000954 4780 C27C               00000994    931          BE    @L68
00000958 41F0 707C               0000007C    932          LA    15,124(0,7)
0000095C 9500 F000      00000000 00000000    933          CLI   0(15),0
00000960 4780 C27C               00000994    934          BE    @L68
00000964                                     935 @L69     DS    0H
00000964 41F0 8046               00000046    936          LA    15,70(0,8)
00000968 E3F0 D160 0024          00000160    937          STG   15,352(0,13)
0000096E 41F0 701E               0000001E    938          LA    15,30(0,7)
00000972 E3F0 D168 0024          00000168    939          STG   15,360(0,13)
00000978 E548 D170 0031          00000170    940          MVGHI 368(13),49
0000097E 41F0 708E               0000008E    941          LA    15,142(0,7)
00000982 E3F0 D178 0024          00000178    942          STG   15,376(0,13)
00000988 4110 D160               00000160    943          LA    1,352(0,13)
0000098C E3F0 C128 0004          00000840    944          LG    15,@lit_833_28 ; __assert
00000992                                     945 @@gen_label30 DS    0H
00000992 05EF                                946          BALR  14,15
00000994                                     947 @@gen_label31 DS    0H
00000994                                     948 @L70     DS    0H
00000994                                     949 @L68     DS    0H
00000994 A7F9 0001               00000001    950          LGHI  15,1        ; 1
00000998 E3C0 C130 001A          00000848    951          ALGF  12,@lit_region_diff_833_1_2
                                             952          DROP  12
                        00000FC2             953          USING @REGION_833_2,12
0000099E 47F0 C4F2               000014B4    954          B     @ret_lab_833
                                             955          DROP  12
                        00000718             956          USING @REGION_833_1,12
                                             957 * ***
                                             958 * ***
                                             959 * ***
                                             960 * ***
                                             961 * ***           r = rd_varint_dec_i64(buf, sz, &ret_num);
000009A2                                     962 @L63     DS    0H
000009A2 41F0 D150               00000150    963          LA    15,336(0,13)
000009A6 E3F0 D160 0024          00000160    964          STG   15,352(0,13)
000009AC E340 D168 0024          00000168    965          STG   4,360(0,13)
000009B2 41F0 D0A8               000000A8    966          LA    15,168(0,13)
000009B6 E3F0 D170 0024          00000170    967          STG   15,368(0,13)
000009BC 4110 D160               00000160    968          LA    1,352(0,13)
000009C0 E3F0 C138 0004          00000850    969          LG    15,@lit_833_30 ; rd_varint_dec_i64
000009C6                                     970 @@gen_label32 DS    0H
000009C6 05EF                                971          BALR  14,15
000009C8                                     972 @@gen_label33 DS    0H
000009C8 B904 002F                           973          LGR   2,15        ; r
                                             974 * ***           do { if (!(!((r == 0) || (r > 0xffffffffffffffffULL)))\
                                                                                                                           Page   23 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             975 * ) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert fai\
                                             976 * led: " "!RD_UVARINT_DEC_FAILED(r)" ": ", "C:\\asgkafka\\librdkafka\\\
                                             977 * src\\rdvarint.c", 55, __FUNCTION__); fprintf(__stderrp, "varint deco\
                                             978 * de failed: %" "zu", r); fprintf(__stderrp, "\033[0m\n"); if (rd_unit\
                                             979 * test_assert_on_failure) ((!((r == 0) || (r > 0xffffffffffffffffULL))\
                                             980 * ) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdv\
                                             981 * arint.c", 55, "!((r == 0) || (r > 0xffffffffffffffffULL))")); return\
                                             982 *  1; } } while (0);
000009CC                                     983 @L71     DS    0H
000009CC B902 00F2                           984          LTGR  15,2
000009D0 4780 C2C6               000009DE    985          BE    @L75
000009D4 E320 C140 0021          00000858    986          CLG   2,@lit_833_31
000009DA 47D0 C3C0               00000AD8    987          BNH   @L74
000009DE                                     988 @L75     DS    0H
000009DE E330 C120 0016          00000838    989          LLGF  3,@lit_833_19 ; __stderrp
000009E4 E3F3 5000 0004          00000000    990          LG    15,0(3,5)   ; __stderrp
000009EA E3F0 D160 0024          00000160    991          STG   15,352(0,13)
000009F0 E340 C118 0004          00000830    992          LG    4,@lit_833_20
000009F6 41F0 40A4               000000A4    993          LA    15,164(0,4)
000009FA E3F0 D168 0024          00000168    994          STG   15,360(0,13)
00000A00 41F0 401E               0000001E    995          LA    15,30(0,4)
00000A04 E3F0 D170 0024          00000170    996          STG   15,368(0,13)
00000A0A E548 D178 0037          00000178    997          MVGHI 376(13),55
00000A10 E360 C110 0004          00000828    998          LG    6,@lit_833_21
00000A16 41F0 6046               00000046    999          LA    15,70(0,6)
00000A1A E3F0 D180 0024          00000180   1000          STG   15,384(0,13)
00000A20 4110 D160               00000160   1001          LA    1,352(0,13)
00000A24 E370 C108 0004          00000820   1002          LG    7,@lit_833_22 ; fprintf
00000A2A B904 00F7                          1003          LGR   15,7
00000A2E                                    1004 @@gen_label36 DS    0H
00000A2E 05EF                               1005          BALR  14,15
00000A30                                    1006 @@gen_label37 DS    0H
00000A30 E3F3 5000 0004          00000000   1007          LG    15,0(3,5)   ; __stderrp
00000A36 E3F0 D160 0024          00000160   1008          STG   15,352(0,13)
00000A3C 41F0 40EC               000000EC   1009          LA    15,236(0,4)
00000A40 E3F0 D168 0024          00000168   1010          STG   15,360(0,13)
00000A46 E320 D170 0024          00000170   1011          STG   2,368(0,13)
00000A4C 4110 D160               00000160   1012          LA    1,352(0,13)
00000A50 B904 00F7                          1013          LGR   15,7
00000A54                                    1014 @@gen_label38 DS    0H
00000A54 05EF                               1015          BALR  14,15
00000A56                                    1016 @@gen_label39 DS    0H
00000A56 E3F3 5000 0004          00000000   1017          LG    15,0(3,5)   ; __stderrp
00000A5C E3F0 D160 0024          00000160   1018          STG   15,352(0,13)
00000A62 41F0 4076               00000076   1019          LA    15,118(0,4)
00000A66 E3F0 D168 0024          00000168   1020          STG   15,360(0,13)
00000A6C 4110 D160               00000160   1021          LA    1,352(0,13)
00000A70 B904 00F7                          1022          LGR   15,7
00000A74                                    1023 @@gen_label40 DS    0H
00000A74 05EF                               1024          BALR  14,15
00000A76                                    1025 @@gen_label41 DS    0H
00000A76 E3F0 C124 0016          0000083C   1026          LLGF  15,@lit_833_27 ; rd_unittest_assert_on_failure
                                                                                                                           Page   24 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000A7C 41FF 5000               00000000   1027          LA    15,0(15,5)
00000A80 9500 F000      00000000 00000000   1028          CLI   0(15),0
00000A84 4780 C3B2               00000ACA   1029          BE    @L76
00000A88 B902 00F2                          1030          LTGR  15,2
00000A8C 4780 C382               00000A9A   1031          BE    @L77
00000A90 E320 C140 0021          00000858   1032          CLG   2,@lit_833_31
00000A96 47D0 C3B2               00000ACA   1033          BNH   @L76
00000A9A                                    1034 @L77     DS    0H
00000A9A 41F0 6046               00000046   1035          LA    15,70(0,6)
00000A9E E3F0 D160 0024          00000160   1036          STG   15,352(0,13)
00000AA4 41F0 401E               0000001E   1037          LA    15,30(0,4)
00000AA8 E3F0 D168 0024          00000168   1038          STG   15,360(0,13)
00000AAE E548 D170 0037          00000170   1039          MVGHI 368(13),55
00000AB4 41F0 4106               00000106   1040          LA    15,262(0,4)
00000AB8 E3F0 D178 0024          00000178   1041          STG   15,376(0,13)
00000ABE 4110 D160               00000160   1042          LA    1,352(0,13)
00000AC2 E3F0 C128 0004          00000840   1043          LG    15,@lit_833_28 ; __assert
00000AC8                                    1044 @@gen_label45 DS    0H
00000AC8 05EF                               1045          BALR  14,15
00000ACA                                    1046 @@gen_label46 DS    0H
00000ACA                                    1047 @L79     DS    0H
00000ACA                                    1048 @L76     DS    0H
00000ACA A7F9 0001               00000001   1049          LGHI  15,1        ; 1
00000ACE E3C0 C130 001A          00000848   1050          ALGF  12,@lit_region_diff_833_1_2
                                            1051          DROP  12
                        00000FC2            1052          USING @REGION_833_2,12
00000AD4 47F0 C4F2               000014B4   1053          B     @ret_lab_833
                                            1054          DROP  12
                        00000718            1055          USING @REGION_833_1,12
00000AD8                                    1056 @L74     DS    0H
                                            1057 * ***
                                            1058 * ***           do { if (!(ret_num == num)) { fprintf(__stderrp, "\033\
                                            1059 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "ret_num == num" ": "\
                                            1060 * , "C:\\asgkafka\\librdkafka\\src\\rdvarint.c", 57, __FUNCTION__); fp\
                                            1061 * rintf(__stderrp, "varint decode returned wrong number: " "%" "lld" "\
                                            1062 *  != %" "lld", ret_num, num); fprintf(__stderrp, "\033[0m\n"); if (rd\
                                            1063 * _unittest_assert_on_failure) ((ret_num == num) ? (void)0 : __assert(\
                                            1064 * __func__, "C:\\asgkafka\\librdkafka\\src\\rdvarint.c", 57, "ret_num \
                                            1065 * == num")); return 1; } } while (0);
00000AD8                                    1066 @L80     DS    0H
00000AD8 E330 D0A8 0020          000000A8   1067          CG    3,168(0,13)
00000ADE 4780 C4C8               00000BE0   1068          BE    @L83
00000AE2 E320 C120 0016          00000838   1069          LLGF  2,@lit_833_19 ; __stderrp
00000AE8 E3F2 5000 0004          00000000   1070          LG    15,0(2,5)   ; __stderrp
00000AEE E3F0 D160 0024          00000160   1071          STG   15,352(0,13)
00000AF4 E340 C118 0004          00000830   1072          LG    4,@lit_833_20
00000AFA 41F0 4132               00000132   1073          LA    15,306(0,4)
00000AFE E3F0 D168 0024          00000168   1074          STG   15,360(0,13)
00000B04 41F0 401E               0000001E   1075          LA    15,30(0,4)
00000B08 E3F0 D170 0024          00000170   1076          STG   15,368(0,13)
00000B0E E548 D178 0039          00000178   1077          MVGHI 376(13),57
00000B14 E360 C110 0004          00000828   1078          LG    6,@lit_833_21
                                                                                                                           Page   25 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000B1A 41F0 6046               00000046   1079          LA    15,70(0,6)
00000B1E E3F0 D180 0024          00000180   1080          STG   15,384(0,13)
00000B24 4110 D160               00000160   1081          LA    1,352(0,13)
00000B28 E370 C108 0004          00000820   1082          LG    7,@lit_833_22 ; fprintf
00000B2E B904 00F7                          1083          LGR   15,7
00000B32                                    1084 @@gen_label48 DS    0H
00000B32 05EF                               1085          BALR  14,15
00000B34                                    1086 @@gen_label49 DS    0H
00000B34 E3F2 5000 0004          00000000   1087          LG    15,0(2,5)   ; __stderrp
00000B3A E3F0 D160 0024          00000160   1088          STG   15,352(0,13)
00000B40 41F0 416E               0000016E   1089          LA    15,366(0,4)
00000B44 E3F0 D168 0024          00000168   1090          STG   15,360(0,13)
00000B4A E3F0 D0A8 0004          000000A8   1091          LG    15,168(0,13) ; ret_num
00000B50 E3F0 D170 0024          00000170   1092          STG   15,368(0,13)
00000B56 E330 D178 0024          00000178   1093          STG   3,376(0,13)
00000B5C 4110 D160               00000160   1094          LA    1,352(0,13)
00000B60 B904 00F7                          1095          LGR   15,7
00000B64                                    1096 @@gen_label50 DS    0H
00000B64 05EF                               1097          BALR  14,15
00000B66                                    1098 @@gen_label51 DS    0H
00000B66 E3F2 5000 0004          00000000   1099          LG    15,0(2,5)   ; __stderrp
00000B6C E3F0 D160 0024          00000160   1100          STG   15,352(0,13)
00000B72 41F0 4076               00000076   1101          LA    15,118(0,4)
00000B76 E3F0 D168 0024          00000168   1102          STG   15,360(0,13)
00000B7C 4110 D160               00000160   1103          LA    1,352(0,13)
00000B80 B904 00F7                          1104          LGR   15,7
00000B84                                    1105 @@gen_label52 DS    0H
00000B84 05EF                               1106          BALR  14,15
00000B86                                    1107 @@gen_label53 DS    0H
00000B86 E3F0 C124 0016          0000083C   1108          LLGF  15,@lit_833_27 ; rd_unittest_assert_on_failure
00000B8C 41FF 5000               00000000   1109          LA    15,0(15,5)
00000B90 9500 F000      00000000 00000000   1110          CLI   0(15),0
00000B94 4780 C4BA               00000BD2   1111          BE    @L84
00000B98 E330 D0A8 0020          000000A8   1112          CG    3,168(0,13)
00000B9E 4780 C4BA               00000BD2   1113          BE    @L84
00000BA2                                    1114 @L85     DS    0H
00000BA2 41F0 6046               00000046   1115          LA    15,70(0,6)
00000BA6 E3F0 D160 0024          00000160   1116          STG   15,352(0,13)
00000BAC 41F0 401E               0000001E   1117          LA    15,30(0,4)
00000BB0 E3F0 D168 0024          00000168   1118          STG   15,360(0,13)
00000BB6 E548 D170 0039          00000170   1119          MVGHI 368(13),57
00000BBC 41F0 41A0               000001A0   1120          LA    15,416(0,4)
00000BC0 E3F0 D178 0024          00000178   1121          STG   15,376(0,13)
00000BC6 4110 D160               00000160   1122          LA    1,352(0,13)
00000BCA E3F0 C128 0004          00000840   1123          LG    15,@lit_833_28 ; __assert
00000BD0                                    1124 @@gen_label56 DS    0H
00000BD0 05EF                               1125          BALR  14,15
00000BD2                                    1126 @@gen_label57 DS    0H
00000BD2                                    1127 @L86     DS    0H
00000BD2                                    1128 @L84     DS    0H
00000BD2 A7F9 0001               00000001   1129          LGHI  15,1        ; 1
00000BD6 E3C0 C130 001A          00000848   1130          ALGF  12,@lit_region_diff_833_1_2
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1131          DROP  12
                        00000FC2            1132          USING @REGION_833_2,12
00000BDC 47F0 C4F2               000014B4   1133          B     @ret_lab_833
                                            1134          DROP  12
                        00000718            1135          USING @REGION_833_1,12
00000BE0                                    1136 @L83     DS    0H
                                            1137 * ***
                                            1138 * ***
                                            1139 * ***
                                            1140 * ***
                                            1141 * ***           rd_buf_init(&b, 1, 0);
00000BE0 41F0 D100               00000100   1142          LA    15,256(0,13)
00000BE4 E3F0 D160 0024          00000160   1143          STG   15,352(0,13)
00000BEA E548 D168 0001          00000168   1144          MVGHI 360(13),1
00000BF0 D707 D170 D170 00000170 00000170   1145          XC    368(8,13),368(13)
00000BF6 4110 D160               00000160   1146          LA    1,352(0,13)
00000BFA E3F0 C148 0004          00000860   1147          LG    15,@lit_833_55 ; rd_buf_init
00000C00                                    1148 @@gen_label58 DS    0H
00000C00 05EF                               1149          BALR  14,15
00000C02                                    1150 @@gen_label59 DS    0H
                                            1151 * ***           rd_buf_push0(&b,buf,sizeof(buf),((void *)0),0 );
00000C02 41F0 D100               00000100   1152          LA    15,256(0,13)
00000C06 E3F0 D160 0024          00000160   1153          STG   15,352(0,13)
00000C0C 41F0 D150               00000150   1154          LA    15,336(0,13)
00000C10 E3F0 D168 0024          00000168   1155          STG   15,360(0,13)
00000C16 E548 D170 0010          00000170   1156          MVGHI 368(13),16
00000C1C D70F D178 D178 00000178 00000178   1157          XC    376(16,13),376(13)
00000C22 4110 D160               00000160   1158          LA    1,352(0,13)
00000C26 E3F0 C150 0004          00000868   1159          LG    15,@lit_833_56 ; rd_buf_push0
00000C2C                                    1160 @@gen_label60 DS    0H
00000C2C 05EF                               1161          BALR  14,15
00000C2E                                    1162 @@gen_label61 DS    0H
                                            1163 * ***
                                            1164 * ***
                                            1165 * ***           rd_slice_init_full(&slice, &b);
00000C2E 41F0 D0D8               000000D8   1166          LA    15,216(0,13)
00000C32 E3F0 D160 0024          00000160   1167          STG   15,352(0,13)
00000C38 41F0 D100               00000100   1168          LA    15,256(0,13)
00000C3C E3F0 D168 0024          00000168   1169          STG   15,360(0,13)
00000C42 4110 D160               00000160   1170          LA    1,352(0,13)
00000C46 E3F0 C158 0004          00000870   1171          LG    15,@lit_833_57 ; rd_slice_init_full
00000C4C                                    1172 @@gen_label62 DS    0H
00000C4C 05EF                               1173          BALR  14,15
00000C4E                                    1174 @@gen_label63 DS    0H
                                            1175 * ***
                                            1176 * ***
                                            1177 * ***           ir = rd_slice_narrow_copy(&slice, &bad_slice, sz-1);
00000C4E 41F0 D0D8               000000D8   1178          LA    15,216(0,13)
00000C52 E3F0 D160 0024          00000160   1179          STG   15,352(0,13)
00000C58 41F0 D0B0               000000B0   1180          LA    15,176(0,13)
00000C5C E3F0 D168 0024          00000168   1181          STG   15,360(0,13)
00000C62 B904 00F4                          1182          LGR   15,4
                                                                                                                           Page   27 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000C66 A7FB FFFF               0000FFFF   1183          AGHI  15,-1
00000C6A E3F0 D170 0024          00000170   1184          STG   15,368(0,13)
00000C70 4110 D160               00000160   1185          LA    1,352(0,13)
00000C74 E3F0 C160 0004          00000878   1186          LG    15,@lit_833_58 ; rd_slice_narrow_copy
00000C7A                                    1187 @@gen_label64 DS    0H
00000C7A 05EF                               1188          BALR  14,15
00000C7C                                    1189 @@gen_label65 DS    0H
00000C7C 182F                               1190          LR    2,15
                                            1191 * ***           do { if (!(ir)) { fprintf(__stderrp, "\033[31mRDUT: FA\
                                            1192 * IL: %s:%d: %s: " "assert failed: " "ir" ": ", "C:\\asgkafka\\librdka\
                                            1193 * fka\\src\\rdvarint.c", 70, __FUNCTION__); fprintf(__stderrp, "narrow\
                                            1194 * _copy failed"); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_ass\
                                            1195 * ert_on_failure) ((ir) ? (void)0 : __assert(__func__, "C:\\asgkafka\\\
                                            1196 * librdkafka\\src\\rdvarint.c", 70, "ir")); return 1; } } while (0);
00000C7E                                    1197 @L87     DS    0H
00000C7E 1222                               1198          LTR   2,2
00000C80 4770 C654               00000D6C   1199          BNZ   @L90
00000C84 E330 C120 0016          00000838   1200          LLGF  3,@lit_833_19 ; __stderrp
00000C8A E3F3 5000 0004          00000000   1201          LG    15,0(3,5)   ; __stderrp
00000C90 E3F0 D160 0024          00000160   1202          STG   15,352(0,13)
00000C96 E340 C118 0004          00000830   1203          LG    4,@lit_833_20
00000C9C 41F0 41B0               000001B0   1204          LA    15,432(0,4)
00000CA0 E3F0 D168 0024          00000168   1205          STG   15,360(0,13)
00000CA6 41F0 401E               0000001E   1206          LA    15,30(0,4)
00000CAA E3F0 D170 0024          00000170   1207          STG   15,368(0,13)
00000CB0 E548 D178 0046          00000178   1208          MVGHI 376(13),70
00000CB6 E360 C110 0004          00000828   1209          LG    6,@lit_833_21
00000CBC 41F0 6046               00000046   1210          LA    15,70(0,6)
00000CC0 E3F0 D180 0024          00000180   1211          STG   15,384(0,13)
00000CC6 4110 D160               00000160   1212          LA    1,352(0,13)
00000CCA E370 C108 0004          00000820   1213          LG    7,@lit_833_22 ; fprintf
00000CD0 B904 00F7                          1214          LGR   15,7
00000CD4                                    1215 @@gen_label67 DS    0H
00000CD4 05EF                               1216          BALR  14,15
00000CD6                                    1217 @@gen_label68 DS    0H
00000CD6 E3F3 5000 0004          00000000   1218          LG    15,0(3,5)   ; __stderrp
00000CDC E3F0 D160 0024          00000160   1219          STG   15,352(0,13)
00000CE2 41F0 41E0               000001E0   1220          LA    15,480(0,4)
00000CE6 E3F0 D168 0024          00000168   1221          STG   15,360(0,13)
00000CEC 4110 D160               00000160   1222          LA    1,352(0,13)
00000CF0 B904 00F7                          1223          LGR   15,7
00000CF4                                    1224 @@gen_label69 DS    0H
00000CF4 05EF                               1225          BALR  14,15
00000CF6                                    1226 @@gen_label70 DS    0H
00000CF6 E3F3 5000 0004          00000000   1227          LG    15,0(3,5)   ; __stderrp
00000CFC E3F0 D160 0024          00000160   1228          STG   15,352(0,13)
00000D02 41F0 4076               00000076   1229          LA    15,118(0,4)
00000D06 E3F0 D168 0024          00000168   1230          STG   15,360(0,13)
00000D0C 4110 D160               00000160   1231          LA    1,352(0,13)
00000D10 B904 00F7                          1232          LGR   15,7
00000D14                                    1233 @@gen_label71 DS    0H
00000D14 05EF                               1234          BALR  14,15
                                                                                                                           Page   28 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000D16                                    1235 @@gen_label72 DS    0H
00000D16 E3F0 C124 0016          0000083C   1236          LLGF  15,@lit_833_27 ; rd_unittest_assert_on_failure
00000D1C 41FF 5000               00000000   1237          LA    15,0(15,5)
00000D20 9500 F000      00000000 00000000   1238          CLI   0(15),0
00000D24 4780 C646               00000D5E   1239          BE    @L91
00000D28 1222                               1240          LTR   2,2
00000D2A 4770 C646               00000D5E   1241          BNZ   @L91
00000D2E                                    1242 @L92     DS    0H
00000D2E 41F0 6046               00000046   1243          LA    15,70(0,6)
00000D32 E3F0 D160 0024          00000160   1244          STG   15,352(0,13)
00000D38 41F0 401E               0000001E   1245          LA    15,30(0,4)
00000D3C E3F0 D168 0024          00000168   1246          STG   15,360(0,13)
00000D42 E548 D170 0046          00000170   1247          MVGHI 368(13),70
00000D48 41F0 41F4               000001F4   1248          LA    15,500(0,4)
00000D4C E3F0 D178 0024          00000178   1249          STG   15,376(0,13)
00000D52 4110 D160               00000160   1250          LA    1,352(0,13)
00000D56 E3F0 C128 0004          00000840   1251          LG    15,@lit_833_28 ; __assert
00000D5C                                    1252 @@gen_label75 DS    0H
00000D5C 05EF                               1253          BALR  14,15
00000D5E                                    1254 @@gen_label76 DS    0H
00000D5E                                    1255 @L93     DS    0H
00000D5E                                    1256 @L91     DS    0H
00000D5E A7F9 0001               00000001   1257          LGHI  15,1        ; 1
00000D62 E3C0 C130 001A          00000848   1258          ALGF  12,@lit_region_diff_833_1_2
                                            1259          DROP  12
                        00000FC2            1260          USING @REGION_833_2,12
00000D68 47F0 C4F2               000014B4   1261          B     @ret_lab_833
                                            1262          DROP  12
                        00000718            1263          USING @REGION_833_1,12
00000D6C                                    1264 @L90     DS    0H
                                            1265 * ***           ret_num = -1;
00000D6C E548 D0A8 FFFF          000000A8   1266          MVGHI 168(13),-1  ; ret_num
                                            1267 * ***           r = rd_slice_read_varint(&bad_slice, &ret_num);
00000D72 41F0 D0B0               000000B0   1268          LA    15,176(0,13)
00000D76 E3F0 D160 0024          00000160   1269          STG   15,352(0,13)
00000D7C 41F0 D0A8               000000A8   1270          LA    15,168(0,13)
00000D80 E3F0 D168 0024          00000168   1271          STG   15,360(0,13)
00000D86 4110 D160               00000160   1272          LA    1,352(0,13)
00000D8A E3F0 C168 0004          00000880   1273          LG    15,@lit_833_70 ; rd_slice_read_varint
00000D90                                    1274 @@gen_label77 DS    0H
00000D90 05EF                               1275          BALR  14,15
00000D92                                    1276 @@gen_label78 DS    0H
00000D92 B904 002F                          1277          LGR   2,15        ; r
                                            1278 * ***           do { if (!(((r == 0) || (r > 0xffffffffffffffffULL))))\
                                            1279 *  { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert fail\
                                            1280 * ed: " "RD_UVARINT_DEC_FAILED(r)" ": ", "C:\\asgkafka\\librdkafka\\sr\
                                            1281 * c\\rdvarint.c", 73, __FUNCTION__); fprintf(__stderrp, "varint decode\
                                            1282 *  failed should have failed, " "returned %" "zu", r); fprintf(__stder\
                                            1283 * rp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((((r == 0) || \
                                            1284 * (r > 0xffffffffffffffffULL))) ? (void)0 : __assert(__func__, "C:\\as\
                                            1285 * gkafka\\librdkafka\\src\\rdvarint.c", 73, "((r == 0) || (r > 0xfffff\
                                            1286 * fffffffffffULL))")); return 1; } } while (0);
                                                                                                                           Page   29 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000D96                                    1287 @L94     DS    0H
00000D96 B902 00F2                          1288          LTGR  15,2
00000D9A 4780 C78E               00000EA6   1289          BE    @L97
00000D9E E320 C140 0021          00000858   1290          CLG   2,@lit_833_31
00000DA4 4720 C78E               00000EA6   1291          BH    @L97
00000DA8                                    1292 @L98     DS    0H
00000DA8 E330 C120 0016          00000838   1293          LLGF  3,@lit_833_19 ; __stderrp
00000DAE E3F3 5000 0004          00000000   1294          LG    15,0(3,5)   ; __stderrp
00000DB4 E3F0 D160 0024          00000160   1295          STG   15,352(0,13)
00000DBA E340 C118 0004          00000830   1296          LG    4,@lit_833_20
00000DC0 41F0 41F8               000001F8   1297          LA    15,504(0,4)
00000DC4 E3F0 D168 0024          00000168   1298          STG   15,360(0,13)
00000DCA 41F0 401E               0000001E   1299          LA    15,30(0,4)
00000DCE E3F0 D170 0024          00000170   1300          STG   15,368(0,13)
00000DD4 E548 D178 0049          00000178   1301          MVGHI 376(13),73
00000DDA E360 C110 0004          00000828   1302          LG    6,@lit_833_21
00000DE0 41F0 6046               00000046   1303          LA    15,70(0,6)
00000DE4 E3F0 D180 0024          00000180   1304          STG   15,384(0,13)
00000DEA 4110 D160               00000160   1305          LA    1,352(0,13)
00000DEE E370 C108 0004          00000820   1306          LG    7,@lit_833_22 ; fprintf
00000DF4 B904 00F7                          1307          LGR   15,7
00000DF8                                    1308 @@gen_label81 DS    0H
00000DF8 05EF                               1309          BALR  14,15
00000DFA                                    1310 @@gen_label82 DS    0H
00000DFA E3F3 5000 0004          00000000   1311          LG    15,0(3,5)   ; __stderrp
00000E00 E3F0 D160 0024          00000160   1312          STG   15,352(0,13)
00000E06 41F0 423E               0000023E   1313          LA    15,574(0,4)
00000E0A E3F0 D168 0024          00000168   1314          STG   15,360(0,13)
00000E10 E320 D170 0024          00000170   1315          STG   2,368(0,13)
00000E16 4110 D160               00000160   1316          LA    1,352(0,13)
00000E1A B904 00F7                          1317          LGR   15,7
00000E1E                                    1318 @@gen_label83 DS    0H
00000E1E 05EF                               1319          BALR  14,15
00000E20                                    1320 @@gen_label84 DS    0H
00000E20 E3F3 5000 0004          00000000   1321          LG    15,0(3,5)   ; __stderrp
00000E26 E3F0 D160 0024          00000160   1322          STG   15,352(0,13)
00000E2C 41F0 4076               00000076   1323          LA    15,118(0,4)
00000E30 E3F0 D168 0024          00000168   1324          STG   15,360(0,13)
00000E36 4110 D160               00000160   1325          LA    1,352(0,13)
00000E3A B904 00F7                          1326          LGR   15,7
00000E3E                                    1327 @@gen_label85 DS    0H
00000E3E 05EF                               1328          BALR  14,15
00000E40                                    1329 @@gen_label86 DS    0H
00000E40 E3F0 C124 0016          0000083C   1330          LLGF  15,@lit_833_27 ; rd_unittest_assert_on_failure
00000E46 41FF 5000               00000000   1331          LA    15,0(15,5)
00000E4A 9500 F000      00000000 00000000   1332          CLI   0(15),0
00000E4E 4780 C780               00000E98   1333          BE    @L99
00000E52 B902 00F2                          1334          LTGR  15,2
00000E56 4780 C780               00000E98   1335          BE    @L99
00000E5A E320 C140 0021          00000858   1336          CLG   2,@lit_833_31
00000E60 47D0 C750               00000E68   1337          BNH   @L100
00000E64                                    1338 @L101    DS    0H
                                                                                                                           Page   30 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000E64 47F0 C780               00000E98   1339          B     @L99
00000E68                                    1340 @L100    DS    0H
00000E68 41F0 6046               00000046   1341          LA    15,70(0,6)
00000E6C E3F0 D160 0024          00000160   1342          STG   15,352(0,13)
00000E72 41F0 401E               0000001E   1343          LA    15,30(0,4)
00000E76 E3F0 D168 0024          00000168   1344          STG   15,360(0,13)
00000E7C E548 D170 0049          00000170   1345          MVGHI 368(13),73
00000E82 41F0 4274               00000274   1346          LA    15,628(0,4)
00000E86 E3F0 D178 0024          00000178   1347          STG   15,376(0,13)
00000E8C 4110 D160               00000160   1348          LA    1,352(0,13)
00000E90 E3F0 C128 0004          00000840   1349          LG    15,@lit_833_28 ; __assert
00000E96                                    1350 @@gen_label90 DS    0H
00000E96 05EF                               1351          BALR  14,15
00000E98                                    1352 @@gen_label91 DS    0H
00000E98                                    1353 @L102    DS    0H
00000E98                                    1354 @L99     DS    0H
00000E98 A7F9 0001               00000001   1355          LGHI  15,1        ; 1
00000E9C E3C0 C130 001A          00000848   1356          ALGF  12,@lit_region_diff_833_1_2
                                            1357          DROP  12
                        00000FC2            1358          USING @REGION_833_2,12
00000EA2 47F0 C4F2               000014B4   1359          B     @ret_lab_833
                                            1360          DROP  12
                        00000718            1361          USING @REGION_833_1,12
00000EA6                                    1362 @L97     DS    0H
                                            1363 * ***
                                            1364 * ***
                                            1365 * ***
                                            1366 * ***           r = rd_slice_offset(&bad_slice);
00000EA6 41F0 D0B0               000000B0   1367          LA    15,176(0,13)
00000EAA E3F0 D160 0024          00000160   1368          STG   15,352(0,13)
00000EB0 4110 D160               00000160   1369          LA    1,352(0,13)
00000EB4 E3F0 C170 0004          00000888   1370          LG    15,@lit_833_84 ; rd_slice_offset
00000EBA                                    1371 @@gen_label92 DS    0H
00000EBA 05EF                               1372          BALR  14,15
00000EBC                                    1373 @@gen_label93 DS    0H
00000EBC B904 002F                          1374          LGR   2,15        ; r
                                            1375 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                            1376 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                            1377 * \librdkafka\\src\\rdvarint.c", 78, __FUNCTION__); fprintf(__stderrp,\
                                            1378 *  "expected slice position to not change, but got %" "zu", r); fprint\
                                            1379 * f(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r ==\
                                            1380 *  0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\r\
                                            1381 * dvarint.c", 78, "r == 0")); return 1; } } while (0);
00000EC0                                    1382 @L103    DS    0H
00000EC0 B902 00F2                          1383          LTGR  15,2
00000EC4 4770 C7BA               00000ED2   1384          BNE   *+14  Around region break
00000EC8 E3C0 C130 001A          00000848   1385          ALGF  12,@lit_region_diff_833_1_2
                                            1386          DROP  12
                        00000FC2            1387          USING @REGION_833_2,12
00000ECE 47F0 C000               00000FC2   1388          B     @L106
                                            1389          DROP  12
                        00000718            1390          USING @REGION_833_1,12
                                                                                                                           Page   31 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000ED2 E330 C120 0016          00000838   1391          LLGF  3,@lit_833_19 ; __stderrp
00000ED8 E3F3 5000 0004          00000000   1392          LG    15,0(3,5)   ; __stderrp
00000EDE E3F0 D160 0024          00000160   1393          STG   15,352(0,13)
00000EE4 E340 C118 0004          00000830   1394          LG    4,@lit_833_20
00000EEA 41F0 429E               0000029E   1395          LA    15,670(0,4)
00000EEE E3F0 D168 0024          00000168   1396          STG   15,360(0,13)
00000EF4 41F0 401E               0000001E   1397          LA    15,30(0,4)
00000EF8 E3F0 D170 0024          00000170   1398          STG   15,368(0,13)
00000EFE E548 D178 004E          00000178   1399          MVGHI 376(13),78
00000F04 E360 C110 0004          00000828   1400          LG    6,@lit_833_21
00000F0A 41F0 6046               00000046   1401          LA    15,70(0,6)
00000F0E E3F0 D180 0024          00000180   1402          STG   15,384(0,13)
00000F14 4110 D160               00000160   1403          LA    1,352(0,13)
00000F18 E370 C108 0004          00000820   1404          LG    7,@lit_833_22 ; fprintf
00000F1E B904 00F7                          1405          LGR   15,7
00000F22                                    1406 @@gen_label95 DS    0H
00000F22 05EF                               1407          BALR  14,15
00000F24                                    1408 @@gen_label96 DS    0H
00000F24 E3F3 5000 0004          00000000   1409          LG    15,0(3,5)   ; __stderrp
00000F2A E3F0 D160 0024          00000160   1410          STG   15,352(0,13)
00000F30 41F0 42D2               000002D2   1411          LA    15,722(0,4)
00000F34 E3F0 D168 0024          00000168   1412          STG   15,360(0,13)
00000F3A E320 D170 0024          00000170   1413          STG   2,368(0,13)
00000F40 4110 D160               00000160   1414          LA    1,352(0,13)
00000F44 B904 00F7                          1415          LGR   15,7
00000F48                                    1416 @@gen_label97 DS    0H
00000F48 05EF                               1417          BALR  14,15
00000F4A                                    1418 @@gen_label98 DS    0H
00000F4A E3F3 5000 0004          00000000   1419          LG    15,0(3,5)   ; __stderrp
00000F50 E3F0 D160 0024          00000160   1420          STG   15,352(0,13)
00000F56 41F0 4076               00000076   1421          LA    15,118(0,4)
00000F5A E3F0 D168 0024          00000168   1422          STG   15,360(0,13)
00000F60 4110 D160               00000160   1423          LA    1,352(0,13)
00000F64 B904 00F7                          1424          LGR   15,7
00000F68                                    1425 @@gen_label99 DS    0H
00000F68 05EF                               1426          BALR  14,15
00000F6A                                    1427 @@gen_label100 DS    0H
00000F6A E3F0 C124 0016          0000083C   1428          LLGF  15,@lit_833_27 ; rd_unittest_assert_on_failure
00000F70 41FF 5000               00000000   1429          LA    15,0(15,5)
00000F74 9500 F000      00000000 00000000   1430          CLI   0(15),0
00000F78 4780 C89C               00000FB4   1431          BE    @L107
00000F7C B902 00F2                          1432          LTGR  15,2
00000F80 4780 C89C               00000FB4   1433          BE    @L107
00000F84                                    1434 @L108    DS    0H
00000F84 41F0 6046               00000046   1435          LA    15,70(0,6)
00000F88 E3F0 D160 0024          00000160   1436          STG   15,352(0,13)
00000F8E 41F0 401E               0000001E   1437          LA    15,30(0,4)
00000F92 E3F0 D168 0024          00000168   1438          STG   15,360(0,13)
00000F98 E548 D170 004E          00000170   1439          MVGHI 368(13),78
00000F9E 41F0 4306               00000306   1440          LA    15,774(0,4)
00000FA2 E3F0 D178 0024          00000178   1441          STG   15,376(0,13)
00000FA8 4110 D160               00000160   1442          LA    1,352(0,13)
                                                                                                                           Page   32 
  Active Usings: @REGION_833_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000FAC E3F0 C128 0004          00000840   1443          LG    15,@lit_833_28 ; __assert
00000FB2                                    1444 @@gen_label103 DS    0H
00000FB2 05EF                               1445          BALR  14,15
00000FB4                                    1446 @@gen_label104 DS    0H
00000FB4                                    1447 @L109    DS    0H
00000FB4                                    1448 @L107    DS    0H
00000FB4 A7F9 0001               00000001   1449          LGHI  15,1        ; 1
00000FB8 E3C0 C130 001A          00000848   1450          ALGF  12,@lit_region_diff_833_1_2
                                            1451          DROP  12
                        00000FC2            1452          USING @REGION_833_2,12
00000FBE 47F0 C4F2               000014B4   1453          B     @ret_lab_833
                                            1454          DROP  12
                        00000718            1455          USING @REGION_833_1,12
00000FC2                                    1456 @REGION_833_2 DS 0H
                                            1457          DROP  12
                        00000FC2            1458          USING @REGION_833_2,12
00000FC2                                    1459 @L106    DS    0H
                                            1460 * ***
                                            1461 * ***
                                            1462 * ***
                                            1463 * ***
                                            1464 * ***           ret_num = -1;
00000FC2 E548 D0A8 FFFF          000000A8   1465          MVGHI 168(13),-1  ; ret_num
                                            1466 * ***           r = rd_slice_read_varint(&slice, &ret_num);
00000FC8 41F0 D0D8               000000D8   1467          LA    15,216(0,13)
00000FCC E3F0 D160 0024          00000160   1468          STG   15,352(0,13)
00000FD2 41F0 D0A8               000000A8   1469          LA    15,168(0,13)
00000FD6 E3F0 D168 0024          00000168   1470          STG   15,360(0,13)
00000FDC 4110 D160               00000160   1471          LA    1,352(0,13)
00000FE0 E3F0 C136 0004          000010F8   1472          LG    15,@lit_833_96 ; rd_slice_read_varint
00000FE6                                    1473 @@gen_label105 DS    0H
00000FE6 05EF                               1474          BALR  14,15
00000FE8                                    1475 @@gen_label106 DS    0H
00000FE8 B904 002F                          1476          LGR   2,15        ; r
                                            1477 * ***           do { if (!(!((r == 0) || (r > 0xffffffffffffffffULL)))\
                                            1478 * ) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert fai\
                                            1479 * led: " "!RD_UVARINT_DEC_FAILED(r)" ": ", "C:\\asgkafka\\librdkafka\\\
                                            1480 * src\\rdvarint.c", 85, __FUNCTION__); fprintf(__stderrp, "varint deco\
                                            1481 * de failed: %" "zu", r); fprintf(__stderrp, "\033[0m\n"); if (rd_unit\
                                            1482 * test_assert_on_failure) ((!((r == 0) || (r > 0xffffffffffffffffULL))\
                                            1483 * ) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdv\
                                            1484 * arint.c", 85, "!((r == 0) || (r > 0xffffffffffffffffULL))")); return\
                                            1485 *  1; } } while (0);
00000FEC                                    1486 @L110    DS    0H
00000FEC B902 00F2                          1487          LTGR  15,2
00000FF0 4780 C03C               00000FFE   1488          BE    @L114
00000FF4 E320 C13E 0021          00001100   1489          CLG   2,@lit_833_97
00000FFA 47D0 C17E               00001140   1490          BNH   @L113
00000FFE                                    1491 @L114    DS    0H
00000FFE E330 C15E 0016          00001120   1492          LLGF  3,@lit_833_98 ; __stderrp
00001004 E3F3 5000 0004          00000000   1493          LG    15,0(3,5)   ; __stderrp
0000100A E3F0 D160 0024          00000160   1494          STG   15,352(0,13)
                                                                                                                           Page   33 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001010 E340 C156 0004          00001118   1495          LG    4,@lit_833_99
00001016 41F0 40A4               000000A4   1496          LA    15,164(0,4)
0000101A E3F0 D168 0024          00000168   1497          STG   15,360(0,13)
00001020 41F0 401E               0000001E   1498          LA    15,30(0,4)
00001024 E3F0 D170 0024          00000170   1499          STG   15,368(0,13)
0000102A E548 D178 0055          00000178   1500          MVGHI 376(13),85
00001030 E360 C14E 0004          00001110   1501          LG    6,@lit_833_100
00001036 41F0 6046               00000046   1502          LA    15,70(0,6)
0000103A E3F0 D180 0024          00000180   1503          STG   15,384(0,13)
00001040 4110 D160               00000160   1504          LA    1,352(0,13)
00001044 E370 C146 0004          00001108   1505          LG    7,@lit_833_101 ; fprintf
0000104A B904 00F7                          1506          LGR   15,7
0000104E                                    1507 @@gen_label109 DS    0H
0000104E 05EF                               1508          BALR  14,15
00001050                                    1509 @@gen_label110 DS    0H
00001050 E3F3 5000 0004          00000000   1510          LG    15,0(3,5)   ; __stderrp
00001056 E3F0 D160 0024          00000160   1511          STG   15,352(0,13)
0000105C 41F0 40EC               000000EC   1512          LA    15,236(0,4)
00001060 E3F0 D168 0024          00000168   1513          STG   15,360(0,13)
00001066 E320 D170 0024          00000170   1514          STG   2,368(0,13)
0000106C 4110 D160               00000160   1515          LA    1,352(0,13)
00001070 B904 00F7                          1516          LGR   15,7
00001074                                    1517 @@gen_label111 DS    0H
00001074 05EF                               1518          BALR  14,15
00001076                                    1519 @@gen_label112 DS    0H
00001076 E3F3 5000 0004          00000000   1520          LG    15,0(3,5)   ; __stderrp
0000107C E3F0 D160 0024          00000160   1521          STG   15,352(0,13)
00001082 41F0 4076               00000076   1522          LA    15,118(0,4)
00001086 E3F0 D168 0024          00000168   1523          STG   15,360(0,13)
0000108C 4110 D160               00000160   1524          LA    1,352(0,13)
00001090 B904 00F7                          1525          LGR   15,7
00001094                                    1526 @@gen_label113 DS    0H
00001094 05EF                               1527          BALR  14,15
00001096                                    1528 @@gen_label114 DS    0H
00001096 E3F0 C162 0016          00001124   1529          LLGF  15,@lit_833_106 ; rd_unittest_assert_on_failure
0000109C 41FF 5000               00000000   1530          LA    15,0(15,5)
000010A0 9500 F000      00000000 00000000   1531          CLI   0(15),0
000010A4 4780 C128               000010EA   1532          BE    @L115
000010A8 B902 00F2                          1533          LTGR  15,2
000010AC 4780 C0F8               000010BA   1534          BE    @L116
000010B0 E320 C13E 0021          00001100   1535          CLG   2,@lit_833_97
000010B6 47D0 C128               000010EA   1536          BNH   @L115
000010BA                                    1537 @L116    DS    0H
000010BA 41F0 6046               00000046   1538          LA    15,70(0,6)
000010BE E3F0 D160 0024          00000160   1539          STG   15,352(0,13)
000010C4 41F0 401E               0000001E   1540          LA    15,30(0,4)
000010C8 E3F0 D168 0024          00000168   1541          STG   15,360(0,13)
000010CE E548 D170 0055          00000170   1542          MVGHI 368(13),85
000010D4 41F0 4106               00000106   1543          LA    15,262(0,4)
000010D8 E3F0 D178 0024          00000178   1544          STG   15,376(0,13)
000010DE 4110 D160               00000160   1545          LA    1,352(0,13)
000010E2 E3F0 C166 0004          00001128   1546          LG    15,@lit_833_108 ; __assert
                                                                                                                           Page   34 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000010E8                                    1547 @@gen_label118 DS    0H
000010E8 05EF                               1548          BALR  14,15
000010EA                                    1549 @@gen_label119 DS    0H
000010EA                                    1550 @L118    DS    0H
000010EA                                    1551 @L115    DS    0H
000010EA A7F9 0001               00000001   1552          LGHI  15,1        ; 1
000010EE 47F0 C4F2               000014B4   1553          B     @ret_lab_833
000010F8                                    1554          DS    0D
000010F8 0000000000000120                   1555 @lit_833_96 DC AD(rd_slice_read_varint)
00001100 FFFFFFFFFFFFFFFF                   1556 @lit_833_97 DC FD'-1' 0xffffffffffffffff
00001108 0000000000000000                   1557 @lit_833_101 DC AD(fprintf)
00001110 0000000000001820                   1558 @lit_833_100 DC AD(@DATA)
00001118 0000000000001882                   1559 @lit_833_99 DC AD(@strings@)
00001120 00000000                           1560 @lit_833_98 DC Q(__stderrp)
00001124 00000000                           1561 @lit_833_106 DC Q(rd_unittest_assert_on_failure)
00001128 0000000000000000                   1562 @lit_833_108 DC AD(__assert)
00001130 0000000000000060                   1563 @lit_833_132 DC AD(rd_slice_offset)
00001138 0000000000000000                   1564 @lit_833_144 DC AD(rd_buf_destroy)
00001140                                    1565 @L113    DS    0H
                                            1566 * ***
                                            1567 * ***           do { if (!(ret_num == num)) { fprintf(__stderrp, "\033\
                                            1568 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "ret_num == num" ": "\
                                            1569 * , "C:\\asgkafka\\librdkafka\\src\\rdvarint.c", 87, __FUNCTION__); fp\
                                            1570 * rintf(__stderrp, "varint decode returned wrong number: " "%" "lld" "\
                                            1571 *  != %" "lld", ret_num, num); fprintf(__stderrp, "\033[0m\n"); if (rd\
                                            1572 * _unittest_assert_on_failure) ((ret_num == num) ? (void)0 : __assert(\
                                            1573 * __func__, "C:\\asgkafka\\librdkafka\\src\\rdvarint.c", 87, "ret_num \
                                            1574 * == num")); return 1; } } while (0);
00001140                                    1575 @L119    DS    0H
00001140 E330 D0A8 0020          000000A8   1576          CG    3,168(0,13)
00001146 4780 C280               00001242   1577          BE    @L122
0000114A E320 C15E 0016          00001120   1578          LLGF  2,@lit_833_98 ; __stderrp
00001150 E3F2 5000 0004          00000000   1579          LG    15,0(2,5)   ; __stderrp
00001156 E3F0 D160 0024          00000160   1580          STG   15,352(0,13)
0000115C E340 C156 0004          00001118   1581          LG    4,@lit_833_99
00001162 41F0 4132               00000132   1582          LA    15,306(0,4)
00001166 E3F0 D168 0024          00000168   1583          STG   15,360(0,13)
0000116C 41F0 401E               0000001E   1584          LA    15,30(0,4)
00001170 E3F0 D170 0024          00000170   1585          STG   15,368(0,13)
00001176 E548 D178 0057          00000178   1586          MVGHI 376(13),87
0000117C E360 C14E 0004          00001110   1587          LG    6,@lit_833_100
00001182 41F0 6046               00000046   1588          LA    15,70(0,6)
00001186 E3F0 D180 0024          00000180   1589          STG   15,384(0,13)
0000118C 4110 D160               00000160   1590          LA    1,352(0,13)
00001190 E370 C146 0004          00001108   1591          LG    7,@lit_833_101 ; fprintf
00001196 B904 00F7                          1592          LGR   15,7
0000119A                                    1593 @@gen_label121 DS    0H
0000119A 05EF                               1594          BALR  14,15
0000119C                                    1595 @@gen_label122 DS    0H
0000119C E3F2 5000 0004          00000000   1596          LG    15,0(2,5)   ; __stderrp
000011A2 E3F0 D160 0024          00000160   1597          STG   15,352(0,13)
000011A8 41F0 416E               0000016E   1598          LA    15,366(0,4)
                                                                                                                           Page   35 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000011AC E3F0 D168 0024          00000168   1599          STG   15,360(0,13)
000011B2 E3F0 D0A8 0004          000000A8   1600          LG    15,168(0,13) ; ret_num
000011B8 E3F0 D170 0024          00000170   1601          STG   15,368(0,13)
000011BE E330 D178 0024          00000178   1602          STG   3,376(0,13)
000011C4 4110 D160               00000160   1603          LA    1,352(0,13)
000011C8 B904 00F7                          1604          LGR   15,7
000011CC                                    1605 @@gen_label123 DS    0H
000011CC 05EF                               1606          BALR  14,15
000011CE                                    1607 @@gen_label124 DS    0H
000011CE E3F2 5000 0004          00000000   1608          LG    15,0(2,5)   ; __stderrp
000011D4 E3F0 D160 0024          00000160   1609          STG   15,352(0,13)
000011DA 41F0 4076               00000076   1610          LA    15,118(0,4)
000011DE E3F0 D168 0024          00000168   1611          STG   15,360(0,13)
000011E4 4110 D160               00000160   1612          LA    1,352(0,13)
000011E8 B904 00F7                          1613          LGR   15,7
000011EC                                    1614 @@gen_label125 DS    0H
000011EC 05EF                               1615          BALR  14,15
000011EE                                    1616 @@gen_label126 DS    0H
000011EE E3F0 C162 0016          00001124   1617          LLGF  15,@lit_833_106 ; rd_unittest_assert_on_failure
000011F4 41FF 5000               00000000   1618          LA    15,0(15,5)
000011F8 9500 F000      00000000 00000000   1619          CLI   0(15),0
000011FC 4780 C278               0000123A   1620          BE    @L123
00001200 E330 D0A8 0020          000000A8   1621          CG    3,168(0,13)
00001206 4780 C278               0000123A   1622          BE    @L123
0000120A                                    1623 @L124    DS    0H
0000120A 41F0 6046               00000046   1624          LA    15,70(0,6)
0000120E E3F0 D160 0024          00000160   1625          STG   15,352(0,13)
00001214 41F0 401E               0000001E   1626          LA    15,30(0,4)
00001218 E3F0 D168 0024          00000168   1627          STG   15,360(0,13)
0000121E E548 D170 0057          00000170   1628          MVGHI 368(13),87
00001224 41F0 41A0               000001A0   1629          LA    15,416(0,4)
00001228 E3F0 D178 0024          00000178   1630          STG   15,376(0,13)
0000122E 4110 D160               00000160   1631          LA    1,352(0,13)
00001232 E3F0 C166 0004          00001128   1632          LG    15,@lit_833_108 ; __assert
00001238                                    1633 @@gen_label129 DS    0H
00001238 05EF                               1634          BALR  14,15
0000123A                                    1635 @@gen_label130 DS    0H
0000123A                                    1636 @L125    DS    0H
0000123A                                    1637 @L123    DS    0H
0000123A A7F9 0001               00000001   1638          LGHI  15,1        ; 1
0000123E 47F0 C4F2               000014B4   1639          B     @ret_lab_833
00001242                                    1640 @L122    DS    0H
                                            1641 * ***
                                            1642 * ***
                                            1643 * ***           do { if (!(r == sz)) { fprintf(__stderrp, "\033[31mRDU\
                                            1644 * T: FAIL: %s:%d: %s: " "assert failed: " "r == sz" ": ", "C:\\asgkafk\
                                            1645 * a\\librdkafka\\src\\rdvarint.c", 90, __FUNCTION__); fprintf(__stderr\
                                            1646 * p, "expected varint decoder to read %" "zu" " bytes, " "not %" "zu",\
                                            1647 *  sz, r); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_\
                                            1648 * failure) ((r == sz) ? (void)0 : __assert(__func__, "C:\\asgkafka\\li\
                                            1649 * brdkafka\\src\\rdvarint.c", 90, "r == sz")); return 1; } } while (0)\
                                            1650 * ;
                                                                                                                           Page   36 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001242                                    1651 @L126    DS    0H
00001242 B921 0024                          1652          CLGR  2,4
00001246 4780 C378               0000133A   1653          BE    @L129
0000124A E330 C15E 0016          00001120   1654          LLGF  3,@lit_833_98 ; __stderrp
00001250 E3F3 5000 0004          00000000   1655          LG    15,0(3,5)   ; __stderrp
00001256 E3F0 D160 0024          00000160   1656          STG   15,352(0,13)
0000125C E360 C156 0004          00001118   1657          LG    6,@lit_833_99
00001262 41F0 630E               0000030E   1658          LA    15,782(0,6)
00001266 E3F0 D168 0024          00000168   1659          STG   15,360(0,13)
0000126C 41F0 601E               0000001E   1660          LA    15,30(0,6)
00001270 E3F0 D170 0024          00000170   1661          STG   15,368(0,13)
00001276 E548 D178 005A          00000178   1662          MVGHI 376(13),90
0000127C E370 C14E 0004          00001110   1663          LG    7,@lit_833_100
00001282 41F0 7046               00000046   1664          LA    15,70(0,7)
00001286 E3F0 D180 0024          00000180   1665          STG   15,384(0,13)
0000128C 4110 D160               00000160   1666          LA    1,352(0,13)
00001290 E380 C146 0004          00001108   1667          LG    8,@lit_833_101 ; fprintf
00001296 B904 00F8                          1668          LGR   15,8
0000129A                                    1669 @@gen_label132 DS    0H
0000129A 05EF                               1670          BALR  14,15
0000129C                                    1671 @@gen_label133 DS    0H
0000129C E3F3 5000 0004          00000000   1672          LG    15,0(3,5)   ; __stderrp
000012A2 E3F0 D160 0024          00000160   1673          STG   15,352(0,13)
000012A8 41F0 6344               00000344   1674          LA    15,836(0,6)
000012AC E3F0 D168 0024          00000168   1675          STG   15,360(0,13)
000012B2 E340 D170 0024          00000170   1676          STG   4,368(0,13)
000012B8 E320 D178 0024          00000178   1677          STG   2,376(0,13)
000012BE 4110 D160               00000160   1678          LA    1,352(0,13)
000012C2 B904 00F8                          1679          LGR   15,8
000012C6                                    1680 @@gen_label134 DS    0H
000012C6 05EF                               1681          BALR  14,15
000012C8                                    1682 @@gen_label135 DS    0H
000012C8 E3F3 5000 0004          00000000   1683          LG    15,0(3,5)   ; __stderrp
000012CE E3F0 D160 0024          00000160   1684          STG   15,352(0,13)
000012D4 41F0 6076               00000076   1685          LA    15,118(0,6)
000012D8 E3F0 D168 0024          00000168   1686          STG   15,360(0,13)
000012DE 4110 D160               00000160   1687          LA    1,352(0,13)
000012E2 B904 00F8                          1688          LGR   15,8
000012E6                                    1689 @@gen_label136 DS    0H
000012E6 05EF                               1690          BALR  14,15
000012E8                                    1691 @@gen_label137 DS    0H
000012E8 E3F0 C162 0016          00001124   1692          LLGF  15,@lit_833_106 ; rd_unittest_assert_on_failure
000012EE 41FF 5000               00000000   1693          LA    15,0(15,5)
000012F2 9500 F000      00000000 00000000   1694          CLI   0(15),0
000012F6 4780 C370               00001332   1695          BE    @L130
000012FA B921 0024                          1696          CLGR  2,4
000012FE 4780 C370               00001332   1697          BE    @L130
00001302                                    1698 @L131    DS    0H
00001302 41F0 7046               00000046   1699          LA    15,70(0,7)
00001306 E3F0 D160 0024          00000160   1700          STG   15,352(0,13)
0000130C 41F0 601E               0000001E   1701          LA    15,30(0,6)
00001310 E3F0 D168 0024          00000168   1702          STG   15,360(0,13)
                                                                                                                           Page   37 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001316 E548 D170 005A          00000170   1703          MVGHI 368(13),90
0000131C 41F0 6378               00000378   1704          LA    15,888(0,6)
00001320 E3F0 D178 0024          00000178   1705          STG   15,376(0,13)
00001326 4110 D160               00000160   1706          LA    1,352(0,13)
0000132A E3F0 C166 0004          00001128   1707          LG    15,@lit_833_108 ; __assert
00001330                                    1708 @@gen_label140 DS    0H
00001330 05EF                               1709          BALR  14,15
00001332                                    1710 @@gen_label141 DS    0H
00001332                                    1711 @L132    DS    0H
00001332                                    1712 @L130    DS    0H
00001332 A7F9 0001               00000001   1713          LGHI  15,1        ; 1
00001336 47F0 C4F2               000014B4   1714          B     @ret_lab_833
0000133A                                    1715 @L129    DS    0H
                                            1716 * ***
                                            1717 * ***
                                            1718 * ***
                                            1719 * ***           r = rd_slice_offset(&slice);
0000133A 41F0 D0D8               000000D8   1720          LA    15,216(0,13)
0000133E E3F0 D160 0024          00000160   1721          STG   15,352(0,13)
00001344 4110 D160               00000160   1722          LA    1,352(0,13)
00001348 E3F0 C16E 0004          00001130   1723          LG    15,@lit_833_132 ; rd_slice_offset
0000134E                                    1724 @@gen_label142 DS    0H
0000134E 05EF                               1725          BALR  14,15
00001350                                    1726 @@gen_label143 DS    0H
00001350 B904 002F                          1727          LGR   2,15        ; r
                                            1728 * ***           do { if (!(r == sz)) { fprintf(__stderrp, "\033[31mRDU\
                                            1729 * T: FAIL: %s:%d: %s: " "assert failed: " "r == sz" ": ", "C:\\asgkafk\
                                            1730 * a\\librdkafka\\src\\rdvarint.c", 95, __FUNCTION__); fprintf(__stderr\
                                            1731 * p, "expected slice position to change to %" "zu" ", but got %" "zu",\
                                            1732 *  sz, r); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_\
                                            1733 * failure) ((r == sz) ? (void)0 : __assert(__func__, "C:\\asgkafka\\li\
                                            1734 * brdkafka\\src\\rdvarint.c", 95, "r == sz")); return 1; } } while (0)\
                                            1735 * ;
00001354                                    1736 @L133    DS    0H
00001354 B921 0024                          1737          CLGR  2,4
00001358 4780 C48A               0000144C   1738          BE    @L136
0000135C E330 C15E 0016          00001120   1739          LLGF  3,@lit_833_98 ; __stderrp
00001362 E3F3 5000 0004          00000000   1740          LG    15,0(3,5)   ; __stderrp
00001368 E3F0 D160 0024          00000160   1741          STG   15,352(0,13)
0000136E E360 C156 0004          00001118   1742          LG    6,@lit_833_99
00001374 41F0 630E               0000030E   1743          LA    15,782(0,6)
00001378 E3F0 D168 0024          00000168   1744          STG   15,360(0,13)
0000137E 41F0 601E               0000001E   1745          LA    15,30(0,6)
00001382 E3F0 D170 0024          00000170   1746          STG   15,368(0,13)
00001388 E548 D178 005F          00000178   1747          MVGHI 376(13),95
0000138E E370 C14E 0004          00001110   1748          LG    7,@lit_833_100
00001394 41F0 7046               00000046   1749          LA    15,70(0,7)
00001398 E3F0 D180 0024          00000180   1750          STG   15,384(0,13)
0000139E 4110 D160               00000160   1751          LA    1,352(0,13)
000013A2 E380 C146 0004          00001108   1752          LG    8,@lit_833_101 ; fprintf
000013A8 B904 00F8                          1753          LGR   15,8
000013AC                                    1754 @@gen_label145 DS    0H
                                                                                                                           Page   38 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000013AC 05EF                               1755          BALR  14,15
000013AE                                    1756 @@gen_label146 DS    0H
000013AE E3F3 5000 0004          00000000   1757          LG    15,0(3,5)   ; __stderrp
000013B4 E3F0 D160 0024          00000160   1758          STG   15,352(0,13)
000013BA 41F0 6380               00000380   1759          LA    15,896(0,6)
000013BE E3F0 D168 0024          00000168   1760          STG   15,360(0,13)
000013C4 E340 D170 0024          00000170   1761          STG   4,368(0,13)
000013CA E320 D178 0024          00000178   1762          STG   2,376(0,13)
000013D0 4110 D160               00000160   1763          LA    1,352(0,13)
000013D4 B904 00F8                          1764          LGR   15,8
000013D8                                    1765 @@gen_label147 DS    0H
000013D8 05EF                               1766          BALR  14,15
000013DA                                    1767 @@gen_label148 DS    0H
000013DA E3F3 5000 0004          00000000   1768          LG    15,0(3,5)   ; __stderrp
000013E0 E3F0 D160 0024          00000160   1769          STG   15,352(0,13)
000013E6 41F0 6076               00000076   1770          LA    15,118(0,6)
000013EA E3F0 D168 0024          00000168   1771          STG   15,360(0,13)
000013F0 4110 D160               00000160   1772          LA    1,352(0,13)
000013F4 B904 00F8                          1773          LGR   15,8
000013F8                                    1774 @@gen_label149 DS    0H
000013F8 05EF                               1775          BALR  14,15
000013FA                                    1776 @@gen_label150 DS    0H
000013FA E3F0 C162 0016          00001124   1777          LLGF  15,@lit_833_106 ; rd_unittest_assert_on_failure
00001400 41FF 5000               00000000   1778          LA    15,0(15,5)
00001404 9500 F000      00000000 00000000   1779          CLI   0(15),0
00001408 4780 C482               00001444   1780          BE    @L137
0000140C B921 0024                          1781          CLGR  2,4
00001410 4780 C482               00001444   1782          BE    @L137
00001414                                    1783 @L138    DS    0H
00001414 41F0 7046               00000046   1784          LA    15,70(0,7)
00001418 E3F0 D160 0024          00000160   1785          STG   15,352(0,13)
0000141E 41F0 601E               0000001E   1786          LA    15,30(0,6)
00001422 E3F0 D168 0024          00000168   1787          STG   15,360(0,13)
00001428 E548 D170 005F          00000170   1788          MVGHI 368(13),95
0000142E 41F0 6378               00000378   1789          LA    15,888(0,6)
00001432 E3F0 D178 0024          00000178   1790          STG   15,376(0,13)
00001438 4110 D160               00000160   1791          LA    1,352(0,13)
0000143C E3F0 C166 0004          00001128   1792          LG    15,@lit_833_108 ; __assert
00001442                                    1793 @@gen_label153 DS    0H
00001442 05EF                               1794          BALR  14,15
00001444                                    1795 @@gen_label154 DS    0H
00001444                                    1796 @L139    DS    0H
00001444                                    1797 @L137    DS    0H
00001444 A7F9 0001               00000001   1798          LGHI  15,1        ; 1
00001448 47F0 C4F2               000014B4   1799          B     @ret_lab_833
0000144C                                    1800 @L136    DS    0H
                                            1801 * ***
                                            1802 * ***
                                            1803 * ***
                                            1804 * ***
                                            1805 * ***
                                            1806 * ***           rd_buf_destroy(&b);
                                                                                                                           Page   39 
  Active Usings: @REGION_833_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000144C 41F0 D100               00000100   1807          LA    15,256(0,13)
00001450 E3F0 D160 0024          00000160   1808          STG   15,352(0,13)
00001456 4110 D160               00000160   1809          LA    1,352(0,13)
0000145A E3F0 C176 0004          00001138   1810          LG    15,@lit_833_144 ; rd_buf_destroy
00001460                                    1811 @@gen_label155 DS    0H
00001460 05EF                               1812          BALR  14,15
00001462                                    1813 @@gen_label156 DS    0H
                                            1814 * ***
                                            1815 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            1816 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdvarint.c", 103, __FUNC\
                                            1817 * TION__); return 0; } while (0);
00001462                                    1818 @L140    DS    0H
00001462 E3F0 C15E 0016          00001120   1819          LLGF  15,@lit_833_98 ; __stderrp
00001468 E3FF 5000 0004          00000000   1820          LG    15,0(15,5)  ; __stderrp
0000146E E3F0 D160 0024          00000160   1821          STG   15,352(0,13)
00001474 E3F0 C156 0004          00001118   1822          LG    15,@lit_833_99
0000147A 4110 F3B6               000003B6   1823          LA    1,950(0,15)
0000147E E310 D168 0024          00000168   1824          STG   1,360(0,13)
00001484 41F0 F01E               0000001E   1825          LA    15,30(0,15)
00001488 E3F0 D170 0024          00000170   1826          STG   15,368(0,13)
0000148E E548 D178 0067          00000178   1827          MVGHI 376(13),103
00001494 E3F0 C14E 0004          00001110   1828          LG    15,@lit_833_100
0000149A 41F0 F046               00000046   1829          LA    15,70(0,15)
0000149E E3F0 D180 0024          00000180   1830          STG   15,384(0,13)
000014A4 4110 D160               00000160   1831          LA    1,352(0,13)
000014A8 E3F0 C146 0004          00001108   1832          LG    15,@lit_833_101 ; fprintf
000014AE                                    1833 @@gen_label157 DS    0H
000014AE 05EF                               1834          BALR  14,15
000014B0                                    1835 @@gen_label158 DS    0H
000014B0 A7F9 0000               00000000   1836          LGHI  15,0        ; 0
                                            1837 * ***   }
000014B4                                    1838 @ret_lab_833 DS 0H
                                            1839 * * **** Start of Epilogue
                                            1840          DCCEPIL
000014B4                                    1841+         ds 0h                                                          01-DCCEP
                                            1842+* Epilog
000014B4 D707 D088 D088 00000088 00000088   1843+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000014BA E3D0 D080 0004          00000080   1844+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000014C0 E3C0 D090 0004          00000090   1845+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000014C6 E3B0 C018 0004          00000018   1846+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000014CC E3C0 B010 0021          00000010   1847+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000014D2 E3E0 D008 0004          00000008   1848+         lg  14,8(0,13)          load up return address                 01-DCCEP
000014D8 EB1C D020 0004          00000020   1849+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000014DE 078E                               1850+         bcr 8,14                if same dsab, just return              01-DCCEP
000014E0 E3F0 D010 0024          00000010   1851+         stg 15,16(0,13)         save return code                       01-DCCEP
000014E6 E300 D018 0024          00000018   1852+         stg 0,24(0,13)          save more return code                  01-DCCEP
000014EC E3F0 D090 0004          00000090   1853+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000014F2 E3F0 F018 0004          00000018   1854+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000014F8 47F0 F040               00000040   1855+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1856+* End of Epilog
                                            1857 * * **** End of Epilogue
                                            1858          DROP  12
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1859 *
                                            1860 *   DSECT for automatic variables in "do_test_rd_uvarint_enc_i64"
                                            1861 *      (FUNCTION #833)
                                            1862 *
00000000                00000000 00000160   1863 @AUTO#do_test_rd_uvarint_enc_i64 DSECT
00000000                                    1864          DS    XL168
000000A8                                    1865 do_test_rd_uvarint_enc_i64#ret_num#0 DS 8XL1 ; ret_num
000000B0                000000B0 000000A8   1866          ORG   @AUTO#do_test_rd_uvarint_enc_i64+168
000000A8                                    1867 do_test_rd_uvarint_enc_i64#ir#0 DS 1F ; ir
000000AC                000000AC 000000A8   1868          ORG   @AUTO#do_test_rd_uvarint_enc_i64+168
000000A8                                    1869 do_test_rd_uvarint_enc_i64#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8   1870          ORG   @AUTO#do_test_rd_uvarint_enc_i64+168
000000A8                                    1871 do_test_rd_uvarint_enc_i64#sz#0 DS 8XL1 ; sz
000000B0                000000B0 000000B0   1872          ORG   @AUTO#do_test_rd_uvarint_enc_i64+176
000000B0                                    1873 do_test_rd_uvarint_enc_i64#bad_slice#0 DS 40XL1 ; bad_slice
000000D8                000000D8 000000D8   1874          ORG   @AUTO#do_test_rd_uvarint_enc_i64+216
000000D8                                    1875 do_test_rd_uvarint_enc_i64#slice#0 DS 40XL1 ; slice
00000100                00000100 00000100   1876          ORG   @AUTO#do_test_rd_uvarint_enc_i64+256
00000100                                    1877 do_test_rd_uvarint_enc_i64#b#0 DS 80XL1 ; b
00000150                00000150 00000150   1878          ORG   @AUTO#do_test_rd_uvarint_enc_i64+336
00000150                                    1879 do_test_rd_uvarint_enc_i64#buf#0 DS 16XL1 ; buf
                                            1880 *
000014FC                00000000 00001820   1881 @CODE    CSECT
                                            1882 *
                                            1883 *
                                            1884 *
                                            1885 * ....... start of unittest_rdvarint
                                            1886 unittest_rdvarint ALIAS X'A49589A3A385A2A36D9984A581998995A3'
000014FC                                    1887 @LNAME831 DS   0H
000014FC 00000011                           1888          DC    X'00000011'
00001500 A49589A3A385A2A3                   1889          DC    C'unittest_rdvarint'
00001511 00                                 1890          DC    X'00'
                                            1891 unittest_rdvarint DCCPRLG CINDEX=831,BASER=12,FRAME=232,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME831
                                            1892          macro
                                            1893          dccextrn &m
                                            1894          gblc    &$dccext(1000)
                                            1895          gbla    &$dccexti
                                            1896          lcla    &i
                                            1897 &$dccext(&$dccexti+1) setc    '&m'
                                            1898 &i       seta    1
                                            1899 .loop    aif    (&i gt &$dccexti).around
                                            1900          aif    ('&$dccext(&i)' eq '&m').getout
                                            1901 &i       seta    &i+1
                                            1902          ago     .loop
                                            1903 .around  anop
                                            1904 &$dccexti seta &$dccexti+1
                                            1905          extrn  &m
                                            1906 .getout  anop
                                            1907          mend
00001518                                    1908+$eye0024    ds    0d                                                    02-DCCCA
00001518 C4C3C3                             1909+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   41 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000151B 01                                 1910+         dc xl1'01' format one                                          02-DCCCA
0000151C 00000000                           1911+         dc a(0)                                                        02-DCCCA
00001520 000000000000158A                   1912+         dc ad(@PER_831)                                                02-DCCCA
00001528 00000000000000E8                   1913+         dc ad(232)                                                     02-DCCCA
00001530 0000000000000000                   1914+         dc ad(0)                                                       02-DCCCA
00001538 0000000000001000                   1915+         dc ad(4096)                                                    02-DCCCA
00001540 20                                 1916+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001541 03                                 1917+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001542 03                                 1918+         dc al1(3)                                                      02-DCCCA
00001543 08                                 1919+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001544 00                                 1920+         dc bl.8'00000000'                                              02-DCCCA
00001545 000000                             1921+         dc al3(0)                                                      02-DCCCA
00001548 00000000000014FC                   1922+         dc ad(@LNAME831)                                               02-DCCCA
00001550                                    1923+         ds 0d                                                          02-DCCCA
00001550 0000000000001518                   1924+         dc ad($eye0024)                                                02-DCCCA
00001558 0000000000000000                   1925+         dc ad(0)                                                       02-DCCCA
00001560                                    1926+         ds    0d                                                       01-DCCPR
                                            1927+         entry unittest_rdvarint                                        01-DCCPR
00001560                                    1928+unittest_rdvarint ds 0d                                                 01-DCCPR
00001560                                    1929+@REGION_831_1 ds 0h                                                     01-DCCPR
00001560 EBEC D008 0024          00000008   1930+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001566 E3E0 D088 0004          00000088   1931+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000156C E3C0 D090 0004          00000090   1932+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001572 B904 002E                          1933+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001576 E3B0 C018 0004          00000018   1934+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000157C A7EB 00E8               000000E8   1935+         aghi  14,232              increase by frame size               01-DCCPR
00001580 E3E0 C020 0021          00000020   1936+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001586 4720 B020               00000020   1937+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000158A                                    1938+@PER_831 ds    0h                                                       01-DCCPR
0000158A EBDE 2080 0024          00000080   1939+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001590 E3C0 2090 0024          00000090   1940+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001596 B904 00D2                          1941+         lgr   13,2                set real frame pointer               01-DCCPR
0000159A B904 00CF                          1942+         lgr   12,15               set base reg                         01-DCCPR
                        00001560            1943+         using @REGION_831_1,12                                         01-DCCPR
                                            1944 * ******* End of Prologue
                                            1945 * *
                                            1946 * ***           int fails = 0;
0000159E A728 0000               00000000   1947          LHI   2,0         ; 0
                                            1948 * ***
                                            1949 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            1950 * rdkafka\\src\\rdvarint.c", 110, 0,
                                            1951 * ***                                               (const char[]){ 0 \
                                            1952 * }, 1);
                                            1953 * setting 1 bytes to 0x00
000015A2 D700 D0BE D0BE 000000BE 000000BE   1954          XC    190(1,13),190(13)
000015A8 E330 C2A8 0004          00001808   1955          LG    3,@lit_831_159
000015AE 41F0 301E               0000001E   1956          LA    15,30(0,3)
000015B2 E3F0 D0C0 0024          000000C0   1957          STG   15,192(0,13)
000015B8 E548 D0C8 006E          000000C8   1958          MVGHI 200(13),110
000015BE D707 D0D0 D0D0 000000D0 000000D0   1959          XC    208(8,13),208(13)
000015C4 41F0 D0BE               000000BE   1960          LA    15,190(0,13)
000015C8 E3F0 D0D8 0024          000000D8   1961          STG   15,216(0,13)
                                                                                                                           Page   42 
  Active Usings: @REGION_831_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000015CE E548 D0E0 0001          000000E0   1962          MVGHI 224(13),1
000015D4 4110 D0C0               000000C0   1963          LA    1,192(0,13)
000015D8 E340 C2A0 0004          00001800   1964          LG    4,@lit_831_160 ; do_test_rd_uvarint_enc_i64
000015DE B904 00F4                          1965          LGR   15,4
000015E2                                    1966 @@gen_label159 DS    0H
000015E2 05EF                               1967          BALR  14,15
000015E4                                    1968 @@gen_label160 DS    0H
000015E4 1A2F                               1969          AR    2,15
                                            1970 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            1971 * rdkafka\\src\\rdvarint.c", 112, 1,
                                            1972 * ***                                               (const char[]){ 0x\
                                            1973 * 2 }, 1);
000015E6 9202 D0BD      000000BD 00000002   1974          MVI   189(13),2
000015EA 41F0 301E               0000001E   1975          LA    15,30(0,3)
000015EE E3F0 D0C0 0024          000000C0   1976          STG   15,192(0,13)
000015F4 E548 D0C8 0070          000000C8   1977          MVGHI 200(13),112
000015FA E548 D0D0 0001          000000D0   1978          MVGHI 208(13),1
00001600 41F0 D0BD               000000BD   1979          LA    15,189(0,13)
00001604 E3F0 D0D8 0024          000000D8   1980          STG   15,216(0,13)
0000160A E548 D0E0 0001          000000E0   1981          MVGHI 224(13),1
00001610 4110 D0C0               000000C0   1982          LA    1,192(0,13)
00001614 B904 00F4                          1983          LGR   15,4
00001618                                    1984 @@gen_label161 DS    0H
00001618 05EF                               1985          BALR  14,15
0000161A                                    1986 @@gen_label162 DS    0H
0000161A 1A2F                               1987          AR    2,15
                                            1988 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            1989 * rdkafka\\src\\rdvarint.c", 114, -1,
                                            1990 * ***                                               (const char[]){ 0x\
                                            1991 * 1 }, 1);
0000161C 9201 D0BC      000000BC 00000001   1992          MVI   188(13),1
00001620 41F0 301E               0000001E   1993          LA    15,30(0,3)
00001624 E3F0 D0C0 0024          000000C0   1994          STG   15,192(0,13)
0000162A E548 D0C8 0072          000000C8   1995          MVGHI 200(13),114
00001630 E548 D0D0 FFFF          000000D0   1996          MVGHI 208(13),-1
00001636 41F0 D0BC               000000BC   1997          LA    15,188(0,13)
0000163A E3F0 D0D8 0024          000000D8   1998          STG   15,216(0,13)
00001640 E548 D0E0 0001          000000E0   1999          MVGHI 224(13),1
00001646 4110 D0C0               000000C0   2000          LA    1,192(0,13)
0000164A B904 00F4                          2001          LGR   15,4
0000164E                                    2002 @@gen_label163 DS    0H
0000164E 05EF                               2003          BALR  14,15
00001650                                    2004 @@gen_label164 DS    0H
00001650 1A2F                               2005          AR    2,15
                                            2006 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            2007 * rdkafka\\src\\rdvarint.c", 116, 23,
                                            2008 * ***                                               (const char[]){ 0x\
                                            2009 * 2e }, 1);
00001652 922E D0BB      000000BB 0000002E   2010          MVI   187(13),46
00001656 41F0 301E               0000001E   2011          LA    15,30(0,3)
0000165A E3F0 D0C0 0024          000000C0   2012          STG   15,192(0,13)
00001660 E548 D0C8 0074          000000C8   2013          MVGHI 200(13),116
                                                                                                                           Page   43 
  Active Usings: @REGION_831_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001666 E548 D0D0 0017          000000D0   2014          MVGHI 208(13),23
0000166C 41F0 D0BB               000000BB   2015          LA    15,187(0,13)
00001670 E3F0 D0D8 0024          000000D8   2016          STG   15,216(0,13)
00001676 E548 D0E0 0001          000000E0   2017          MVGHI 224(13),1
0000167C 4110 D0C0               000000C0   2018          LA    1,192(0,13)
00001680 B904 00F4                          2019          LGR   15,4
00001684                                    2020 @@gen_label165 DS    0H
00001684 05EF                               2021          BALR  14,15
00001686                                    2022 @@gen_label166 DS    0H
00001686 1A2F                               2023          AR    2,15
                                            2024 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            2025 * rdkafka\\src\\rdvarint.c", 118, -23,
                                            2026 * ***                                               (const char[]){ 0x\
                                            2027 * 2d }, 1);
00001688 922D D0BA      000000BA 0000002D   2028          MVI   186(13),45
0000168C 41F0 301E               0000001E   2029          LA    15,30(0,3)
00001690 E3F0 D0C0 0024          000000C0   2030          STG   15,192(0,13)
00001696 E548 D0C8 0076          000000C8   2031          MVGHI 200(13),118
0000169C E548 D0D0 FFE9          000000D0   2032          MVGHI 208(13),-23
000016A2 41F0 D0BA               000000BA   2033          LA    15,186(0,13)
000016A6 E3F0 D0D8 0024          000000D8   2034          STG   15,216(0,13)
000016AC E548 D0E0 0001          000000E0   2035          MVGHI 224(13),1
000016B2 4110 D0C0               000000C0   2036          LA    1,192(0,13)
000016B6 B904 00F4                          2037          LGR   15,4
000016BA                                    2038 @@gen_label167 DS    0H
000016BA 05EF                               2039          BALR  14,15
000016BC                                    2040 @@gen_label168 DS    0H
000016BC 1A2F                               2041          AR    2,15
                                            2042 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            2043 * rdkafka\\src\\rdvarint.c", 120, 253,
                                            2044 * ***                                               (const char[]){ 0x\
                                            2045 * fa,  3 }, 2);
000016BE 92FA D0B8      000000B8 000000FA   2046          MVI   184(13),250
000016C2 9203 D0B9      000000B9 00000003   2047          MVI   185(13),3
000016C6 41F0 301E               0000001E   2048          LA    15,30(0,3)
000016CA E3F0 D0C0 0024          000000C0   2049          STG   15,192(0,13)
000016D0 E548 D0C8 0078          000000C8   2050          MVGHI 200(13),120
000016D6 E548 D0D0 00FD          000000D0   2051          MVGHI 208(13),253
000016DC 41F0 D0B8               000000B8   2052          LA    15,184(0,13)
000016E0 E3F0 D0D8 0024          000000D8   2053          STG   15,216(0,13)
000016E6 E548 D0E0 0002          000000E0   2054          MVGHI 224(13),2
000016EC 4110 D0C0               000000C0   2055          LA    1,192(0,13)
000016F0 B904 00F4                          2056          LGR   15,4
000016F4                                    2057 @@gen_label169 DS    0H
000016F4 05EF                               2058          BALR  14,15
000016F6                                    2059 @@gen_label170 DS    0H
000016F6 1A2F                               2060          AR    2,15
                                            2061 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            2062 * rdkafka\\src\\rdvarint.c", 122,
                                            2063 * ***                                               1234567890101112,
                                            2064 * ***                                               (const char[]){ 0x\
                                            2065 * f0,
                                                                                                                           Page   44 
  Active Usings: @REGION_831_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000016F8 92F0 D0B0      000000B0 000000F0   2066          MVI   176(13),240
                                            2067 * ***                                                               0x\
                                            2068 * 8d,
000016FC 928D D0B1      000000B1 0000008D   2069          MVI   177(13),141
                                            2070 * ***                                                               0x\
                                            2071 * d3,
00001700 92D3 D0B2      000000B2 000000D3   2072          MVI   178(13),211
                                            2073 * ***                                                               0x\
                                            2074 * c8,
00001704 92C8 D0B3      000000B3 000000C8   2075          MVI   179(13),200
                                            2076 * ***                                                               0x\
                                            2077 * a7,
00001708 92A7 D0B4      000000B4 000000A7   2078          MVI   180(13),167
                                            2079 * ***                                                               0x\
                                            2080 * b5,
0000170C 92B5 D0B5      000000B5 000000B5   2081          MVI   181(13),181
                                            2082 * ***                                                               0x\
                                            2083 * b1,
00001710 92B1 D0B6      000000B6 000000B1   2084          MVI   182(13),177
                                            2085 * ***                                                               0x\
                                            2086 * 04 }, 8);
00001714 9204 D0B7      000000B7 00000004   2087          MVI   183(13),4
00001718 41F0 301E               0000001E   2088          LA    15,30(0,3)
0000171C E3F0 D0C0 0024          000000C0   2089          STG   15,192(0,13)
00001722 E548 D0C8 007A          000000C8   2090          MVGHI 200(13),122
00001728 E3F0 C2B0 0004          00001810   2091          LG    15,@lit_831_167 ; 1234567890101112
0000172E E3F0 D0D0 0024          000000D0   2092          STG   15,208(0,13)
00001734 41F0 D0B0               000000B0   2093          LA    15,176(0,13)
00001738 E3F0 D0D8 0024          000000D8   2094          STG   15,216(0,13)
0000173E E548 D0E0 0008          000000E0   2095          MVGHI 224(13),8
00001744 4110 D0C0               000000C0   2096          LA    1,192(0,13)
00001748 B904 00F4                          2097          LGR   15,4
0000174C                                    2098 @@gen_label171 DS    0H
0000174C 05EF                               2099          BALR  14,15
0000174E                                    2100 @@gen_label172 DS    0H
0000174E 1A2F                               2101          AR    2,15
                                            2102 * ***           fails += do_test_rd_uvarint_enc_i64("C:\\asgkafka\\lib\
                                            2103 * rdkafka\\src\\rdvarint.c", 132,
                                            2104 * ***                                               -1234567890101112,
                                            2105 * ***                                               (const char[]){ 0x\
                                            2106 * ef,
00001750 92EF D0A8      000000A8 000000EF   2107          MVI   168(13),239
                                            2108 * ***                                                               0x\
                                            2109 * 8d,
00001754 928D D0A9      000000A9 0000008D   2110          MVI   169(13),141
                                            2111 * ***                                                               0x\
                                            2112 * d3,
00001758 92D3 D0AA      000000AA 000000D3   2113          MVI   170(13),211
                                            2114 * ***                                                               0x\
                                            2115 * c8,
0000175C 92C8 D0AB      000000AB 000000C8   2116          MVI   171(13),200
                                            2117 * ***                                                               0x\
                                                                                                                           Page   45 
  Active Usings: @REGION_831_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2118 * a7,
00001760 92A7 D0AC      000000AC 000000A7   2119          MVI   172(13),167
                                            2120 * ***                                                               0x\
                                            2121 * b5,
00001764 92B5 D0AD      000000AD 000000B5   2122          MVI   173(13),181
                                            2123 * ***                                                               0x\
                                            2124 * b1,
00001768 92B1 D0AE      000000AE 000000B1   2125          MVI   174(13),177
                                            2126 * ***                                                               0x\
                                            2127 * 04 }, 8);
0000176C 9204 D0AF      000000AF 00000004   2128          MVI   175(13),4
00001770 41F0 301E               0000001E   2129          LA    15,30(0,3)
00001774 E3F0 D0C0 0024          000000C0   2130          STG   15,192(0,13)
0000177A E548 D0C8 0084          000000C8   2131          MVGHI 200(13),132
00001780 E3F0 C2B8 0004          00001818   2132          LG    15,@lit_831_170 ; -1234567890101112
00001786 E3F0 D0D0 0024          000000D0   2133          STG   15,208(0,13)
0000178C 41F0 D0A8               000000A8   2134          LA    15,168(0,13)
00001790 E3F0 D0D8 0024          000000D8   2135          STG   15,216(0,13)
00001796 E548 D0E0 0008          000000E0   2136          MVGHI 224(13),8
0000179C 4110 D0C0               000000C0   2137          LA    1,192(0,13)
000017A0 B904 00F4                          2138          LGR   15,4
000017A4                                    2139 @@gen_label173 DS    0H
000017A4 05EF                               2140          BALR  14,15
000017A6                                    2141 @@gen_label174 DS    0H
000017A6 1A2F                               2142          AR    2,15
                                            2143 * ***
                                            2144 * ***           return fails;
000017A8 B914 00F2                          2145          LGFR  15,2
                                            2146 * ***   }
                                            2147 * * **** Start of Epilogue
                                            2148          DCCEPIL
000017AC                                    2149+         ds 0h                                                          01-DCCEP
                                            2150+* Epilog
000017AC D707 D088 D088 00000088 00000088   2151+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017B2 E3D0 D080 0004          00000080   2152+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017B8 E3C0 D090 0004          00000090   2153+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000017BE E3B0 C018 0004          00000018   2154+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000017C4 E3C0 B010 0021          00000010   2155+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000017CA E3E0 D008 0004          00000008   2156+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017D0 EB1C D020 0004          00000020   2157+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017D6 078E                               2158+         bcr 8,14                if same dsab, just return              01-DCCEP
000017D8 E3F0 D010 0024          00000010   2159+         stg 15,16(0,13)         save return code                       01-DCCEP
000017DE E300 D018 0024          00000018   2160+         stg 0,24(0,13)          save more return code                  01-DCCEP
000017E4 E3F0 D090 0004          00000090   2161+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017EA E3F0 F018 0004          00000018   2162+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017F0 47F0 F040               00000040   2163+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2164+* End of Epilog
                                            2165 * * **** End of Epilogue
000017F8                                    2166          DS    0D
000017F8 000000E8                           2167 @FRAMESIZE_831 DC F'232'
000017FC 00000000
00001800 0000000000000718                   2168 @lit_831_160 DC AD(do_test_rd_uvarint_enc_i64)
                                                                                                                           Page   46 
  Active Usings: @REGION_831_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001808 0000000000001882                   2169 @lit_831_159 DC AD(@strings@)
00001810 000462D53C8A6378                   2170 @lit_831_167 DC FD'1234567890101112' 0x000462d53c8a6378
00001818 FFFB9D2AC3759C88                   2171 @lit_831_170 DC FD'-1234567890101112' 0xfffb9d2ac3759c88
                                            2172          DROP  12
                                            2173 *
                                            2174 *   DSECT for automatic variables in "unittest_rdvarint"
                                            2175 *      (FUNCTION #831)
                                            2176 *
00000000                00000000 000000BF   2177 @AUTO#unittest_rdvarint DSECT
00000000                                    2178          DS    XL168
000000A8                                    2179 unittest_rdvarint#__cl7#0 DS 8XL1 ; __cl7
000000B0                000000B0 000000A8   2180          ORG   @AUTO#unittest_rdvarint+168
000000A8                                    2181 unittest_rdvarint#fails#0 DS 1F ; fails
000000AC                000000AC 000000B0   2182          ORG   @AUTO#unittest_rdvarint+176
000000B0                                    2183 unittest_rdvarint#__cl6#0 DS 8XL1 ; __cl6
000000B8                000000B8 000000B8   2184          ORG   @AUTO#unittest_rdvarint+184
000000B8                                    2185 unittest_rdvarint#__cl5#0 DS 2XL1 ; __cl5
000000BA                000000BA 000000BA   2186          ORG   @AUTO#unittest_rdvarint+186
000000BA                                    2187 unittest_rdvarint#__cl4#0 DS 1XL1 ; __cl4
000000BB                000000BB 000000BB   2188          ORG   @AUTO#unittest_rdvarint+187
000000BB                                    2189 unittest_rdvarint#__cl3#0 DS 1XL1 ; __cl3
000000BC                000000BC 000000BC   2190          ORG   @AUTO#unittest_rdvarint+188
000000BC                                    2191 unittest_rdvarint#__cl2#0 DS 1XL1 ; __cl2
000000BD                000000BD 000000BD   2192          ORG   @AUTO#unittest_rdvarint+189
000000BD                                    2193 unittest_rdvarint#__cl1#0 DS 1XL1 ; __cl1
000000BE                000000BE 000000BE   2194          ORG   @AUTO#unittest_rdvarint+190
000000BE                                    2195 unittest_rdvarint#__cl0#0 DS 1XL1 ; __cl0
                                            2196 *
00001820                00000000 00001820   2197 @CODE    CSECT
                                            2198 @@STATIC ALIAS X'7C9984A581998995A350'
                                            2199 @@STATIC DXD   64D
                                            2200 *
                                            2201 *  Non-Re-Entrant Data Section
                                            2202 *
00001820                00001820 00000438   2203 @DATA    CSECT
                                            2204 @DATA    RMODE ANY
                                            2205 @DATA    AMODE ANY
00001820 99846D8381939396                   2206 @@T349   DC    X'99846D838193939683'               rd.calloc
00001829 00                                 2207          DC    1X'00'
0000182A 99846D9481939396                   2208 @@T34D   DC    X'99846D948193939683'               rd.malloc
00001833 00                                 2209          DC    1X'00'
00001834 99846D9985819393                   2210 @@T352   DC    X'99846D99858193939683'             rd.realloc
0000183E 0000                               2211          DC    2X'00'
00001840 99846DA2A39984A4                   2212 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00001849 00                                 2213          DC    1X'00'
0000184A 99846DA2A3999584                   2214 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00001854 0000                               2215          DC    2X'00'
00001856 99846D9985868395                   2216 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00001864 0000                               2217          DC    2X'00'
00001866 84966DA385A2A36D                   2218 @@T3E6   DC    X'84966DA385A2A36D99846DA4A5819989' do.test.rd.uvari
00001876 95A36D8595836D89                   2219          DC    X'95A36D8595836D89F6F4'             nt.enc.i64
00001880 00                                 2220          DC    1X'00'
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001882                                    2221 @strings@ DS   0H
00001882 1BADF3F194D9C4E4                   2222          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
00001892 406CA27A6C847A40                   2223          DC    X'406CA27A6C847A406CA27A400000C37A' ..s..d...s....C.
000018A2 E081A28792818692                   2224          DC    X'E081A2879281869281E0938982998492' .asgkafka.librdk
000018B2 81869281E0A29983                   2225          DC    X'81869281E0A29983E09984A581998995' afka.src.rdvarin
000018C2 A34B830089F6F440                   2226          DC    X'A34B830089F6F4408595839684854096' t.c.i64.encode.o
000018D2 86406C9393847A40                   2227          DC    X'86406C9393847A4085A7978583A38584' f..lld..expected
000018E2 40A289A985406CA9                   2228          DC    X'40A289A985406CA9A4404D8796A3406C' .size..zu..got..
000018F2 A9A45D1500001BAD                   2229          DC    X'A9A45D1500001BADF0941500A49589A3' zu......0m..unit
00001902 A385A2A340868189                   2230          DC    X'A385A2A34086818993A4998500005A5C' test.failure....
00001912 7FA49589A3A385A2                   2231          DC    X'7FA49589A3A385A2A34086818993A499' .unittest.failur
00001922 857F00001BADF3F1                   2232          DC    X'857F00001BADF3F194D9C4E4E37A40C6' e.....31mRDUT..F
00001932 C1C9D37A406CA27A                   2233          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
00001942 81A2A28599A34086                   2234          DC    X'81A2A28599A3408681899385847A405A' assert.failed...
00001952 D9C46DE4E5C1D9C9                   2235          DC    X'D9C46DE4E5C1D9C9D5E36DC4C5C36DC6' RD.UVARINT.DEC.F
00001962 C1C9D3C5C44D995D                   2236          DC    X'C1C9D3C5C44D995D7A400000A5819989' AILED.r.....vari
00001972 95A3408485839684                   2237          DC    X'95A34084858396848540868189938584' nt.decode.failed
00001982 7A406CA9A4005A4D                   2238          DC    X'7A406CA9A4005A4D4D99407E7E40F05D' ...zu....r....0.
00001992 404F4F404D99406E                   2239          DC    X'404F4F404D99406E40F0A78686868686' .....r...0xfffff
000019A2 8686868686868686                   2240          DC    X'8686868686868686868686E4D3D35D5D' fffffffffffULL..
000019B2 00001BADF3F194D9                   2241          DC    X'00001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
000019C2 D37A406CA27A6C84                   2242          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
000019D2 A28599A340868189                   2243          DC    X'A28599A3408681899385847A409985A3' sert.failed..ret
000019E2 6D95A494407E7E40                   2244          DC    X'6D95A494407E7E4095A4947A4000A581' .num....num...va
000019F2 998995A340848583                   2245          DC    X'998995A340848583968485409985A3A4' rint.decode.retu
00001A02 9995858440A69996                   2246          DC    X'9995858440A6999695874095A4948285' rned.wrong.numbe
00001A12 997A406C93938440                   2247          DC    X'997A406C939384405A7E406C93938400' r...lld.....lld.
00001A22 9985A36D95A49440                   2248          DC    X'9985A36D95A494407E7E4095A4940000' ret.num....num..
00001A32 1BADF3F194D9C4E4                   2249          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
00001A42 406CA27A6C847A40                   2250          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
00001A52 99A3408681899385                   2251          DC    X'99A3408681899385847A4089997A4000' rt.failed..ir...
00001A62 9581999996A66D83                   2252          DC    X'9581999996A66D839697A84086818993' narrow.copy.fail
00001A72 8584000089990000                   2253          DC    X'85840000899900001BADF3F194D9C4E4' ed..ir....31mRDU
00001A82 E37A40C6C1C9D37A                   2254          DC    X'E37A40C6C1C9D37A406CA27A6C847A40' T..FAIL...s..d..
00001A92 6CA27A4081A2A285                   2255          DC    X'6CA27A4081A2A28599A3408681899385' .s..assert.faile
00001AA2 847A40D9C46DE4E5                   2256          DC    X'847A40D9C46DE4E5C1D9C9D5E36DC4C5' d..RD.UVARINT.DE
00001AB2 C36DC6C1C9D3C5C4                   2257          DC    X'C36DC6C1C9D3C5C44D995D7A4000A581' C.FAILED.r....va
00001AC2 998995A340848583                   2258          DC    X'998995A3408485839684854086818993' rint.decode.fail
00001AD2 858440A28896A493                   2259          DC    X'858440A28896A49384408881A5854086' ed.should.have.f
00001AE2 81899385846B4099                   2260          DC    X'81899385846B409985A3A49995858440' ailed..returned.
00001AF2 6CA9A4004D4D9940                   2261          DC    X'6CA9A4004D4D99407E7E40F05D404F4F' .zu...r....0....
00001B02 404D99406E40F0A7                   2262          DC    X'404D99406E40F0A78686868686868686' ..r...0xffffffff
00001B12 8686868686868686                   2263          DC    X'8686868686868686E4D3D35D5D001BAD' ffffffffULL.....
00001B22 F3F194D9C4E4E37A                   2264          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
00001B32 A27A6C847A406CA2                   2265          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
00001B42 408681899385847A                   2266          DC    X'408681899385847A4099407E7E40F07A' .failed..r....0.
00001B52 400085A7978583A3                   2267          DC    X'400085A7978583A3858440A293898385' ..expected.slice
00001B62 409796A289A38996                   2268          DC    X'409796A289A389969540A396409596A3' .position.to.not
00001B72 408388819587856B                   2269          DC    X'408388819587856B4082A4A3408796A3' .change..but.got
00001B82 406CA9A400009940                   2270          DC    X'406CA9A4000099407E7E40F000001BAD' ..zu..r....0....
00001B92 F3F194D9C4E4E37A                   2271          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
00001BA2 A27A6C847A406CA2                   2272          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001BB2 408681899385847A                   2273          DC    X'408681899385847A4099407E7E40A2A9' .failed..r....sz
00001BC2 7A40000085A79785                   2274          DC    X'7A40000085A7978583A3858440A58199' ....expected.var
00001BD2 8995A34084858396                   2275          DC    X'8995A3408485839684859940A3964099' int.decoder.to.r
00001BE2 858184406CA9A440                   2276          DC    X'858184406CA9A44082A8A385A26B4095' ead..zu.bytes..n
00001BF2 96A3406CA9A40000                   2277          DC    X'96A3406CA9A4000099407E7E40A2A900' ot..zu..r....sz.
00001C02 85A7978583A38584                   2278          DC    X'85A7978583A3858440A2938983854097' expected.slice.p
00001C12 96A289A389969540                   2279          DC    X'96A289A389969540A396408388819587' osition.to.chang
00001C22 8540A396406CA9A4                   2280          DC    X'8540A396406CA9A46B4082A4A3408796' e.to..zu..but.go
00001C32 A3406CA9A4001BAD                   2281          DC    X'A3406CA9A4001BADF3F294D9C4E4E37A' t..zu...32mRDUT.
00001C42 40D7C1E2E27A406C                   2282          DC    X'40D7C1E2E27A406CA27A6C847A406CA2' .PASS...s..d...s
00001C52 1BADF0941500                       2283          DC    X'1BADF0941500'                     ..0m..
                                            2284 @E__stderrp ALIAS C'@@STDERP'
                                            2285          EXTRN @E__stderrp
                                            2286 @Erd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A28*
                                                                599A36D96956D86818993A49985'
                                            2287          EXTRN @Erd_unittest_assert_on_failure
                                            2288 *
                                            2289 *
                                            2290 *   Re-entrant Data Initialization Section
                                            2291 *
                                            2292 @@INIT@  ALIAS C'rdvarint:'
00001C58                00001C58 00000230   2293 @@INIT@  CSECT
                                            2294 @@INIT@  AMODE ANY
                                            2295 @@INIT@  RMODE ANY
00001C58 05                                 2296          DC    XL1'5'
00001C59 000000                             2297          DC    AL3(0)
00001C5C 00000120                           2298          DC    AL4(288)
00001C60 00000000                           2299          DC    4X'00'
00001C64 00000000                           2300          DC    Q(@@STATIC)
00001C68 00000000                           2301          DC    X'00000000'
00001C6C 00000001                           2302          DC    X'00000001'
00001C70 00000000                           2303          DC    X'00000000'
00001C74 000000FF                           2304          DC    X'000000FF'
00001C78 0102039C09867F97                   2305          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00001C88 1112139D85088718                   2306          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00001C98 818283840A171B88                   2307          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00001CA8 9116939495960498                   2308          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00001CB8 A0E2E4E0E1E3E5E7                   2309          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00001CC8 E9EAEBE8EDEEEFEC                   2310          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00001CD8 2FC2C4C0C1C3C5C7                   2311          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00001CE8 C9CACBC8CDCECFCC                   2312          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00001CF8 6162636465666768                   2313          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00001D08 6A6B6C6D6E6F7071                   2314          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00001D18 7E73747576777879                   2315          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00001D28 A3A5B7A9A7B6BCBD                   2316          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00001D38 4142434445464748                   2317          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00001D48 4A4B4C4D4E4F5051                   2318          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00001D58 F753545556575859                   2319          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00001D68 3132333435363738                   2320          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            2321 *
00001D78 05                                 2322          DC    XL1'5'
00001D79 000000                             2323          DC    AL3(0)
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001D7C 000001E0                           2324          DC    AL4(480)
00001D80 00000000                           2325          DC    4X'00'
00001D84 00000000                           2326          DC    Q(@@STATIC)
00001D88 00000000                           2327          DC    X'00000000'
00001D8C 00000101                           2328          DC    X'00000101'
00001D90 00000000                           2329          DC    X'00000000'
00001D94 000000A0                           2330          DC    X'000000A0'
00001D98 010203372D2E2F16                   2331          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00001DA8 1112133C3D322618                   2332          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00001DB8 5A7F7B5B6C507D4D                   2333          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00001DC8 F1F2F3F4F5F6F7F8                   2334          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00001DD8 C1C2C3C4C5C6C7C8                   2335          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00001DE8 D8D9E2E3E4E5E6E7                   2336          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00001DF8 8182838485868788                   2337          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00001E08 9899A2A3A4A5A6A7                   2338          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00001E18 2122232425061728                   2339          DC    X'2122232425061728292A2B2C090A1B30' ................
00001E28 311A333435360838                   2340          DC    X'311A333435360838393A3B04143EFF80' ................
                                            2341 *
00001E38 05                                 2342          DC    XL1'5'
00001E39 000000                             2343          DC    AL3(0)
00001E3C 00000208                           2344          DC    AL4(520)
00001E40 00000000                           2345          DC    4X'00'
00001E44 00000000                           2346          DC    Q(@@STATIC)
00001E48 00000000                           2347          DC    X'00000000'
00001E4C 000001C0                           2348          DC    X'000001C0'
00001E50 00000000                           2349          DC    X'00000000'
00001E54 00000001                           2350          DC    X'00000001'
00001E58 8A40404040404040                   2351          DC    X'8A40404040404040'                 ........
                                            2352 *
00001E60 05                                 2353          DC    XL1'5'
00001E61 000000                             2354          DC    AL3(0)
00001E64 00000000                           2355          DC    AL4(0)
00001E68 00000000                           2356          DC    4X'00'
00001E6C 00000000                           2357          DC    Q(@@STATIC)
00001E70 00000000                           2358          DC    X'00000000'
00001E74 000001E0                           2359          DC    X'000001E0'
00001E78 00000000                           2360          DC    X'00000000'
00001E7C 00000001                           2361          DC    X'00000001'
00001E80 8B40404040404040                   2362          DC    X'8B40404040404040'                 ........
                                            2363 *
                                            2364          END
                                                 Relocation Dictionary                                                     Page   50 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000002 000000E0   A 4      +
 00000002 00000002 00000108   A 4      +
 00000002 00000002 00000110   A 4      +
 00000002 0000000A 00000208   A 4      +
 00000002 00000002 00000260   A 4      +
 00000002 00000002 00000268   A 4      +
 00000002 00000002 00000330   A 4      +
 00000002 00000002 00000358   A 4      +
 00000002 00000002 00000360   A 4      +
 00000002 00000002 00000440   A 4      +
 00000002 00000002 00000490   A 4      +
 00000002 00000002 00000498   A 4      +
 00000002 00000002 00000560   A 4      +
 00000002 00000002 00000588   A 4      +
 00000002 00000002 00000590   A 4      +
 00000002 00000002 00000698   A 4      +
 00000002 00000002 000006D8   A 4      +
 00000002 00000002 00000700   A 4      +
 00000002 00000002 00000708   A 4      +
 00000002 00000002 00000818   A 4      +
 00000002 00000003 00000820   A 4      +
 00000002 0000000E 00000828   A 4      +
 00000002 0000000E 00000830   A 4      +
 00000002 0000000C 00000838   Q 4      +
 00000002 00000004 0000083C   Q 4      +
 00000002 00000008 00000840   A 4      +
 00000002 00000002 00000850   A 4      +
 00000002 00000006 00000860   A 4      +
 00000002 00000005 00000868   A 4      +
 00000002 00000009 00000870   A 4      +
 00000002 0000000B 00000878   A 4      +
 00000002 00000002 00000880   A 4      +
 00000002 00000002 00000888   A 4      +
 00000002 00000002 000010F8   A 4      +
 00000002 00000003 00001108   A 4      +
 00000002 0000000E 00001110   A 4      +
 00000002 0000000E 00001118   A 4      +
 00000002 0000000C 00001120   Q 4      +
 00000002 00000004 00001124   Q 4      +
 00000002 00000008 00001128   A 4      +
 00000002 00000002 00001130   A 4      +
 00000002 00000007 00001138   A 4      +
 00000002 00000002 00001520   A 4      +
 00000002 00000002 00001548   A 4      +
 00000002 00000002 00001550   A 4      +
 00000002 00000002 00001800   A 4      +
 00000002 0000000E 00001808   A 4      +
 00000011 0000000D 00001C64   Q 4      +
 00000011 0000000D 00001D84   Q 4      +
 00000011 0000000D 00001E44   Q 4      +
 00000011 0000000D 00001E6C   Q 4      +
                                                 DSECT Cross Reference                                                     Page   51 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
@AUTO#do_test_rd_uvarint_enc_i64
         00000160  FFFFFFF9  01863
@AUTO#rd_slice_offset
         000000A8  FFFFFFFF  00124
@AUTO#rd_slice_read_varint
         000000B0  FFFFFFFE  00250
@AUTO#rd_uvarint_dec
         000000B0  FFFFFFFB  00594
@AUTO#rd_uvarint_enc_i64
         000000A8  FFFFFFFC  00478
@AUTO#rd_uvarint_enc_u64
         000000B0  FFFFFFFD  00367
@AUTO#rd_varint_dec_i64
         000000B0  FFFFFFFA  00728
@AUTO#unittest_rdvarint
         000000BF  FFFFFFF8  02177
                                          Macro and Copy Code Source Summary                                               Page   52 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:36 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page   53 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    86  0000006A  00000002 USING  ORDINARY    00000060 00001000 00000002  12 0004A     97 @REGION_805_1,12
   119  000000B8  00000002 DROP                                           12              12
   187  0000015E  00000002 USING  ORDINARY    00000120 00001000 00000002  12 000F0    213 @REGION_814_1,12
   245  00000218  00000002 DROP                                           12              12
   305  00000282  00000002 USING  ORDINARY    00000278 00001000 00000002  12 00084    346 @REGION_826_1,12
   362  0000030A  00000002 DROP                                           12              12
   431  000003AE  00000002 USING  ORDINARY    00000370 00001000 00000002  12 000D0    446 @REGION_827_1,12
   473  00000448  00000002 DROP                                           12              12
   530  000004B2  00000002 USING  ORDINARY    000004A8 00001000 00000002  12 00088    571 @REGION_829_1,12
   589  0000053E  00000002 DROP                                           12              12
   662  000005DE  00000002 USING  ORDINARY    000005A0 00001000 00000002  12 00108    691 @REGION_830_1,12
   723  000006B0  00000002 DROP                                           12              12
   794  00000756  00000002 USING  ORDINARY    00000718 00001000 00000002  12 0028A    951 @REGION_833_1,12
   952  0000099E  00000002 DROP                                           12              12
   953  0000099E  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2    954 @REGION_833_2,12
   955  000009A2  00000002 DROP                                           12              12
   956  000009A2  00000002 USING  ORDINARY    00000718 00001000 00000002  12 003C0   1050 @REGION_833_1,12
  1051  00000AD4  00000002 DROP                                           12              12
  1052  00000AD4  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2   1053 @REGION_833_2,12
  1054  00000AD8  00000002 DROP                                           12              12
  1055  00000AD8  00000002 USING  ORDINARY    00000718 00001000 00000002  12 004C8   1130 @REGION_833_1,12
  1131  00000BDC  00000002 DROP                                           12              12
  1132  00000BDC  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2   1133 @REGION_833_2,12
  1134  00000BE0  00000002 DROP                                           12              12
  1135  00000BE0  00000002 USING  ORDINARY    00000718 00001000 00000002  12 00654   1258 @REGION_833_1,12
  1259  00000D68  00000002 DROP                                           12              12
  1260  00000D68  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2   1261 @REGION_833_2,12
  1262  00000D6C  00000002 DROP                                           12              12
  1263  00000D6C  00000002 USING  ORDINARY    00000718 00001000 00000002  12 0078E   1356 @REGION_833_1,12
  1357  00000EA2  00000002 DROP                                           12              12
  1358  00000EA2  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2   1359 @REGION_833_2,12
  1360  00000EA6  00000002 DROP                                           12              12
  1361  00000EA6  00000002 USING  ORDINARY    00000718 00001000 00000002  12 007BA   1385 @REGION_833_1,12
  1386  00000ECE  00000002 DROP                                           12              12
  1387  00000ECE  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 00000   1388 @REGION_833_2,12
  1389  00000ED2  00000002 DROP                                           12              12
  1390  00000ED2  00000002 USING  ORDINARY    00000718 00001000 00000002  12 0089C   1450 @REGION_833_1,12
  1451  00000FBE  00000002 DROP                                           12              12
  1452  00000FBE  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2   1453 @REGION_833_2,12
  1454  00000FC2  00000002 DROP                                           12              12
  1455  00000FC2  00000002 USING  ORDINARY    00000718 00001000 00000002  12 00000        @REGION_833_1,12
  1457  00000FC2  00000002 DROP                                           12              12
  1458  00000FC2  00000002 USING  ORDINARY    00000FC2 00001000 00000002  12 004F2   1832 @REGION_833_2,12
  1858  000014FC  00000002 DROP                                           12              12
  1943  0000159E  00000002 USING  ORDINARY    00001560 00001000 00000002  12 002B8   2132 @REGION_831_1,12
  2172  00001820  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page   54 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDVARINT ..\asg\asm\rdvarint.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.36.23 Stop Time: 15.36.23 Processor Time: 00.00.00.0250
Return Code 000
