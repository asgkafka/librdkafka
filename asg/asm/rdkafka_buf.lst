                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_buf.obj ../asg/asm/rdkafka_buf.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_buf.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:42 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_BUF
          SD 00000002 00000000 000054D2            07  @CODE
write     ER 00000003                                  WRITE
rd_buf_write
          ER 00000004                                  RD_BUF_WRITE
@@ASSERT  ER 00000005                                  __ASSERT
rd_buf_push0
          ER 00000006                                  RD_BUF_PUSH0
rd_kafka_op_new0
          ER 00000007                                  RD_KAFKA_OP_NEW0
mtx_lock  ER 00000008                                  MTX_LOCK
rd_kafka_op_reply
          ER 00000009                                  RD_KAFKA_OP_REPLY
rd_buf_init
          ER 0000000A                                  RD_BUF_INIT
mtx_unlock
          ER 0000000B                                  MTX_UNLOCK
rd_buf_destroy
          ER 0000000C                                  RD_BUF_DESTROY
cnd_signal
          ER 0000000D                                  CND_SIGNAL
crc_table XD 0000000E 00000003 00000000                CRC_TABLE
rd_slice_init_full
          ER 0000000F                                  RD_SLICE_INIT_FULL
rd_kafka_msgbatch_destroy
          ER 00000010                                  RD_KAFKA_MSGBATCH_DESTROY
rd_kafka_q_destroy_final
          ER 00000011                                  RD_KAFKA_Q_DESTROY_FINAL
thrd_is_current
          ER 00000012                                  THRD_IS_CURRENT
rd_kafka_interceptors_on_response_received
          ER 00000013                                  RD_KAFKA_INTERCEPTORS_ON_RESPONSE_RECEIVED
rd_slice_seek
          ER 00000014                                  RD_SLICE_SEEK
snprintf  ER 00000015                                  SNPRINTF
calloc    ER 00000016                                  CALLOC
rd_kafka_q_purge0
          ER 00000017                                  RD_KAFKA_Q_PURGE0
free      ER 00000018                                  FREE
GETTFD@Y  ER 00000019                                  GETTIMEOFDAY
@@PT3MI   ER 0000001A                                  PTHREAD_MUTEX_INIT
@@PT3ML   ER 0000001B                                  PTHREAD_MUTEX_LOCK
rd_list_destroy
          ER 0000001C                                  RD_LIST_DESTROY
@@PT3MU   ER 0000001D                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_broker_destroy_final
          ER 0000001E                                  RD_KAFKA_BROKER_DESTROY_FINAL
rd_kafka_broker_buf_retry
          ER 0000001F                                  RD_KAFKA_BROKER_BUF_RETRY
rd_kafka_broker_id
          ER 00000020                                  RD_KAFKA_BROKER_ID
rd_kafka_crash
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:42 
          ER 00000021                                  RD_KAFKA_CRASH
rd_kafka_broker_name
          ER 00000022                                  RD_KAFKA_BROKER_NAME
rd_kafka_log0
          ER 00000023                                  RD_KAFKA_LOG0
@rdkafka_buf&
          XD 00000024 00000007 000006D8                @@STATIC
@rdkafka_buf
          SD 00000025 000054D8 000009FA            07  @DATA
crc_table ER 00000026                                  @ECRC_TABLE
rdkafka_buf:
          SD 00000027 00005ED8 00001040            07  @@INIT@
rd_kafka_buf_destroy_final
          LD          00002EC8          00000002   00  RD_KAFKA_BUF_DESTROY_FINAL
rd_kafka_buf_push0
          LD          00003270          00000002   00  RD_KAFKA_BUF_PUSH0
rd_kafka_buf_new0
          LD          00003400          00000002   00  RD_KAFKA_BUF_NEW0
rd_kafka_buf_new_request0
          LD          00003588          00000002   00  RD_KAFKA_BUF_NEW_REQUEST0
rd_kafka_buf_new_shadow
          LD          00003838          00000002   00  RD_KAFKA_BUF_NEW_SHADOW
rd_kafka_bufq_enq
          LD          00003A28          00000002   00  RD_KAFKA_BUFQ_ENQ
rd_kafka_bufq_deq
          LD          00003BB8          00000002   00  RD_KAFKA_BUFQ_DEQ
rd_kafka_bufq_init
          LD          00003DE0          00000002   00  RD_KAFKA_BUFQ_INIT
rd_kafka_bufq_concat
          LD          00003F30          00000002   00  RD_KAFKA_BUFQ_CONCAT
rd_kafka_bufq_purge
          LD          00004108          00000002   00  RD_KAFKA_BUFQ_PURGE
rd_kafka_bufq_connection_reset
          LD          00004408          00000002   00  RD_KAFKA_BUFQ_CONNECTION_RESET
rd_kafka_bufq_dump
          LD          00004798          00000002   00  RD_KAFKA_BUFQ_DUMP
rd_kafka_buf_calc_timeout
          LD          00004B70          00000002   00  RD_KAFKA_BUF_CALC_TIMEOUT
rd_kafka_buf_retry
          LD          00004C68          00000002   00  RD_KAFKA_BUF_RETRY
rd_kafka_buf_handle_op
          LD          00004ED0          00000002   00  RD_KAFKA_BUF_HANDLE_OP
rd_kafka_buf_callback
          LD          00005128          00000002   00  RD_KAFKA_BUF_CALLBACK
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:42:52 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DC2E4C6'
00000000                00000000 000054D2     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D82A486'
                                              18 write    ALIAS C'write'
                                              19          EXTRN write
                                              20 rd_buf_write ALIAS X'99846D82A4866DA69989A385'
                                              21          EXTRN rd_buf_write
                                              22 __assert ALIAS C'@@ASSERT'
                                              23          EXTRN __assert
                                              24 rd_buf_push0 ALIAS X'99846D82A4866D97A4A288F0'
                                              25          EXTRN rd_buf_push0
                                              26 rd_kafka_op_new0 ALIAS X'99846D92818692816D96976D9585A6F0'
                                              27          EXTRN rd_kafka_op_new0
                                              28 mtx_lock ALIAS X'94A3A76D93968392'
                                              29          EXTRN mtx_lock
                                              30 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              31          EXTRN rd_kafka_op_reply
                                              32 rd_buf_init ALIAS X'99846D82A4866D899589A3'
                                              33          EXTRN rd_buf_init
                                              34 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              35          EXTRN mtx_unlock
                                              36 rd_buf_destroy ALIAS X'99846D82A4866D8485A2A39996A8'
                                              37          EXTRN rd_buf_destroy
                                              38 cnd_signal ALIAS X'8395846DA28987958193'
                                              39          EXTRN cnd_signal
                                              40 crc_table ALIAS X'8399836DA381829385'
                                              41 crc_table DXD   0F
                                              42 rd_slice_init_full ALIAS X'99846DA2938983856D899589A36D86A49393'
                                              43          EXTRN rd_slice_init_full
                                              44 rd_kafka_msgbatch_destroy ALIAS X'99846D92818692816D94A2878281A383886D8*
                                                                485A2A39996A8'
                                              45          EXTRN rd_kafka_msgbatch_destroy
                                              46 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              47          EXTRN rd_kafka_q_destroy_final
                                              48 thrd_is_current ALIAS X'A38899846D89A26D83A499998595A3'
                                              49          EXTRN thrd_is_current
                                              50 rd_kafka_interceptors_on_response_received ALIAS X'99846D92818692816D89*
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                95A38599838597A39699A26D96956D9985A2979695A2856D99858385*
                                                                89A58584'
                                              51          EXTRN rd_kafka_interceptors_on_response_received
                                              52 rd_slice_seek ALIAS X'99846DA2938983856DA2858592'
                                              53          EXTRN rd_slice_seek
                                              54 snprintf ALIAS C'snprintf'
                                              55          EXTRN snprintf
                                              56 calloc   ALIAS C'calloc'
                                              57          EXTRN calloc
                                              58 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                              59          EXTRN rd_kafka_q_purge0
                                              60 free     ALIAS C'free'
                                              61          EXTRN free
                                              62 gettimeofday ALIAS C'GETTFD@Y'
                                              63          EXTRN gettimeofday
                                              64 pthread_mutex_init ALIAS C'@@PT3MI'
                                              65          EXTRN pthread_mutex_init
                                              66 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              67          EXTRN pthread_mutex_lock
                                              68 rd_list_destroy ALIAS X'99846D9389A2A36D8485A2A39996A8'
                                              69          EXTRN rd_list_destroy
                                              70 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              71          EXTRN pthread_mutex_unlock
                                              72 rd_kafka_broker_destroy_final ALIAS X'99846D92818692816D8299969285996D8*
                                                                485A2A39996A86D8689958193'
                                              73          EXTRN rd_kafka_broker_destroy_final
                                              74 rd_kafka_broker_buf_retry ALIAS X'99846D92818692816D8299969285996D82A48*
                                                                66D9985A399A8'
                                              75          EXTRN rd_kafka_broker_buf_retry
                                              76 rd_kafka_broker_id ALIAS X'99846D92818692816D8299969285996D8984'
                                              77          EXTRN rd_kafka_broker_id
                                              78 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              79          EXTRN rd_kafka_crash
                                              80 rd_kafka_broker_name ALIAS X'99846D92818692816D8299969285996D95819485'
                                              81          EXTRN rd_kafka_broker_name
                                              82 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                              83          EXTRN rd_kafka_log0
                                              84 *
                                              85 *
                                              86 *
                                              87 * ....... start of ebcdic_2_utf8
00000000                                      88 @LNAME338 DS   0H
00000000 0000000D                             89          DC    X'0000000D'
00000004 8582838489836DF2                     90          DC    C'ebcdic_2_utf8'
00000011 00                                   91          DC    X'00'
                                              92 ebcdic_2_utf8 DCCPRLG CINDEX=338,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME338
                                              93          macro
                                              94          dccextrn &m
                                              95          gblc    &$dccext(1000)
                                              96          gbla    &$dccexti
                                              97          lcla    &i
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                              98 &$dccext(&$dccexti+1) setc    '&m'
                                              99 &i       seta    1
                                             100 .loop    aif    (&i gt &$dccexti).around
                                             101          aif    ('&$dccext(&i)' eq '&m').getout
                                             102 &i       seta    &i+1
                                             103          ago     .loop
                                             104 .around  anop
                                             105 &$dccexti seta &$dccexti+1
                                             106          extrn  &m
                                             107 .getout  anop
                                             108          mend
00000018                                     109+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              110+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  111+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            112+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    113+         dc ad(@PER_338)                                                02-DCCCA
00000028 00000000000000B0                    114+         dc ad(176)                                                     02-DCCCA
00000030 0000000000000000                    115+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    116+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  117+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  118+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  119+         dc al1(3)                                                      02-DCCCA
00000043 08                                  120+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  121+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              122+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    123+         dc ad(@LNAME338)                                               02-DCCCA
00000050                                     124+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    125+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    126+         dc ad(0)                                                       02-DCCCA
00000060                                     127+         ds    0d                                                       01-DCCPR
00000060                                     128+ebcdic_2_utf8 ds 0d                                                     01-DCCPR
00000060                                     129+@REGION_338_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008    130+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    131+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    132+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           133+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    134+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B0               000000B0    135+         aghi  14,176              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    136+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    137+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     138+@PER_338 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    139+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    140+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           141+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           142+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             143+         using @REGION_338_1,12                                         01-DCCPR
                                             144          DCCPRV REG=9      ; Get PRV from DVT
0000009E E390 B008 0004          00000008    145+         LG 9,8(0,11)                                                   01-DCCPR
000000A4 B904 0031                           146          LGR   3,1         ; ptr to parm area
                                             147 * ******* End of Prologue
                                             148 * *
                                             149 * ***       const unsigned char* outstart = out;
                                                                                                                           Page    8 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000000A8 E340 3000 0004          00000000    150          LG    4,0(0,3)    ; out
000000AE B904 00F4                           151          LGR   15,4
000000B2 E310 3008 0004          00000008    152          LG    1,8(0,3)    ; outlen
000000B8 E350 3010 0004          00000010    153          LG    5,16(0,3)   ; in
000000BE B904 0025                           154          LGR   2,5
000000C2 E330 3018 0004          00000018    155          LG    3,24(0,3)   ; inlen
                                             156 * ***       const unsigned char* base = in;
                                             157 * ***       const unsigned char* processed = in;
000000C8 B904 0065                           158          LGR   6,5         ; processed
                                             159 * ***       const unsigned char* inend = in + (*inlen);
000000CC E370 3000 0004          00000000    160          LG    7,0(0,3)    ; inlen
000000D2 4177 5000               00000000    161          LA    7,0(7,5)
                                             162 * ***       const unsigned char* outend = out + (*outlen);
000000D6 E380 1000 0004          00000000    163          LG    8,0(0,1)    ; outlen
000000DC 4188 4000               00000000    164          LA    8,0(8,4)
                                             165 * ***       unsigned char c;
                                             166 * ***
                                             167 * ***       while ((in < inend) && ((out - outstart) < *outlen)) {
000000E0 47F0 C104               00000164    168          B     @L6
000000E8                                     169          DS    0D
000000E8 000000B0                            170 @FRAMESIZE_338 DC F'176'
000000EC 00000000
000000F0 00000000000000FF                    171 @lit_338_2 DC  FD'255' 0x00000000000000ff
000000F8 00000000                            172 @lit_338_1 DC  Q(@@STATIC)
000000FC                                     173 @L5      DS    0H
                                             174 * ***           c = *in++;
000000FC B904 00A2                           175          LGR   10,2
00000100 4120 2001               00000001    176          LA    2,1(0,2)
00000104 43A0 A000               00000000    177          IC    10,0(0,10)
00000108 42A0 D0A8               000000A8    178          STC   10,168(0,13) ; c
                                             179 * ***           if (c > 0xFF)
0000010C 18BA                                180          LR    11,10
0000010E C0BB 0000 00FF                      181          NILF  11,X'000000FF'
00000114 A7BE 00FF               000000FF    182          CHI   11,255
00000118 47D0 C0D8               00000138    183          BNH   @L8
                                             184 * ***           {
                                             185 * ***               *outlen = out - outstart;
0000011C B909 00F4                           186          SGR   15,4
00000120 E3F0 1000 0024          00000000    187          STG   15,0(0,1)   ; outlen
                                             188 * ***               *inlen = processed - base;
00000126 B909 0065                           189          SGR   6,5
0000012A E360 3000 0024          00000000    190          STG   6,0(0,3)    ; inlen
                                             191 * ***               return(-1);
00000130 A7F9 FFFF               0000FFFF    192          LGHI  15,-1       ; -1
00000134 47F0 C136               00000196    193          B     @ret_lab_338
                                             194 * ***           }
00000138                                     195 @L8      DS    0H
                                             196 * ***
                                             197 * ***           if (out >= outend)
00000138 B920 00F8                           198          CGR   15,8
0000013C 47B0 C11E               0000017E    199          BNL   @L3
                                             200 * ***               break;
                                                                                                                           Page    9 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000140                                     201 @L9      DS    0H
                                             202 * ***
                                             203 * ***           *out++ = E2U[c];
00000140 B904 006F                           204          LGR   6,15
00000144 41F0 F001               00000001    205          LA    15,1(0,15)
00000148 E3B0 C098 0014          000000F8    206          LGF   11,@lit_338_1
0000014E 41BB 9000               00000000    207          LA    11,0(11,9)
00000152 E3A0 C090 0080          000000F0    208          NG    10,@lit_338_2
00000158 43AA B000               00000000    209          IC    10,0(10,11)
0000015C 42A0 6000               00000000    210          STC   10,0(0,6)
                                             211 * ***           processed = (unsigned char*)in;
00000160 B904 0062                           212          LGR   6,2         ; processed
                                             213 * ***
                                             214 * ***       }
00000164                                     215 @L6      DS    0H
00000164 B920 0027                           216          CGR   2,7
00000168 47B0 C11E               0000017E    217          BNL   @L3
0000016C B904 00AF                           218          LGR   10,15
00000170 B909 00A4                           219          SGR   10,4
00000174 E3A0 1000 0021          00000000    220          CLG   10,0(0,1)
0000017A 4740 C09C               000000FC    221          BL    @L5
0000017E                                     222 @L3      DS    0H
                                             223 * ***
                                             224 * ***       *outlen = out - outstart;
0000017E B909 00F4                           225          SGR   15,4
00000182 E3F0 1000 0024          00000000    226          STG   15,0(0,1)   ; outlen
                                             227 * ***       *inlen = processed - base;
00000188 B909 0065                           228          SGR   6,5
0000018C E360 3000 0024          00000000    229          STG   6,0(0,3)    ; inlen
                                             230 * ***       return(0);
00000192 A7F9 0000               00000000    231          LGHI  15,0        ; 0
                                             232 * ***   }
00000196                                     233 @ret_lab_338 DS 0H
                                             234 * * **** Start of Epilogue
                                             235          DCCEPIL
00000196                                     236+         ds 0h                                                          01-DCCEP
                                             237+* Epilog
00000196 D707 D088 D088 00000088 00000088    238+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000019C E3D0 D080 0004          00000080    239+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000001A2 E3C0 D090 0004          00000090    240+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000001A8 E3B0 C018 0004          00000018    241+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000001AE E3C0 B010 0021          00000010    242+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000001B4 E3E0 D008 0004          00000008    243+         lg  14,8(0,13)          load up return address                 01-DCCEP
000001BA EB1C D020 0004          00000020    244+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000001C0 078E                                245+         bcr 8,14                if same dsab, just return              01-DCCEP
000001C2 E3F0 D010 0024          00000010    246+         stg 15,16(0,13)         save return code                       01-DCCEP
000001C8 E300 D018 0024          00000018    247+         stg 0,24(0,13)          save more return code                  01-DCCEP
000001CE E3F0 D090 0004          00000090    248+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000001D4 E3F0 F018 0004          00000018    249+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000001DA 47F0 F040               00000040    250+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             251+* End of Epilog
                                             252 * * **** End of Epilogue
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             253          DROP  12
                                             254 *
                                             255 *   DSECT for automatic variables in "ebcdic_2_utf8"
                                             256 *      (FUNCTION #338)
                                             257 *
00000000                00000000 000000A9    258 @AUTO#ebcdic_2_utf8 DSECT
00000000                                     259          DS    XL168
000000A8                                     260 ebcdic_2_utf8#c#0 DS 1CL1  ; c
                                             261 *
000001DE                00000000 000054D2    262 @CODE    CSECT
                                             263 *
                                             264 *
                                             265 *
                                             266 * ....... start of rd_atomic32_init
000001DE                                     267 @LNAME1058 DS  0H
000001DE 00000010                            268          DC    X'00000010'
000001E2 99846D81A3969489                    269          DC    C'rd_atomic32_init'
000001F2 00                                  270          DC    X'00'
                                             271 rd_atomic32_init DCCPRLG CINDEX=1058,BASER=12,FRAME=184,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1058
                                             272          macro
                                             273          dccextrn &m
                                             274          gblc    &$dccext(1000)
                                             275          gbla    &$dccexti
                                             276          lcla    &i
                                             277 &$dccext(&$dccexti+1) setc    '&m'
                                             278 &i       seta    1
                                             279 .loop    aif    (&i gt &$dccexti).around
                                             280          aif    ('&$dccext(&i)' eq '&m').getout
                                             281 &i       seta    &i+1
                                             282          ago     .loop
                                             283 .around  anop
                                             284 &$dccexti seta &$dccexti+1
                                             285          extrn  &m
                                             286 .getout  anop
                                             287          mend
000001F8                                     288+$eye0006    ds    0d                                                    02-DCCCA
000001F8 C4C3C3                              289+         dc cl3'DCC'                                                    02-DCCCA
000001FB 01                                  290+         dc xl1'01' format one                                          02-DCCCA
000001FC 00000000                            291+         dc a(0)                                                        02-DCCCA
00000200 000000000000026A                    292+         dc ad(@PER_1058)                                               02-DCCCA
00000208 00000000000000B8                    293+         dc ad(184)                                                     02-DCCCA
00000210 0000000000000000                    294+         dc ad(0)                                                       02-DCCCA
00000218 0000000000001000                    295+         dc ad(4096)                                                    02-DCCCA
00000220 20                                  296+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000221 03                                  297+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000222 03                                  298+         dc al1(3)                                                      02-DCCCA
00000223 08                                  299+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000224 00                                  300+         dc bl.8'00000000'                                              02-DCCCA
00000225 000000                              301+         dc al3(0)                                                      02-DCCCA
00000228 00000000000001DE                    302+         dc ad(@LNAME1058)                                              02-DCCCA
00000230                                     303+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000230 00000000000001F8                    304+         dc ad($eye0006)                                                02-DCCCA
00000238 0000000000000000                    305+         dc ad(0)                                                       02-DCCCA
00000240                                     306+         ds    0d                                                       01-DCCPR
00000240                                     307+rd_atomic32_init ds 0d                                                  01-DCCPR
00000240                                     308+@REGION_1058_1 ds 0h                                                    01-DCCPR
00000240 EBEC D008 0024          00000008    309+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000246 E3E0 D088 0004          00000088    310+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000024C E3C0 D090 0004          00000090    311+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000252 B904 002E                           312+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000256 E3B0 C018 0004          00000018    313+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000025C A7EB 00B8               000000B8    314+         aghi  14,184              increase by frame size               01-DCCPR
00000260 E3E0 C020 0021          00000020    315+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000266 4720 B020               00000020    316+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000026A                                     317+@PER_1058 ds   0h                                                       01-DCCPR
0000026A EBDE 2080 0024          00000080    318+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000270 E3C0 2090 0024          00000090    319+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000276 B904 00D2                           320+         lgr   13,2                set real frame pointer               01-DCCPR
0000027A B904 00CF                           321+         lgr   12,15               set base reg                         01-DCCPR
                        00000240             322+         using @REGION_1058_1,12                                        01-DCCPR
                                             323 * ******* End of Prologue
                                             324 * *
                                             325 * ***      ra->val = v;
0000027E E3F0 1000 0004          00000000    326          LG    15,0(0,1)   ; ra
00000284 5810 100C               0000000C    327          L     1,12(0,1)   ; v
00000288 5010 F000               00000000    328          ST    1,0(0,15)   ; ra
                                             329 * ***
                                             330 * ***      pthread_mutex_init(&ra->lock, 0);
0000028C 41F0 F008               00000008    331          LA    15,8(0,15)
00000290 E3F0 D0A8 0024          000000A8    332          STG   15,168(0,13)
00000296 D707 D0B0 D0B0 000000B0 000000B0    333          XC    176(8,13),176(13)
0000029C 4110 D0A8               000000A8    334          LA    1,168(0,13)
000002A0 E3F0 C0B8 0004          000002F8    335          LG    15,@lit_1058_5 ; pthread_mutex_init
000002A6                                     336 @@gen_label4 DS    0H
000002A6 05EF                                337          BALR  14,15
000002A8                                     338 @@gen_label5 DS    0H
                                             339 * ***   # 79 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             340 * ***   }
000002A8                                     341 @ret_lab_1058 DS 0H
                                             342 * * **** Start of Epilogue
                                             343          DCCEPIL
000002A8                                     344+         ds 0h                                                          01-DCCEP
                                             345+* Epilog
000002A8 D707 D088 D088 00000088 00000088    346+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000002AE E3D0 D080 0004          00000080    347+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000002B4 E3C0 D090 0004          00000090    348+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000002BA E3B0 C018 0004          00000018    349+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000002C0 E3C0 B010 0021          00000010    350+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000002C6 E3E0 D008 0004          00000008    351+         lg  14,8(0,13)          load up return address                 01-DCCEP
000002CC EB1C D020 0004          00000020    352+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000002D2 078E                                353+         bcr 8,14                if same dsab, just return              01-DCCEP
000002D4 E3F0 D010 0024          00000010    354+         stg 15,16(0,13)         save return code                       01-DCCEP
000002DA E300 D018 0024          00000018    355+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   12 
  Active Usings: @REGION_1058_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000002E0 E3F0 D090 0004          00000090    356+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000002E6 E3F0 F018 0004          00000018    357+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000002EC 47F0 F040               00000040    358+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             359+* End of Epilog
                                             360 * * **** End of Epilogue
000002F0                                     361          DS    0D
000002F0 000000B8                            362 @FRAMESIZE_1058 DC F'184'
000002F4 00000000
000002F8 0000000000000000                    363 @lit_1058_5 DC AD(pthread_mutex_init)
                                             364          DROP  12
                                             365 *
                                             366 *   DSECT for automatic variables in "rd_atomic32_init"
                                             367 *      (FUNCTION #1058)
                                             368 *
00000000                00000000 000000A8    369 @AUTO#rd_atomic32_init DSECT
00000000                                     370          DS    XL168
                                             371 *
00000300                00000000 000054D2    372 @CODE    CSECT
                                             373 *
                                             374 *
                                             375 *
                                             376 * ....... start of rd_atomic32_add
00000300                                     377 @LNAME1059 DS  0H
00000300 0000000F                            378          DC    X'0000000F'
00000304 99846D81A3969489                    379          DC    C'rd_atomic32_add'
00000313 00                                  380          DC    X'00'
                                             381 rd_atomic32_add DCCPRLG CINDEX=1059,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1059
                                             382          macro
                                             383          dccextrn &m
                                             384          gblc    &$dccext(1000)
                                             385          gbla    &$dccexti
                                             386          lcla    &i
                                             387 &$dccext(&$dccexti+1) setc    '&m'
                                             388 &i       seta    1
                                             389 .loop    aif    (&i gt &$dccexti).around
                                             390          aif    ('&$dccext(&i)' eq '&m').getout
                                             391 &i       seta    &i+1
                                             392          ago     .loop
                                             393 .around  anop
                                             394 &$dccexti seta &$dccexti+1
                                             395          extrn  &m
                                             396 .getout  anop
                                             397          mend
00000318                                     398+$eye0009    ds    0d                                                    02-DCCCA
00000318 C4C3C3                              399+         dc cl3'DCC'                                                    02-DCCCA
0000031B 01                                  400+         dc xl1'01' format one                                          02-DCCCA
0000031C 00000000                            401+         dc a(0)                                                        02-DCCCA
00000320 000000000000038A                    402+         dc ad(@PER_1059)                                               02-DCCCA
00000328 00000000000000B8                    403+         dc ad(184)                                                     02-DCCCA
00000330 0000000000000000                    404+         dc ad(0)                                                       02-DCCCA
00000338 0000000000001000                    405+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000340 20                                  406+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000341 03                                  407+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000342 03                                  408+         dc al1(3)                                                      02-DCCCA
00000343 08                                  409+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000344 00                                  410+         dc bl.8'00000000'                                              02-DCCCA
00000345 000000                              411+         dc al3(0)                                                      02-DCCCA
00000348 0000000000000300                    412+         dc ad(@LNAME1059)                                              02-DCCCA
00000350                                     413+         ds 0d                                                          02-DCCCA
00000350 0000000000000318                    414+         dc ad($eye0009)                                                02-DCCCA
00000358 0000000000000000                    415+         dc ad(0)                                                       02-DCCCA
00000360                                     416+         ds    0d                                                       01-DCCPR
00000360                                     417+rd_atomic32_add ds 0d                                                   01-DCCPR
00000360                                     418+@REGION_1059_1 ds 0h                                                    01-DCCPR
00000360 EBEC D008 0024          00000008    419+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000366 E3E0 D088 0004          00000088    420+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000036C E3C0 D090 0004          00000090    421+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000372 B904 002E                           422+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000376 E3B0 C018 0004          00000018    423+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000037C A7EB 00B8               000000B8    424+         aghi  14,184              increase by frame size               01-DCCPR
00000380 E3E0 C020 0021          00000020    425+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000386 4720 B020               00000020    426+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000038A                                     427+@PER_1059 ds   0h                                                       01-DCCPR
0000038A EBDE 2080 0024          00000080    428+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000390 E3C0 2090 0024          00000090    429+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000396 B904 00D2                           430+         lgr   13,2                set real frame pointer               01-DCCPR
0000039A B904 00CF                           431+         lgr   12,15               set base reg                         01-DCCPR
                        00000360             432+         using @REGION_1059_1,12                                        01-DCCPR
0000039E B904 0031                           433          LGR   3,1         ; ptr to parm area
                                             434 * ******* End of Prologue
                                             435 * *
000003A2 E320 3000 0004          00000000    436          LG    2,0(0,3)    ; ra
                                             437 * ***
                                             438 * ***      int32_t r;
                                             439 * ***      pthread_mutex_lock(&ra->lock);
000003A8 41F0 2008               00000008    440          LA    15,8(0,2)
000003AC E3F0 D0B0 0024          000000B0    441          STG   15,176(0,13)
000003B2 4110 D0B0               000000B0    442          LA    1,176(0,13)
000003B6 E3F0 C0D8 0004          00000438    443          LG    15,@lit_1059_7 ; pthread_mutex_lock
000003BC                                     444 @@gen_label6 DS    0H
000003BC 05EF                                445          BALR  14,15
000003BE                                     446 @@gen_label7 DS    0H
                                             447 * ***      ra->val += v;
000003BE 58F0 2000               00000000    448          L     15,0(0,2)
000003C2 5AF0 300C               0000000C    449          A     15,12(0,3)
000003C6 50F0 2000               00000000    450          ST    15,0(0,2)
                                             451 * ***      r = ra->val;
000003CA 183F                                452          LR    3,15        ; ra
                                             453 * ***      pthread_mutex_unlock(&ra->lock);
000003CC 41F0 2008               00000008    454          LA    15,8(0,2)
000003D0 E3F0 D0B0 0024          000000B0    455          STG   15,176(0,13)
000003D6 4110 D0B0               000000B0    456          LA    1,176(0,13)
000003DA E3F0 C0E0 0004          00000440    457          LG    15,@lit_1059_8 ; pthread_mutex_unlock
                                                                                                                           Page   14 
  Active Usings: @REGION_1059_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000003E0                                     458 @@gen_label8 DS    0H
000003E0 05EF                                459          BALR  14,15
000003E2                                     460 @@gen_label9 DS    0H
                                             461 * ***      return r;
000003E2 B914 00F3                           462          LGFR  15,3
                                             463 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             464 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             465 * ***
                                             466 * ***   }
                                             467 * * **** Start of Epilogue
                                             468          DCCEPIL
000003E6                                     469+         ds 0h                                                          01-DCCEP
                                             470+* Epilog
000003E6 D707 D088 D088 00000088 00000088    471+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000003EC E3D0 D080 0004          00000080    472+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000003F2 E3C0 D090 0004          00000090    473+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000003F8 E3B0 C018 0004          00000018    474+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000003FE E3C0 B010 0021          00000010    475+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000404 E3E0 D008 0004          00000008    476+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000040A EB1C D020 0004          00000020    477+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000410 078E                                478+         bcr 8,14                if same dsab, just return              01-DCCEP
00000412 E3F0 D010 0024          00000010    479+         stg 15,16(0,13)         save return code                       01-DCCEP
00000418 E300 D018 0024          00000018    480+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000041E E3F0 D090 0004          00000090    481+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000424 E3F0 F018 0004          00000018    482+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000042A 47F0 F040               00000040    483+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             484+* End of Epilog
                                             485 * * **** End of Epilogue
00000430                                     486          DS    0D
00000430 000000B8                            487 @FRAMESIZE_1059 DC F'184'
00000434 00000000
00000438 0000000000000000                    488 @lit_1059_7 DC AD(pthread_mutex_lock)
00000440 0000000000000000                    489 @lit_1059_8 DC AD(pthread_mutex_unlock)
                                             490          DROP  12
                                             491 *
                                             492 *   DSECT for automatic variables in "rd_atomic32_add"
                                             493 *      (FUNCTION #1059)
                                             494 *
00000000                00000000 000000AC    495 @AUTO#rd_atomic32_add DSECT
00000000                                     496          DS    XL168
000000A8                                     497 rd_atomic32_add#r#0 DS 1F  ; r
                                             498 *
00000448                00000000 000054D2    499 @CODE    CSECT
                                             500 *
                                             501 *
                                             502 *
                                             503 * ....... start of rd_atomic32_sub
00000448                                     504 @LNAME1060 DS  0H
00000448 0000000F                            505          DC    X'0000000F'
0000044C 99846D81A3969489                    506          DC    C'rd_atomic32_sub'
0000045B 00                                  507          DC    X'00'
                                             508 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                RCH,LNAMEADDR=@LNAME1060
                                             509          macro
                                             510          dccextrn &m
                                             511          gblc    &$dccext(1000)
                                             512          gbla    &$dccexti
                                             513          lcla    &i
                                             514 &$dccext(&$dccexti+1) setc    '&m'
                                             515 &i       seta    1
                                             516 .loop    aif    (&i gt &$dccexti).around
                                             517          aif    ('&$dccext(&i)' eq '&m').getout
                                             518 &i       seta    &i+1
                                             519          ago     .loop
                                             520 .around  anop
                                             521 &$dccexti seta &$dccexti+1
                                             522          extrn  &m
                                             523 .getout  anop
                                             524          mend
00000460                                     525+$eye0012    ds    0d                                                    02-DCCCA
00000460 C4C3C3                              526+         dc cl3'DCC'                                                    02-DCCCA
00000463 01                                  527+         dc xl1'01' format one                                          02-DCCCA
00000464 00000000                            528+         dc a(0)                                                        02-DCCCA
00000468 00000000000004D2                    529+         dc ad(@PER_1060)                                               02-DCCCA
00000470 00000000000000B8                    530+         dc ad(184)                                                     02-DCCCA
00000478 0000000000000000                    531+         dc ad(0)                                                       02-DCCCA
00000480 0000000000001000                    532+         dc ad(4096)                                                    02-DCCCA
00000488 20                                  533+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000489 03                                  534+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000048A 03                                  535+         dc al1(3)                                                      02-DCCCA
0000048B 08                                  536+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000048C 00                                  537+         dc bl.8'00000000'                                              02-DCCCA
0000048D 000000                              538+         dc al3(0)                                                      02-DCCCA
00000490 0000000000000448                    539+         dc ad(@LNAME1060)                                              02-DCCCA
00000498                                     540+         ds 0d                                                          02-DCCCA
00000498 0000000000000460                    541+         dc ad($eye0012)                                                02-DCCCA
000004A0 0000000000000000                    542+         dc ad(0)                                                       02-DCCCA
000004A8                                     543+         ds    0d                                                       01-DCCPR
000004A8                                     544+rd_atomic32_sub ds 0d                                                   01-DCCPR
000004A8                                     545+@REGION_1060_1 ds 0h                                                    01-DCCPR
000004A8 EBEC D008 0024          00000008    546+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000004AE E3E0 D088 0004          00000088    547+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000004B4 E3C0 D090 0004          00000090    548+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000004BA B904 002E                           549+         lgr   2,14                copy addr of our savearea            01-DCCPR
000004BE E3B0 C018 0004          00000018    550+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000004C4 A7EB 00B8               000000B8    551+         aghi  14,184              increase by frame size               01-DCCPR
000004C8 E3E0 C020 0021          00000020    552+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000004CE 4720 B020               00000020    553+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000004D2                                     554+@PER_1060 ds   0h                                                       01-DCCPR
000004D2 EBDE 2080 0024          00000080    555+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000004D8 E3C0 2090 0024          00000090    556+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000004DE B904 00D2                           557+         lgr   13,2                set real frame pointer               01-DCCPR
000004E2 B904 00CF                           558+         lgr   12,15               set base reg                         01-DCCPR
                        000004A8             559+         using @REGION_1060_1,12                                        01-DCCPR
                                                                                                                           Page   16 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000004E6 B904 0031                           560          LGR   3,1         ; ptr to parm area
                                             561 * ******* End of Prologue
                                             562 * *
000004EA E320 3000 0004          00000000    563          LG    2,0(0,3)    ; ra
                                             564 * ***
                                             565 * ***      int32_t r;
                                             566 * ***      pthread_mutex_lock(&ra->lock);
000004F0 41F0 2008               00000008    567          LA    15,8(0,2)
000004F4 E3F0 D0B0 0024          000000B0    568          STG   15,176(0,13)
000004FA 4110 D0B0               000000B0    569          LA    1,176(0,13)
000004FE E3F0 C0D8 0004          00000580    570          LG    15,@lit_1060_10 ; pthread_mutex_lock
00000504                                     571 @@gen_label10 DS    0H
00000504 05EF                                572          BALR  14,15
00000506                                     573 @@gen_label11 DS    0H
                                             574 * ***      ra->val -= v;
00000506 58F0 2000               00000000    575          L     15,0(0,2)
0000050A 5BF0 300C               0000000C    576          S     15,12(0,3)
0000050E 50F0 2000               00000000    577          ST    15,0(0,2)
                                             578 * ***      r = ra->val;
00000512 183F                                579          LR    3,15        ; ra
                                             580 * ***      pthread_mutex_unlock(&ra->lock);
00000514 41F0 2008               00000008    581          LA    15,8(0,2)
00000518 E3F0 D0B0 0024          000000B0    582          STG   15,176(0,13)
0000051E 4110 D0B0               000000B0    583          LA    1,176(0,13)
00000522 E3F0 C0E0 0004          00000588    584          LG    15,@lit_1060_11 ; pthread_mutex_unlock
00000528                                     585 @@gen_label12 DS    0H
00000528 05EF                                586          BALR  14,15
0000052A                                     587 @@gen_label13 DS    0H
                                             588 * ***      return r;
0000052A B914 00F3                           589          LGFR  15,3
                                             590 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             591 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             592 * ***
                                             593 * ***   }
                                             594 * * **** Start of Epilogue
                                             595          DCCEPIL
0000052E                                     596+         ds 0h                                                          01-DCCEP
                                             597+* Epilog
0000052E D707 D088 D088 00000088 00000088    598+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000534 E3D0 D080 0004          00000080    599+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000053A E3C0 D090 0004          00000090    600+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000540 E3B0 C018 0004          00000018    601+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000546 E3C0 B010 0021          00000010    602+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000054C E3E0 D008 0004          00000008    603+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000552 EB1C D020 0004          00000020    604+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000558 078E                                605+         bcr 8,14                if same dsab, just return              01-DCCEP
0000055A E3F0 D010 0024          00000010    606+         stg 15,16(0,13)         save return code                       01-DCCEP
00000560 E300 D018 0024          00000018    607+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000566 E3F0 D090 0004          00000090    608+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000056C E3F0 F018 0004          00000018    609+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000572 47F0 F040               00000040    610+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             611+* End of Epilog
                                                                                                                           Page   17 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             612 * * **** End of Epilogue
00000578                                     613          DS    0D
00000578 000000B8                            614 @FRAMESIZE_1060 DC F'184'
0000057C 00000000
00000580 0000000000000000                    615 @lit_1060_10 DC AD(pthread_mutex_lock)
00000588 0000000000000000                    616 @lit_1060_11 DC AD(pthread_mutex_unlock)
                                             617          DROP  12
                                             618 *
                                             619 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             620 *      (FUNCTION #1060)
                                             621 *
00000000                00000000 000000AC    622 @AUTO#rd_atomic32_sub DSECT
00000000                                     623          DS    XL168
000000A8                                     624 rd_atomic32_sub#r#0 DS 1F  ; r
                                             625 *
00000590                00000000 000054D2    626 @CODE    CSECT
                                             627 *
                                             628 *
                                             629 *
                                             630 * ....... start of rd_atomic32_get
00000590                                     631 @LNAME1061 DS  0H
00000590 0000000F                            632          DC    X'0000000F'
00000594 99846D81A3969489                    633          DC    C'rd_atomic32_get'
000005A3 00                                  634          DC    X'00'
                                             635 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                             636          macro
                                             637          dccextrn &m
                                             638          gblc    &$dccext(1000)
                                             639          gbla    &$dccexti
                                             640          lcla    &i
                                             641 &$dccext(&$dccexti+1) setc    '&m'
                                             642 &i       seta    1
                                             643 .loop    aif    (&i gt &$dccexti).around
                                             644          aif    ('&$dccext(&i)' eq '&m').getout
                                             645 &i       seta    &i+1
                                             646          ago     .loop
                                             647 .around  anop
                                             648 &$dccexti seta &$dccexti+1
                                             649          extrn  &m
                                             650 .getout  anop
                                             651          mend
000005A8                                     652+$eye0015    ds    0d                                                    02-DCCCA
000005A8 C4C3C3                              653+         dc cl3'DCC'                                                    02-DCCCA
000005AB 01                                  654+         dc xl1'01' format one                                          02-DCCCA
000005AC 00000000                            655+         dc a(0)                                                        02-DCCCA
000005B0 000000000000061A                    656+         dc ad(@PER_1061)                                               02-DCCCA
000005B8 00000000000000B8                    657+         dc ad(184)                                                     02-DCCCA
000005C0 0000000000000000                    658+         dc ad(0)                                                       02-DCCCA
000005C8 0000000000001000                    659+         dc ad(4096)                                                    02-DCCCA
000005D0 20                                  660+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000005D1 03                                  661+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000005D2 03                                  662+         dc al1(3)                                                      02-DCCCA
000005D3 08                                  663+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000005D4 00                                  664+         dc bl.8'00000000'                                              02-DCCCA
000005D5 000000                              665+         dc al3(0)                                                      02-DCCCA
000005D8 0000000000000590                    666+         dc ad(@LNAME1061)                                              02-DCCCA
000005E0                                     667+         ds 0d                                                          02-DCCCA
000005E0 00000000000005A8                    668+         dc ad($eye0015)                                                02-DCCCA
000005E8 0000000000000000                    669+         dc ad(0)                                                       02-DCCCA
000005F0                                     670+         ds    0d                                                       01-DCCPR
000005F0                                     671+rd_atomic32_get ds 0d                                                   01-DCCPR
000005F0                                     672+@REGION_1061_1 ds 0h                                                    01-DCCPR
000005F0 EBEC D008 0024          00000008    673+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000005F6 E3E0 D088 0004          00000088    674+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000005FC E3C0 D090 0004          00000090    675+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000602 B904 002E                           676+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000606 E3B0 C018 0004          00000018    677+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000060C A7EB 00B8               000000B8    678+         aghi  14,184              increase by frame size               01-DCCPR
00000610 E3E0 C020 0021          00000020    679+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000616 4720 B020               00000020    680+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000061A                                     681+@PER_1061 ds   0h                                                       01-DCCPR
0000061A EBDE 2080 0024          00000080    682+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000620 E3C0 2090 0024          00000090    683+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000626 B904 00D2                           684+         lgr   13,2                set real frame pointer               01-DCCPR
0000062A B904 00CF                           685+         lgr   12,15               set base reg                         01-DCCPR
                        000005F0             686+         using @REGION_1061_1,12                                        01-DCCPR
                                             687 * ******* End of Prologue
                                             688 * *
0000062E E320 1000 0004          00000000    689          LG    2,0(0,1)    ; ra
                                             690 * ***
                                             691 * ***      int32_t r;
                                             692 * ***      pthread_mutex_lock(&ra->lock);
00000634 41F0 2008               00000008    693          LA    15,8(0,2)
00000638 E3F0 D0B0 0024          000000B0    694          STG   15,176(0,13)
0000063E 4110 D0B0               000000B0    695          LA    1,176(0,13)
00000642 E3F0 C0C8 0004          000006B8    696          LG    15,@lit_1061_13 ; pthread_mutex_lock
00000648                                     697 @@gen_label14 DS    0H
00000648 05EF                                698          BALR  14,15
0000064A                                     699 @@gen_label15 DS    0H
                                             700 * ***      r = ra->val;
0000064A 5830 2000               00000000    701          L     3,0(0,2)    ; ra
                                             702 * ***      pthread_mutex_unlock(&ra->lock);
0000064E 41F0 2008               00000008    703          LA    15,8(0,2)
00000652 E3F0 D0B0 0024          000000B0    704          STG   15,176(0,13)
00000658 4110 D0B0               000000B0    705          LA    1,176(0,13)
0000065C E3F0 C0D0 0004          000006C0    706          LG    15,@lit_1061_14 ; pthread_mutex_unlock
00000662                                     707 @@gen_label16 DS    0H
00000662 05EF                                708          BALR  14,15
00000664                                     709 @@gen_label17 DS    0H
                                             710 * ***      return r;
00000664 B914 00F3                           711          LGFR  15,3
                                             712 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             713 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                                                                                                           Page   19 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             714 * ***
                                             715 * ***   }
                                             716 * * **** Start of Epilogue
                                             717          DCCEPIL
00000668                                     718+         ds 0h                                                          01-DCCEP
                                             719+* Epilog
00000668 D707 D088 D088 00000088 00000088    720+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000066E E3D0 D080 0004          00000080    721+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000674 E3C0 D090 0004          00000090    722+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000067A E3B0 C018 0004          00000018    723+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000680 E3C0 B010 0021          00000010    724+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000686 E3E0 D008 0004          00000008    725+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000068C EB1C D020 0004          00000020    726+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000692 078E                                727+         bcr 8,14                if same dsab, just return              01-DCCEP
00000694 E3F0 D010 0024          00000010    728+         stg 15,16(0,13)         save return code                       01-DCCEP
0000069A E300 D018 0024          00000018    729+         stg 0,24(0,13)          save more return code                  01-DCCEP
000006A0 E3F0 D090 0004          00000090    730+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000006A6 E3F0 F018 0004          00000018    731+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000006AC 47F0 F040               00000040    732+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             733+* End of Epilog
                                             734 * * **** End of Epilogue
000006B0                                     735          DS    0D
000006B0 000000B8                            736 @FRAMESIZE_1061 DC F'184'
000006B4 00000000
000006B8 0000000000000000                    737 @lit_1061_13 DC AD(pthread_mutex_lock)
000006C0 0000000000000000                    738 @lit_1061_14 DC AD(pthread_mutex_unlock)
                                             739          DROP  12
                                             740 *
                                             741 *   DSECT for automatic variables in "rd_atomic32_get"
                                             742 *      (FUNCTION #1061)
                                             743 *
00000000                00000000 000000AC    744 @AUTO#rd_atomic32_get DSECT
00000000                                     745          DS    XL168
000000A8                                     746 rd_atomic32_get#r#0 DS 1F  ; r
                                             747 *
000006C8                00000000 000054D2    748 @CODE    CSECT
                                             749 *
                                             750 *
                                             751 *
                                             752 * ....... start of rd_calloc
000006C8                                     753 @LNAME1077 DS  0H
000006C8 00000009                            754          DC    X'00000009'
000006CC 99846D8381939396                    755          DC    C'rd_calloc'
000006D5 00                                  756          DC    X'00'
                                             757 rd_calloc DCCPRLG CINDEX=1077,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1077
                                             758          macro
                                             759          dccextrn &m
                                             760          gblc    &$dccext(1000)
                                             761          gbla    &$dccexti
                                             762          lcla    &i
                                             763 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             764 &i       seta    1
                                             765 .loop    aif    (&i gt &$dccexti).around
                                             766          aif    ('&$dccext(&i)' eq '&m').getout
                                             767 &i       seta    &i+1
                                             768          ago     .loop
                                             769 .around  anop
                                             770 &$dccexti seta &$dccexti+1
                                             771          extrn  &m
                                             772 .getout  anop
                                             773          mend
000006D8                                     774+$eye0018    ds    0d                                                    02-DCCCA
000006D8 C4C3C3                              775+         dc cl3'DCC'                                                    02-DCCCA
000006DB 01                                  776+         dc xl1'01' format one                                          02-DCCCA
000006DC 00000000                            777+         dc a(0)                                                        02-DCCCA
000006E0 000000000000074A                    778+         dc ad(@PER_1077)                                               02-DCCCA
000006E8 00000000000000D0                    779+         dc ad(208)                                                     02-DCCCA
000006F0 0000000000000000                    780+         dc ad(0)                                                       02-DCCCA
000006F8 0000000000001000                    781+         dc ad(4096)                                                    02-DCCCA
00000700 20                                  782+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000701 03                                  783+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000702 03                                  784+         dc al1(3)                                                      02-DCCCA
00000703 08                                  785+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000704 00                                  786+         dc bl.8'00000000'                                              02-DCCCA
00000705 000000                              787+         dc al3(0)                                                      02-DCCCA
00000708 00000000000006C8                    788+         dc ad(@LNAME1077)                                              02-DCCCA
00000710                                     789+         ds 0d                                                          02-DCCCA
00000710 00000000000006D8                    790+         dc ad($eye0018)                                                02-DCCCA
00000718 0000000000000000                    791+         dc ad(0)                                                       02-DCCCA
00000720                                     792+         ds    0d                                                       01-DCCPR
00000720                                     793+rd_calloc ds   0d                                                       01-DCCPR
00000720                                     794+@REGION_1077_1 ds 0h                                                    01-DCCPR
00000720 EBEC D008 0024          00000008    795+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000726 E3E0 D088 0004          00000088    796+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000072C E3C0 D090 0004          00000090    797+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000732 B904 002E                           798+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000736 E3B0 C018 0004          00000018    799+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000073C A7EB 00D0               000000D0    800+         aghi  14,208              increase by frame size               01-DCCPR
00000740 E3E0 C020 0021          00000020    801+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000746 4720 B020               00000020    802+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000074A                                     803+@PER_1077 ds   0h                                                       01-DCCPR
0000074A EBDE 2080 0024          00000080    804+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000750 E3C0 2090 0024          00000090    805+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000756 B904 00D2                           806+         lgr   13,2                set real frame pointer               01-DCCPR
0000075A B904 00CF                           807+         lgr   12,15               set base reg                         01-DCCPR
                        00000720             808+         using @REGION_1077_1,12                                        01-DCCPR
                                             809 * ******* End of Prologue
                                             810 * *
                                             811 * ***      void *p = calloc(num, sz);
0000075E E3F0 1000 0004          00000000    812          LG    15,0(0,1)   ; num
00000764 E3F0 D0B0 0024          000000B0    813          STG   15,176(0,13)
0000076A E3F0 1008 0004          00000008    814          LG    15,8(0,1)   ; sz
00000770 E3F0 D0B8 0024          000000B8    815          STG   15,184(0,13)
                                                                                                                           Page   21 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000776 4110 D0B0               000000B0    816          LA    1,176(0,13)
0000077A E3F0 C0F8 0004          00000818    817          LG    15,@lit_1077_16 ; calloc
00000780                                     818 @@gen_label18 DS    0H
00000780 05EF                                819          BALR  14,15
00000782                                     820 @@gen_label19 DS    0H
00000782 B904 002F                           821          LGR   2,15
                                             822 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             823 * ka\\src\\rd.h", 122, "p"));
00000786 B902 00F2                           824          LTGR  15,2
0000078A 4770 C0A2               000007C2    825          BNZ   @L32
0000078E                                     826 @L31     DS    0H
0000078E E3F0 C110 0004          00000830    827          LG    15,@lit_1077_17
00000794 E3F0 D0B0 0024          000000B0    828          STG   15,176(0,13)
0000079A E3F0 C108 0004          00000828    829          LG    15,@lit_1077_18
000007A0 E3F0 D0B8 0024          000000B8    830          STG   15,184(0,13)
000007A6 E548 D0C0 007A          000000C0    831          MVGHI 192(13),122
000007AC 41F0 F020               00000020    832          LA    15,32(0,15)
000007B0 E3F0 D0C8 0024          000000C8    833          STG   15,200(0,13)
000007B6 4110 D0B0               000000B0    834          LA    1,176(0,13)
000007BA E3F0 C100 0004          00000820    835          LG    15,@lit_1077_19 ; __assert
000007C0                                     836 @@gen_label21 DS    0H
000007C0 05EF                                837          BALR  14,15
000007C2                                     838 @@gen_label22 DS    0H
000007C2                                     839 @L32     DS    0H
                                             840 * ***      return p;
000007C2 B904 00F2                           841          LGR   15,2
                                             842 * ***   }
                                             843 * * **** Start of Epilogue
                                             844          DCCEPIL
000007C6                                     845+         ds 0h                                                          01-DCCEP
                                             846+* Epilog
000007C6 D707 D088 D088 00000088 00000088    847+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000007CC E3D0 D080 0004          00000080    848+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000007D2 E3C0 D090 0004          00000090    849+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000007D8 E3B0 C018 0004          00000018    850+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000007DE E3C0 B010 0021          00000010    851+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000007E4 E3E0 D008 0004          00000008    852+         lg  14,8(0,13)          load up return address                 01-DCCEP
000007EA EB1C D020 0004          00000020    853+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000007F0 078E                                854+         bcr 8,14                if same dsab, just return              01-DCCEP
000007F2 E3F0 D010 0024          00000010    855+         stg 15,16(0,13)         save return code                       01-DCCEP
000007F8 E300 D018 0024          00000018    856+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007FE E3F0 D090 0004          00000090    857+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000804 E3F0 F018 0004          00000018    858+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000080A 47F0 F040               00000040    859+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             860+* End of Epilog
                                             861 * * **** End of Epilogue
00000810                                     862          DS    0D
00000810 000000D0                            863 @FRAMESIZE_1077 DC F'208'
00000814 00000000
00000818 0000000000000000                    864 @lit_1077_16 DC AD(calloc)
00000820 0000000000000000                    865 @lit_1077_19 DC AD(__assert)
00000828 0000000000005722                    866 @lit_1077_18 DC AD(@strings@)
                                                                                                                           Page   22 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000830 00000000000054D8                    867 @lit_1077_17 DC AD(@DATA)
                                             868          DROP  12
                                             869 *
                                             870 *   DSECT for automatic variables in "rd_calloc"
                                             871 *      (FUNCTION #1077)
                                             872 *
00000000                00000000 000000A8    873 @AUTO#rd_calloc DSECT
00000000                                     874          DS    XL168
                                             875 *
00000838                00000000 000054D2    876 @CODE    CSECT
                                             877 *
                                             878 *
                                             879 *
                                             880 * ....... start of rd_free
00000838                                     881 @LNAME1080 DS  0H
00000838 00000007                            882          DC    X'00000007'
0000083C 99846D86998585                      883          DC    C'rd_free'
00000843 00                                  884          DC    X'00'
                                             885 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1080
                                             886          macro
                                             887          dccextrn &m
                                             888          gblc    &$dccext(1000)
                                             889          gbla    &$dccexti
                                             890          lcla    &i
                                             891 &$dccext(&$dccexti+1) setc    '&m'
                                             892 &i       seta    1
                                             893 .loop    aif    (&i gt &$dccexti).around
                                             894          aif    ('&$dccext(&i)' eq '&m').getout
                                             895 &i       seta    &i+1
                                             896          ago     .loop
                                             897 .around  anop
                                             898 &$dccexti seta &$dccexti+1
                                             899          extrn  &m
                                             900 .getout  anop
                                             901          mend
00000848                                     902+$eye0021    ds    0d                                                    02-DCCCA
00000848 C4C3C3                              903+         dc cl3'DCC'                                                    02-DCCCA
0000084B 01                                  904+         dc xl1'01' format one                                          02-DCCCA
0000084C 00000000                            905+         dc a(0)                                                        02-DCCCA
00000850 00000000000008BA                    906+         dc ad(@PER_1080)                                               02-DCCCA
00000858 00000000000000B0                    907+         dc ad(176)                                                     02-DCCCA
00000860 0000000000000000                    908+         dc ad(0)                                                       02-DCCCA
00000868 0000000000001000                    909+         dc ad(4096)                                                    02-DCCCA
00000870 20                                  910+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000871 03                                  911+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000872 03                                  912+         dc al1(3)                                                      02-DCCCA
00000873 08                                  913+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000874 00                                  914+         dc bl.8'00000000'                                              02-DCCCA
00000875 000000                              915+         dc al3(0)                                                      02-DCCCA
00000878 0000000000000838                    916+         dc ad(@LNAME1080)                                              02-DCCCA
00000880                                     917+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000880 0000000000000848                    918+         dc ad($eye0021)                                                02-DCCCA
00000888 0000000000000000                    919+         dc ad(0)                                                       02-DCCCA
00000890                                     920+         ds    0d                                                       01-DCCPR
00000890                                     921+rd_free  ds    0d                                                       01-DCCPR
00000890                                     922+@REGION_1080_1 ds 0h                                                    01-DCCPR
00000890 EBEC D008 0024          00000008    923+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000896 E3E0 D088 0004          00000088    924+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000089C E3C0 D090 0004          00000090    925+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000008A2 B904 002E                           926+         lgr   2,14                copy addr of our savearea            01-DCCPR
000008A6 E3B0 C018 0004          00000018    927+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000008AC A7EB 00B0               000000B0    928+         aghi  14,176              increase by frame size               01-DCCPR
000008B0 E3E0 C020 0021          00000020    929+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000008B6 4720 B020               00000020    930+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000008BA                                     931+@PER_1080 ds   0h                                                       01-DCCPR
000008BA EBDE 2080 0024          00000080    932+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000008C0 E3C0 2090 0024          00000090    933+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000008C6 B904 00D2                           934+         lgr   13,2                set real frame pointer               01-DCCPR
000008CA B904 00CF                           935+         lgr   12,15               set base reg                         01-DCCPR
                        00000890             936+         using @REGION_1080_1,12                                        01-DCCPR
                                             937 * ******* End of Prologue
                                             938 * *
                                             939 * ***      free(ptr);
000008CE E3F0 1000 0004          00000000    940          LG    15,0(0,1)   ; ptr
000008D4 E3F0 D0A8 0024          000000A8    941          STG   15,168(0,13)
000008DA 4110 D0A8               000000A8    942          LA    1,168(0,13)
000008DE E3F0 C0A8 0004          00000938    943          LG    15,@lit_1080_21 ; free
000008E4                                     944 @@gen_label23 DS    0H
000008E4 05EF                                945          BALR  14,15
000008E6                                     946 @@gen_label24 DS    0H
                                             947 * ***   }
000008E6                                     948 @ret_lab_1080 DS 0H
                                             949 * * **** Start of Epilogue
                                             950          DCCEPIL
000008E6                                     951+         ds 0h                                                          01-DCCEP
                                             952+* Epilog
000008E6 D707 D088 D088 00000088 00000088    953+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000008EC E3D0 D080 0004          00000080    954+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008F2 E3C0 D090 0004          00000090    955+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008F8 E3B0 C018 0004          00000018    956+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008FE E3C0 B010 0021          00000010    957+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000904 E3E0 D008 0004          00000008    958+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000090A EB1C D020 0004          00000020    959+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000910 078E                                960+         bcr 8,14                if same dsab, just return              01-DCCEP
00000912 E3F0 D010 0024          00000010    961+         stg 15,16(0,13)         save return code                       01-DCCEP
00000918 E300 D018 0024          00000018    962+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000091E E3F0 D090 0004          00000090    963+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000924 E3F0 F018 0004          00000018    964+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000092A 47F0 F040               00000040    965+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             966+* End of Epilog
                                             967 * * **** End of Epilogue
00000930                                     968          DS    0D
00000930 000000B0                            969 @FRAMESIZE_1080 DC F'176'
                                                                                                                           Page   24 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000934 00000000
00000938 0000000000000000                    970 @lit_1080_21 DC AD(free)
                                             971          DROP  12
                                             972 *
                                             973 *   DSECT for automatic variables in "rd_free"
                                             974 *      (FUNCTION #1080)
                                             975 *
00000000                00000000 000000A8    976 @AUTO#rd_free DSECT
00000000                                     977          DS    XL168
                                             978 *
00000940                00000000 000054D2    979 @CODE    CSECT
                                             980 *
                                             981 *
                                             982 *
                                             983 * ....... start of rd_refcnt_sub0
00000940                                     984 @LNAME1084 DS  0H
00000940 0000000E                            985          DC    X'0000000E'
00000944 99846D9985868395                    986          DC    C'rd_refcnt_sub0'
00000952 00                                  987          DC    X'00'
                                             988 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                             989          macro
                                             990          dccextrn &m
                                             991          gblc    &$dccext(1000)
                                             992          gbla    &$dccexti
                                             993          lcla    &i
                                             994 &$dccext(&$dccexti+1) setc    '&m'
                                             995 &i       seta    1
                                             996 .loop    aif    (&i gt &$dccexti).around
                                             997          aif    ('&$dccext(&i)' eq '&m').getout
                                             998 &i       seta    &i+1
                                             999          ago     .loop
                                            1000 .around  anop
                                            1001 &$dccexti seta &$dccexti+1
                                            1002          extrn  &m
                                            1003 .getout  anop
                                            1004          mend
00000958                                    1005+$eye0024    ds    0d                                                    02-DCCCA
00000958 C4C3C3                             1006+         dc cl3'DCC'                                                    02-DCCCA
0000095B 01                                 1007+         dc xl1'01' format one                                          02-DCCCA
0000095C 00000000                           1008+         dc a(0)                                                        02-DCCCA
00000960 00000000000009CA                   1009+         dc ad(@PER_1084)                                               02-DCCCA
00000968 00000000000000D0                   1010+         dc ad(208)                                                     02-DCCCA
00000970 0000000000000000                   1011+         dc ad(0)                                                       02-DCCCA
00000978 0000000000001000                   1012+         dc ad(4096)                                                    02-DCCCA
00000980 20                                 1013+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000981 03                                 1014+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000982 03                                 1015+         dc al1(3)                                                      02-DCCCA
00000983 08                                 1016+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000984 00                                 1017+         dc bl.8'00000000'                                              02-DCCCA
00000985 000000                             1018+         dc al3(0)                                                      02-DCCCA
00000988 0000000000000940                   1019+         dc ad(@LNAME1084)                                              02-DCCCA
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000990                                    1020+         ds 0d                                                          02-DCCCA
00000990 0000000000000958                   1021+         dc ad($eye0024)                                                02-DCCCA
00000998 0000000000000000                   1022+         dc ad(0)                                                       02-DCCCA
000009A0                                    1023+         ds    0d                                                       01-DCCPR
000009A0                                    1024+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
000009A0                                    1025+@REGION_1084_1 ds 0h                                                    01-DCCPR
000009A0 EBEC D008 0024          00000008   1026+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000009A6 E3E0 D088 0004          00000088   1027+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000009AC E3C0 D090 0004          00000090   1028+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000009B2 B904 002E                          1029+         lgr   2,14                copy addr of our savearea            01-DCCPR
000009B6 E3B0 C018 0004          00000018   1030+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000009BC A7EB 00D0               000000D0   1031+         aghi  14,208              increase by frame size               01-DCCPR
000009C0 E3E0 C020 0021          00000020   1032+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000009C6 4720 B020               00000020   1033+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000009CA                                    1034+@PER_1084 ds   0h                                                       01-DCCPR
000009CA EBDE 2080 0024          00000080   1035+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000009D0 E3C0 2090 0024          00000090   1036+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000009D6 B904 00D2                          1037+         lgr   13,2                set real frame pointer               01-DCCPR
000009DA B904 00CF                          1038+         lgr   12,15               set base reg                         01-DCCPR
                        000009A0            1039+         using @REGION_1084_1,12                                        01-DCCPR
                                            1040 * ******* End of Prologue
                                            1041 * *
                                            1042 * ***           int r;
                                            1043 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                            1044 * ***           r = rd_atomic32_sub(R, 1);
000009DE E3F0 1000 0004          00000000   1045          LG    15,0(0,1)   ; R
000009E4 E3F0 D0B0 0024          000000B0   1046          STG   15,176(0,13)
000009EA E548 D0B8 0001          000000B8   1047          MVGHI 184(13),1
000009F0 4110 D0B0               000000B0   1048          LA    1,176(0,13)
000009F4 E3F0 C100 0004          00000AA0   1049          LG    15,@lit_1084_23 ; rd_atomic32_sub
000009FA                                    1050 @@gen_label25 DS    0H
000009FA 05EF                               1051          BALR  14,15
000009FC                                    1052 @@gen_label26 DS    0H
000009FC 122F                               1053          LTR   2,15
                                            1054 * ***
                                            1055 * ***           if (r < 0)
000009FE 47B0 C0A6               00000A46   1056          BNL   @L41
                                            1057 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                            1058 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                            1059 * zero\""));
00000A02 E3F0 C108 0004          00000AA8   1060          LG    15,@lit_1084_24
00000A08 4110 F022               00000022   1061          LA    1,34(0,15)
00000A0C 9500 1000      00000000 00000000   1062          CLI   0(1),0
00000A10 4780 C0A6               00000A46   1063          BE    @L41
00000A14                                    1064 @L42     DS    0H
00000A14 E310 C118 0004          00000AB8   1065          LG    1,@lit_1084_25
00000A1A 4110 1036               00000036   1066          LA    1,54(0,1)
00000A1E E310 D0B0 0024          000000B0   1067          STG   1,176(0,13)
00000A24 E3F0 D0B8 0024          000000B8   1068          STG   15,184(0,13)
00000A2A E548 D0C0 014F          000000C0   1069          MVGHI 192(13),335
00000A30 41F0 F032               00000032   1070          LA    15,50(0,15)
00000A34 E3F0 D0C8 0024          000000C8   1071          STG   15,200(0,13)
                                                                                                                           Page   26 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000A3A 4110 D0B0               000000B0   1072          LA    1,176(0,13)
00000A3E E3F0 C110 0004          00000AB0   1073          LG    15,@lit_1084_26 ; __assert
00000A44                                    1074 @@gen_label29 DS    0H
00000A44 05EF                               1075          BALR  14,15
00000A46                                    1076 @@gen_label30 DS    0H
00000A46                                    1077 @L43     DS    0H
00000A46                                    1078 @L41     DS    0H
                                            1079 * ***           return r;
00000A46 B914 00F2                          1080          LGFR  15,2
                                            1081 * ***   }
                                            1082 * * **** Start of Epilogue
                                            1083          DCCEPIL
00000A4A                                    1084+         ds 0h                                                          01-DCCEP
                                            1085+* Epilog
00000A4A D707 D088 D088 00000088 00000088   1086+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A50 E3D0 D080 0004          00000080   1087+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000A56 E3C0 D090 0004          00000090   1088+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A5C E3B0 C018 0004          00000018   1089+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A62 E3C0 B010 0021          00000010   1090+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A68 E3E0 D008 0004          00000008   1091+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A6E EB1C D020 0004          00000020   1092+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000A74 078E                               1093+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A76 E3F0 D010 0024          00000010   1094+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A7C E300 D018 0024          00000018   1095+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A82 E3F0 D090 0004          00000090   1096+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A88 E3F0 F018 0004          00000018   1097+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A8E 47F0 F040               00000040   1098+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1099+* End of Epilog
                                            1100 * * **** End of Epilogue
00000A98                                    1101          DS    0D
00000A98 000000D0                           1102 @FRAMESIZE_1084 DC F'208'
00000A9C 00000000
00000AA0 00000000000004A8                   1103 @lit_1084_23 DC AD(rd_atomic32_sub)
00000AA8 0000000000005722                   1104 @lit_1084_24 DC AD(@strings@)
00000AB0 0000000000000000                   1105 @lit_1084_26 DC AD(__assert)
00000AB8 00000000000054D8                   1106 @lit_1084_25 DC AD(@DATA)
                                            1107          DROP  12
                                            1108 *
                                            1109 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                            1110 *      (FUNCTION #1084)
                                            1111 *
00000000                00000000 000000AC   1112 @AUTO#rd_refcnt_sub0 DSECT
00000000                                    1113          DS    XL168
000000A8                                    1114 rd_refcnt_sub0#r#0 DS 1F   ; r
                                            1115 *
00000AC0                00000000 000054D2   1116 @CODE    CSECT
                                            1117 *
                                            1118 *
                                            1119 *
                                            1120 * ....... start of rd_clock
00000AC0                                    1121 @LNAME1088 DS  0H
00000AC0 00000008                           1122          DC    X'00000008'
                                                                                                                           Page   27 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000AC4 99846D8393968392                   1123          DC    C'rd_clock'
00000ACC 00                                 1124          DC    X'00'
                                            1125 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                            1126          macro
                                            1127          dccextrn &m
                                            1128          gblc    &$dccext(1000)
                                            1129          gbla    &$dccexti
                                            1130          lcla    &i
                                            1131 &$dccext(&$dccexti+1) setc    '&m'
                                            1132 &i       seta    1
                                            1133 .loop    aif    (&i gt &$dccexti).around
                                            1134          aif    ('&$dccext(&i)' eq '&m').getout
                                            1135 &i       seta    &i+1
                                            1136          ago     .loop
                                            1137 .around  anop
                                            1138 &$dccexti seta &$dccexti+1
                                            1139          extrn  &m
                                            1140 .getout  anop
                                            1141          mend
00000AD0                                    1142+$eye0027    ds    0d                                                    02-DCCCA
00000AD0 C4C3C3                             1143+         dc cl3'DCC'                                                    02-DCCCA
00000AD3 01                                 1144+         dc xl1'01' format one                                          02-DCCCA
00000AD4 00000000                           1145+         dc a(0)                                                        02-DCCCA
00000AD8 0000000000000B42                   1146+         dc ad(@PER_1088)                                               02-DCCCA
00000AE0 00000000000000C8                   1147+         dc ad(200)                                                     02-DCCCA
00000AE8 0000000000000000                   1148+         dc ad(0)                                                       02-DCCCA
00000AF0 0000000000001000                   1149+         dc ad(4096)                                                    02-DCCCA
00000AF8 20                                 1150+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AF9 03                                 1151+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AFA 03                                 1152+         dc al1(3)                                                      02-DCCCA
00000AFB 08                                 1153+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AFC 00                                 1154+         dc bl.8'00000000'                                              02-DCCCA
00000AFD 000000                             1155+         dc al3(0)                                                      02-DCCCA
00000B00 0000000000000AC0                   1156+         dc ad(@LNAME1088)                                              02-DCCCA
00000B08                                    1157+         ds 0d                                                          02-DCCCA
00000B08 0000000000000AD0                   1158+         dc ad($eye0027)                                                02-DCCCA
00000B10 0000000000000000                   1159+         dc ad(0)                                                       02-DCCCA
00000B18                                    1160+         ds    0d                                                       01-DCCPR
00000B18                                    1161+rd_clock ds    0d                                                       01-DCCPR
00000B18                                    1162+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000B18 EBEC D008 0024          00000008   1163+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B1E E3E0 D088 0004          00000088   1164+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B24 E3C0 D090 0004          00000090   1165+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B2A B904 002E                          1166+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B2E E3B0 C018 0004          00000018   1167+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B34 A7EB 00C8               000000C8   1168+         aghi  14,200              increase by frame size               01-DCCPR
00000B38 E3E0 C020 0021          00000020   1169+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B3E 4720 B020               00000020   1170+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B42                                    1171+@PER_1088 ds   0h                                                       01-DCCPR
00000B42 EBDE 2080 0024          00000080   1172+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B48 E3C0 2090 0024          00000090   1173+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000B4E B904 00D2                          1174+         lgr   13,2                set real frame pointer               01-DCCPR
00000B52 B904 00CF                          1175+         lgr   12,15               set base reg                         01-DCCPR
                        00000B18            1176+         using @REGION_1088_1,12                                        01-DCCPR
                                            1177 * ******* End of Prologue
                                            1178 * *
                                            1179 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1180 * ***       struct timeval tv;
                                            1181 * ***       gettimeofday(&tv, ((void *)0));
00000B56 41F0 D0A8               000000A8   1182          LA    15,168(0,13)
00000B5A E3F0 D0B8 0024          000000B8   1183          STG   15,184(0,13)
00000B60 D707 D0C0 D0C0 000000C0 000000C0   1184          XC    192(8,13),192(13)
00000B66 4110 D0B8               000000B8   1185          LA    1,184(0,13)
00000B6A E3F0 C0C0 0004          00000BD8   1186          LG    15,@lit_1088_28 ; gettimeofday
00000B70                                    1187 @@gen_label31 DS    0H
00000B70 05EF                               1188          BALR  14,15
00000B72                                    1189 @@gen_label32 DS    0H
                                            1190 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                            1191 * usec;
00000B72 E3F0 D0A8 0004          000000A8   1192          LG    15,168(0,13)
00000B78 C2F0 000F 4240                     1193          MSGFI 15,X'000F4240'
00000B7E E310 D0B0 0004          000000B0   1194          LG    1,176(0,13) ; offset of tv_usec in timeval
00000B84 B90A 00F1                          1195          ALGR  15,1
                                            1196 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1197 * ***   }
                                            1198 * * **** Start of Epilogue
                                            1199          DCCEPIL
00000B88                                    1200+         ds 0h                                                          01-DCCEP
                                            1201+* Epilog
00000B88 D707 D088 D088 00000088 00000088   1202+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000B8E E3D0 D080 0004          00000080   1203+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000B94 E3C0 D090 0004          00000090   1204+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000B9A E3B0 C018 0004          00000018   1205+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BA0 E3C0 B010 0021          00000010   1206+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BA6 E3E0 D008 0004          00000008   1207+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BAC EB1C D020 0004          00000020   1208+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000BB2 078E                               1209+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BB4 E3F0 D010 0024          00000010   1210+         stg 15,16(0,13)         save return code                       01-DCCEP
00000BBA E300 D018 0024          00000018   1211+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000BC0 E3F0 D090 0004          00000090   1212+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000BC6 E3F0 F018 0004          00000018   1213+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000BCC 47F0 F040               00000040   1214+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1215+* End of Epilog
                                            1216 * * **** End of Epilogue
00000BD0                                    1217          DS    0D
00000BD0 000000C8                           1218 @FRAMESIZE_1088 DC F'200'
00000BD4 00000000
00000BD8 0000000000000000                   1219 @lit_1088_28 DC AD(gettimeofday)
                                            1220          DROP  12
                                            1221 *
                                            1222 *   DSECT for automatic variables in "rd_clock"
                                            1223 *      (FUNCTION #1088)
                                            1224 *
                                                                                                                           Page   29 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                00000000 000000B8   1225 @AUTO#rd_clock DSECT
00000000                                    1226          DS    XL168
000000A8                                    1227 rd_clock#tv#0 DS 16XL1     ; tv
                                            1228 *
00000BE0                00000000 000054D2   1229 @CODE    CSECT
                                            1230 *
                                            1231 *
                                            1232 *
                                            1233 * ....... start of rd_buf_len
00000BE0                                    1234 @LNAME1270 DS  0H
00000BE0 0000000A                           1235          DC    X'0000000A'
00000BE4 99846D82A4866D93                   1236          DC    C'rd_buf_len'
00000BEE 00                                 1237          DC    X'00'
                                            1238 rd_buf_len DCCPRLG CINDEX=1270,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1270
                                            1239          macro
                                            1240          dccextrn &m
                                            1241          gblc    &$dccext(1000)
                                            1242          gbla    &$dccexti
                                            1243          lcla    &i
                                            1244 &$dccext(&$dccexti+1) setc    '&m'
                                            1245 &i       seta    1
                                            1246 .loop    aif    (&i gt &$dccexti).around
                                            1247          aif    ('&$dccext(&i)' eq '&m').getout
                                            1248 &i       seta    &i+1
                                            1249          ago     .loop
                                            1250 .around  anop
                                            1251 &$dccexti seta &$dccexti+1
                                            1252          extrn  &m
                                            1253 .getout  anop
                                            1254          mend
00000BF0                                    1255+$eye0030    ds    0d                                                    02-DCCCA
00000BF0 C4C3C3                             1256+         dc cl3'DCC'                                                    02-DCCCA
00000BF3 01                                 1257+         dc xl1'01' format one                                          02-DCCCA
00000BF4 00000000                           1258+         dc a(0)                                                        02-DCCCA
00000BF8 0000000000000000                   1259+         dc ad(0)                                                       02-DCCCA
00000C00 00000000000000A8                   1260+         dc ad(168)                                                     02-DCCCA
00000C08 0000000000000000                   1261+         dc ad(0)                                                       02-DCCCA
00000C10 0000000000001000                   1262+         dc ad(4096)                                                    02-DCCCA
00000C18 20                                 1263+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C19 03                                 1264+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C1A 03                                 1265+         dc al1(3)                                                      02-DCCCA
00000C1B 08                                 1266+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C1C 00                                 1267+         dc bl.8'00000000'                                              02-DCCCA
00000C1D 000000                             1268+         dc al3(0)                                                      02-DCCCA
00000C20 0000000000000BE0                   1269+         dc ad(@LNAME1270)                                              02-DCCCA
00000C28                                    1270+         ds 0d                                                          02-DCCCA
00000C28 0000000000000BF0                   1271+         dc ad($eye0030)                                                02-DCCCA
00000C30 0000000000000000                   1272+         dc ad(0)                                                       02-DCCCA
00000C38                                    1273+         ds    0d                                                       01-DCCPR
00000C38                                    1274+rd_buf_len ds  0d                                                       01-DCCPR
00000C38                                    1275+@REGION_1270_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000C38 EBEC D008 0024          00000008   1276+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1277 * ******* End of Prologue
                                            1278 * *
                                            1279 * ***           return rbuf->rbuf_len;
00000C3E E3F0 1000 0004          00000000   1280          LG    15,0(0,1)   ; rbuf
00000C44 E3F0 F020 0004          00000020   1281          LG    15,32(0,15) ; offset of rbuf_len in rd_buf_s
                                            1282 * ***   }
                                            1283 * * **** Start of Epilogue
                                            1284          DCCEPIL
00000C4A                                    1285+         ds 0h                                                          01-DCCEP
                                            1286+* Epilog
                                            1287+* Epilog
00000C4A E3E0 D008 0004          00000008   1288+         lg    14,8(,13) restore the reg                                01-DCCEP
00000C50 EB1C D020 0004          00000020   1289+         lmg   1,12,32(13)                                              01-DCCEP
00000C56 07FE                               1290+         br   14                                                        01-DCCEP
                                            1291+* End of Epilog
                                            1292 * * **** End of Epilogue
                                            1293 *
                                            1294 *   DSECT for automatic variables in "rd_buf_len"
                                            1295 *      (FUNCTION #1270)
                                            1296 *
00000000                00000000 000000A8   1297 @AUTO#rd_buf_len DSECT
00000000                                    1298          DS    XL168
                                            1299 *
00000C58                00000000 000054D2   1300 @CODE    CSECT
                                            1301 *
                                            1302 *
                                            1303 *
                                            1304 * ....... start of rd_uvarint_enc_u64
00000C58                                    1305 @LNAME1308 DS  0H
00000C58 00000012                           1306          DC    X'00000012'
00000C5C 99846DA4A5819989                   1307          DC    C'rd_uvarint_enc_u64'
00000C6E 00                                 1308          DC    X'00'
                                            1309 rd_uvarint_enc_u64 DCCPRLG CINDEX=1308,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1308
                                            1310          macro
                                            1311          dccextrn &m
                                            1312          gblc    &$dccext(1000)
                                            1313          gbla    &$dccexti
                                            1314          lcla    &i
                                            1315 &$dccext(&$dccexti+1) setc    '&m'
                                            1316 &i       seta    1
                                            1317 .loop    aif    (&i gt &$dccexti).around
                                            1318          aif    ('&$dccext(&i)' eq '&m').getout
                                            1319 &i       seta    &i+1
                                            1320          ago     .loop
                                            1321 .around  anop
                                            1322 &$dccexti seta &$dccexti+1
                                            1323          extrn  &m
                                            1324 .getout  anop
                                            1325          mend
00000C70                                    1326+$eye0033    ds    0d                                                    02-DCCCA
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000C70 C4C3C3                             1327+         dc cl3'DCC'                                                    02-DCCCA
00000C73 01                                 1328+         dc xl1'01' format one                                          02-DCCCA
00000C74 00000000                           1329+         dc a(0)                                                        02-DCCCA
00000C78 0000000000000000                   1330+         dc ad(0)                                                       02-DCCCA
00000C80 00000000000000B0                   1331+         dc ad(176)                                                     02-DCCCA
00000C88 0000000000000000                   1332+         dc ad(0)                                                       02-DCCCA
00000C90 0000000000001000                   1333+         dc ad(4096)                                                    02-DCCCA
00000C98 20                                 1334+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C99 03                                 1335+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C9A 03                                 1336+         dc al1(3)                                                      02-DCCCA
00000C9B 08                                 1337+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C9C 00                                 1338+         dc bl.8'00000000'                                              02-DCCCA
00000C9D 000000                             1339+         dc al3(0)                                                      02-DCCCA
00000CA0 0000000000000C58                   1340+         dc ad(@LNAME1308)                                              02-DCCCA
00000CA8                                    1341+         ds 0d                                                          02-DCCCA
00000CA8 0000000000000C70                   1342+         dc ad($eye0033)                                                02-DCCCA
00000CB0 0000000000000000                   1343+         dc ad(0)                                                       02-DCCCA
00000CB8                                    1344+         ds    0d                                                       01-DCCPR
00000CB8                                    1345+rd_uvarint_enc_u64 ds 0d                                                01-DCCPR
00000CB8                                    1346+@REGION_1308_1 ds 0h                                                    01-DCCPR
00000CB8 EBEC D008 0024          00000008   1347+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000CBE B904 00CF                          1348+         lgr   12,15               set base reg                         01-DCCPR
                        00000CB8            1349+         using @REGION_1308_1,12                                        01-DCCPR
00000CC2 B904 0021                          1350          LGR   2,1         ; ptr to parm area
                                            1351 * ******* End of Prologue
                                            1352 * *
                                            1353 * ***           size_t of = 0;
00000CC6 E3F0 2010 0004          00000010   1354          LG    15,16(0,2)  ; num
00000CCC A719 0000               00000000   1355          LGHI  1,0         ; 0
                                            1356 * ***
                                            1357 * ***           do {
00000CD0                                    1358 @L105    DS    0H
                                            1359 * ***                   if (((of >= dstsize)))
00000CD0 E310 2008 0021          00000008   1360          CLG   1,8(0,2)
00000CD6 4740 C038               00000CF0   1361          BL    @L108
                                            1362 * ***                           return 0;
00000CDA A7F9 0000               00000000   1363          LGHI  15,0        ; 0
00000CDE 47F0 C084               00000D3C   1364          B     @ret_lab_1308
00000CE8                                    1365          DS    0D
00000CE8 000000000000007F                   1366 @lit_1308_32 DC FD'127' 0x000000000000007f
00000CF0                                    1367 @L108    DS    0H
                                            1368 * ***
                                            1369 * ***                   dst[of++] = (num & 0x7f) | (num > 0x7f ? 0x80 \
                                            1370 * : 0);
00000CF0 E330 2000 0004          00000000   1371          LG    3,0(0,2)    ; dst
00000CF6 B904 0041                          1372          LGR   4,1
00000CFA A71B 0001               00000001   1373          AGHI  1,1
00000CFE B904 005F                          1374          LGR   5,15
00000D02 E350 C030 0080          00000CE8   1375          NG    5,@lit_1308_32
00000D08 C2FE 0000 007F                     1376          CLGFI 15,X'0000007F'
00000D0E 47D0 C062               00000D1A   1377          BNH   @L109
00000D12 A768 0080               00000080   1378          LHI   6,128       ; 128
                                                                                                                           Page   32 
  Active Usings: @REGION_1308_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000D16 47F0 C066               00000D1E   1379          B     @L110
00000D1A                                    1380 @L109    DS    0H
00000D1A A768 0000               00000000   1381          LHI   6,0         ; 0
00000D1E                                    1382 @L110    DS    0H
00000D1E B914 0066                          1383          LGFR  6,6
00000D22 B981 0056                          1384          OGR   5,6
00000D26 4254 3000               00000000   1385          STC   5,0(4,3)
                                            1386 * ***                   num >>= 7;
00000D2A EBFF 0007 000C          00000007   1387          SRLG  15,15,7(0)
                                            1388 * ***           } while (num);
00000D30 B902 003F                          1389          LTGR  3,15
00000D34 4770 C018               00000CD0   1390          BNZ   @L105
                                            1391 * ***
                                            1392 * ***           return of;
00000D38 B904 00F1                          1393          LGR   15,1
                                            1394 * ***   }
00000D3C                                    1395 @ret_lab_1308 DS 0H
                                            1396 * * **** Start of Epilogue
                                            1397          DCCEPIL
00000D3C                                    1398+         ds 0h                                                          01-DCCEP
                                            1399+* Epilog
                                            1400+* Epilog
00000D3C E3E0 D008 0004          00000008   1401+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D42 EB1C D020 0004          00000020   1402+         lmg   1,12,32(13)                                              01-DCCEP
00000D48 07FE                               1403+         br   14                                                        01-DCCEP
                                            1404+* End of Epilog
                                            1405 * * **** End of Epilogue
                                            1406          DROP  12
                                            1407 *
                                            1408 *   DSECT for automatic variables in "rd_uvarint_enc_u64"
                                            1409 *      (FUNCTION #1308)
                                            1410 *
00000000                00000000 000000B0   1411 @AUTO#rd_uvarint_enc_u64 DSECT
00000000                                    1412          DS    XL168
000000A8                                    1413 rd_uvarint_enc_u64#of#0 DS 8XL1 ; of
                                            1414 *
00000D4A                00000000 000054D2   1415 @CODE    CSECT
                                            1416 *
                                            1417 *
                                            1418 *
                                            1419 * ....... start of rd_kafka_ApiKey2str
00000D4A                                    1420 @LNAME1314 DS  0H
00000D4A 00000013                           1421          DC    X'00000013'
00000D4E 99846D9281869281                   1422          DC    C'rd_kafka_ApiKey2str'
00000D61 00                                 1423          DC    X'00'
                                            1424 rd_kafka_$Api$Key2str DCCPRLG CINDEX=1314,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1314
                                            1425          macro
                                            1426          dccextrn &m
                                            1427          gblc    &$dccext(1000)
                                            1428          gbla    &$dccexti
                                            1429          lcla    &i
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1430 &$dccext(&$dccexti+1) setc    '&m'
                                            1431 &i       seta    1
                                            1432 .loop    aif    (&i gt &$dccexti).around
                                            1433          aif    ('&$dccext(&i)' eq '&m').getout
                                            1434 &i       seta    &i+1
                                            1435          ago     .loop
                                            1436 .around  anop
                                            1437 &$dccexti seta &$dccexti+1
                                            1438          extrn  &m
                                            1439 .getout  anop
                                            1440          mend
00000D68                                    1441+$eye0036    ds    0d                                                    02-DCCCA
00000D68 C4C3C3                             1442+         dc cl3'DCC'                                                    02-DCCCA
00000D6B 01                                 1443+         dc xl1'01' format one                                          02-DCCCA
00000D6C 00000000                           1444+         dc a(0)                                                        02-DCCCA
00000D70 0000000000000DDA                   1445+         dc ad(@PER_1314)                                               02-DCCCA
00000D78 00000000000000C8                   1446+         dc ad(200)                                                     02-DCCCA
00000D80 0000000000000000                   1447+         dc ad(0)                                                       02-DCCCA
00000D88 0000000000001000                   1448+         dc ad(4096)                                                    02-DCCCA
00000D90 20                                 1449+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D91 03                                 1450+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D92 03                                 1451+         dc al1(3)                                                      02-DCCCA
00000D93 08                                 1452+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D94 00                                 1453+         dc bl.8'00000000'                                              02-DCCCA
00000D95 000000                             1454+         dc al3(0)                                                      02-DCCCA
00000D98 0000000000000D4A                   1455+         dc ad(@LNAME1314)                                              02-DCCCA
00000DA0                                    1456+         ds 0d                                                          02-DCCCA
00000DA0 0000000000000D68                   1457+         dc ad($eye0036)                                                02-DCCCA
00000DA8 0000000000000000                   1458+         dc ad(0)                                                       02-DCCCA
00000DB0                                    1459+         ds    0d                                                       01-DCCPR
00000DB0                                    1460+rd_kafka_$Api$Key2str ds 0d                                             01-DCCPR
00000DB0                                    1461+@REGION_1314_1 ds 0h                                                    01-DCCPR
00000DB0 EBEC D008 0024          00000008   1462+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DB6 E3E0 D088 0004          00000088   1463+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000DBC E3C0 D090 0004          00000090   1464+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DC2 B904 002E                          1465+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DC6 E3B0 C018 0004          00000018   1466+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DCC A7EB 00C8               000000C8   1467+         aghi  14,200              increase by frame size               01-DCCPR
00000DD0 E3E0 C020 0021          00000020   1468+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DD6 4720 B020               00000020   1469+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DDA                                    1470+@PER_1314 ds   0h                                                       01-DCCPR
00000DDA EBDE 2080 0024          00000080   1471+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DE0 E3C0 2090 0024          00000090   1472+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DE6 B904 00D2                          1473+         lgr   13,2                set real frame pointer               01-DCCPR
00000DEA B904 00CF                          1474+         lgr   12,15               set base reg                         01-DCCPR
                        00000DB0            1475+         using @REGION_1314_1,12                                        01-DCCPR
                                            1476          DCCPRV REG=15     ; Get PRV from DVT
00000DEE E3F0 B008 0004          00000008   1477+         LG 15,8(0,11)                                                  01-DCCPR
                                            1478 * ******* End of Prologue
                                            1479 * *
                                            1480 * ***           static const char *names[] = {
                                            1481 * ***                   [0] = "Produce",
                                                                                                                           Page   34 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1482 * ***                   [1] = "Fetch",
                                            1483 * ***                   [2] = "Offset",
                                            1484 * ***                   [3] = "Metadata",
                                            1485 * ***                   [4] = "LeaderAndIsr",
                                            1486 * ***                   [5] = "StopReplica",
                                            1487 * ***                   [6] = "UpdateMetadata",
                                            1488 * ***                   [7] = "ControlledShutdown",
                                            1489 * ***                   [8] = "OffsetCommit",
                                            1490 * ***                   [9] = "OffsetFetch",
                                            1491 * ***                   [10] = "FindCoordinator",
                                            1492 * ***                   [11] = "JoinGroup",
                                            1493 * ***                   [12] = "Heartbeat",
                                            1494 * ***                   [13] = "LeaveGroup",
                                            1495 * ***                   [14] = "SyncGroup",
                                            1496 * ***                   [15] = "DescribeGroups",
                                            1497 * ***                   [16] = "ListGroups",
                                            1498 * ***                   [17] = "SaslHandshake",
                                            1499 * ***                   [18] = "ApiVersion",
                                            1500 * ***                   [19] = "CreateTopics",
                                            1501 * ***                   [20] = "DeleteTopics",
                                            1502 * ***                   [21] = "DeleteRecords",
                                            1503 * ***                   [22] = "InitProducerId",
                                            1504 * ***                   [23] = "OffsetForLeaderEpoch",
                                            1505 * ***                   [24] = "AddPartitionsToTxn",
                                            1506 * ***                   [25] = "AddOffsetsToTxn",
                                            1507 * ***                   [26] = "EndTxn",
                                            1508 * ***                   [27] = "WriteTxnMarkers",
                                            1509 * ***                   [28] = "TxnOffsetCommit",
                                            1510 * ***                   [29] = "DescribeAcls",
                                            1511 * ***                   [30] = "CreateAcls",
                                            1512 * ***                   [31] = "DeleteAcls",
                                            1513 * ***                   [32] = "DescribeConfigs",
                                            1514 * ***                   [33] = "AlterConfigs",
                                            1515 * ***                   [34] = "AlterReplicaLogDirs",
                                            1516 * ***                   [35] = "DescribeLogDirs",
                                            1517 * ***                   [36] = "SaslAuthenticate",
                                            1518 * ***                   [37] = "CreatePartitions",
                                            1519 * ***                   [38] = "CreateDelegationToken",
                                            1520 * ***                   [39] = "RenewDelegationToken",
                                            1521 * ***                   [40] = "ExpireDelegationToken",
                                            1522 * ***                   [41] = "DescribeDelegationToken",
                                            1523 * ***                   [42] = "DeleteGroups",
                                            1524 * ***                   [43] = "ElectLeadersRequest",
                                            1525 * ***                   [44] =
                                            1526 * ***                   "IncrementalAlterConfigsRequest",
                                            1527 * ***                   [45] =
                                            1528 * ***                   "AlterPartitionReassignmentsRequest",
                                            1529 * ***                   [46] =
                                            1530 * ***                   "ListPartitionReassignmentsRequest",
                                            1531 * ***                   [47] = "OffsetDeleteRequest",
                                            1532 * ***                   [48] =
                                            1533 * ***                   "DescribeClientQuotasRequest",
                                                                                                                           Page   35 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1534 * ***                   [49] =
                                            1535 * ***                   "AlterClientQuotasRequest",
                                            1536 * ***                   [50] =
                                            1537 * ***                   "DescribeUserScramCredentialsRequest",
                                            1538 * ***                   [51] =
                                            1539 * ***                   "AlterUserScramCredentialsRequest",
                                            1540 * ***                   [52] = "VoteRequest",
                                            1541 * ***                   [53] = "BeginQuorumEpochRequest",
                                            1542 * ***                   [54] = "EndQuorumEpochRequest",
                                            1543 * ***                   [55] = "DescribeQuorumRequest",
                                            1544 * ***                   [56] = "AlterIsrRequest",
                                            1545 * ***                   [57] = "UpdateFeaturesRequest",
                                            1546 * ***                   [58] = "EnvelopeRequest",
                                            1547 * ***           };
                                            1548 * ***           static  char ret[64];
                                            1549 * ***
                                            1550 * ***           if (ApiKey < 0 || ApiKey >= (int)(sizeof((names)) / si\
                                            1551 * zeof(*(names))) ||
00000DF4 4820 1006               00000006   1552          LH    2,6(0,1)    ; ApiKey
00000DF8 1222                               1553          LTR   2,2
00000DFA 4740 C07A               00000E2A   1554          BL    @L119
00000DFE 4820 1006               00000006   1555          LH    2,6(0,1)    ; ApiKey
00000E02 A72E 003B               0000003B   1556          CHI   2,59
00000E06 47B0 C07A               00000E2A   1557          BNL   @L119
00000E0A                                    1558 @L117    DS    0H
                                            1559 * ***               !names[ApiKey]) {
00000E0A E320 1006 0015          00000006   1560          LGH   2,6(0,1)    ; ApiKey
00000E10 E330 C0CC 0014          00000E7C   1561          LGF   3,@lit_1314_35
00000E16 4133 F000               00000000   1562          LA    3,0(3,15)
00000E1A EB22 0003 000D          00000003   1563          SLLG  2,2,3(0)    ; *0x8
00000E20 E322 3220 0002          00000220   1564          LTG   2,544(2,3)
00000E26 4770 C0E0               00000E90   1565          BNZ   @L118
00000E2A                                    1566 @L119    DS    0H
                                            1567 * ***                   snprintf(ret, sizeof(ret), "Unknown-%hd?", Api\
                                            1568 * Key);
00000E2A E320 C0CC 0014          00000E7C   1569          LGF   2,@lit_1314_35
00000E30 4122 F000               00000000   1570          LA    2,0(2,15)
00000E34 41F0 23F8               000003F8   1571          LA    15,1016(0,2)
00000E38 E3F0 D0A8 0024          000000A8   1572          STG   15,168(0,13)
00000E3E E548 D0B0 0040          000000B0   1573          MVGHI 176(13),64
00000E44 E3F0 C0D8 0004          00000E88   1574          LG    15,@lit_1314_37
00000E4A 41F0 F046               00000046   1575          LA    15,70(0,15)
00000E4E E3F0 D0B8 0024          000000B8   1576          STG   15,184(0,13)
00000E54 48F0 1006               00000006   1577          LH    15,6(0,1)   ; ApiKey
00000E58 B914 00FF                          1578          LGFR  15,15
00000E5C E3F0 D0C0 0024          000000C0   1579          STG   15,192(0,13)
00000E62 4110 D0A8               000000A8   1580          LA    1,168(0,13)
00000E66 E3F0 C0D0 0004          00000E80   1581          LG    15,@lit_1314_38 ; snprintf
00000E6C                                    1582 @@gen_label39 DS    0H
00000E6C 05EF                               1583          BALR  14,15
00000E6E                                    1584 @@gen_label40 DS    0H
                                            1585 * ***                   return ret;
                                                                                                                           Page   36 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000E6E 41F0 23F8               000003F8   1586          LA    15,1016(0,2)
00000E72 47F0 C0F2               00000EA2   1587          B     @ret_lab_1314
00000E78                                    1588          DS    0D
00000E78 000000C8                           1589 @FRAMESIZE_1314 DC F'200'
00000E7C 00000000                           1590 @lit_1314_35 DC Q(@@STATIC)
00000E80 0000000000000000                   1591 @lit_1314_38 DC AD(snprintf)
00000E88 0000000000005722                   1592 @lit_1314_37 DC AD(@strings@)
                                            1593 * ***           }
00000E90                                    1594 @L118    DS    0H
                                            1595 * ***
                                            1596 * ***           return names[ApiKey];
00000E90 E3F0 1006 0015          00000006   1597          LGH   15,6(0,1)   ; ApiKey
00000E96 EBFF 0003 000D          00000003   1598          SLLG  15,15,3(0)  ; *0x8
00000E9C E3FF 3220 0004          00000220   1599          LG    15,544(15,3)
                                            1600 * ***   }
00000EA2                                    1601 @ret_lab_1314 DS 0H
                                            1602 * * **** Start of Epilogue
                                            1603          DCCEPIL
00000EA2                                    1604+         ds 0h                                                          01-DCCEP
                                            1605+* Epilog
00000EA2 D707 D088 D088 00000088 00000088   1606+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000EA8 E3D0 D080 0004          00000080   1607+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000EAE E3C0 D090 0004          00000090   1608+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000EB4 E3B0 C018 0004          00000018   1609+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000EBA E3C0 B010 0021          00000010   1610+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000EC0 E3E0 D008 0004          00000008   1611+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000EC6 EB1C D020 0004          00000020   1612+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000ECC 078E                               1613+         bcr 8,14                if same dsab, just return              01-DCCEP
00000ECE E3F0 D010 0024          00000010   1614+         stg 15,16(0,13)         save return code                       01-DCCEP
00000ED4 E300 D018 0024          00000018   1615+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000EDA E3F0 D090 0004          00000090   1616+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000EE0 E3F0 F018 0004          00000018   1617+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000EE6 47F0 F040               00000040   1618+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1619+* End of Epilog
                                            1620 * * **** End of Epilogue
                                            1621          DROP  12
                                            1622 *
                                            1623 *   DSECT for automatic variables in "rd_kafka_ApiKey2str"
                                            1624 *      (FUNCTION #1314)
                                            1625 *
00000000                00000000 000000A8   1626 @AUTO#rd_kafka_$Api$Key2str DSECT
00000000                                    1627          DS    XL168
                                            1628 *
00000EEA                00000000 000054D2   1629 @CODE    CSECT
                                            1630 *
                                            1631 *
                                            1632 *
                                            1633 * ....... start of rd_kafka_msgq_len
00000EEA                                    1634 @LNAME1337 DS  0H
00000EEA 00000011                           1635          DC    X'00000011'
00000EEE 99846D9281869281                   1636          DC    C'rd_kafka_msgq_len'
00000EFF 00                                 1637          DC    X'00'
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1638 rd_kafka_msgq_len DCCPRLG CINDEX=1337,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1337
                                            1639          macro
                                            1640          dccextrn &m
                                            1641          gblc    &$dccext(1000)
                                            1642          gbla    &$dccexti
                                            1643          lcla    &i
                                            1644 &$dccext(&$dccexti+1) setc    '&m'
                                            1645 &i       seta    1
                                            1646 .loop    aif    (&i gt &$dccexti).around
                                            1647          aif    ('&$dccext(&i)' eq '&m').getout
                                            1648 &i       seta    &i+1
                                            1649          ago     .loop
                                            1650 .around  anop
                                            1651 &$dccexti seta &$dccexti+1
                                            1652          extrn  &m
                                            1653 .getout  anop
                                            1654          mend
00000F00                                    1655+$eye0040    ds    0d                                                    02-DCCCA
00000F00 C4C3C3                             1656+         dc cl3'DCC'                                                    02-DCCCA
00000F03 01                                 1657+         dc xl1'01' format one                                          02-DCCCA
00000F04 00000000                           1658+         dc a(0)                                                        02-DCCCA
00000F08 0000000000000000                   1659+         dc ad(0)                                                       02-DCCCA
00000F10 00000000000000A8                   1660+         dc ad(168)                                                     02-DCCCA
00000F18 0000000000000000                   1661+         dc ad(0)                                                       02-DCCCA
00000F20 0000000000001000                   1662+         dc ad(4096)                                                    02-DCCCA
00000F28 20                                 1663+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F29 03                                 1664+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F2A 03                                 1665+         dc al1(3)                                                      02-DCCCA
00000F2B 08                                 1666+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F2C 00                                 1667+         dc bl.8'00000000'                                              02-DCCCA
00000F2D 000000                             1668+         dc al3(0)                                                      02-DCCCA
00000F30 0000000000000EEA                   1669+         dc ad(@LNAME1337)                                              02-DCCCA
00000F38                                    1670+         ds 0d                                                          02-DCCCA
00000F38 0000000000000F00                   1671+         dc ad($eye0040)                                                02-DCCCA
00000F40 0000000000000000                   1672+         dc ad(0)                                                       02-DCCCA
00000F48                                    1673+         ds    0d                                                       01-DCCPR
00000F48                                    1674+rd_kafka_msgq_len ds 0d                                                 01-DCCPR
00000F48                                    1675+@REGION_1337_1 ds 0h                                                    01-DCCPR
00000F48 EBEC D008 0024          00000008   1676+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1677 * ******* End of Prologue
                                            1678 * *
                                            1679 * ***           return (int)rkmq->rkmq_msg_cnt;
00000F4E E3F0 1000 0004          00000000   1680          LG    15,0(0,1)   ; rkmq
00000F54 E3F0 F010 0014          00000010   1681          LGF   15,16(0,15)
                                            1682 * ***   }
                                            1683 * * **** Start of Epilogue
                                            1684          DCCEPIL
00000F5A                                    1685+         ds 0h                                                          01-DCCEP
                                            1686+* Epilog
                                            1687+* Epilog
00000F5A E3E0 D008 0004          00000008   1688+         lg    14,8(,13) restore the reg                                01-DCCEP
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000F60 EB1C D020 0004          00000020   1689+         lmg   1,12,32(13)                                              01-DCCEP
00000F66 07FE                               1690+         br   14                                                        01-DCCEP
                                            1691+* End of Epilog
                                            1692 * * **** End of Epilogue
                                            1693 *
                                            1694 *   DSECT for automatic variables in "rd_kafka_msgq_len"
                                            1695 *      (FUNCTION #1337)
                                            1696 *
00000000                00000000 000000A8   1697 @AUTO#rd_kafka_msgq_len DSECT
00000000                                    1698          DS    XL168
                                            1699 *
00000F68                00000000 000054D2   1700 @CODE    CSECT
                                            1701 *
                                            1702 *
                                            1703 *
                                            1704 * ....... start of rd_strlcpy
00000F68                                    1705 @LNAME1384 DS  0H
00000F68 0000000A                           1706          DC    X'0000000A'
00000F6C 99846DA2A3999383                   1707          DC    C'rd_strlcpy'
00000F76 00                                 1708          DC    X'00'
                                            1709 rd_strlcpy DCCPRLG CINDEX=1384,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1384
                                            1710          macro
                                            1711          dccextrn &m
                                            1712          gblc    &$dccext(1000)
                                            1713          gbla    &$dccexti
                                            1714          lcla    &i
                                            1715 &$dccext(&$dccexti+1) setc    '&m'
                                            1716 &i       seta    1
                                            1717 .loop    aif    (&i gt &$dccexti).around
                                            1718          aif    ('&$dccext(&i)' eq '&m').getout
                                            1719 &i       seta    &i+1
                                            1720          ago     .loop
                                            1721 .around  anop
                                            1722 &$dccexti seta &$dccexti+1
                                            1723          extrn  &m
                                            1724 .getout  anop
                                            1725          mend
00000F78                                    1726+$eye0043    ds    0d                                                    02-DCCCA
00000F78 C4C3C3                             1727+         dc cl3'DCC'                                                    02-DCCCA
00000F7B 01                                 1728+         dc xl1'01' format one                                          02-DCCCA
00000F7C 00000000                           1729+         dc a(0)                                                        02-DCCCA
00000F80 0000000000000000                   1730+         dc ad(0)                                                       02-DCCCA
00000F88 00000000000000B0                   1731+         dc ad(176)                                                     02-DCCCA
00000F90 0000000000000000                   1732+         dc ad(0)                                                       02-DCCCA
00000F98 0000000000001000                   1733+         dc ad(4096)                                                    02-DCCCA
00000FA0 20                                 1734+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FA1 03                                 1735+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000FA2 03                                 1736+         dc al1(3)                                                      02-DCCCA
00000FA3 08                                 1737+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FA4 00                                 1738+         dc bl.8'00000000'                                              02-DCCCA
00000FA5 000000                             1739+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000FA8 0000000000000F68                   1740+         dc ad(@LNAME1384)                                              02-DCCCA
00000FB0                                    1741+         ds 0d                                                          02-DCCCA
00000FB0 0000000000000F78                   1742+         dc ad($eye0043)                                                02-DCCCA
00000FB8 0000000000000000                   1743+         dc ad(0)                                                       02-DCCCA
00000FC0                                    1744+         ds    0d                                                       01-DCCPR
00000FC0                                    1745+rd_strlcpy ds  0d                                                       01-DCCPR
00000FC0                                    1746+@REGION_1384_1 ds 0h                                                    01-DCCPR
00000FC0 EBEC D008 0024          00000008   1747+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FC6 B904 00CF                          1748+         lgr   12,15               set base reg                         01-DCCPR
                        00000FC0            1749+         using @REGION_1384_1,12                                        01-DCCPR
                                            1750 * ******* End of Prologue
                                            1751 * *
00000FCA E3F0 1010 0004          00000010   1752          LG    15,16(0,1)  ; dstsize
                                            1753 * ***
                                            1754 * ***
                                            1755 * ***
                                            1756 * ***           if (((dstsize > 0))) {
00000FD0 C2FE 0000 0000                     1757          CLGFI 15,X'00000000'
00000FD6 47D0 C0A6               00001066   1758          BNH   @ret_lab_1384
                                            1759 * ***                   size_t srclen = __strlen(src);
00000FDA E320 1008 0004          00000008   1760          LG    2,8(0,1)
00000FE0 B904 0032                          1761          LGR   3,2
00000FE4 A709 0000               00000000   1762          LGHI  0,0
00000FE8                                    1763 @@gen_label42 DS 0H
00000FE8 B25E 0002                          1764          SRST  0,2
00000FEC 4710 C028               00000FE8   1765          BC  1,@@gen_label42
00000FF0 B90B 0003                          1766          SLGR  0,3
                                            1767 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            1768 * clen) : (dstsize-1));
00000FF4 B904 002F                          1769          LGR   2,15
00000FF8 A72B FFFF               0000FFFF   1770          AGHI  2,-1
00000FFC B921 0002                          1771          CLGR  0,2
00001000 47B0 C056               00001016   1772          BNL   @L252
00001004 B904 00F0                          1773          LGR   15,0
00001008 47F0 C05A               0000101A   1774          B     @L253
00001010                                    1775          DS    0D
00001010 D200 4000 3000 00000000 00000000   1776 @lit_1384_40          MVC 0(1,4),0(3)
00001016                                    1777 @L252    DS    0H
00001016 A7FB FFFF               0000FFFF   1778          AGHI  15,-1
0000101A                                    1779 @L253    DS    0H
                                            1780 * ***                   __memcpy(dst,src,copylen);
0000101A E330 1008 0004          00000008   1781          LG    3,8(0,1)
00001020 E340 1000 0004          00000000   1782          LG    4,0(0,1)
00001026 B902 002F                          1783          LTGR  2,15
0000102A 4780 C098               00001058   1784          BZ    @@gen_label46
0000102E A72B FFFF               0000FFFF   1785          AGHI  2,-1
00001032 EB52 0008 000A          00000008   1786          SRAG  5,2,8(0)
00001038 B902 0055                          1787          LTGR  5,5
0000103C 4780 C094               00001054   1788          BZ    @@gen_label45
00001040                                    1789 @@gen_label44 DS 0H
00001040 D2FF 4000 3000 00000000 00000000   1790          MVC   0(256,4),0(3)
00001046 4140 4100               00000100   1791          LA    4,256(0,4)
                                                                                                                           Page   40 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000104A 4130 3100               00000100   1792          LA    3,256(0,3)
0000104E E350 C080 0046          00001040   1793          BCTG  5,@@gen_label44
00001054                                    1794 @@gen_label45 DS 0H
00001054 4420 C050               00001010   1795          EX    2,@lit_1384_40
00001058                                    1796 @@gen_label46 DS 0H
                                            1797 * ***                   dst[copylen] = '\0';
00001058 E310 1000 0004          00000000   1798          LG    1,0(0,1)    ; dst
0000105E 41FF 1000               00000000   1799          LA    15,0(15,1)
00001062 9200 F000      00000000 00000000   1800          MVI   0(15),0
                                            1801 * ***           }
00001066                                    1802 @L251    DS    0H
                                            1803 * ***
                                            1804 * ***   }
00001066                                    1805 @ret_lab_1384 DS 0H
                                            1806 * * **** Start of Epilogue
                                            1807          DCCEPIL
00001066                                    1808+         ds 0h                                                          01-DCCEP
                                            1809+* Epilog
                                            1810+* Epilog
00001066 E3E0 D008 0004          00000008   1811+         lg    14,8(,13) restore the reg                                01-DCCEP
0000106C EB1C D020 0004          00000020   1812+         lmg   1,12,32(13)                                              01-DCCEP
00001072 07FE                               1813+         br   14                                                        01-DCCEP
                                            1814+* End of Epilog
                                            1815 * * **** End of Epilogue
                                            1816          DROP  12
                                            1817 *
                                            1818 *   DSECT for automatic variables in "rd_strlcpy"
                                            1819 *      (FUNCTION #1384)
                                            1820 *
00000000                00000000 000000B0   1821 @AUTO#rd_strlcpy DSECT
00000000                                    1822          DS    XL168
000000A8                                    1823 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   1824          ORG   @AUTO#rd_strlcpy+168
000000A8                                    1825 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            1826 *
00001074                00000000 000054D2   1827 @CODE    CSECT
                                            1828 *
                                            1829 *
                                            1830 *
                                            1831 * ....... start of rd_kafka_q_keep
00001074                                    1832 @LNAME1428 DS  0H
00001074 0000000F                           1833          DC    X'0000000F'
00001078 99846D9281869281                   1834          DC    C'rd_kafka_q_keep'
00001087 00                                 1835          DC    X'00'
                                            1836 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                            1837          macro
                                            1838          dccextrn &m
                                            1839          gblc    &$dccext(1000)
                                            1840          gbla    &$dccexti
                                            1841          lcla    &i
                                            1842 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   41 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1843 &i       seta    1
                                            1844 .loop    aif    (&i gt &$dccexti).around
                                            1845          aif    ('&$dccext(&i)' eq '&m').getout
                                            1846 &i       seta    &i+1
                                            1847          ago     .loop
                                            1848 .around  anop
                                            1849 &$dccexti seta &$dccexti+1
                                            1850          extrn  &m
                                            1851 .getout  anop
                                            1852          mend
00001088                                    1853+$eye0046    ds    0d                                                    02-DCCCA
00001088 C4C3C3                             1854+         dc cl3'DCC'                                                    02-DCCCA
0000108B 01                                 1855+         dc xl1'01' format one                                          02-DCCCA
0000108C 00000000                           1856+         dc a(0)                                                        02-DCCCA
00001090 00000000000010FA                   1857+         dc ad(@PER_1428)                                               02-DCCCA
00001098 00000000000000B0                   1858+         dc ad(176)                                                     02-DCCCA
000010A0 0000000000000000                   1859+         dc ad(0)                                                       02-DCCCA
000010A8 0000000000001000                   1860+         dc ad(4096)                                                    02-DCCCA
000010B0 20                                 1861+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000010B1 03                                 1862+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000010B2 03                                 1863+         dc al1(3)                                                      02-DCCCA
000010B3 08                                 1864+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000010B4 00                                 1865+         dc bl.8'00000000'                                              02-DCCCA
000010B5 000000                             1866+         dc al3(0)                                                      02-DCCCA
000010B8 0000000000001074                   1867+         dc ad(@LNAME1428)                                              02-DCCCA
000010C0                                    1868+         ds 0d                                                          02-DCCCA
000010C0 0000000000001088                   1869+         dc ad($eye0046)                                                02-DCCCA
000010C8 0000000000000000                   1870+         dc ad(0)                                                       02-DCCCA
000010D0                                    1871+         ds    0d                                                       01-DCCPR
000010D0                                    1872+rd_kafka_q_keep ds 0d                                                   01-DCCPR
000010D0                                    1873+@REGION_1428_1 ds 0h                                                    01-DCCPR
000010D0 EBEC D008 0024          00000008   1874+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010D6 E3E0 D088 0004          00000088   1875+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010DC E3C0 D090 0004          00000090   1876+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010E2 B904 002E                          1877+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010E6 E3B0 C018 0004          00000018   1878+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000010EC A7EB 00B0               000000B0   1879+         aghi  14,176              increase by frame size               01-DCCPR
000010F0 E3E0 C020 0021          00000020   1880+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000010F6 4720 B020               00000020   1881+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010FA                                    1882+@PER_1428 ds   0h                                                       01-DCCPR
000010FA EBDE 2080 0024          00000080   1883+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001100 E3C0 2090 0024          00000090   1884+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001106 B904 00D2                          1885+         lgr   13,2                set real frame pointer               01-DCCPR
0000110A B904 00CF                          1886+         lgr   12,15               set base reg                         01-DCCPR
                        000010D0            1887+         using @REGION_1428_1,12                                        01-DCCPR
                                            1888 * ******* End of Prologue
                                            1889 * *
                                            1890 * ***           mtx_lock(&rkq->rkq_lock);
0000110E E320 1000 0004          00000000   1891          LG    2,0(0,1)    ; rkq
00001114 E320 D0A8 0024          000000A8   1892          STG   2,168(0,13)
0000111A 4110 D0A8               000000A8   1893          LA    1,168(0,13)
0000111E E3F0 C0C8 0004          00001198   1894          LG    15,@lit_1428_41 ; mtx_lock
                                                                                                                           Page   42 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001124                                    1895 @@gen_label47 DS    0H
00001124 05EF                               1896          BALR  14,15
00001126                                    1897 @@gen_label48 DS    0H
                                            1898 * ***           rkq->rkq_refcnt++;
00001126 58F0 2080               00000080   1899          L     15,128(0,2)
0000112A A7FA 0001               00000001   1900          AHI   15,1
0000112E 50F0 2080               00000080   1901          ST    15,128(0,2)
                                            1902 * ***           mtx_unlock(&rkq->rkq_lock);
00001132 E320 D0A8 0024          000000A8   1903          STG   2,168(0,13)
00001138 4110 D0A8               000000A8   1904          LA    1,168(0,13)
0000113C E3F0 C0D0 0004          000011A0   1905          LG    15,@lit_1428_42 ; mtx_unlock
00001142                                    1906 @@gen_label49 DS    0H
00001142 05EF                               1907          BALR  14,15
00001144                                    1908 @@gen_label50 DS    0H
                                            1909 * ***      return rkq;
00001144 B904 00F2                          1910          LGR   15,2
                                            1911 * ***   }
                                            1912 * * **** Start of Epilogue
                                            1913          DCCEPIL
00001148                                    1914+         ds 0h                                                          01-DCCEP
                                            1915+* Epilog
00001148 D707 D088 D088 00000088 00000088   1916+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000114E E3D0 D080 0004          00000080   1917+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001154 E3C0 D090 0004          00000090   1918+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000115A E3B0 C018 0004          00000018   1919+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001160 E3C0 B010 0021          00000010   1920+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001166 E3E0 D008 0004          00000008   1921+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000116C EB1C D020 0004          00000020   1922+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001172 078E                               1923+         bcr 8,14                if same dsab, just return              01-DCCEP
00001174 E3F0 D010 0024          00000010   1924+         stg 15,16(0,13)         save return code                       01-DCCEP
0000117A E300 D018 0024          00000018   1925+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001180 E3F0 D090 0004          00000090   1926+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001186 E3F0 F018 0004          00000018   1927+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000118C 47F0 F040               00000040   1928+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1929+* End of Epilog
                                            1930 * * **** End of Epilogue
00001190                                    1931          DS    0D
00001190 000000B0                           1932 @FRAMESIZE_1428 DC F'176'
00001194 00000000
00001198 0000000000000000                   1933 @lit_1428_41 DC AD(mtx_lock)
000011A0 0000000000000000                   1934 @lit_1428_42 DC AD(mtx_unlock)
                                            1935          DROP  12
                                            1936 *
                                            1937 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                            1938 *      (FUNCTION #1428)
                                            1939 *
00000000                00000000 000000A8   1940 @AUTO#rd_kafka_q_keep DSECT
00000000                                    1941          DS    XL168
                                            1942 *
000011A8                00000000 000054D2   1943 @CODE    CSECT
                                            1944 *
                                            1945 *
                                                                                                                           Page   43 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1946 *
                                            1947 * ....... start of rd_kafka_q_disable0
000011A8                                    1948 @LNAME1432 DS  0H
000011A8 00000013                           1949          DC    X'00000013'
000011AC 99846D9281869281                   1950          DC    C'rd_kafka_q_disable0'
000011BF 00                                 1951          DC    X'00'
                                            1952 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                            1953          macro
                                            1954          dccextrn &m
                                            1955          gblc    &$dccext(1000)
                                            1956          gbla    &$dccexti
                                            1957          lcla    &i
                                            1958 &$dccext(&$dccexti+1) setc    '&m'
                                            1959 &i       seta    1
                                            1960 .loop    aif    (&i gt &$dccexti).around
                                            1961          aif    ('&$dccext(&i)' eq '&m').getout
                                            1962 &i       seta    &i+1
                                            1963          ago     .loop
                                            1964 .around  anop
                                            1965 &$dccexti seta &$dccexti+1
                                            1966          extrn  &m
                                            1967 .getout  anop
                                            1968          mend
000011C0                                    1969+$eye0049    ds    0d                                                    02-DCCCA
000011C0 C4C3C3                             1970+         dc cl3'DCC'                                                    02-DCCCA
000011C3 01                                 1971+         dc xl1'01' format one                                          02-DCCCA
000011C4 00000000                           1972+         dc a(0)                                                        02-DCCCA
000011C8 0000000000001232                   1973+         dc ad(@PER_1432)                                               02-DCCCA
000011D0 00000000000000B0                   1974+         dc ad(176)                                                     02-DCCCA
000011D8 0000000000000000                   1975+         dc ad(0)                                                       02-DCCCA
000011E0 0000000000001000                   1976+         dc ad(4096)                                                    02-DCCCA
000011E8 20                                 1977+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000011E9 03                                 1978+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000011EA 03                                 1979+         dc al1(3)                                                      02-DCCCA
000011EB 08                                 1980+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000011EC 00                                 1981+         dc bl.8'00000000'                                              02-DCCCA
000011ED 000000                             1982+         dc al3(0)                                                      02-DCCCA
000011F0 00000000000011A8                   1983+         dc ad(@LNAME1432)                                              02-DCCCA
000011F8                                    1984+         ds 0d                                                          02-DCCCA
000011F8 00000000000011C0                   1985+         dc ad($eye0049)                                                02-DCCCA
00001200 0000000000000000                   1986+         dc ad(0)                                                       02-DCCCA
00001208                                    1987+         ds    0d                                                       01-DCCPR
00001208                                    1988+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
00001208                                    1989+@REGION_1432_1 ds 0h                                                    01-DCCPR
00001208 EBEC D008 0024          00000008   1990+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000120E E3E0 D088 0004          00000088   1991+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001214 E3C0 D090 0004          00000090   1992+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000121A B904 002E                          1993+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000121E E3B0 C018 0004          00000018   1994+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001224 A7EB 00B0               000000B0   1995+         aghi  14,176              increase by frame size               01-DCCPR
00001228 E3E0 C020 0021          00000020   1996+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000122E 4720 B020               00000020   1997+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001232                                    1998+@PER_1432 ds   0h                                                       01-DCCPR
00001232 EBDE 2080 0024          00000080   1999+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001238 E3C0 2090 0024          00000090   2000+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000123E B904 00D2                          2001+         lgr   13,2                set real frame pointer               01-DCCPR
00001242 B904 00CF                          2002+         lgr   12,15               set base reg                         01-DCCPR
                        00001208            2003+         using @REGION_1432_1,12                                        01-DCCPR
                                            2004 * ******* End of Prologue
                                            2005 * *
                                            2006 * ***           if (do_lock)
00001246 E320 1000 0004          00000000   2007          LG    2,0(0,1)    ; rkq
0000124C E330 100C 0012          0000000C   2008          LT    3,12(0,1)   ; do_lock
00001252 4780 C060               00001268   2009          BZ    @L256
                                            2010 * ***                   mtx_lock(&rkq->rkq_lock);
00001256 E320 D0A8 0024          000000A8   2011          STG   2,168(0,13)
0000125C 4110 D0A8               000000A8   2012          LA    1,168(0,13)
00001260 E3F0 C0D8 0004          000012E0   2013          LG    15,@lit_1432_44 ; mtx_lock
00001266                                    2014 @@gen_label52 DS    0H
00001266 05EF                               2015          BALR  14,15
00001268                                    2016 @@gen_label53 DS    0H
00001268                                    2017 @L256    DS    0H
                                            2018 * ***           rkq->rkq_flags &= ~0x2;
00001268 58F0 2084               00000084   2019          L     15,132(0,2)
0000126C A5F7 FFFD               0000FFFD   2020          NILL  15,65533
00001270 50F0 2084               00000084   2021          ST    15,132(0,2)
                                            2022 * ***           if (do_lock)
00001274 1233                               2023          LTR   3,3
00001276 4780 C084               0000128C   2024          BZ    @ret_lab_1432
                                            2025 * ***                   mtx_unlock(&rkq->rkq_lock);
0000127A E320 D0A8 0024          000000A8   2026          STG   2,168(0,13)
00001280 4110 D0A8               000000A8   2027          LA    1,168(0,13)
00001284 E3F0 C0E0 0004          000012E8   2028          LG    15,@lit_1432_45 ; mtx_unlock
0000128A                                    2029 @@gen_label55 DS    0H
0000128A 05EF                               2030          BALR  14,15
0000128C                                    2031 @@gen_label56 DS    0H
0000128C                                    2032 @L257    DS    0H
                                            2033 * ***   }
0000128C                                    2034 @ret_lab_1432 DS 0H
                                            2035 * * **** Start of Epilogue
                                            2036          DCCEPIL
0000128C                                    2037+         ds 0h                                                          01-DCCEP
                                            2038+* Epilog
0000128C D707 D088 D088 00000088 00000088   2039+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001292 E3D0 D080 0004          00000080   2040+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001298 E3C0 D090 0004          00000090   2041+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000129E E3B0 C018 0004          00000018   2042+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012A4 E3C0 B010 0021          00000010   2043+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012AA E3E0 D008 0004          00000008   2044+         lg  14,8(0,13)          load up return address                 01-DCCEP
000012B0 EB1C D020 0004          00000020   2045+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000012B6 078E                               2046+         bcr 8,14                if same dsab, just return              01-DCCEP
000012B8 E3F0 D010 0024          00000010   2047+         stg 15,16(0,13)         save return code                       01-DCCEP
000012BE E300 D018 0024          00000018   2048+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   45 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000012C4 E3F0 D090 0004          00000090   2049+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000012CA E3F0 F018 0004          00000018   2050+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000012D0 47F0 F040               00000040   2051+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2052+* End of Epilog
                                            2053 * * **** End of Epilogue
000012D8                                    2054          DS    0D
000012D8 000000B0                           2055 @FRAMESIZE_1432 DC F'176'
000012DC 00000000
000012E0 0000000000000000                   2056 @lit_1432_44 DC AD(mtx_lock)
000012E8 0000000000000000                   2057 @lit_1432_45 DC AD(mtx_unlock)
                                            2058          DROP  12
                                            2059 *
                                            2060 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            2061 *      (FUNCTION #1432)
                                            2062 *
00000000                00000000 000000A8   2063 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    2064          DS    XL168
                                            2065 *
000012F0                00000000 000054D2   2066 @CODE    CSECT
                                            2067 *
                                            2068 *
                                            2069 *
                                            2070 * ....... start of rd_kafka_q_destroy0
000012F0                                    2071 @LNAME1435 DS  0H
000012F0 00000013                           2072          DC    X'00000013'
000012F4 99846D9281869281                   2073          DC    C'rd_kafka_q_destroy0'
00001307 00                                 2074          DC    X'00'
                                            2075 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                            2076          macro
                                            2077          dccextrn &m
                                            2078          gblc    &$dccext(1000)
                                            2079          gbla    &$dccexti
                                            2080          lcla    &i
                                            2081 &$dccext(&$dccexti+1) setc    '&m'
                                            2082 &i       seta    1
                                            2083 .loop    aif    (&i gt &$dccexti).around
                                            2084          aif    ('&$dccext(&i)' eq '&m').getout
                                            2085 &i       seta    &i+1
                                            2086          ago     .loop
                                            2087 .around  anop
                                            2088 &$dccexti seta &$dccexti+1
                                            2089          extrn  &m
                                            2090 .getout  anop
                                            2091          mend
00001308                                    2092+$eye0052    ds    0d                                                    02-DCCCA
00001308 C4C3C3                             2093+         dc cl3'DCC'                                                    02-DCCCA
0000130B 01                                 2094+         dc xl1'01' format one                                          02-DCCCA
0000130C 00000000                           2095+         dc a(0)                                                        02-DCCCA
00001310 000000000000137A                   2096+         dc ad(@PER_1435)                                               02-DCCCA
00001318 00000000000000D8                   2097+         dc ad(216)                                                     02-DCCCA
00001320 0000000000000000                   2098+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001328 0000000000001000                   2099+         dc ad(4096)                                                    02-DCCCA
00001330 20                                 2100+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001331 03                                 2101+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001332 03                                 2102+         dc al1(3)                                                      02-DCCCA
00001333 08                                 2103+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001334 00                                 2104+         dc bl.8'00000000'                                              02-DCCCA
00001335 000000                             2105+         dc al3(0)                                                      02-DCCCA
00001338 00000000000012F0                   2106+         dc ad(@LNAME1435)                                              02-DCCCA
00001340                                    2107+         ds 0d                                                          02-DCCCA
00001340 0000000000001308                   2108+         dc ad($eye0052)                                                02-DCCCA
00001348 0000000000000000                   2109+         dc ad(0)                                                       02-DCCCA
00001350                                    2110+         ds    0d                                                       01-DCCPR
00001350                                    2111+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00001350                                    2112+@REGION_1435_1 ds 0h                                                    01-DCCPR
00001350 EBEC D008 0024          00000008   2113+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001356 E3E0 D088 0004          00000088   2114+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000135C E3C0 D090 0004          00000090   2115+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001362 B904 002E                          2116+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001366 E3B0 C018 0004          00000018   2117+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000136C A7EB 00D8               000000D8   2118+         aghi  14,216              increase by frame size               01-DCCPR
00001370 E3E0 C020 0021          00000020   2119+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001376 4720 B020               00000020   2120+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000137A                                    2121+@PER_1435 ds   0h                                                       01-DCCPR
0000137A EBDE 2080 0024          00000080   2122+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001380 E3C0 2090 0024          00000090   2123+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001386 B904 00D2                          2124+         lgr   13,2                set real frame pointer               01-DCCPR
0000138A B904 00CF                          2125+         lgr   12,15               set base reg                         01-DCCPR
                        00001350            2126+         using @REGION_1435_1,12                                        01-DCCPR
                                            2127 * ******* End of Prologue
                                            2128 * *
                                            2129 * ***           int do_delete = 0;
0000138E E320 1000 0004          00000000   2130          LG    2,0(0,1)    ; rkq
                                            2131 * ***
                                            2132 * ***           if (disable) {
00001394 E3F0 100C 0012          0000000C   2133          LT    15,12(0,1)  ; disable
0000139A 4780 C07E               000013CE   2134          BZ    @L258
                                            2135 * ***
                                            2136 * ***
                                            2137 * ***
                                            2138 * ***
                                            2139 * ***                   rd_kafka_q_disable0(rkq, 1);
0000139E E320 D0B0 0024          000000B0   2140          STG   2,176(0,13)
000013A4 E548 D0B8 0001          000000B8   2141          MVGHI 184(13),1
000013AA 4110 D0B0               000000B0   2142          LA    1,176(0,13)
000013AE E3F0 C170 0004          000014C0   2143          LG    15,@lit_1435_48 ; rd_kafka_q_disable0
000013B4                                    2144 @@gen_label58 DS    0H
000013B4 05EF                               2145          BALR  14,15
000013B6                                    2146 @@gen_label59 DS    0H
                                            2147 * ***                   rd_kafka_q_purge0(rkq, 1);
000013B6 E320 D0B0 0024          000000B0   2148          STG   2,176(0,13)
000013BC E548 D0B8 0001          000000B8   2149          MVGHI 184(13),1
000013C2 4110 D0B0               000000B0   2150          LA    1,176(0,13)
                                                                                                                           Page   47 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000013C6 E3F0 C178 0004          000014C8   2151          LG    15,@lit_1435_49 ; rd_kafka_q_purge0
000013CC                                    2152 @@gen_label60 DS    0H
000013CC 05EF                               2153          BALR  14,15
000013CE                                    2154 @@gen_label61 DS    0H
                                            2155 * ***           }
000013CE                                    2156 @L258    DS    0H
                                            2157 * ***
                                            2158 * ***           mtx_lock(&rkq->rkq_lock);
000013CE E320 D0B0 0024          000000B0   2159          STG   2,176(0,13)
000013D4 4110 D0B0               000000B0   2160          LA    1,176(0,13)
000013D8 E3F0 C180 0004          000014D0   2161          LG    15,@lit_1435_50 ; mtx_lock
000013DE                                    2162 @@gen_label62 DS    0H
000013DE 05EF                               2163          BALR  14,15
000013E0                                    2164 @@gen_label63 DS    0H
                                            2165 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            2166 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            2167 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
000013E0                                    2168 @L259    DS    0H
000013E0 E55C 2080 0000          00000080   2169          CHSI  128(2),0
000013E6 4720 C0DC               0000142C   2170          BH    @L262
000013EA E3F0 C198 0004          000014E8   2171          LG    15,@lit_1435_51
000013F0 4110 F054               00000054   2172          LA    1,84(0,15)
000013F4 E310 D0B0 0024          000000B0   2173          STG   1,176(0,13)
000013FA E548 D0B8 00D3          000000B8   2174          MVGHI 184(13),211
00001400 E310 C190 0004          000014E0   2175          LG    1,@lit_1435_52
00001406 4110 1072               00000072   2176          LA    1,114(0,1)
0000140A E310 D0C0 0024          000000C0   2177          STG   1,192(0,13)
00001410 D707 D0C8 D0C8 000000C8 000000C8   2178          XC    200(8,13),200(13)
00001416 41F0 F080               00000080   2179          LA    15,128(0,15)
0000141A E3F0 D0D0 0024          000000D0   2180          STG   15,208(0,13)
00001420 4110 D0B0               000000B0   2181          LA    1,176(0,13)
00001424 E3F0 C188 0004          000014D8   2182          LG    15,@lit_1435_53 ; rd_kafka_crash
0000142A                                    2183 @@gen_label65 DS    0H
0000142A 05EF                               2184          BALR  14,15
0000142C                                    2185 @@gen_label66 DS    0H
0000142C                                    2186 @L262    DS    0H
                                            2187 * ***           do_delete = !--rkq->rkq_refcnt;
0000142C 58F0 2080               00000080   2188          L     15,128(0,2)
00001430 A7FA FFFF               0000FFFF   2189          AHI   15,-1
00001434 50F0 2080               00000080   2190          ST    15,128(0,2)
00001438 103F                               2191          LPR   3,15
0000143A A73A FFFF               0000FFFF   2192          AHI   3,-1
0000143E 8830 001F               0000001F   2193          SRL   3,31(0)
                                            2194 * ***           mtx_unlock(&rkq->rkq_lock);
00001442 E320 D0B0 0024          000000B0   2195          STG   2,176(0,13)
00001448 4110 D0B0               000000B0   2196          LA    1,176(0,13)
0000144C E3F0 C1A0 0004          000014F0   2197          LG    15,@lit_1435_54 ; mtx_unlock
00001452                                    2198 @@gen_label67 DS    0H
00001452 05EF                               2199          BALR  14,15
00001454                                    2200 @@gen_label68 DS    0H
                                            2201 * ***
                                            2202 * ***           if (((do_delete)))
                                                                                                                           Page   48 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001454 1233                               2203          LTR   3,3
00001456 4780 C11C               0000146C   2204          BZ    @L263
                                            2205 * ***                   rd_kafka_q_destroy_final(rkq);
0000145A E320 D0B0 0024          000000B0   2206          STG   2,176(0,13)
00001460 4110 D0B0               000000B0   2207          LA    1,176(0,13)
00001464 E3F0 C1A8 0004          000014F8   2208          LG    15,@lit_1435_55 ; rd_kafka_q_destroy_final
0000146A                                    2209 @@gen_label70 DS    0H
0000146A 05EF                               2210          BALR  14,15
0000146C                                    2211 @@gen_label71 DS    0H
0000146C                                    2212 @L263    DS    0H
                                            2213 * ***   }
0000146C                                    2214 @ret_lab_1435 DS 0H
                                            2215 * * **** Start of Epilogue
                                            2216          DCCEPIL
0000146C                                    2217+         ds 0h                                                          01-DCCEP
                                            2218+* Epilog
0000146C D707 D088 D088 00000088 00000088   2219+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001472 E3D0 D080 0004          00000080   2220+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001478 E3C0 D090 0004          00000090   2221+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000147E E3B0 C018 0004          00000018   2222+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001484 E3C0 B010 0021          00000010   2223+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000148A E3E0 D008 0004          00000008   2224+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001490 EB1C D020 0004          00000020   2225+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001496 078E                               2226+         bcr 8,14                if same dsab, just return              01-DCCEP
00001498 E3F0 D010 0024          00000010   2227+         stg 15,16(0,13)         save return code                       01-DCCEP
0000149E E300 D018 0024          00000018   2228+         stg 0,24(0,13)          save more return code                  01-DCCEP
000014A4 E3F0 D090 0004          00000090   2229+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000014AA E3F0 F018 0004          00000018   2230+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000014B0 47F0 F040               00000040   2231+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2232+* End of Epilog
                                            2233 * * **** End of Epilogue
000014B8                                    2234          DS    0D
000014B8 000000D8                           2235 @FRAMESIZE_1435 DC F'216'
000014BC 00000000
000014C0 0000000000001208                   2236 @lit_1435_48 DC AD(rd_kafka_q_disable0)
000014C8 0000000000000000                   2237 @lit_1435_49 DC AD(rd_kafka_q_purge0)
000014D0 0000000000000000                   2238 @lit_1435_50 DC AD(mtx_lock)
000014D8 0000000000000000                   2239 @lit_1435_53 DC AD(rd_kafka_crash)
000014E0 00000000000054D8                   2240 @lit_1435_52 DC AD(@DATA)
000014E8 0000000000005722                   2241 @lit_1435_51 DC AD(@strings@)
000014F0 0000000000000000                   2242 @lit_1435_54 DC AD(mtx_unlock)
000014F8 0000000000000000                   2243 @lit_1435_55 DC AD(rd_kafka_q_destroy_final)
                                            2244          DROP  12
                                            2245 *
                                            2246 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            2247 *      (FUNCTION #1435)
                                            2248 *
00000000                00000000 000000AC   2249 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    2250          DS    XL168
000000A8                                    2251 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            2252 *
00001500                00000000 000054D2   2253 @CODE    CSECT
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2254 *
                                            2255 *
                                            2256 *
                                            2257 * ....... start of rd_kafka_q_fwd_get
00001500                                    2258 @LNAME1439 DS  0H
00001500 00000012                           2259          DC    X'00000012'
00001504 99846D9281869281                   2260          DC    C'rd_kafka_q_fwd_get'
00001516 00                                 2261          DC    X'00'
                                            2262 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                            2263          macro
                                            2264          dccextrn &m
                                            2265          gblc    &$dccext(1000)
                                            2266          gbla    &$dccexti
                                            2267          lcla    &i
                                            2268 &$dccext(&$dccexti+1) setc    '&m'
                                            2269 &i       seta    1
                                            2270 .loop    aif    (&i gt &$dccexti).around
                                            2271          aif    ('&$dccext(&i)' eq '&m').getout
                                            2272 &i       seta    &i+1
                                            2273          ago     .loop
                                            2274 .around  anop
                                            2275 &$dccexti seta &$dccexti+1
                                            2276          extrn  &m
                                            2277 .getout  anop
                                            2278          mend
00001518                                    2279+$eye0055    ds    0d                                                    02-DCCCA
00001518 C4C3C3                             2280+         dc cl3'DCC'                                                    02-DCCCA
0000151B 01                                 2281+         dc xl1'01' format one                                          02-DCCCA
0000151C 00000000                           2282+         dc a(0)                                                        02-DCCCA
00001520 000000000000158A                   2283+         dc ad(@PER_1439)                                               02-DCCCA
00001528 00000000000000B8                   2284+         dc ad(184)                                                     02-DCCCA
00001530 0000000000000000                   2285+         dc ad(0)                                                       02-DCCCA
00001538 0000000000001000                   2286+         dc ad(4096)                                                    02-DCCCA
00001540 20                                 2287+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001541 03                                 2288+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001542 03                                 2289+         dc al1(3)                                                      02-DCCCA
00001543 08                                 2290+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001544 00                                 2291+         dc bl.8'00000000'                                              02-DCCCA
00001545 000000                             2292+         dc al3(0)                                                      02-DCCCA
00001548 0000000000001500                   2293+         dc ad(@LNAME1439)                                              02-DCCCA
00001550                                    2294+         ds 0d                                                          02-DCCCA
00001550 0000000000001518                   2295+         dc ad($eye0055)                                                02-DCCCA
00001558 0000000000000000                   2296+         dc ad(0)                                                       02-DCCCA
00001560                                    2297+         ds    0d                                                       01-DCCPR
00001560                                    2298+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00001560                                    2299+@REGION_1439_1 ds 0h                                                    01-DCCPR
00001560 EBEC D008 0024          00000008   2300+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001566 E3E0 D088 0004          00000088   2301+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000156C E3C0 D090 0004          00000090   2302+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001572 B904 002E                          2303+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001576 E3B0 C018 0004          00000018   2304+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000157C A7EB 00B8               000000B8   2305+         aghi  14,184              increase by frame size               01-DCCPR
00001580 E3E0 C020 0021          00000020   2306+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001586 4720 B020               00000020   2307+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000158A                                    2308+@PER_1439 ds   0h                                                       01-DCCPR
0000158A EBDE 2080 0024          00000080   2309+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001590 E3C0 2090 0024          00000090   2310+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001596 B904 00D2                          2311+         lgr   13,2                set real frame pointer               01-DCCPR
0000159A B904 00CF                          2312+         lgr   12,15               set base reg                         01-DCCPR
                        00001560            2313+         using @REGION_1439_1,12                                        01-DCCPR
                                            2314 * ******* End of Prologue
                                            2315 * *
0000159E E320 1000 0004          00000000   2316          LG    2,0(0,1)    ; rkq
                                            2317 * ***           rd_kafka_q_t *fwdq;
                                            2318 * ***           if (do_lock)
000015A4 E340 100C 0012          0000000C   2319          LT    4,12(0,1)   ; do_lock
000015AA 4780 C060               000015C0   2320          BZ    @L270
                                            2321 * ***                   mtx_lock(&rkq->rkq_lock);
000015AE E320 D0B0 0024          000000B0   2322          STG   2,176(0,13)
000015B4 4110 D0B0               000000B0   2323          LA    1,176(0,13)
000015B8 E3F0 C0F0 0004          00001650   2324          LG    15,@lit_1439_57 ; mtx_lock
000015BE                                    2325 @@gen_label73 DS    0H
000015BE 05EF                               2326          BALR  14,15
000015C0                                    2327 @@gen_label74 DS    0H
000015C0                                    2328 @L270    DS    0H
                                            2329 * ***
                                            2330 * ***           if ((fwdq = rkq->rkq_fwdq))
000015C0 E330 2058 0004          00000058   2331          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
000015C6 B902 00F3                          2332          LTGR  15,3
000015CA 4780 C080               000015E0   2333          BZ    @L271
                                            2334 * ***                   rd_kafka_q_keep(fwdq);
000015CE E330 D0B0 0024          000000B0   2335          STG   3,176(0,13)
000015D4 4110 D0B0               000000B0   2336          LA    1,176(0,13)
000015D8 E3F0 C0F8 0004          00001658   2337          LG    15,@lit_1439_58 ; rd_kafka_q_keep
000015DE                                    2338 @@gen_label76 DS    0H
000015DE 05EF                               2339          BALR  14,15
000015E0                                    2340 @@gen_label77 DS    0H
000015E0                                    2341 @L271    DS    0H
                                            2342 * ***
                                            2343 * ***           if (do_lock)
000015E0 1244                               2344          LTR   4,4
000015E2 4780 C098               000015F8   2345          BZ    @L272
                                            2346 * ***                   mtx_unlock(&rkq->rkq_lock);
000015E6 E320 D0B0 0024          000000B0   2347          STG   2,176(0,13)
000015EC 4110 D0B0               000000B0   2348          LA    1,176(0,13)
000015F0 E3F0 C100 0004          00001660   2349          LG    15,@lit_1439_59 ; mtx_unlock
000015F6                                    2350 @@gen_label79 DS    0H
000015F6 05EF                               2351          BALR  14,15
000015F8                                    2352 @@gen_label80 DS    0H
000015F8                                    2353 @L272    DS    0H
                                            2354 * ***
                                            2355 * ***           return fwdq;
000015F8 B904 00F3                          2356          LGR   15,3
                                                                                                                           Page   51 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2357 * ***   }
                                            2358 * * **** Start of Epilogue
                                            2359          DCCEPIL
000015FC                                    2360+         ds 0h                                                          01-DCCEP
                                            2361+* Epilog
000015FC D707 D088 D088 00000088 00000088   2362+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001602 E3D0 D080 0004          00000080   2363+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001608 E3C0 D090 0004          00000090   2364+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000160E E3B0 C018 0004          00000018   2365+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001614 E3C0 B010 0021          00000010   2366+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000161A E3E0 D008 0004          00000008   2367+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001620 EB1C D020 0004          00000020   2368+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001626 078E                               2369+         bcr 8,14                if same dsab, just return              01-DCCEP
00001628 E3F0 D010 0024          00000010   2370+         stg 15,16(0,13)         save return code                       01-DCCEP
0000162E E300 D018 0024          00000018   2371+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001634 E3F0 D090 0004          00000090   2372+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000163A E3F0 F018 0004          00000018   2373+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001640 47F0 F040               00000040   2374+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2375+* End of Epilog
                                            2376 * * **** End of Epilogue
00001648                                    2377          DS    0D
00001648 000000B8                           2378 @FRAMESIZE_1439 DC F'184'
0000164C 00000000
00001650 0000000000000000                   2379 @lit_1439_57 DC AD(mtx_lock)
00001658 00000000000010D0                   2380 @lit_1439_58 DC AD(rd_kafka_q_keep)
00001660 0000000000000000                   2381 @lit_1439_59 DC AD(mtx_unlock)
                                            2382          DROP  12
                                            2383 *
                                            2384 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            2385 *      (FUNCTION #1439)
                                            2386 *
00000000                00000000 000000A8   2387 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    2388          DS    XL168
                                            2389 *
00001668                00000000 000054D2   2390 @CODE    CSECT
                                            2391 *
                                            2392 *
                                            2393 *
                                            2394 * ....... start of rd_kafka_q_io_event
00001668                                    2395 @LNAME1441 DS  0H
00001668 00000013                           2396          DC    X'00000013'
0000166C 99846D9281869281                   2397          DC    C'rd_kafka_q_io_event'
0000167F 00                                 2398          DC    X'00'
                                            2399 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            2400          macro
                                            2401          dccextrn &m
                                            2402          gblc    &$dccext(1000)
                                            2403          gbla    &$dccexti
                                            2404          lcla    &i
                                            2405 &$dccext(&$dccexti+1) setc    '&m'
                                            2406 &i       seta    1
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2407 .loop    aif    (&i gt &$dccexti).around
                                            2408          aif    ('&$dccext(&i)' eq '&m').getout
                                            2409 &i       seta    &i+1
                                            2410          ago     .loop
                                            2411 .around  anop
                                            2412 &$dccexti seta &$dccexti+1
                                            2413          extrn  &m
                                            2414 .getout  anop
                                            2415          mend
00001680                                    2416+$eye0058    ds    0d                                                    02-DCCCA
00001680 C4C3C3                             2417+         dc cl3'DCC'                                                    02-DCCCA
00001683 01                                 2418+         dc xl1'01' format one                                          02-DCCCA
00001684 00000000                           2419+         dc a(0)                                                        02-DCCCA
00001688 00000000000016F2                   2420+         dc ad(@PER_1441)                                               02-DCCCA
00001690 00000000000000C0                   2421+         dc ad(192)                                                     02-DCCCA
00001698 0000000000000000                   2422+         dc ad(0)                                                       02-DCCCA
000016A0 0000000000001000                   2423+         dc ad(4096)                                                    02-DCCCA
000016A8 20                                 2424+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000016A9 03                                 2425+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000016AA 03                                 2426+         dc al1(3)                                                      02-DCCCA
000016AB 08                                 2427+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000016AC 00                                 2428+         dc bl.8'00000000'                                              02-DCCCA
000016AD 000000                             2429+         dc al3(0)                                                      02-DCCCA
000016B0 0000000000001668                   2430+         dc ad(@LNAME1441)                                              02-DCCCA
000016B8                                    2431+         ds 0d                                                          02-DCCCA
000016B8 0000000000001680                   2432+         dc ad($eye0058)                                                02-DCCCA
000016C0 0000000000000000                   2433+         dc ad(0)                                                       02-DCCCA
000016C8                                    2434+         ds    0d                                                       01-DCCPR
000016C8                                    2435+rd_kafka_q_io_event ds 0d                                               01-DCCPR
000016C8                                    2436+@REGION_1441_1 ds 0h                                                    01-DCCPR
000016C8 EBEC D008 0024          00000008   2437+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000016CE E3E0 D088 0004          00000088   2438+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000016D4 E3C0 D090 0004          00000090   2439+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000016DA B904 002E                          2440+         lgr   2,14                copy addr of our savearea            01-DCCPR
000016DE E3B0 C018 0004          00000018   2441+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000016E4 A7EB 00C0               000000C0   2442+         aghi  14,192              increase by frame size               01-DCCPR
000016E8 E3E0 C020 0021          00000020   2443+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000016EE 4720 B020               00000020   2444+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000016F2                                    2445+@PER_1441 ds   0h                                                       01-DCCPR
000016F2 EBDE 2080 0024          00000080   2446+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000016F8 E3C0 2090 0024          00000090   2447+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000016FE B904 00D2                          2448+         lgr   13,2                set real frame pointer               01-DCCPR
00001702 B904 00CF                          2449+         lgr   12,15               set base reg                         01-DCCPR
                        000016C8            2450+         using @REGION_1441_1,12                                        01-DCCPR
                                            2451 * ******* End of Prologue
                                            2452 * *
00001706 E3F0 1000 0004          00000000   2453          LG    15,0(0,1)   ; rkq
                                            2454 * ***
                                            2455 * ***      if (((!rkq->rkq_qio)))
0000170C E310 F090 0002          00000090   2456          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001712 4780 C102               000017CA   2457          BZ    @ret_lab_1441
                                            2458 * ***         return;
                                                                                                                           Page   53 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001716                                    2459 @L275    DS    0H
                                            2460 * ***
                                            2461 * ***           if (rkq->rkq_qio->event_cb) {
00001716 E310 F090 0004          00000090   2462          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000171C E310 1020 0002          00000020   2463          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
00001722 4780 C0A8               00001770   2464          BZ    @L276
                                            2465 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            2466 * ***                                          rkq->rkq_qio->event_cb_\
                                            2467 * opaque);
00001726 E310 F088 0004          00000088   2468          LG    1,136(0,15)
0000172C E310 D0A8 0024          000000A8   2469          STG   1,168(0,13)
00001732 E310 F090 0004          00000090   2470          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001738 E310 1028 0004          00000028   2471          LG    1,40(0,1)
0000173E E310 D0B0 0024          000000B0   2472          STG   1,176(0,13)
00001744 E3F0 F090 0004          00000090   2473          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000174A E3F0 F020 0004          00000020   2474          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00001750 4110 D0A8               000000A8   2475          LA    1,168(0,13)
00001754                                    2476 @@gen_label83 DS    0H
00001754 05EF                               2477          BALR  14,15
00001756                                    2478 @@gen_label84 DS    0H
                                            2479 * ***                   return;
00001756 47F0 C102               000017CA   2480          B     @ret_lab_1441
00001760                                    2481          DS    0D
00001760 000000C0                           2482 @FRAMESIZE_1441 DC F'192'
00001764 00000000
00001768 0000000000000000                   2483 @lit_1441_61 DC AD(write)
                                            2484 * ***           }
00001770                                    2485 @L276    DS    0H
                                            2486 * ***
                                            2487 * ***
                                            2488 * ***
                                            2489 * ***
                                            2490 * ***
                                            2491 * ***
                                            2492 * ***           if (rkq->rkq_qio->sent)
00001770 E310 F090 0004          00000090   2493          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001776 9500 1018      00000018 00000000   2494          CLI   24(1),0
0000177A 4770 C102               000017CA   2495          BNE   @ret_lab_1441
                                            2496 * ***                   return;
0000177E                                    2497 @L277    DS    0H
                                            2498 * ***
                                            2499 * ***           rkq->rkq_qio->sent = 1;
0000177E E310 F090 0004          00000090   2500          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001784 9201 1018      00000018 00000001   2501          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            2502 * ***
                                            2503 * ***
                                            2504 * ***
                                            2505 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            2506 * rkq->rkq_qio->size) == -1)
00001788 E310 F090 0004          00000090   2507          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000178E E310 1000 0014          00000000   2508          LGF   1,0(0,1)
00001794 E310 D0A8 0024          000000A8   2509          STG   1,168(0,13)
                                                                                                                           Page   54 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000179A E310 F090 0004          00000090   2510          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000017A0 E310 1008 0004          00000008   2511          LG    1,8(0,1)
000017A6 E310 D0B0 0024          000000B0   2512          STG   1,176(0,13)
000017AC E3F0 F090 0004          00000090   2513          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000017B2 E3F0 F014 0014          00000014   2514          LGF   15,20(0,15)
000017B8 E3F0 D0B8 0024          000000B8   2515          STG   15,184(0,13)
000017BE 4110 D0A8               000000A8   2516          LA    1,168(0,13)
000017C2 E3F0 C0A0 0004          00001768   2517          LG    15,@lit_1441_61 ; write
000017C8                                    2518 @@gen_label86 DS    0H
000017C8 05EF                               2519          BALR  14,15
000017CA                                    2520 @@gen_label87 DS    0H
                                            2521 * ***
                                            2522 * ***                   ;
000017CA                                    2523 @L278    DS    0H
                                            2524 * ***   }
000017CA                                    2525 @ret_lab_1441 DS 0H
                                            2526 * * **** Start of Epilogue
                                            2527          DCCEPIL
000017CA                                    2528+         ds 0h                                                          01-DCCEP
                                            2529+* Epilog
000017CA D707 D088 D088 00000088 00000088   2530+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017D0 E3D0 D080 0004          00000080   2531+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017D6 E3C0 D090 0004          00000090   2532+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000017DC E3B0 C018 0004          00000018   2533+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000017E2 E3C0 B010 0021          00000010   2534+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000017E8 E3E0 D008 0004          00000008   2535+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017EE EB1C D020 0004          00000020   2536+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017F4 078E                               2537+         bcr 8,14                if same dsab, just return              01-DCCEP
000017F6 E3F0 D010 0024          00000010   2538+         stg 15,16(0,13)         save return code                       01-DCCEP
000017FC E300 D018 0024          00000018   2539+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001802 E3F0 D090 0004          00000090   2540+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001808 E3F0 F018 0004          00000018   2541+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000180E 47F0 F040               00000040   2542+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2543+* End of Epilog
                                            2544 * * **** End of Epilogue
                                            2545          DROP  12
                                            2546 *
                                            2547 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            2548 *      (FUNCTION #1441)
                                            2549 *
00000000                00000000 000000A8   2550 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    2551          DS    XL168
                                            2552 *
00001812                00000000 000054D2   2553 @CODE    CSECT
                                            2554 *
                                            2555 *
                                            2556 *
                                            2557 * ....... start of rd_kafka_op_cmp_prio
00001812                                    2558 @LNAME1442 DS  0H
00001812 00000014                           2559          DC    X'00000014'
00001816 99846D9281869281                   2560          DC    C'rd_kafka_op_cmp_prio'
0000182A 00                                 2561          DC    X'00'
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2562 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            2563          macro
                                            2564          dccextrn &m
                                            2565          gblc    &$dccext(1000)
                                            2566          gbla    &$dccexti
                                            2567          lcla    &i
                                            2568 &$dccext(&$dccexti+1) setc    '&m'
                                            2569 &i       seta    1
                                            2570 .loop    aif    (&i gt &$dccexti).around
                                            2571          aif    ('&$dccext(&i)' eq '&m').getout
                                            2572 &i       seta    &i+1
                                            2573          ago     .loop
                                            2574 .around  anop
                                            2575 &$dccexti seta &$dccexti+1
                                            2576          extrn  &m
                                            2577 .getout  anop
                                            2578          mend
00001830                                    2579+$eye0061    ds    0d                                                    02-DCCCA
00001830 C4C3C3                             2580+         dc cl3'DCC'                                                    02-DCCCA
00001833 01                                 2581+         dc xl1'01' format one                                          02-DCCCA
00001834 00000000                           2582+         dc a(0)                                                        02-DCCCA
00001838 0000000000000000                   2583+         dc ad(0)                                                       02-DCCCA
00001840 00000000000000B0                   2584+         dc ad(176)                                                     02-DCCCA
00001848 0000000000000000                   2585+         dc ad(0)                                                       02-DCCCA
00001850 0000000000001000                   2586+         dc ad(4096)                                                    02-DCCCA
00001858 20                                 2587+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001859 03                                 2588+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000185A 03                                 2589+         dc al1(3)                                                      02-DCCCA
0000185B 08                                 2590+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000185C 00                                 2591+         dc bl.8'00000000'                                              02-DCCCA
0000185D 000000                             2592+         dc al3(0)                                                      02-DCCCA
00001860 0000000000001812                   2593+         dc ad(@LNAME1442)                                              02-DCCCA
00001868                                    2594+         ds 0d                                                          02-DCCCA
00001868 0000000000001830                   2595+         dc ad($eye0061)                                                02-DCCCA
00001870 0000000000000000                   2596+         dc ad(0)                                                       02-DCCCA
00001878                                    2597+         ds    0d                                                       01-DCCPR
00001878                                    2598+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
00001878                                    2599+@REGION_1442_1 ds 0h                                                    01-DCCPR
00001878 EBEC D008 0024          00000008   2600+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000187E B904 00CF                          2601+         lgr   12,15               set base reg                         01-DCCPR
                        00001878            2602+         using @REGION_1442_1,12                                        01-DCCPR
                                            2603 * ******* End of Prologue
                                            2604 * *
                                            2605 * ***           const rd_kafka_op_t *a = _a, *b = _b;
00001882 E3F0 1000 0004          00000000   2606          LG    15,0(0,1)   ; _a
00001888 E310 1008 0004          00000008   2607          LG    1,8(0,1)    ; _b
                                            2608 * ***
                                            2609 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            2610 * >rko_prio) > (a->rko_prio)));
0000188E 5820 1034               00000034   2611          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001892 5920 F034               00000034   2612          C     2,52(0,15)
                                                                                                                           Page   56 
  Active Usings: @REGION_1442_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001896 47B0 C02A               000018A2   2613          BNL   @L279
0000189A A7F8 FFFF               0000FFFF   2614          LHI   15,-1       ; -1
0000189E 47F0 C042               000018BA   2615          B     @L280
000018A2                                    2616 @L279    DS    0H
000018A2 5810 1034               00000034   2617          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
000018A6 5910 F034               00000034   2618          C     1,52(0,15)
000018AA 47D0 C03E               000018B6   2619          BNH   @@gen_label89
000018AE A7F8 0001               00000001   2620          LHI   15,1
000018B2 47F0 C042               000018BA   2621          B     @@gen_label90
000018B6                                    2622 @@gen_label89 DS 0H
000018B6 A7F8 0000               00000000   2623          LHI   15,0
000018BA                                    2624 @@gen_label90 DS 0H
000018BA                                    2625 @L280    DS    0H
000018BA B914 00FF                          2626          LGFR  15,15
                                            2627 * ***   }
                                            2628 * * **** Start of Epilogue
                                            2629          DCCEPIL
000018BE                                    2630+         ds 0h                                                          01-DCCEP
                                            2631+* Epilog
                                            2632+* Epilog
000018BE E3E0 D008 0004          00000008   2633+         lg    14,8(,13) restore the reg                                01-DCCEP
000018C4 EB1C D020 0004          00000020   2634+         lmg   1,12,32(13)                                              01-DCCEP
000018CA 07FE                               2635+         br   14                                                        01-DCCEP
                                            2636+* End of Epilog
                                            2637 * * **** End of Epilogue
                                            2638          DROP  12
                                            2639 *
                                            2640 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            2641 *      (FUNCTION #1442)
                                            2642 *
00000000                00000000 000000A8   2643 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    2644          DS    XL168
                                            2645 *
000018CC                00000000 000054D2   2646 @CODE    CSECT
                                            2647 *
                                            2648 *
                                            2649 *
                                            2650 * ....... start of rd_kafka_q_enq0
000018CC                                    2651 @LNAME1444 DS  0H
000018CC 0000000F                           2652          DC    X'0000000F'
000018D0 99846D9281869281                   2653          DC    C'rd_kafka_q_enq0'
000018DF 00                                 2654          DC    X'00'
                                            2655 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                            2656          macro
                                            2657          dccextrn &m
                                            2658          gblc    &$dccext(1000)
                                            2659          gbla    &$dccexti
                                            2660          lcla    &i
                                            2661 &$dccext(&$dccexti+1) setc    '&m'
                                            2662 &i       seta    1
                                            2663 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2664          aif    ('&$dccext(&i)' eq '&m').getout
                                            2665 &i       seta    &i+1
                                            2666          ago     .loop
                                            2667 .around  anop
                                            2668 &$dccexti seta &$dccexti+1
                                            2669          extrn  &m
                                            2670 .getout  anop
                                            2671          mend
000018E0                                    2672+$eye0064    ds    0d                                                    02-DCCCA
000018E0 C4C3C3                             2673+         dc cl3'DCC'                                                    02-DCCCA
000018E3 01                                 2674+         dc xl1'01' format one                                          02-DCCCA
000018E4 00000000                           2675+         dc a(0)                                                        02-DCCCA
000018E8 0000000000001952                   2676+         dc ad(@PER_1444)                                               02-DCCCA
000018F0 00000000000000C0                   2677+         dc ad(192)                                                     02-DCCCA
000018F8 0000000000000000                   2678+         dc ad(0)                                                       02-DCCCA
00001900 0000000000001000                   2679+         dc ad(4096)                                                    02-DCCCA
00001908 20                                 2680+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001909 03                                 2681+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000190A 03                                 2682+         dc al1(3)                                                      02-DCCCA
0000190B 08                                 2683+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000190C 00                                 2684+         dc bl.8'00000000'                                              02-DCCCA
0000190D 000000                             2685+         dc al3(0)                                                      02-DCCCA
00001910 00000000000018CC                   2686+         dc ad(@LNAME1444)                                              02-DCCCA
00001918                                    2687+         ds 0d                                                          02-DCCCA
00001918 00000000000018E0                   2688+         dc ad($eye0064)                                                02-DCCCA
00001920 0000000000000000                   2689+         dc ad(0)                                                       02-DCCCA
00001928                                    2690+         ds    0d                                                       01-DCCPR
00001928                                    2691+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00001928                                    2692+@REGION_1444_1 ds 0h                                                    01-DCCPR
00001928 EBEC D008 0024          00000008   2693+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000192E E3E0 D088 0004          00000088   2694+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001934 E3C0 D090 0004          00000090   2695+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000193A B904 002E                          2696+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000193E E3B0 C018 0004          00000018   2697+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001944 A7EB 00C0               000000C0   2698+         aghi  14,192              increase by frame size               01-DCCPR
00001948 E3E0 C020 0021          00000020   2699+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000194E 4720 B020               00000020   2700+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001952                                    2701+@PER_1444 ds   0h                                                       01-DCCPR
00001952 EBDE 2080 0024          00000080   2702+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001958 E3C0 2090 0024          00000090   2703+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000195E B904 00D2                          2704+         lgr   13,2                set real frame pointer               01-DCCPR
00001962 B904 00CF                          2705+         lgr   12,15               set base reg                         01-DCCPR
                        00001928            2706+         using @REGION_1444_1,12                                        01-DCCPR
                                            2707 * ******* End of Prologue
                                            2708 * *
                                            2709 * ***       if (((!rko->rko_prio)))
00001966 EB34 1000 0004          00000000   2710          LMG   3,4,0(1)    ; rkq
0000196C E3F0 4034 0012          00000034   2711          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
00001972 4770 C090               000019B8   2712          BNZ   @L288
                                            2713 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            2714 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            2715 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                                                                                                           Page   58 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2716 * } while ( 0);
00001976                                    2717 @L289    DS    0H
00001976 A7F9 0000               00000000   2718          LGHI  15,0        ; 0
0000197A E3F0 4000 0024          00000000   2719          STG   15,0(0,4)   ; rko
00001980 E3F0 3068 0004          00000068   2720          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001986 E3F0 4008 0024          00000008   2721          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
0000198C E3F0 3068 0004          00000068   2722          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001992 E340 F000 0024          00000000   2723          STG   4,0(0,15)
00001998 E340 3068 0024          00000068   2724          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            2725 * ***       else if (at_head)
0000199E 47F0 C1C2               00001AEA   2726          B     @L292
000019A8                                    2727          DS    0D
000019A8 000000C0                           2728 @FRAMESIZE_1444 DC F'192'
000019AC 00000000
000019B0 0000000000001878                   2729 @lit_1444_65 DC AD(rd_kafka_op_cmp_prio)
000019B8                                    2730 @L288    DS    0H
000019B8 E3F0 1014 0012          00000014   2731          LT    15,20(0,1)  ; at_head
000019BE 4780 C0D8               00001A00   2732          BZ    @L300
                                            2733 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            2734 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            2735 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            2736 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            2737 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
000019C2                                    2738 @L294    DS    0H
000019C2 E3F0 3060 0004          00000060   2739          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000019C8 E3F0 4000 0024          00000000   2740          STG   15,0(0,4)
000019CE B902 00FF                          2741          LTGR  15,15
000019D2 4780 C0BE               000019E6   2742          BE    @L297
000019D6 E3F0 3060 0004          00000060   2743          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000019DC E340 F008 0024          00000008   2744          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
000019E2 47F0 C0C4               000019EC   2745          B     @L298
000019E6                                    2746 @L297    DS    0H
000019E6 E340 3068 0024          00000068   2747          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
000019EC                                    2748 @L298    DS    0H
000019EC E340 3060 0024          00000060   2749          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000019F2 41F0 3060               00000060   2750          LA    15,96(0,3)
000019F6 E3F0 4008 0024          00000008   2751          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            2752 * ***       else
000019FC 47F0 C1C2               00001AEA   2753          B     @L292
                                            2754 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            2755 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            2756 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            2757 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            2758 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            2759 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            2760 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            2761 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            2762 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            2763 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            2764 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            2765 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            2766 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                                                                                                           Page   59 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2767 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            2768 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            2769 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            2770 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            2771 * } } while(0);
00001A00                                    2772 @L300    DS    0H
00001A00 E3F0 3060 0002          00000060   2773          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001A06 4770 C120               00001A48   2774          BNE   @L303
00001A0A                                    2775 @L304    DS    0H
00001A0A E3F0 3060 0004          00000060   2776          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001A10 E3F0 4000 0024          00000000   2777          STG   15,0(0,4)
00001A16 B902 00FF                          2778          LTGR  15,15
00001A1A 4780 C106               00001A2E   2779          BE    @L307
00001A1E E3F0 3060 0004          00000060   2780          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001A24 E340 F008 0024          00000008   2781          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001A2A 47F0 C10C               00001A34   2782          B     @L308
00001A2E                                    2783 @L307    DS    0H
00001A2E E340 3068 0024          00000068   2784          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001A34                                    2785 @L308    DS    0H
00001A34 E340 3060 0024          00000060   2786          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001A3A 41F0 3060               00000060   2787          LA    15,96(0,3)
00001A3E E3F0 4008 0024          00000008   2788          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001A44 47F0 C1C2               00001AEA   2789          B     @L309
00001A48                                    2790 @L303    DS    0H
00001A48 E320 3060 0004          00000060   2791          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001A4E 47F0 C1BA               00001AE2   2792          B     @L311
00001A52                                    2793 @L310    DS    0H
00001A52 E340 D0B0 0024          000000B0   2794          STG   4,176(0,13)
00001A58 E320 D0B8 0024          000000B8   2795          STG   2,184(0,13)
00001A5E 4110 D0B0               000000B0   2796          LA    1,176(0,13)
00001A62 E3F0 C088 0004          000019B0   2797          LG    15,@lit_1444_65 ; rd_kafka_op_cmp_prio
00001A68                                    2798 @@gen_label96 DS    0H
00001A68 05EF                               2799          BALR  14,15
00001A6A                                    2800 @@gen_label97 DS    0H
00001A6A 12FF                               2801          LTR   15,15
00001A6C 47B0 C170               00001A98   2802          BNL   @L314
00001A70                                    2803 @L315    DS    0H
00001A70 E3F0 2008 0004          00000008   2804          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00001A76 E3F0 4008 0024          00000008   2805          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001A7C E320 4000 0024          00000000   2806          STG   2,0(0,4)    ; rko
00001A82 E3F0 2008 0004          00000008   2807          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00001A88 E340 F000 0024          00000000   2808          STG   4,0(0,15)
00001A8E E340 2008 0024          00000008   2809          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
00001A94 47F0 C1C2               00001AEA   2810          B     @L312
00001A98                                    2811 @L314    DS    0H
00001A98 E3F0 2000 0002          00000000   2812          LTG   15,0(0,2)   ; _tmp
00001A9E 4770 C1B4               00001ADC   2813          BNZ   @L318
00001AA2                                    2814 @L319    DS    0H
00001AA2 E3F0 2000 0004          00000000   2815          LG    15,0(0,2)   ; _tmp
00001AA8 E3F0 4000 0024          00000000   2816          STG   15,0(0,4)
00001AAE B902 00FF                          2817          LTGR  15,15
00001AB2 4780 C19E               00001AC6   2818          BE    @L322
                                                                                                                           Page   60 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001AB6 E3F0 4000 0004          00000000   2819          LG    15,0(0,4)   ; rko
00001ABC E340 F008 0024          00000008   2820          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001AC2 47F0 C1A4               00001ACC   2821          B     @L323
00001AC6                                    2822 @L322    DS    0H
00001AC6 E340 3068 0024          00000068   2823          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001ACC                                    2824 @L323    DS    0H
00001ACC E340 2000 0024          00000000   2825          STG   4,0(0,2)    ; _tmp
00001AD2 E320 4008 0024          00000008   2826          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00001AD8 47F0 C1C2               00001AEA   2827          B     @L312
00001ADC                                    2828 @L318    DS    0H
00001ADC E320 2000 0004          00000000   2829          LG    2,0(0,2)    ; _tmp
00001AE2                                    2830 @L311    DS    0H
00001AE2 B902 00F2                          2831          LTGR  15,2
00001AE6 4770 C12A               00001A52   2832          BNE   @L310
00001AEA                                    2833 @L312    DS    0H
00001AEA                                    2834 @L309    DS    0H
                                            2835 * ***
                                            2836 * ***       rkq->rkq_qlen++;
00001AEA                                    2837 @L299    DS    0H
00001AEA                                    2838 @L292    DS    0H
00001AEA 58F0 3070               00000070   2839          L     15,112(0,3)
00001AEE A7FA 0001               00000001   2840          AHI   15,1
00001AF2 50F0 3070               00000070   2841          ST    15,112(0,3)
                                            2842 * ***       rkq->rkq_qsize += rko->rko_len;
00001AF6 E3F0 3078 0004          00000078   2843          LG    15,120(0,3)
00001AFC E3F0 4030 0018          00000030   2844          AGF   15,48(0,4)
00001B02 E3F0 3078 0024          00000078   2845          STG   15,120(0,3)
                                            2846 * ***   }
00001B08                                    2847 @ret_lab_1444 DS 0H
                                            2848 * * **** Start of Epilogue
                                            2849          DCCEPIL
00001B08                                    2850+         ds 0h                                                          01-DCCEP
                                            2851+* Epilog
00001B08 D707 D088 D088 00000088 00000088   2852+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B0E E3D0 D080 0004          00000080   2853+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B14 E3C0 D090 0004          00000090   2854+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B1A E3B0 C018 0004          00000018   2855+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B20 E3C0 B010 0021          00000010   2856+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B26 E3E0 D008 0004          00000008   2857+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B2C EB1C D020 0004          00000020   2858+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B32 078E                               2859+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B34 E3F0 D010 0024          00000010   2860+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B3A E300 D018 0024          00000018   2861+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B40 E3F0 D090 0004          00000090   2862+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B46 E3F0 F018 0004          00000018   2863+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B4C 47F0 F040               00000040   2864+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2865+* End of Epilog
                                            2866 * * **** End of Epilogue
                                            2867          DROP  12
                                            2868 *
                                            2869 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            2870 *      (FUNCTION #1444)
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2871 *
00000000                00000000 000000A8   2872 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    2873          DS    XL168
                                            2874 *
00001B50                00000000 000054D2   2875 @CODE    CSECT
                                            2876 *
                                            2877 *
                                            2878 *
                                            2879 * ....... start of rd_kafka_q_enq1
00001B50                                    2880 @LNAME1445 DS  0H
00001B50 0000000F                           2881          DC    X'0000000F'
00001B54 99846D9281869281                   2882          DC    C'rd_kafka_q_enq1'
00001B63 00                                 2883          DC    X'00'
                                            2884 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            2885          macro
                                            2886          dccextrn &m
                                            2887          gblc    &$dccext(1000)
                                            2888          gbla    &$dccexti
                                            2889          lcla    &i
                                            2890 &$dccext(&$dccexti+1) setc    '&m'
                                            2891 &i       seta    1
                                            2892 .loop    aif    (&i gt &$dccexti).around
                                            2893          aif    ('&$dccext(&i)' eq '&m').getout
                                            2894 &i       seta    &i+1
                                            2895          ago     .loop
                                            2896 .around  anop
                                            2897 &$dccexti seta &$dccexti+1
                                            2898          extrn  &m
                                            2899 .getout  anop
                                            2900          mend
00001B68                                    2901+$eye0067    ds    0d                                                    02-DCCCA
00001B68 C4C3C3                             2902+         dc cl3'DCC'                                                    02-DCCCA
00001B6B 01                                 2903+         dc xl1'01' format one                                          02-DCCCA
00001B6C 00000000                           2904+         dc a(0)                                                        02-DCCCA
00001B70 0000000000001BDA                   2905+         dc ad(@PER_1445)                                               02-DCCCA
00001B78 00000000000000D8                   2906+         dc ad(216)                                                     02-DCCCA
00001B80 0000000000000000                   2907+         dc ad(0)                                                       02-DCCCA
00001B88 0000000000001000                   2908+         dc ad(4096)                                                    02-DCCCA
00001B90 20                                 2909+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B91 03                                 2910+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B92 03                                 2911+         dc al1(3)                                                      02-DCCCA
00001B93 08                                 2912+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B94 00                                 2913+         dc bl.8'00000000'                                              02-DCCCA
00001B95 000000                             2914+         dc al3(0)                                                      02-DCCCA
00001B98 0000000000001B50                   2915+         dc ad(@LNAME1445)                                              02-DCCCA
00001BA0                                    2916+         ds 0d                                                          02-DCCCA
00001BA0 0000000000001B68                   2917+         dc ad($eye0067)                                                02-DCCCA
00001BA8 0000000000000000                   2918+         dc ad(0)                                                       02-DCCCA
00001BB0                                    2919+         ds    0d                                                       01-DCCPR
00001BB0                                    2920+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00001BB0                                    2921+@REGION_1445_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001BB0 EBEC D008 0024          00000008   2922+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001BB6 E3E0 D088 0004          00000088   2923+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001BBC E3C0 D090 0004          00000090   2924+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001BC2 B904 002E                          2925+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001BC6 E3B0 C018 0004          00000018   2926+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001BCC A7EB 00D8               000000D8   2927+         aghi  14,216              increase by frame size               01-DCCPR
00001BD0 E3E0 C020 0021          00000020   2928+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001BD6 4720 B020               00000020   2929+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001BDA                                    2930+@PER_1445 ds   0h                                                       01-DCCPR
00001BDA EBDE 2080 0024          00000080   2931+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001BE0 E3C0 2090 0024          00000090   2932+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001BE6 B904 00D2                          2933+         lgr   13,2                set real frame pointer               01-DCCPR
00001BEA B904 00CF                          2934+         lgr   12,15               set base reg                         01-DCCPR
                        00001BB0            2935+         using @REGION_1445_1,12                                        01-DCCPR
00001BEE B904 0071                          2936          LGR   7,1         ; ptr to parm area
                                            2937 * ******* End of Prologue
                                            2938 * *
00001BF2 EB24 7000 0004          00000000   2939          LMG   2,4,0(7)    ; rkq
00001BF8 E350 7024 0012          00000024   2940          LT    5,36(0,7)   ; do_lock
                                            2941 * ***           rd_kafka_q_t *fwdq;
                                            2942 * ***
                                            2943 * ***           if (do_lock)
00001BFE 4780 C064               00001C14   2944          BZ    @L325
                                            2945 * ***                   mtx_lock(&rkq->rkq_lock);
00001C02 E320 D0B0 0024          000000B0   2946          STG   2,176(0,13)
00001C08 4110 D0B0               000000B0   2947          LA    1,176(0,13)
00001C0C E3F0 C0B0 0004          00001C60   2948          LG    15,@lit_1445_67 ; mtx_lock
00001C12                                    2949 @@gen_label103 DS    0H
00001C12 05EF                               2950          BALR  14,15
00001C14                                    2951 @@gen_label104 DS    0H
00001C14                                    2952 @L324    DS    0H
                                            2953 * ***
                                            2954 * ***           do {} while (0);
00001C14                                    2955 @L325    DS    0H
                                            2956 * ***
                                            2957 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00001C14 9102 2087      00000087 00000002   2958          TM    135(2),2
00001C18 4770 C0F8               00001CA8   2959          BNZ   @L328
                                            2960 * ***
                                            2961 * ***                   if (do_lock)
00001C1C 1255                               2962          LTR   5,5
00001C1E 4780 C084               00001C34   2963          BZ    @L329
                                            2964 * ***                           mtx_unlock(&rkq->rkq_lock);
00001C22 E320 D0B0 0024          000000B0   2965          STG   2,176(0,13)
00001C28 4110 D0B0               000000B0   2966          LA    1,176(0,13)
00001C2C E3F0 C0B8 0004          00001C68   2967          LG    15,@lit_1445_68 ; mtx_unlock
00001C32                                    2968 @@gen_label107 DS    0H
00001C32 05EF                               2969          BALR  14,15
00001C34                                    2970 @@gen_label108 DS    0H
00001C34                                    2971 @L329    DS    0H
                                            2972 * ***
                                            2973 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                                                                                                           Page   63 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2974 * R__DESTROY);
00001C34 E330 D0B0 0024          000000B0   2975          STG   3,176(0,13)
00001C3A E548 D0B8 FF3B          000000B8   2976          MVGHI 184(13),-197
00001C40 4110 D0B0               000000B0   2977          LA    1,176(0,13)
00001C44 E3F0 C0C0 0004          00001C70   2978          LG    15,@lit_1445_69 ; rd_kafka_op_reply
00001C4A                                    2979 @@gen_label109 DS    0H
00001C4A 05EF                               2980          BALR  14,15
00001C4C                                    2981 @@gen_label110 DS    0H
00001C4C B914 00FF                          2982          LGFR  15,15
00001C50 47F0 C212               00001DC2   2983          B     @ret_lab_1445
00001C58                                    2984          DS    0D
00001C58 000000D8                           2985 @FRAMESIZE_1445 DC F'216'
00001C5C 00000000
00001C60 0000000000000000                   2986 @lit_1445_67 DC AD(mtx_lock)
00001C68 0000000000000000                   2987 @lit_1445_68 DC AD(mtx_unlock)
00001C70 0000000000000000                   2988 @lit_1445_69 DC AD(rd_kafka_op_reply)
00001C78 0000000000001560                   2989 @lit_1445_70 DC AD(rd_kafka_q_fwd_get)
00001C80 0000000000001928                   2990 @lit_1445_71 DC AD(rd_kafka_q_enq0)
00001C88 0000000000000000                   2991 @lit_1445_72 DC AD(cnd_signal)
00001C90 00000000000016C8                   2992 @lit_1445_73 DC AD(rd_kafka_q_io_event)
00001C98 0000000000001BB0                   2993 @lit_1445_76 DC AD(rd_kafka_q_enq1)
00001CA0 0000000000001350                   2994 @lit_1445_77 DC AD(rd_kafka_q_destroy0)
                                            2995 * ***           }
00001CA8                                    2996 @L328    DS    0H
                                            2997 * ***
                                            2998 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00001CA8 E320 D0B0 0024          000000B0   2999          STG   2,176(0,13)
00001CAE D707 D0B8 D0B8 000000B8 000000B8   3000          XC    184(8,13),184(13)
00001CB4 4110 D0B0               000000B0   3001          LA    1,176(0,13)
00001CB8 E3F0 C0C8 0004          00001C78   3002          LG    15,@lit_1445_70 ; rd_kafka_q_fwd_get
00001CBE                                    3003 @@gen_label111 DS    0H
00001CBE 05EF                               3004          BALR  14,15
00001CC0                                    3005 @@gen_label112 DS    0H
00001CC0 B904 006F                          3006          LGR   6,15
00001CC4 B902 00F6                          3007          LTGR  15,6
00001CC8 4770 C1B4               00001D64   3008          BNZ   @L330
                                            3009 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            3010 * {
00001CCC E3F0 3050 0002          00000050   3011          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
00001CD2 4770 C148               00001CF8   3012          BNZ   @L331
00001CD6 E3F0 4098 0002          00000098   3013          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001CDC 4780 C148               00001CF8   3014          BZ    @L331
                                            3015 * ***
                                            3016 * ***
                                            3017 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            3018 * ;
00001CE0 E3F0 4098 0004          00000098   3019          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001CE6 E3F0 3050 0024          00000050   3020          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            3021 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            3022 * q_opaque;
00001CEC E3F0 40A0 0004          000000A0   3023          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
00001CF2 E3F0 3058 0024          00000058   3024          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                                                                           Page   64 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                s
                                            3025 * ***                   }
00001CF8                                    3026 @L331    DS    0H
                                            3027 * ***
                                            3028 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
00001CF8 EB23 D0B0 0024          000000B0   3029          STMG  2,3,176(13)
00001CFE E3F0 701C 0014          0000001C   3030          LGF   15,28(0,7)  ; at_head
00001D04 E3F0 D0C0 0024          000000C0   3031          STG   15,192(0,13)
00001D0A 4110 D0B0               000000B0   3032          LA    1,176(0,13)
00001D0E E3F0 C0D0 0004          00001C80   3033          LG    15,@lit_1445_71 ; rd_kafka_q_enq0
00001D14                                    3034 @@gen_label116 DS    0H
00001D14 05EF                               3035          BALR  14,15
00001D16                                    3036 @@gen_label117 DS    0H
                                            3037 * ***                   cnd_signal(&rkq->rkq_cond);
00001D16 41F0 2028               00000028   3038          LA    15,40(0,2)
00001D1A E3F0 D0B0 0024          000000B0   3039          STG   15,176(0,13)
00001D20 4110 D0B0               000000B0   3040          LA    1,176(0,13)
00001D24 E3F0 C0D8 0004          00001C88   3041          LG    15,@lit_1445_72 ; cnd_signal
00001D2A                                    3042 @@gen_label118 DS    0H
00001D2A 05EF                               3043          BALR  14,15
00001D2C                                    3044 @@gen_label119 DS    0H
                                            3045 * ***                   if (rkq->rkq_qlen == 1)
00001D2C E55C 2070 0001          00000070   3046          CHSI  112(2),1
00001D32 4770 C198               00001D48   3047          BNE   @L332
                                            3048 * ***                           rd_kafka_q_io_event(rkq);
00001D36 E320 D0B0 0024          000000B0   3049          STG   2,176(0,13)
00001D3C 4110 D0B0               000000B0   3050          LA    1,176(0,13)
00001D40 E3F0 C0E0 0004          00001C90   3051          LG    15,@lit_1445_73 ; rd_kafka_q_io_event
00001D46                                    3052 @@gen_label121 DS    0H
00001D46 05EF                               3053          BALR  14,15
00001D48                                    3054 @@gen_label122 DS    0H
00001D48                                    3055 @L332    DS    0H
                                            3056 * ***
                                            3057 * ***                   if (do_lock)
00001D48 1255                               3058          LTR   5,5
00001D4A 4780 C20E               00001DBE   3059          BZ    @L334
                                            3060 * ***                           mtx_unlock(&rkq->rkq_lock);
00001D4E E320 D0B0 0024          000000B0   3061          STG   2,176(0,13)
00001D54 4110 D0B0               000000B0   3062          LA    1,176(0,13)
00001D58 E3F0 C0B8 0004          00001C68   3063          LG    15,@lit_1445_68 ; mtx_unlock
00001D5E                                    3064 @@gen_label124 DS    0H
00001D5E 05EF                               3065          BALR  14,15
00001D60                                    3066 @@gen_label125 DS    0H
00001D60                                    3067 @L333    DS    0H
                                            3068 * ***           } else {
00001D60 47F0 C20E               00001DBE   3069          B     @L334
00001D64                                    3070 @L330    DS    0H
                                            3071 * ***                   if (do_lock)
00001D64 1255                               3072          LTR   5,5
00001D66 4780 C1CC               00001D7C   3073          BZ    @L335
                                            3074 * ***                           mtx_unlock(&rkq->rkq_lock);
00001D6A E320 D0B0 0024          000000B0   3075          STG   2,176(0,13)
                                                                                                                           Page   65 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001D70 4110 D0B0               000000B0   3076          LA    1,176(0,13)
00001D74 E3F0 C0B8 0004          00001C68   3077          LG    15,@lit_1445_68 ; mtx_unlock
00001D7A                                    3078 @@gen_label127 DS    0H
00001D7A 05EF                               3079          BALR  14,15
00001D7C                                    3080 @@gen_label128 DS    0H
00001D7C                                    3081 @L335    DS    0H
                                            3082 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            3083 * , 1);
00001D7C E360 D0B0 0024          000000B0   3084          STG   6,176(0,13)
00001D82 EB34 D0B8 0024          000000B8   3085          STMG  3,4,184(13)
00001D88 E3F0 701C 0014          0000001C   3086          LGF   15,28(0,7)  ; at_head
00001D8E E3F0 D0C8 0024          000000C8   3087          STG   15,200(0,13)
00001D94 E548 D0D0 0001          000000D0   3088          MVGHI 208(13),1
00001D9A 4110 D0B0               000000B0   3089          LA    1,176(0,13)
00001D9E E3F0 C0E8 0004          00001C98   3090          LG    15,@lit_1445_76 ; rd_kafka_q_enq1
00001DA4                                    3091 @@gen_label129 DS    0H
00001DA4 05EF                               3092          BALR  14,15
00001DA6                                    3093 @@gen_label130 DS    0H
                                            3094 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00001DA6 E360 D0B0 0024          000000B0   3095          STG   6,176(0,13)
00001DAC D707 D0B8 D0B8 000000B8 000000B8   3096          XC    184(8,13),184(13)
00001DB2 4110 D0B0               000000B0   3097          LA    1,176(0,13)
00001DB6 E3F0 C0F0 0004          00001CA0   3098          LG    15,@lit_1445_77 ; rd_kafka_q_destroy0
00001DBC                                    3099 @@gen_label131 DS    0H
00001DBC 05EF                               3100          BALR  14,15
00001DBE                                    3101 @@gen_label132 DS    0H
                                            3102 * ***           }
00001DBE                                    3103 @L334    DS    0H
                                            3104 * ***
                                            3105 * ***           return 1;
00001DBE A7F9 0001               00000001   3106          LGHI  15,1        ; 1
                                            3107 * ***   }
00001DC2                                    3108 @ret_lab_1445 DS 0H
                                            3109 * * **** Start of Epilogue
                                            3110          DCCEPIL
00001DC2                                    3111+         ds 0h                                                          01-DCCEP
                                            3112+* Epilog
00001DC2 D707 D088 D088 00000088 00000088   3113+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DC8 E3D0 D080 0004          00000080   3114+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DCE E3C0 D090 0004          00000090   3115+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001DD4 E3B0 C018 0004          00000018   3116+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001DDA E3C0 B010 0021          00000010   3117+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001DE0 E3E0 D008 0004          00000008   3118+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001DE6 EB1C D020 0004          00000020   3119+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001DEC 078E                               3120+         bcr 8,14                if same dsab, just return              01-DCCEP
00001DEE E3F0 D010 0024          00000010   3121+         stg 15,16(0,13)         save return code                       01-DCCEP
00001DF4 E300 D018 0024          00000018   3122+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001DFA E3F0 D090 0004          00000090   3123+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E00 E3F0 F018 0004          00000018   3124+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E06 47F0 F040               00000040   3125+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3126+* End of Epilog
                                            3127 * * **** End of Epilogue
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3128          DROP  12
                                            3129 *
                                            3130 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            3131 *      (FUNCTION #1445)
                                            3132 *
00000000                00000000 000000A8   3133 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    3134          DS    XL168
                                            3135 *
00001E0A                00000000 000054D2   3136 @CODE    CSECT
                                            3137 *
                                            3138 *
                                            3139 *
                                            3140 * ....... start of rd_kafka_q_enq
00001E0A                                    3141 @LNAME1446 DS  0H
00001E0A 0000000E                           3142          DC    X'0000000E'
00001E0E 99846D9281869281                   3143          DC    C'rd_kafka_q_enq'
00001E1C 00                                 3144          DC    X'00'
                                            3145 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            3146          macro
                                            3147          dccextrn &m
                                            3148          gblc    &$dccext(1000)
                                            3149          gbla    &$dccexti
                                            3150          lcla    &i
                                            3151 &$dccext(&$dccexti+1) setc    '&m'
                                            3152 &i       seta    1
                                            3153 .loop    aif    (&i gt &$dccexti).around
                                            3154          aif    ('&$dccext(&i)' eq '&m').getout
                                            3155 &i       seta    &i+1
                                            3156          ago     .loop
                                            3157 .around  anop
                                            3158 &$dccexti seta &$dccexti+1
                                            3159          extrn  &m
                                            3160 .getout  anop
                                            3161          mend
00001E20                                    3162+$eye0070    ds    0d                                                    02-DCCCA
00001E20 C4C3C3                             3163+         dc cl3'DCC'                                                    02-DCCCA
00001E23 01                                 3164+         dc xl1'01' format one                                          02-DCCCA
00001E24 00000000                           3165+         dc a(0)                                                        02-DCCCA
00001E28 0000000000001E92                   3166+         dc ad(@PER_1446)                                               02-DCCCA
00001E30 00000000000000D0                   3167+         dc ad(208)                                                     02-DCCCA
00001E38 0000000000000000                   3168+         dc ad(0)                                                       02-DCCCA
00001E40 0000000000001000                   3169+         dc ad(4096)                                                    02-DCCCA
00001E48 20                                 3170+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E49 03                                 3171+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E4A 03                                 3172+         dc al1(3)                                                      02-DCCCA
00001E4B 08                                 3173+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E4C 00                                 3174+         dc bl.8'00000000'                                              02-DCCCA
00001E4D 000000                             3175+         dc al3(0)                                                      02-DCCCA
00001E50 0000000000001E0A                   3176+         dc ad(@LNAME1446)                                              02-DCCCA
00001E58                                    3177+         ds 0d                                                          02-DCCCA
00001E58 0000000000001E20                   3178+         dc ad($eye0070)                                                02-DCCCA
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001E60 0000000000000000                   3179+         dc ad(0)                                                       02-DCCCA
00001E68                                    3180+         ds    0d                                                       01-DCCPR
00001E68                                    3181+rd_kafka_q_enq ds 0d                                                    01-DCCPR
00001E68                                    3182+@REGION_1446_1 ds 0h                                                    01-DCCPR
00001E68 EBEC D008 0024          00000008   3183+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E6E E3E0 D088 0004          00000088   3184+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001E74 E3C0 D090 0004          00000090   3185+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E7A B904 002E                          3186+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E7E E3B0 C018 0004          00000018   3187+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E84 A7EB 00D0               000000D0   3188+         aghi  14,208              increase by frame size               01-DCCPR
00001E88 E3E0 C020 0021          00000020   3189+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E8E 4720 B020               00000020   3190+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E92                                    3191+@PER_1446 ds   0h                                                       01-DCCPR
00001E92 EBDE 2080 0024          00000080   3192+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E98 E3C0 2090 0024          00000090   3193+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E9E B904 00D2                          3194+         lgr   13,2                set real frame pointer               01-DCCPR
00001EA2 B904 00CF                          3195+         lgr   12,15               set base reg                         01-DCCPR
                        00001E68            3196+         using @REGION_1446_1,12                                        01-DCCPR
                                            3197 * ******* End of Prologue
                                            3198 * *
                                            3199 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
00001EA6 E3F0 1000 0004          00000000   3200          LG    15,0(0,1)   ; rkq
00001EAC E3F0 D0A8 0024          000000A8   3201          STG   15,168(0,13)
00001EB2 E3F0 1008 0004          00000008   3202          LG    15,8(0,1)   ; rko
00001EB8 E3F0 D0B0 0024          000000B0   3203          STG   15,176(0,13)
00001EBE E3F0 1000 0004          00000000   3204          LG    15,0(0,1)   ; rkq
00001EC4 E3F0 D0B8 0024          000000B8   3205          STG   15,184(0,13)
00001ECA D707 D0C0 D0C0 000000C0 000000C0   3206          XC    192(8,13),192(13)
00001ED0 E548 D0C8 0001          000000C8   3207          MVGHI 200(13),1
00001ED6 4110 D0A8               000000A8   3208          LA    1,168(0,13)
00001EDA E3F0 C0D0 0004          00001F38   3209          LG    15,@lit_1446_80 ; rd_kafka_q_enq1
00001EE0                                    3210 @@gen_label133 DS    0H
00001EE0 05EF                               3211          BALR  14,15
00001EE2                                    3212 @@gen_label134 DS    0H
00001EE2 B914 00FF                          3213          LGFR  15,15
                                            3214 * ***   }
                                            3215 * * **** Start of Epilogue
                                            3216          DCCEPIL
00001EE6                                    3217+         ds 0h                                                          01-DCCEP
                                            3218+* Epilog
00001EE6 D707 D088 D088 00000088 00000088   3219+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001EEC E3D0 D080 0004          00000080   3220+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001EF2 E3C0 D090 0004          00000090   3221+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001EF8 E3B0 C018 0004          00000018   3222+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001EFE E3C0 B010 0021          00000010   3223+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F04 E3E0 D008 0004          00000008   3224+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F0A EB1C D020 0004          00000020   3225+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F10 078E                               3226+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F12 E3F0 D010 0024          00000010   3227+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F18 E300 D018 0024          00000018   3228+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F1E E3F0 D090 0004          00000090   3229+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F24 E3F0 F018 0004          00000018   3230+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   68 
  Active Usings: @REGION_1446_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001F2A 47F0 F040               00000040   3231+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3232+* End of Epilog
                                            3233 * * **** End of Epilogue
00001F30                                    3234          DS    0D
00001F30 000000D0                           3235 @FRAMESIZE_1446 DC F'208'
00001F34 00000000
00001F38 0000000000001BB0                   3236 @lit_1446_80 DC AD(rd_kafka_q_enq1)
                                            3237          DROP  12
                                            3238 *
                                            3239 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            3240 *      (FUNCTION #1446)
                                            3241 *
00000000                00000000 000000A8   3242 @AUTO#rd_kafka_q_enq DSECT
00000000                                    3243          DS    XL168
                                            3244 *
00001F40                00000000 000054D2   3245 @CODE    CSECT
                                            3246 *
                                            3247 *
                                            3248 *
                                            3249 * ....... start of rd_kafka_replyq_clear
00001F40                                    3250 @LNAME1458 DS  0H
00001F40 00000015                           3251          DC    X'00000015'
00001F44 99846D9281869281                   3252          DC    C'rd_kafka_replyq_clear'
00001F59 00                                 3253          DC    X'00'
                                            3254 rd_kafka_replyq_clear DCCPRLG CINDEX=1458,BASER=0,FRAME=168,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1458
                                            3255          macro
                                            3256          dccextrn &m
                                            3257          gblc    &$dccext(1000)
                                            3258          gbla    &$dccexti
                                            3259          lcla    &i
                                            3260 &$dccext(&$dccexti+1) setc    '&m'
                                            3261 &i       seta    1
                                            3262 .loop    aif    (&i gt &$dccexti).around
                                            3263          aif    ('&$dccext(&i)' eq '&m').getout
                                            3264 &i       seta    &i+1
                                            3265          ago     .loop
                                            3266 .around  anop
                                            3267 &$dccexti seta &$dccexti+1
                                            3268          extrn  &m
                                            3269 .getout  anop
                                            3270          mend
00001F60                                    3271+$eye0073    ds    0d                                                    02-DCCCA
00001F60 C4C3C3                             3272+         dc cl3'DCC'                                                    02-DCCCA
00001F63 01                                 3273+         dc xl1'01' format one                                          02-DCCCA
00001F64 00000000                           3274+         dc a(0)                                                        02-DCCCA
00001F68 0000000000000000                   3275+         dc ad(0)                                                       02-DCCCA
00001F70 00000000000000A8                   3276+         dc ad(168)                                                     02-DCCCA
00001F78 0000000000000000                   3277+         dc ad(0)                                                       02-DCCCA
00001F80 0000000000001000                   3278+         dc ad(4096)                                                    02-DCCCA
00001F88 20                                 3279+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F89 03                                 3280+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   69 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001F8A 03                                 3281+         dc al1(3)                                                      02-DCCCA
00001F8B 08                                 3282+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F8C 00                                 3283+         dc bl.8'00000000'                                              02-DCCCA
00001F8D 000000                             3284+         dc al3(0)                                                      02-DCCCA
00001F90 0000000000001F40                   3285+         dc ad(@LNAME1458)                                              02-DCCCA
00001F98                                    3286+         ds 0d                                                          02-DCCCA
00001F98 0000000000001F60                   3287+         dc ad($eye0073)                                                02-DCCCA
00001FA0 0000000000000000                   3288+         dc ad(0)                                                       02-DCCCA
00001FA8                                    3289+         ds    0d                                                       01-DCCPR
00001FA8                                    3290+rd_kafka_replyq_clear ds 0d                                             01-DCCPR
00001FA8                                    3291+@REGION_1458_1 ds 0h                                                    01-DCCPR
00001FA8 EBEC D008 0024          00000008   3292+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3293 * ******* End of Prologue
                                            3294 * *
                                            3295 * ***      __memset(replyq,0,sizeof(*replyq));
00001FAE E3F0 1000 0004          00000000   3296          LG    15,0(0,1)
                                            3297 * setting 16 bytes to 0x00
00001FB4 D70F F000 F000 00000000 00000000   3298          XC    0(16,15),0(15)
                                            3299 * ***   }
00001FBA                                    3300 @ret_lab_1458 DS 0H
                                            3301 * * **** Start of Epilogue
                                            3302          DCCEPIL
00001FBA                                    3303+         ds 0h                                                          01-DCCEP
                                            3304+* Epilog
                                            3305+* Epilog
00001FBA E3E0 D008 0004          00000008   3306+         lg    14,8(,13) restore the reg                                01-DCCEP
00001FC0 EB1C D020 0004          00000020   3307+         lmg   1,12,32(13)                                              01-DCCEP
00001FC6 07FE                               3308+         br   14                                                        01-DCCEP
                                            3309+* End of Epilog
                                            3310 * * **** End of Epilogue
                                            3311 *
                                            3312 *   DSECT for automatic variables in "rd_kafka_replyq_clear"
                                            3313 *      (FUNCTION #1458)
                                            3314 *
00000000                00000000 000000A8   3315 @AUTO#rd_kafka_replyq_clear DSECT
00000000                                    3316          DS    XL168
                                            3317 *
00001FC8                00000000 000054D2   3318 @CODE    CSECT
                                            3319 *
                                            3320 *
                                            3321 *
                                            3322 * ....... start of rd_kafka_replyq_copy
00001FC8                                    3323 @LNAME1459 DS  0H
00001FC8 00000014                           3324          DC    X'00000014'
00001FCC 99846D9281869281                   3325          DC    C'rd_kafka_replyq_copy'
00001FE0 00                                 3326          DC    X'00'
                                            3327 rd_kafka_replyq_copy DCCPRLG CINDEX=1459,BASER=12,FRAME=176,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1459
                                            3328          macro
                                            3329          dccextrn &m
                                            3330          gblc    &$dccext(1000)
                                            3331          gbla    &$dccexti
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3332          lcla    &i
                                            3333 &$dccext(&$dccexti+1) setc    '&m'
                                            3334 &i       seta    1
                                            3335 .loop    aif    (&i gt &$dccexti).around
                                            3336          aif    ('&$dccext(&i)' eq '&m').getout
                                            3337 &i       seta    &i+1
                                            3338          ago     .loop
                                            3339 .around  anop
                                            3340 &$dccexti seta &$dccexti+1
                                            3341          extrn  &m
                                            3342 .getout  anop
                                            3343          mend
00001FE8                                    3344+$eye0076    ds    0d                                                    02-DCCCA
00001FE8 C4C3C3                             3345+         dc cl3'DCC'                                                    02-DCCCA
00001FEB 01                                 3346+         dc xl1'01' format one                                          02-DCCCA
00001FEC 00000000                           3347+         dc a(0)                                                        02-DCCCA
00001FF0 000000000000205A                   3348+         dc ad(@PER_1459)                                               02-DCCCA
00001FF8 00000000000000B0                   3349+         dc ad(176)                                                     02-DCCCA
00002000 0000000000000000                   3350+         dc ad(0)                                                       02-DCCCA
00002008 0000000000001000                   3351+         dc ad(4096)                                                    02-DCCCA
00002010 20                                 3352+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002011 03                                 3353+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002012 03                                 3354+         dc al1(3)                                                      02-DCCCA
00002013 08                                 3355+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002014 00                                 3356+         dc bl.8'00000000'                                              02-DCCCA
00002015 000000                             3357+         dc al3(0)                                                      02-DCCCA
00002018 0000000000001FC8                   3358+         dc ad(@LNAME1459)                                              02-DCCCA
00002020                                    3359+         ds 0d                                                          02-DCCCA
00002020 0000000000001FE8                   3360+         dc ad($eye0076)                                                02-DCCCA
00002028 0000000000000000                   3361+         dc ad(0)                                                       02-DCCCA
00002030                                    3362+         ds    0d                                                       01-DCCPR
00002030                                    3363+rd_kafka_replyq_copy ds 0d                                              01-DCCPR
00002030                                    3364+@REGION_1459_1 ds 0h                                                    01-DCCPR
00002030 EBEC D008 0024          00000008   3365+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002036 E3E0 D088 0004          00000088   3366+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000203C E3C0 D090 0004          00000090   3367+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002042 B904 002E                          3368+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002046 E3B0 C018 0004          00000018   3369+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000204C A7EB 00B0               000000B0   3370+         aghi  14,176              increase by frame size               01-DCCPR
00002050 E3E0 C020 0021          00000020   3371+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002056 4720 B020               00000020   3372+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000205A                                    3373+@PER_1459 ds   0h                                                       01-DCCPR
0000205A EBDE 2080 0024          00000080   3374+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002060 E3C0 2090 0024          00000090   3375+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002066 B904 00D2                          3376+         lgr   13,2                set real frame pointer               01-DCCPR
0000206A B904 00CF                          3377+         lgr   12,15               set base reg                         01-DCCPR
                        00002030            3378+         using @REGION_1459_1,12                                        01-DCCPR
                                            3379 * ******* End of Prologue
                                            3380 * *
                                            3381 * ***           dst->version = src->version;
0000206E E3F0 1000 0004          00000000   3382          LG    15,0(0,1)   ; dst
00002074 E310 1008 0004          00000008   3383          LG    1,8(0,1)    ; src
                                                                                                                           Page   71 
  Active Usings: @REGION_1459_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000207A 5820 1008               00000008   3384          L     2,8(0,1)    ; offset of version in rd_kafka_replyq_s
0000207E 5020 F008               00000008   3385          ST    2,8(0,15)   ; offset of version in rd_kafka_replyq_s
                                            3386 * ***           dst->q = src->q;
00002082 E310 1000 0004          00000000   3387          LG    1,0(0,1)    ; src
00002088 E310 F000 0024          00000000   3388          STG   1,0(0,15)   ; dst
                                            3389 * ***           if (dst->q)
0000208E B902 0011                          3390          LTGR  1,1
00002092 4780 C07E               000020AE   3391          BZ    @ret_lab_1459
                                            3392 * ***                   rd_kafka_q_keep(dst->q);
00002096 E3F0 F000 0004          00000000   3393          LG    15,0(0,15)
0000209C E3F0 D0A8 0024          000000A8   3394          STG   15,168(0,13)
000020A2 4110 D0A8               000000A8   3395          LA    1,168(0,13)
000020A6 E3F0 C0D0 0004          00002100   3396          LG    15,@lit_1459_82 ; rd_kafka_q_keep
000020AC                                    3397 @@gen_label136 DS    0H
000020AC 05EF                               3398          BALR  14,15
000020AE                                    3399 @@gen_label137 DS    0H
000020AE                                    3400 @L444    DS    0H
                                            3401 * ***   # 756 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3402 * ***   }
000020AE                                    3403 @ret_lab_1459 DS 0H
                                            3404 * * **** Start of Epilogue
                                            3405          DCCEPIL
000020AE                                    3406+         ds 0h                                                          01-DCCEP
                                            3407+* Epilog
000020AE D707 D088 D088 00000088 00000088   3408+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000020B4 E3D0 D080 0004          00000080   3409+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020BA E3C0 D090 0004          00000090   3410+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020C0 E3B0 C018 0004          00000018   3411+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020C6 E3C0 B010 0021          00000010   3412+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000020CC E3E0 D008 0004          00000008   3413+         lg  14,8(0,13)          load up return address                 01-DCCEP
000020D2 EB1C D020 0004          00000020   3414+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000020D8 078E                               3415+         bcr 8,14                if same dsab, just return              01-DCCEP
000020DA E3F0 D010 0024          00000010   3416+         stg 15,16(0,13)         save return code                       01-DCCEP
000020E0 E300 D018 0024          00000018   3417+         stg 0,24(0,13)          save more return code                  01-DCCEP
000020E6 E3F0 D090 0004          00000090   3418+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020EC E3F0 F018 0004          00000018   3419+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020F2 47F0 F040               00000040   3420+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3421+* End of Epilog
                                            3422 * * **** End of Epilogue
000020F8                                    3423          DS    0D
000020F8 000000B0                           3424 @FRAMESIZE_1459 DC F'176'
000020FC 00000000
00002100 00000000000010D0                   3425 @lit_1459_82 DC AD(rd_kafka_q_keep)
                                            3426          DROP  12
                                            3427 *
                                            3428 *   DSECT for automatic variables in "rd_kafka_replyq_copy"
                                            3429 *      (FUNCTION #1459)
                                            3430 *
00000000                00000000 000000A8   3431 @AUTO#rd_kafka_replyq_copy DSECT
00000000                                    3432          DS    XL168
                                            3433 *
00002108                00000000 000054D2   3434 @CODE    CSECT
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3435 *
                                            3436 *
                                            3437 *
                                            3438 * ....... start of rd_kafka_replyq_destroy
00002108                                    3439 @LNAME1460 DS  0H
00002108 00000017                           3440          DC    X'00000017'
0000210C 99846D9281869281                   3441          DC    C'rd_kafka_replyq_destroy'
00002123 00                                 3442          DC    X'00'
                                            3443 rd_kafka_replyq_destroy DCCPRLG CINDEX=1460,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1460
                                            3444          macro
                                            3445          dccextrn &m
                                            3446          gblc    &$dccext(1000)
                                            3447          gbla    &$dccexti
                                            3448          lcla    &i
                                            3449 &$dccext(&$dccexti+1) setc    '&m'
                                            3450 &i       seta    1
                                            3451 .loop    aif    (&i gt &$dccexti).around
                                            3452          aif    ('&$dccext(&i)' eq '&m').getout
                                            3453 &i       seta    &i+1
                                            3454          ago     .loop
                                            3455 .around  anop
                                            3456 &$dccexti seta &$dccexti+1
                                            3457          extrn  &m
                                            3458 .getout  anop
                                            3459          mend
00002128                                    3460+$eye0079    ds    0d                                                    02-DCCCA
00002128 C4C3C3                             3461+         dc cl3'DCC'                                                    02-DCCCA
0000212B 01                                 3462+         dc xl1'01' format one                                          02-DCCCA
0000212C 00000000                           3463+         dc a(0)                                                        02-DCCCA
00002130 000000000000219A                   3464+         dc ad(@PER_1460)                                               02-DCCCA
00002138 00000000000000B8                   3465+         dc ad(184)                                                     02-DCCCA
00002140 0000000000000000                   3466+         dc ad(0)                                                       02-DCCCA
00002148 0000000000001000                   3467+         dc ad(4096)                                                    02-DCCCA
00002150 20                                 3468+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002151 03                                 3469+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002152 03                                 3470+         dc al1(3)                                                      02-DCCCA
00002153 08                                 3471+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002154 00                                 3472+         dc bl.8'00000000'                                              02-DCCCA
00002155 000000                             3473+         dc al3(0)                                                      02-DCCCA
00002158 0000000000002108                   3474+         dc ad(@LNAME1460)                                              02-DCCCA
00002160                                    3475+         ds 0d                                                          02-DCCCA
00002160 0000000000002128                   3476+         dc ad($eye0079)                                                02-DCCCA
00002168 0000000000000000                   3477+         dc ad(0)                                                       02-DCCCA
00002170                                    3478+         ds    0d                                                       01-DCCPR
00002170                                    3479+rd_kafka_replyq_destroy ds 0d                                           01-DCCPR
00002170                                    3480+@REGION_1460_1 ds 0h                                                    01-DCCPR
00002170 EBEC D008 0024          00000008   3481+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002176 E3E0 D088 0004          00000088   3482+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000217C E3C0 D090 0004          00000090   3483+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002182 B904 002E                          3484+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002186 E3B0 C018 0004          00000018   3485+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000218C A7EB 00B8               000000B8   3486+         aghi  14,184              increase by frame size               01-DCCPR
00002190 E3E0 C020 0021          00000020   3487+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002196 4720 B020               00000020   3488+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000219A                                    3489+@PER_1460 ds   0h                                                       01-DCCPR
0000219A EBDE 2080 0024          00000080   3490+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000021A0 E3C0 2090 0024          00000090   3491+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000021A6 B904 00D2                          3492+         lgr   13,2                set real frame pointer               01-DCCPR
000021AA B904 00CF                          3493+         lgr   12,15               set base reg                         01-DCCPR
                        00002170            3494+         using @REGION_1460_1,12                                        01-DCCPR
                                            3495 * ******* End of Prologue
                                            3496 * *
                                            3497 * ***      if (replyq->q)
000021AE E320 1000 0004          00000000   3498          LG    2,0(0,1)    ; replyq
000021B4 E3F0 2000 0002          00000000   3499          LTG   15,0(0,2)   ; replyq
000021BA 4780 C06C               000021DC   3500          BZ    @L445
                                            3501 * ***         rd_kafka_q_destroy0(replyq->q, 0 );
000021BE E3F0 2000 0004          00000000   3502          LG    15,0(0,2)
000021C4 E3F0 D0A8 0024          000000A8   3503          STG   15,168(0,13)
000021CA D707 D0B0 D0B0 000000B0 000000B0   3504          XC    176(8,13),176(13)
000021D0 4110 D0A8               000000A8   3505          LA    1,168(0,13)
000021D4 E3F0 C0D0 0004          00002240   3506          LG    15,@lit_1460_84 ; rd_kafka_q_destroy0
000021DA                                    3507 @@gen_label139 DS    0H
000021DA 05EF                               3508          BALR  14,15
000021DC                                    3509 @@gen_label140 DS    0H
000021DC                                    3510 @L445    DS    0H
                                            3511 * ***   # 772 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3512 * ***      rd_kafka_replyq_clear(replyq);
000021DC E320 D0A8 0024          000000A8   3513          STG   2,168(0,13)
000021E2 4110 D0A8               000000A8   3514          LA    1,168(0,13)
000021E6 E3F0 C0D8 0004          00002248   3515          LG    15,@lit_1460_85 ; rd_kafka_replyq_clear
000021EC                                    3516 @@gen_label141 DS    0H
000021EC 05EF                               3517          BALR  14,15
000021EE                                    3518 @@gen_label142 DS    0H
                                            3519 * ***   }
000021EE                                    3520 @ret_lab_1460 DS 0H
                                            3521 * * **** Start of Epilogue
                                            3522          DCCEPIL
000021EE                                    3523+         ds 0h                                                          01-DCCEP
                                            3524+* Epilog
000021EE D707 D088 D088 00000088 00000088   3525+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021F4 E3D0 D080 0004          00000080   3526+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021FA E3C0 D090 0004          00000090   3527+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002200 E3B0 C018 0004          00000018   3528+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002206 E3C0 B010 0021          00000010   3529+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000220C E3E0 D008 0004          00000008   3530+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002212 EB1C D020 0004          00000020   3531+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002218 078E                               3532+         bcr 8,14                if same dsab, just return              01-DCCEP
0000221A E3F0 D010 0024          00000010   3533+         stg 15,16(0,13)         save return code                       01-DCCEP
00002220 E300 D018 0024          00000018   3534+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002226 E3F0 D090 0004          00000090   3535+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000222C E3F0 F018 0004          00000018   3536+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002232 47F0 F040               00000040   3537+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   74 
  Active Usings: @REGION_1460_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3538+* End of Epilog
                                            3539 * * **** End of Epilogue
00002238                                    3540          DS    0D
00002238 000000B8                           3541 @FRAMESIZE_1460 DC F'184'
0000223C 00000000
00002240 0000000000001350                   3542 @lit_1460_84 DC AD(rd_kafka_q_destroy0)
00002248 0000000000001FA8                   3543 @lit_1460_85 DC AD(rd_kafka_replyq_clear)
                                            3544          DROP  12
                                            3545 *
                                            3546 *   DSECT for automatic variables in "rd_kafka_replyq_destroy"
                                            3547 *      (FUNCTION #1460)
                                            3548 *
00000000                00000000 000000A8   3549 @AUTO#rd_kafka_replyq_destroy DSECT
00000000                                    3550          DS    XL168
                                            3551 *
00002250                00000000 000054D2   3552 @CODE    CSECT
                                            3553 *
                                            3554 *
                                            3555 *
                                            3556 * ....... start of rd_kafka_replyq_enq
00002250                                    3557 @LNAME1461 DS  0H
00002250 00000013                           3558          DC    X'00000013'
00002254 99846D9281869281                   3559          DC    C'rd_kafka_replyq_enq'
00002267 00                                 3560          DC    X'00'
                                            3561 rd_kafka_replyq_enq DCCPRLG CINDEX=1461,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1461
                                            3562          macro
                                            3563          dccextrn &m
                                            3564          gblc    &$dccext(1000)
                                            3565          gbla    &$dccexti
                                            3566          lcla    &i
                                            3567 &$dccext(&$dccexti+1) setc    '&m'
                                            3568 &i       seta    1
                                            3569 .loop    aif    (&i gt &$dccexti).around
                                            3570          aif    ('&$dccext(&i)' eq '&m').getout
                                            3571 &i       seta    &i+1
                                            3572          ago     .loop
                                            3573 .around  anop
                                            3574 &$dccexti seta &$dccexti+1
                                            3575          extrn  &m
                                            3576 .getout  anop
                                            3577          mend
00002268                                    3578+$eye0082    ds    0d                                                    02-DCCCA
00002268 C4C3C3                             3579+         dc cl3'DCC'                                                    02-DCCCA
0000226B 01                                 3580+         dc xl1'01' format one                                          02-DCCCA
0000226C 00000000                           3581+         dc a(0)                                                        02-DCCCA
00002270 00000000000022DA                   3582+         dc ad(@PER_1461)                                               02-DCCCA
00002278 00000000000000C0                   3583+         dc ad(192)                                                     02-DCCCA
00002280 0000000000000000                   3584+         dc ad(0)                                                       02-DCCCA
00002288 0000000000001000                   3585+         dc ad(4096)                                                    02-DCCCA
00002290 20                                 3586+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002291 03                                 3587+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002292 03                                 3588+         dc al1(3)                                                      02-DCCCA
00002293 08                                 3589+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002294 00                                 3590+         dc bl.8'00000000'                                              02-DCCCA
00002295 000000                             3591+         dc al3(0)                                                      02-DCCCA
00002298 0000000000002250                   3592+         dc ad(@LNAME1461)                                              02-DCCCA
000022A0                                    3593+         ds 0d                                                          02-DCCCA
000022A0 0000000000002268                   3594+         dc ad($eye0082)                                                02-DCCCA
000022A8 0000000000000000                   3595+         dc ad(0)                                                       02-DCCCA
000022B0                                    3596+         ds    0d                                                       01-DCCPR
000022B0                                    3597+rd_kafka_replyq_enq ds 0d                                               01-DCCPR
000022B0                                    3598+@REGION_1461_1 ds 0h                                                    01-DCCPR
000022B0 EBEC D008 0024          00000008   3599+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000022B6 E3E0 D088 0004          00000088   3600+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000022BC E3C0 D090 0004          00000090   3601+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000022C2 B904 002E                          3602+         lgr   2,14                copy addr of our savearea            01-DCCPR
000022C6 E3B0 C018 0004          00000018   3603+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000022CC A7EB 00C0               000000C0   3604+         aghi  14,192              increase by frame size               01-DCCPR
000022D0 E3E0 C020 0021          00000020   3605+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000022D6 4720 B020               00000020   3606+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000022DA                                    3607+@PER_1461 ds   0h                                                       01-DCCPR
000022DA EBDE 2080 0024          00000080   3608+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000022E0 E3C0 2090 0024          00000090   3609+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000022E6 B904 00D2                          3610+         lgr   13,2                set real frame pointer               01-DCCPR
000022EA B904 00CF                          3611+         lgr   12,15               set base reg                         01-DCCPR
                        000022B0            3612+         using @REGION_1461_1,12                                        01-DCCPR
000022EE B904 0031                          3613          LGR   3,1         ; ptr to parm area
                                            3614 * ******* End of Prologue
                                            3615 * *
                                            3616 * ***      rd_kafka_q_t *rkq = replyq->q;
000022F2 E3F0 3000 0004          00000000   3617          LG    15,0(0,3)   ; replyq
000022F8 E310 3008 0004          00000008   3618          LG    1,8(0,3)    ; rko
000022FE E320 F000 0004          00000000   3619          LG    2,0(0,15)   ; replyq
                                            3620 * ***      int r;
                                            3621 * ***
                                            3622 * ***      if (version)
00002304 E330 3014 0012          00000014   3623          LT    3,20(0,3)   ; version
0000230A 4780 C080               00002330   3624          BZ    @L446
                                            3625 * ***         rko->rko_version = version;
0000230E 5030 101C               0000001C   3626          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
00002312 47F0 C088               00002338   3627          B     @L447
00002318                                    3628          DS    0D
00002318 000000C0                           3629 @FRAMESIZE_1461 DC F'192'
0000231C 00000000
00002320 0000000000001E68                   3630 @lit_1461_88 DC AD(rd_kafka_q_enq)
00002328 0000000000001350                   3631 @lit_1461_89 DC AD(rd_kafka_q_destroy0)
                                            3632 * ***      else
00002330                                    3633 @L446    DS    0H
                                            3634 * ***         rko->rko_version = replyq->version;
00002330 5830 F008               00000008   3635          L     3,8(0,15)   ; offset of version in rd_kafka_replyq_s
00002334 5030 101C               0000001C   3636          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
00002338                                    3637 @L447    DS    0H
                                            3638 * ***
                                                                                                                           Page   76 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3639 * ***
                                            3640 * ***
                                            3641 * ***           replyq->q = ((void *)0);
00002338 A739 0000               00000000   3642          LGHI  3,0         ; 0
0000233C E330 F000 0024          00000000   3643          STG   3,0(0,15)   ; replyq
                                            3644 * ***
                                            3645 * ***
                                            3646 * ***   # 807 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3647 * ***
                                            3648 * ***
                                            3649 * ***
                                            3650 * ***      r = rd_kafka_q_enq(rkq, rko);
00002342 E320 D0B0 0024          000000B0   3651          STG   2,176(0,13)
00002348 E310 D0B8 0024          000000B8   3652          STG   1,184(0,13)
0000234E 4110 D0B0               000000B0   3653          LA    1,176(0,13)
00002352 E3F0 C070 0004          00002320   3654          LG    15,@lit_1461_88 ; rd_kafka_q_enq
00002358                                    3655 @@gen_label144 DS    0H
00002358 05EF                               3656          BALR  14,15
0000235A                                    3657 @@gen_label145 DS    0H
0000235A 183F                               3658          LR    3,15
                                            3659 * ***
                                            3660 * ***      rd_kafka_q_destroy0(rkq, 0 );
0000235C E320 D0B0 0024          000000B0   3661          STG   2,176(0,13)
00002362 D707 D0B8 D0B8 000000B8 000000B8   3662          XC    184(8,13),184(13)
00002368 4110 D0B0               000000B0   3663          LA    1,176(0,13)
0000236C E3F0 C078 0004          00002328   3664          LG    15,@lit_1461_89 ; rd_kafka_q_destroy0
00002372                                    3665 @@gen_label146 DS    0H
00002372 05EF                               3666          BALR  14,15
00002374                                    3667 @@gen_label147 DS    0H
                                            3668 * ***
                                            3669 * ***      return r;
00002374 B914 00F3                          3670          LGFR  15,3
                                            3671 * ***   }
                                            3672 * * **** Start of Epilogue
                                            3673          DCCEPIL
00002378                                    3674+         ds 0h                                                          01-DCCEP
                                            3675+* Epilog
00002378 D707 D088 D088 00000088 00000088   3676+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000237E E3D0 D080 0004          00000080   3677+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002384 E3C0 D090 0004          00000090   3678+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000238A E3B0 C018 0004          00000018   3679+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002390 E3C0 B010 0021          00000010   3680+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002396 E3E0 D008 0004          00000008   3681+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000239C EB1C D020 0004          00000020   3682+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000023A2 078E                               3683+         bcr 8,14                if same dsab, just return              01-DCCEP
000023A4 E3F0 D010 0024          00000010   3684+         stg 15,16(0,13)         save return code                       01-DCCEP
000023AA E300 D018 0024          00000018   3685+         stg 0,24(0,13)          save more return code                  01-DCCEP
000023B0 E3F0 D090 0004          00000090   3686+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000023B6 E3F0 F018 0004          00000018   3687+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000023BC 47F0 F040               00000040   3688+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3689+* End of Epilog
                                            3690 * * **** End of Epilogue
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3691          DROP  12
                                            3692 *
                                            3693 *   DSECT for automatic variables in "rd_kafka_replyq_enq"
                                            3694 *      (FUNCTION #1461)
                                            3695 *
00000000                00000000 000000AC   3696 @AUTO#rd_kafka_replyq_enq DSECT
00000000                                    3697          DS    XL168
000000A8                                    3698 rd_kafka_replyq_enq#r#0 DS 1F ; r
                                            3699 *
000023C0                00000000 000054D2   3700 @CODE    CSECT
                                            3701 *
                                            3702 *
                                            3703 *
                                            3704 * ....... start of rd_crc32_update
000023C0                                    3705 @LNAME1485 DS  0H
000023C0 0000000F                           3706          DC    X'0000000F'
000023C4 99846D839983F3F2                   3707          DC    C'rd_crc32_update'
000023D3 00                                 3708          DC    X'00'
                                            3709 rd_crc32_update DCCPRLG CINDEX=1485,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1485
                                            3710          macro
                                            3711          dccextrn &m
                                            3712          gblc    &$dccext(1000)
                                            3713          gbla    &$dccexti
                                            3714          lcla    &i
                                            3715 &$dccext(&$dccexti+1) setc    '&m'
                                            3716 &i       seta    1
                                            3717 .loop    aif    (&i gt &$dccexti).around
                                            3718          aif    ('&$dccext(&i)' eq '&m').getout
                                            3719 &i       seta    &i+1
                                            3720          ago     .loop
                                            3721 .around  anop
                                            3722 &$dccexti seta &$dccexti+1
                                            3723          extrn  &m
                                            3724 .getout  anop
                                            3725          mend
000023D8                                    3726+$eye0085    ds    0d                                                    02-DCCCA
000023D8 C4C3C3                             3727+         dc cl3'DCC'                                                    02-DCCCA
000023DB 01                                 3728+         dc xl1'01' format one                                          02-DCCCA
000023DC 00000000                           3729+         dc a(0)                                                        02-DCCCA
000023E0 000000000000244A                   3730+         dc ad(@PER_1485)                                               02-DCCCA
000023E8 00000000000000B0                   3731+         dc ad(176)                                                     02-DCCCA
000023F0 0000000000000000                   3732+         dc ad(0)                                                       02-DCCCA
000023F8 0000000000001000                   3733+         dc ad(4096)                                                    02-DCCCA
00002400 20                                 3734+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002401 03                                 3735+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002402 03                                 3736+         dc al1(3)                                                      02-DCCCA
00002403 08                                 3737+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002404 00                                 3738+         dc bl.8'00000000'                                              02-DCCCA
00002405 000000                             3739+         dc al3(0)                                                      02-DCCCA
00002408 00000000000023C0                   3740+         dc ad(@LNAME1485)                                              02-DCCCA
00002410                                    3741+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002410 00000000000023D8                   3742+         dc ad($eye0085)                                                02-DCCCA
00002418 0000000000000000                   3743+         dc ad(0)                                                       02-DCCCA
00002420                                    3744+         ds    0d                                                       01-DCCPR
00002420                                    3745+rd_crc32_update ds 0d                                                   01-DCCPR
00002420                                    3746+@REGION_1485_1 ds 0h                                                    01-DCCPR
00002420 EBEC D008 0024          00000008   3747+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002426 E3E0 D088 0004          00000088   3748+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000242C E3C0 D090 0004          00000090   3749+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002432 B904 002E                          3750+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002436 E3B0 C018 0004          00000018   3751+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000243C A7EB 00B0               000000B0   3752+         aghi  14,176              increase by frame size               01-DCCPR
00002440 E3E0 C020 0021          00000020   3753+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002446 4720 B020               00000020   3754+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000244A                                    3755+@PER_1485 ds   0h                                                       01-DCCPR
0000244A EBDE 2080 0024          00000080   3756+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002450 E3C0 2090 0024          00000090   3757+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002456 B904 00D2                          3758+         lgr   13,2                set real frame pointer               01-DCCPR
0000245A B904 00CF                          3759+         lgr   12,15               set base reg                         01-DCCPR
                        00002420            3760+         using @REGION_1485_1,12                                        01-DCCPR
                                            3761          DCCPRV REG=2      ; Get PRV from DVT
0000245E E320 B008 0004          00000008   3762+         LG 2,8(0,11)                                                   01-DCCPR
00002464 B904 0031                          3763          LGR   3,1         ; ptr to parm area
                                            3764 * ******* End of Prologue
                                            3765 * *
00002468 58F0 3004               00000004   3766          L     15,4(0,3)   ; crc
0000246C E310 3008 0004          00000008   3767          LG    1,8(0,3)    ; data
                                            3768 * ***
                                            3769 * ***
                                            3770 * ***
                                            3771 * ***
                                            3772 * ***       unsigned int tbl_idx;
                                            3773 * ***
                                            3774 * ***       while (data_len--) {
00002472 47F0 C090               000024B0   3775          B     @L483
00002478                                    3776          DS    0D
00002478 000000B0                           3777 @FRAMESIZE_1485 DC F'176'
0000247C 00000000                           3778 @lit_1485_91 DC Q(crc_table)
00002480                                    3779 @L482    DS    0H
                                            3780 * ***           tbl_idx = (crc ^ *data) & 0xff;
00002480 E340 1000 0094          00000000   3781          LLC   4,0(0,1)
00002486 185F                               3782          LR    5,15
00002488 1754                               3783          XR    5,4
0000248A C05B 0000 00FF                     3784          NILF  5,X'000000FF'
                                            3785 * ***           crc = (crc_table[tbl_idx] ^ (crc >> 8)) & 0xffffffff;
00002490 B916 0045                          3786          LLGFR 4,5
00002494 E350 C05C 0016          0000247C   3787          LLGF  5,@lit_1485_91 ; crc_table
0000249A EB44 0002 000D          00000002   3788          SLLG  4,4,2(0)    ; *0x4
000024A0 4145 4000               00000000   3789          LA    4,0(5,4)
000024A4 88F0 0008               00000008   3790          SRL   15,8(0)
000024A8 57F4 2000               00000000   3791          X     15,0(4,2)
                                            3792 * ***
                                            3793 * ***           data++;
                                                                                                                           Page   79 
  Active Usings: @REGION_1485_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000024AC 4110 1001               00000001   3794          LA    1,1(0,1)
                                            3795 * ***       }
000024B0                                    3796 @L483    DS    0H
000024B0 E340 3010 0004          00000010   3797          LG    4,16(0,3)   ; data_len
000024B6 B904 0054                          3798          LGR   5,4
000024BA A75B FFFF               0000FFFF   3799          AGHI  5,-1
000024BE E350 3010 0024          00000010   3800          STG   5,16(0,3)   ; data_len
000024C4 B902 0044                          3801          LTGR  4,4
000024C8 4770 C060               00002480   3802          BNZ   @L482
                                            3803 * ***       return crc & 0xffffffff;
000024CC B916 00FF                          3804          LLGFR 15,15
                                            3805 * ***
                                            3806 * ***   }
                                            3807 * * **** Start of Epilogue
                                            3808          DCCEPIL
000024D0                                    3809+         ds 0h                                                          01-DCCEP
                                            3810+* Epilog
000024D0 D707 D088 D088 00000088 00000088   3811+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000024D6 E3D0 D080 0004          00000080   3812+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000024DC E3C0 D090 0004          00000090   3813+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000024E2 E3B0 C018 0004          00000018   3814+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000024E8 E3C0 B010 0021          00000010   3815+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000024EE E3E0 D008 0004          00000008   3816+         lg  14,8(0,13)          load up return address                 01-DCCEP
000024F4 EB1C D020 0004          00000020   3817+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000024FA 078E                               3818+         bcr 8,14                if same dsab, just return              01-DCCEP
000024FC E3F0 D010 0024          00000010   3819+         stg 15,16(0,13)         save return code                       01-DCCEP
00002502 E300 D018 0024          00000018   3820+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002508 E3F0 D090 0004          00000090   3821+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000250E E3F0 F018 0004          00000018   3822+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002514 47F0 F040               00000040   3823+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3824+* End of Epilog
                                            3825 * * **** End of Epilogue
                                            3826          DROP  12
                                            3827 *
                                            3828 *   DSECT for automatic variables in "rd_crc32_update"
                                            3829 *      (FUNCTION #1485)
                                            3830 *
00000000                00000000 000000AC   3831 @AUTO#rd_crc32_update DSECT
00000000                                    3832          DS    XL168
000000A8                                    3833 rd_crc32_update#tbl_idx#0 DS 1F ; tbl_idx
                                            3834 *
00002518                00000000 000054D2   3835 @CODE    CSECT
                                            3836 *
                                            3837 *
                                            3838 *
                                            3839 * ....... start of rd_kafka_buf_write
00002518                                    3840 @LNAME1517 DS  0H
00002518 00000012                           3841          DC    X'00000012'
0000251C 99846D9281869281                   3842          DC    C'rd_kafka_buf_write'
0000252E 00                                 3843          DC    X'00'
                                            3844 rd_kafka_buf_write DCCPRLG CINDEX=1517,BASER=12,FRAME=200,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1517
                                                                                                                           Page   80 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3845          macro
                                            3846          dccextrn &m
                                            3847          gblc    &$dccext(1000)
                                            3848          gbla    &$dccexti
                                            3849          lcla    &i
                                            3850 &$dccext(&$dccexti+1) setc    '&m'
                                            3851 &i       seta    1
                                            3852 .loop    aif    (&i gt &$dccexti).around
                                            3853          aif    ('&$dccext(&i)' eq '&m').getout
                                            3854 &i       seta    &i+1
                                            3855          ago     .loop
                                            3856 .around  anop
                                            3857 &$dccexti seta &$dccexti+1
                                            3858          extrn  &m
                                            3859 .getout  anop
                                            3860          mend
00002530                                    3861+$eye0089    ds    0d                                                    02-DCCCA
00002530 C4C3C3                             3862+         dc cl3'DCC'                                                    02-DCCCA
00002533 01                                 3863+         dc xl1'01' format one                                          02-DCCCA
00002534 00000000                           3864+         dc a(0)                                                        02-DCCCA
00002538 00000000000025A2                   3865+         dc ad(@PER_1517)                                               02-DCCCA
00002540 00000000000000C8                   3866+         dc ad(200)                                                     02-DCCCA
00002548 0000000000000000                   3867+         dc ad(0)                                                       02-DCCCA
00002550 0000000000001000                   3868+         dc ad(4096)                                                    02-DCCCA
00002558 20                                 3869+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002559 03                                 3870+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000255A 03                                 3871+         dc al1(3)                                                      02-DCCCA
0000255B 08                                 3872+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000255C 00                                 3873+         dc bl.8'00000000'                                              02-DCCCA
0000255D 000000                             3874+         dc al3(0)                                                      02-DCCCA
00002560 0000000000002518                   3875+         dc ad(@LNAME1517)                                              02-DCCCA
00002568                                    3876+         ds 0d                                                          02-DCCCA
00002568 0000000000002530                   3877+         dc ad($eye0089)                                                02-DCCCA
00002570 0000000000000000                   3878+         dc ad(0)                                                       02-DCCCA
00002578                                    3879+         ds    0d                                                       01-DCCPR
00002578                                    3880+rd_kafka_buf_write ds 0d                                                01-DCCPR
00002578                                    3881+@REGION_1517_1 ds 0h                                                    01-DCCPR
00002578 EBEC D008 0024          00000008   3882+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000257E E3E0 D088 0004          00000088   3883+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002584 E3C0 D090 0004          00000090   3884+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000258A B904 002E                          3885+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000258E E3B0 C018 0004          00000018   3886+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002594 A7EB 00C8               000000C8   3887+         aghi  14,200              increase by frame size               01-DCCPR
00002598 E3E0 C020 0021          00000020   3888+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000259E 4720 B020               00000020   3889+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000025A2                                    3890+@PER_1517 ds   0h                                                       01-DCCPR
000025A2 EBDE 2080 0024          00000080   3891+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025A8 E3C0 2090 0024          00000090   3892+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025AE B904 00D2                          3893+         lgr   13,2                set real frame pointer               01-DCCPR
000025B2 B904 00CF                          3894+         lgr   12,15               set base reg                         01-DCCPR
                        00002578            3895+         using @REGION_1517_1,12                                        01-DCCPR
000025B6 B904 0041                          3896          LGR   4,1         ; ptr to parm area
                                                                                                                           Page   81 
  Active Usings: @REGION_1517_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3897 * ******* End of Prologue
                                            3898 * *
000025BA E320 4000 0004          00000000   3899          LG    2,0(0,4)    ; rkbuf
                                            3900 * ***       size_t r;
                                            3901 * ***
                                            3902 * ***       r = rd_buf_write(&rkbuf->rkbuf_buf, data, len);
000025C0 41F0 2028               00000028   3903          LA    15,40(0,2)
000025C4 E3F0 D0B0 0024          000000B0   3904          STG   15,176(0,13)
000025CA E3F0 4008 0004          00000008   3905          LG    15,8(0,4)   ; data
000025D0 E3F0 D0B8 0024          000000B8   3906          STG   15,184(0,13)
000025D6 E3F0 4010 0004          00000010   3907          LG    15,16(0,4)  ; len
000025DC E3F0 D0C0 0024          000000C0   3908          STG   15,192(0,13)
000025E2 4110 D0B0               000000B0   3909          LA    1,176(0,13)
000025E6 E3F0 C110 0004          00002688   3910          LG    15,@lit_1517_93 ; rd_buf_write
000025EC                                    3911 @@gen_label149 DS    0H
000025EC 05EF                               3912          BALR  14,15
000025EE                                    3913 @@gen_label150 DS    0H
000025EE B904 003F                          3914          LGR   3,15
                                            3915 * ***
                                            3916 * ***       if (rkbuf->rkbuf_flags & 0x4)
000025F2 9104 2023      00000023 00000004   3917          TM    35(2),4
000025F6 4780 C0B6               0000262E   3918          BZ    @L492
                                            3919 * ***           rkbuf->rkbuf_crc = rd_crc32_update(rkbuf->rkbuf_crc, d\
                                            3920 * ata, len);
000025FA E3F0 20B0 0016          000000B0   3921          LLGF  15,176(0,2)
00002600 E3F0 D0B0 0024          000000B0   3922          STG   15,176(0,13)
00002606 E3F0 4008 0004          00000008   3923          LG    15,8(0,4)   ; data
0000260C E3F0 D0B8 0024          000000B8   3924          STG   15,184(0,13)
00002612 E3F0 4010 0004          00000010   3925          LG    15,16(0,4)  ; len
00002618 E3F0 D0C0 0024          000000C0   3926          STG   15,192(0,13)
0000261E 4110 D0B0               000000B0   3927          LA    1,176(0,13)
00002622 E3F0 C118 0004          00002690   3928          LG    15,@lit_1517_94 ; rd_crc32_update
00002628                                    3929 @@gen_label152 DS    0H
00002628 05EF                               3930          BALR  14,15
0000262A                                    3931 @@gen_label153 DS    0H
0000262A 50F0 20B0               000000B0   3932          ST    15,176(0,2)
0000262E                                    3933 @L492    DS    0H
                                            3934 * ***
                                            3935 * ***       return r;
0000262E B904 00F3                          3936          LGR   15,3
                                            3937 * ***   }
                                            3938 * * **** Start of Epilogue
                                            3939          DCCEPIL
00002632                                    3940+         ds 0h                                                          01-DCCEP
                                            3941+* Epilog
00002632 D707 D088 D088 00000088 00000088   3942+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002638 E3D0 D080 0004          00000080   3943+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000263E E3C0 D090 0004          00000090   3944+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002644 E3B0 C018 0004          00000018   3945+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000264A E3C0 B010 0021          00000010   3946+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002650 E3E0 D008 0004          00000008   3947+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002656 EB1C D020 0004          00000020   3948+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   82 
  Active Usings: @REGION_1517_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000265C 078E                               3949+         bcr 8,14                if same dsab, just return              01-DCCEP
0000265E E3F0 D010 0024          00000010   3950+         stg 15,16(0,13)         save return code                       01-DCCEP
00002664 E300 D018 0024          00000018   3951+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000266A E3F0 D090 0004          00000090   3952+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002670 E3F0 F018 0004          00000018   3953+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002676 47F0 F040               00000040   3954+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3955+* End of Epilog
                                            3956 * * **** End of Epilogue
00002680                                    3957          DS    0D
00002680 000000C8                           3958 @FRAMESIZE_1517 DC F'200'
00002684 00000000
00002688 0000000000000000                   3959 @lit_1517_93 DC AD(rd_buf_write)
00002690 0000000000002420                   3960 @lit_1517_94 DC AD(rd_crc32_update)
                                            3961          DROP  12
                                            3962 *
                                            3963 *   DSECT for automatic variables in "rd_kafka_buf_write"
                                            3964 *      (FUNCTION #1517)
                                            3965 *
00000000                00000000 000000B0   3966 @AUTO#rd_kafka_buf_write DSECT
00000000                                    3967          DS    XL168
000000A8                                    3968 rd_kafka_buf_write#r#0 DS 8XL1 ; r
                                            3969 *
00002698                00000000 000054D2   3970 @CODE    CSECT
                                            3971 *
                                            3972 *
                                            3973 *
                                            3974 * ....... start of rd_kafka_buf_write_i8
00002698                                    3975 @LNAME1519 DS  0H
00002698 00000015                           3976          DC    X'00000015'
0000269C 99846D9281869281                   3977          DC    C'rd_kafka_buf_write_i8'
000026B1 00                                 3978          DC    X'00'
                                            3979 rd_kafka_buf_write_i8 DCCPRLG CINDEX=1519,BASER=12,FRAME=192,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1519
                                            3980          macro
                                            3981          dccextrn &m
                                            3982          gblc    &$dccext(1000)
                                            3983          gbla    &$dccexti
                                            3984          lcla    &i
                                            3985 &$dccext(&$dccexti+1) setc    '&m'
                                            3986 &i       seta    1
                                            3987 .loop    aif    (&i gt &$dccexti).around
                                            3988          aif    ('&$dccext(&i)' eq '&m').getout
                                            3989 &i       seta    &i+1
                                            3990          ago     .loop
                                            3991 .around  anop
                                            3992 &$dccexti seta &$dccexti+1
                                            3993          extrn  &m
                                            3994 .getout  anop
                                            3995          mend
000026B8                                    3996+$eye0092    ds    0d                                                    02-DCCCA
000026B8 C4C3C3                             3997+         dc cl3'DCC'                                                    02-DCCCA
000026BB 01                                 3998+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000026BC 00000000                           3999+         dc a(0)                                                        02-DCCCA
000026C0 000000000000272A                   4000+         dc ad(@PER_1519)                                               02-DCCCA
000026C8 00000000000000C0                   4001+         dc ad(192)                                                     02-DCCCA
000026D0 0000000000000000                   4002+         dc ad(0)                                                       02-DCCCA
000026D8 0000000000001000                   4003+         dc ad(4096)                                                    02-DCCCA
000026E0 20                                 4004+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026E1 03                                 4005+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026E2 03                                 4006+         dc al1(3)                                                      02-DCCCA
000026E3 08                                 4007+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026E4 00                                 4008+         dc bl.8'00000000'                                              02-DCCCA
000026E5 000000                             4009+         dc al3(0)                                                      02-DCCCA
000026E8 0000000000002698                   4010+         dc ad(@LNAME1519)                                              02-DCCCA
000026F0                                    4011+         ds 0d                                                          02-DCCCA
000026F0 00000000000026B8                   4012+         dc ad($eye0092)                                                02-DCCCA
000026F8 0000000000000000                   4013+         dc ad(0)                                                       02-DCCCA
00002700                                    4014+         ds    0d                                                       01-DCCPR
00002700                                    4015+rd_kafka_buf_write_i8 ds 0d                                             01-DCCPR
00002700                                    4016+@REGION_1519_1 ds 0h                                                    01-DCCPR
00002700 EBEC D008 0024          00000008   4017+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002706 E3E0 D088 0004          00000088   4018+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000270C E3C0 D090 0004          00000090   4019+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002712 B904 002E                          4020+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002716 E3B0 C018 0004          00000018   4021+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000271C A7EB 00C0               000000C0   4022+         aghi  14,192              increase by frame size               01-DCCPR
00002720 E3E0 C020 0021          00000020   4023+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002726 4720 B020               00000020   4024+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000272A                                    4025+@PER_1519 ds   0h                                                       01-DCCPR
0000272A EBDE 2080 0024          00000080   4026+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002730 E3C0 2090 0024          00000090   4027+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002736 B904 00D2                          4028+         lgr   13,2                set real frame pointer               01-DCCPR
0000273A B904 00CF                          4029+         lgr   12,15               set base reg                         01-DCCPR
                        00002700            4030+         using @REGION_1519_1,12                                        01-DCCPR
                                            4031 * ******* End of Prologue
                                            4032 * *
                                            4033 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
0000273E E3F0 1000 0004          00000000   4034          LG    15,0(0,1)   ; rkbuf
00002744 E3F0 D0A8 0024          000000A8   4035          STG   15,168(0,13)
0000274A 41F0 100F               0000000F   4036          LA    15,15(0,1)
0000274E E3F0 D0B0 0024          000000B0   4037          STG   15,176(0,13)
00002754 E548 D0B8 0001          000000B8   4038          MVGHI 184(13),1
0000275A 4110 D0A8               000000A8   4039          LA    1,168(0,13)
0000275E E3F0 C0B8 0004          000027B8   4040          LG    15,@lit_1519_96 ; rd_kafka_buf_write
00002764                                    4041 @@gen_label154 DS    0H
00002764 05EF                               4042          BALR  14,15
00002766                                    4043 @@gen_label155 DS    0H
                                            4044 * ***   }
                                            4045 * * **** Start of Epilogue
                                            4046          DCCEPIL
00002766                                    4047+         ds 0h                                                          01-DCCEP
                                            4048+* Epilog
00002766 D707 D088 D088 00000088 00000088   4049+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000276C E3D0 D080 0004          00000080   4050+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   84 
  Active Usings: @REGION_1519_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002772 E3C0 D090 0004          00000090   4051+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002778 E3B0 C018 0004          00000018   4052+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000277E E3C0 B010 0021          00000010   4053+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002784 E3E0 D008 0004          00000008   4054+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000278A EB1C D020 0004          00000020   4055+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002790 078E                               4056+         bcr 8,14                if same dsab, just return              01-DCCEP
00002792 E3F0 D010 0024          00000010   4057+         stg 15,16(0,13)         save return code                       01-DCCEP
00002798 E300 D018 0024          00000018   4058+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000279E E3F0 D090 0004          00000090   4059+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000027A4 E3F0 F018 0004          00000018   4060+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000027AA 47F0 F040               00000040   4061+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4062+* End of Epilog
                                            4063 * * **** End of Epilogue
000027B0                                    4064          DS    0D
000027B0 000000C0                           4065 @FRAMESIZE_1519 DC F'192'
000027B4 00000000
000027B8 0000000000002578                   4066 @lit_1519_96 DC AD(rd_kafka_buf_write)
                                            4067          DROP  12
                                            4068 *
                                            4069 *   DSECT for automatic variables in "rd_kafka_buf_write_i8"
                                            4070 *      (FUNCTION #1519)
                                            4071 *
00000000                00000000 000000A8   4072 @AUTO#rd_kafka_buf_write_i8 DSECT
00000000                                    4073          DS    XL168
                                            4074 *
000027C0                00000000 000054D2   4075 @CODE    CSECT
                                            4076 *
                                            4077 *
                                            4078 *
                                            4079 * ....... start of rd_kafka_buf_write_i16
000027C0                                    4080 @LNAME1521 DS  0H
000027C0 00000016                           4081          DC    X'00000016'
000027C4 99846D9281869281                   4082          DC    C'rd_kafka_buf_write_i16'
000027DA 00                                 4083          DC    X'00'
                                            4084 rd_kafka_buf_write_i16 DCCPRLG CINDEX=1521,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1521
                                            4085          macro
                                            4086          dccextrn &m
                                            4087          gblc    &$dccext(1000)
                                            4088          gbla    &$dccexti
                                            4089          lcla    &i
                                            4090 &$dccext(&$dccexti+1) setc    '&m'
                                            4091 &i       seta    1
                                            4092 .loop    aif    (&i gt &$dccexti).around
                                            4093          aif    ('&$dccext(&i)' eq '&m').getout
                                            4094 &i       seta    &i+1
                                            4095          ago     .loop
                                            4096 .around  anop
                                            4097 &$dccexti seta &$dccexti+1
                                            4098          extrn  &m
                                            4099 .getout  anop
                                            4100          mend
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000027E0                                    4101+$eye0095    ds    0d                                                    02-DCCCA
000027E0 C4C3C3                             4102+         dc cl3'DCC'                                                    02-DCCCA
000027E3 01                                 4103+         dc xl1'01' format one                                          02-DCCCA
000027E4 00000000                           4104+         dc a(0)                                                        02-DCCCA
000027E8 0000000000002852                   4105+         dc ad(@PER_1521)                                               02-DCCCA
000027F0 00000000000000C0                   4106+         dc ad(192)                                                     02-DCCCA
000027F8 0000000000000000                   4107+         dc ad(0)                                                       02-DCCCA
00002800 0000000000001000                   4108+         dc ad(4096)                                                    02-DCCCA
00002808 20                                 4109+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002809 03                                 4110+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000280A 03                                 4111+         dc al1(3)                                                      02-DCCCA
0000280B 08                                 4112+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000280C 00                                 4113+         dc bl.8'00000000'                                              02-DCCCA
0000280D 000000                             4114+         dc al3(0)                                                      02-DCCCA
00002810 00000000000027C0                   4115+         dc ad(@LNAME1521)                                              02-DCCCA
00002818                                    4116+         ds 0d                                                          02-DCCCA
00002818 00000000000027E0                   4117+         dc ad($eye0095)                                                02-DCCCA
00002820 0000000000000000                   4118+         dc ad(0)                                                       02-DCCCA
00002828                                    4119+         ds    0d                                                       01-DCCPR
00002828                                    4120+rd_kafka_buf_write_i16 ds 0d                                            01-DCCPR
00002828                                    4121+@REGION_1521_1 ds 0h                                                    01-DCCPR
00002828 EBEC D008 0024          00000008   4122+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000282E E3E0 D088 0004          00000088   4123+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002834 E3C0 D090 0004          00000090   4124+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000283A B904 002E                          4125+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000283E E3B0 C018 0004          00000018   4126+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002844 A7EB 00C0               000000C0   4127+         aghi  14,192              increase by frame size               01-DCCPR
00002848 E3E0 C020 0021          00000020   4128+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000284E 4720 B020               00000020   4129+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002852                                    4130+@PER_1521 ds   0h                                                       01-DCCPR
00002852 EBDE 2080 0024          00000080   4131+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002858 E3C0 2090 0024          00000090   4132+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000285E B904 00D2                          4133+         lgr   13,2                set real frame pointer               01-DCCPR
00002862 B904 00CF                          4134+         lgr   12,15               set base reg                         01-DCCPR
                        00002828            4135+         using @REGION_1521_1,12                                        01-DCCPR
                                            4136 * ******* End of Prologue
                                            4137 * *
                                            4138 * ***       v = (v);
00002866 48F0 100E               0000000E   4139          LH    15,14(0,1)  ; v
0000286A 40F0 100E               0000000E   4140          STH   15,14(0,1)  ; v
                                            4141 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
0000286E E3F0 1000 0004          00000000   4142          LG    15,0(0,1)   ; rkbuf
00002874 E3F0 D0A8 0024          000000A8   4143          STG   15,168(0,13)
0000287A 41F0 100E               0000000E   4144          LA    15,14(0,1)
0000287E E3F0 D0B0 0024          000000B0   4145          STG   15,176(0,13)
00002884 E548 D0B8 0002          000000B8   4146          MVGHI 184(13),2
0000288A 4110 D0A8               000000A8   4147          LA    1,168(0,13)
0000288E E3F0 C0C0 0004          000028E8   4148          LG    15,@lit_1521_98 ; rd_kafka_buf_write
00002894                                    4149 @@gen_label156 DS    0H
00002894 05EF                               4150          BALR  14,15
00002896                                    4151 @@gen_label157 DS    0H
                                            4152 * ***   }
                                                                                                                           Page   86 
  Active Usings: @REGION_1521_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4153 * * **** Start of Epilogue
                                            4154          DCCEPIL
00002896                                    4155+         ds 0h                                                          01-DCCEP
                                            4156+* Epilog
00002896 D707 D088 D088 00000088 00000088   4157+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000289C E3D0 D080 0004          00000080   4158+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000028A2 E3C0 D090 0004          00000090   4159+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000028A8 E3B0 C018 0004          00000018   4160+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000028AE E3C0 B010 0021          00000010   4161+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000028B4 E3E0 D008 0004          00000008   4162+         lg  14,8(0,13)          load up return address                 01-DCCEP
000028BA EB1C D020 0004          00000020   4163+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000028C0 078E                               4164+         bcr 8,14                if same dsab, just return              01-DCCEP
000028C2 E3F0 D010 0024          00000010   4165+         stg 15,16(0,13)         save return code                       01-DCCEP
000028C8 E300 D018 0024          00000018   4166+         stg 0,24(0,13)          save more return code                  01-DCCEP
000028CE E3F0 D090 0004          00000090   4167+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000028D4 E3F0 F018 0004          00000018   4168+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000028DA 47F0 F040               00000040   4169+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4170+* End of Epilog
                                            4171 * * **** End of Epilogue
000028E0                                    4172          DS    0D
000028E0 000000C0                           4173 @FRAMESIZE_1521 DC F'192'
000028E4 00000000
000028E8 0000000000002578                   4174 @lit_1521_98 DC AD(rd_kafka_buf_write)
                                            4175          DROP  12
                                            4176 *
                                            4177 *   DSECT for automatic variables in "rd_kafka_buf_write_i16"
                                            4178 *      (FUNCTION #1521)
                                            4179 *
00000000                00000000 000000A8   4180 @AUTO#rd_kafka_buf_write_i16 DSECT
00000000                                    4181          DS    XL168
                                            4182 *
000028F0                00000000 000054D2   4183 @CODE    CSECT
                                            4184 *
                                            4185 *
                                            4186 *
                                            4187 * ....... start of rd_kafka_buf_write_i32
000028F0                                    4188 @LNAME1523 DS  0H
000028F0 00000016                           4189          DC    X'00000016'
000028F4 99846D9281869281                   4190          DC    C'rd_kafka_buf_write_i32'
0000290A 00                                 4191          DC    X'00'
                                            4192 rd_kafka_buf_write_i32 DCCPRLG CINDEX=1523,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1523
                                            4193          macro
                                            4194          dccextrn &m
                                            4195          gblc    &$dccext(1000)
                                            4196          gbla    &$dccexti
                                            4197          lcla    &i
                                            4198 &$dccext(&$dccexti+1) setc    '&m'
                                            4199 &i       seta    1
                                            4200 .loop    aif    (&i gt &$dccexti).around
                                            4201          aif    ('&$dccext(&i)' eq '&m').getout
                                            4202 &i       seta    &i+1
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4203          ago     .loop
                                            4204 .around  anop
                                            4205 &$dccexti seta &$dccexti+1
                                            4206          extrn  &m
                                            4207 .getout  anop
                                            4208          mend
00002910                                    4209+$eye0098    ds    0d                                                    02-DCCCA
00002910 C4C3C3                             4210+         dc cl3'DCC'                                                    02-DCCCA
00002913 01                                 4211+         dc xl1'01' format one                                          02-DCCCA
00002914 00000000                           4212+         dc a(0)                                                        02-DCCCA
00002918 0000000000002982                   4213+         dc ad(@PER_1523)                                               02-DCCCA
00002920 00000000000000C0                   4214+         dc ad(192)                                                     02-DCCCA
00002928 0000000000000000                   4215+         dc ad(0)                                                       02-DCCCA
00002930 0000000000001000                   4216+         dc ad(4096)                                                    02-DCCCA
00002938 20                                 4217+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002939 03                                 4218+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000293A 03                                 4219+         dc al1(3)                                                      02-DCCCA
0000293B 08                                 4220+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000293C 00                                 4221+         dc bl.8'00000000'                                              02-DCCCA
0000293D 000000                             4222+         dc al3(0)                                                      02-DCCCA
00002940 00000000000028F0                   4223+         dc ad(@LNAME1523)                                              02-DCCCA
00002948                                    4224+         ds 0d                                                          02-DCCCA
00002948 0000000000002910                   4225+         dc ad($eye0098)                                                02-DCCCA
00002950 0000000000000000                   4226+         dc ad(0)                                                       02-DCCCA
00002958                                    4227+         ds    0d                                                       01-DCCPR
00002958                                    4228+rd_kafka_buf_write_i32 ds 0d                                            01-DCCPR
00002958                                    4229+@REGION_1523_1 ds 0h                                                    01-DCCPR
00002958 EBEC D008 0024          00000008   4230+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000295E E3E0 D088 0004          00000088   4231+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002964 E3C0 D090 0004          00000090   4232+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000296A B904 002E                          4233+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000296E E3B0 C018 0004          00000018   4234+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002974 A7EB 00C0               000000C0   4235+         aghi  14,192              increase by frame size               01-DCCPR
00002978 E3E0 C020 0021          00000020   4236+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000297E 4720 B020               00000020   4237+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002982                                    4238+@PER_1523 ds   0h                                                       01-DCCPR
00002982 EBDE 2080 0024          00000080   4239+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002988 E3C0 2090 0024          00000090   4240+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000298E B904 00D2                          4241+         lgr   13,2                set real frame pointer               01-DCCPR
00002992 B904 00CF                          4242+         lgr   12,15               set base reg                         01-DCCPR
                        00002958            4243+         using @REGION_1523_1,12                                        01-DCCPR
                                            4244 * ******* End of Prologue
                                            4245 * *
                                            4246 * ***       v = (int32_t)(v);
00002996 58F0 100C               0000000C   4247          L     15,12(0,1)  ; v
                                            4248 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
0000299A E3F0 1000 0004          00000000   4249          LG    15,0(0,1)   ; rkbuf
000029A0 E3F0 D0A8 0024          000000A8   4250          STG   15,168(0,13)
000029A6 41F0 100C               0000000C   4251          LA    15,12(0,1)
000029AA E3F0 D0B0 0024          000000B0   4252          STG   15,176(0,13)
000029B0 E548 D0B8 0004          000000B8   4253          MVGHI 184(13),4
000029B6 4110 D0A8               000000A8   4254          LA    1,168(0,13)
                                                                                                                           Page   88 
  Active Usings: @REGION_1523_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000029BA E3F0 C0C0 0004          00002A18   4255          LG    15,@lit_1523_100 ; rd_kafka_buf_write
000029C0                                    4256 @@gen_label158 DS    0H
000029C0 05EF                               4257          BALR  14,15
000029C2                                    4258 @@gen_label159 DS    0H
                                            4259 * ***   }
                                            4260 * * **** Start of Epilogue
                                            4261          DCCEPIL
000029C2                                    4262+         ds 0h                                                          01-DCCEP
                                            4263+* Epilog
000029C2 D707 D088 D088 00000088 00000088   4264+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000029C8 E3D0 D080 0004          00000080   4265+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000029CE E3C0 D090 0004          00000090   4266+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000029D4 E3B0 C018 0004          00000018   4267+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000029DA E3C0 B010 0021          00000010   4268+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000029E0 E3E0 D008 0004          00000008   4269+         lg  14,8(0,13)          load up return address                 01-DCCEP
000029E6 EB1C D020 0004          00000020   4270+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000029EC 078E                               4271+         bcr 8,14                if same dsab, just return              01-DCCEP
000029EE E3F0 D010 0024          00000010   4272+         stg 15,16(0,13)         save return code                       01-DCCEP
000029F4 E300 D018 0024          00000018   4273+         stg 0,24(0,13)          save more return code                  01-DCCEP
000029FA E3F0 D090 0004          00000090   4274+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A00 E3F0 F018 0004          00000018   4275+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A06 47F0 F040               00000040   4276+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4277+* End of Epilog
                                            4278 * * **** End of Epilogue
00002A10                                    4279          DS    0D
00002A10 000000C0                           4280 @FRAMESIZE_1523 DC F'192'
00002A14 00000000
00002A18 0000000000002578                   4281 @lit_1523_100 DC AD(rd_kafka_buf_write)
                                            4282          DROP  12
                                            4283 *
                                            4284 *   DSECT for automatic variables in "rd_kafka_buf_write_i32"
                                            4285 *      (FUNCTION #1523)
                                            4286 *
00000000                00000000 000000A8   4287 @AUTO#rd_kafka_buf_write_i32 DSECT
00000000                                    4288          DS    XL168
                                            4289 *
00002A20                00000000 000054D2   4290 @CODE    CSECT
                                            4291 *
                                            4292 *
                                            4293 *
                                            4294 * ....... start of rd_kafka_buf_write_uvarint
00002A20                                    4295 @LNAME1530 DS  0H
00002A20 0000001A                           4296          DC    X'0000001A'
00002A24 99846D9281869281                   4297          DC    C'rd_kafka_buf_write_uvarint'
00002A3E 00                                 4298          DC    X'00'
                                            4299 rd_kafka_buf_write_uvarint DCCPRLG CINDEX=1530,BASER=12,FRAME=208,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1530
                                            4300          macro
                                            4301          dccextrn &m
                                            4302          gblc    &$dccext(1000)
                                            4303          gbla    &$dccexti
                                            4304          lcla    &i
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4305 &$dccext(&$dccexti+1) setc    '&m'
                                            4306 &i       seta    1
                                            4307 .loop    aif    (&i gt &$dccexti).around
                                            4308          aif    ('&$dccext(&i)' eq '&m').getout
                                            4309 &i       seta    &i+1
                                            4310          ago     .loop
                                            4311 .around  anop
                                            4312 &$dccexti seta &$dccexti+1
                                            4313          extrn  &m
                                            4314 .getout  anop
                                            4315          mend
00002A40                                    4316+$eye0101    ds    0d                                                    02-DCCCA
00002A40 C4C3C3                             4317+         dc cl3'DCC'                                                    02-DCCCA
00002A43 01                                 4318+         dc xl1'01' format one                                          02-DCCCA
00002A44 00000000                           4319+         dc a(0)                                                        02-DCCCA
00002A48 0000000000002AB2                   4320+         dc ad(@PER_1530)                                               02-DCCCA
00002A50 00000000000000D0                   4321+         dc ad(208)                                                     02-DCCCA
00002A58 0000000000000000                   4322+         dc ad(0)                                                       02-DCCCA
00002A60 0000000000001000                   4323+         dc ad(4096)                                                    02-DCCCA
00002A68 20                                 4324+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002A69 03                                 4325+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002A6A 03                                 4326+         dc al1(3)                                                      02-DCCCA
00002A6B 08                                 4327+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002A6C 00                                 4328+         dc bl.8'00000000'                                              02-DCCCA
00002A6D 000000                             4329+         dc al3(0)                                                      02-DCCCA
00002A70 0000000000002A20                   4330+         dc ad(@LNAME1530)                                              02-DCCCA
00002A78                                    4331+         ds 0d                                                          02-DCCCA
00002A78 0000000000002A40                   4332+         dc ad($eye0101)                                                02-DCCCA
00002A80 0000000000000000                   4333+         dc ad(0)                                                       02-DCCCA
00002A88                                    4334+         ds    0d                                                       01-DCCPR
00002A88                                    4335+rd_kafka_buf_write_uvarint ds 0d                                        01-DCCPR
00002A88                                    4336+@REGION_1530_1 ds 0h                                                    01-DCCPR
00002A88 EBEC D008 0024          00000008   4337+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A8E E3E0 D088 0004          00000088   4338+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002A94 E3C0 D090 0004          00000090   4339+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002A9A B904 002E                          4340+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002A9E E3B0 C018 0004          00000018   4341+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002AA4 A7EB 00D0               000000D0   4342+         aghi  14,208              increase by frame size               01-DCCPR
00002AA8 E3E0 C020 0021          00000020   4343+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002AAE 4720 B020               00000020   4344+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002AB2                                    4345+@PER_1530 ds   0h                                                       01-DCCPR
00002AB2 EBDE 2080 0024          00000080   4346+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002AB8 E3C0 2090 0024          00000090   4347+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002ABE B904 00D2                          4348+         lgr   13,2                set real frame pointer               01-DCCPR
00002AC2 B904 00CF                          4349+         lgr   12,15               set base reg                         01-DCCPR
                        00002A88            4350+         using @REGION_1530_1,12                                        01-DCCPR
00002AC6 B904 0021                          4351          LGR   2,1         ; ptr to parm area
                                            4352 * ******* End of Prologue
                                            4353 * *
                                            4354 * ***       char varint[(sizeof(v) + 1 + (sizeof(v)/7))];
                                            4355 * ***       size_t sz;
                                            4356 * ***
                                                                                                                           Page   90 
  Active Usings: @REGION_1530_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4357 * ***       sz = rd_uvarint_enc_u64(varint, sizeof(varint), v);
00002ACA 41F0 D0A8               000000A8   4358          LA    15,168(0,13)
00002ACE E3F0 D0B8 0024          000000B8   4359          STG   15,184(0,13)
00002AD4 E548 D0C0 000A          000000C0   4360          MVGHI 192(13),10
00002ADA E3F0 2008 0004          00000008   4361          LG    15,8(0,2)   ; v
00002AE0 E3F0 D0C8 0024          000000C8   4362          STG   15,200(0,13)
00002AE6 4110 D0B8               000000B8   4363          LA    1,184(0,13)
00002AEA E3F0 C0E8 0004          00002B70   4364          LG    15,@lit_1530_102 ; rd_uvarint_enc_u64
00002AF0                                    4365 @@gen_label160 DS    0H
00002AF0 05EF                               4366          BALR  14,15
00002AF2                                    4367 @@gen_label161 DS    0H
                                            4368 * ***
                                            4369 * ***       return rd_kafka_buf_write(rkbuf, varint, sz);
00002AF2 E310 2000 0004          00000000   4370          LG    1,0(0,2)    ; rkbuf
00002AF8 E310 D0B8 0024          000000B8   4371          STG   1,184(0,13)
00002AFE 4110 D0A8               000000A8   4372          LA    1,168(0,13)
00002B02 E310 D0C0 0024          000000C0   4373          STG   1,192(0,13)
00002B08 E3F0 D0C8 0024          000000C8   4374          STG   15,200(0,13)
00002B0E 4110 D0B8               000000B8   4375          LA    1,184(0,13)
00002B12 E3F0 C0F0 0004          00002B78   4376          LG    15,@lit_1530_103 ; rd_kafka_buf_write
00002B18                                    4377 @@gen_label162 DS    0H
00002B18 05EF                               4378          BALR  14,15
00002B1A                                    4379 @@gen_label163 DS    0H
                                            4380 * ***   }
                                            4381 * * **** Start of Epilogue
                                            4382          DCCEPIL
00002B1A                                    4383+         ds 0h                                                          01-DCCEP
                                            4384+* Epilog
00002B1A D707 D088 D088 00000088 00000088   4385+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002B20 E3D0 D080 0004          00000080   4386+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002B26 E3C0 D090 0004          00000090   4387+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002B2C E3B0 C018 0004          00000018   4388+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002B32 E3C0 B010 0021          00000010   4389+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002B38 E3E0 D008 0004          00000008   4390+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002B3E EB1C D020 0004          00000020   4391+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002B44 078E                               4392+         bcr 8,14                if same dsab, just return              01-DCCEP
00002B46 E3F0 D010 0024          00000010   4393+         stg 15,16(0,13)         save return code                       01-DCCEP
00002B4C E300 D018 0024          00000018   4394+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002B52 E3F0 D090 0004          00000090   4395+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002B58 E3F0 F018 0004          00000018   4396+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002B5E 47F0 F040               00000040   4397+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4398+* End of Epilog
                                            4399 * * **** End of Epilogue
00002B68                                    4400          DS    0D
00002B68 000000D0                           4401 @FRAMESIZE_1530 DC F'208'
00002B6C 00000000
00002B70 0000000000000CB8                   4402 @lit_1530_102 DC AD(rd_uvarint_enc_u64)
00002B78 0000000000002578                   4403 @lit_1530_103 DC AD(rd_kafka_buf_write)
                                            4404          DROP  12
                                            4405 *
                                            4406 *   DSECT for automatic variables in "rd_kafka_buf_write_uvarint"
                                            4407 *      (FUNCTION #1530)
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4408 *
00000000                00000000 000000B2   4409 @AUTO#rd_kafka_buf_write_uvarint DSECT
00000000                                    4410          DS    XL168
000000A8                                    4411 rd_kafka_buf_write_uvarint#sz#0 DS 8XL1 ; sz
000000B0                000000B0 000000A8   4412          ORG   @AUTO#rd_kafka_buf_write_uvarint+168
000000A8                                    4413 rd_kafka_buf_write_uvarint#varint#0 DS 10XL1 ; varint
                                            4414 *
00002B80                00000000 000054D2   4415 @CODE    CSECT
                                            4416 *
                                            4417 *
                                            4418 *
                                            4419 * ....... start of rd_kafka_buf_write_kstr
00002B80                                    4420 @LNAME1531 DS  0H
00002B80 00000017                           4421          DC    X'00000017'
00002B84 99846D9281869281                   4422          DC    C'rd_kafka_buf_write_kstr'
00002B9B 00                                 4423          DC    X'00'
                                            4424 rd_kafka_buf_write_kstr DCCPRLG CINDEX=1531,BASER=12,FRAME=216,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1531
                                            4425          macro
                                            4426          dccextrn &m
                                            4427          gblc    &$dccext(1000)
                                            4428          gbla    &$dccexti
                                            4429          lcla    &i
                                            4430 &$dccext(&$dccexti+1) setc    '&m'
                                            4431 &i       seta    1
                                            4432 .loop    aif    (&i gt &$dccexti).around
                                            4433          aif    ('&$dccext(&i)' eq '&m').getout
                                            4434 &i       seta    &i+1
                                            4435          ago     .loop
                                            4436 .around  anop
                                            4437 &$dccexti seta &$dccexti+1
                                            4438          extrn  &m
                                            4439 .getout  anop
                                            4440          mend
00002BA0                                    4441+$eye0104    ds    0d                                                    02-DCCCA
00002BA0 C4C3C3                             4442+         dc cl3'DCC'                                                    02-DCCCA
00002BA3 01                                 4443+         dc xl1'01' format one                                          02-DCCCA
00002BA4 00000000                           4444+         dc a(0)                                                        02-DCCCA
00002BA8 0000000000002C12                   4445+         dc ad(@PER_1531)                                               02-DCCCA
00002BB0 00000000000000D8                   4446+         dc ad(216)                                                     02-DCCCA
00002BB8 0000000000000000                   4447+         dc ad(0)                                                       02-DCCCA
00002BC0 0000000000001000                   4448+         dc ad(4096)                                                    02-DCCCA
00002BC8 20                                 4449+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002BC9 03                                 4450+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002BCA 03                                 4451+         dc al1(3)                                                      02-DCCCA
00002BCB 08                                 4452+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002BCC 00                                 4453+         dc bl.8'00000000'                                              02-DCCCA
00002BCD 000000                             4454+         dc al3(0)                                                      02-DCCCA
00002BD0 0000000000002B80                   4455+         dc ad(@LNAME1531)                                              02-DCCCA
00002BD8                                    4456+         ds 0d                                                          02-DCCCA
00002BD8 0000000000002BA0                   4457+         dc ad($eye0104)                                                02-DCCCA
00002BE0 0000000000000000                   4458+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002BE8                                    4459+         ds    0d                                                       01-DCCPR
00002BE8                                    4460+rd_kafka_buf_write_kstr ds 0d                                           01-DCCPR
00002BE8                                    4461+@REGION_1531_1 ds 0h                                                    01-DCCPR
00002BE8 EBEC D008 0024          00000008   4462+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002BEE E3E0 D088 0004          00000088   4463+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002BF4 E3C0 D090 0004          00000090   4464+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002BFA B904 002E                          4465+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002BFE E3B0 C018 0004          00000018   4466+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C04 A7EB 00D8               000000D8   4467+         aghi  14,216              increase by frame size               01-DCCPR
00002C08 E3E0 C020 0021          00000020   4468+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002C0E 4720 B020               00000020   4469+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002C12                                    4470+@PER_1531 ds   0h                                                       01-DCCPR
00002C12 EBDE 2080 0024          00000080   4471+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002C18 E3C0 2090 0024          00000090   4472+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002C1E B904 00D2                          4473+         lgr   13,2                set real frame pointer               01-DCCPR
00002C22 B904 00CF                          4474+         lgr   12,15               set base reg                         01-DCCPR
                        00002BE8            4475+         using @REGION_1531_1,12                                        01-DCCPR
                                            4476 * ******* End of Prologue
                                            4477 * *
00002C26 E340 1000 0004          00000000   4478          LG    4,0(0,1)    ; rkbuf
00002C2C E320 1008 0004          00000008   4479          LG    2,8(0,1)    ; kstr
                                            4480 * ***       size_t len, r;
                                            4481 * ***
                                            4482 * ***       size_t ulen;
                                            4483 * ***       size_t alen;
                                            4484 * ***       char* cbuf;
                                            4485 * ***       if (kstr &&
00002C32 B902 00F2                          4486          LTGR  15,2
00002C36 4780 C120               00002D08   4487          BZ    @L505
                                            4488 * ***           !(((kstr)->len == -1)))
00002C3A E55C 2000 FFFF          00000000   4489          CHSI  0(2),-1
00002C40 4780 C120               00002D08   4490          BE    @L505
                                            4491 * ***       {
                                            4492 * ***           alen = (((kstr)->len) == -1 ? __strlen((kstr)->str) : \
                                            4493 * ((kstr)->len));
00002C44 E55C 2000 FFFF          00000000   4494          CHSI  0(2),-1
00002C4A 4770 C0C0               00002CA8   4495          BNE   @L506
00002C4E E3F0 2008 0004          00000008   4496          LG    15,8(0,2)
00002C54 B904 001F                          4497          LGR   1,15
00002C58 A709 0000               00000000   4498          LGHI  0,0
00002C5C                                    4499 @@gen_label167 DS 0H
00002C5C B25E 000F                          4500          SRST  0,15
00002C60 4710 C074               00002C5C   4501          BC  1,@@gen_label167
00002C64 B90B 0001                          4502          SLGR  0,1
00002C68 47F0 C0C6               00002CAE   4503          B     @L507
00002C70                                    4504          DS    0D
00002C70 000000D8                           4505 @FRAMESIZE_1531 DC F'216'
00002C74 00000000
00002C78 0000000000000000                   4506 @lit_1531_105 DC AD(calloc)
00002C80 0000000000000060                   4507 @lit_1531_106 DC AD(ebcdic_2_utf8)
00002C88 0000000000002828                   4508 @lit_1531_107 DC AD(rd_kafka_buf_write_i16)
00002C90 0000000000002578                   4509 @lit_1531_109 DC AD(rd_kafka_buf_write)
                                                                                                                           Page   93 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002C98 0000000000000000                   4510 @lit_1531_110 DC AD(free)
00002CA0 0000000000002A88                   4511 @lit_1531_112 DC AD(rd_kafka_buf_write_uvarint)
00002CA8                                    4512 @L506    DS    0H
00002CA8 E300 2000 0014          00000000   4513          LGF   0,0(0,2)
00002CAE                                    4514 @L507    DS    0H
00002CAE E300 D0B0 0024          000000B0   4515          STG   0,176(0,13) ; alen
                                            4516 * ***           ulen = alen;
00002CB4 E300 D0A8 0024          000000A8   4517          STG   0,168(0,13) ; ulen
                                            4518 * ***           cbuf = calloc(1, ulen);
00002CBA E548 D0B8 0001          000000B8   4519          MVGHI 184(13),1
00002CC0 E300 D0C0 0024          000000C0   4520          STG   0,192(0,13)
00002CC6 4110 D0B8               000000B8   4521          LA    1,184(0,13)
00002CCA E3F0 C090 0004          00002C78   4522          LG    15,@lit_1531_105 ; calloc
00002CD0                                    4523 @@gen_label168 DS    0H
00002CD0 05EF                               4524          BALR  14,15
00002CD2                                    4525 @@gen_label169 DS    0H
00002CD2 B904 005F                          4526          LGR   5,15
                                            4527 * ***           ebcdic_2_utf8(cbuf, &ulen, kstr->str, &alen);
00002CD6 E350 D0B8 0024          000000B8   4528          STG   5,184(0,13)
00002CDC 41F0 D0A8               000000A8   4529          LA    15,168(0,13)
00002CE0 E3F0 D0C0 0024          000000C0   4530          STG   15,192(0,13)
00002CE6 E3F0 2008 0004          00000008   4531          LG    15,8(0,2)
00002CEC E3F0 D0C8 0024          000000C8   4532          STG   15,200(0,13)
00002CF2 41F0 D0B0               000000B0   4533          LA    15,176(0,13)
00002CF6 E3F0 D0D0 0024          000000D0   4534          STG   15,208(0,13)
00002CFC 4110 D0B8               000000B8   4535          LA    1,184(0,13)
00002D00 E3F0 C098 0004          00002C80   4536          LG    15,@lit_1531_106 ; ebcdic_2_utf8
00002D06                                    4537 @@gen_label170 DS    0H
00002D06 05EF                               4538          BALR  14,15
00002D08                                    4539 @@gen_label171 DS    0H
                                            4540 * ***       }
00002D08                                    4541 @L505    DS    0H
                                            4542 * ***
                                            4543 * ***
                                            4544 * ***       if (!(rkbuf->rkbuf_flags & 0x40)) {
00002D08 9140 4023      00000023 00000040   4545          TM    35(4),64
00002D0C 4770 C1AE               00002D96   4546          BNZ   @L508
                                            4547 * ***
                                            4548 * ***           if (!kstr || ((kstr)->len == -1))
00002D10 B902 00F2                          4549          LTGR  15,2
00002D14 4780 C13A               00002D22   4550          BZ    @L510
00002D18 E55C 2000 FFFF          00000000   4551          CHSI  0(2),-1
00002D1E 4770 C156               00002D3E   4552          BNE   @L509
00002D22                                    4553 @L510    DS    0H
                                            4554 * ***               return rd_kafka_buf_write_i16(rkbuf, -1);
00002D22 E340 D0B8 0024          000000B8   4555          STG   4,184(0,13)
00002D28 E548 D0C0 FFFF          000000C0   4556          MVGHI 192(13),-1
00002D2E 4110 D0B8               000000B8   4557          LA    1,184(0,13)
00002D32 E3F0 C0A0 0004          00002C88   4558          LG    15,@lit_1531_107 ; rd_kafka_buf_write_i16
00002D38                                    4559 @@gen_label175 DS    0H
00002D38 05EF                               4560          BALR  14,15
00002D3A                                    4561 @@gen_label176 DS    0H
                                                                                                                           Page   94 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002D3A 47F0 C22A               00002E12   4562          B     @ret_lab_1531
00002D3E                                    4563 @L509    DS    0H
                                            4564 * ***
                                            4565 * ***   # 1148 "C:\asgkafka\librdkafka\src\rdkafka_buf.h"
                                            4566 * ***           len = ulen;
00002D3E E320 D0A8 0004          000000A8   4567          LG    2,168(0,13) ; ulen
                                            4568 * ***
                                            4569 * ***           r = rd_kafka_buf_write_i16(rkbuf, (int16_t)len);
00002D44 E340 D0B8 0024          000000B8   4570          STG   4,184(0,13)
00002D4A B907 00F2                          4571          LGHR  15,2
00002D4E E3F0 D0C0 0024          000000C0   4572          STG   15,192(0,13)
00002D54 4110 D0B8               000000B8   4573          LA    1,184(0,13)
00002D58 E3F0 C0A0 0004          00002C88   4574          LG    15,@lit_1531_107 ; rd_kafka_buf_write_i16
00002D5E                                    4575 @@gen_label177 DS    0H
00002D5E 05EF                               4576          BALR  14,15
00002D60                                    4577 @@gen_label178 DS    0H
00002D60 B904 003F                          4578          LGR   3,15        ; r
                                            4579 * ***
                                            4580 * ***           rd_kafka_buf_write(rkbuf, cbuf, len);
00002D64 EB45 D0B8 0024          000000B8   4581          STMG  4,5,184(13)
00002D6A E320 D0C8 0024          000000C8   4582          STG   2,200(0,13)
00002D70 4110 D0B8               000000B8   4583          LA    1,184(0,13)
00002D74 E3F0 C0A8 0004          00002C90   4584          LG    15,@lit_1531_109 ; rd_kafka_buf_write
00002D7A                                    4585 @@gen_label179 DS    0H
00002D7A 05EF                               4586          BALR  14,15
00002D7C                                    4587 @@gen_label180 DS    0H
                                            4588 * ***           free(cbuf);
00002D7C E350 D0B8 0024          000000B8   4589          STG   5,184(0,13)
00002D82 4110 D0B8               000000B8   4590          LA    1,184(0,13)
00002D86 E3F0 C0B0 0004          00002C98   4591          LG    15,@lit_1531_110 ; free
00002D8C                                    4592 @@gen_label181 DS    0H
00002D8C 05EF                               4593          BALR  14,15
00002D8E                                    4594 @@gen_label182 DS    0H
                                            4595 * ***
                                            4596 * ***
                                            4597 * ***
                                            4598 * ***
                                            4599 * ***           return r;
00002D8E B904 00F3                          4600          LGR   15,3
00002D92 47F0 C22A               00002E12   4601          B     @ret_lab_1531
                                            4602 * ***       }
00002D96                                    4603 @L508    DS    0H
                                            4604 * ***
                                            4605 * ***
                                            4606 * ***
                                            4607 * ***
                                            4608 * ***
                                            4609 * ***
                                            4610 * ***       if (!kstr || ((kstr)->len == -1))
00002D96 B902 00F2                          4611          LTGR  15,2
00002D9A 4780 C1C0               00002DA8   4612          BZ    @L512
00002D9E E55C 2000 FFFF          00000000   4613          CHSI  0(2),-1
                                                                                                                           Page   95 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002DA4 4770 C1C8               00002DB0   4614          BNE   @L511
00002DA8                                    4615 @L512    DS    0H
                                            4616 * ***           len = 0;
00002DA8 A729 0000               00000000   4617          LGHI  2,0         ; 0
00002DAC 47F0 C1D2               00002DBA   4618          B     @L513
                                            4619 * ***       else
00002DB0                                    4620 @L511    DS    0H
                                            4621 * ***       {
                                            4622 * ***
                                            4623 * ***           len = ulen + 1;
00002DB0 E320 D0A8 0004          000000A8   4624          LG    2,168(0,13) ; ulen
00002DB6 A72B 0001               00000001   4625          AGHI  2,1
                                            4626 * ***
                                            4627 * ***
                                            4628 * ***
                                            4629 * ***
                                            4630 * ***       }
00002DBA                                    4631 @L513    DS    0H
                                            4632 * ***       r = rd_kafka_buf_write_uvarint(rkbuf, (uint64_t)len);
00002DBA E340 D0B8 0024          000000B8   4633          STG   4,184(0,13)
00002DC0 E320 D0C0 0024          000000C0   4634          STG   2,192(0,13)
00002DC6 4110 D0B8               000000B8   4635          LA    1,184(0,13)
00002DCA E3F0 C0B8 0004          00002CA0   4636          LG    15,@lit_1531_112 ; rd_kafka_buf_write_uvarint
00002DD0                                    4637 @@gen_label185 DS    0H
00002DD0 05EF                               4638          BALR  14,15
00002DD2                                    4639 @@gen_label186 DS    0H
00002DD2 B904 003F                          4640          LGR   3,15        ; r
                                            4641 * ***       if (len > 1)
00002DD6 C22E 0000 0001                     4642          CLGFI 2,X'00000001'
00002DDC 47D0 C214               00002DFC   4643          BNH   @L514
                                            4644 * ***
                                            4645 * ***           rd_kafka_buf_write(rkbuf, cbuf, len - 1);
00002DE0 EB45 D0B8 0024          000000B8   4646          STMG  4,5,184(13)
00002DE6 A72B FFFF               0000FFFF   4647          AGHI  2,-1
00002DEA E320 D0C8 0024          000000C8   4648          STG   2,200(0,13)
00002DF0 4110 D0B8               000000B8   4649          LA    1,184(0,13)
00002DF4 E3F0 C0A8 0004          00002C90   4650          LG    15,@lit_1531_109 ; rd_kafka_buf_write
00002DFA                                    4651 @@gen_label188 DS    0H
00002DFA 05EF                               4652          BALR  14,15
00002DFC                                    4653 @@gen_label189 DS    0H
00002DFC                                    4654 @L514    DS    0H
                                            4655 * ***       free(cbuf);
00002DFC E350 D0B8 0024          000000B8   4656          STG   5,184(0,13)
00002E02 4110 D0B8               000000B8   4657          LA    1,184(0,13)
00002E06 E3F0 C0B0 0004          00002C98   4658          LG    15,@lit_1531_110 ; free
00002E0C                                    4659 @@gen_label190 DS    0H
00002E0C 05EF                               4660          BALR  14,15
00002E0E                                    4661 @@gen_label191 DS    0H
                                            4662 * ***
                                            4663 * ***
                                            4664 * ***
                                            4665 * ***       return r;
                                                                                                                           Page   96 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002E0E B904 00F3                          4666          LGR   15,3
                                            4667 * ***   }
00002E12                                    4668 @ret_lab_1531 DS 0H
                                            4669 * * **** Start of Epilogue
                                            4670          DCCEPIL
00002E12                                    4671+         ds 0h                                                          01-DCCEP
                                            4672+* Epilog
00002E12 D707 D088 D088 00000088 00000088   4673+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E18 E3D0 D080 0004          00000080   4674+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E1E E3C0 D090 0004          00000090   4675+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E24 E3B0 C018 0004          00000018   4676+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E2A E3C0 B010 0021          00000010   4677+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E30 E3E0 D008 0004          00000008   4678+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E36 EB1C D020 0004          00000020   4679+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E3C 078E                               4680+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E3E E3F0 D010 0024          00000010   4681+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E44 E300 D018 0024          00000018   4682+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E4A E3F0 D090 0004          00000090   4683+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E50 E3F0 F018 0004          00000018   4684+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E56 47F0 F040               00000040   4685+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4686+* End of Epilog
                                            4687 * * **** End of Epilogue
                                            4688          DROP  12
                                            4689 *
                                            4690 *   DSECT for automatic variables in "rd_kafka_buf_write_kstr"
                                            4691 *      (FUNCTION #1531)
                                            4692 *
00000000                00000000 000000B8   4693 @AUTO#rd_kafka_buf_write_kstr DSECT
00000000                                    4694          DS    XL168
000000A8                                    4695 rd_kafka_buf_write_kstr#ulen#0 DS 8XL1 ; ulen
000000B0                000000B0 000000A8   4696          ORG   @AUTO#rd_kafka_buf_write_kstr+168
000000A8                                    4697 rd_kafka_buf_write_kstr#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8   4698          ORG   @AUTO#rd_kafka_buf_write_kstr+168
000000A8                                    4699 rd_kafka_buf_write_kstr#len#0 DS 8XL1 ; len
000000B0                000000B0 000000B0   4700          ORG   @AUTO#rd_kafka_buf_write_kstr+176
000000B0                                    4701 rd_kafka_buf_write_kstr#alen#0 DS 8XL1 ; alen
                                            4702 *
00002E5A                00000000 000054D2   4703 @CODE    CSECT
                                            4704 *
                                            4705 *
                                            4706 *
                                            4707 * ....... start of rd_kafka_buf_destroy_final
                                            4708 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
00002E5A                                    4709 @LNAME1501 DS  0H
00002E5A 0000001A                           4710          DC    X'0000001A'
00002E5E 99846D9281869281                   4711          DC    C'rd_kafka_buf_destroy_final'
00002E78 00                                 4712          DC    X'00'
                                            4713 rd_kafka_buf_destroy_final DCCPRLG CINDEX=1501,BASER=12,FRAME=208,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1501
                                            4714          macro
                                            4715          dccextrn &m
                                                                                                                           Page   97 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4716          gblc    &$dccext(1000)
                                            4717          gbla    &$dccexti
                                            4718          lcla    &i
                                            4719 &$dccext(&$dccexti+1) setc    '&m'
                                            4720 &i       seta    1
                                            4721 .loop    aif    (&i gt &$dccexti).around
                                            4722          aif    ('&$dccext(&i)' eq '&m').getout
                                            4723 &i       seta    &i+1
                                            4724          ago     .loop
                                            4725 .around  anop
                                            4726 &$dccexti seta &$dccexti+1
                                            4727          extrn  &m
                                            4728 .getout  anop
                                            4729          mend
00002E80                                    4730+$eye0107    ds    0d                                                    02-DCCCA
00002E80 C4C3C3                             4731+         dc cl3'DCC'                                                    02-DCCCA
00002E83 01                                 4732+         dc xl1'01' format one                                          02-DCCCA
00002E84 00000000                           4733+         dc a(0)                                                        02-DCCCA
00002E88 0000000000002EF2                   4734+         dc ad(@PER_1501)                                               02-DCCCA
00002E90 00000000000000D0                   4735+         dc ad(208)                                                     02-DCCCA
00002E98 0000000000000000                   4736+         dc ad(0)                                                       02-DCCCA
00002EA0 0000000000001000                   4737+         dc ad(4096)                                                    02-DCCCA
00002EA8 20                                 4738+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002EA9 03                                 4739+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002EAA 03                                 4740+         dc al1(3)                                                      02-DCCCA
00002EAB 08                                 4741+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002EAC 00                                 4742+         dc bl.8'00000000'                                              02-DCCCA
00002EAD 000000                             4743+         dc al3(0)                                                      02-DCCCA
00002EB0 0000000000002E5A                   4744+         dc ad(@LNAME1501)                                              02-DCCCA
00002EB8                                    4745+         ds 0d                                                          02-DCCCA
00002EB8 0000000000002E80                   4746+         dc ad($eye0107)                                                02-DCCCA
00002EC0 0000000000000000                   4747+         dc ad(0)                                                       02-DCCCA
00002EC8                                    4748+         ds    0d                                                       01-DCCPR
                                            4749+         entry rd_kafka_buf_destroy_final                               01-DCCPR
00002EC8                                    4750+rd_kafka_buf_destroy_final ds 0d                                        01-DCCPR
00002EC8                                    4751+@REGION_1501_1 ds 0h                                                    01-DCCPR
00002EC8 EBEC D008 0024          00000008   4752+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002ECE E3E0 D088 0004          00000088   4753+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002ED4 E3C0 D090 0004          00000090   4754+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002EDA B904 002E                          4755+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002EDE E3B0 C018 0004          00000018   4756+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002EE4 A7EB 00D0               000000D0   4757+         aghi  14,208              increase by frame size               01-DCCPR
00002EE8 E3E0 C020 0021          00000020   4758+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002EEE 4720 B020               00000020   4759+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002EF2                                    4760+@PER_1501 ds   0h                                                       01-DCCPR
00002EF2 EBDE 2080 0024          00000080   4761+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002EF8 E3C0 2090 0024          00000090   4762+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002EFE B904 00D2                          4763+         lgr   13,2                set real frame pointer               01-DCCPR
00002F02 B904 00CF                          4764+         lgr   12,15               set base reg                         01-DCCPR
                        00002EC8            4765+         using @REGION_1501_1,12                                        01-DCCPR
                                            4766 * ******* End of Prologue
                                            4767 * *
                                                                                                                           Page   98 
  Active Usings: @REGION_1501_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002F06 E320 1000 0004          00000000   4768          LG    2,0(0,1)    ; rkbuf
                                            4769 * ***
                                            4770 * ***           switch (rkbuf->rkbuf_reqhdr.ApiKey)
00002F0C 47F0 C1E8               000030B0   4771          B     @L630
00002F10                                    4772          DS    0D
00002F10 000000D0                           4773 @FRAMESIZE_1501 DC F'208'
00002F14 00000000
00002F18 0000000000000000                   4774 @lit_1501_116 DC AD(rd_list_destroy)
00002F20 0000000000000890                   4775 @lit_1501_117 DC AD(rd_free)
00002F28 0000000000000000                   4776 @lit_1501_118 DC AD(rd_kafka_op_reply)
00002F30 0000000000000000                   4777 @lit_1501_119 DC AD(mtx_lock)
00002F38 0000000000000000                   4778 @lit_1501_122 DC AD(rd_kafka_crash)
00002F40 00000000000054D8                   4779 @lit_1501_121 DC AD(@DATA)
00002F48 0000000000005722                   4780 @lit_1501_120 DC AD(@strings@)
00002F50 0000000000000000                   4781 @lit_1501_123 DC AD(mtx_unlock)
00002F58 0000000000000000                   4782 @lit_1501_124 DC AD(rd_kafka_msgbatch_destroy)
00002F60 00000000000009A0                   4783 @lit_1501_125 DC AD(rd_refcnt_sub0)
00002F68 0000000000002EC8                   4784 @lit_1501_126 DC AD(rd_kafka_buf_destroy_final)
00002F70 0000000000002170                   4785 @lit_1501_127 DC AD(rd_kafka_replyq_destroy)
00002F78 0000000000000000                   4786 @lit_1501_129 DC AD(rd_buf_destroy)
00002F80 0000000000000000                   4787 @lit_1501_132 DC AD(rd_kafka_broker_destroy_final)
                                            4788 * ***           {
                                            4789 * ***           case 3:
00002F88                                    4790 @L632    DS    0H
                                            4791 * ***                   if (rkbuf->rkbuf_u.Metadata.topics)
00002F88 E3F0 2190 0002          00000190   4792          LTG   15,400(0,2) ; offset of rkbuf_u in rd_kafka_buf_s
00002F8E 4780 C0E2               00002FAA   4793          BZ    @L633
                                            4794 * ***                           rd_list_destroy(rkbuf->rkbuf_u.Metadat\
                                            4795 * a.topics);
00002F92 E3F0 2190 0004          00000190   4796          LG    15,400(0,2)
00002F98 E3F0 D0A8 0024          000000A8   4797          STG   15,168(0,13)
00002F9E 4110 D0A8               000000A8   4798          LA    1,168(0,13)
00002FA2 E3F0 C050 0004          00002F18   4799          LG    15,@lit_1501_116 ; rd_list_destroy
00002FA8                                    4800 @@gen_label193 DS    0H
00002FA8 05EF                               4801          BALR  14,15
00002FAA                                    4802 @@gen_label194 DS    0H
00002FAA                                    4803 @L633    DS    0H
                                            4804 * ***                   if (rkbuf->rkbuf_u.Metadata.reason)
00002FAA E3F0 2198 0002          00000198   4805          LTG   15,408(0,2) ; offset of reason in 0000088
00002FB0 4780 C104               00002FCC   4806          BZ    @L634
                                            4807 * ***                           rd_free(rkbuf->rkbuf_u.Metadata.reason\
                                            4808 * );
00002FB4 E3F0 2198 0004          00000198   4809          LG    15,408(0,2)
00002FBA E3F0 D0A8 0024          000000A8   4810          STG   15,168(0,13)
00002FC0 4110 D0A8               000000A8   4811          LA    1,168(0,13)
00002FC4 E3F0 C058 0004          00002F20   4812          LG    15,@lit_1501_117 ; rd_free
00002FCA                                    4813 @@gen_label196 DS    0H
00002FCA 05EF                               4814          BALR  14,15
00002FCC                                    4815 @@gen_label197 DS    0H
00002FCC                                    4816 @L634    DS    0H
                                            4817 * ***                   if (rkbuf->rkbuf_u.Metadata.rko)
00002FCC E3F0 21A0 0002          000001A0   4818          LTG   15,416(0,2) ; offset of rko in 0000088
                                                                                                                           Page   99 
  Active Usings: @REGION_1501_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002FD2 4780 C12C               00002FF4   4819          BZ    @L635
                                            4820 * ***                           rd_kafka_op_reply(rkbuf->rkbuf_u.Metad\
                                            4821 * ata.rko,
                                            4822 * ***                                             RD_KAFKA_RESP_ERR__D\
                                            4823 * ESTROY);
00002FD6 E3F0 21A0 0004          000001A0   4824          LG    15,416(0,2)
00002FDC E3F0 D0A8 0024          000000A8   4825          STG   15,168(0,13)
00002FE2 E548 D0B0 FF3B          000000B0   4826          MVGHI 176(13),-197
00002FE8 4110 D0A8               000000A8   4827          LA    1,168(0,13)
00002FEC E3F0 C060 0004          00002F28   4828          LG    15,@lit_1501_118 ; rd_kafka_op_reply
00002FF2                                    4829 @@gen_label199 DS    0H
00002FF2 05EF                               4830          BALR  14,15
00002FF4                                    4831 @@gen_label200 DS    0H
00002FF4                                    4832 @L635    DS    0H
                                            4833 * ***                   if (rkbuf->rkbuf_u.Metadata.decr) {
00002FF4 E3F0 21B0 0002          000001B0   4834          LTG   15,432(0,2) ; offset of decr in 0000088
00002FFA 4780 C200               000030C8   4835          BZ    @L631
                                            4836 * ***
                                            4837 * ***                           mtx_lock(rkbuf->rkbuf_u.Metadata.decr_\
                                            4838 * lock);
00002FFE E3F0 21B8 0004          000001B8   4839          LG    15,440(0,2)
00003004 E3F0 D0A8 0024          000000A8   4840          STG   15,168(0,13)
0000300A 4110 D0A8               000000A8   4841          LA    1,168(0,13)
0000300E E3F0 C068 0004          00002F30   4842          LG    15,@lit_1501_119 ; mtx_lock
00003014                                    4843 @@gen_label202 DS    0H
00003014 05EF                               4844          BALR  14,15
00003016                                    4845 @@gen_label203 DS    0H
                                            4846 * ***                           do { if (((!((*rkbuf->rkbuf_u.Metadata\
                                            4847 * .decr) > 0)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafk\
                                            4848 * a_buf.c",49, __FUNCTION__, (((void *)0)), "assert: " "(*rkbuf->rkbuf\
                                            4849 * _u.Metadata.decr) > 0"); } while (0);
00003016                                    4850 @L637    DS    0H
00003016 E3F0 21B0 0004          000001B0   4851          LG    15,432(0,2) ; offset of decr in 0000088
0000301C E55C F000 0000          00000000   4852          CHSI  0(15),0
00003022 4720 C1A0               00003068   4853          BH    @L640
00003026 E3F0 C080 0004          00002F48   4854          LG    15,@lit_1501_120
0000302C 4110 F09C               0000009C   4855          LA    1,156(0,15)
00003030 E310 D0A8 0024          000000A8   4856          STG   1,168(0,13)
00003036 E548 D0B0 0031          000000B0   4857          MVGHI 176(13),49
0000303C E310 C078 0004          00002F40   4858          LG    1,@lit_1501_121
00003042 4110 11A6               000001A6   4859          LA    1,422(0,1)
00003046 E310 D0B8 0024          000000B8   4860          STG   1,184(0,13)
0000304C D707 D0C0 D0C0 000000C0 000000C0   4861          XC    192(8,13),192(13)
00003052 41F0 F0C6               000000C6   4862          LA    15,198(0,15)
00003056 E3F0 D0C8 0024          000000C8   4863          STG   15,200(0,13)
0000305C 4110 D0A8               000000A8   4864          LA    1,168(0,13)
00003060 E3F0 C070 0004          00002F38   4865          LG    15,@lit_1501_122 ; rd_kafka_crash
00003066                                    4866 @@gen_label205 DS    0H
00003066 05EF                               4867          BALR  14,15
00003068                                    4868 @@gen_label206 DS    0H
00003068                                    4869 @L640    DS    0H
                                            4870 * ***
                                                                                                                           Page  100 
  Active Usings: @REGION_1501_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4871 * ***                           (*rkbuf->rkbuf_u.Metadata.decr)--;
00003068 E3F0 21B0 0004          000001B0   4872          LG    15,432(0,2) ; offset of decr in 0000088
0000306E 5810 F000               00000000   4873          L     1,0(0,15)
00003072 A71A FFFF               0000FFFF   4874          AHI   1,-1
00003076 5010 F000               00000000   4875          ST    1,0(0,15)
                                            4876 * ***                           mtx_unlock(rkbuf->rkbuf_u.Metadata.dec\
                                            4877 * r_lock);
0000307A E3F0 21B8 0004          000001B8   4878          LG    15,440(0,2)
00003080 E3F0 D0A8 0024          000000A8   4879          STG   15,168(0,13)
00003086 4110 D0A8               000000A8   4880          LA    1,168(0,13)
0000308A E3F0 C088 0004          00002F50   4881          LG    15,@lit_1501_123 ; mtx_unlock
00003090                                    4882 @@gen_label207 DS    0H
00003090 05EF                               4883          BALR  14,15
00003092                                    4884 @@gen_label208 DS    0H
                                            4885 * ***                   }
00003092                                    4886 @L636    DS    0H
                                            4887 * ***                   break;
00003092 47F0 C200               000030C8   4888          B     @L631
                                            4889 * ***
                                            4890 * ***           case 0:
00003096                                    4891 @L641    DS    0H
                                            4892 * ***                   rd_kafka_msgbatch_destroy(&rkbuf->rkbuf_u.Prod\
                                            4893 * uce.batch);
00003096 41F0 2190               00000190   4894          LA    15,400(0,2)
0000309A E3F0 D0A8 0024          000000A8   4895          STG   15,168(0,13)
000030A0 4110 D0A8               000000A8   4896          LA    1,168(0,13)
000030A4 E3F0 C090 0004          00002F58   4897          LG    15,@lit_1501_124 ; rd_kafka_msgbatch_destroy
000030AA                                    4898 @@gen_label209 DS    0H
000030AA 05EF                               4899          BALR  14,15
000030AC                                    4900 @@gen_label210 DS    0H
                                            4901 * ***                   break;
000030AC 47F0 C200               000030C8   4902          B     @L631
                                            4903 * ***           }
000030B0                                    4904 @L630    DS    0H
000030B0 48F0 20B8               000000B8   4905          LH    15,184(0,2)
000030B4 12FF                               4906          LTR   15,15
000030B6 4740 C200               000030C8   4907          BL    @L631
000030BA 12FF                               4908          LTR   15,15
000030BC 4780 C1CE               00003096   4909          BE    @L641
000030C0 A7FE 0003               00000003   4910          CHI   15,3
000030C4 4780 C0C0               00002F88   4911          BE    @L632
000030C8                                    4912 @L631    DS    0H
                                            4913 * ***
                                            4914 * ***           if (rkbuf->rkbuf_response)
000030C8 E3F0 20F8 0002          000000F8   4915          LTG   15,248(0,2) ; offset of rkbuf_response in rd_kafka_buf_s
000030CE 4780 C244               0000310C   4916          BZ    @L642
                                            4917 * ***                   do { if (rd_refcnt_sub0(&(rkbuf->rkbuf_respons\
                                            4918 * e)->rkbuf_refcnt) > 0) break; rd_kafka_buf_destroy_final(rkbuf->rkbu\
                                            4919 * f_response); } while (0);
000030D2                                    4920 @L643    DS    0H
000030D2 E3F0 20F8 0004          000000F8   4921          LG    15,248(0,2) ; offset of rkbuf_response in rd_kafka_buf_s
000030D8 41F0 F108               00000108   4922          LA    15,264(0,15)
                                                                                                                           Page  101 
  Active Usings: @REGION_1501_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000030DC E3F0 D0A8 0024          000000A8   4923          STG   15,168(0,13)
000030E2 4110 D0A8               000000A8   4924          LA    1,168(0,13)
000030E6 E3F0 C098 0004          00002F60   4925          LG    15,@lit_1501_125 ; rd_refcnt_sub0
000030EC                                    4926 @@gen_label212 DS    0H
000030EC 05EF                               4927          BALR  14,15
000030EE                                    4928 @@gen_label213 DS    0H
000030EE 12FF                               4929          LTR   15,15
000030F0 4720 C244               0000310C   4930          BH    @L642
000030F4                                    4931 @L646    DS    0H
000030F4 E3F0 20F8 0004          000000F8   4932          LG    15,248(0,2)
000030FA E3F0 D0A8 0024          000000A8   4933          STG   15,168(0,13)
00003100 4110 D0A8               000000A8   4934          LA    1,168(0,13)
00003104 E3F0 C0A0 0004          00002F68   4935          LG    15,@lit_1501_126 ; rd_kafka_buf_destroy_final
0000310A                                    4936 @@gen_label215 DS    0H
0000310A 05EF                               4937          BALR  14,15
0000310C                                    4938 @@gen_label216 DS    0H
0000310C                                    4939 @L644    DS    0H
                                            4940 * ***
                                            4941 * ***           rd_kafka_replyq_destroy(&rkbuf->rkbuf_replyq);
0000310C                                    4942 @L642    DS    0H
0000310C 41F0 20D0               000000D0   4943          LA    15,208(0,2)
00003110 E3F0 D0A8 0024          000000A8   4944          STG   15,168(0,13)
00003116 4110 D0A8               000000A8   4945          LA    1,168(0,13)
0000311A E330 C0A8 0004          00002F70   4946          LG    3,@lit_1501_127 ; rd_kafka_replyq_destroy
00003120 B904 00F3                          4947          LGR   15,3
00003124                                    4948 @@gen_label217 DS    0H
00003124 05EF                               4949          BALR  14,15
00003126                                    4950 @@gen_label218 DS    0H
                                            4951 * ***           rd_kafka_replyq_destroy(&rkbuf->rkbuf_orig_replyq);
00003126 41F0 20E0               000000E0   4952          LA    15,224(0,2)
0000312A E3F0 D0A8 0024          000000A8   4953          STG   15,168(0,13)
00003130 4110 D0A8               000000A8   4954          LA    1,168(0,13)
00003134 B904 00F3                          4955          LGR   15,3
00003138                                    4956 @@gen_label219 DS    0H
00003138 05EF                               4957          BALR  14,15
0000313A                                    4958 @@gen_label220 DS    0H
                                            4959 * ***
                                            4960 * ***           rd_buf_destroy(&rkbuf->rkbuf_buf);
0000313A 41F0 2028               00000028   4961          LA    15,40(0,2)
0000313E E3F0 D0A8 0024          000000A8   4962          STG   15,168(0,13)
00003144 4110 D0A8               000000A8   4963          LA    1,168(0,13)
00003148 E3F0 C0B0 0004          00002F78   4964          LG    15,@lit_1501_129 ; rd_buf_destroy
0000314E                                    4965 @@gen_label221 DS    0H
0000314E 05EF                               4966          BALR  14,15
00003150                                    4967 @@gen_label222 DS    0H
                                            4968 * ***
                                            4969 * ***           if (rkbuf->rkbuf_rktp_vers)
00003150 E3F0 2180 0002          00000180   4970          LTG   15,384(0,2) ; offset of rkbuf_rktp_vers in rd_kafka_buf_*
                                                                s
00003156 4780 C2AA               00003172   4971          BZ    @L647
                                            4972 * ***                   rd_list_destroy(rkbuf->rkbuf_rktp_vers);
0000315A E3F0 2180 0004          00000180   4973          LG    15,384(0,2)
                                                                                                                           Page  102 
  Active Usings: @REGION_1501_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003160 E3F0 D0A8 0024          000000A8   4974          STG   15,168(0,13)
00003166 4110 D0A8               000000A8   4975          LA    1,168(0,13)
0000316A E3F0 C050 0004          00002F18   4976          LG    15,@lit_1501_116 ; rd_list_destroy
00003170                                    4977 @@gen_label224 DS    0H
00003170 05EF                               4978          BALR  14,15
00003172                                    4979 @@gen_label225 DS    0H
00003172                                    4980 @L647    DS    0H
                                            4981 * ***
                                            4982 * ***           if (rkbuf->rkbuf_rkb)
00003172 E3F0 2100 0002          00000100   4983          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003178 4780 C2EE               000031B6   4984          BZ    @L653
                                            4985 * ***                   do { if (rd_refcnt_sub0(&(rkbuf->rkbuf_rkb)->r\
                                            4986 * kb_refcnt) > 0) break; rd_kafka_broker_destroy_final(rkbuf->rkbuf_rk\
                                            4987 * b); } while (0);
0000317C                                    4988 @L649    DS    0H
0000317C E3F0 2100 0004          00000100   4989          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003182 41F0 FFA0               00000FA0   4990          LA    15,4000(0,15)
00003186 E3F0 D0A8 0024          000000A8   4991          STG   15,168(0,13)
0000318C 4110 D0A8               000000A8   4992          LA    1,168(0,13)
00003190 E3F0 C098 0004          00002F60   4993          LG    15,@lit_1501_125 ; rd_refcnt_sub0
00003196                                    4994 @@gen_label227 DS    0H
00003196 05EF                               4995          BALR  14,15
00003198                                    4996 @@gen_label228 DS    0H
00003198 12FF                               4997          LTR   15,15
0000319A 4720 C2EE               000031B6   4998          BH    @L653
0000319E                                    4999 @L652    DS    0H
0000319E E3F0 2100 0004          00000100   5000          LG    15,256(0,2)
000031A4 E3F0 D0A8 0024          000000A8   5001          STG   15,168(0,13)
000031AA 4110 D0A8               000000A8   5002          LA    1,168(0,13)
000031AE E3F0 C0B8 0004          00002F80   5003          LG    15,@lit_1501_132 ; rd_kafka_broker_destroy_final
000031B4                                    5004 @@gen_label230 DS    0H
000031B4 05EF                               5005          BALR  14,15
000031B6                                    5006 @@gen_label231 DS    0H
000031B6                                    5007 @L650    DS    0H
                                            5008 * ***
                                            5009 * ***           do { } while (0);
000031B6                                    5010 @L648    DS    0H
000031B6                                    5011 @L653    DS    0H
                                            5012 * ***
                                            5013 * ***      rd_free(rkbuf);
000031B6 E320 D0A8 0024          000000A8   5014          STG   2,168(0,13)
000031BC 4110 D0A8               000000A8   5015          LA    1,168(0,13)
000031C0 E3F0 C058 0004          00002F20   5016          LG    15,@lit_1501_117 ; rd_free
000031C6                                    5017 @@gen_label232 DS    0H
000031C6 05EF                               5018          BALR  14,15
000031C8                                    5019 @@gen_label233 DS    0H
                                            5020 * ***   }
000031C8                                    5021 @ret_lab_1501 DS 0H
                                            5022 * * **** Start of Epilogue
                                            5023          DCCEPIL
000031C8                                    5024+         ds 0h                                                          01-DCCEP
                                            5025+* Epilog
                                                                                                                           Page  103 
  Active Usings: @REGION_1501_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000031C8 D707 D088 D088 00000088 00000088   5026+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000031CE E3D0 D080 0004          00000080   5027+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000031D4 E3C0 D090 0004          00000090   5028+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000031DA E3B0 C018 0004          00000018   5029+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000031E0 E3C0 B010 0021          00000010   5030+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000031E6 E3E0 D008 0004          00000008   5031+         lg  14,8(0,13)          load up return address                 01-DCCEP
000031EC EB1C D020 0004          00000020   5032+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000031F2 078E                               5033+         bcr 8,14                if same dsab, just return              01-DCCEP
000031F4 E3F0 D010 0024          00000010   5034+         stg 15,16(0,13)         save return code                       01-DCCEP
000031FA E300 D018 0024          00000018   5035+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003200 E3F0 D090 0004          00000090   5036+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003206 E3F0 F018 0004          00000018   5037+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000320C 47F0 F040               00000040   5038+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5039+* End of Epilog
                                            5040 * * **** End of Epilogue
                                            5041          DROP  12
                                            5042 *
                                            5043 *   DSECT for automatic variables in "rd_kafka_buf_destroy_final"
                                            5044 *      (FUNCTION #1501)
                                            5045 *
00000000                00000000 000000A8   5046 @AUTO#rd_kafka_buf_destroy_final DSECT
00000000                                    5047          DS    XL168
                                            5048 *
00003210                00000000 000054D2   5049 @CODE    CSECT
                                            5050 *
                                            5051 *
                                            5052 *
                                            5053 * ....... start of rd_kafka_buf_push0
                                            5054 rd_kafka_buf_push0 ALIAS X'99846D92818692816D82A4866D97A4A288F0'
00003210                                    5055 @LNAME1502 DS  0H
00003210 00000012                           5056          DC    X'00000012'
00003214 99846D9281869281                   5057          DC    C'rd_kafka_buf_push0'
00003226 00                                 5058          DC    X'00'
                                            5059 rd_kafka_buf_push0 DCCPRLG CINDEX=1502,BASER=12,FRAME=208,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1502
                                            5060          macro
                                            5061          dccextrn &m
                                            5062          gblc    &$dccext(1000)
                                            5063          gbla    &$dccexti
                                            5064          lcla    &i
                                            5065 &$dccext(&$dccexti+1) setc    '&m'
                                            5066 &i       seta    1
                                            5067 .loop    aif    (&i gt &$dccexti).around
                                            5068          aif    ('&$dccext(&i)' eq '&m').getout
                                            5069 &i       seta    &i+1
                                            5070          ago     .loop
                                            5071 .around  anop
                                            5072 &$dccexti seta &$dccexti+1
                                            5073          extrn  &m
                                            5074 .getout  anop
                                            5075          mend
00003228                                    5076+$eye0110    ds    0d                                                    02-DCCCA
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003228 C4C3C3                             5077+         dc cl3'DCC'                                                    02-DCCCA
0000322B 01                                 5078+         dc xl1'01' format one                                          02-DCCCA
0000322C 00000000                           5079+         dc a(0)                                                        02-DCCCA
00003230 000000000000329A                   5080+         dc ad(@PER_1502)                                               02-DCCCA
00003238 00000000000000D0                   5081+         dc ad(208)                                                     02-DCCCA
00003240 0000000000000000                   5082+         dc ad(0)                                                       02-DCCCA
00003248 0000000000001000                   5083+         dc ad(4096)                                                    02-DCCCA
00003250 20                                 5084+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003251 03                                 5085+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003252 03                                 5086+         dc al1(3)                                                      02-DCCCA
00003253 08                                 5087+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003254 00                                 5088+         dc bl.8'00000000'                                              02-DCCCA
00003255 000000                             5089+         dc al3(0)                                                      02-DCCCA
00003258 0000000000003210                   5090+         dc ad(@LNAME1502)                                              02-DCCCA
00003260                                    5091+         ds 0d                                                          02-DCCCA
00003260 0000000000003228                   5092+         dc ad($eye0110)                                                02-DCCCA
00003268 0000000000000000                   5093+         dc ad(0)                                                       02-DCCCA
00003270                                    5094+         ds    0d                                                       01-DCCPR
                                            5095+         entry rd_kafka_buf_push0                                       01-DCCPR
00003270                                    5096+rd_kafka_buf_push0 ds 0d                                                01-DCCPR
00003270                                    5097+@REGION_1502_1 ds 0h                                                    01-DCCPR
00003270 EBEC D008 0024          00000008   5098+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003276 E3E0 D088 0004          00000088   5099+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000327C E3C0 D090 0004          00000090   5100+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003282 B904 002E                          5101+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003286 E3B0 C018 0004          00000018   5102+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000328C A7EB 00D0               000000D0   5103+         aghi  14,208              increase by frame size               01-DCCPR
00003290 E3E0 C020 0021          00000020   5104+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003296 4720 B020               00000020   5105+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000329A                                    5106+@PER_1502 ds   0h                                                       01-DCCPR
0000329A EBDE 2080 0024          00000080   5107+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000032A0 E3C0 2090 0024          00000090   5108+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000032A6 B904 00D2                          5109+         lgr   13,2                set real frame pointer               01-DCCPR
000032AA B904 00CF                          5110+         lgr   12,15               set base reg                         01-DCCPR
                        00003270            5111+         using @REGION_1502_1,12                                        01-DCCPR
000032AE B904 0031                          5112          LGR   3,1         ; ptr to parm area
                                            5113 * ******* End of Prologue
                                            5114 * *
                                            5115 * ***           rd_buf_push0(&rkbuf->rkbuf_buf,buf,len,free_cb,0 );
000032B2 E320 3000 0004          00000000   5116          LG    2,0(0,3)    ; rkbuf
000032B8 41F0 2028               00000028   5117          LA    15,40(0,2)
000032BC E3F0 D0A8 0024          000000A8   5118          STG   15,168(0,13)
000032C2 E3F0 3008 0004          00000008   5119          LG    15,8(0,3)   ; buf
000032C8 E3F0 D0B0 0024          000000B0   5120          STG   15,176(0,13)
000032CE E3F0 3010 0004          00000010   5121          LG    15,16(0,3)  ; len
000032D4 E3F0 D0B8 0024          000000B8   5122          STG   15,184(0,13)
000032DA E3F0 3020 0004          00000020   5123          LG    15,32(0,3)  ; free_cb
000032E0 E3F0 D0C0 0024          000000C0   5124          STG   15,192(0,13)
000032E6 D707 D0C8 D0C8 000000C8 000000C8   5125          XC    200(8,13),200(13)
000032EC 4110 D0A8               000000A8   5126          LA    1,168(0,13)
000032F0 E3F0 C120 0004          00003390   5127          LG    15,@lit_1502_135 ; rd_buf_push0
000032F6                                    5128 @@gen_label234 DS    0H
                                                                                                                           Page  105 
  Active Usings: @REGION_1502_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000032F6 05EF                               5129          BALR  14,15
000032F8                                    5130 @@gen_label235 DS    0H
                                            5131 * ***
                                            5132 * ***           if (allow_crc_calc && (rkbuf->rkbuf_flags & 0x4))
000032F8 E3F0 301C 0012          0000001C   5133          LT    15,28(0,3)  ; allow_crc_calc
000032FE 4780 C0CE               0000333E   5134          BZ    @ret_lab_1502
00003302 9104 2023      00000023 00000004   5135          TM    35(2),4
00003306 4780 C0CE               0000333E   5136          BZ    @ret_lab_1502
                                            5137 * ***                   rkbuf->rkbuf_crc = rd_crc32_update(rkbuf->rkbu\
                                            5138 * f_crc, buf, len);
0000330A E3F0 20B0 0016          000000B0   5139          LLGF  15,176(0,2)
00003310 E3F0 D0A8 0024          000000A8   5140          STG   15,168(0,13)
00003316 E3F0 3008 0004          00000008   5141          LG    15,8(0,3)   ; buf
0000331C E3F0 D0B0 0024          000000B0   5142          STG   15,176(0,13)
00003322 E3F0 3010 0004          00000010   5143          LG    15,16(0,3)  ; len
00003328 E3F0 D0B8 0024          000000B8   5144          STG   15,184(0,13)
0000332E 4110 D0A8               000000A8   5145          LA    1,168(0,13)
00003332 E3F0 C128 0004          00003398   5146          LG    15,@lit_1502_136 ; rd_crc32_update
00003338                                    5147 @@gen_label238 DS    0H
00003338 05EF                               5148          BALR  14,15
0000333A                                    5149 @@gen_label239 DS    0H
0000333A 50F0 20B0               000000B0   5150          ST    15,176(0,2)
0000333E                                    5151 @L656    DS    0H
                                            5152 * ***   }
0000333E                                    5153 @ret_lab_1502 DS 0H
                                            5154 * * **** Start of Epilogue
                                            5155          DCCEPIL
0000333E                                    5156+         ds 0h                                                          01-DCCEP
                                            5157+* Epilog
0000333E D707 D088 D088 00000088 00000088   5158+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003344 E3D0 D080 0004          00000080   5159+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000334A E3C0 D090 0004          00000090   5160+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003350 E3B0 C018 0004          00000018   5161+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003356 E3C0 B010 0021          00000010   5162+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000335C E3E0 D008 0004          00000008   5163+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003362 EB1C D020 0004          00000020   5164+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003368 078E                               5165+         bcr 8,14                if same dsab, just return              01-DCCEP
0000336A E3F0 D010 0024          00000010   5166+         stg 15,16(0,13)         save return code                       01-DCCEP
00003370 E300 D018 0024          00000018   5167+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003376 E3F0 D090 0004          00000090   5168+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000337C E3F0 F018 0004          00000018   5169+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003382 47F0 F040               00000040   5170+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5171+* End of Epilog
                                            5172 * * **** End of Epilogue
00003388                                    5173          DS    0D
00003388 000000D0                           5174 @FRAMESIZE_1502 DC F'208'
0000338C 00000000
00003390 0000000000000000                   5175 @lit_1502_135 DC AD(rd_buf_push0)
00003398 0000000000002420                   5176 @lit_1502_136 DC AD(rd_crc32_update)
                                            5177          DROP  12
                                            5178 *
                                            5179 *   DSECT for automatic variables in "rd_kafka_buf_push0"
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5180 *      (FUNCTION #1502)
                                            5181 *
00000000                00000000 000000A8   5182 @AUTO#rd_kafka_buf_push0 DSECT
00000000                                    5183          DS    XL168
                                            5184 *
000033A0                00000000 000054D2   5185 @CODE    CSECT
                                            5186 *
                                            5187 *
                                            5188 *
                                            5189 * ....... start of rd_kafka_buf_new0
                                            5190 rd_kafka_buf_new0 ALIAS X'99846D92818692816D82A4866D9585A6F0'
000033A0                                    5191 @LNAME1503 DS  0H
000033A0 00000011                           5192          DC    X'00000011'
000033A4 99846D9281869281                   5193          DC    C'rd_kafka_buf_new0'
000033B5 00                                 5194          DC    X'00'
                                            5195 rd_kafka_buf_new0 DCCPRLG CINDEX=1503,BASER=12,FRAME=200,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1503
                                            5196          macro
                                            5197          dccextrn &m
                                            5198          gblc    &$dccext(1000)
                                            5199          gbla    &$dccexti
                                            5200          lcla    &i
                                            5201 &$dccext(&$dccexti+1) setc    '&m'
                                            5202 &i       seta    1
                                            5203 .loop    aif    (&i gt &$dccexti).around
                                            5204          aif    ('&$dccext(&i)' eq '&m').getout
                                            5205 &i       seta    &i+1
                                            5206          ago     .loop
                                            5207 .around  anop
                                            5208 &$dccexti seta &$dccexti+1
                                            5209          extrn  &m
                                            5210 .getout  anop
                                            5211          mend
000033B8                                    5212+$eye0113    ds    0d                                                    02-DCCCA
000033B8 C4C3C3                             5213+         dc cl3'DCC'                                                    02-DCCCA
000033BB 01                                 5214+         dc xl1'01' format one                                          02-DCCCA
000033BC 00000000                           5215+         dc a(0)                                                        02-DCCCA
000033C0 000000000000342A                   5216+         dc ad(@PER_1503)                                               02-DCCCA
000033C8 00000000000000C8                   5217+         dc ad(200)                                                     02-DCCCA
000033D0 0000000000000000                   5218+         dc ad(0)                                                       02-DCCCA
000033D8 0000000000001000                   5219+         dc ad(4096)                                                    02-DCCCA
000033E0 20                                 5220+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000033E1 03                                 5221+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000033E2 03                                 5222+         dc al1(3)                                                      02-DCCCA
000033E3 08                                 5223+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000033E4 00                                 5224+         dc bl.8'00000000'                                              02-DCCCA
000033E5 000000                             5225+         dc al3(0)                                                      02-DCCCA
000033E8 00000000000033A0                   5226+         dc ad(@LNAME1503)                                              02-DCCCA
000033F0                                    5227+         ds 0d                                                          02-DCCCA
000033F0 00000000000033B8                   5228+         dc ad($eye0113)                                                02-DCCCA
000033F8 0000000000000000                   5229+         dc ad(0)                                                       02-DCCCA
00003400                                    5230+         ds    0d                                                       01-DCCPR
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5231+         entry rd_kafka_buf_new0                                        01-DCCPR
00003400                                    5232+rd_kafka_buf_new0 ds 0d                                                 01-DCCPR
00003400                                    5233+@REGION_1503_1 ds 0h                                                    01-DCCPR
00003400 EBEC D008 0024          00000008   5234+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003406 E3E0 D088 0004          00000088   5235+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000340C E3C0 D090 0004          00000090   5236+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003412 B904 002E                          5237+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003416 E3B0 C018 0004          00000018   5238+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000341C A7EB 00C8               000000C8   5239+         aghi  14,200              increase by frame size               01-DCCPR
00003420 E3E0 C020 0021          00000020   5240+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003426 4720 B020               00000020   5241+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000342A                                    5242+@PER_1503 ds   0h                                                       01-DCCPR
0000342A EBDE 2080 0024          00000080   5243+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003430 E3C0 2090 0024          00000090   5244+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003436 B904 00D2                          5245+         lgr   13,2                set real frame pointer               01-DCCPR
0000343A B904 00CF                          5246+         lgr   12,15               set base reg                         01-DCCPR
                        00003400            5247+         using @REGION_1503_1,12                                        01-DCCPR
0000343E B904 0031                          5248          LGR   3,1         ; ptr to parm area
                                            5249 * ******* End of Prologue
                                            5250 * *
                                            5251 * ***           rd_kafka_buf_t *rkbuf;
                                            5252 * ***
                                            5253 * ***           rkbuf = rd_calloc(1, sizeof(*rkbuf));
00003442 E548 D0B0 0001          000000B0   5254          MVGHI 176(13),1
00003448 E548 D0B8 01F0          000000B8   5255          MVGHI 184(13),496
0000344E 4110 D0B0               000000B0   5256          LA    1,176(0,13)
00003452 E3F0 C108 0004          00003508   5257          LG    15,@lit_1503_138 ; rd_calloc
00003458                                    5258 @@gen_label240 DS    0H
00003458 05EF                               5259          BALR  14,15
0000345A                                    5260 @@gen_label241 DS    0H
0000345A B904 002F                          5261          LGR   2,15
                                            5262 * ***
                                            5263 * ***           rkbuf->rkbuf_flags = flags;
0000345E 5810 3014               00000014   5264          L     1,20(0,3)   ; flags
00003462 5010 2020               00000020   5265          ST    1,32(0,2)   ; offset of rkbuf_flags in rd_kafka_buf_s
                                            5266 * ***
                                            5267 * ***           rd_buf_init(&rkbuf->rkbuf_buf, segcnt, size);
00003466 41F0 2028               00000028   5268          LA    15,40(0,2)
0000346A E3F0 D0B0 0024          000000B0   5269          STG   15,176(0,13)
00003470 E3F0 3004 0014          00000004   5270          LGF   15,4(0,3)   ; segcnt
00003476 E3F0 D0B8 0024          000000B8   5271          STG   15,184(0,13)
0000347C E3F0 3008 0004          00000008   5272          LG    15,8(0,3)   ; size
00003482 E3F0 D0C0 0024          000000C0   5273          STG   15,192(0,13)
00003488 4110 D0B0               000000B0   5274          LA    1,176(0,13)
0000348C E3F0 C110 0004          00003510   5275          LG    15,@lit_1503_139 ; rd_buf_init
00003492                                    5276 @@gen_label242 DS    0H
00003492 05EF                               5277          BALR  14,15
00003494                                    5278 @@gen_label243 DS    0H
                                            5279 * ***           rd_atomic32_init(&rkbuf->rkbuf_refcnt, 1);
00003494 41F0 2108               00000108   5280          LA    15,264(0,2)
00003498 E3F0 D0B0 0024          000000B0   5281          STG   15,176(0,13)
0000349E E548 D0B8 0001          000000B8   5282          MVGHI 184(13),1
                                                                                                                           Page  108 
  Active Usings: @REGION_1503_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000034A4 4110 D0B0               000000B0   5283          LA    1,176(0,13)
000034A8 E3F0 C118 0004          00003518   5284          LG    15,@lit_1503_140 ; rd_atomic32_init
000034AE                                    5285 @@gen_label244 DS    0H
000034AE 05EF                               5286          BALR  14,15
000034B0                                    5287 @@gen_label245 DS    0H
                                            5288 * ***
                                            5289 * ***           return rkbuf;
000034B0 B904 00F2                          5290          LGR   15,2
                                            5291 * ***   }
                                            5292 * * **** Start of Epilogue
                                            5293          DCCEPIL
000034B4                                    5294+         ds 0h                                                          01-DCCEP
                                            5295+* Epilog
000034B4 D707 D088 D088 00000088 00000088   5296+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000034BA E3D0 D080 0004          00000080   5297+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000034C0 E3C0 D090 0004          00000090   5298+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000034C6 E3B0 C018 0004          00000018   5299+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000034CC E3C0 B010 0021          00000010   5300+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000034D2 E3E0 D008 0004          00000008   5301+         lg  14,8(0,13)          load up return address                 01-DCCEP
000034D8 EB1C D020 0004          00000020   5302+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000034DE 078E                               5303+         bcr 8,14                if same dsab, just return              01-DCCEP
000034E0 E3F0 D010 0024          00000010   5304+         stg 15,16(0,13)         save return code                       01-DCCEP
000034E6 E300 D018 0024          00000018   5305+         stg 0,24(0,13)          save more return code                  01-DCCEP
000034EC E3F0 D090 0004          00000090   5306+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000034F2 E3F0 F018 0004          00000018   5307+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000034F8 47F0 F040               00000040   5308+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5309+* End of Epilog
                                            5310 * * **** End of Epilogue
00003500                                    5311          DS    0D
00003500 000000C8                           5312 @FRAMESIZE_1503 DC F'200'
00003504 00000000
00003508 0000000000000720                   5313 @lit_1503_138 DC AD(rd_calloc)
00003510 0000000000000000                   5314 @lit_1503_139 DC AD(rd_buf_init)
00003518 0000000000000240                   5315 @lit_1503_140 DC AD(rd_atomic32_init)
                                            5316          DROP  12
                                            5317 *
                                            5318 *   DSECT for automatic variables in "rd_kafka_buf_new0"
                                            5319 *      (FUNCTION #1503)
                                            5320 *
00000000                00000000 000000A8   5321 @AUTO#rd_kafka_buf_new0 DSECT
00000000                                    5322          DS    XL168
                                            5323 *
00003520                00000000 000054D2   5324 @CODE    CSECT
                                            5325 *
                                            5326 *
                                            5327 *
                                            5328 * ....... start of rd_kafka_buf_new_request0
                                            5329 rd_kafka_buf_new_request0 ALIAS X'99846D92818692816D82A4866D9585A66D998*
                                                                598A485A2A3F0'
00003520                                    5330 @LNAME1504 DS  0H
00003520 00000019                           5331          DC    X'00000019'
00003524 99846D9281869281                   5332          DC    C'rd_kafka_buf_new_request0'
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000353D 00                                 5333          DC    X'00'
                                            5334 rd_kafka_buf_new_request0 DCCPRLG CINDEX=1504,BASER=12,FRAME=200,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1504
                                            5335          macro
                                            5336          dccextrn &m
                                            5337          gblc    &$dccext(1000)
                                            5338          gbla    &$dccexti
                                            5339          lcla    &i
                                            5340 &$dccext(&$dccexti+1) setc    '&m'
                                            5341 &i       seta    1
                                            5342 .loop    aif    (&i gt &$dccexti).around
                                            5343          aif    ('&$dccext(&i)' eq '&m').getout
                                            5344 &i       seta    &i+1
                                            5345          ago     .loop
                                            5346 .around  anop
                                            5347 &$dccexti seta &$dccexti+1
                                            5348          extrn  &m
                                            5349 .getout  anop
                                            5350          mend
00003540                                    5351+$eye0116    ds    0d                                                    02-DCCCA
00003540 C4C3C3                             5352+         dc cl3'DCC'                                                    02-DCCCA
00003543 01                                 5353+         dc xl1'01' format one                                          02-DCCCA
00003544 00000000                           5354+         dc a(0)                                                        02-DCCCA
00003548 00000000000035B2                   5355+         dc ad(@PER_1504)                                               02-DCCCA
00003550 00000000000000C8                   5356+         dc ad(200)                                                     02-DCCCA
00003558 0000000000000000                   5357+         dc ad(0)                                                       02-DCCCA
00003560 0000000000001000                   5358+         dc ad(4096)                                                    02-DCCCA
00003568 20                                 5359+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003569 03                                 5360+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000356A 03                                 5361+         dc al1(3)                                                      02-DCCCA
0000356B 08                                 5362+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000356C 00                                 5363+         dc bl.8'00000000'                                              02-DCCCA
0000356D 000000                             5364+         dc al3(0)                                                      02-DCCCA
00003570 0000000000003520                   5365+         dc ad(@LNAME1504)                                              02-DCCCA
00003578                                    5366+         ds 0d                                                          02-DCCCA
00003578 0000000000003540                   5367+         dc ad($eye0116)                                                02-DCCCA
00003580 0000000000000000                   5368+         dc ad(0)                                                       02-DCCCA
00003588                                    5369+         ds    0d                                                       01-DCCPR
                                            5370+         entry rd_kafka_buf_new_request0                                01-DCCPR
00003588                                    5371+rd_kafka_buf_new_request0 ds 0d                                         01-DCCPR
00003588                                    5372+@REGION_1504_1 ds 0h                                                    01-DCCPR
00003588 EBEC D008 0024          00000008   5373+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000358E E3E0 D088 0004          00000088   5374+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003594 E3C0 D090 0004          00000090   5375+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000359A B904 002E                          5376+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000359E E3B0 C018 0004          00000018   5377+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000035A4 A7EB 00C8               000000C8   5378+         aghi  14,200              increase by frame size               01-DCCPR
000035A8 E3E0 C020 0021          00000020   5379+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000035AE 4720 B020               00000020   5380+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000035B2                                    5381+@PER_1504 ds   0h                                                       01-DCCPR
000035B2 EBDE 2080 0024          00000080   5382+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000035B8 E3C0 2090 0024          00000090   5383+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  110 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000035BE B904 00D2                          5384+         lgr   13,2                set real frame pointer               01-DCCPR
000035C2 B904 00CF                          5385+         lgr   12,15               set base reg                         01-DCCPR
                        00003588            5386+         using @REGION_1504_1,12                                        01-DCCPR
000035C6 B904 0041                          5387          LGR   4,1         ; ptr to parm area
                                            5388 * ******* End of Prologue
                                            5389 * *
000035CA E320 4000 0004          00000000   5390          LG    2,0(0,4)    ; rkb
000035D0 58F0 4014               00000014   5391          L     15,20(0,4)  ; segcnt
000035D4 E310 4018 0004          00000018   5392          LG    1,24(0,4)   ; size
                                            5393 * ***           rd_kafka_buf_t *rkbuf;
                                            5394 * ***
                                            5395 * ***
                                            5396 * ***           size += (4+2+2+4) +
                                            5397 * ***                   (2 + (((rkb->rkb_rk->rk_client_id)->len) == -1\
                                            5398 *  ? 0 : ((rkb->rkb_rk->rk_client_id)->len))) +
000035DA E330 2FD0 0004          00000FD0   5399          LG    3,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
000035E0 E330 3960 0004          00000960   5400          LG    3,2400(0,3) ; offset of rk_client_id in rd_kafka_s
000035E6 E55C 3000 FFFF          00000000   5401          CHSI  0(3),-1
000035EC 4770 C0A8               00003630   5402          BNE   @L657
000035F0 A738 0000               00000000   5403          LHI   3,0         ; 0
000035F4 47F0 C0B8               00003640   5404          B     @L658
000035F8                                    5405          DS    0D
000035F8 000000C8                           5406 @FRAMESIZE_1504 DC F'200'
000035FC 00000000
00003600 0000000000003400                   5407 @lit_1504_145 DC AD(rd_kafka_buf_new0)
00003608 0000000000000360                   5408 @lit_1504_146 DC AD(rd_atomic32_add)
00003610 0000000000002958                   5409 @lit_1504_147 DC AD(rd_kafka_buf_write_i32)
00003618 0000000000002828                   5410 @lit_1504_148 DC AD(rd_kafka_buf_write_i16)
00003620 0000000000002BE8                   5411 @lit_1504_151 DC AD(rd_kafka_buf_write_kstr)
00003628 0000000000002700                   5412 @lit_1504_152 DC AD(rd_kafka_buf_write_i8)
00003630                                    5413 @L657    DS    0H
00003630 E330 2FD0 0004          00000FD0   5414          LG    3,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00003636 E330 3960 0004          00000960   5415          LG    3,2400(0,3) ; offset of rk_client_id in rd_kafka_s
0000363C 5830 3000               00000000   5416          L     3,0(0,3)
00003640                                    5417 @L658    DS    0H
00003640 A73A 0002               00000002   5418          AHI   3,2
00003644 A73A 000C               0000000C   5419          AHI   3,12
                                            5420 * ***
                                            5421 * ***
                                            5422 * ***
                                            5423 * ***                   (is_flexver ? 1 + 1 : 0);
00003648 9500 4027      00000027 00000000   5424          CLI   39(4),0
0000364C 4780 C0D0               00003658   5425          BE    @L659
00003650 A758 0002               00000002   5426          LHI   5,2         ; 2
00003654 47F0 C0D4               0000365C   5427          B     @L660
00003658                                    5428 @L659    DS    0H
00003658 A758 0000               00000000   5429          LHI   5,0         ; 0
0000365C                                    5430 @L660    DS    0H
0000365C 1A35                               5431          AR    3,5
0000365E B914 0033                          5432          LGFR  3,3
00003662 B90A 0013                          5433          ALGR  1,3
                                            5434 * ***           segcnt += 1;
                                                                                                                           Page  111 
  Active Usings: @REGION_1504_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003666 A7FA 0001               00000001   5435          AHI   15,1
                                            5436 * ***
                                            5437 * ***           rkbuf = rd_kafka_buf_new0(segcnt, size, 0);
0000366A B914 00FF                          5438          LGFR  15,15
0000366E E3F0 D0B0 0024          000000B0   5439          STG   15,176(0,13)
00003674 E310 D0B8 0024          000000B8   5440          STG   1,184(0,13)
0000367A D707 D0C0 D0C0 000000C0 000000C0   5441          XC    192(8,13),192(13)
00003680 4110 D0B0               000000B0   5442          LA    1,176(0,13)
00003684 E3F0 C078 0004          00003600   5443          LG    15,@lit_1504_145 ; rd_kafka_buf_new0
0000368A                                    5444 @@gen_label248 DS    0H
0000368A 05EF                               5445          BALR  14,15
0000368C                                    5446 @@gen_label249 DS    0H
0000368C B904 003F                          5447          LGR   3,15
                                            5448 * ***
                                            5449 * ***           rkbuf->rkbuf_rkb = rkb;
00003690 E320 3100 0024          00000100   5450          STG   2,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                            5451 * ***           rd_atomic32_add(&(rkb)->rkb_refcnt, 1);
00003696 41F0 2FA0               00000FA0   5452          LA    15,4000(0,2)
0000369A E3F0 D0B0 0024          000000B0   5453          STG   15,176(0,13)
000036A0 E548 D0B8 0001          000000B8   5454          MVGHI 184(13),1
000036A6 4110 D0B0               000000B0   5455          LA    1,176(0,13)
000036AA E3F0 C080 0004          00003608   5456          LG    15,@lit_1504_146 ; rd_atomic32_add
000036B0                                    5457 @@gen_label250 DS    0H
000036B0 05EF                               5458          BALR  14,15
000036B2                                    5459 @@gen_label251 DS    0H
                                            5460 * ***
                                            5461 * ***           rkbuf->rkbuf_rel_timeout = rkb->rkb_rk->rk_conf.socket\
                                            5462 * _timeout_ms;
000036B2 E3F0 2FD0 0004          00000FD0   5463          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
000036B8 58F0 F32C               0000032C   5464          L     15,812(0,15) ; offset of socket_timeout_ms in rd_kafka_c*
                                                                onf_s
000036BC 50F0 3170               00000170   5465          ST    15,368(0,3) ; offset of rkbuf_rel_timeout in rd_kafka_bu*
                                                                f_s
                                            5466 * ***           rkbuf->rkbuf_max_retries = 2;
000036C0 E54C 3140 0002          00000140   5467          MVHI  320(3),2    ; offset of rkbuf_max_retries in rd_kafka_bu*
                                                                f_s
                                            5468 * ***
                                            5469 * ***           rkbuf->rkbuf_reqhdr.ApiKey = ApiKey;
000036C6 D201 30B8 400E 000000B8 0000000E   5470          MVC   184(2,3),14(4)
                                            5471 * ***
                                            5472 * ***
                                            5473 * ***
                                            5474 * ***           rd_kafka_buf_write_i32(rkbuf, 0);
000036CC E330 D0B0 0024          000000B0   5475          STG   3,176(0,13)
000036D2 D707 D0B8 D0B8 000000B8 000000B8   5476          XC    184(8,13),184(13)
000036D8 4110 D0B0               000000B0   5477          LA    1,176(0,13)
000036DC E350 C088 0004          00003610   5478          LG    5,@lit_1504_147 ; rd_kafka_buf_write_i32
000036E2 B904 00F5                          5479          LGR   15,5
000036E6                                    5480 @@gen_label252 DS    0H
000036E6 05EF                               5481          BALR  14,15
000036E8                                    5482 @@gen_label253 DS    0H
                                            5483 * ***
                                                                                                                           Page  112 
  Active Usings: @REGION_1504_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5484 * ***           rd_kafka_buf_write_i16(rkbuf, rkbuf->rkbuf_reqhdr.ApiK\
                                            5485 * ey);
000036E8 E330 D0B0 0024          000000B0   5486          STG   3,176(0,13)
000036EE E3F0 30B8 0015          000000B8   5487          LGH   15,184(0,3)
000036F4 E3F0 D0B8 0024          000000B8   5488          STG   15,184(0,13)
000036FA 4110 D0B0               000000B0   5489          LA    1,176(0,13)
000036FE E360 C090 0004          00003618   5490          LG    6,@lit_1504_148 ; rd_kafka_buf_write_i16
00003704 B904 00F6                          5491          LGR   15,6
00003708                                    5492 @@gen_label254 DS    0H
00003708 05EF                               5493          BALR  14,15
0000370A                                    5494 @@gen_label255 DS    0H
                                            5495 * ***
                                            5496 * ***           rd_kafka_buf_write_i16(rkbuf, 0);
0000370A E330 D0B0 0024          000000B0   5497          STG   3,176(0,13)
00003710 D707 D0B8 D0B8 000000B8 000000B8   5498          XC    184(8,13),184(13)
00003716 4110 D0B0               000000B0   5499          LA    1,176(0,13)
0000371A B904 00F6                          5500          LGR   15,6
0000371E                                    5501 @@gen_label256 DS    0H
0000371E 05EF                               5502          BALR  14,15
00003720                                    5503 @@gen_label257 DS    0H
                                            5504 * ***
                                            5505 * ***           rd_kafka_buf_write_i32(rkbuf, 0);
00003720 E330 D0B0 0024          000000B0   5506          STG   3,176(0,13)
00003726 D707 D0B8 D0B8 000000B8 000000B8   5507          XC    184(8,13),184(13)
0000372C 4110 D0B0               000000B0   5508          LA    1,176(0,13)
00003730 B904 00F5                          5509          LGR   15,5
00003734                                    5510 @@gen_label258 DS    0H
00003734 05EF                               5511          BALR  14,15
00003736                                    5512 @@gen_label259 DS    0H
                                            5513 * ***
                                            5514 * ***
                                            5515 * ***           rd_kafka_buf_write_kstr(rkbuf, rkb->rkb_rk->rk_client_\
                                            5516 * id);
00003736 E330 D0B0 0024          000000B0   5517          STG   3,176(0,13)
0000373C E3F0 2FD0 0004          00000FD0   5518          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00003742 E3F0 F960 0004          00000960   5519          LG    15,2400(0,15)
00003748 E3F0 D0B8 0024          000000B8   5520          STG   15,184(0,13)
0000374E 4110 D0B0               000000B0   5521          LA    1,176(0,13)
00003752 E3F0 C098 0004          00003620   5522          LG    15,@lit_1504_151 ; rd_kafka_buf_write_kstr
00003758                                    5523 @@gen_label260 DS    0H
00003758 05EF                               5524          BALR  14,15
0000375A                                    5525 @@gen_label261 DS    0H
                                            5526 * ***
                                            5527 * ***           if (is_flexver) {
0000375A 9500 4027      00000027 00000000   5528          CLI   39(4),0
0000375E 4780 C1FE               00003786   5529          BE    @L661
                                            5530 * ***
                                            5531 * ***
                                            5532 * ***                   rkbuf->rkbuf_flags |= 0x40;
00003762 58F0 3020               00000020   5533          L     15,32(0,3)
00003766 A5FB 0040               00000040   5534          OILL  15,64
0000376A 50F0 3020               00000020   5535          ST    15,32(0,3)
                                                                                                                           Page  113 
  Active Usings: @REGION_1504_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5536 * ***
                                            5537 * ***
                                            5538 * ***                   rd_kafka_buf_write_i8(rkbuf, 0);
0000376E E330 D0B0 0024          000000B0   5539          STG   3,176(0,13)
00003774 D707 D0B8 D0B8 000000B8 000000B8   5540          XC    184(8,13),184(13)
0000377A 4110 D0B0               000000B0   5541          LA    1,176(0,13)
0000377E E3F0 C0A0 0004          00003628   5542          LG    15,@lit_1504_152 ; rd_kafka_buf_write_i8
00003784                                    5543 @@gen_label263 DS    0H
00003784 05EF                               5544          BALR  14,15
00003786                                    5545 @@gen_label264 DS    0H
                                            5546 * ***           }
00003786                                    5547 @L661    DS    0H
                                            5548 * ***
                                            5549 * ***           return rkbuf;
00003786 B904 00F3                          5550          LGR   15,3
                                            5551 * ***   }
                                            5552 * * **** Start of Epilogue
                                            5553          DCCEPIL
0000378A                                    5554+         ds 0h                                                          01-DCCEP
                                            5555+* Epilog
0000378A D707 D088 D088 00000088 00000088   5556+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003790 E3D0 D080 0004          00000080   5557+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003796 E3C0 D090 0004          00000090   5558+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000379C E3B0 C018 0004          00000018   5559+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000037A2 E3C0 B010 0021          00000010   5560+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000037A8 E3E0 D008 0004          00000008   5561+         lg  14,8(0,13)          load up return address                 01-DCCEP
000037AE EB1C D020 0004          00000020   5562+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000037B4 078E                               5563+         bcr 8,14                if same dsab, just return              01-DCCEP
000037B6 E3F0 D010 0024          00000010   5564+         stg 15,16(0,13)         save return code                       01-DCCEP
000037BC E300 D018 0024          00000018   5565+         stg 0,24(0,13)          save more return code                  01-DCCEP
000037C2 E3F0 D090 0004          00000090   5566+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000037C8 E3F0 F018 0004          00000018   5567+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000037CE 47F0 F040               00000040   5568+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5569+* End of Epilog
                                            5570 * * **** End of Epilogue
                                            5571          DROP  12
                                            5572 *
                                            5573 *   DSECT for automatic variables in "rd_kafka_buf_new_request0"
                                            5574 *      (FUNCTION #1504)
                                            5575 *
00000000                00000000 000000A8   5576 @AUTO#rd_kafka_buf_new_request0 DSECT
00000000                                    5577          DS    XL168
                                            5578 *
000037D2                00000000 000054D2   5579 @CODE    CSECT
                                            5580 *
                                            5581 *
                                            5582 *
                                            5583 * ....... start of rd_kafka_buf_new_shadow
                                            5584 rd_kafka_buf_new_shadow ALIAS X'99846D92818692816D82A4866D9585A66DA2888*
                                                                18496A6'
000037D2                                    5585 @LNAME1505 DS  0H
000037D2 00000017                           5586          DC    X'00000017'
                                                                                                                           Page  114 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000037D6 99846D9281869281                   5587          DC    C'rd_kafka_buf_new_shadow'
000037ED 00                                 5588          DC    X'00'
                                            5589 rd_kafka_buf_new_shadow DCCPRLG CINDEX=1505,BASER=12,FRAME=216,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1505
                                            5590          macro
                                            5591          dccextrn &m
                                            5592          gblc    &$dccext(1000)
                                            5593          gbla    &$dccexti
                                            5594          lcla    &i
                                            5595 &$dccext(&$dccexti+1) setc    '&m'
                                            5596 &i       seta    1
                                            5597 .loop    aif    (&i gt &$dccexti).around
                                            5598          aif    ('&$dccext(&i)' eq '&m').getout
                                            5599 &i       seta    &i+1
                                            5600          ago     .loop
                                            5601 .around  anop
                                            5602 &$dccexti seta &$dccexti+1
                                            5603          extrn  &m
                                            5604 .getout  anop
                                            5605          mend
000037F0                                    5606+$eye0119    ds    0d                                                    02-DCCCA
000037F0 C4C3C3                             5607+         dc cl3'DCC'                                                    02-DCCCA
000037F3 01                                 5608+         dc xl1'01' format one                                          02-DCCCA
000037F4 00000000                           5609+         dc a(0)                                                        02-DCCCA
000037F8 0000000000003862                   5610+         dc ad(@PER_1505)                                               02-DCCCA
00003800 00000000000000D8                   5611+         dc ad(216)                                                     02-DCCCA
00003808 0000000000000000                   5612+         dc ad(0)                                                       02-DCCCA
00003810 0000000000001000                   5613+         dc ad(4096)                                                    02-DCCCA
00003818 20                                 5614+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003819 03                                 5615+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000381A 03                                 5616+         dc al1(3)                                                      02-DCCCA
0000381B 08                                 5617+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000381C 00                                 5618+         dc bl.8'00000000'                                              02-DCCCA
0000381D 000000                             5619+         dc al3(0)                                                      02-DCCCA
00003820 00000000000037D2                   5620+         dc ad(@LNAME1505)                                              02-DCCCA
00003828                                    5621+         ds 0d                                                          02-DCCCA
00003828 00000000000037F0                   5622+         dc ad($eye0119)                                                02-DCCCA
00003830 0000000000000000                   5623+         dc ad(0)                                                       02-DCCCA
00003838                                    5624+         ds    0d                                                       01-DCCPR
                                            5625+         entry rd_kafka_buf_new_shadow                                  01-DCCPR
00003838                                    5626+rd_kafka_buf_new_shadow ds 0d                                           01-DCCPR
00003838                                    5627+@REGION_1505_1 ds 0h                                                    01-DCCPR
00003838 EBEC D008 0024          00000008   5628+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000383E E3E0 D088 0004          00000088   5629+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003844 E3C0 D090 0004          00000090   5630+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000384A B904 002E                          5631+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000384E E3B0 C018 0004          00000018   5632+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003854 A7EB 00D8               000000D8   5633+         aghi  14,216              increase by frame size               01-DCCPR
00003858 E3E0 C020 0021          00000020   5634+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000385E 4720 B020               00000020   5635+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003862                                    5636+@PER_1505 ds   0h                                                       01-DCCPR
00003862 EBDE 2080 0024          00000080   5637+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  115 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003868 E3C0 2090 0024          00000090   5638+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000386E B904 00D2                          5639+         lgr   13,2                set real frame pointer               01-DCCPR
00003872 B904 00CF                          5640+         lgr   12,15               set base reg                         01-DCCPR
                        00003838            5641+         using @REGION_1505_1,12                                        01-DCCPR
00003876 B904 0031                          5642          LGR   3,1         ; ptr to parm area
                                            5643 * ******* End of Prologue
                                            5644 * *
                                            5645 * ***      rd_kafka_buf_t *rkbuf;
                                            5646 * ***
                                            5647 * ***      rkbuf = rd_calloc(1, sizeof(*rkbuf));
0000387A E548 D0B0 0001          000000B0   5648          MVGHI 176(13),1
00003880 E548 D0B8 01F0          000000B8   5649          MVGHI 184(13),496
00003886 4110 D0B0               000000B0   5650          LA    1,176(0,13)
0000388A E3F0 C168 0004          000039A0   5651          LG    15,@lit_1505_154 ; rd_calloc
00003890                                    5652 @@gen_label265 DS    0H
00003890 05EF                               5653          BALR  14,15
00003892                                    5654 @@gen_label266 DS    0H
00003892 B904 002F                          5655          LGR   2,15
                                            5656 * ***
                                            5657 * ***           rkbuf->rkbuf_reqhdr.ApiKey = -1;
00003896 E544 20B8 FFFF          000000B8   5658          MVHHI 184(2),-1   ; offset of ApiKey in rd_kafkap_reqhdr
                                            5659 * ***
                                            5660 * ***           rd_buf_init(&rkbuf->rkbuf_buf, 1, 0);
0000389C 41F0 2028               00000028   5661          LA    15,40(0,2)
000038A0 E3F0 D0B0 0024          000000B0   5662          STG   15,176(0,13)
000038A6 E548 D0B8 0001          000000B8   5663          MVGHI 184(13),1
000038AC D707 D0C0 D0C0 000000C0 000000C0   5664          XC    192(8,13),192(13)
000038B2 4110 D0B0               000000B0   5665          LA    1,176(0,13)
000038B6 E3F0 C170 0004          000039A8   5666          LG    15,@lit_1505_155 ; rd_buf_init
000038BC                                    5667 @@gen_label267 DS    0H
000038BC 05EF                               5668          BALR  14,15
000038BE                                    5669 @@gen_label268 DS    0H
                                            5670 * ***           rd_buf_push0(&rkbuf->rkbuf_buf,ptr,size,free_cb,0 );
000038BE 41F0 2028               00000028   5671          LA    15,40(0,2)
000038C2 E3F0 D0B0 0024          000000B0   5672          STG   15,176(0,13)
000038C8 E3F0 3000 0004          00000000   5673          LG    15,0(0,3)   ; ptr
000038CE E3F0 D0B8 0024          000000B8   5674          STG   15,184(0,13)
000038D4 E3F0 3008 0004          00000008   5675          LG    15,8(0,3)   ; size
000038DA E3F0 D0C0 0024          000000C0   5676          STG   15,192(0,13)
000038E0 E3F0 3010 0004          00000010   5677          LG    15,16(0,3)  ; free_cb
000038E6 E3F0 D0C8 0024          000000C8   5678          STG   15,200(0,13)
000038EC D707 D0D0 D0D0 000000D0 000000D0   5679          XC    208(8,13),208(13)
000038F2 4110 D0B0               000000B0   5680          LA    1,176(0,13)
000038F6 E3F0 C178 0004          000039B0   5681          LG    15,@lit_1505_156 ; rd_buf_push0
000038FC                                    5682 @@gen_label269 DS    0H
000038FC 05EF                               5683          BALR  14,15
000038FE                                    5684 @@gen_label270 DS    0H
                                            5685 * ***
                                            5686 * ***           rkbuf->rkbuf_totlen  = size;
000038FE E3F0 3008 0004          00000008   5687          LG    15,8(0,3)   ; size
00003904 E3F0 20A8 0024          000000A8   5688          STG   15,168(0,2) ; offset of rkbuf_totlen in rd_kafka_buf_s
                                            5689 * ***
                                                                                                                           Page  116 
  Active Usings: @REGION_1505_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5690 * ***
                                            5691 * ***           rd_slice_init_full(&rkbuf->rkbuf_reader, &rkbuf->rkbuf\
                                            5692 * _buf);
0000390A 41F0 2078               00000078   5693          LA    15,120(0,2)
0000390E E3F0 D0B0 0024          000000B0   5694          STG   15,176(0,13)
00003914 41F0 2028               00000028   5695          LA    15,40(0,2)
00003918 E3F0 D0B8 0024          000000B8   5696          STG   15,184(0,13)
0000391E 4110 D0B0               000000B0   5697          LA    1,176(0,13)
00003922 E3F0 C180 0004          000039B8   5698          LG    15,@lit_1505_157 ; rd_slice_init_full
00003928                                    5699 @@gen_label271 DS    0H
00003928 05EF                               5700          BALR  14,15
0000392A                                    5701 @@gen_label272 DS    0H
                                            5702 * ***
                                            5703 * ***           rd_atomic32_init(&rkbuf->rkbuf_refcnt, 1);
0000392A 41F0 2108               00000108   5704          LA    15,264(0,2)
0000392E E3F0 D0B0 0024          000000B0   5705          STG   15,176(0,13)
00003934 E548 D0B8 0001          000000B8   5706          MVGHI 184(13),1
0000393A 4110 D0B0               000000B0   5707          LA    1,176(0,13)
0000393E E3F0 C188 0004          000039C0   5708          LG    15,@lit_1505_158 ; rd_atomic32_init
00003944                                    5709 @@gen_label273 DS    0H
00003944 05EF                               5710          BALR  14,15
00003946                                    5711 @@gen_label274 DS    0H
                                            5712 * ***
                                            5713 * ***      return rkbuf;
00003946 B904 00F2                          5714          LGR   15,2
                                            5715 * ***   }
                                            5716 * * **** Start of Epilogue
                                            5717          DCCEPIL
0000394A                                    5718+         ds 0h                                                          01-DCCEP
                                            5719+* Epilog
0000394A D707 D088 D088 00000088 00000088   5720+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003950 E3D0 D080 0004          00000080   5721+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003956 E3C0 D090 0004          00000090   5722+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000395C E3B0 C018 0004          00000018   5723+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003962 E3C0 B010 0021          00000010   5724+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003968 E3E0 D008 0004          00000008   5725+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000396E EB1C D020 0004          00000020   5726+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003974 078E                               5727+         bcr 8,14                if same dsab, just return              01-DCCEP
00003976 E3F0 D010 0024          00000010   5728+         stg 15,16(0,13)         save return code                       01-DCCEP
0000397C E300 D018 0024          00000018   5729+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003982 E3F0 D090 0004          00000090   5730+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003988 E3F0 F018 0004          00000018   5731+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000398E 47F0 F040               00000040   5732+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5733+* End of Epilog
                                            5734 * * **** End of Epilogue
00003998                                    5735          DS    0D
00003998 000000D8                           5736 @FRAMESIZE_1505 DC F'216'
0000399C 00000000
000039A0 0000000000000720                   5737 @lit_1505_154 DC AD(rd_calloc)
000039A8 0000000000000000                   5738 @lit_1505_155 DC AD(rd_buf_init)
000039B0 0000000000000000                   5739 @lit_1505_156 DC AD(rd_buf_push0)
000039B8 0000000000000000                   5740 @lit_1505_157 DC AD(rd_slice_init_full)
                                                                                                                           Page  117 
  Active Usings: @REGION_1505_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000039C0 0000000000000240                   5741 @lit_1505_158 DC AD(rd_atomic32_init)
                                            5742          DROP  12
                                            5743 *
                                            5744 *   DSECT for automatic variables in "rd_kafka_buf_new_shadow"
                                            5745 *      (FUNCTION #1505)
                                            5746 *
00000000                00000000 000000A8   5747 @AUTO#rd_kafka_buf_new_shadow DSECT
00000000                                    5748          DS    XL168
                                            5749 *
000039C8                00000000 000054D2   5750 @CODE    CSECT
                                            5751 *
                                            5752 *
                                            5753 *
                                            5754 * ....... start of rd_kafka_bufq_enq
                                            5755 rd_kafka_bufq_enq ALIAS X'99846D92818692816D82A486986D859598'
000039C8                                    5756 @LNAME1506 DS  0H
000039C8 00000011                           5757          DC    X'00000011'
000039CC 99846D9281869281                   5758          DC    C'rd_kafka_bufq_enq'
000039DD 00                                 5759          DC    X'00'
                                            5760 rd_kafka_bufq_enq DCCPRLG CINDEX=1506,BASER=12,FRAME=184,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1506
                                            5761          macro
                                            5762          dccextrn &m
                                            5763          gblc    &$dccext(1000)
                                            5764          gbla    &$dccexti
                                            5765          lcla    &i
                                            5766 &$dccext(&$dccexti+1) setc    '&m'
                                            5767 &i       seta    1
                                            5768 .loop    aif    (&i gt &$dccexti).around
                                            5769          aif    ('&$dccext(&i)' eq '&m').getout
                                            5770 &i       seta    &i+1
                                            5771          ago     .loop
                                            5772 .around  anop
                                            5773 &$dccexti seta &$dccexti+1
                                            5774          extrn  &m
                                            5775 .getout  anop
                                            5776          mend
000039E0                                    5777+$eye0122    ds    0d                                                    02-DCCCA
000039E0 C4C3C3                             5778+         dc cl3'DCC'                                                    02-DCCCA
000039E3 01                                 5779+         dc xl1'01' format one                                          02-DCCCA
000039E4 00000000                           5780+         dc a(0)                                                        02-DCCCA
000039E8 0000000000003A52                   5781+         dc ad(@PER_1506)                                               02-DCCCA
000039F0 00000000000000B8                   5782+         dc ad(184)                                                     02-DCCCA
000039F8 0000000000000000                   5783+         dc ad(0)                                                       02-DCCCA
00003A00 0000000000001000                   5784+         dc ad(4096)                                                    02-DCCCA
00003A08 20                                 5785+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A09 03                                 5786+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A0A 03                                 5787+         dc al1(3)                                                      02-DCCCA
00003A0B 08                                 5788+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A0C 00                                 5789+         dc bl.8'00000000'                                              02-DCCCA
00003A0D 000000                             5790+         dc al3(0)                                                      02-DCCCA
00003A10 00000000000039C8                   5791+         dc ad(@LNAME1506)                                              02-DCCCA
                                                                                                                           Page  118 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003A18                                    5792+         ds 0d                                                          02-DCCCA
00003A18 00000000000039E0                   5793+         dc ad($eye0122)                                                02-DCCCA
00003A20 0000000000000000                   5794+         dc ad(0)                                                       02-DCCCA
00003A28                                    5795+         ds    0d                                                       01-DCCPR
                                            5796+         entry rd_kafka_bufq_enq                                        01-DCCPR
00003A28                                    5797+rd_kafka_bufq_enq ds 0d                                                 01-DCCPR
00003A28                                    5798+@REGION_1506_1 ds 0h                                                    01-DCCPR
00003A28 EBEC D008 0024          00000008   5799+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003A2E E3E0 D088 0004          00000088   5800+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003A34 E3C0 D090 0004          00000090   5801+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003A3A B904 002E                          5802+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003A3E E3B0 C018 0004          00000018   5803+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003A44 A7EB 00B8               000000B8   5804+         aghi  14,184              increase by frame size               01-DCCPR
00003A48 E3E0 C020 0021          00000020   5805+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003A4E 4720 B020               00000020   5806+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003A52                                    5807+@PER_1506 ds   0h                                                       01-DCCPR
00003A52 EBDE 2080 0024          00000080   5808+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003A58 E3C0 2090 0024          00000090   5809+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003A5E B904 00D2                          5810+         lgr   13,2                set real frame pointer               01-DCCPR
00003A62 B904 00CF                          5811+         lgr   12,15               set base reg                         01-DCCPR
                        00003A28            5812+         using @REGION_1506_1,12                                        01-DCCPR
                                            5813 * ******* End of Prologue
                                            5814 * *
                                            5815 * ***      do {  (rkbuf)->rkbuf_link .tqe_next = (((void *)0)); (rkbuf\
                                            5816 * )->rkbuf_link .tqe_prev = (&rkbufq->rkbq_bufs)->tqh_last; *(&rkbufq-\
                                            5817 * >rkbq_bufs)->tqh_last = (rkbuf); (&rkbufq->rkbq_bufs)->tqh_last = &(\
                                            5818 * rkbuf)->rkbuf_link .tqe_next; } while ( 0);
00003A66 EB23 1000 0004          00000000   5819          LMG   2,3,0(1)    ; rkbufq
00003A6C                                    5820 @L662    DS    0H
00003A6C A7F9 0000               00000000   5821          LGHI  15,0        ; 0
00003A70 E3F0 3000 0024          00000000   5822          STG   15,0(0,3)   ; rkbuf
00003A76 E3F0 2008 0004          00000008   5823          LG    15,8(0,2)   ; offset of tqh_last in 0000091
00003A7C E3F0 3008 0024          00000008   5824          STG   15,8(0,3)   ; offset of tqe_prev in 0000086
00003A82 E3F0 2008 0004          00000008   5825          LG    15,8(0,2)   ; offset of tqh_last in 0000091
00003A88 E330 F000 0024          00000000   5826          STG   3,0(0,15)
00003A8E E330 2008 0024          00000008   5827          STG   3,8(0,2)    ; offset of tqh_last in 0000091
                                            5828 * ***           rd_atomic32_add(&rkbufq->rkbq_cnt, 1);
00003A94 41F0 2010               00000010   5829          LA    15,16(0,2)
00003A98 E3F0 D0A8 0024          000000A8   5830          STG   15,168(0,13)
00003A9E E548 D0B0 0001          000000B0   5831          MVGHI 176(13),1
00003AA4 4110 D0A8               000000A8   5832          LA    1,168(0,13)
00003AA8 E340 C120 0004          00003B48   5833          LG    4,@lit_1506_161 ; rd_atomic32_add
00003AAE B904 00F4                          5834          LGR   15,4
00003AB2                                    5835 @@gen_label275 DS    0H
00003AB2 05EF                               5836          BALR  14,15
00003AB4                                    5837 @@gen_label276 DS    0H
                                            5838 * ***           if (rkbuf->rkbuf_reqhdr.ApiKey == 0)
00003AB4 48F0 30B8               000000B8   5839          LH    15,184(0,3)
00003AB8 12FF                               5840          LTR   15,15
00003ABA 4770 C0CA               00003AF2   5841          BNE   @ret_lab_1506
                                            5842 * ***                   rd_atomic32_add(&rkbufq->rkbq_msg_cnt,
                                            5843 * ***                                   rd_kafka_msgq_len(&rkbuf->rkbu\
                                                                                                                           Page  119 
  Active Usings: @REGION_1506_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5844 * f_u.Produce.batch .msgq));
00003ABE 41F0 3198               00000198   5845          LA    15,408(0,3)
00003AC2 E3F0 D0A8 0024          000000A8   5846          STG   15,168(0,13)
00003AC8 4110 D0A8               000000A8   5847          LA    1,168(0,13)
00003ACC E3F0 C128 0004          00003B50   5848          LG    15,@lit_1506_162 ; rd_kafka_msgq_len
00003AD2                                    5849 @@gen_label278 DS    0H
00003AD2 05EF                               5850          BALR  14,15
00003AD4                                    5851 @@gen_label279 DS    0H
00003AD4 4110 2040               00000040   5852          LA    1,64(0,2)
00003AD8 E310 D0A8 0024          000000A8   5853          STG   1,168(0,13)
00003ADE B914 00FF                          5854          LGFR  15,15
00003AE2 E3F0 D0B0 0024          000000B0   5855          STG   15,176(0,13)
00003AE8 4110 D0A8               000000A8   5856          LA    1,168(0,13)
00003AEC B904 00F4                          5857          LGR   15,4
00003AF0                                    5858 @@gen_label280 DS    0H
00003AF0 05EF                               5859          BALR  14,15
00003AF2                                    5860 @@gen_label281 DS    0H
00003AF2                                    5861 @L665    DS    0H
                                            5862 * ***   }
00003AF2                                    5863 @ret_lab_1506 DS 0H
                                            5864 * * **** Start of Epilogue
                                            5865          DCCEPIL
00003AF2                                    5866+         ds 0h                                                          01-DCCEP
                                            5867+* Epilog
00003AF2 D707 D088 D088 00000088 00000088   5868+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003AF8 E3D0 D080 0004          00000080   5869+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003AFE E3C0 D090 0004          00000090   5870+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003B04 E3B0 C018 0004          00000018   5871+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003B0A E3C0 B010 0021          00000010   5872+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003B10 E3E0 D008 0004          00000008   5873+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003B16 EB1C D020 0004          00000020   5874+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003B1C 078E                               5875+         bcr 8,14                if same dsab, just return              01-DCCEP
00003B1E E3F0 D010 0024          00000010   5876+         stg 15,16(0,13)         save return code                       01-DCCEP
00003B24 E300 D018 0024          00000018   5877+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003B2A E3F0 D090 0004          00000090   5878+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003B30 E3F0 F018 0004          00000018   5879+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003B36 47F0 F040               00000040   5880+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5881+* End of Epilog
                                            5882 * * **** End of Epilogue
00003B40                                    5883          DS    0D
00003B40 000000B8                           5884 @FRAMESIZE_1506 DC F'184'
00003B44 00000000
00003B48 0000000000000360                   5885 @lit_1506_161 DC AD(rd_atomic32_add)
00003B50 0000000000000F48                   5886 @lit_1506_162 DC AD(rd_kafka_msgq_len)
                                            5887          DROP  12
                                            5888 *
                                            5889 *   DSECT for automatic variables in "rd_kafka_bufq_enq"
                                            5890 *      (FUNCTION #1506)
                                            5891 *
00000000                00000000 000000A8   5892 @AUTO#rd_kafka_bufq_enq DSECT
00000000                                    5893          DS    XL168
                                            5894 *
                                                                                                                           Page  120 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003B58                00000000 000054D2   5895 @CODE    CSECT
                                            5896 *
                                            5897 *
                                            5898 *
                                            5899 * ....... start of rd_kafka_bufq_deq
                                            5900 rd_kafka_bufq_deq ALIAS X'99846D92818692816D82A486986D848598'
00003B58                                    5901 @LNAME1507 DS  0H
00003B58 00000011                           5902          DC    X'00000011'
00003B5C 99846D9281869281                   5903          DC    C'rd_kafka_bufq_deq'
00003B6D 00                                 5904          DC    X'00'
                                            5905 rd_kafka_bufq_deq DCCPRLG CINDEX=1507,BASER=12,FRAME=208,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1507
                                            5906          macro
                                            5907          dccextrn &m
                                            5908          gblc    &$dccext(1000)
                                            5909          gbla    &$dccexti
                                            5910          lcla    &i
                                            5911 &$dccext(&$dccexti+1) setc    '&m'
                                            5912 &i       seta    1
                                            5913 .loop    aif    (&i gt &$dccexti).around
                                            5914          aif    ('&$dccext(&i)' eq '&m').getout
                                            5915 &i       seta    &i+1
                                            5916          ago     .loop
                                            5917 .around  anop
                                            5918 &$dccexti seta &$dccexti+1
                                            5919          extrn  &m
                                            5920 .getout  anop
                                            5921          mend
00003B70                                    5922+$eye0125    ds    0d                                                    02-DCCCA
00003B70 C4C3C3                             5923+         dc cl3'DCC'                                                    02-DCCCA
00003B73 01                                 5924+         dc xl1'01' format one                                          02-DCCCA
00003B74 00000000                           5925+         dc a(0)                                                        02-DCCCA
00003B78 0000000000003BE2                   5926+         dc ad(@PER_1507)                                               02-DCCCA
00003B80 00000000000000D0                   5927+         dc ad(208)                                                     02-DCCCA
00003B88 0000000000000000                   5928+         dc ad(0)                                                       02-DCCCA
00003B90 0000000000001000                   5929+         dc ad(4096)                                                    02-DCCCA
00003B98 20                                 5930+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003B99 03                                 5931+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003B9A 03                                 5932+         dc al1(3)                                                      02-DCCCA
00003B9B 08                                 5933+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003B9C 00                                 5934+         dc bl.8'00000000'                                              02-DCCCA
00003B9D 000000                             5935+         dc al3(0)                                                      02-DCCCA
00003BA0 0000000000003B58                   5936+         dc ad(@LNAME1507)                                              02-DCCCA
00003BA8                                    5937+         ds 0d                                                          02-DCCCA
00003BA8 0000000000003B70                   5938+         dc ad($eye0125)                                                02-DCCCA
00003BB0 0000000000000000                   5939+         dc ad(0)                                                       02-DCCCA
00003BB8                                    5940+         ds    0d                                                       01-DCCPR
                                            5941+         entry rd_kafka_bufq_deq                                        01-DCCPR
00003BB8                                    5942+rd_kafka_bufq_deq ds 0d                                                 01-DCCPR
00003BB8                                    5943+@REGION_1507_1 ds 0h                                                    01-DCCPR
00003BB8 EBEC D008 0024          00000008   5944+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003BBE E3E0 D088 0004          00000088   5945+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003BC4 E3C0 D090 0004          00000090   5946+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003BCA B904 002E                          5947+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003BCE E3B0 C018 0004          00000018   5948+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003BD4 A7EB 00D0               000000D0   5949+         aghi  14,208              increase by frame size               01-DCCPR
00003BD8 E3E0 C020 0021          00000020   5950+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003BDE 4720 B020               00000020   5951+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003BE2                                    5952+@PER_1507 ds   0h                                                       01-DCCPR
00003BE2 EBDE 2080 0024          00000080   5953+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003BE8 E3C0 2090 0024          00000090   5954+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003BEE B904 00D2                          5955+         lgr   13,2                set real frame pointer               01-DCCPR
00003BF2 B904 00CF                          5956+         lgr   12,15               set base reg                         01-DCCPR
                        00003BB8            5957+         using @REGION_1507_1,12                                        01-DCCPR
                                            5958 * ******* End of Prologue
                                            5959 * *
                                            5960 * ***      do {   if (((rkbuf)->rkbuf_link .tqe_next) != (((void *)0))\
                                            5961 * ) (rkbuf)->rkbuf_link .tqe_next->rkbuf_link .tqe_prev = (rkbuf)->rkb\
                                            5962 * uf_link .tqe_prev; else (&rkbufq->rkbq_bufs)->tqh_last = (rkbuf)->rk\
                                            5963 * buf_link .tqe_prev; *(rkbuf)->rkbuf_link .tqe_prev = (rkbuf)->rkbuf_\
                                            5964 * link .tqe_next; ; } while ( 0);
00003BF6 EB23 1000 0004          00000000   5965          LMG   2,3,0(1)    ; rkbufq
00003BFC                                    5966 @L666    DS    0H
00003BFC E3F0 3000 0002          00000000   5967          LTG   15,0(0,3)   ; rkbuf
00003C02 4780 C0A0               00003C58   5968          BE    @L669
00003C06 E3F0 3000 0004          00000000   5969          LG    15,0(0,3)   ; rkbuf
00003C0C E310 3008 0004          00000008   5970          LG    1,8(0,3)    ; offset of tqe_prev in 0000086
00003C12 E310 F008 0024          00000008   5971          STG   1,8(0,15)   ; offset of tqe_prev in 0000086
00003C18 47F0 C0AC               00003C64   5972          B     @L670
00003C20                                    5973          DS    0D
00003C20 000000D0                           5974 @FRAMESIZE_1507 DC F'208'
00003C24 00000000
00003C28 00000000000005F0                   5975 @lit_1507_165 DC AD(rd_atomic32_get)
00003C30 0000000000000000                   5976 @lit_1507_168 DC AD(rd_kafka_crash)
00003C38 00000000000054D8                   5977 @lit_1507_167 DC AD(@DATA)
00003C40 0000000000005722                   5978 @lit_1507_166 DC AD(@strings@)
00003C48 00000000000004A8                   5979 @lit_1507_169 DC AD(rd_atomic32_sub)
00003C50 0000000000000F48                   5980 @lit_1507_170 DC AD(rd_kafka_msgq_len)
00003C58                                    5981 @L669    DS    0H
00003C58 E3F0 3008 0004          00000008   5982          LG    15,8(0,3)   ; offset of tqe_prev in 0000086
00003C5E E3F0 2008 0024          00000008   5983          STG   15,8(0,2)   ; offset of tqh_last in 0000091
00003C64                                    5984 @L670    DS    0H
00003C64 E3F0 3008 0004          00000008   5985          LG    15,8(0,3)   ; offset of tqe_prev in 0000086
00003C6A E310 3000 0004          00000000   5986          LG    1,0(0,3)    ; rkbuf
00003C70 E310 F000 0024          00000000   5987          STG   1,0(0,15)
                                            5988 * ***      do { if (((!(rd_atomic32_get(&rkbufq->rkbq_cnt) > 0)))) rd_\
                                            5989 * kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.c",216, __FU\
                                            5990 * NCTION__, (((void *)0)), "assert: " "rd_atomic32_get(&rkbufq->rkbq_c\
                                            5991 * nt) > 0"); } while (0);
00003C76                                    5992 @L671    DS    0H
00003C76 41F0 2010               00000010   5993          LA    15,16(0,2)
00003C7A E3F0 D0A8 0024          000000A8   5994          STG   15,168(0,13)
00003C80 4110 D0A8               000000A8   5995          LA    1,168(0,13)
00003C84 E3F0 C070 0004          00003C28   5996          LG    15,@lit_1507_165 ; rd_atomic32_get
                                                                                                                           Page  122 
  Active Usings: @REGION_1507_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003C8A                                    5997 @@gen_label283 DS    0H
00003C8A 05EF                               5998          BALR  14,15
00003C8C                                    5999 @@gen_label284 DS    0H
00003C8C 12FF                               6000          LTR   15,15
00003C8E 4720 C11C               00003CD4   6001          BH    @L674
00003C92 E3F0 C088 0004          00003C40   6002          LG    15,@lit_1507_166
00003C98 4110 F09C               0000009C   6003          LA    1,156(0,15)
00003C9C E310 D0A8 0024          000000A8   6004          STG   1,168(0,13)
00003CA2 E548 D0B0 00D8          000000B0   6005          MVGHI 176(13),216
00003CA8 E310 C080 0004          00003C38   6006          LG    1,@lit_1507_167
00003CAE 4110 11C2               000001C2   6007          LA    1,450(0,1)
00003CB2 E310 D0B8 0024          000000B8   6008          STG   1,184(0,13)
00003CB8 D707 D0C0 D0C0 000000C0 000000C0   6009          XC    192(8,13),192(13)
00003CBE 41F0 F0F2               000000F2   6010          LA    15,242(0,15)
00003CC2 E3F0 D0C8 0024          000000C8   6011          STG   15,200(0,13)
00003CC8 4110 D0A8               000000A8   6012          LA    1,168(0,13)
00003CCC E3F0 C078 0004          00003C30   6013          LG    15,@lit_1507_168 ; rd_kafka_crash
00003CD2                                    6014 @@gen_label286 DS    0H
00003CD2 05EF                               6015          BALR  14,15
00003CD4                                    6016 @@gen_label287 DS    0H
00003CD4                                    6017 @L674    DS    0H
                                            6018 * ***      rd_atomic32_sub(&rkbufq->rkbq_cnt, 1);
00003CD4 41F0 2010               00000010   6019          LA    15,16(0,2)
00003CD8 E3F0 D0A8 0024          000000A8   6020          STG   15,168(0,13)
00003CDE E548 D0B0 0001          000000B0   6021          MVGHI 176(13),1
00003CE4 4110 D0A8               000000A8   6022          LA    1,168(0,13)
00003CE8 E340 C090 0004          00003C48   6023          LG    4,@lit_1507_169 ; rd_atomic32_sub
00003CEE B904 00F4                          6024          LGR   15,4
00003CF2                                    6025 @@gen_label288 DS    0H
00003CF2 05EF                               6026          BALR  14,15
00003CF4                                    6027 @@gen_label289 DS    0H
                                            6028 * ***           if (rkbuf->rkbuf_reqhdr.ApiKey == 0)
00003CF4 48F0 30B8               000000B8   6029          LH    15,184(0,3)
00003CF8 12FF                               6030          LTR   15,15
00003CFA 4770 C17A               00003D32   6031          BNE   @ret_lab_1507
                                            6032 * ***                   rd_atomic32_sub(&rkbufq->rkbq_msg_cnt,
                                            6033 * ***                                   rd_kafka_msgq_len(&rkbuf->rkbu\
                                            6034 * f_u.Produce.batch .msgq));
00003CFE 41F0 3198               00000198   6035          LA    15,408(0,3)
00003D02 E3F0 D0A8 0024          000000A8   6036          STG   15,168(0,13)
00003D08 4110 D0A8               000000A8   6037          LA    1,168(0,13)
00003D0C E3F0 C098 0004          00003C50   6038          LG    15,@lit_1507_170 ; rd_kafka_msgq_len
00003D12                                    6039 @@gen_label291 DS    0H
00003D12 05EF                               6040          BALR  14,15
00003D14                                    6041 @@gen_label292 DS    0H
00003D14 4110 2040               00000040   6042          LA    1,64(0,2)
00003D18 E310 D0A8 0024          000000A8   6043          STG   1,168(0,13)
00003D1E B914 00FF                          6044          LGFR  15,15
00003D22 E3F0 D0B0 0024          000000B0   6045          STG   15,176(0,13)
00003D28 4110 D0A8               000000A8   6046          LA    1,168(0,13)
00003D2C B904 00F4                          6047          LGR   15,4
00003D30                                    6048 @@gen_label293 DS    0H
                                                                                                                           Page  123 
  Active Usings: @REGION_1507_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003D30 05EF                               6049          BALR  14,15
00003D32                                    6050 @@gen_label294 DS    0H
00003D32                                    6051 @L675    DS    0H
                                            6052 * ***   }
00003D32                                    6053 @ret_lab_1507 DS 0H
                                            6054 * * **** Start of Epilogue
                                            6055          DCCEPIL
00003D32                                    6056+         ds 0h                                                          01-DCCEP
                                            6057+* Epilog
00003D32 D707 D088 D088 00000088 00000088   6058+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003D38 E3D0 D080 0004          00000080   6059+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003D3E E3C0 D090 0004          00000090   6060+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003D44 E3B0 C018 0004          00000018   6061+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D4A E3C0 B010 0021          00000010   6062+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003D50 E3E0 D008 0004          00000008   6063+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003D56 EB1C D020 0004          00000020   6064+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003D5C 078E                               6065+         bcr 8,14                if same dsab, just return              01-DCCEP
00003D5E E3F0 D010 0024          00000010   6066+         stg 15,16(0,13)         save return code                       01-DCCEP
00003D64 E300 D018 0024          00000018   6067+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003D6A E3F0 D090 0004          00000090   6068+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003D70 E3F0 F018 0004          00000018   6069+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003D76 47F0 F040               00000040   6070+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6071+* End of Epilog
                                            6072 * * **** End of Epilogue
                                            6073          DROP  12
                                            6074 *
                                            6075 *   DSECT for automatic variables in "rd_kafka_bufq_deq"
                                            6076 *      (FUNCTION #1507)
                                            6077 *
00000000                00000000 000000A8   6078 @AUTO#rd_kafka_bufq_deq DSECT
00000000                                    6079          DS    XL168
                                            6080 *
00003D7A                00000000 000054D2   6081 @CODE    CSECT
                                            6082 *
                                            6083 *
                                            6084 *
                                            6085 * ....... start of rd_kafka_bufq_init
                                            6086 rd_kafka_bufq_init ALIAS X'99846D92818692816D82A486986D899589A3'
00003D7A                                    6087 @LNAME1508 DS  0H
00003D7A 00000012                           6088          DC    X'00000012'
00003D7E 99846D9281869281                   6089          DC    C'rd_kafka_bufq_init'
00003D90 00                                 6090          DC    X'00'
                                            6091 rd_kafka_bufq_init DCCPRLG CINDEX=1508,BASER=12,FRAME=184,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1508
                                            6092          macro
                                            6093          dccextrn &m
                                            6094          gblc    &$dccext(1000)
                                            6095          gbla    &$dccexti
                                            6096          lcla    &i
                                            6097 &$dccext(&$dccexti+1) setc    '&m'
                                            6098 &i       seta    1
                                            6099 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  124 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6100          aif    ('&$dccext(&i)' eq '&m').getout
                                            6101 &i       seta    &i+1
                                            6102          ago     .loop
                                            6103 .around  anop
                                            6104 &$dccexti seta &$dccexti+1
                                            6105          extrn  &m
                                            6106 .getout  anop
                                            6107          mend
00003D98                                    6108+$eye0128    ds    0d                                                    02-DCCCA
00003D98 C4C3C3                             6109+         dc cl3'DCC'                                                    02-DCCCA
00003D9B 01                                 6110+         dc xl1'01' format one                                          02-DCCCA
00003D9C 00000000                           6111+         dc a(0)                                                        02-DCCCA
00003DA0 0000000000003E0A                   6112+         dc ad(@PER_1508)                                               02-DCCCA
00003DA8 00000000000000B8                   6113+         dc ad(184)                                                     02-DCCCA
00003DB0 0000000000000000                   6114+         dc ad(0)                                                       02-DCCCA
00003DB8 0000000000001000                   6115+         dc ad(4096)                                                    02-DCCCA
00003DC0 20                                 6116+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003DC1 03                                 6117+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003DC2 03                                 6118+         dc al1(3)                                                      02-DCCCA
00003DC3 08                                 6119+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003DC4 00                                 6120+         dc bl.8'00000000'                                              02-DCCCA
00003DC5 000000                             6121+         dc al3(0)                                                      02-DCCCA
00003DC8 0000000000003D7A                   6122+         dc ad(@LNAME1508)                                              02-DCCCA
00003DD0                                    6123+         ds 0d                                                          02-DCCCA
00003DD0 0000000000003D98                   6124+         dc ad($eye0128)                                                02-DCCCA
00003DD8 0000000000000000                   6125+         dc ad(0)                                                       02-DCCCA
00003DE0                                    6126+         ds    0d                                                       01-DCCPR
                                            6127+         entry rd_kafka_bufq_init                                       01-DCCPR
00003DE0                                    6128+rd_kafka_bufq_init ds 0d                                                01-DCCPR
00003DE0                                    6129+@REGION_1508_1 ds 0h                                                    01-DCCPR
00003DE0 EBEC D008 0024          00000008   6130+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003DE6 E3E0 D088 0004          00000088   6131+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003DEC E3C0 D090 0004          00000090   6132+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003DF2 B904 002E                          6133+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003DF6 E3B0 C018 0004          00000018   6134+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003DFC A7EB 00B8               000000B8   6135+         aghi  14,184              increase by frame size               01-DCCPR
00003E00 E3E0 C020 0021          00000020   6136+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003E06 4720 B020               00000020   6137+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003E0A                                    6138+@PER_1508 ds   0h                                                       01-DCCPR
00003E0A EBDE 2080 0024          00000080   6139+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003E10 E3C0 2090 0024          00000090   6140+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003E16 B904 00D2                          6141+         lgr   13,2                set real frame pointer               01-DCCPR
00003E1A B904 00CF                          6142+         lgr   12,15               set base reg                         01-DCCPR
                        00003DE0            6143+         using @REGION_1508_1,12                                        01-DCCPR
                                            6144 * ******* End of Prologue
                                            6145 * *
                                            6146 * ***      do { (&rkbufq->rkbq_bufs)->tqh_first = (((void *)0)); (&rkb\
                                            6147 * ufq->rkbq_bufs)->tqh_last = &(&rkbufq->rkbq_bufs)->tqh_first; } whil\
                                            6148 * e ( 0);
00003E1E E320 1000 0004          00000000   6149          LG    2,0(0,1)    ; rkbufq
00003E24                                    6150 @L676    DS    0H
00003E24 A7F9 0000               00000000   6151          LGHI  15,0        ; 0
                                                                                                                           Page  125 
  Active Usings: @REGION_1508_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003E28 E3F0 2000 0024          00000000   6152          STG   15,0(0,2)   ; rkbufq
00003E2E E320 2008 0024          00000008   6153          STG   2,8(0,2)    ; offset of tqh_last in 0000091
                                            6154 * ***      rd_atomic32_init(&rkbufq->rkbq_cnt, 0);
00003E34 41F0 2010               00000010   6155          LA    15,16(0,2)
00003E38 E3F0 D0A8 0024          000000A8   6156          STG   15,168(0,13)
00003E3E D707 D0B0 D0B0 000000B0 000000B0   6157          XC    176(8,13),176(13)
00003E44 4110 D0A8               000000A8   6158          LA    1,168(0,13)
00003E48 E330 C0E0 0004          00003EC0   6159          LG    3,@lit_1508_174 ; rd_atomic32_init
00003E4E B904 00F3                          6160          LGR   15,3
00003E52                                    6161 @@gen_label295 DS    0H
00003E52 05EF                               6162          BALR  14,15
00003E54                                    6163 @@gen_label296 DS    0H
                                            6164 * ***      rd_atomic32_init(&rkbufq->rkbq_msg_cnt, 0);
00003E54 41F0 2040               00000040   6165          LA    15,64(0,2)
00003E58 E3F0 D0A8 0024          000000A8   6166          STG   15,168(0,13)
00003E5E D707 D0B0 D0B0 000000B0 000000B0   6167          XC    176(8,13),176(13)
00003E64 4110 D0A8               000000A8   6168          LA    1,168(0,13)
00003E68 B904 00F3                          6169          LGR   15,3
00003E6C                                    6170 @@gen_label297 DS    0H
00003E6C 05EF                               6171          BALR  14,15
00003E6E                                    6172 @@gen_label298 DS    0H
                                            6173 * ***   }
00003E6E                                    6174 @ret_lab_1508 DS 0H
                                            6175 * * **** Start of Epilogue
                                            6176          DCCEPIL
00003E6E                                    6177+         ds 0h                                                          01-DCCEP
                                            6178+* Epilog
00003E6E D707 D088 D088 00000088 00000088   6179+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003E74 E3D0 D080 0004          00000080   6180+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003E7A E3C0 D090 0004          00000090   6181+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003E80 E3B0 C018 0004          00000018   6182+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003E86 E3C0 B010 0021          00000010   6183+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003E8C E3E0 D008 0004          00000008   6184+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003E92 EB1C D020 0004          00000020   6185+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003E98 078E                               6186+         bcr 8,14                if same dsab, just return              01-DCCEP
00003E9A E3F0 D010 0024          00000010   6187+         stg 15,16(0,13)         save return code                       01-DCCEP
00003EA0 E300 D018 0024          00000018   6188+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003EA6 E3F0 D090 0004          00000090   6189+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003EAC E3F0 F018 0004          00000018   6190+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003EB2 47F0 F040               00000040   6191+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6192+* End of Epilog
                                            6193 * * **** End of Epilogue
00003EB8                                    6194          DS    0D
00003EB8 000000B8                           6195 @FRAMESIZE_1508 DC F'184'
00003EBC 00000000
00003EC0 0000000000000240                   6196 @lit_1508_174 DC AD(rd_atomic32_init)
                                            6197          DROP  12
                                            6198 *
                                            6199 *   DSECT for automatic variables in "rd_kafka_bufq_init"
                                            6200 *      (FUNCTION #1508)
                                            6201 *
00000000                00000000 000000A8   6202 @AUTO#rd_kafka_bufq_init DSECT
                                                                                                                           Page  126 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                                    6203          DS    XL168
                                            6204 *
00003EC8                00000000 000054D2   6205 @CODE    CSECT
                                            6206 *
                                            6207 *
                                            6208 *
                                            6209 * ....... start of rd_kafka_bufq_concat
                                            6210 rd_kafka_bufq_concat ALIAS X'99846D92818692816D82A486986D8396958381A3'
00003EC8                                    6211 @LNAME1509 DS  0H
00003EC8 00000014                           6212          DC    X'00000014'
00003ECC 99846D9281869281                   6213          DC    C'rd_kafka_bufq_concat'
00003EE0 00                                 6214          DC    X'00'
                                            6215 rd_kafka_bufq_concat DCCPRLG CINDEX=1509,BASER=12,FRAME=184,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1509
                                            6216          macro
                                            6217          dccextrn &m
                                            6218          gblc    &$dccext(1000)
                                            6219          gbla    &$dccexti
                                            6220          lcla    &i
                                            6221 &$dccext(&$dccexti+1) setc    '&m'
                                            6222 &i       seta    1
                                            6223 .loop    aif    (&i gt &$dccexti).around
                                            6224          aif    ('&$dccext(&i)' eq '&m').getout
                                            6225 &i       seta    &i+1
                                            6226          ago     .loop
                                            6227 .around  anop
                                            6228 &$dccexti seta &$dccexti+1
                                            6229          extrn  &m
                                            6230 .getout  anop
                                            6231          mend
00003EE8                                    6232+$eye0131    ds    0d                                                    02-DCCCA
00003EE8 C4C3C3                             6233+         dc cl3'DCC'                                                    02-DCCCA
00003EEB 01                                 6234+         dc xl1'01' format one                                          02-DCCCA
00003EEC 00000000                           6235+         dc a(0)                                                        02-DCCCA
00003EF0 0000000000003F5A                   6236+         dc ad(@PER_1509)                                               02-DCCCA
00003EF8 00000000000000B8                   6237+         dc ad(184)                                                     02-DCCCA
00003F00 0000000000000000                   6238+         dc ad(0)                                                       02-DCCCA
00003F08 0000000000001000                   6239+         dc ad(4096)                                                    02-DCCCA
00003F10 20                                 6240+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003F11 03                                 6241+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003F12 03                                 6242+         dc al1(3)                                                      02-DCCCA
00003F13 08                                 6243+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003F14 00                                 6244+         dc bl.8'00000000'                                              02-DCCCA
00003F15 000000                             6245+         dc al3(0)                                                      02-DCCCA
00003F18 0000000000003EC8                   6246+         dc ad(@LNAME1509)                                              02-DCCCA
00003F20                                    6247+         ds 0d                                                          02-DCCCA
00003F20 0000000000003EE8                   6248+         dc ad($eye0131)                                                02-DCCCA
00003F28 0000000000000000                   6249+         dc ad(0)                                                       02-DCCCA
00003F30                                    6250+         ds    0d                                                       01-DCCPR
                                            6251+         entry rd_kafka_bufq_concat                                     01-DCCPR
00003F30                                    6252+rd_kafka_bufq_concat ds 0d                                              01-DCCPR
00003F30                                    6253+@REGION_1509_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page  127 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003F30 EBEC D008 0024          00000008   6254+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003F36 E3E0 D088 0004          00000088   6255+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003F3C E3C0 D090 0004          00000090   6256+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003F42 B904 002E                          6257+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003F46 E3B0 C018 0004          00000018   6258+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003F4C A7EB 00B8               000000B8   6259+         aghi  14,184              increase by frame size               01-DCCPR
00003F50 E3E0 C020 0021          00000020   6260+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003F56 4720 B020               00000020   6261+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003F5A                                    6262+@PER_1509 ds   0h                                                       01-DCCPR
00003F5A EBDE 2080 0024          00000080   6263+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003F60 E3C0 2090 0024          00000090   6264+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003F66 B904 00D2                          6265+         lgr   13,2                set real frame pointer               01-DCCPR
00003F6A B904 00CF                          6266+         lgr   12,15               set base reg                         01-DCCPR
                        00003F30            6267+         using @REGION_1509_1,12                                        01-DCCPR
                                            6268 * ******* End of Prologue
                                            6269 * *
                                            6270 * ***      do { if (!(((&src->rkbq_bufs)->tqh_first) == (((void *)0)))\
                                            6271 * ) { *(&dst->rkbq_bufs)->tqh_last = (&src->rkbq_bufs)->tqh_first; (&s\
                                            6272 * rc->rkbq_bufs)->tqh_first->rkbuf_link .tqe_prev = (&dst->rkbq_bufs)-\
                                            6273 * >tqh_last; (&dst->rkbq_bufs)->tqh_last = (&src->rkbq_bufs)->tqh_last\
                                            6274 * ; do { ((&src->rkbq_bufs))->tqh_first = (((void *)0)); ((&src->rkbq_\
                                            6275 * bufs))->tqh_last = &((&src->rkbq_bufs))->tqh_first; } while ( 0); } \
                                            6276 * } while ( 0);
00003F6E EB23 1000 0004          00000000   6277          LMG   2,3,0(1)    ; dst
00003F74                                    6278 @L679    DS    0H
00003F74 E3F0 3000 0002          00000000   6279          LTG   15,0(0,3)   ; src
00003F7A 4780 C08E               00003FBE   6280          BE    @L682
00003F7E E3F0 2008 0004          00000008   6281          LG    15,8(0,2)   ; offset of tqh_last in 0000091
00003F84 E310 3000 0004          00000000   6282          LG    1,0(0,3)    ; src
00003F8A E310 F000 0024          00000000   6283          STG   1,0(0,15)
00003F90 E3F0 3000 0004          00000000   6284          LG    15,0(0,3)   ; src
00003F96 E310 2008 0004          00000008   6285          LG    1,8(0,2)    ; offset of tqh_last in 0000091
00003F9C E310 F008 0024          00000008   6286          STG   1,8(0,15)   ; offset of tqe_prev in 0000086
00003FA2 E3F0 3008 0004          00000008   6287          LG    15,8(0,3)   ; offset of tqh_last in 0000091
00003FA8 E3F0 2008 0024          00000008   6288          STG   15,8(0,2)   ; offset of tqh_last in 0000091
00003FAE                                    6289 @L683    DS    0H
00003FAE A7F9 0000               00000000   6290          LGHI  15,0        ; 0
00003FB2 E3F0 3000 0024          00000000   6291          STG   15,0(0,3)   ; src
00003FB8 E330 3008 0024          00000008   6292          STG   3,8(0,3)    ; offset of tqh_last in 0000091
00003FBE                                    6293 @L682    DS    0H
                                            6294 * ***      (void)rd_atomic32_add(&dst->rkbq_cnt, rd_atomic32_get(&src-\
                                            6295 * >rkbq_cnt));
00003FBE 41F0 3010               00000010   6296          LA    15,16(0,3)
00003FC2 E3F0 D0A8 0024          000000A8   6297          STG   15,168(0,13)
00003FC8 4110 D0A8               000000A8   6298          LA    1,168(0,13)
00003FCC E340 C160 0004          00004090   6299          LG    4,@lit_1509_178 ; rd_atomic32_get
00003FD2 B904 00F4                          6300          LGR   15,4
00003FD6                                    6301 @@gen_label300 DS    0H
00003FD6 05EF                               6302          BALR  14,15
00003FD8                                    6303 @@gen_label301 DS    0H
00003FD8 4110 2010               00000010   6304          LA    1,16(0,2)
00003FDC E310 D0A8 0024          000000A8   6305          STG   1,168(0,13)
                                                                                                                           Page  128 
  Active Usings: @REGION_1509_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003FE2 B914 00FF                          6306          LGFR  15,15
00003FE6 E3F0 D0B0 0024          000000B0   6307          STG   15,176(0,13)
00003FEC 4110 D0A8               000000A8   6308          LA    1,168(0,13)
00003FF0 E350 C168 0004          00004098   6309          LG    5,@lit_1509_179 ; rd_atomic32_add
00003FF6 B904 00F5                          6310          LGR   15,5
00003FFA                                    6311 @@gen_label302 DS    0H
00003FFA 05EF                               6312          BALR  14,15
00003FFC                                    6313 @@gen_label303 DS    0H
                                            6314 * ***      (void)rd_atomic32_add(&dst->rkbq_msg_cnt, rd_atomic32_get(&\
                                            6315 * src->rkbq_msg_cnt));
00003FFC 41F0 3040               00000040   6316          LA    15,64(0,3)
00004000 E3F0 D0A8 0024          000000A8   6317          STG   15,168(0,13)
00004006 4110 D0A8               000000A8   6318          LA    1,168(0,13)
0000400A B904 00F4                          6319          LGR   15,4
0000400E                                    6320 @@gen_label304 DS    0H
0000400E 05EF                               6321          BALR  14,15
00004010                                    6322 @@gen_label305 DS    0H
00004010 4110 2040               00000040   6323          LA    1,64(0,2)
00004014 E310 D0A8 0024          000000A8   6324          STG   1,168(0,13)
0000401A B914 00FF                          6325          LGFR  15,15
0000401E E3F0 D0B0 0024          000000B0   6326          STG   15,176(0,13)
00004024 4110 D0A8               000000A8   6327          LA    1,168(0,13)
00004028 B904 00F5                          6328          LGR   15,5
0000402C                                    6329 @@gen_label306 DS    0H
0000402C 05EF                               6330          BALR  14,15
0000402E                                    6331 @@gen_label307 DS    0H
                                            6332 * ***      rd_kafka_bufq_init(src);
0000402E E330 D0A8 0024          000000A8   6333          STG   3,168(0,13)
00004034 4110 D0A8               000000A8   6334          LA    1,168(0,13)
00004038 E3F0 C170 0004          000040A0   6335          LG    15,@lit_1509_182 ; rd_kafka_bufq_init
0000403E                                    6336 @@gen_label308 DS    0H
0000403E 05EF                               6337          BALR  14,15
00004040                                    6338 @@gen_label309 DS    0H
                                            6339 * ***   }
00004040                                    6340 @ret_lab_1509 DS 0H
                                            6341 * * **** Start of Epilogue
                                            6342          DCCEPIL
00004040                                    6343+         ds 0h                                                          01-DCCEP
                                            6344+* Epilog
00004040 D707 D088 D088 00000088 00000088   6345+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004046 E3D0 D080 0004          00000080   6346+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000404C E3C0 D090 0004          00000090   6347+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004052 E3B0 C018 0004          00000018   6348+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004058 E3C0 B010 0021          00000010   6349+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000405E E3E0 D008 0004          00000008   6350+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004064 EB1C D020 0004          00000020   6351+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000406A 078E                               6352+         bcr 8,14                if same dsab, just return              01-DCCEP
0000406C E3F0 D010 0024          00000010   6353+         stg 15,16(0,13)         save return code                       01-DCCEP
00004072 E300 D018 0024          00000018   6354+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004078 E3F0 D090 0004          00000090   6355+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000407E E3F0 F018 0004          00000018   6356+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004084 47F0 F040               00000040   6357+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  129 
  Active Usings: @REGION_1509_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6358+* End of Epilog
                                            6359 * * **** End of Epilogue
00004088                                    6360          DS    0D
00004088 000000B8                           6361 @FRAMESIZE_1509 DC F'184'
0000408C 00000000
00004090 00000000000005F0                   6362 @lit_1509_178 DC AD(rd_atomic32_get)
00004098 0000000000000360                   6363 @lit_1509_179 DC AD(rd_atomic32_add)
000040A0 0000000000003DE0                   6364 @lit_1509_182 DC AD(rd_kafka_bufq_init)
                                            6365          DROP  12
                                            6366 *
                                            6367 *   DSECT for automatic variables in "rd_kafka_bufq_concat"
                                            6368 *      (FUNCTION #1509)
                                            6369 *
00000000                00000000 000000A8   6370 @AUTO#rd_kafka_bufq_concat DSECT
00000000                                    6371          DS    XL168
                                            6372 *
000040A8                00000000 000054D2   6373 @CODE    CSECT
                                            6374 *
                                            6375 *
                                            6376 *
                                            6377 * ....... start of rd_kafka_bufq_purge
                                            6378 rd_kafka_bufq_purge ALIAS X'99846D92818692816D82A486986D97A4998785'
000040A8                                    6379 @LNAME1510 DS  0H
000040A8 00000013                           6380          DC    X'00000013'
000040AC 99846D9281869281                   6381          DC    C'rd_kafka_bufq_purge'
000040BF 00                                 6382          DC    X'00'
                                            6383 rd_kafka_bufq_purge DCCPRLG CINDEX=1510,BASER=12,FRAME=488,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1510
                                            6384          macro
                                            6385          dccextrn &m
                                            6386          gblc    &$dccext(1000)
                                            6387          gbla    &$dccexti
                                            6388          lcla    &i
                                            6389 &$dccext(&$dccexti+1) setc    '&m'
                                            6390 &i       seta    1
                                            6391 .loop    aif    (&i gt &$dccexti).around
                                            6392          aif    ('&$dccext(&i)' eq '&m').getout
                                            6393 &i       seta    &i+1
                                            6394          ago     .loop
                                            6395 .around  anop
                                            6396 &$dccexti seta &$dccexti+1
                                            6397          extrn  &m
                                            6398 .getout  anop
                                            6399          mend
000040C0                                    6400+$eye0134    ds    0d                                                    02-DCCCA
000040C0 C4C3C3                             6401+         dc cl3'DCC'                                                    02-DCCCA
000040C3 01                                 6402+         dc xl1'01' format one                                          02-DCCCA
000040C4 00000000                           6403+         dc a(0)                                                        02-DCCCA
000040C8 0000000000004132                   6404+         dc ad(@PER_1510)                                               02-DCCCA
000040D0 00000000000001E8                   6405+         dc ad(488)                                                     02-DCCCA
000040D8 0000000000000000                   6406+         dc ad(0)                                                       02-DCCCA
000040E0 0000000000001000                   6407+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page  130 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000040E8 20                                 6408+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000040E9 03                                 6409+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000040EA 03                                 6410+         dc al1(3)                                                      02-DCCCA
000040EB 08                                 6411+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000040EC 00                                 6412+         dc bl.8'00000000'                                              02-DCCCA
000040ED 000000                             6413+         dc al3(0)                                                      02-DCCCA
000040F0 00000000000040A8                   6414+         dc ad(@LNAME1510)                                              02-DCCCA
000040F8                                    6415+         ds 0d                                                          02-DCCCA
000040F8 00000000000040C0                   6416+         dc ad($eye0134)                                                02-DCCCA
00004100 0000000000000000                   6417+         dc ad(0)                                                       02-DCCCA
00004108                                    6418+         ds    0d                                                       01-DCCPR
                                            6419+         entry rd_kafka_bufq_purge                                      01-DCCPR
00004108                                    6420+rd_kafka_bufq_purge ds 0d                                               01-DCCPR
00004108                                    6421+@REGION_1510_1 ds 0h                                                    01-DCCPR
00004108 EBEC D008 0024          00000008   6422+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000410E E3E0 D088 0004          00000088   6423+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004114 E3C0 D090 0004          00000090   6424+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000411A B904 002E                          6425+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000411E E3B0 C018 0004          00000018   6426+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004124 A7EB 01E8               000001E8   6427+         aghi  14,488              increase by frame size               01-DCCPR
00004128 E3E0 C020 0021          00000020   6428+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000412E 4720 B020               00000020   6429+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004132                                    6430+@PER_1510 ds   0h                                                       01-DCCPR
00004132 EBDE 2080 0024          00000080   6431+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004138 E3C0 2090 0024          00000090   6432+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000413E B904 00D2                          6433+         lgr   13,2                set real frame pointer               01-DCCPR
00004142 B904 00CF                          6434+         lgr   12,15               set base reg                         01-DCCPR
                        00004108            6435+         using @REGION_1510_1,12                                        01-DCCPR
00004146 B904 0041                          6436          LGR   4,1         ; ptr to parm area
                                            6437 * ******* End of Prologue
                                            6438 * *
0000414A E320 4000 0004          00000000   6439          LG    2,0(0,4)    ; rkb
                                            6440 * ***      rd_kafka_buf_t *rkbuf, *tmp;
                                            6441 * ***
                                            6442 * ***      do { if (((!(thrd_is_current(rkb->rkb_thread))))) rd_kafka_\
                                            6443 * crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.c",250, __FUNCTION\
                                            6444 * __, (rkb->rkb_rk), "assert: " "thrd_is_current(rkb->rkb_thread)"); }\
                                            6445 *  while (0);
00004150                                    6446 @L686    DS    0H
00004150 E3F0 2F98 0004          00000F98   6447          LG    15,3992(0,2)
00004156 E3F0 D1A8 0024          000001A8   6448          STG   15,424(0,13)
0000415C 4110 D1A8               000001A8   6449          LA    1,424(0,13)
00004160 E3F0 C1B0 0004          000042B8   6450          LG    15,@lit_1510_184 ; thrd_is_current
00004166                                    6451 @@gen_label310 DS    0H
00004166 05EF                               6452          BALR  14,15
00004168                                    6453 @@gen_label311 DS    0H
00004168 12FF                               6454          LTR   15,15
0000416A 4770 C0AE               000041B6   6455          BNZ   @L689
0000416E E3F0 C1C8 0004          000042D0   6456          LG    15,@lit_1510_185
00004174 4110 F09C               0000009C   6457          LA    1,156(0,15)
00004178 E310 D1A8 0024          000001A8   6458          STG   1,424(0,13)
0000417E E548 D1B0 00FA          000001B0   6459          MVGHI 432(13),250
                                                                                                                           Page  131 
  Active Usings: @REGION_1510_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004184 E310 C1C0 0004          000042C8   6460          LG    1,@lit_1510_186
0000418A 4110 11D4               000001D4   6461          LA    1,468(0,1)
0000418E E310 D1B8 0024          000001B8   6462          STG   1,440(0,13)
00004194 E310 2FD0 0004          00000FD0   6463          LG    1,4048(0,2)
0000419A E310 D1C0 0024          000001C0   6464          STG   1,448(0,13)
000041A0 41F0 F122               00000122   6465          LA    15,290(0,15)
000041A4 E3F0 D1C8 0024          000001C8   6466          STG   15,456(0,13)
000041AA 4110 D1A8               000001A8   6467          LA    1,424(0,13)
000041AE E3F0 C1B8 0004          000042C0   6468          LG    15,@lit_1510_187 ; rd_kafka_crash
000041B4                                    6469 @@gen_label313 DS    0H
000041B4 05EF                               6470          BALR  14,15
000041B6                                    6471 @@gen_label314 DS    0H
000041B6                                    6472 @L689    DS    0H
                                            6473 * ***
                                            6474 * ***      do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x20)))) { do { \
                                            6475 * char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlcpy(_\
                                            6476 * logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkb)->rkb\
                                            6477 * _logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rkb_rk\
                                            6478 * , _logname, 7, (0x20), "BUFQ", "Purging bufq with %i buffers", rd_at\
                                            6479 * omic32_get(&rkbufq->rkbq_cnt)); } while (0); } } while (0);
000041B6                                    6480 @L690    DS    0H
000041B6 E3F0 2FD0 0004          00000FD0   6481          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
000041BC 9120 F323      00000323 00000020   6482          TM    803(15),32
000041C0 4780 C196               0000429E   6483          BZ    @L693
000041C4                                    6484 @L694    DS    0H
000041C4 A739 1638               00001638   6485          LGHI  3,5688      ; 5688
000041C8 41F3 2000               00000000   6486          LA    15,0(3,2)
000041CC E3F0 D1A8 0024          000001A8   6487          STG   15,424(0,13)
000041D2 4110 D1A8               000001A8   6488          LA    1,424(0,13)
000041D6 E3F0 C1D0 0004          000042D8   6489          LG    15,@lit_1510_189 ; mtx_lock
000041DC                                    6490 @@gen_label316 DS    0H
000041DC 05EF                               6491          BALR  14,15
000041DE                                    6492 @@gen_label317 DS    0H
000041DE 41F0 D0A8               000000A8   6493          LA    15,168(0,13)
000041E2 E3F0 D1A8 0024          000001A8   6494          STG   15,424(0,13)
000041E8 A7F9 1630               00001630   6495          LGHI  15,5680     ; 5680
000041EC E3FF 2000 0004          00000000   6496          LG    15,0(15,2)
000041F2 E3F0 D1B0 0024          000001B0   6497          STG   15,432(0,13)
000041F8 E548 D1B8 0100          000001B8   6498          MVGHI 440(13),256
000041FE 4110 D1A8               000001A8   6499          LA    1,424(0,13)
00004202 E3F0 C1D8 0004          000042E0   6500          LG    15,@lit_1510_191 ; rd_strlcpy
00004208                                    6501 @@gen_label318 DS    0H
00004208 05EF                               6502          BALR  14,15
0000420A                                    6503 @@gen_label319 DS    0H
0000420A 41F3 2000               00000000   6504          LA    15,0(3,2)
0000420E E3F0 D1A8 0024          000001A8   6505          STG   15,424(0,13)
00004214 4110 D1A8               000001A8   6506          LA    1,424(0,13)
00004218 E3F0 C1E0 0004          000042E8   6507          LG    15,@lit_1510_193 ; mtx_unlock
0000421E                                    6508 @@gen_label320 DS    0H
0000421E 05EF                               6509          BALR  14,15
00004220                                    6510 @@gen_label321 DS    0H
00004220 E3F0 4008 0004          00000008   6511          LG    15,8(0,4)   ; rkbufq
                                                                                                                           Page  132 
  Active Usings: @REGION_1510_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004226 41F0 F010               00000010   6512          LA    15,16(0,15)
0000422A E3F0 D1A8 0024          000001A8   6513          STG   15,424(0,13)
00004230 4110 D1A8               000001A8   6514          LA    1,424(0,13)
00004234 E3F0 C1E8 0004          000042F0   6515          LG    15,@lit_1510_194 ; rd_atomic32_get
0000423A                                    6516 @@gen_label322 DS    0H
0000423A 05EF                               6517          BALR  14,15
0000423C                                    6518 @@gen_label323 DS    0H
0000423C E310 2FD0 0004          00000FD0   6519          LG    1,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00004242 4110 1210               00000210   6520          LA    1,528(0,1)
00004246 E310 D1A8 0024          000001A8   6521          STG   1,424(0,13)
0000424C E310 2FD0 0004          00000FD0   6522          LG    1,4048(0,2)
00004252 E310 D1B0 0024          000001B0   6523          STG   1,432(0,13)
00004258 4110 D0A8               000000A8   6524          LA    1,168(0,13)
0000425C E310 D1B8 0024          000001B8   6525          STG   1,440(0,13)
00004262 E548 D1C0 0007          000001C0   6526          MVGHI 448(13),7
00004268 E548 D1C8 0020          000001C8   6527          MVGHI 456(13),32
0000426E E310 C1C8 0004          000042D0   6528          LG    1,@lit_1510_185
00004274 4130 114C               0000014C   6529          LA    3,332(0,1)
00004278 E330 D1D0 0024          000001D0   6530          STG   3,464(0,13)
0000427E 4110 1152               00000152   6531          LA    1,338(0,1)
00004282 E310 D1D8 0024          000001D8   6532          STG   1,472(0,13)
00004288 B914 00FF                          6533          LGFR  15,15
0000428C E3F0 D1E0 0024          000001E0   6534          STG   15,480(0,13)
00004292 4110 D1A8               000001A8   6535          LA    1,424(0,13)
00004296 E3F0 C1F0 0004          000042F8   6536          LG    15,@lit_1510_196 ; rd_kafka_log0
0000429C                                    6537 @@gen_label324 DS    0H
0000429C 05EF                               6538          BALR  14,15
0000429E                                    6539 @@gen_label325 DS    0H
0000429E                                    6540 @L693    DS    0H
                                            6541 * ***
                                            6542 * ***
                                            6543 * ***      for ((rkbuf) = ((&rkbufq->rkbq_bufs)->tqh_first); (rkbuf) !\
                                            6544 * = (((void *)0)) && ((tmp) = ((rkbuf)->rkbuf_link .tqe_next), 1); (rk\
                                            6545 * buf) = (tmp)) {
0000429E E3F0 4008 0004          00000008   6546          LG    15,8(0,4)   ; rkbufq
000042A4 E3F0 F000 0004          00000000   6547          LG    15,0(0,15)  ; rkbufq
000042AA 47F0 C234               0000433C   6548          B     @L698
000042B0                                    6549          DS    0D
000042B0 000001E8                           6550 @FRAMESIZE_1510 DC F'488'
000042B4 00000000
000042B8 0000000000000000                   6551 @lit_1510_184 DC AD(thrd_is_current)
000042C0 0000000000000000                   6552 @lit_1510_187 DC AD(rd_kafka_crash)
000042C8 00000000000054D8                   6553 @lit_1510_186 DC AD(@DATA)
000042D0 0000000000005722                   6554 @lit_1510_185 DC AD(@strings@)
000042D8 0000000000000000                   6555 @lit_1510_189 DC AD(mtx_lock)
000042E0 0000000000000FC0                   6556 @lit_1510_191 DC AD(rd_strlcpy)
000042E8 0000000000000000                   6557 @lit_1510_193 DC AD(mtx_unlock)
000042F0 00000000000005F0                   6558 @lit_1510_194 DC AD(rd_atomic32_get)
000042F8 0000000000000000                   6559 @lit_1510_196 DC AD(rd_kafka_log0)
00004300 0000000000005128                   6560 @lit_1510_197 DC AD(rd_kafka_buf_callback)
00004308                                    6561 @L697    DS    0H
                                            6562 * ***                   rd_kafka_buf_callback(rkb->rkb_rk, rkb, err, (\
                                                                                                                           Page  133 
  Active Usings: @REGION_1510_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6563 * (void *)0), rkbuf);
00004308 E310 2FD0 0004          00000FD0   6564          LG    1,4048(0,2)
0000430E EB12 D1A8 0024          000001A8   6565          STMG  1,2,424(13)
00004314 E310 4014 0014          00000014   6566          LGF   1,20(0,4)   ; err
0000431A E310 D1B8 0024          000001B8   6567          STG   1,440(0,13)
00004320 D707 D1C0 D1C0 000001C0 000001C0   6568          XC    448(8,13),448(13)
00004326 E3F0 D1C8 0024          000001C8   6569          STG   15,456(0,13)
0000432C 4110 D1A8               000001A8   6570          LA    1,424(0,13)
00004330 E3F0 C1F8 0004          00004300   6571          LG    15,@lit_1510_197 ; rd_kafka_buf_callback
00004336                                    6572 @@gen_label326 DS    0H
00004336 05EF                               6573          BALR  14,15
00004338                                    6574 @@gen_label327 DS    0H
                                            6575 * ***           }
00004338 B904 00F3                          6576          LGR   15,3        ; rkbuf
0000433C                                    6577 @L698    DS    0H
0000433C B902 001F                          6578          LTGR  1,15
00004340 4780 C246               0000434E   6579          BE    @L699
00004344 E330 F000 0004          00000000   6580          LG    3,0(0,15)   ; rkbuf
0000434A 47F0 C200               00004308   6581          B     @L697
0000434E                                    6582 @L699    DS    0H
                                            6583 * ***   }
0000434E                                    6584 @ret_lab_1510 DS 0H
                                            6585 * * **** Start of Epilogue
                                            6586          DCCEPIL
0000434E                                    6587+         ds 0h                                                          01-DCCEP
                                            6588+* Epilog
0000434E D707 D088 D088 00000088 00000088   6589+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004354 E3D0 D080 0004          00000080   6590+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000435A E3C0 D090 0004          00000090   6591+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004360 E3B0 C018 0004          00000018   6592+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004366 E3C0 B010 0021          00000010   6593+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000436C E3E0 D008 0004          00000008   6594+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004372 EB1C D020 0004          00000020   6595+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004378 078E                               6596+         bcr 8,14                if same dsab, just return              01-DCCEP
0000437A E3F0 D010 0024          00000010   6597+         stg 15,16(0,13)         save return code                       01-DCCEP
00004380 E300 D018 0024          00000018   6598+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004386 E3F0 D090 0004          00000090   6599+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000438C E3F0 F018 0004          00000018   6600+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004392 47F0 F040               00000040   6601+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6602+* End of Epilog
                                            6603 * * **** End of Epilogue
                                            6604          DROP  12
                                            6605 *
                                            6606 *   DSECT for automatic variables in "rd_kafka_bufq_purge"
                                            6607 *      (FUNCTION #1510)
                                            6608 *
00000000                00000000 000001A8   6609 @AUTO#rd_kafka_bufq_purge DSECT
00000000                                    6610          DS    XL168
000000A8                                    6611 rd_kafka_bufq_purge#_logname#4 DS 256XL1 ; _logname
                                            6612 *
00004396                00000000 000054D2   6613 @CODE    CSECT
                                            6614 *
                                                                                                                           Page  134 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6615 *
                                            6616 *
                                            6617 * ....... start of rd_kafka_bufq_connection_reset
                                            6618 rd_kafka_bufq_connection_reset ALIAS X'99846D92818692816D82A486986D8396*
                                                                95958583A38996956D9985A285A3'
00004396                                    6619 @LNAME1511 DS  0H
00004396 0000001E                           6620          DC    X'0000001E'
0000439A 99846D9281869281                   6621          DC    C'rd_kafka_bufq_connection_reset'
000043B8 00                                 6622          DC    X'00'
                                            6623 rd_kafka_bufq_connection_reset DCCPRLG CINDEX=1511,BASER=12,FRAME=488,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1511
                                            6624          macro
                                            6625          dccextrn &m
                                            6626          gblc    &$dccext(1000)
                                            6627          gbla    &$dccexti
                                            6628          lcla    &i
                                            6629 &$dccext(&$dccexti+1) setc    '&m'
                                            6630 &i       seta    1
                                            6631 .loop    aif    (&i gt &$dccexti).around
                                            6632          aif    ('&$dccext(&i)' eq '&m').getout
                                            6633 &i       seta    &i+1
                                            6634          ago     .loop
                                            6635 .around  anop
                                            6636 &$dccexti seta &$dccexti+1
                                            6637          extrn  &m
                                            6638 .getout  anop
                                            6639          mend
000043C0                                    6640+$eye0137    ds    0d                                                    02-DCCCA
000043C0 C4C3C3                             6641+         dc cl3'DCC'                                                    02-DCCCA
000043C3 01                                 6642+         dc xl1'01' format one                                          02-DCCCA
000043C4 00000000                           6643+         dc a(0)                                                        02-DCCCA
000043C8 0000000000004432                   6644+         dc ad(@PER_1511)                                               02-DCCCA
000043D0 00000000000001E8                   6645+         dc ad(488)                                                     02-DCCCA
000043D8 0000000000000000                   6646+         dc ad(0)                                                       02-DCCCA
000043E0 0000000000001000                   6647+         dc ad(4096)                                                    02-DCCCA
000043E8 20                                 6648+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000043E9 03                                 6649+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000043EA 03                                 6650+         dc al1(3)                                                      02-DCCCA
000043EB 08                                 6651+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000043EC 00                                 6652+         dc bl.8'00000000'                                              02-DCCCA
000043ED 000000                             6653+         dc al3(0)                                                      02-DCCCA
000043F0 0000000000004396                   6654+         dc ad(@LNAME1511)                                              02-DCCCA
000043F8                                    6655+         ds 0d                                                          02-DCCCA
000043F8 00000000000043C0                   6656+         dc ad($eye0137)                                                02-DCCCA
00004400 0000000000000000                   6657+         dc ad(0)                                                       02-DCCCA
00004408                                    6658+         ds    0d                                                       01-DCCPR
                                            6659+         entry rd_kafka_bufq_connection_reset                           01-DCCPR
00004408                                    6660+rd_kafka_bufq_connection_reset ds 0d                                    01-DCCPR
00004408                                    6661+@REGION_1511_1 ds 0h                                                    01-DCCPR
00004408 EBEC D008 0024          00000008   6662+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000440E E3E0 D088 0004          00000088   6663+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004414 E3C0 D090 0004          00000090   6664+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000441A B904 002E                          6665+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000441E E3B0 C018 0004          00000018   6666+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004424 A7EB 01E8               000001E8   6667+         aghi  14,488              increase by frame size               01-DCCPR
00004428 E3E0 C020 0021          00000020   6668+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000442E 4720 B020               00000020   6669+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004432                                    6670+@PER_1511 ds   0h                                                       01-DCCPR
00004432 EBDE 2080 0024          00000080   6671+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004438 E3C0 2090 0024          00000090   6672+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000443E B904 00D2                          6673+         lgr   13,2                set real frame pointer               01-DCCPR
00004442 B904 00CF                          6674+         lgr   12,15               set base reg                         01-DCCPR
                        00004408            6675+         using @REGION_1511_1,12                                        01-DCCPR
                                            6676 * ******* End of Prologue
                                            6677 * *
00004446 EB34 1000 0004          00000000   6678          LMG   3,4,0(1)    ; rkb
                                            6679 * ***      rd_kafka_buf_t *rkbuf, *tmp;
                                            6680 * ***           rd_ts_t now = rd_clock();
0000444C E3F0 C1B0 0004          000045B8   6681          LG    15,@lit_1511_199 ; rd_clock
00004452                                    6682 @@gen_label329 DS    0H
00004452 05EF                               6683          BALR  14,15
00004454                                    6684 @@gen_label330 DS    0H
00004454 B904 006F                          6685          LGR   6,15
                                            6686 * ***
                                            6687 * ***      do { if (((!(thrd_is_current(rkb->rkb_thread))))) rd_kafka_\
                                            6688 * crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.c",276, __FUNCTION\
                                            6689 * __, (rkb->rkb_rk), "assert: " "thrd_is_current(rkb->rkb_thread)"); }\
                                            6690 *  while (0);
00004458                                    6691 @L702    DS    0H
00004458 E3F0 3F98 0004          00000F98   6692          LG    15,3992(0,3)
0000445E E3F0 D1A8 0024          000001A8   6693          STG   15,424(0,13)
00004464 4110 D1A8               000001A8   6694          LA    1,424(0,13)
00004468 E3F0 C1B8 0004          000045C0   6695          LG    15,@lit_1511_200 ; thrd_is_current
0000446E                                    6696 @@gen_label331 DS    0H
0000446E 05EF                               6697          BALR  14,15
00004470                                    6698 @@gen_label332 DS    0H
00004470 12FF                               6699          LTR   15,15
00004472 4770 C0B6               000044BE   6700          BNZ   @L705
00004476 E3F0 C1D0 0004          000045D8   6701          LG    15,@lit_1511_201
0000447C 4110 F09C               0000009C   6702          LA    1,156(0,15)
00004480 E310 D1A8 0024          000001A8   6703          STG   1,424(0,13)
00004486 E548 D1B0 0114          000001B0   6704          MVGHI 432(13),276
0000448C E310 C1C8 0004          000045D0   6705          LG    1,@lit_1511_202
00004492 4110 11E8               000001E8   6706          LA    1,488(0,1)
00004496 E310 D1B8 0024          000001B8   6707          STG   1,440(0,13)
0000449C E310 3FD0 0004          00000FD0   6708          LG    1,4048(0,3)
000044A2 E310 D1C0 0024          000001C0   6709          STG   1,448(0,13)
000044A8 41F0 F122               00000122   6710          LA    15,290(0,15)
000044AC E3F0 D1C8 0024          000001C8   6711          STG   15,456(0,13)
000044B2 4110 D1A8               000001A8   6712          LA    1,424(0,13)
000044B6 E3F0 C1C0 0004          000045C8   6713          LG    15,@lit_1511_203 ; rd_kafka_crash
000044BC                                    6714 @@gen_label334 DS    0H
000044BC 05EF                               6715          BALR  14,15
000044BE                                    6716 @@gen_label335 DS    0H
                                                                                                                           Page  136 
  Active Usings: @REGION_1511_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000044BE                                    6717 @L705    DS    0H
                                            6718 * ***
                                            6719 * ***      do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x20)))) { do { \
                                            6720 * char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlcpy(_\
                                            6721 * logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkb)->rkb\
                                            6722 * _logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rkb_rk\
                                            6723 * , _logname, 7, (0x20), "BUFQ", "Updating %d buffers on connection re\
                                            6724 * set", rd_atomic32_get(&rkbufq->rkbq_cnt)); } while (0); } } while (0\
                                            6725 * );
000044BE                                    6726 @L706    DS    0H
000044BE E3F0 3FD0 0004          00000FD0   6727          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
000044C4 9120 F323      00000323 00000020   6728          TM    803(15),32
000044C8 4780 C198               000045A0   6729          BZ    @L709
000044CC                                    6730 @L710    DS    0H
000044CC A729 1638               00001638   6731          LGHI  2,5688      ; 5688
000044D0 41F2 3000               00000000   6732          LA    15,0(2,3)
000044D4 E3F0 D1A8 0024          000001A8   6733          STG   15,424(0,13)
000044DA 4110 D1A8               000001A8   6734          LA    1,424(0,13)
000044DE E3F0 C1D8 0004          000045E0   6735          LG    15,@lit_1511_205 ; mtx_lock
000044E4                                    6736 @@gen_label337 DS    0H
000044E4 05EF                               6737          BALR  14,15
000044E6                                    6738 @@gen_label338 DS    0H
000044E6 41F0 D0A8               000000A8   6739          LA    15,168(0,13)
000044EA E3F0 D1A8 0024          000001A8   6740          STG   15,424(0,13)
000044F0 A7F9 1630               00001630   6741          LGHI  15,5680     ; 5680
000044F4 E3FF 3000 0004          00000000   6742          LG    15,0(15,3)
000044FA E3F0 D1B0 0024          000001B0   6743          STG   15,432(0,13)
00004500 E548 D1B8 0100          000001B8   6744          MVGHI 440(13),256
00004506 4110 D1A8               000001A8   6745          LA    1,424(0,13)
0000450A E3F0 C1E0 0004          000045E8   6746          LG    15,@lit_1511_207 ; rd_strlcpy
00004510                                    6747 @@gen_label339 DS    0H
00004510 05EF                               6748          BALR  14,15
00004512                                    6749 @@gen_label340 DS    0H
00004512 41F2 3000               00000000   6750          LA    15,0(2,3)
00004516 E3F0 D1A8 0024          000001A8   6751          STG   15,424(0,13)
0000451C 4110 D1A8               000001A8   6752          LA    1,424(0,13)
00004520 E3F0 C1E8 0004          000045F0   6753          LG    15,@lit_1511_209 ; mtx_unlock
00004526                                    6754 @@gen_label341 DS    0H
00004526 05EF                               6755          BALR  14,15
00004528                                    6756 @@gen_label342 DS    0H
00004528 41F0 4010               00000010   6757          LA    15,16(0,4)
0000452C E3F0 D1A8 0024          000001A8   6758          STG   15,424(0,13)
00004532 4110 D1A8               000001A8   6759          LA    1,424(0,13)
00004536 E3F0 C1F0 0004          000045F8   6760          LG    15,@lit_1511_210 ; rd_atomic32_get
0000453C                                    6761 @@gen_label343 DS    0H
0000453C 05EF                               6762          BALR  14,15
0000453E                                    6763 @@gen_label344 DS    0H
0000453E E310 3FD0 0004          00000FD0   6764          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00004544 4110 1210               00000210   6765          LA    1,528(0,1)
00004548 E310 D1A8 0024          000001A8   6766          STG   1,424(0,13)
0000454E E310 3FD0 0004          00000FD0   6767          LG    1,4048(0,3)
00004554 E310 D1B0 0024          000001B0   6768          STG   1,432(0,13)
                                                                                                                           Page  137 
  Active Usings: @REGION_1511_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000455A 4110 D0A8               000000A8   6769          LA    1,168(0,13)
0000455E E310 D1B8 0024          000001B8   6770          STG   1,440(0,13)
00004564 E548 D1C0 0007          000001C0   6771          MVGHI 448(13),7
0000456A E548 D1C8 0020          000001C8   6772          MVGHI 456(13),32
00004570 E310 C1D0 0004          000045D8   6773          LG    1,@lit_1511_201
00004576 4120 114C               0000014C   6774          LA    2,332(0,1)
0000457A E320 D1D0 0024          000001D0   6775          STG   2,464(0,13)
00004580 4110 1170               00000170   6776          LA    1,368(0,1)
00004584 E310 D1D8 0024          000001D8   6777          STG   1,472(0,13)
0000458A B914 00FF                          6778          LGFR  15,15
0000458E E3F0 D1E0 0024          000001E0   6779          STG   15,480(0,13)
00004594 4110 D1A8               000001A8   6780          LA    1,424(0,13)
00004598 E3F0 C1F8 0004          00004600   6781          LG    15,@lit_1511_212 ; rd_kafka_log0
0000459E                                    6782 @@gen_label345 DS    0H
0000459E 05EF                               6783          BALR  14,15
000045A0                                    6784 @@gen_label346 DS    0H
000045A0                                    6785 @L709    DS    0H
                                            6786 * ***
                                            6787 * ***
                                            6788 * ***
                                            6789 * ***      for ((rkbuf) = ((&rkbufq->rkbq_bufs)->tqh_first); (rkbuf) !\
                                            6790 * = (((void *)0)) && ((tmp) = ((rkbuf)->rkbuf_link .tqe_next), 1); (rk\
                                            6791 * buf) = (tmp)) {
000045A0 E320 4000 0004          00000000   6792          LG    2,0(0,4)    ; rkbufq
000045A6 47F0 C2D0               000046D8   6793          B     @L714
000045B0                                    6794          DS    0D
000045B0 000001E8                           6795 @FRAMESIZE_1511 DC F'488'
000045B4 00000000
000045B8 0000000000000B18                   6796 @lit_1511_199 DC AD(rd_clock)
000045C0 0000000000000000                   6797 @lit_1511_200 DC AD(thrd_is_current)
000045C8 0000000000000000                   6798 @lit_1511_203 DC AD(rd_kafka_crash)
000045D0 00000000000054D8                   6799 @lit_1511_202 DC AD(@DATA)
000045D8 0000000000005722                   6800 @lit_1511_201 DC AD(@strings@)
000045E0 0000000000000000                   6801 @lit_1511_205 DC AD(mtx_lock)
000045E8 0000000000000FC0                   6802 @lit_1511_207 DC AD(rd_strlcpy)
000045F0 0000000000000000                   6803 @lit_1511_209 DC AD(mtx_unlock)
000045F8 00000000000005F0                   6804 @lit_1511_210 DC AD(rd_atomic32_get)
00004600 0000000000000000                   6805 @lit_1511_212 DC AD(rd_kafka_log0)
00004608 0000000000003BB8                   6806 @lit_1511_213 DC AD(rd_kafka_bufq_deq)
00004610 0000000000005128                   6807 @lit_1511_214 DC AD(rd_kafka_buf_callback)
00004618 0000000000000000                   6808 @lit_1511_215 DC AD(rd_slice_seek)
00004620 0000000000004B70                   6809 @lit_1511_216 DC AD(rd_kafka_buf_calc_timeout)
                                            6810 * ***         switch (rkbuf->rkbuf_reqhdr.ApiKey)
                                            6811 * ***         {
                                            6812 * ***         case 18:
                                            6813 * ***         case 17:
00004628                                    6814 @L721    DS    0H
                                            6815 * ***            rd_kafka_bufq_deq(rkbufq, rkbuf);
00004628 E340 D1A8 0024          000001A8   6816          STG   4,424(0,13)
0000462E E320 D1B0 0024          000001B0   6817          STG   2,432(0,13)
00004634 4110 D1A8               000001A8   6818          LA    1,424(0,13)
00004638 E3F0 C200 0004          00004608   6819          LG    15,@lit_1511_213 ; rd_kafka_bufq_deq
                                                                                                                           Page  138 
  Active Usings: @REGION_1511_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000463E                                    6820 @@gen_label347 DS    0H
0000463E 05EF                               6821          BALR  14,15
00004640                                    6822 @@gen_label348 DS    0H
                                            6823 * ***            rd_kafka_buf_callback(rkb->rkb_rk, rkb,
                                            6824 * ***                        RD_KAFKA_RESP_ERR__DESTROY,
                                            6825 * ***                        ((void *)0), rkbuf);
00004640 E3F0 3FD0 0004          00000FD0   6826          LG    15,4048(0,3)
00004646 E3F0 D1A8 0024          000001A8   6827          STG   15,424(0,13)
0000464C E330 D1B0 0024          000001B0   6828          STG   3,432(0,13)
00004652 E548 D1B8 FF3B          000001B8   6829          MVGHI 440(13),-197
00004658 D707 D1C0 D1C0 000001C0 000001C0   6830          XC    448(8,13),448(13)
0000465E E320 D1C8 0024          000001C8   6831          STG   2,456(0,13)
00004664 4110 D1A8               000001A8   6832          LA    1,424(0,13)
00004668 E3F0 C208 0004          00004610   6833          LG    15,@lit_1511_214 ; rd_kafka_buf_callback
0000466E                                    6834 @@gen_label349 DS    0H
0000466E 05EF                               6835          BALR  14,15
00004670                                    6836 @@gen_label350 DS    0H
                                            6837 * ***            break;
00004670 47F0 C2CC               000046D4   6838          B     @L719
                                            6839 * ***                   default:
                                            6840 * ***
                                            6841 * ***                           rd_slice_seek(&rkbuf->rkbuf_reader, 0)\
                                            6842 * ;
00004674                                    6843 @L722    DS    0H
00004674 41F0 2078               00000078   6844          LA    15,120(0,2)
00004678 E3F0 D1A8 0024          000001A8   6845          STG   15,424(0,13)
0000467E D707 D1B0 D1B0 000001B0 000001B0   6846          XC    432(8,13),432(13)
00004684 4110 D1A8               000001A8   6847          LA    1,424(0,13)
00004688 E3F0 C210 0004          00004618   6848          LG    15,@lit_1511_215 ; rd_slice_seek
0000468E                                    6849 @@gen_label351 DS    0H
0000468E 05EF                               6850          BALR  14,15
00004690                                    6851 @@gen_label352 DS    0H
                                            6852 * ***                           rkbuf->rkbuf_corrid = 0;
00004690 E54C 2010 0000          00000010   6853          MVHI  16(2),0     ; offset of rkbuf_corrid in rd_kafka_buf_s
                                            6854 * ***
                                            6855 * ***                           rd_kafka_buf_calc_timeout(rkb->rkb_rk,\
                                            6856 *  rkbuf, now);
00004696 E3F0 3FD0 0004          00000FD0   6857          LG    15,4048(0,3)
0000469C E3F0 D1A8 0024          000001A8   6858          STG   15,424(0,13)
000046A2 E320 D1B0 0024          000001B0   6859          STG   2,432(0,13)
000046A8 E360 D1B8 0024          000001B8   6860          STG   6,440(0,13)
000046AE 4110 D1A8               000001A8   6861          LA    1,424(0,13)
000046B2 E3F0 C218 0004          00004620   6862          LG    15,@lit_1511_216 ; rd_kafka_buf_calc_timeout
000046B8                                    6863 @@gen_label353 DS    0H
000046B8 05EF                               6864          BALR  14,15
000046BA                                    6865 @@gen_label354 DS    0H
                                            6866 * ***                           break;
000046BA 47F0 C2CC               000046D4   6867          B     @L719
                                            6868 * ***         }
000046BE                                    6869 @L718    DS    0H
000046BE 48F0 20B8               000000B8   6870          LH    15,184(0,2)
000046C2 A7FA FFEF               0000FFEF   6871          AHI   15,-17
                                                                                                                           Page  139 
  Active Usings: @REGION_1511_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000046C6 C2FF 0000 0001                     6872          CLFI  15,X'00000001'
000046CC 47D0 C220               00004628   6873          BNH   @L721
000046D0 47F0 C26C               00004674   6874          B     @L722
000046D4                                    6875 @L719    DS    0H
                                            6876 * ***           }
000046D4 B904 0025                          6877          LGR   2,5         ; rkbuf
000046D8                                    6878 @L714    DS    0H
000046D8 B902 00F2                          6879          LTGR  15,2
000046DC 4780 C2E2               000046EA   6880          BE    @L715
000046E0 E350 2000 0004          00000000   6881          LG    5,0(0,2)    ; rkbuf
000046E6 47F0 C2B6               000046BE   6882          B     @L718
000046EA                                    6883 @L715    DS    0H
                                            6884 * ***   }
000046EA                                    6885 @ret_lab_1511 DS 0H
                                            6886 * * **** Start of Epilogue
                                            6887          DCCEPIL
000046EA                                    6888+         ds 0h                                                          01-DCCEP
                                            6889+* Epilog
000046EA D707 D088 D088 00000088 00000088   6890+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000046F0 E3D0 D080 0004          00000080   6891+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000046F6 E3C0 D090 0004          00000090   6892+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000046FC E3B0 C018 0004          00000018   6893+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004702 E3C0 B010 0021          00000010   6894+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004708 E3E0 D008 0004          00000008   6895+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000470E EB1C D020 0004          00000020   6896+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004714 078E                               6897+         bcr 8,14                if same dsab, just return              01-DCCEP
00004716 E3F0 D010 0024          00000010   6898+         stg 15,16(0,13)         save return code                       01-DCCEP
0000471C E300 D018 0024          00000018   6899+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004722 E3F0 D090 0004          00000090   6900+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004728 E3F0 F018 0004          00000018   6901+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000472E 47F0 F040               00000040   6902+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6903+* End of Epilog
                                            6904 * * **** End of Epilogue
                                            6905          DROP  12
                                            6906 *
                                            6907 *   DSECT for automatic variables in "rd_kafka_bufq_connection_reset"
                                            6908 *      (FUNCTION #1511)
                                            6909 *
00000000                00000000 000001A8   6910 @AUTO#rd_kafka_bufq_connection_reset DSECT
00000000                                    6911          DS    XL168
000000A8                                    6912 rd_kafka_bufq_connection_reset#_logname#4 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   6913          ORG   @AUTO#rd_kafka_bufq_connection_reset+168
000000A8                                    6914 rd_kafka_bufq_connection_reset#now#0 DS 8XL1 ; now
                                            6915 *
00004732                00000000 000054D2   6916 @CODE    CSECT
                                            6917 *
                                            6918 *
                                            6919 *
                                            6920 * ....... start of rd_kafka_bufq_dump
                                            6921 rd_kafka_bufq_dump ALIAS X'99846D92818692816D82A486986D84A49497'
00004732                                    6922 @LNAME1512 DS  0H
00004732 00000012                           6923          DC    X'00000012'
                                                                                                                           Page  140 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004736 99846D9281869281                   6924          DC    C'rd_kafka_bufq_dump'
00004748 00                                 6925          DC    X'00'
                                            6926 rd_kafka_bufq_dump DCCPRLG CINDEX=1512,BASER=12,FRAME=544,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1512
                                            6927          macro
                                            6928          dccextrn &m
                                            6929          gblc    &$dccext(1000)
                                            6930          gbla    &$dccexti
                                            6931          lcla    &i
                                            6932 &$dccext(&$dccexti+1) setc    '&m'
                                            6933 &i       seta    1
                                            6934 .loop    aif    (&i gt &$dccexti).around
                                            6935          aif    ('&$dccext(&i)' eq '&m').getout
                                            6936 &i       seta    &i+1
                                            6937          ago     .loop
                                            6938 .around  anop
                                            6939 &$dccexti seta &$dccexti+1
                                            6940          extrn  &m
                                            6941 .getout  anop
                                            6942          mend
00004750                                    6943+$eye0140    ds    0d                                                    02-DCCCA
00004750 C4C3C3                             6944+         dc cl3'DCC'                                                    02-DCCCA
00004753 01                                 6945+         dc xl1'01' format one                                          02-DCCCA
00004754 00000000                           6946+         dc a(0)                                                        02-DCCCA
00004758 00000000000047C2                   6947+         dc ad(@PER_1512)                                               02-DCCCA
00004760 0000000000000220                   6948+         dc ad(544)                                                     02-DCCCA
00004768 0000000000000000                   6949+         dc ad(0)                                                       02-DCCCA
00004770 0000000000001000                   6950+         dc ad(4096)                                                    02-DCCCA
00004778 20                                 6951+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004779 03                                 6952+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000477A 03                                 6953+         dc al1(3)                                                      02-DCCCA
0000477B 08                                 6954+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000477C 00                                 6955+         dc bl.8'00000000'                                              02-DCCCA
0000477D 000000                             6956+         dc al3(0)                                                      02-DCCCA
00004780 0000000000004732                   6957+         dc ad(@LNAME1512)                                              02-DCCCA
00004788                                    6958+         ds 0d                                                          02-DCCCA
00004788 0000000000004750                   6959+         dc ad($eye0140)                                                02-DCCCA
00004790 0000000000000000                   6960+         dc ad(0)                                                       02-DCCCA
00004798                                    6961+         ds    0d                                                       01-DCCPR
                                            6962+         entry rd_kafka_bufq_dump                                       01-DCCPR
00004798                                    6963+rd_kafka_bufq_dump ds 0d                                                01-DCCPR
00004798                                    6964+@REGION_1512_1 ds 0h                                                    01-DCCPR
00004798 EBEC D008 0024          00000008   6965+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000479E E3E0 D088 0004          00000088   6966+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000047A4 E3C0 D090 0004          00000090   6967+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000047AA B904 002E                          6968+         lgr   2,14                copy addr of our savearea            01-DCCPR
000047AE E3B0 C018 0004          00000018   6969+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000047B4 A7EB 0220               00000220   6970+         aghi  14,544              increase by frame size               01-DCCPR
000047B8 E3E0 C020 0021          00000020   6971+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000047BE 4720 B020               00000020   6972+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000047C2                                    6973+@PER_1512 ds   0h                                                       01-DCCPR
000047C2 EBDE 2080 0024          00000080   6974+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000047C8 E3C0 2090 0024          00000090   6975+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000047CE B904 00D2                          6976+         lgr   13,2                set real frame pointer               01-DCCPR
000047D2 B904 00CF                          6977+         lgr   12,15               set base reg                         01-DCCPR
                        00004798            6978+         using @REGION_1512_1,12                                        01-DCCPR
000047D6 B904 0051                          6979          LGR   5,1         ; ptr to parm area
                                            6980 * ******* End of Prologue
                                            6981 * *
000047DA E330 5000 0004          00000000   6982          LG    3,0(0,5)    ; rkb
                                            6983 * ***           rd_kafka_buf_t *rkbuf;
                                            6984 * ***           int cnt = rd_atomic32_get(&(rkbq)->rkbq_cnt);
000047E0 E3F0 5010 0004          00000010   6985          LG    15,16(0,5)  ; rkbq
000047E6 41F0 F010               00000010   6986          LA    15,16(0,15)
000047EA E3F0 D1A8 0024          000001A8   6987          STG   15,424(0,13)
000047F0 4110 D1A8               000001A8   6988          LA    1,424(0,13)
000047F4 E3F0 C160 0004          000048F8   6989          LG    15,@lit_1512_218 ; rd_atomic32_get
000047FA                                    6990 @@gen_label356 DS    0H
000047FA 05EF                               6991          BALR  14,15
000047FC                                    6992 @@gen_label357 DS    0H
000047FC 122F                               6993          LTR   2,15
                                            6994 * ***           rd_ts_t now;
                                            6995 * ***
                                            6996 * ***           if (!cnt)
000047FE 4780 C328               00004AC0   6997          BZ    @ret_lab_1512
                                            6998 * ***                   return;
00004802                                    6999 @L723    DS    0H
                                            7000 * ***
                                            7001 * ***           now = rd_clock();
00004802 E3F0 C168 0004          00004900   7002          LG    15,@lit_1512_219 ; rd_clock
00004808                                    7003 @@gen_label359 DS    0H
00004808 05EF                               7004          BALR  14,15
0000480A                                    7005 @@gen_label360 DS    0H
0000480A B904 004F                          7006          LGR   4,15
                                            7007 * ***
                                            7008 * ***           do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x2)))) { d\
                                            7009 * o { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlc\
                                            7010 * py(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkb)-\
                                            7011 * >rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rk\
                                            7012 * b_rk, _logname, 7, (0x2), fac, "bufq with %d buffer(s):", cnt); } wh\
                                            7013 * ile (0); } } while (0);
0000480E                                    7014 @L724    DS    0H
0000480E E3F0 3FD0 0004          00000FD0   7015          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00004814 9102 F323      00000323 00000002   7016          TM    803(15),2
00004818 4780 C144               000048DC   7017          BZ    @L727
0000481C                                    7018 @L728    DS    0H
0000481C A769 1638               00001638   7019          LGHI  6,5688      ; 5688
00004820 41F6 3000               00000000   7020          LA    15,0(6,3)
00004824 E3F0 D1A8 0024          000001A8   7021          STG   15,424(0,13)
0000482A 4110 D1A8               000001A8   7022          LA    1,424(0,13)
0000482E E3F0 C170 0004          00004908   7023          LG    15,@lit_1512_221 ; mtx_lock
00004834                                    7024 @@gen_label362 DS    0H
00004834 05EF                               7025          BALR  14,15
00004836                                    7026 @@gen_label363 DS    0H
                                                                                                                           Page  142 
  Active Usings: @REGION_1512_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004836 41F0 D0A8               000000A8   7027          LA    15,168(0,13)
0000483A E3F0 D1A8 0024          000001A8   7028          STG   15,424(0,13)
00004840 A7F9 1630               00001630   7029          LGHI  15,5680     ; 5680
00004844 E3FF 3000 0004          00000000   7030          LG    15,0(15,3)
0000484A E3F0 D1B0 0024          000001B0   7031          STG   15,432(0,13)
00004850 E548 D1B8 0100          000001B8   7032          MVGHI 440(13),256
00004856 4110 D1A8               000001A8   7033          LA    1,424(0,13)
0000485A E3F0 C178 0004          00004910   7034          LG    15,@lit_1512_223 ; rd_strlcpy
00004860                                    7035 @@gen_label364 DS    0H
00004860 05EF                               7036          BALR  14,15
00004862                                    7037 @@gen_label365 DS    0H
00004862 41F6 3000               00000000   7038          LA    15,0(6,3)
00004866 E3F0 D1A8 0024          000001A8   7039          STG   15,424(0,13)
0000486C 4110 D1A8               000001A8   7040          LA    1,424(0,13)
00004870 E3F0 C180 0004          00004918   7041          LG    15,@lit_1512_225 ; mtx_unlock
00004876                                    7042 @@gen_label366 DS    0H
00004876 05EF                               7043          BALR  14,15
00004878                                    7044 @@gen_label367 DS    0H
00004878 E3F0 3FD0 0004          00000FD0   7045          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
0000487E 41F0 F210               00000210   7046          LA    15,528(0,15)
00004882 E3F0 D1A8 0024          000001A8   7047          STG   15,424(0,13)
00004888 E3F0 3FD0 0004          00000FD0   7048          LG    15,4048(0,3)
0000488E E3F0 D1B0 0024          000001B0   7049          STG   15,432(0,13)
00004894 41F0 D0A8               000000A8   7050          LA    15,168(0,13)
00004898 E3F0 D1B8 0024          000001B8   7051          STG   15,440(0,13)
0000489E E548 D1C0 0007          000001C0   7052          MVGHI 448(13),7
000048A4 E548 D1C8 0002          000001C8   7053          MVGHI 456(13),2
000048AA E3F0 5008 0004          00000008   7054          LG    15,8(0,5)   ; fac
000048B0 E3F0 D1D0 0024          000001D0   7055          STG   15,464(0,13)
000048B6 E3F0 C190 0004          00004928   7056          LG    15,@lit_1512_226
000048BC 41F0 F198               00000198   7057          LA    15,408(0,15)
000048C0 E3F0 D1D8 0024          000001D8   7058          STG   15,472(0,13)
000048C6 B914 00F2                          7059          LGFR  15,2
000048CA E3F0 D1E0 0024          000001E0   7060          STG   15,480(0,13)
000048D0 4110 D1A8               000001A8   7061          LA    1,424(0,13)
000048D4 E3F0 C188 0004          00004920   7062          LG    15,@lit_1512_227 ; rd_kafka_log0
000048DA                                    7063 @@gen_label368 DS    0H
000048DA 05EF                               7064          BALR  14,15
000048DC                                    7065 @@gen_label369 DS    0H
000048DC                                    7066 @L727    DS    0H
                                            7067 * ***
                                            7068 * ***           for ((rkbuf) = ((&rkbq->rkbq_bufs)->tqh_first); (rkbuf\
                                            7069 * ) != (((void *)0)); (rkbuf) = ((rkbuf)->rkbuf_link .tqe_next)) {
000048DC E3F0 5010 0004          00000010   7070          LG    15,16(0,5)  ; rkbq
000048E2 E320 F000 0004          00000000   7071          LG    2,0(0,15)   ; rkbq
000048E8 47F0 C320               00004AB8   7072          B     @L732
000048F0                                    7073          DS    0D
000048F0 00000220                           7074 @FRAMESIZE_1512 DC F'544'
000048F4 00000000
000048F8 00000000000005F0                   7075 @lit_1512_218 DC AD(rd_atomic32_get)
00004900 0000000000000B18                   7076 @lit_1512_219 DC AD(rd_clock)
00004908 0000000000000000                   7077 @lit_1512_221 DC AD(mtx_lock)
                                                                                                                           Page  143 
  Active Usings: @REGION_1512_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004910 0000000000000FC0                   7078 @lit_1512_223 DC AD(rd_strlcpy)
00004918 0000000000000000                   7079 @lit_1512_225 DC AD(mtx_unlock)
00004920 0000000000000000                   7080 @lit_1512_227 DC AD(rd_kafka_log0)
00004928 0000000000005722                   7081 @lit_1512_226 DC AD(@strings@)
00004930 0000000000000DB0                   7082 @lit_1512_234 DC AD(rd_kafka_$Api$Key2str)
00004938 000003E8                           7083 @lit_1512_235 DC F'1000' 0x000003e8
                                            7084 * ***                   do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x2\
                                            7085 * )))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); \
                                            7086 * rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock\
                                            7087 * (&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (\
                                            7088 * rkb)->rkb_rk, _logname, 7, (0x2), fac, " Buffer %s (%" "zu" " bytes,\
                                            7089 *  corrid %" "d" ", " "connid %d, prio %d, retry %d in %lldms, " "time\
                                            7090 * out in %lldms)", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr.ApiKey), rk\
                                            7091 * buf->rkbuf_totlen, rkbuf->rkbuf_corrid, rkbuf->rkbuf_connid, rkbuf->\
                                            7092 * rkbuf_prio, rkbuf->rkbuf_retries, rkbuf->rkbuf_ts_retry ? (rkbuf->rk\
                                            7093 * buf_ts_retry - now) / 1000LL : 0, rkbuf->rkbuf_ts_timeout ? (rkbuf->\
                                            7094 * rkbuf_ts_timeout - now) / 1000LL : 0); } while (0); } } while (0);
0000493C                                    7095 @L735    DS    0H
0000493C E3F0 3FD0 0004          00000FD0   7096          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00004942 9102 F323      00000323 00000002   7097          TM    803(15),2
00004946 4780 C31A               00004AB2   7098          BZ    @L738
0000494A                                    7099 @L739    DS    0H
0000494A A769 1638               00001638   7100          LGHI  6,5688      ; 5688
0000494E 41F6 3000               00000000   7101          LA    15,0(6,3)
00004952 E3F0 D1A8 0024          000001A8   7102          STG   15,424(0,13)
00004958 4110 D1A8               000001A8   7103          LA    1,424(0,13)
0000495C E3F0 C170 0004          00004908   7104          LG    15,@lit_1512_221 ; mtx_lock
00004962                                    7105 @@gen_label371 DS    0H
00004962 05EF                               7106          BALR  14,15
00004964                                    7107 @@gen_label372 DS    0H
00004964 41F0 D0A8               000000A8   7108          LA    15,168(0,13)
00004968 E3F0 D1A8 0024          000001A8   7109          STG   15,424(0,13)
0000496E A7F9 1630               00001630   7110          LGHI  15,5680     ; 5680
00004972 E3FF 3000 0004          00000000   7111          LG    15,0(15,3)
00004978 E3F0 D1B0 0024          000001B0   7112          STG   15,432(0,13)
0000497E E548 D1B8 0100          000001B8   7113          MVGHI 440(13),256
00004984 4110 D1A8               000001A8   7114          LA    1,424(0,13)
00004988 E3F0 C178 0004          00004910   7115          LG    15,@lit_1512_223 ; rd_strlcpy
0000498E                                    7116 @@gen_label373 DS    0H
0000498E 05EF                               7117          BALR  14,15
00004990                                    7118 @@gen_label374 DS    0H
00004990 41F6 3000               00000000   7119          LA    15,0(6,3)
00004994 E3F0 D1A8 0024          000001A8   7120          STG   15,424(0,13)
0000499A 4110 D1A8               000001A8   7121          LA    1,424(0,13)
0000499E E3F0 C180 0004          00004918   7122          LG    15,@lit_1512_225 ; mtx_unlock
000049A4                                    7123 @@gen_label375 DS    0H
000049A4 05EF                               7124          BALR  14,15
000049A6                                    7125 @@gen_label376 DS    0H
000049A6 E3F0 20B8 0015          000000B8   7126          LGH   15,184(0,2)
000049AC E3F0 D1A8 0024          000001A8   7127          STG   15,424(0,13)
000049B2 4110 D1A8               000001A8   7128          LA    1,424(0,13)
000049B6 E3F0 C198 0004          00004930   7129          LG    15,@lit_1512_234 ; rd_kafka_ApiKey2str
                                                                                                                           Page  144 
  Active Usings: @REGION_1512_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000049BC                                    7130 @@gen_label377 DS    0H
000049BC 05EF                               7131          BALR  14,15
000049BE                                    7132 @@gen_label378 DS    0H
000049BE E310 2018 0002          00000018   7133          LTG   1,24(0,2)   ; offset of rkbuf_ts_retry in rd_kafka_buf_s
000049C4 4780 C248               000049E0   7134          BZ    @L742
000049C8 E310 2018 0004          00000018   7135          LG    1,24(0,2)   ; offset of rkbuf_ts_retry in rd_kafka_buf_s
000049CE B909 0014                          7136          SGR   1,4
000049D2 B904 0071                          7137          LGR   7,1
000049D6 E360 C1A0 001D          00004938   7138          DSGF  6,@lit_1512_235
000049DC 47F0 C24C               000049E4   7139          B     @L743
000049E0                                    7140 @L742    DS    0H
000049E0 A779 0000               00000000   7141          LGHI  7,0         ; 0
000049E4                                    7142 @L743    DS    0H
000049E4 E310 2160 0002          00000160   7143          LTG   1,352(0,2)  ; offset of rkbuf_ts_timeout in rd_kafka_buf*
                                                                _s
000049EA 4780 C26E               00004A06   7144          BZ    @L744
000049EE E310 2160 0004          00000160   7145          LG    1,352(0,2)  ; offset of rkbuf_ts_timeout in rd_kafka_buf*
                                                                _s
000049F4 B909 0014                          7146          SGR   1,4
000049F8 B904 0091                          7147          LGR   9,1
000049FC E380 C1A0 001D          00004938   7148          DSGF  8,@lit_1512_235
00004A02 47F0 C272               00004A0A   7149          B     @L745
00004A06                                    7150 @L744    DS    0H
00004A06 A799 0000               00000000   7151          LGHI  9,0         ; 0
00004A0A                                    7152 @L745    DS    0H
00004A0A E310 3FD0 0004          00000FD0   7153          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00004A10 4110 1210               00000210   7154          LA    1,528(0,1)
00004A14 E310 D1A8 0024          000001A8   7155          STG   1,424(0,13)
00004A1A E310 3FD0 0004          00000FD0   7156          LG    1,4048(0,3)
00004A20 E310 D1B0 0024          000001B0   7157          STG   1,432(0,13)
00004A26 4110 D0A8               000000A8   7158          LA    1,168(0,13)
00004A2A E310 D1B8 0024          000001B8   7159          STG   1,440(0,13)
00004A30 E548 D1C0 0007          000001C0   7160          MVGHI 448(13),7
00004A36 E548 D1C8 0002          000001C8   7161          MVGHI 456(13),2
00004A3C E310 5008 0004          00000008   7162          LG    1,8(0,5)    ; fac
00004A42 E310 D1D0 0024          000001D0   7163          STG   1,464(0,13)
00004A48 E310 C190 0004          00004928   7164          LG    1,@lit_1512_226
00004A4E 4110 11B0               000001B0   7165          LA    1,432(0,1)
00004A52 E310 D1D8 0024          000001D8   7166          STG   1,472(0,13)
00004A58 E3F0 D1E0 0024          000001E0   7167          STG   15,480(0,13)
00004A5E E3F0 20A8 0004          000000A8   7168          LG    15,168(0,2)
00004A64 E3F0 D1E8 0024          000001E8   7169          STG   15,488(0,13)
00004A6A E3F0 2010 0014          00000010   7170          LGF   15,16(0,2)
00004A70 E3F0 D1F0 0024          000001F0   7171          STG   15,496(0,13)
00004A76 E3F0 20A0 0014          000000A0   7172          LGF   15,160(0,2)
00004A7C E3F0 D1F8 0024          000001F8   7173          STG   15,504(0,13)
00004A82 E3F0 2024 0014          00000024   7174          LGF   15,36(0,2)
00004A88 E3F0 D200 0024          00000200   7175          STG   15,512(0,13)
00004A8E E3F0 2144 0014          00000144   7176          LGF   15,324(0,2)
00004A94 E3F0 D208 0024          00000208   7177          STG   15,520(0,13)
00004A9A E370 D210 0024          00000210   7178          STG   7,528(0,13)
00004AA0 E390 D218 0024          00000218   7179          STG   9,536(0,13)
                                                                                                                           Page  145 
  Active Usings: @REGION_1512_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004AA6 4110 D1A8               000001A8   7180          LA    1,424(0,13)
00004AAA E3F0 C188 0004          00004920   7181          LG    15,@lit_1512_227 ; rd_kafka_log0
00004AB0                                    7182 @@gen_label381 DS    0H
00004AB0 05EF                               7183          BALR  14,15
00004AB2                                    7184 @@gen_label382 DS    0H
00004AB2                                    7185 @L738    DS    0H
                                            7186 * ***   # 330 "C:\asgkafka\librdkafka\src\rdkafka_buf.c"
                                            7187 * ***           }
00004AB2 E320 2000 0004          00000000   7188          LG    2,0(0,2)    ; rkbuf
00004AB8                                    7189 @L732    DS    0H
00004AB8 B902 00F2                          7190          LTGR  15,2
00004ABC 4770 C1A4               0000493C   7191          BNE   @L735
                                            7192 * ***   }
00004AC0                                    7193 @ret_lab_1512 DS 0H
                                            7194 * * **** Start of Epilogue
                                            7195          DCCEPIL
00004AC0                                    7196+         ds 0h                                                          01-DCCEP
                                            7197+* Epilog
00004AC0 D707 D088 D088 00000088 00000088   7198+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004AC6 E3D0 D080 0004          00000080   7199+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004ACC E3C0 D090 0004          00000090   7200+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004AD2 E3B0 C018 0004          00000018   7201+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004AD8 E3C0 B010 0021          00000010   7202+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004ADE E3E0 D008 0004          00000008   7203+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004AE4 EB1C D020 0004          00000020   7204+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004AEA 078E                               7205+         bcr 8,14                if same dsab, just return              01-DCCEP
00004AEC E3F0 D010 0024          00000010   7206+         stg 15,16(0,13)         save return code                       01-DCCEP
00004AF2 E300 D018 0024          00000018   7207+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004AF8 E3F0 D090 0004          00000090   7208+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004AFE E3F0 F018 0004          00000018   7209+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B04 47F0 F040               00000040   7210+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7211+* End of Epilog
                                            7212 * * **** End of Epilogue
                                            7213          DROP  12
                                            7214 *
                                            7215 *   DSECT for automatic variables in "rd_kafka_bufq_dump"
                                            7216 *      (FUNCTION #1512)
                                            7217 *
00000000                00000000 000001A8   7218 @AUTO#rd_kafka_bufq_dump DSECT
00000000                                    7219          DS    XL168
000000A8                                    7220 rd_kafka_bufq_dump#_logname#7 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   7221          ORG   @AUTO#rd_kafka_bufq_dump+168
000000A8                                    7222 rd_kafka_bufq_dump#_logname#3 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   7223          ORG   @AUTO#rd_kafka_bufq_dump+168
000000A8                                    7224 rd_kafka_bufq_dump#now#0 DS 8XL1 ; now
000000B0                000000B0 000000A8   7225          ORG   @AUTO#rd_kafka_bufq_dump+168
000000A8                                    7226 rd_kafka_bufq_dump#cnt#0 DS 1F ; cnt
                                            7227 *
00004B08                00000000 000054D2   7228 @CODE    CSECT
                                            7229 *
                                            7230 *
                                            7231 *
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7232 * ....... start of rd_kafka_buf_calc_timeout
                                            7233 rd_kafka_buf_calc_timeout ALIAS X'99846D92818692816D82A4866D838193836DA*
                                                                389948596A4A3'
00004B08                                    7234 @LNAME1499 DS  0H
00004B08 00000019                           7235          DC    X'00000019'
00004B0C 99846D9281869281                   7236          DC    C'rd_kafka_buf_calc_timeout'
00004B25 00                                 7237          DC    X'00'
                                            7238 rd_kafka_buf_calc_timeout DCCPRLG CINDEX=1499,BASER=12,FRAME=176,SAVEAR*
                                                                EA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1499
                                            7239          macro
                                            7240          dccextrn &m
                                            7241          gblc    &$dccext(1000)
                                            7242          gbla    &$dccexti
                                            7243          lcla    &i
                                            7244 &$dccext(&$dccexti+1) setc    '&m'
                                            7245 &i       seta    1
                                            7246 .loop    aif    (&i gt &$dccexti).around
                                            7247          aif    ('&$dccext(&i)' eq '&m').getout
                                            7248 &i       seta    &i+1
                                            7249          ago     .loop
                                            7250 .around  anop
                                            7251 &$dccexti seta &$dccexti+1
                                            7252          extrn  &m
                                            7253 .getout  anop
                                            7254          mend
00004B28                                    7255+$eye0143    ds    0d                                                    02-DCCCA
00004B28 C4C3C3                             7256+         dc cl3'DCC'                                                    02-DCCCA
00004B2B 01                                 7257+         dc xl1'01' format one                                          02-DCCCA
00004B2C 00000000                           7258+         dc a(0)                                                        02-DCCCA
00004B30 0000000000000000                   7259+         dc ad(0)                                                       02-DCCCA
00004B38 00000000000000B0                   7260+         dc ad(176)                                                     02-DCCCA
00004B40 0000000000000000                   7261+         dc ad(0)                                                       02-DCCCA
00004B48 0000000000001000                   7262+         dc ad(4096)                                                    02-DCCCA
00004B50 20                                 7263+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B51 03                                 7264+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B52 03                                 7265+         dc al1(3)                                                      02-DCCCA
00004B53 08                                 7266+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B54 00                                 7267+         dc bl.8'00000000'                                              02-DCCCA
00004B55 000000                             7268+         dc al3(0)                                                      02-DCCCA
00004B58 0000000000004B08                   7269+         dc ad(@LNAME1499)                                              02-DCCCA
00004B60                                    7270+         ds 0d                                                          02-DCCCA
00004B60 0000000000004B28                   7271+         dc ad($eye0143)                                                02-DCCCA
00004B68 0000000000000000                   7272+         dc ad(0)                                                       02-DCCCA
00004B70                                    7273+         ds    0d                                                       01-DCCPR
                                            7274+         entry rd_kafka_buf_calc_timeout                                01-DCCPR
00004B70                                    7275+rd_kafka_buf_calc_timeout ds 0d                                         01-DCCPR
00004B70                                    7276+@REGION_1499_1 ds 0h                                                    01-DCCPR
00004B70 EBEC D008 0024          00000008   7277+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004B76 B904 00CF                          7278+         lgr   12,15               set base reg                         01-DCCPR
                        00004B70            7279+         using @REGION_1499_1,12                                        01-DCCPR
                                            7280 * ******* End of Prologue
                                            7281 * *
                                                                                                                           Page  147 
  Active Usings: @REGION_1499_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7282 * ***           if (((rkbuf->rkbuf_rel_timeout))) {
00004B7A E3F0 1008 0004          00000008   7283          LG    15,8(0,1)   ; rkbuf
00004B80 E320 F170 0012          00000170   7284          LT    2,368(0,15) ; offset of rkbuf_rel_timeout in rd_kafka_bu*
                                                                f_s
00004B86 4780 C036               00004BA6   7285          BZ    @L746
                                            7286 * ***
                                            7287 * ***
                                            7288 * ***
                                            7289 * ***                   rkbuf->rkbuf_ts_timeout = now + rkbuf->rkbuf_r\
                                            7290 * el_timeout * 1000;
00004B8A E310 1010 0004          00000010   7291          LG    1,16(0,1)   ; now
00004B90 5820 F170               00000170   7292          L     2,368(0,15) ; offset of rkbuf_rel_timeout in rd_kafka_bu*
                                                                f_s
00004B94 A72C 03E8               000003E8   7293          MHI   2,1000
00004B98 B918 0012                          7294          AGFR  1,2
00004B9C E310 F160 0024          00000160   7295          STG   1,352(0,15) ; offset of rkbuf_ts_timeout in rd_kafka_buf*
                                                                _s
                                            7296 * ***           } else if (!rkbuf->rkbuf_force_timeout) {
00004BA2 47F0 C084               00004BF4   7297          B     @ret_lab_1499
00004BA6                                    7298 @L746    DS    0H
00004BA6 9500 F174      00000174 00000000   7299          CLI   372(15),0
00004BAA 4770 C078               00004BE8   7300          BNE   @L748
                                            7301 * ***
                                            7302 * ***                   rd_ts_t sock_timeout = now +
                                            7303 * ***                           rk->rk_conf.socket_timeout_ms * 1000;
00004BAE E320 1010 0004          00000010   7304          LG    2,16(0,1)   ; now
00004BB4 E310 1000 0004          00000000   7305          LG    1,0(0,1)    ; rk
00004BBA 5810 132C               0000032C   7306          L     1,812(0,1)  ; offset of socket_timeout_ms in rd_kafka_co*
                                                                nf_s
00004BBE A71C 03E8               000003E8   7307          MHI   1,1000
00004BC2 B918 0021                          7308          AGFR  2,1
                                            7309 * ***
                                            7310 * ***                   rkbuf->rkbuf_ts_timeout =
                                            7311 * ***                           ((sock_timeout) < (rkbuf->rkbuf_abs_ti\
                                            7312 * meout) ? (sock_timeout) : (rkbuf->rkbuf_abs_timeout));
00004BC6 E320 F168 0020          00000168   7313          CG    2,360(0,15)
00004BCC 47B0 C068               00004BD8   7314          BNL   @L749
00004BD0 B904 0012                          7315          LGR   1,2
00004BD4 47F0 C06E               00004BDE   7316          B     @L750
00004BD8                                    7317 @L749    DS    0H
00004BD8 E310 F168 0004          00000168   7318          LG    1,360(0,15) ; offset of rkbuf_abs_timeout in rd_kafka_bu*
                                                                f_s
00004BDE                                    7319 @L750    DS    0H
00004BDE E310 F160 0024          00000160   7320          STG   1,352(0,15)
                                            7321 * ***           } else {
00004BE4 47F0 C084               00004BF4   7322          B     @ret_lab_1499
00004BE8                                    7323 @L748    DS    0H
                                            7324 * ***
                                            7325 * ***                   rkbuf->rkbuf_ts_timeout = rkbuf->rkbuf_abs_tim\
                                            7326 * eout;
00004BE8 E310 F168 0004          00000168   7327          LG    1,360(0,15) ; offset of rkbuf_abs_timeout in rd_kafka_bu*
                                                                f_s
                                                                                                                           Page  148 
  Active Usings: @REGION_1499_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004BEE E310 F160 0024          00000160   7328          STG   1,352(0,15) ; offset of rkbuf_ts_timeout in rd_kafka_buf*
                                                                _s
                                            7329 * ***           }
00004BF4                                    7330 @L751    DS    0H
                                            7331 * ***   }
00004BF4                                    7332 @L747    DS    0H
00004BF4                                    7333 @ret_lab_1499 DS 0H
                                            7334 * * **** Start of Epilogue
                                            7335          DCCEPIL
00004BF4                                    7336+         ds 0h                                                          01-DCCEP
                                            7337+* Epilog
                                            7338+* Epilog
00004BF4 E3E0 D008 0004          00000008   7339+         lg    14,8(,13) restore the reg                                01-DCCEP
00004BFA EB1C D020 0004          00000020   7340+         lmg   1,12,32(13)                                              01-DCCEP
00004C00 07FE                               7341+         br   14                                                        01-DCCEP
                                            7342+* End of Epilog
                                            7343 * * **** End of Epilogue
                                            7344          DROP  12
                                            7345 *
                                            7346 *   DSECT for automatic variables in "rd_kafka_buf_calc_timeout"
                                            7347 *      (FUNCTION #1499)
                                            7348 *
00000000                00000000 000000B0   7349 @AUTO#rd_kafka_buf_calc_timeout DSECT
00000000                                    7350          DS    XL168
000000A8                                    7351 rd_kafka_buf_calc_timeout#sock_timeout#2 DS 8XL1 ; sock_timeout
                                            7352 *
00004C02                00000000 000054D2   7353 @CODE    CSECT
                                            7354 *
                                            7355 *
                                            7356 *
                                            7357 * ....... start of rd_kafka_buf_retry
                                            7358 rd_kafka_buf_retry ALIAS X'99846D92818692816D82A4866D9985A399A8'
00004C02                                    7359 @LNAME1513 DS  0H
00004C02 00000012                           7360          DC    X'00000012'
00004C06 99846D9281869281                   7361          DC    C'rd_kafka_buf_retry'
00004C18 00                                 7362          DC    X'00'
                                            7363 rd_kafka_buf_retry DCCPRLG CINDEX=1513,BASER=12,FRAME=208,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1513
                                            7364          macro
                                            7365          dccextrn &m
                                            7366          gblc    &$dccext(1000)
                                            7367          gbla    &$dccexti
                                            7368          lcla    &i
                                            7369 &$dccext(&$dccexti+1) setc    '&m'
                                            7370 &i       seta    1
                                            7371 .loop    aif    (&i gt &$dccexti).around
                                            7372          aif    ('&$dccext(&i)' eq '&m').getout
                                            7373 &i       seta    &i+1
                                            7374          ago     .loop
                                            7375 .around  anop
                                            7376 &$dccexti seta &$dccexti+1
                                            7377          extrn  &m
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7378 .getout  anop
                                            7379          mend
00004C20                                    7380+$eye0146    ds    0d                                                    02-DCCCA
00004C20 C4C3C3                             7381+         dc cl3'DCC'                                                    02-DCCCA
00004C23 01                                 7382+         dc xl1'01' format one                                          02-DCCCA
00004C24 00000000                           7383+         dc a(0)                                                        02-DCCCA
00004C28 0000000000004C92                   7384+         dc ad(@PER_1513)                                               02-DCCCA
00004C30 00000000000000D0                   7385+         dc ad(208)                                                     02-DCCCA
00004C38 0000000000000000                   7386+         dc ad(0)                                                       02-DCCCA
00004C40 0000000000001000                   7387+         dc ad(4096)                                                    02-DCCCA
00004C48 20                                 7388+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004C49 03                                 7389+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004C4A 03                                 7390+         dc al1(3)                                                      02-DCCCA
00004C4B 08                                 7391+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004C4C 00                                 7392+         dc bl.8'00000000'                                              02-DCCCA
00004C4D 000000                             7393+         dc al3(0)                                                      02-DCCCA
00004C50 0000000000004C02                   7394+         dc ad(@LNAME1513)                                              02-DCCCA
00004C58                                    7395+         ds 0d                                                          02-DCCCA
00004C58 0000000000004C20                   7396+         dc ad($eye0146)                                                02-DCCCA
00004C60 0000000000000000                   7397+         dc ad(0)                                                       02-DCCCA
00004C68                                    7398+         ds    0d                                                       01-DCCPR
                                            7399+         entry rd_kafka_buf_retry                                       01-DCCPR
00004C68                                    7400+rd_kafka_buf_retry ds 0d                                                01-DCCPR
00004C68                                    7401+@REGION_1513_1 ds 0h                                                    01-DCCPR
00004C68 EBEC D008 0024          00000008   7402+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004C6E E3E0 D088 0004          00000088   7403+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004C74 E3C0 D090 0004          00000090   7404+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004C7A B904 002E                          7405+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004C7E E3B0 C018 0004          00000018   7406+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004C84 A7EB 00D0               000000D0   7407+         aghi  14,208              increase by frame size               01-DCCPR
00004C88 E3E0 C020 0021          00000020   7408+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004C8E 4720 B020               00000020   7409+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004C92                                    7410+@PER_1513 ds   0h                                                       01-DCCPR
00004C92 EBDE 2080 0024          00000080   7411+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004C98 E3C0 2090 0024          00000090   7412+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004C9E B904 00D2                          7413+         lgr   13,2                set real frame pointer               01-DCCPR
00004CA2 B904 00CF                          7414+         lgr   12,15               set base reg                         01-DCCPR
                        00004C68            7415+         using @REGION_1513_1,12                                        01-DCCPR
                                            7416 * ******* End of Prologue
                                            7417 * *
                                            7418 * ***           int incr_retry = ((rkbuf)->rkbuf_flags & 0x20) ? 1 : 0\
                                            7419 * ;
00004CA6 EB23 1000 0004          00000000   7420          LMG   2,3,0(1)    ; rkb
00004CAC 9120 3023      00000023 00000020   7421          TM    35(3),32
00004CB0 4780 C0A0               00004D08   7422          BZ    @L752
00004CB4 A748 0001               00000001   7423          LHI   4,1         ; 1
00004CB8 47F0 C0A4               00004D0C   7424          B     @L753
00004CC0                                    7425          DS    0D
00004CC0 000000D0                           7426 @FRAMESIZE_1513 DC F'208'
00004CC4 00000000
00004CC8 0000000000000C38                   7427 @lit_1513_244 DC AD(rd_buf_len)
00004CD0 0000000000000000                   7428 @lit_1513_247 DC AD(__assert)
                                                                                                                           Page  150 
  Active Usings: @REGION_1513_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004CD8 0000000000005722                   7429 @lit_1513_246 DC AD(@strings@)
00004CE0 00000000000054D8                   7430 @lit_1513_245 DC AD(@DATA)
00004CE8 00000000000005F0                   7431 @lit_1513_248 DC AD(rd_atomic32_get)
00004CF0 0000000000000B18                   7432 @lit_1513_250 DC AD(rd_clock)
00004CF8 0000000000000360                   7433 @lit_1513_252 DC AD(rd_atomic32_add)
00004D00 0000000000000000                   7434 @lit_1513_253 DC AD(rd_kafka_broker_buf_retry)
00004D08                                    7435 @L752    DS    0H
00004D08 A748 0000               00000000   7436          LHI   4,0         ; 0
00004D0C                                    7437 @L753    DS    0H
                                            7438 * ***
                                            7439 * ***
                                            7440 * ***           ((rd_buf_len(&rkbuf->rkbuf_buf) > 0) ? (void)0 : __ass\
                                            7441 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.c", 371, "\
                                            7442 * rd_buf_len(&rkbuf->rkbuf_buf) > 0"));
00004D0C 41F0 3028               00000028   7443          LA    15,40(0,3)
00004D10 E3F0 D0B0 0024          000000B0   7444          STG   15,176(0,13)
00004D16 4110 D0B0               000000B0   7445          LA    1,176(0,13)
00004D1A E3F0 C060 0004          00004CC8   7446          LG    15,@lit_1513_244 ; rd_buf_len
00004D20                                    7447 @@gen_label388 DS    0H
00004D20 05EF                               7448          BALR  14,15
00004D22                                    7449 @@gen_label389 DS    0H
00004D22 C2FE 0000 0000                     7450          CLGFI 15,X'00000000'
00004D28 4720 C100               00004D68   7451          BH    @L755
00004D2C                                    7452 @L754    DS    0H
00004D2C E3F0 C078 0004          00004CE0   7453          LG    15,@lit_1513_245
00004D32 41F0 F208               00000208   7454          LA    15,520(0,15)
00004D36 E3F0 D0B0 0024          000000B0   7455          STG   15,176(0,13)
00004D3C E3F0 C070 0004          00004CD8   7456          LG    15,@lit_1513_246
00004D42 4110 F09C               0000009C   7457          LA    1,156(0,15)
00004D46 E310 D0B8 0024          000000B8   7458          STG   1,184(0,13)
00004D4C E548 D0C0 0173          000000C0   7459          MVGHI 192(13),371
00004D52 41F0 F20E               0000020E   7460          LA    15,526(0,15)
00004D56 E3F0 D0C8 0024          000000C8   7461          STG   15,200(0,13)
00004D5C 4110 D0B0               000000B0   7462          LA    1,176(0,13)
00004D60 E3F0 C068 0004          00004CD0   7463          LG    15,@lit_1513_247 ; __assert
00004D66                                    7464 @@gen_label391 DS    0H
00004D66 05EF                               7465          BALR  14,15
00004D68                                    7466 @@gen_label392 DS    0H
00004D68                                    7467 @L755    DS    0H
                                            7468 * ***
                                            7469 * ***           if (((!rkb || rkb->rkb_source == RD_KAFKA_INTERNAL || \
                                            7470 * (rd_atomic32_get(&(rkb->rkb_rk)->rk_terminate) & 0x1) || rkbuf->rkbu\
                                            7471 * f_retries + incr_retry > rkbuf->rkbuf_max_retries)))
00004D68 B902 00F2                          7472          LTGR  15,2
00004D6C 4780 C144               00004DAC   7473          BZ    @L759
00004D70 E55C 2148 0002          00000148   7474          CHSI  328(2),2
00004D76 4780 C144               00004DAC   7475          BE    @L759
00004D7A                                    7476 @L756    DS    0H
00004D7A E3F0 2FD0 0004          00000FD0   7477          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00004D80 41F0 F970               00000970   7478          LA    15,2416(0,15)
00004D84 E3F0 D0B0 0024          000000B0   7479          STG   15,176(0,13)
00004D8A 4110 D0B0               000000B0   7480          LA    1,176(0,13)
                                                                                                                           Page  151 
  Active Usings: @REGION_1513_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004D8E E3F0 C080 0004          00004CE8   7481          LG    15,@lit_1513_248 ; rd_atomic32_get
00004D94                                    7482 @@gen_label395 DS    0H
00004D94 05EF                               7483          BALR  14,15
00004D96                                    7484 @@gen_label396 DS    0H
00004D96 A7F1 0001               00000001   7485          TML   15,1
00004D9A 4770 C144               00004DAC   7486          BNZ   @L759
00004D9E                                    7487 @L757    DS    0H
00004D9E 18F4                               7488          LR    15,4
00004DA0 5AF0 3144               00000144   7489          A     15,324(0,3)
00004DA4 59F0 3140               00000140   7490          C     15,320(0,3)
00004DA8 47D0 C14C               00004DB4   7491          BNH   @L758
00004DAC                                    7492 @L759    DS    0H
                                            7493 * ***
                                            7494 * ***
                                            7495 * ***
                                            7496 * ***
                                            7497 * ***                   return 0;
00004DAC A7F9 0000               00000000   7498          LGHI  15,0        ; 0
00004DB0 47F0 C1BA               00004E22   7499          B     @ret_lab_1513
00004DB4                                    7500 @L758    DS    0H
                                            7501 * ***
                                            7502 * ***
                                            7503 * ***           if (rkbuf->rkbuf_abs_timeout &&
00004DB4 E3F0 3168 0002          00000168   7504          LTG   15,360(0,3) ; offset of rkbuf_abs_timeout in rd_kafka_bu*
                                                                f_s
00004DBA 4780 C174               00004DDC   7505          BZ    @L760
                                            7506 * ***               rkbuf->rkbuf_abs_timeout < rd_clock())
00004DBE E350 3168 0004          00000168   7507          LG    5,360(0,3)  ; offset of rkbuf_abs_timeout in rd_kafka_bu*
                                                                f_s
00004DC4 E3F0 C088 0004          00004CF0   7508          LG    15,@lit_1513_250 ; rd_clock
00004DCA                                    7509 @@gen_label400 DS    0H
00004DCA 05EF                               7510          BALR  14,15
00004DCC                                    7511 @@gen_label401 DS    0H
00004DCC B920 005F                          7512          CGR   5,15
00004DD0 47B0 C174               00004DDC   7513          BNL   @L760
                                            7514 * ***                   return 0;
00004DD4 A7F9 0000               00000000   7515          LGHI  15,0        ; 0
00004DD8 47F0 C1BA               00004E22   7516          B     @ret_lab_1513
00004DDC                                    7517 @L760    DS    0H
                                            7518 * ***
                                            7519 * ***
                                            7520 * ***      rkbuf->rkbuf_ts_sent = 0;
00004DDC E548 3158 0000          00000158   7521          MVGHI 344(3),0    ; offset of rkbuf_ts_sent in rd_kafka_buf_s
                                            7522 * ***           rkbuf->rkbuf_ts_timeout = 0;
00004DE2 E548 3160 0000          00000160   7523          MVGHI 352(3),0    ; offset of rkbuf_ts_timeout in rd_kafka_buf*
                                                                _s
                                            7524 * ***      rkbuf->rkbuf_retries += incr_retry;
00004DE8 5A40 3144               00000144   7525          A     4,324(0,3)
00004DEC 5040 3144               00000144   7526          ST    4,324(0,3)
                                            7527 * ***      rd_atomic32_add(&(rkbuf)->rkbuf_refcnt, 1);
00004DF0 41F0 3108               00000108   7528          LA    15,264(0,3)
00004DF4 E3F0 D0B0 0024          000000B0   7529          STG   15,176(0,13)
                                                                                                                           Page  152 
  Active Usings: @REGION_1513_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004DFA E548 D0B8 0001          000000B8   7530          MVGHI 184(13),1
00004E00 4110 D0B0               000000B0   7531          LA    1,176(0,13)
00004E04 E3F0 C090 0004          00004CF8   7532          LG    15,@lit_1513_252 ; rd_atomic32_add
00004E0A                                    7533 @@gen_label403 DS    0H
00004E0A 05EF                               7534          BALR  14,15
00004E0C                                    7535 @@gen_label404 DS    0H
                                            7536 * ***      rd_kafka_broker_buf_retry(rkb, rkbuf);
00004E0C EB23 D0B0 0024          000000B0   7537          STMG  2,3,176(13)
00004E12 4110 D0B0               000000B0   7538          LA    1,176(0,13)
00004E16 E3F0 C098 0004          00004D00   7539          LG    15,@lit_1513_253 ; rd_kafka_broker_buf_retry
00004E1C                                    7540 @@gen_label405 DS    0H
00004E1C 05EF                               7541          BALR  14,15
00004E1E                                    7542 @@gen_label406 DS    0H
                                            7543 * ***      return 1;
00004E1E A7F9 0001               00000001   7544          LGHI  15,1        ; 1
                                            7545 * ***   }
00004E22                                    7546 @ret_lab_1513 DS 0H
                                            7547 * * **** Start of Epilogue
                                            7548          DCCEPIL
00004E22                                    7549+         ds 0h                                                          01-DCCEP
                                            7550+* Epilog
00004E22 D707 D088 D088 00000088 00000088   7551+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004E28 E3D0 D080 0004          00000080   7552+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004E2E E3C0 D090 0004          00000090   7553+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004E34 E3B0 C018 0004          00000018   7554+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004E3A E3C0 B010 0021          00000010   7555+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004E40 E3E0 D008 0004          00000008   7556+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004E46 EB1C D020 0004          00000020   7557+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004E4C 078E                               7558+         bcr 8,14                if same dsab, just return              01-DCCEP
00004E4E E3F0 D010 0024          00000010   7559+         stg 15,16(0,13)         save return code                       01-DCCEP
00004E54 E300 D018 0024          00000018   7560+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004E5A E3F0 D090 0004          00000090   7561+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004E60 E3F0 F018 0004          00000018   7562+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004E66 47F0 F040               00000040   7563+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7564+* End of Epilog
                                            7565 * * **** End of Epilogue
                                            7566          DROP  12
                                            7567 *
                                            7568 *   DSECT for automatic variables in "rd_kafka_buf_retry"
                                            7569 *      (FUNCTION #1513)
                                            7570 *
00000000                00000000 000000AC   7571 @AUTO#rd_kafka_buf_retry DSECT
00000000                                    7572          DS    XL168
000000A8                                    7573 rd_kafka_buf_retry#incr_retry#0 DS 1F ; incr_retry
                                            7574 *
00004E6A                00000000 000054D2   7575 @CODE    CSECT
                                            7576 *
                                            7577 *
                                            7578 *
                                            7579 * ....... start of rd_kafka_buf_handle_op
                                            7580 rd_kafka_buf_handle_op ALIAS X'99846D92818692816D82A4866D8881958493856D*
                                                                9697'
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004E6A                                    7581 @LNAME1514 DS  0H
00004E6A 00000016                           7582          DC    X'00000016'
00004E6E 99846D9281869281                   7583          DC    C'rd_kafka_buf_handle_op'
00004E84 00                                 7584          DC    X'00'
                                            7585 rd_kafka_buf_handle_op DCCPRLG CINDEX=1514,BASER=12,FRAME=216,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1514
                                            7586          macro
                                            7587          dccextrn &m
                                            7588          gblc    &$dccext(1000)
                                            7589          gbla    &$dccexti
                                            7590          lcla    &i
                                            7591 &$dccext(&$dccexti+1) setc    '&m'
                                            7592 &i       seta    1
                                            7593 .loop    aif    (&i gt &$dccexti).around
                                            7594          aif    ('&$dccext(&i)' eq '&m').getout
                                            7595 &i       seta    &i+1
                                            7596          ago     .loop
                                            7597 .around  anop
                                            7598 &$dccexti seta &$dccexti+1
                                            7599          extrn  &m
                                            7600 .getout  anop
                                            7601          mend
00004E88                                    7602+$eye0149    ds    0d                                                    02-DCCCA
00004E88 C4C3C3                             7603+         dc cl3'DCC'                                                    02-DCCCA
00004E8B 01                                 7604+         dc xl1'01' format one                                          02-DCCCA
00004E8C 00000000                           7605+         dc a(0)                                                        02-DCCCA
00004E90 0000000000004EFA                   7606+         dc ad(@PER_1514)                                               02-DCCCA
00004E98 00000000000000D8                   7607+         dc ad(216)                                                     02-DCCCA
00004EA0 0000000000000000                   7608+         dc ad(0)                                                       02-DCCCA
00004EA8 0000000000001000                   7609+         dc ad(4096)                                                    02-DCCCA
00004EB0 20                                 7610+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004EB1 03                                 7611+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004EB2 03                                 7612+         dc al1(3)                                                      02-DCCCA
00004EB3 08                                 7613+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004EB4 00                                 7614+         dc bl.8'00000000'                                              02-DCCCA
00004EB5 000000                             7615+         dc al3(0)                                                      02-DCCCA
00004EB8 0000000000004E6A                   7616+         dc ad(@LNAME1514)                                              02-DCCCA
00004EC0                                    7617+         ds 0d                                                          02-DCCCA
00004EC0 0000000000004E88                   7618+         dc ad($eye0149)                                                02-DCCCA
00004EC8 0000000000000000                   7619+         dc ad(0)                                                       02-DCCCA
00004ED0                                    7620+         ds    0d                                                       01-DCCPR
                                            7621+         entry rd_kafka_buf_handle_op                                   01-DCCPR
00004ED0                                    7622+rd_kafka_buf_handle_op ds 0d                                            01-DCCPR
00004ED0                                    7623+@REGION_1514_1 ds 0h                                                    01-DCCPR
00004ED0 EBEC D008 0024          00000008   7624+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004ED6 E3E0 D088 0004          00000088   7625+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004EDC E3C0 D090 0004          00000090   7626+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004EE2 B904 002E                          7627+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004EE6 E3B0 C018 0004          00000018   7628+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004EEC A7EB 00D8               000000D8   7629+         aghi  14,216              increase by frame size               01-DCCPR
00004EF0 E3E0 C020 0021          00000020   7630+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004EF6 4720 B020               00000020   7631+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004EFA                                    7632+@PER_1514 ds   0h                                                       01-DCCPR
00004EFA EBDE 2080 0024          00000080   7633+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004F00 E3C0 2090 0024          00000090   7634+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004F06 B904 00D2                          7635+         lgr   13,2                set real frame pointer               01-DCCPR
00004F0A B904 00CF                          7636+         lgr   12,15               set base reg                         01-DCCPR
                        00004ED0            7637+         using @REGION_1514_1,12                                        01-DCCPR
00004F0E B904 0051                          7638          LGR   5,1         ; ptr to parm area
                                            7639 * ******* End of Prologue
                                            7640 * *
00004F12 E320 5000 0004          00000000   7641          LG    2,0(0,5)    ; rko
                                            7642 * ***           rd_kafka_buf_t *request, *response;
                                            7643 * ***           rd_kafka_t *rk;
                                            7644 * ***
                                            7645 * ***           request = rko->rko_u.xbuf.rkbuf;
00004F18 E330 2070 0004          00000070   7646          LG    3,112(0,2)  ; offset of rko_u in rd_kafka_op_s
                                            7647 * ***           rko->rko_u.xbuf.rkbuf = ((void *)0);
00004F1E A769 0000               00000000   7648          LGHI  6,0         ; 0
00004F22 E360 2070 0024          00000070   7649          STG   6,112(0,2)  ; offset of rko_u in rd_kafka_op_s
                                            7650 * ***
                                            7651 * ***
                                            7652 * ***      if (request->rkbuf_replyq.q) {
00004F28 E3F0 30D0 0002          000000D0   7653          LTG   15,208(0,3) ; offset of rkbuf_replyq in rd_kafka_buf_s
00004F2E 4780 C086               00004F56   7654          BZ    @L761
                                            7655 * ***         int32_t version = request->rkbuf_replyq.version;
00004F32 5840 30D8               000000D8   7656          L     4,216(0,3)  ; offset of version in rd_kafka_replyq_s
                                            7657 * ***
                                            7658 * ***
                                            7659 * ***
                                            7660 * ***                   request->rkbuf_orig_replyq = request->rkbuf_re\
                                            7661 * plyq;
00004F36 D20F 30E0 30D0 000000E0 000000D0   7662          MVC   224(16,3),208(3)
                                            7663 * ***                   rd_kafka_replyq_clear(&request->rkbuf_replyq);
00004F3C 41F0 30D0               000000D0   7664          LA    15,208(0,3)
00004F40 E3F0 D0B0 0024          000000B0   7665          STG   15,176(0,13)
00004F46 4110 D0B0               000000B0   7666          LA    1,176(0,13)
00004F4A E3F0 C0D0 0004          00004FA0   7667          LG    15,@lit_1514_257 ; rd_kafka_replyq_clear
00004F50                                    7668 @@gen_label408 DS    0H
00004F50 05EF                               7669          BALR  14,15
00004F52                                    7670 @@gen_label409 DS    0H
                                            7671 * ***
                                            7672 * ***
                                            7673 * ***         request->rkbuf_replyq.version = version;
00004F52 5040 30D8               000000D8   7674          ST    4,216(0,3)  ; offset of version in rd_kafka_replyq_s
                                            7675 * ***      }
00004F56                                    7676 @L761    DS    0H
                                            7677 * ***
                                            7678 * ***      if (!request->rkbuf_cb) {
00004F56 E3F0 30F0 0002          000000F0   7679          LTG   15,240(0,3) ; offset of rkbuf_cb in rd_kafka_buf_s
00004F5C 4770 C108               00004FD8   7680          BNZ   @L762
                                            7681 * ***         do { if (rd_refcnt_sub0(&(request)->rkbuf_refcnt) > 0) b\
                                            7682 * reak; rd_kafka_buf_destroy_final(request); } while (0);
00004F60                                    7683 @L763    DS    0H
                                                                                                                           Page  155 
  Active Usings: @REGION_1514_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004F60 41F0 3108               00000108   7684          LA    15,264(0,3)
00004F64 E3F0 D0B0 0024          000000B0   7685          STG   15,176(0,13)
00004F6A 4110 D0B0               000000B0   7686          LA    1,176(0,13)
00004F6E E3F0 C0D8 0004          00004FA8   7687          LG    15,@lit_1514_258 ; rd_refcnt_sub0
00004F74                                    7688 @@gen_label411 DS    0H
00004F74 05EF                               7689          BALR  14,15
00004F76                                    7690 @@gen_label412 DS    0H
00004F76 12FF                               7691          LTR   15,15
00004F78 4720 C1AA               0000507A   7692          BH    @ret_lab_1514
00004F7C                                    7693 @L766    DS    0H
00004F7C E330 D0B0 0024          000000B0   7694          STG   3,176(0,13)
00004F82 4110 D0B0               000000B0   7695          LA    1,176(0,13)
00004F86 E3F0 C0E0 0004          00004FB0   7696          LG    15,@lit_1514_259 ; rd_kafka_buf_destroy_final
00004F8C                                    7697 @@gen_label414 DS    0H
00004F8C 05EF                               7698          BALR  14,15
00004F8E                                    7699 @@gen_label415 DS    0H
00004F8E                                    7700 @L764    DS    0H
                                            7701 * ***         return;
00004F8E 47F0 C1AA               0000507A   7702          B     @ret_lab_1514
00004F98                                    7703          DS    0D
00004F98 000000D8                           7704 @FRAMESIZE_1514 DC F'216'
00004F9C 00000000
00004FA0 0000000000001FA8                   7705 @lit_1514_257 DC AD(rd_kafka_replyq_clear)
00004FA8 00000000000009A0                   7706 @lit_1514_258 DC AD(rd_refcnt_sub0)
00004FB0 0000000000002EC8                   7707 @lit_1514_259 DC AD(rd_kafka_buf_destroy_final)
00004FB8 0000000000000000                   7708 @lit_1514_263 DC AD(__assert)
00004FC0 0000000000005722                   7709 @lit_1514_262 DC AD(@strings@)
00004FC8 00000000000054D8                   7710 @lit_1514_261 DC AD(@DATA)
00004FD0 0000000000005128                   7711 @lit_1514_264 DC AD(rd_kafka_buf_callback)
                                            7712 * ***      }
00004FD8                                    7713 @L762    DS    0H
                                            7714 * ***
                                            7715 * ***
                                            7716 * ***           response = request->rkbuf_response;
00004FD8 E340 30F8 0004          000000F8   7717          LG    4,248(0,3)  ; offset of rkbuf_response in rd_kafka_buf_s
                                            7718 * ***           request->rkbuf_response = ((void *)0);
00004FDE E360 30F8 0024          000000F8   7719          STG   6,248(0,3)  ; offset of rkbuf_response in rd_kafka_buf_s
                                            7720 * ***
                                            7721 * ***           if (!(rk = rko->rko_rk)) {
00004FE4 E3F0 2060 0004          00000060   7722          LG    15,96(0,2)  ; offset of rko_rk in rd_kafka_op_s
00004FEA B902 001F                          7723          LTGR  1,15
00004FEE 4770 C174               00005044   7724          BNZ   @L767
                                            7725 * ***                   ((request->rkbuf_rkb != ((void *)0)) ? (void)0\
                                            7726 *  : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.c"\
                                            7727 * , 428, "request->rkbuf_rkb != ((void *)0)"));
00004FF2 E3F0 3100 0002          00000100   7728          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004FF8 4770 C168               00005038   7729          BNE   @L769
00004FFC                                    7730 @L768    DS    0H
00004FFC E3F0 C0F8 0004          00004FC8   7731          LG    15,@lit_1514_261
00005002 41F0 F21C               0000021C   7732          LA    15,540(0,15)
00005006 E3F0 D0B0 0024          000000B0   7733          STG   15,176(0,13)
0000500C E3F0 C0F0 0004          00004FC0   7734          LG    15,@lit_1514_262
                                                                                                                           Page  156 
  Active Usings: @REGION_1514_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005012 4110 F09C               0000009C   7735          LA    1,156(0,15)
00005016 E310 D0B8 0024          000000B8   7736          STG   1,184(0,13)
0000501C E548 D0C0 01AC          000000C0   7737          MVGHI 192(13),428
00005022 41F0 F230               00000230   7738          LA    15,560(0,15)
00005026 E3F0 D0C8 0024          000000C8   7739          STG   15,200(0,13)
0000502C 4110 D0B0               000000B0   7740          LA    1,176(0,13)
00005030 E3F0 C0E8 0004          00004FB8   7741          LG    15,@lit_1514_263 ; __assert
00005036                                    7742 @@gen_label418 DS    0H
00005036 05EF                               7743          BALR  14,15
00005038                                    7744 @@gen_label419 DS    0H
00005038                                    7745 @L769    DS    0H
                                            7746 * ***                   rk = request->rkbuf_rkb->rkb_rk;
00005038 E3F0 3100 0004          00000100   7747          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000503E E3F0 FFD0 0004          00000FD0   7748          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
                                            7749 * ***           }
00005044                                    7750 @L767    DS    0H
                                            7751 * ***
                                            7752 * ***           rd_kafka_buf_callback(rk, request->rkbuf_rkb, err, res\
                                            7753 * ponse, request);
00005044 E3F0 D0B0 0024          000000B0   7754          STG   15,176(0,13)
0000504A E3F0 3100 0004          00000100   7755          LG    15,256(0,3)
00005050 E3F0 D0B8 0024          000000B8   7756          STG   15,184(0,13)
00005056 E3F0 500C 0014          0000000C   7757          LGF   15,12(0,5)  ; err
0000505C E3F0 D0C0 0024          000000C0   7758          STG   15,192(0,13)
00005062 E340 D0C8 0024          000000C8   7759          STG   4,200(0,13)
00005068 E330 D0D0 0024          000000D0   7760          STG   3,208(0,13)
0000506E 4110 D0B0               000000B0   7761          LA    1,176(0,13)
00005072 E3F0 C100 0004          00004FD0   7762          LG    15,@lit_1514_264 ; rd_kafka_buf_callback
00005078                                    7763 @@gen_label420 DS    0H
00005078 05EF                               7764          BALR  14,15
0000507A                                    7765 @@gen_label421 DS    0H
                                            7766 * ***   }
0000507A                                    7767 @ret_lab_1514 DS 0H
                                            7768 * * **** Start of Epilogue
                                            7769          DCCEPIL
0000507A                                    7770+         ds 0h                                                          01-DCCEP
                                            7771+* Epilog
0000507A D707 D088 D088 00000088 00000088   7772+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005080 E3D0 D080 0004          00000080   7773+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005086 E3C0 D090 0004          00000090   7774+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000508C E3B0 C018 0004          00000018   7775+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005092 E3C0 B010 0021          00000010   7776+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005098 E3E0 D008 0004          00000008   7777+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000509E EB1C D020 0004          00000020   7778+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000050A4 078E                               7779+         bcr 8,14                if same dsab, just return              01-DCCEP
000050A6 E3F0 D010 0024          00000010   7780+         stg 15,16(0,13)         save return code                       01-DCCEP
000050AC E300 D018 0024          00000018   7781+         stg 0,24(0,13)          save more return code                  01-DCCEP
000050B2 E3F0 D090 0004          00000090   7782+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000050B8 E3F0 F018 0004          00000018   7783+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000050BE 47F0 F040               00000040   7784+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7785+* End of Epilog
                                            7786 * * **** End of Epilogue
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7787          DROP  12
                                            7788 *
                                            7789 *   DSECT for automatic variables in "rd_kafka_buf_handle_op"
                                            7790 *      (FUNCTION #1514)
                                            7791 *
00000000                00000000 000000AC   7792 @AUTO#rd_kafka_buf_handle_op DSECT
00000000                                    7793          DS    XL168
000000A8                                    7794 rd_kafka_buf_handle_op#version#1 DS 1F ; version
                                            7795 *
000050C2                00000000 000054D2   7796 @CODE    CSECT
                                            7797 *
                                            7798 *
                                            7799 *
                                            7800 * ....... start of rd_kafka_buf_callback
                                            7801 rd_kafka_buf_callback ALIAS X'99846D92818692816D82A4866D838193938281839*
                                                                2'
000050C2                                    7802 @LNAME1515 DS  0H
000050C2 00000015                           7803          DC    X'00000015'
000050C6 99846D9281869281                   7804          DC    C'rd_kafka_buf_callback'
000050DB 00                                 7805          DC    X'00'
                                            7806 rd_kafka_buf_callback DCCPRLG CINDEX=1515,BASER=12,FRAME=256,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1515
                                            7807          macro
                                            7808          dccextrn &m
                                            7809          gblc    &$dccext(1000)
                                            7810          gbla    &$dccexti
                                            7811          lcla    &i
                                            7812 &$dccext(&$dccexti+1) setc    '&m'
                                            7813 &i       seta    1
                                            7814 .loop    aif    (&i gt &$dccexti).around
                                            7815          aif    ('&$dccext(&i)' eq '&m').getout
                                            7816 &i       seta    &i+1
                                            7817          ago     .loop
                                            7818 .around  anop
                                            7819 &$dccexti seta &$dccexti+1
                                            7820          extrn  &m
                                            7821 .getout  anop
                                            7822          mend
000050E0                                    7823+$eye0152    ds    0d                                                    02-DCCCA
000050E0 C4C3C3                             7824+         dc cl3'DCC'                                                    02-DCCCA
000050E3 01                                 7825+         dc xl1'01' format one                                          02-DCCCA
000050E4 00000000                           7826+         dc a(0)                                                        02-DCCCA
000050E8 0000000000005152                   7827+         dc ad(@PER_1515)                                               02-DCCCA
000050F0 0000000000000100                   7828+         dc ad(256)                                                     02-DCCCA
000050F8 0000000000000000                   7829+         dc ad(0)                                                       02-DCCCA
00005100 0000000000001000                   7830+         dc ad(4096)                                                    02-DCCCA
00005108 20                                 7831+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005109 03                                 7832+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000510A 03                                 7833+         dc al1(3)                                                      02-DCCCA
0000510B 08                                 7834+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000510C 00                                 7835+         dc bl.8'00000000'                                              02-DCCCA
0000510D 000000                             7836+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005110 00000000000050C2                   7837+         dc ad(@LNAME1515)                                              02-DCCCA
00005118                                    7838+         ds 0d                                                          02-DCCCA
00005118 00000000000050E0                   7839+         dc ad($eye0152)                                                02-DCCCA
00005120 0000000000000000                   7840+         dc ad(0)                                                       02-DCCCA
00005128                                    7841+         ds    0d                                                       01-DCCPR
                                            7842+         entry rd_kafka_buf_callback                                    01-DCCPR
00005128                                    7843+rd_kafka_buf_callback ds 0d                                             01-DCCPR
00005128                                    7844+@REGION_1515_1 ds 0h                                                    01-DCCPR
00005128 EBEC D008 0024          00000008   7845+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000512E E3E0 D088 0004          00000088   7846+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005134 E3C0 D090 0004          00000090   7847+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000513A B904 002E                          7848+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000513E E3B0 C018 0004          00000018   7849+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005144 A7EB 0100               00000100   7850+         aghi  14,256              increase by frame size               01-DCCPR
00005148 E3E0 C020 0021          00000020   7851+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000514E 4720 B020               00000020   7852+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005152                                    7853+@PER_1515 ds   0h                                                       01-DCCPR
00005152 EBDE 2080 0024          00000080   7854+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005158 E3C0 2090 0024          00000090   7855+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000515E B904 00D2                          7856+         lgr   13,2                set real frame pointer               01-DCCPR
00005162 B904 00CF                          7857+         lgr   12,15               set base reg                         01-DCCPR
                        00005128            7858+         using @REGION_1515_1,12                                        01-DCCPR
00005166 B904 0061                          7859          LGR   6,1         ; ptr to parm area
                                            7860 * ******* End of Prologue
                                            7861 * *
0000516A E320 6008 0004          00000008   7862          LG    2,8(0,6)    ; rkb
00005170 5830 6014               00000014   7863          L     3,20(0,6)   ; err
00005174 EB45 6018 0004          00000018   7864          LMG   4,5,24(6)   ; response
                                            7865 * ***
                                            7866 * ***           rd_kafka_interceptors_on_response_received(
                                            7867 * ***                   rk,
                                            7868 * ***                   -1,
                                            7869 * ***                   rkb ? rd_kafka_broker_name(rkb) : "",
                                            7870 * ***                   rkb ? rd_kafka_broker_id(rkb) : -1,
                                            7871 * ***                   request->rkbuf_reqhdr.ApiKey,
                                            7872 * ***                   request->rkbuf_reqhdr.ApiVersion,
                                            7873 * ***                   request->rkbuf_reshdr.CorrId,
                                            7874 * ***                   response ? response->rkbuf_totlen : 0,
                                            7875 * ***                   response ? response->rkbuf_ts_sent : -1,
                                            7876 * ***                   err);
0000517A B902 00F2                          7877          LTGR  15,2
0000517E 4780 C0E0               00005208   7878          BZ    @L770
00005182 E320 D0B0 0024          000000B0   7879          STG   2,176(0,13)
00005188 4110 D0B0               000000B0   7880          LA    1,176(0,13)
0000518C E3F0 C080 0004          000051A8   7881          LG    15,@lit_1515_266 ; rd_kafka_broker_name
00005192                                    7882 @@gen_label423 DS    0H
00005192 05EF                               7883          BALR  14,15
00005194                                    7884 @@gen_label424 DS    0H
00005194 B904 007F                          7885          LGR   7,15
00005198 47F0 C0EA               00005212   7886          B     @L771
000051A0                                    7887          DS    0D
000051A0 00000100                           7888 @FRAMESIZE_1515 DC F'256'
                                                                                                                           Page  159 
  Active Usings: @REGION_1515_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000051A4 00000000
000051A8 0000000000000000                   7889 @lit_1515_266 DC AD(rd_kafka_broker_name)
000051B0 0000000000005722                   7890 @lit_1515_267 DC AD(@strings@)
000051B8 0000000000000000                   7891 @lit_1515_268 DC AD(rd_kafka_broker_id)
000051C0 0000000000000000                   7892 @lit_1515_272 DC AD(rd_kafka_interceptors_on_response_received)
000051C8 0000000000000000                   7893 @lit_1515_273 DC AD(rd_kafka_op_new0)
000051D0 0000000000000000                   7894 @lit_1515_276 DC AD(rd_kafka_crash)
000051D8 00000000000054D8                   7895 @lit_1515_275 DC AD(@DATA)
000051E0 0000000000000360                   7896 @lit_1515_277 DC AD(rd_atomic32_add)
000051E8 0000000000002030                   7897 @lit_1515_278 DC AD(rd_kafka_replyq_copy)
000051F0 00000000000022B0                   7898 @lit_1515_279 DC AD(rd_kafka_replyq_enq)
000051F8 00000000000009A0                   7899 @lit_1515_280 DC AD(rd_refcnt_sub0)
00005200 0000000000002EC8                   7900 @lit_1515_281 DC AD(rd_kafka_buf_destroy_final)
00005208                                    7901 @L770    DS    0H
00005208 E3F0 C088 0004          000051B0   7902          LG    15,@lit_1515_267
0000520E 4170 F252               00000252   7903          LA    7,594(0,15)
00005212                                    7904 @L771    DS    0H
00005212 B902 00F2                          7905          LTGR  15,2
00005216 4780 C108               00005230   7906          BZ    @L772
0000521A E320 D0B0 0024          000000B0   7907          STG   2,176(0,13)
00005220 4110 D0B0               000000B0   7908          LA    1,176(0,13)
00005224 E3F0 C090 0004          000051B8   7909          LG    15,@lit_1515_268 ; rd_kafka_broker_id
0000522A                                    7910 @@gen_label426 DS    0H
0000522A 05EF                               7911          BALR  14,15
0000522C                                    7912 @@gen_label427 DS    0H
0000522C 47F0 C10C               00005234   7913          B     @L773
00005230                                    7914 @L772    DS    0H
00005230 A7F8 FFFF               0000FFFF   7915          LHI   15,-1       ; -1
00005234                                    7916 @L773    DS    0H
00005234 B902 0014                          7917          LTGR  1,4
00005238 4780 C11E               00005246   7918          BZ    @L774
0000523C E310 40A8 0004          000000A8   7919          LG    1,168(0,4)  ; offset of rkbuf_totlen in rd_kafka_buf_s
00005242 47F0 C122               0000524A   7920          B     @L775
00005246                                    7921 @L774    DS    0H
00005246 A719 0000               00000000   7922          LGHI  1,0         ; 0
0000524A                                    7923 @L775    DS    0H
0000524A B902 0084                          7924          LTGR  8,4
0000524E 4780 C134               0000525C   7925          BZ    @L776
00005252 E380 4158 0004          00000158   7926          LG    8,344(0,4)  ; offset of rkbuf_ts_sent in rd_kafka_buf_s
00005258 47F0 C138               00005260   7927          B     @L777
0000525C                                    7928 @L776    DS    0H
0000525C A789 FFFF               0000FFFF   7929          LGHI  8,-1        ; -1
00005260                                    7930 @L777    DS    0H
00005260 E390 6000 0004          00000000   7931          LG    9,0(0,6)    ; rk
00005266 E390 D0B0 0024          000000B0   7932          STG   9,176(0,13)
0000526C E548 D0B8 FFFF          000000B8   7933          MVGHI 184(13),-1
00005272 E370 D0C0 0024          000000C0   7934          STG   7,192(0,13)
00005278 B914 00FF                          7935          LGFR  15,15
0000527C E3F0 D0C8 0024          000000C8   7936          STG   15,200(0,13)
00005282 E3F0 50B8 0015          000000B8   7937          LGH   15,184(0,5)
00005288 E3F0 D0D0 0024          000000D0   7938          STG   15,208(0,13)
0000528E E3F0 50BA 0015          000000BA   7939          LGH   15,186(0,5)
                                                                                                                           Page  160 
  Active Usings: @REGION_1515_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005294 E3F0 D0D8 0024          000000D8   7940          STG   15,216(0,13)
0000529A E3F0 50C4 0014          000000C4   7941          LGF   15,196(0,5)
000052A0 E3F0 D0E0 0024          000000E0   7942          STG   15,224(0,13)
000052A6 E310 D0E8 0024          000000E8   7943          STG   1,232(0,13)
000052AC E380 D0F0 0024          000000F0   7944          STG   8,240(0,13)
000052B2 B914 00F3                          7945          LGFR  15,3
000052B6 E3F0 D0F8 0024          000000F8   7946          STG   15,248(0,13)
000052BC 4110 D0B0               000000B0   7947          LA    1,176(0,13)
000052C0 E3F0 C098 0004          000051C0   7948          LG    15,@lit_1515_272 ; rd_kafka_interceptors_on_response_rec*
                                                                eived
000052C6                                    7949 @@gen_label430 DS    0H
000052C6 05EF                               7950          BALR  14,15
000052C8                                    7951 @@gen_label431 DS    0H
                                            7952 * ***
                                            7953 * ***           if (err != RD_KAFKA_RESP_ERR__DESTROY && request->rkbu\
                                            7954 * f_replyq.q) {
000052C8 A73E FF3B               0000FF3B   7955          CHI   3,-197
000052CC 4780 C2BA               000053E2   7956          BE    @L778
000052D0 E3F0 50D0 0002          000000D0   7957          LTG   15,208(0,5) ; offset of rkbuf_replyq in rd_kafka_buf_s
000052D6 4780 C2BA               000053E2   7958          BZ    @L778
                                            7959 * ***                   rd_kafka_op_t *rko = rd_kafka_op_new0(((void *\
                                            7960 * )0), RD_KAFKA_OP_RECV_BUF);
000052DA D707 D0B0 D0B0 000000B0 000000B0   7961          XC    176(8,13),176(13)
000052E0 E548 D0B8 0009          000000B8   7962          MVGHI 184(13),9
000052E6 4110 D0B0               000000B0   7963          LA    1,176(0,13)
000052EA E3F0 C0A0 0004          000051C8   7964          LG    15,@lit_1515_273 ; rd_kafka_op_new0
000052F0                                    7965 @@gen_label434 DS    0H
000052F0 05EF                               7966          BALR  14,15
000052F2                                    7967 @@gen_label435 DS    0H
000052F2 B904 002F                          7968          LGR   2,15
                                            7969 * ***
                                            7970 * ***         do { if (((!(!request->rkbuf_response)))) rd_kafka_crash\
                                            7971 * ("C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.c",469, __FUNCTION__, (\
                                            7972 * ((void *)0)), "assert: " "!request->rkbuf_response"); } while (0);
000052F6                                    7973 @L779    DS    0H
000052F6 E3F0 50F8 0002          000000F8   7974          LTG   15,248(0,5) ; offset of rkbuf_response in rd_kafka_buf_s
000052FC 4780 C21A               00005342   7975          BZ    @L782
00005300 E3F0 C088 0004          000051B0   7976          LG    15,@lit_1515_267
00005306 4110 F09C               0000009C   7977          LA    1,156(0,15)
0000530A E310 D0B0 0024          000000B0   7978          STG   1,176(0,13)
00005310 E548 D0B8 01D5          000000B8   7979          MVGHI 184(13),469
00005316 E310 C0B0 0004          000051D8   7980          LG    1,@lit_1515_275
0000531C 4110 1234               00000234   7981          LA    1,564(0,1)
00005320 E310 D0C0 0024          000000C0   7982          STG   1,192(0,13)
00005326 D707 D0C8 D0C8 000000C8 000000C8   7983          XC    200(8,13),200(13)
0000532C 41F0 F254               00000254   7984          LA    15,596(0,15)
00005330 E3F0 D0D0 0024          000000D0   7985          STG   15,208(0,13)
00005336 4110 D0B0               000000B0   7986          LA    1,176(0,13)
0000533A E3F0 C0A8 0004          000051D0   7987          LG    15,@lit_1515_276 ; rd_kafka_crash
00005340                                    7988 @@gen_label437 DS    0H
00005340 05EF                               7989          BALR  14,15
00005342                                    7990 @@gen_label438 DS    0H
                                                                                                                           Page  161 
  Active Usings: @REGION_1515_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005342                                    7991 @L782    DS    0H
                                            7992 * ***         request->rkbuf_response = response;
00005342 E340 50F8 0024          000000F8   7993          STG   4,248(0,5)  ; offset of rkbuf_response in rd_kafka_buf_s
                                            7994 * ***
                                            7995 * ***
                                            7996 * ***
                                            7997 * ***
                                            7998 * ***                   rd_atomic32_add(&(request)->rkbuf_refcnt, 1);
00005348 41F0 5108               00000108   7999          LA    15,264(0,5)
0000534C E3F0 D0B0 0024          000000B0   8000          STG   15,176(0,13)
00005352 E548 D0B8 0001          000000B8   8001          MVGHI 184(13),1
00005358 4110 D0B0               000000B0   8002          LA    1,176(0,13)
0000535C E3F0 C0B8 0004          000051E0   8003          LG    15,@lit_1515_277 ; rd_atomic32_add
00005362                                    8004 @@gen_label439 DS    0H
00005362 05EF                               8005          BALR  14,15
00005364                                    8006 @@gen_label440 DS    0H
                                            8007 * ***                   rko->rko_u.xbuf.rkbuf = request;
00005364 E350 2070 0024          00000070   8008          STG   5,112(0,2)  ; offset of rko_u in rd_kafka_op_s
                                            8009 * ***
                                            8010 * ***                   rko->rko_err = err;
0000536A 5030 2020               00000020   8011          ST    3,32(0,2)   ; offset of rko_err in rd_kafka_op_s
                                            8012 * ***
                                            8013 * ***
                                            8014 * ***
                                            8015 * ***                   rd_kafka_replyq_copy(&request->rkbuf_orig_repl\
                                            8016 * yq,
                                            8017 * ***                                        &request->rkbuf_replyq);
0000536E 41F0 50E0               000000E0   8018          LA    15,224(0,5)
00005372 E3F0 D0B0 0024          000000B0   8019          STG   15,176(0,13)
00005378 41F0 50D0               000000D0   8020          LA    15,208(0,5)
0000537C E3F0 D0B8 0024          000000B8   8021          STG   15,184(0,13)
00005382 4110 D0B0               000000B0   8022          LA    1,176(0,13)
00005386 E3F0 C0C0 0004          000051E8   8023          LG    15,@lit_1515_278 ; rd_kafka_replyq_copy
0000538C                                    8024 @@gen_label441 DS    0H
0000538C 05EF                               8025          BALR  14,15
0000538E                                    8026 @@gen_label442 DS    0H
                                            8027 * ***
                                            8028 * ***              rd_kafka_replyq_enq(&request->rkbuf_replyq, rko, 0)\
                                            8029 * ;
0000538E 41F0 50D0               000000D0   8030          LA    15,208(0,5)
00005392 E3F0 D0B0 0024          000000B0   8031          STG   15,176(0,13)
00005398 E320 D0B8 0024          000000B8   8032          STG   2,184(0,13)
0000539E D707 D0C0 D0C0 000000C0 000000C0   8033          XC    192(8,13),192(13)
000053A4 4110 D0B0               000000B0   8034          LA    1,176(0,13)
000053A8 E3F0 C0C8 0004          000051F0   8035          LG    15,@lit_1515_279 ; rd_kafka_replyq_enq
000053AE                                    8036 @@gen_label443 DS    0H
000053AE 05EF                               8037          BALR  14,15
000053B0                                    8038 @@gen_label444 DS    0H
                                            8039 * ***
                                            8040 * ***         do { if (rd_refcnt_sub0(&(request)->rkbuf_refcnt) > 0) b\
                                            8041 * reak; rd_kafka_buf_destroy_final(request); } while (0);
000053B0                                    8042 @L783    DS    0H
                                                                                                                           Page  162 
  Active Usings: @REGION_1515_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000053B0 41F0 5108               00000108   8043          LA    15,264(0,5)
000053B4 E3F0 D0B0 0024          000000B0   8044          STG   15,176(0,13)
000053BA 4110 D0B0               000000B0   8045          LA    1,176(0,13)
000053BE E3F0 C0D0 0004          000051F8   8046          LG    15,@lit_1515_280 ; rd_refcnt_sub0
000053C4                                    8047 @@gen_label445 DS    0H
000053C4 05EF                               8048          BALR  14,15
000053C6                                    8049 @@gen_label446 DS    0H
000053C6 12FF                               8050          LTR   15,15
000053C8 4720 C362               0000548A   8051          BH    @ret_lab_1515
000053CC                                    8052 @L786    DS    0H
000053CC E350 D0B0 0024          000000B0   8053          STG   5,176(0,13)
000053D2 4110 D0B0               000000B0   8054          LA    1,176(0,13)
000053D6 E3F0 C0D8 0004          00005200   8055          LG    15,@lit_1515_281 ; rd_kafka_buf_destroy_final
000053DC                                    8056 @@gen_label448 DS    0H
000053DC 05EF                               8057          BALR  14,15
000053DE                                    8058 @@gen_label449 DS    0H
000053DE                                    8059 @L784    DS    0H
                                            8060 * ***         return;
000053DE 47F0 C362               0000548A   8061          B     @ret_lab_1515
                                            8062 * ***           }
000053E2                                    8063 @L778    DS    0H
                                            8064 * ***
                                            8065 * ***           if (request->rkbuf_cb)
000053E2 E3F0 50F0 0002          000000F0   8066          LTG   15,240(0,5) ; offset of rkbuf_cb in rd_kafka_buf_s
000053E8 4780 C2FE               00005426   8067          BZ    @L788
                                            8068 * ***                   request->rkbuf_cb(rk, rkb, err, response, requ\
                                            8069 * est,
                                            8070 * ***                                     request->rkbuf_opaque);
000053EC E3F0 6000 0004          00000000   8071          LG    15,0(0,6)   ; rk
000053F2 E3F0 D0B0 0024          000000B0   8072          STG   15,176(0,13)
000053F8 E320 D0B8 0024          000000B8   8073          STG   2,184(0,13)
000053FE B914 00F3                          8074          LGFR  15,3
00005402 E3F0 D0C0 0024          000000C0   8075          STG   15,192(0,13)
00005408 EB45 D0C8 0024          000000C8   8076          STMG  4,5,200(13)
0000540E E3F0 5138 0004          00000138   8077          LG    15,312(0,5)
00005414 E3F0 D0D8 0024          000000D8   8078          STG   15,216(0,13)
0000541A E3F0 50F0 0004          000000F0   8079          LG    15,240(0,5) ; offset of rkbuf_cb in rd_kafka_buf_s
00005420 4110 D0B0               000000B0   8080          LA    1,176(0,13)
00005424                                    8081 @@gen_label451 DS    0H
00005424 05EF                               8082          BALR  14,15
00005426                                    8083 @@gen_label452 DS    0H
00005426                                    8084 @L787    DS    0H
                                            8085 * ***
                                            8086 * ***           do { if (rd_refcnt_sub0(&(request)->rkbuf_refcnt) > 0)\
                                            8087 *  break; rd_kafka_buf_destroy_final(request); } while (0);
00005426                                    8088 @L788    DS    0H
00005426 41F0 5108               00000108   8089          LA    15,264(0,5)
0000542A E3F0 D0B0 0024          000000B0   8090          STG   15,176(0,13)
00005430 4110 D0B0               000000B0   8091          LA    1,176(0,13)
00005434 E3F0 C0D0 0004          000051F8   8092          LG    15,@lit_1515_280 ; rd_refcnt_sub0
0000543A                                    8093 @@gen_label453 DS    0H
0000543A 05EF                               8094          BALR  14,15
                                                                                                                           Page  163 
  Active Usings: @REGION_1515_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000543C                                    8095 @@gen_label454 DS    0H
0000543C 12FF                               8096          LTR   15,15
0000543E 4720 C32C               00005454   8097          BH    @L789
00005442                                    8098 @L791    DS    0H
00005442 E350 D0B0 0024          000000B0   8099          STG   5,176(0,13)
00005448 4110 D0B0               000000B0   8100          LA    1,176(0,13)
0000544C E3F0 C0D8 0004          00005200   8101          LG    15,@lit_1515_281 ; rd_kafka_buf_destroy_final
00005452                                    8102 @@gen_label456 DS    0H
00005452 05EF                               8103          BALR  14,15
00005454                                    8104 @@gen_label457 DS    0H
00005454                                    8105 @L789    DS    0H
                                            8106 * ***      if (response)
00005454 B902 00F4                          8107          LTGR  15,4
00005458 4780 C362               0000548A   8108          BZ    @ret_lab_1515
                                            8109 * ***         do { if (rd_refcnt_sub0(&(response)->rkbuf_refcnt) > 0) \
                                            8110 * break; rd_kafka_buf_destroy_final(response); } while (0);
0000545C                                    8111 @L793    DS    0H
0000545C 41F0 4108               00000108   8112          LA    15,264(0,4)
00005460 E3F0 D0B0 0024          000000B0   8113          STG   15,176(0,13)
00005466 4110 D0B0               000000B0   8114          LA    1,176(0,13)
0000546A E3F0 C0D0 0004          000051F8   8115          LG    15,@lit_1515_280 ; rd_refcnt_sub0
00005470                                    8116 @@gen_label459 DS    0H
00005470 05EF                               8117          BALR  14,15
00005472                                    8118 @@gen_label460 DS    0H
00005472 12FF                               8119          LTR   15,15
00005474 4720 C362               0000548A   8120          BH    @ret_lab_1515
00005478                                    8121 @L796    DS    0H
00005478 E340 D0B0 0024          000000B0   8122          STG   4,176(0,13)
0000547E 4110 D0B0               000000B0   8123          LA    1,176(0,13)
00005482 E3F0 C0D8 0004          00005200   8124          LG    15,@lit_1515_281 ; rd_kafka_buf_destroy_final
00005488                                    8125 @@gen_label462 DS    0H
00005488 05EF                               8126          BALR  14,15
0000548A                                    8127 @@gen_label463 DS    0H
0000548A                                    8128 @L794    DS    0H
                                            8129 * ***   }
0000548A                                    8130 @L792    DS    0H
0000548A                                    8131 @ret_lab_1515 DS 0H
                                            8132 * * **** Start of Epilogue
                                            8133          DCCEPIL
0000548A                                    8134+         ds 0h                                                          01-DCCEP
                                            8135+* Epilog
0000548A D707 D088 D088 00000088 00000088   8136+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005490 E3D0 D080 0004          00000080   8137+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005496 E3C0 D090 0004          00000090   8138+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000549C E3B0 C018 0004          00000018   8139+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000054A2 E3C0 B010 0021          00000010   8140+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000054A8 E3E0 D008 0004          00000008   8141+         lg  14,8(0,13)          load up return address                 01-DCCEP
000054AE EB1C D020 0004          00000020   8142+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000054B4 078E                               8143+         bcr 8,14                if same dsab, just return              01-DCCEP
000054B6 E3F0 D010 0024          00000010   8144+         stg 15,16(0,13)         save return code                       01-DCCEP
000054BC E300 D018 0024          00000018   8145+         stg 0,24(0,13)          save more return code                  01-DCCEP
000054C2 E3F0 D090 0004          00000090   8146+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page  164 
  Active Usings: @REGION_1515_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000054C8 E3F0 F018 0004          00000018   8147+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000054CE 47F0 F040               00000040   8148+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8149+* End of Epilog
                                            8150 * * **** End of Epilogue
                                            8151          DROP  12
                                            8152 *
                                            8153 *   DSECT for automatic variables in "rd_kafka_buf_callback"
                                            8154 *      (FUNCTION #1515)
                                            8155 *
00000000                00000000 000000A8   8156 @AUTO#rd_kafka_buf_callback DSECT
00000000                                    8157          DS    XL168
                                            8158 *
000054D2                00000000 000054D2   8159 @CODE    CSECT
                                            8160 @@STATIC ALIAS X'7C998492818692816D82A48650'
                                            8161 @@STATIC DXD   219D
                                            8162 *
                                            8163 *  Non-Re-Entrant Data Section
                                            8164 *
000054D8                000054D8 000009FA   8165 @DATA    CSECT
                                            8166 @DATA    RMODE ANY
                                            8167 @DATA    AMODE ANY
000054D8 99846D8381939396                   8168 @@T48F   DC    X'99846D838193939683'               rd.calloc
000054E1 00                                 8169          DC    1X'00'
000054E2 99846D9481939396                   8170 @@T493   DC    X'99846D948193939683'               rd.malloc
000054EB 00                                 8171          DC    1X'00'
000054EC 99846D9985819393                   8172 @@T498   DC    X'99846D99858193939683'             rd.realloc
000054F6 0000                               8173          DC    2X'00'
000054F8 99846DA2A39984A4                   8174 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
00005501 00                                 8175          DC    1X'00'
00005502 99846DA2A3999584                   8176 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
0000550C 0000                               8177          DC    2X'00'
0000550E 99846D9985868395                   8178 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0000551C 00000000                           8179          DC    4X'00'
00005520 00000000                           8180 @@T65A   DC    4X'00'
00005524 0000001A00000000                   8181          DC    X'0000001A000000000000002200000000' ................
00005534 00000024                           8182          DC    X'00000024'                         ....
00005538 99846D9281869281                   8183 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00005548 98                                 8184          DC    X'98'                               q
00005549 00                                 8185          DC    1X'00'
0000554A 99846D9281869281                   8186 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
0000555A 96A8F0                             8187          DC    X'96A8F0'                           oy0
0000555D 00                                 8188          DC    1X'00'
0000555E 99846D9281869281                   8189 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000556E 856D8485A2A39996                   8190          DC    X'856D8485A2A39996A8F0'             e.destroy0
00005578 0000                               8191          DC    2X'00'
0000557A 99846D9281869281                   8192 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000558A 856D8485936DA296                   8193          DC    X'856D8485936DA296A4998385'         e.del.source
00005596 0000                               8194          DC    2X'00'
00005598 99846D9281869281                   8195 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000055A8 856D8485936DA296                   8196          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
000055B8 A49995                             8197          DC    X'A49995'                           urn
000055BB 00                                 8198          DC    1X'00'
                                                                                                                           Page  165 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000055BC 99846D9281869281                   8199 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000055CC 856DA39989878785                   8200          DC    X'856DA3998987878599'               e.trigger
000055D5 00                                 8201          DC    1X'00'
000055D6 99846D9281869281                   8202 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000055E6 856D8485A2A39996                   8203          DC    X'856D8485A2A39996A8'               e.destroy
000055EF 00                                 8204          DC    1X'00'
000055F0 99846D9281869281                   8205 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005600 856D8489A2818293                   8206          DC    X'856D8489A281829385'               e.disable
00005609 00                                 8207          DC    1X'00'
0000560A 99846DA394978182                   8208 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
0000561A F0                                 8209          DC    X'F0'                               0
0000561B 00                                 8210          DC    1X'00'
0000561C 99846D9281869281                   8211 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
0000562C 81A385                             8212          DC    X'81A385'                           ate
0000562F 00                                 8213          DC    1X'00'
00005630 99846D9281869281                   8214 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00005640 819389A9856D8199                   8215          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
0000564E 0000                               8216          DC    2X'00'
00005650 99846D9281869281                   8217 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00005660 6D899589A3                         8218          DC    X'6D899589A3'                       .init
00005665 00                                 8219          DC    1X'00'
00005666 99846D9281869281                   8220 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
00005676 87A26DA2A482                       8221          DC    X'87A26DA2A482'                     gs.sub
0000567C 0000                               8222          DC    2X'00'
0000567E 99846D9281869281                   8223 @@TA65   DC    X'99846D92818692816D82A4866D8485A2' rd.kafka.buf.des
0000568E A39996A86D868995                   8224          DC    X'A39996A86D8689958193'             troy.final
00005698 0000                               8225          DC    2X'00'
0000569A 99846D9281869281                   8226 @@TA7F   DC    X'99846D92818692816D82A486986D8485' rd.kafka.bufq.de
000056AA 98                                 8227          DC    X'98'                               q
000056AB 00                                 8228          DC    1X'00'
000056AC 99846D9281869281                   8229 @@TA88   DC    X'99846D92818692816D82A486986D97A4' rd.kafka.bufq.pu
000056BC 998785                             8230          DC    X'998785'                           rge
000056BF 00                                 8231          DC    1X'00'
000056C0 99846D9281869281                   8232 @@TA8F   DC    X'99846D92818692816D82A486986D8396' rd.kafka.bufq.co
000056D0 95958583A3899695                   8233          DC    X'95958583A38996956D9985A285A3'     nnection.reset
000056DE 0000                               8234          DC    2X'00'
000056E0 99846D9281869281                   8235 @@TAA4   DC    X'99846D92818692816D82A4866D9985A3' rd.kafka.buf.ret
000056F0 99A8                               8236          DC    X'99A8'                             ry
000056F2 0000                               8237          DC    2X'00'
000056F4 99846D9281869281                   8238 @@TAAB   DC    X'99846D92818692816D82A4866D888195' rd.kafka.buf.han
00005704 8493856D9697                       8239          DC    X'8493856D9697'                     dle.op
0000570A 0000                               8240          DC    2X'00'
0000570C 99846D9281869281                   8241 @@TAB6   DC    X'99846D92818692816D82A4866D838193' rd.kafka.buf.cal
0000571C 9382818392                         8242          DC    X'9382818392'                       lback
00005721 00                                 8243          DC    1X'00'
00005722                                    8244 @strings@ DS   0H
00005722 C37AE081A2879281                   8245          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00005732 849281869281E0A2                   8246          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00005742 97009985868395A3                   8247          DC    X'97009985868395A340A2A48260A98599' p.refcnt.sub.zer
00005752 96005A5C7F998586                   8248          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00005762 A98599967F00E495                   8249          DC    X'A98599967F00E495929596A695606C88' zero..Unknown..h
00005772 846F0000C37AE081                   8250          DC    X'846F0000C37AE081A2879281869281E0' d...C..asgkafka.
                                                                                                                           Page  166 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005782 9389829984928186                   8251          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
00005792 8492818692816D98                   8252          DC    X'8492818692816D98A485A4854B880000' dkafka.queue.h..
000057A2 81A2A28599A37A40                   8253          DC    X'81A2A28599A37A40999298606E999298' assert..rkq..rkq
000057B2 6D9985868395A340                   8254          DC    X'6D9985868395A3406E40F000C37AE081' .refcnt...0.C..a
000057C2 A2879281869281E0                   8255          DC    X'A2879281869281E09389829984928186' sgkafka.librdkaf
000057D2 9281E0A29983E099                   8256          DC    X'9281E0A29983E0998492818692816D82' ka.src.rdkafka.b
000057E2 A4864B83000081A2                   8257          DC    X'A4864B83000081A2A28599A37A404D5C' uf.c..assert....
000057F2 999282A486606E99                   8258          DC    X'999282A486606E999282A4866DA44BD4' rkbuf..rkbuf.u.M
00005802 85A3818481A3814B                   8259          DC    X'85A3818481A3814B848583995D406E40' etadata.decr....
00005812 F00081A2A28599A3                   8260          DC    X'F00081A2A28599A37A4099846D81A396' 0.assert..rd.ato
00005822 948983F3F26D8785                   8261          DC    X'948983F3F26D8785A34D50999282A486' mic32.get..rkbuf
00005832 98606E999282986D                   8262          DC    X'98606E999282986D8395A35D406E40F0' q..rkbq.cnt....0
00005842 000081A2A28599A3                   8263          DC    X'000081A2A28599A37A40A38899846D89' ..assert..thrd.i
00005852 A26D83A499998595                   8264          DC    X'A26D83A499998595A34D999282606E99' s.current.rkb..r
00005862 92826DA388998581                   8265          DC    X'92826DA388998581845D0000C2E4C6D8' kb.thread...BUFQ
00005872 0000D7A499878995                   8266          DC    X'0000D7A499878995874082A4869840A6' ..Purging.bufq.w
00005882 89A388406C894082                   8267          DC    X'89A388406C894082A486868599A20000' ith..i.buffers..
00005892 E4978481A3899587                   8268          DC    X'E4978481A3899587406C844082A48686' Updating..d.buff
000058A2 8599A24096954083                   8269          DC    X'8599A240969540839695958583A38996' ers.on.connectio
000058B2 95409985A285A300                   8270          DC    X'95409985A285A30082A4869840A689A3' n.reset.bufq.wit
000058C2 88406C844082A486                   8271          DC    X'88406C844082A4868685994DA25D7A00' h..d.buffer.s...
000058D2 40C2A48686859940                   8272          DC    X'40C2A486868599406CA2404D6CA9A440' .Buffer..s...zu.
000058E2 82A8A385A26B4083                   8273          DC    X'82A8A385A26B40839699998984406C84' bytes..corrid..d
000058F2 6B40839695958984                   8274          DC    X'6B40839695958984406C846B40979989' ..connid..d..pri
00005902 96406C846B409985                   8275          DC    X'96406C846B409985A399A8406C844089' o..d..retry..d.i
00005912 95406C93938494A2                   8276          DC    X'95406C93938494A26B40A389948596A4' n..lldms..timeou
00005922 A3408995406C9393                   8277          DC    X'A3408995406C93938494A25D00009984' t.in..lldms...rd
00005932 6D82A4866D938595                   8278          DC    X'6D82A4866D9385954D50999282A48660' .buf.len..rkbuf.
00005942 6E999282A4866D82                   8279          DC    X'6E999282A4866D82A4865D406E40F000' .rkbuf.buf....0.
00005952 998598A485A2A360                   8280          DC    X'998598A485A2A3606E999282A4866D99' request..rkbuf.r
00005962 9282405A7E404D4D                   8281          DC    X'9282405A7E404D4DA5968984405C5DF0' kb......void...0
00005972 5D00000081A2A285                   8282          DC    X'5D00000081A2A28599A37A405A998598' ....assert...req
00005982 A485A2A3606E9992                   8283          DC    X'A485A2A3606E999282A4866D9985A297' uest..rkbuf.resp
00005992 9695A2850000D799                   8284          DC    X'9695A2850000D7999684A4838500C685' onse..Produce.Fe
000059A2 A3838800D68686A2                   8285          DC    X'A3838800D68686A285A30000D485A381' tch.Offset..Meta
000059B2 8481A3810000D385                   8286          DC    X'8481A3810000D38581848599C19584C9' data..LeaderAndI
000059C2 A2990000E2A39697                   8287          DC    X'A2990000E2A39697D985979389838100' sr..StopReplica.
000059D2 E4978481A385D485                   8288          DC    X'E4978481A385D485A3818481A3810000' UpdateMetadata..
000059E2 C39695A399969393                   8289          DC    X'C39695A3999693938584E288A4A38496' ControlledShutdo
000059F2 A6950000D68686A2                   8290          DC    X'A6950000D68686A285A3C396949489A3' wn..OffsetCommit
00005A02 0000D68686A285A3                   8291          DC    X'0000D68686A285A3C685A3838800C689' ..OffsetFetch.Fi
00005A12 9584C39696998489                   8292          DC    X'9584C396969984899581A3969900D196' ndCoordinator.Jo
00005A22 8995C79996A49700                   8293          DC    X'8995C79996A49700C8858199A3828581' inGroup.Heartbea
00005A32 A300D38581A585C7                   8294          DC    X'A300D38581A585C79996A4970000E2A8' t.LeaveGroup..Sy
00005A42 9583C79996A49700                   8295          DC    X'9583C79996A49700C485A28399898285' ncGroup.Describe
00005A52 C79996A497A20000                   8296          DC    X'C79996A497A20000D389A2A3C79996A4' Groups..ListGrou
00005A62 97A20000E281A293                   8297          DC    X'97A20000E281A293C8819584A2888192' ps..SaslHandshak
00005A72 8500C19789E58599                   8298          DC    X'8500C19789E58599A28996950000C399' e.ApiVersion..Cr
00005A82 8581A385E3969789                   8299          DC    X'8581A385E396978983A20000C4859385' eateTopics..Dele
00005A92 A385E396978983A2                   8300          DC    X'A385E396978983A20000C4859385A385' teTopics..Delete
00005AA2 D98583969984A200                   8301          DC    X'D98583969984A200C99589A3D7999684' Records.InitProd
00005AB2 A4838599C9840000                   8302          DC    X'A4838599C9840000D68686A285A3C696' ucerId..OffsetFo
                                                                                                                           Page  167 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005AC2 99D38581848599C5                   8303          DC    X'99D38581848599C5979683880000C184' rLeaderEpoch..Ad
00005AD2 84D78199A389A389                   8304          DC    X'84D78199A389A3899695A2E396E3A795' dPartitionsToTxn
00005AE2 0000C18484D68686                   8305          DC    X'0000C18484D68686A285A3A2E396E3A7' ..AddOffsetsToTx
00005AF2 9500C59584E3A795                   8306          DC    X'9500C59584E3A7950000E69989A385E3' n.EndTxn..WriteT
00005B02 A795D48199928599                   8307          DC    X'A795D48199928599A200E3A795D68686' xnMarkers.TxnOff
00005B12 A285A3C396949489                   8308          DC    X'A285A3C396949489A300C485A2839989' setCommit.Descri
00005B22 8285C18393A20000                   8309          DC    X'8285C18393A20000C3998581A385C183' beAcls..CreateAc
00005B32 93A20000C4859385                   8310          DC    X'93A20000C4859385A385C18393A20000' ls..DeleteAcls..
00005B42 C485A28399898285                   8311          DC    X'C485A28399898285C39695868987A200' DescribeConfigs.
00005B52 C193A38599C39695                   8312          DC    X'C193A38599C39695868987A20000C193' AlterConfigs..Al
00005B62 A38599D985979389                   8313          DC    X'A38599D9859793898381D39687C48999' terReplicaLogDir
00005B72 A200C485A2839989                   8314          DC    X'A200C485A28399898285D39687C48999' s.DescribeLogDir
00005B82 A200E281A293C1A4                   8315          DC    X'A200E281A293C1A4A3888595A3898381' s.SaslAuthentica
00005B92 A3850000C3998581                   8316          DC    X'A3850000C3998581A385D78199A389A3' te..CreatePartit
00005BA2 899695A20000C399                   8317          DC    X'899695A20000C3998581A385C4859385' ions..CreateDele
00005BB2 8781A3899695E396                   8318          DC    X'8781A3899695E39692859500D9859585' gationToken.Rene
00005BC2 A6C48593858781A3                   8319          DC    X'A6C48593858781A3899695E396928595' wDelegationToken
00005BD2 0000C5A797899985                   8320          DC    X'0000C5A797899985C48593858781A389' ..ExpireDelegati
00005BE2 9695E39692859500                   8321          DC    X'9695E39692859500C485A28399898285' onToken.Describe
00005BF2 C48593858781A389                   8322          DC    X'C48593858781A3899695E39692859500' DelegationToken.
00005C02 C4859385A385C799                   8323          DC    X'C4859385A385C79996A497A20000C593' DeleteGroups..El
00005C12 8583A3D385818485                   8324          DC    X'8583A3D38581848599A2D98598A485A2' ectLeadersReques
00005C22 A300C99583998594                   8325          DC    X'A300C995839985948595A38193C193A3' t.IncrementalAlt
00005C32 8599C39695868987                   8326          DC    X'8599C39695868987A2D98598A485A2A3' erConfigsRequest
00005C42 0000C193A38599D7                   8327          DC    X'0000C193A38599D78199A389A3899695' ..AlterPartition
00005C52 D98581A2A2898795                   8328          DC    X'D98581A2A2898795948595A3A2D98598' ReassignmentsReq
00005C62 A485A2A30000D389                   8329          DC    X'A485A2A30000D389A2A3D78199A389A3' uest..ListPartit
00005C72 899695D98581A2A2                   8330          DC    X'899695D98581A2A2898795948595A3A2' ionReassignments
00005C82 D98598A485A2A300                   8331          DC    X'D98598A485A2A300D68686A285A3C485' Request.OffsetDe
00005C92 9385A385D98598A4                   8332          DC    X'9385A385D98598A485A2A300C485A283' leteRequest.Desc
00005CA2 99898285C3938985                   8333          DC    X'99898285C393898595A3D8A496A381A2' ribeClientQuotas
00005CB2 D98598A485A2A300                   8334          DC    X'D98598A485A2A300C193A38599C39389' Request.AlterCli
00005CC2 8595A3D8A496A381                   8335          DC    X'8595A3D8A496A381A2D98598A485A2A3' entQuotasRequest
00005CD2 0000C485A2839989                   8336          DC    X'0000C485A28399898285E4A28599E283' ..DescribeUserSc
00005CE2 998194C399858485                   8337          DC    X'998194C39985848595A3898193A2D985' ramCredentialsRe
00005CF2 98A485A2A300C193                   8338          DC    X'98A485A2A300C193A38599E4A28599E2' quest.AlterUserS
00005D02 83998194C3998584                   8339          DC    X'83998194C39985848595A3898193A2D9' cramCredentialsR
00005D12 8598A485A2A30000                   8340          DC    X'8598A485A2A30000E596A385D98598A4' equest..VoteRequ
00005D22 85A2A300C2858789                   8341          DC    X'85A2A300C285878995D8A49699A494C5' est.BeginQuorumE
00005D32 97968388D98598A4                   8342          DC    X'97968388D98598A485A2A300C59584D8' pochRequest.EndQ
00005D42 A49699A494C59796                   8343          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
00005D52 A300C485A2839989                   8344          DC    X'A300C485A28399898285D8A49699A494' t.DescribeQuorum
00005D62 D98598A485A2A300                   8345          DC    X'D98598A485A2A300C193A38599C9A299' Request.AlterIsr
00005D72 D98598A485A2A300                   8346          DC    X'D98598A485A2A300E4978481A385C685' Request.UpdateFe
00005D82 81A3A49985A2D985                   8347          DC    X'81A3A49985A2D98598A485A2A300C595' aturesRequest.En
00005D92 A58593969785D985                   8348          DC    X'A58593969785D98598A485A2A3009596' velopeRequest.no
00005DA2 9585000087A98997                   8349          DC    X'9585000087A989970000A295819797A8' ne..gzip..snappy
00005DB2 000093A9F400A9A2                   8350          DC    X'000093A9F400A9A2A384000089958885' ..lz4.zstd..inhe
00005DC2 9989A30083969586                   8351          DC    X'9989A300839695868987A49985840000' rit.configured..
00005DD2 9385819995858400                   8352          DC    X'93858199958584008995A38599958193' learned.internal
00005DE2 0000939687898381                   8353          DC    X'00009396878983819300C99589A30000' ..logical.Init..
00005DF2 E3859994899581A3                   8354          DC    X'E3859994899581A38500C681A38193C5' Terminate.FatalE
                                                                                                                           Page  168 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005E02 999996990000D985                   8355          DC    X'999996990000D98598A485A2A3D7C9C4' rror..RequestPID
00005E12 0000E68189A3E399                   8356          DC    X'0000E68189A3E3998195A2979699A300' ..WaitTransport.
00005E22 E68189A3D7C9C400                   8357          DC    X'E68189A3D7C9C400C1A2A28987958584' WaitPID.Assigned
00005E32 0000C499818995D9                   8358          DC    X'0000C499818995D985A285A30000C499' ..DrainReset..Dr
00005E42 818995C2A4949700                   8359          DC    X'818995C2A4949700D9858184A8D596A3' ainBump.ReadyNot
00005E52 C18392858400D985                   8360          DC    X'C18392858400D9858184A800C995E399' Acked.Ready.InTr
00005E62 8195A28183A38996                   8361          DC    X'8195A28183A389969500C285878995C3' ansaction.BeginC
00005E72 96949489A300C396                   8362          DC    X'96949489A300C396949489A3A3899587' ommit.Committing
00005E82 E3998195A28183A3                   8363          DC    X'E3998195A28183A389969500C3969494' Transaction.Comm
00005E92 89A3D596A3C18392                   8364          DC    X'89A3D596A3C1839285840000C1829699' itNotAcked..Abor
00005EA2 A3899587E3998195                   8365          DC    X'A3899587E3998195A28183A389969500' tingTransaction.
00005EB2 C1829699A38584D5                   8366          DC    X'C1829699A38584D596A3C18392858400' AbortedNotAcked.
00005EC2 C1829699A3818293                   8367          DC    X'C1829699A381829385C5999996990000' AbortableError..
                                            8368 @Ecrc_table ALIAS X'8399836DA381829385'
                                            8369          EXTRN @Ecrc_table
                                            8370 *
                                            8371 *
                                            8372 *   Re-entrant Data Initialization Section
                                            8373 *
                                            8374 @@INIT@  ALIAS C'rdkafka_buf:'
00005ED8                00005ED8 00001040   8375 @@INIT@  CSECT
                                            8376 @@INIT@  AMODE ANY
                                            8377 @@INIT@  RMODE ANY
00005ED8 05                                 8378          DC    XL1'5'
00005ED9 000000                             8379          DC    AL3(0)
00005EDC 00000120                           8380          DC    AL4(288)
00005EE0 00000000                           8381          DC    4X'00'
00005EE4 00000000                           8382          DC    Q(@@STATIC)
00005EE8 00000000                           8383          DC    X'00000000'
00005EEC 00000001                           8384          DC    X'00000001'
00005EF0 00000000                           8385          DC    X'00000000'
00005EF4 000000FF                           8386          DC    X'000000FF'
00005EF8 0102039C09867F97                   8387          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00005F08 1112139D85088718                   8388          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00005F18 818283840A171B88                   8389          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00005F28 9116939495960498                   8390          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00005F38 A0E2E4E0E1E3E5E7                   8391          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00005F48 E9EAEBE8EDEEEFEC                   8392          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00005F58 2FC2C4C0C1C3C5C7                   8393          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00005F68 C9CACBC8CDCECFCC                   8394          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00005F78 6162636465666768                   8395          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00005F88 6A6B6C6D6E6F7071                   8396          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00005F98 7E73747576777879                   8397          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00005FA8 A3A5B7A9A7B6BCBD                   8398          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00005FB8 4142434445464748                   8399          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00005FC8 4A4B4C4D4E4F5051                   8400          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00005FD8 F753545556575859                   8401          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00005FE8 3132333435363738                   8402          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            8403 *
00005FF8 05                                 8404          DC    XL1'5'
00005FF9 000000                             8405          DC    AL3(0)
00005FFC 000001E0                           8406          DC    AL4(480)
                                                                                                                           Page  169 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006000 00000000                           8407          DC    4X'00'
00006004 00000000                           8408          DC    Q(@@STATIC)
00006008 00000000                           8409          DC    X'00000000'
0000600C 00000101                           8410          DC    X'00000101'
00006010 00000000                           8411          DC    X'00000000'
00006014 000000A0                           8412          DC    X'000000A0'
00006018 010203372D2E2F16                   8413          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00006028 1112133C3D322618                   8414          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00006038 5A7F7B5B6C507D4D                   8415          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00006048 F1F2F3F4F5F6F7F8                   8416          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00006058 C1C2C3C4C5C6C7C8                   8417          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00006068 D8D9E2E3E4E5E6E7                   8418          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00006078 8182838485868788                   8419          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00006088 9899A2A3A4A5A6A7                   8420          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00006098 2122232425061728                   8421          DC    X'2122232425061728292A2B2C090A1B30' ................
000060A8 311A333435360838                   8422          DC    X'311A333435360838393A3B04143EFF80' ................
                                            8423 *
000060B8 05                                 8424          DC    XL1'5'
000060B9 000000                             8425          DC    AL3(0)
000060BC 00000208                           8426          DC    AL4(520)
000060C0 00000000                           8427          DC    4X'00'
000060C4 00000000                           8428          DC    Q(@@STATIC)
000060C8 00000000                           8429          DC    X'00000000'
000060CC 000001C0                           8430          DC    X'000001C0'
000060D0 00000000                           8431          DC    X'00000000'
000060D4 00000001                           8432          DC    X'00000001'
000060D8 8A40404040404040                   8433          DC    X'8A40404040404040'                 ........
                                            8434 *
000060E0 05                                 8435          DC    XL1'5'
000060E1 000000                             8436          DC    AL3(0)
000060E4 00000230                           8437          DC    AL4(560)
000060E8 00000000                           8438          DC    4X'00'
000060EC 00000000                           8439          DC    Q(@@STATIC)
000060F0 00000000                           8440          DC    X'00000000'
000060F4 000001E0                           8441          DC    X'000001E0'
000060F8 00000000                           8442          DC    X'00000000'
000060FC 00000001                           8443          DC    X'00000001'
00006100 8B40404040404040                   8444          DC    X'8B40404040404040'                 ........
                                            8445 *
00006108 0D                                 8446          DC    XL1'D'
00006109 000000                             8447          DC    AL3(0)
0000610C 00000258                           8448          DC    AL4(600)
00006110 00000000                           8449          DC    4X'00'
00006114 00000000                           8450          DC    Q(@@STATIC)
00006118 00000000                           8451          DC    X'00000000'
0000611C 00000220                           8452          DC    X'00000220'
00006120 00000000000054D8                   8453          DC    ADL8(@DATA)
00006128 00000000                           8454          DC    X'00000000'
0000612C 000004C0                           8455          DC    X'000004C0'
                                            8456 *
00006130 0D                                 8457          DC    XL1'D'
00006131 000000                             8458          DC    AL3(0)
                                                                                                                           Page  170 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006134 00000280                           8459          DC    AL4(640)
00006138 00000000                           8460          DC    4X'00'
0000613C 00000000                           8461          DC    Q(@@STATIC)
00006140 00000000                           8462          DC    X'00000000'
00006144 00000228                           8463          DC    X'00000228'
00006148 00000000000054D8                   8464          DC    ADL8(@DATA)
00006150 00000000                           8465          DC    X'00000000'
00006154 000004C8                           8466          DC    X'000004C8'
                                            8467 *
00006158 0D                                 8468          DC    XL1'D'
00006159 000000                             8469          DC    AL3(0)
0000615C 000002A8                           8470          DC    AL4(680)
00006160 00000000                           8471          DC    4X'00'
00006164 00000000                           8472          DC    Q(@@STATIC)
00006168 00000000                           8473          DC    X'00000000'
0000616C 00000230                           8474          DC    X'00000230'
00006170 00000000000054D8                   8475          DC    ADL8(@DATA)
00006178 00000000                           8476          DC    X'00000000'
0000617C 000004CE                           8477          DC    X'000004CE'
                                            8478 *
00006180 0D                                 8479          DC    XL1'D'
00006181 000000                             8480          DC    AL3(0)
00006184 000002D0                           8481          DC    AL4(720)
00006188 00000000                           8482          DC    4X'00'
0000618C 00000000                           8483          DC    Q(@@STATIC)
00006190 00000000                           8484          DC    X'00000000'
00006194 00000238                           8485          DC    X'00000238'
00006198 00000000000054D8                   8486          DC    ADL8(@DATA)
000061A0 00000000                           8487          DC    X'00000000'
000061A4 000004D6                           8488          DC    X'000004D6'
                                            8489 *
000061A8 0D                                 8490          DC    XL1'D'
000061A9 000000                             8491          DC    AL3(0)
000061AC 000002F8                           8492          DC    AL4(760)
000061B0 00000000                           8493          DC    4X'00'
000061B4 00000000                           8494          DC    Q(@@STATIC)
000061B8 00000000                           8495          DC    X'00000000'
000061BC 00000240                           8496          DC    X'00000240'
000061C0 00000000000054D8                   8497          DC    ADL8(@DATA)
000061C8 00000000                           8498          DC    X'00000000'
000061CC 000004E0                           8499          DC    X'000004E0'
                                            8500 *
000061D0 0D                                 8501          DC    XL1'D'
000061D1 000000                             8502          DC    AL3(0)
000061D4 00000320                           8503          DC    AL4(800)
000061D8 00000000                           8504          DC    4X'00'
000061DC 00000000                           8505          DC    Q(@@STATIC)
000061E0 00000000                           8506          DC    X'00000000'
000061E4 00000248                           8507          DC    X'00000248'
000061E8 00000000000054D8                   8508          DC    ADL8(@DATA)
000061F0 00000000                           8509          DC    X'00000000'
000061F4 000004EE                           8510          DC    X'000004EE'
                                                                                                                           Page  171 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            8511 *
000061F8 0D                                 8512          DC    XL1'D'
000061F9 000000                             8513          DC    AL3(0)
000061FC 00000348                           8514          DC    AL4(840)
00006200 00000000                           8515          DC    4X'00'
00006204 00000000                           8516          DC    Q(@@STATIC)
00006208 00000000                           8517          DC    X'00000000'
0000620C 00000250                           8518          DC    X'00000250'
00006210 00000000000054D8                   8519          DC    ADL8(@DATA)
00006218 00000000                           8520          DC    X'00000000'
0000621C 000004FA                           8521          DC    X'000004FA'
                                            8522 *
00006220 0D                                 8523          DC    XL1'D'
00006221 000000                             8524          DC    AL3(0)
00006224 00000370                           8525          DC    AL4(880)
00006228 00000000                           8526          DC    4X'00'
0000622C 00000000                           8527          DC    Q(@@STATIC)
00006230 00000000                           8528          DC    X'00000000'
00006234 00000258                           8529          DC    X'00000258'
00006238 00000000000054D8                   8530          DC    ADL8(@DATA)
00006240 00000000                           8531          DC    X'00000000'
00006244 0000050A                           8532          DC    X'0000050A'
                                            8533 *
00006248 0D                                 8534          DC    XL1'D'
00006249 000000                             8535          DC    AL3(0)
0000624C 00000398                           8536          DC    AL4(920)
00006250 00000000                           8537          DC    4X'00'
00006254 00000000                           8538          DC    Q(@@STATIC)
00006258 00000000                           8539          DC    X'00000000'
0000625C 00000260                           8540          DC    X'00000260'
00006260 00000000000054D8                   8541          DC    ADL8(@DATA)
00006268 00000000                           8542          DC    X'00000000'
0000626C 0000051E                           8543          DC    X'0000051E'
                                            8544 *
00006270 0D                                 8545          DC    XL1'D'
00006271 000000                             8546          DC    AL3(0)
00006274 000003C0                           8547          DC    AL4(960)
00006278 00000000                           8548          DC    4X'00'
0000627C 00000000                           8549          DC    Q(@@STATIC)
00006280 00000000                           8550          DC    X'00000000'
00006284 00000268                           8551          DC    X'00000268'
00006288 00000000000054D8                   8552          DC    ADL8(@DATA)
00006290 00000000                           8553          DC    X'00000000'
00006294 0000052C                           8554          DC    X'0000052C'
                                            8555 *
00006298 0D                                 8556          DC    XL1'D'
00006299 000000                             8557          DC    AL3(0)
0000629C 000003E8                           8558          DC    AL4(1000)
000062A0 00000000                           8559          DC    4X'00'
000062A4 00000000                           8560          DC    Q(@@STATIC)
000062A8 00000000                           8561          DC    X'00000000'
000062AC 00000270                           8562          DC    X'00000270'
                                                                                                                           Page  172 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000062B0 00000000000054D8                   8563          DC    ADL8(@DATA)
000062B8 00000000                           8564          DC    X'00000000'
000062BC 00000538                           8565          DC    X'00000538'
                                            8566 *
000062C0 0D                                 8567          DC    XL1'D'
000062C1 000000                             8568          DC    AL3(0)
000062C4 00000410                           8569          DC    AL4(1040)
000062C8 00000000                           8570          DC    4X'00'
000062CC 00000000                           8571          DC    Q(@@STATIC)
000062D0 00000000                           8572          DC    X'00000000'
000062D4 00000278                           8573          DC    X'00000278'
000062D8 00000000000054D8                   8574          DC    ADL8(@DATA)
000062E0 00000000                           8575          DC    X'00000000'
000062E4 00000548                           8576          DC    X'00000548'
                                            8577 *
000062E8 0D                                 8578          DC    XL1'D'
000062E9 000000                             8579          DC    AL3(0)
000062EC 00000438                           8580          DC    AL4(1080)
000062F0 00000000                           8581          DC    4X'00'
000062F4 00000000                           8582          DC    Q(@@STATIC)
000062F8 00000000                           8583          DC    X'00000000'
000062FC 00000280                           8584          DC    X'00000280'
00006300 00000000000054D8                   8585          DC    ADL8(@DATA)
00006308 00000000                           8586          DC    X'00000000'
0000630C 00000552                           8587          DC    X'00000552'
                                            8588 *
00006310 0D                                 8589          DC    XL1'D'
00006311 000000                             8590          DC    AL3(0)
00006314 00000460                           8591          DC    AL4(1120)
00006318 00000000                           8592          DC    4X'00'
0000631C 00000000                           8593          DC    Q(@@STATIC)
00006320 00000000                           8594          DC    X'00000000'
00006324 00000288                           8595          DC    X'00000288'
00006328 00000000000054D8                   8596          DC    ADL8(@DATA)
00006330 00000000                           8597          DC    X'00000000'
00006334 0000055C                           8598          DC    X'0000055C'
                                            8599 *
00006338 0D                                 8600          DC    XL1'D'
00006339 000000                             8601          DC    AL3(0)
0000633C 00000488                           8602          DC    AL4(1160)
00006340 00000000                           8603          DC    4X'00'
00006344 00000000                           8604          DC    Q(@@STATIC)
00006348 00000000                           8605          DC    X'00000000'
0000634C 00000290                           8606          DC    X'00000290'
00006350 00000000000054D8                   8607          DC    ADL8(@DATA)
00006358 00000000                           8608          DC    X'00000000'
0000635C 00000568                           8609          DC    X'00000568'
                                            8610 *
00006360 0D                                 8611          DC    XL1'D'
00006361 000000                             8612          DC    AL3(0)
00006364 000004B0                           8613          DC    AL4(1200)
00006368 00000000                           8614          DC    4X'00'
                                                                                                                           Page  173 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000636C 00000000                           8615          DC    Q(@@STATIC)
00006370 00000000                           8616          DC    X'00000000'
00006374 00000298                           8617          DC    X'00000298'
00006378 00000000000054D8                   8618          DC    ADL8(@DATA)
00006380 00000000                           8619          DC    X'00000000'
00006384 00000572                           8620          DC    X'00000572'
                                            8621 *
00006388 0D                                 8622          DC    XL1'D'
00006389 000000                             8623          DC    AL3(0)
0000638C 000004D8                           8624          DC    AL4(1240)
00006390 00000000                           8625          DC    4X'00'
00006394 00000000                           8626          DC    Q(@@STATIC)
00006398 00000000                           8627          DC    X'00000000'
0000639C 000002A0                           8628          DC    X'000002A0'
000063A0 00000000000054D8                   8629          DC    ADL8(@DATA)
000063A8 00000000                           8630          DC    X'00000000'
000063AC 00000582                           8631          DC    X'00000582'
                                            8632 *
000063B0 0D                                 8633          DC    XL1'D'
000063B1 000000                             8634          DC    AL3(0)
000063B4 00000500                           8635          DC    AL4(1280)
000063B8 00000000                           8636          DC    4X'00'
000063BC 00000000                           8637          DC    Q(@@STATIC)
000063C0 00000000                           8638          DC    X'00000000'
000063C4 000002A8                           8639          DC    X'000002A8'
000063C8 00000000000054D8                   8640          DC    ADL8(@DATA)
000063D0 00000000                           8641          DC    X'00000000'
000063D4 0000058E                           8642          DC    X'0000058E'
                                            8643 *
000063D8 0D                                 8644          DC    XL1'D'
000063D9 000000                             8645          DC    AL3(0)
000063DC 00000528                           8646          DC    AL4(1320)
000063E0 00000000                           8647          DC    4X'00'
000063E4 00000000                           8648          DC    Q(@@STATIC)
000063E8 00000000                           8649          DC    X'00000000'
000063EC 000002B0                           8650          DC    X'000002B0'
000063F0 00000000000054D8                   8651          DC    ADL8(@DATA)
000063F8 00000000                           8652          DC    X'00000000'
000063FC 0000059C                           8653          DC    X'0000059C'
                                            8654 *
00006400 0D                                 8655          DC    XL1'D'
00006401 000000                             8656          DC    AL3(0)
00006404 00000550                           8657          DC    AL4(1360)
00006408 00000000                           8658          DC    4X'00'
0000640C 00000000                           8659          DC    Q(@@STATIC)
00006410 00000000                           8660          DC    X'00000000'
00006414 000002B8                           8661          DC    X'000002B8'
00006418 00000000000054D8                   8662          DC    ADL8(@DATA)
00006420 00000000                           8663          DC    X'00000000'
00006424 000005A8                           8664          DC    X'000005A8'
                                            8665 *
00006428 0D                                 8666          DC    XL1'D'
                                                                                                                           Page  174 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006429 000000                             8667          DC    AL3(0)
0000642C 00000578                           8668          DC    AL4(1400)
00006430 00000000                           8669          DC    4X'00'
00006434 00000000                           8670          DC    Q(@@STATIC)
00006438 00000000                           8671          DC    X'00000000'
0000643C 000002C0                           8672          DC    X'000002C0'
00006440 00000000000054D8                   8673          DC    ADL8(@DATA)
00006448 00000000                           8674          DC    X'00000000'
0000644C 000005B6                           8675          DC    X'000005B6'
                                            8676 *
00006450 0D                                 8677          DC    XL1'D'
00006451 000000                             8678          DC    AL3(0)
00006454 000005A0                           8679          DC    AL4(1440)
00006458 00000000                           8680          DC    4X'00'
0000645C 00000000                           8681          DC    Q(@@STATIC)
00006460 00000000                           8682          DC    X'00000000'
00006464 000002C8                           8683          DC    X'000002C8'
00006468 00000000000054D8                   8684          DC    ADL8(@DATA)
00006470 00000000                           8685          DC    X'00000000'
00006474 000005C4                           8686          DC    X'000005C4'
                                            8687 *
00006478 0D                                 8688          DC    XL1'D'
00006479 000000                             8689          DC    AL3(0)
0000647C 000005C8                           8690          DC    AL4(1480)
00006480 00000000                           8691          DC    4X'00'
00006484 00000000                           8692          DC    Q(@@STATIC)
00006488 00000000                           8693          DC    X'00000000'
0000648C 000002D0                           8694          DC    X'000002D0'
00006490 00000000000054D8                   8695          DC    ADL8(@DATA)
00006498 00000000                           8696          DC    X'00000000'
0000649C 000005D2                           8697          DC    X'000005D2'
                                            8698 *
000064A0 0D                                 8699          DC    XL1'D'
000064A1 000000                             8700          DC    AL3(0)
000064A4 000005F0                           8701          DC    AL4(1520)
000064A8 00000000                           8702          DC    4X'00'
000064AC 00000000                           8703          DC    Q(@@STATIC)
000064B0 00000000                           8704          DC    X'00000000'
000064B4 000002D8                           8705          DC    X'000002D8'
000064B8 00000000000054D8                   8706          DC    ADL8(@DATA)
000064C0 00000000                           8707          DC    X'00000000'
000064C4 000005E2                           8708          DC    X'000005E2'
                                            8709 *
000064C8 0D                                 8710          DC    XL1'D'
000064C9 000000                             8711          DC    AL3(0)
000064CC 00000618                           8712          DC    AL4(1560)
000064D0 00000000                           8713          DC    4X'00'
000064D4 00000000                           8714          DC    Q(@@STATIC)
000064D8 00000000                           8715          DC    X'00000000'
000064DC 000002E0                           8716          DC    X'000002E0'
000064E0 00000000000054D8                   8717          DC    ADL8(@DATA)
000064E8 00000000                           8718          DC    X'00000000'
                                                                                                                           Page  175 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000064EC 000005F8                           8719          DC    X'000005F8'
                                            8720 *
000064F0 0D                                 8721          DC    XL1'D'
000064F1 000000                             8722          DC    AL3(0)
000064F4 00000640                           8723          DC    AL4(1600)
000064F8 00000000                           8724          DC    4X'00'
000064FC 00000000                           8725          DC    Q(@@STATIC)
00006500 00000000                           8726          DC    X'00000000'
00006504 000002E8                           8727          DC    X'000002E8'
00006508 00000000000054D8                   8728          DC    ADL8(@DATA)
00006510 00000000                           8729          DC    X'00000000'
00006514 0000060C                           8730          DC    X'0000060C'
                                            8731 *
00006518 0D                                 8732          DC    XL1'D'
00006519 000000                             8733          DC    AL3(0)
0000651C 00000668                           8734          DC    AL4(1640)
00006520 00000000                           8735          DC    4X'00'
00006524 00000000                           8736          DC    Q(@@STATIC)
00006528 00000000                           8737          DC    X'00000000'
0000652C 000002F0                           8738          DC    X'000002F0'
00006530 00000000000054D8                   8739          DC    ADL8(@DATA)
00006538 00000000                           8740          DC    X'00000000'
0000653C 0000061C                           8741          DC    X'0000061C'
                                            8742 *
00006540 0D                                 8743          DC    XL1'D'
00006541 000000                             8744          DC    AL3(0)
00006544 00000690                           8745          DC    AL4(1680)
00006548 00000000                           8746          DC    4X'00'
0000654C 00000000                           8747          DC    Q(@@STATIC)
00006550 00000000                           8748          DC    X'00000000'
00006554 000002F8                           8749          DC    X'000002F8'
00006558 00000000000054D8                   8750          DC    ADL8(@DATA)
00006560 00000000                           8751          DC    X'00000000'
00006564 00000624                           8752          DC    X'00000624'
                                            8753 *
00006568 0D                                 8754          DC    XL1'D'
00006569 000000                             8755          DC    AL3(0)
0000656C 000006B8                           8756          DC    AL4(1720)
00006570 00000000                           8757          DC    4X'00'
00006574 00000000                           8758          DC    Q(@@STATIC)
00006578 00000000                           8759          DC    X'00000000'
0000657C 00000300                           8760          DC    X'00000300'
00006580 00000000000054D8                   8761          DC    ADL8(@DATA)
00006588 00000000                           8762          DC    X'00000000'
0000658C 00000634                           8763          DC    X'00000634'
                                            8764 *
00006590 0D                                 8765          DC    XL1'D'
00006591 000000                             8766          DC    AL3(0)
00006594 000006E0                           8767          DC    AL4(1760)
00006598 00000000                           8768          DC    4X'00'
0000659C 00000000                           8769          DC    Q(@@STATIC)
000065A0 00000000                           8770          DC    X'00000000'
                                                                                                                           Page  176 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000065A4 00000308                           8771          DC    X'00000308'
000065A8 00000000000054D8                   8772          DC    ADL8(@DATA)
000065B0 00000000                           8773          DC    X'00000000'
000065B4 00000644                           8774          DC    X'00000644'
                                            8775 *
000065B8 0D                                 8776          DC    XL1'D'
000065B9 000000                             8777          DC    AL3(0)
000065BC 00000708                           8778          DC    AL4(1800)
000065C0 00000000                           8779          DC    4X'00'
000065C4 00000000                           8780          DC    Q(@@STATIC)
000065C8 00000000                           8781          DC    X'00000000'
000065CC 00000310                           8782          DC    X'00000310'
000065D0 00000000000054D8                   8783          DC    ADL8(@DATA)
000065D8 00000000                           8784          DC    X'00000000'
000065DC 00000652                           8785          DC    X'00000652'
                                            8786 *
000065E0 0D                                 8787          DC    XL1'D'
000065E1 000000                             8788          DC    AL3(0)
000065E4 00000730                           8789          DC    AL4(1840)
000065E8 00000000                           8790          DC    4X'00'
000065EC 00000000                           8791          DC    Q(@@STATIC)
000065F0 00000000                           8792          DC    X'00000000'
000065F4 00000318                           8793          DC    X'00000318'
000065F8 00000000000054D8                   8794          DC    ADL8(@DATA)
00006600 00000000                           8795          DC    X'00000000'
00006604 0000065E                           8796          DC    X'0000065E'
                                            8797 *
00006608 0D                                 8798          DC    XL1'D'
00006609 000000                             8799          DC    AL3(0)
0000660C 00000758                           8800          DC    AL4(1880)
00006610 00000000                           8801          DC    4X'00'
00006614 00000000                           8802          DC    Q(@@STATIC)
00006618 00000000                           8803          DC    X'00000000'
0000661C 00000320                           8804          DC    X'00000320'
00006620 00000000000054D8                   8805          DC    ADL8(@DATA)
00006628 00000000                           8806          DC    X'00000000'
0000662C 0000066A                           8807          DC    X'0000066A'
                                            8808 *
00006630 0D                                 8809          DC    XL1'D'
00006631 000000                             8810          DC    AL3(0)
00006634 00000780                           8811          DC    AL4(1920)
00006638 00000000                           8812          DC    4X'00'
0000663C 00000000                           8813          DC    Q(@@STATIC)
00006640 00000000                           8814          DC    X'00000000'
00006644 00000328                           8815          DC    X'00000328'
00006648 00000000000054D8                   8816          DC    ADL8(@DATA)
00006650 00000000                           8817          DC    X'00000000'
00006654 0000067A                           8818          DC    X'0000067A'
                                            8819 *
00006658 0D                                 8820          DC    XL1'D'
00006659 000000                             8821          DC    AL3(0)
0000665C 000007A8                           8822          DC    AL4(1960)
                                                                                                                           Page  177 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006660 00000000                           8823          DC    4X'00'
00006664 00000000                           8824          DC    Q(@@STATIC)
00006668 00000000                           8825          DC    X'00000000'
0000666C 00000330                           8826          DC    X'00000330'
00006670 00000000000054D8                   8827          DC    ADL8(@DATA)
00006678 00000000                           8828          DC    X'00000000'
0000667C 00000688                           8829          DC    X'00000688'
                                            8830 *
00006680 0D                                 8831          DC    XL1'D'
00006681 000000                             8832          DC    AL3(0)
00006684 000007D0                           8833          DC    AL4(2000)
00006688 00000000                           8834          DC    4X'00'
0000668C 00000000                           8835          DC    Q(@@STATIC)
00006690 00000000                           8836          DC    X'00000000'
00006694 00000338                           8837          DC    X'00000338'
00006698 00000000000054D8                   8838          DC    ADL8(@DATA)
000066A0 00000000                           8839          DC    X'00000000'
000066A4 0000069C                           8840          DC    X'0000069C'
                                            8841 *
000066A8 0D                                 8842          DC    XL1'D'
000066A9 000000                             8843          DC    AL3(0)
000066AC 000007F8                           8844          DC    AL4(2040)
000066B0 00000000                           8845          DC    4X'00'
000066B4 00000000                           8846          DC    Q(@@STATIC)
000066B8 00000000                           8847          DC    X'00000000'
000066BC 00000340                           8848          DC    X'00000340'
000066C0 00000000000054D8                   8849          DC    ADL8(@DATA)
000066C8 00000000                           8850          DC    X'00000000'
000066CC 000006AC                           8851          DC    X'000006AC'
                                            8852 *
000066D0 0D                                 8853          DC    XL1'D'
000066D1 000000                             8854          DC    AL3(0)
000066D4 00000820                           8855          DC    AL4(2080)
000066D8 00000000                           8856          DC    4X'00'
000066DC 00000000                           8857          DC    Q(@@STATIC)
000066E0 00000000                           8858          DC    X'00000000'
000066E4 00000348                           8859          DC    X'00000348'
000066E8 00000000000054D8                   8860          DC    ADL8(@DATA)
000066F0 00000000                           8861          DC    X'00000000'
000066F4 000006BE                           8862          DC    X'000006BE'
                                            8863 *
000066F8 0D                                 8864          DC    XL1'D'
000066F9 000000                             8865          DC    AL3(0)
000066FC 00000848                           8866          DC    AL4(2120)
00006700 00000000                           8867          DC    4X'00'
00006704 00000000                           8868          DC    Q(@@STATIC)
00006708 00000000                           8869          DC    X'00000000'
0000670C 00000350                           8870          DC    X'00000350'
00006710 00000000000054D8                   8871          DC    ADL8(@DATA)
00006718 00000000                           8872          DC    X'00000000'
0000671C 000006D0                           8873          DC    X'000006D0'
                                            8874 *
                                                                                                                           Page  178 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006720 0D                                 8875          DC    XL1'D'
00006721 000000                             8876          DC    AL3(0)
00006724 00000870                           8877          DC    AL4(2160)
00006728 00000000                           8878          DC    4X'00'
0000672C 00000000                           8879          DC    Q(@@STATIC)
00006730 00000000                           8880          DC    X'00000000'
00006734 00000358                           8881          DC    X'00000358'
00006738 00000000000054D8                   8882          DC    ADL8(@DATA)
00006740 00000000                           8883          DC    X'00000000'
00006744 000006E6                           8884          DC    X'000006E6'
                                            8885 *
00006748 0D                                 8886          DC    XL1'D'
00006749 000000                             8887          DC    AL3(0)
0000674C 00000898                           8888          DC    AL4(2200)
00006750 00000000                           8889          DC    4X'00'
00006754 00000000                           8890          DC    Q(@@STATIC)
00006758 00000000                           8891          DC    X'00000000'
0000675C 00000360                           8892          DC    X'00000360'
00006760 00000000000054D8                   8893          DC    ADL8(@DATA)
00006768 00000000                           8894          DC    X'00000000'
0000676C 000006FC                           8895          DC    X'000006FC'
                                            8896 *
00006770 0D                                 8897          DC    XL1'D'
00006771 000000                             8898          DC    AL3(0)
00006774 000008C0                           8899          DC    AL4(2240)
00006778 00000000                           8900          DC    4X'00'
0000677C 00000000                           8901          DC    Q(@@STATIC)
00006780 00000000                           8902          DC    X'00000000'
00006784 00000368                           8903          DC    X'00000368'
00006788 00000000000054D8                   8904          DC    ADL8(@DATA)
00006790 00000000                           8905          DC    X'00000000'
00006794 00000712                           8906          DC    X'00000712'
                                            8907 *
00006798 0D                                 8908          DC    XL1'D'
00006799 000000                             8909          DC    AL3(0)
0000679C 000008E8                           8910          DC    AL4(2280)
000067A0 00000000                           8911          DC    4X'00'
000067A4 00000000                           8912          DC    Q(@@STATIC)
000067A8 00000000                           8913          DC    X'00000000'
000067AC 00000370                           8914          DC    X'00000370'
000067B0 00000000000054D8                   8915          DC    ADL8(@DATA)
000067B8 00000000                           8916          DC    X'00000000'
000067BC 0000072A                           8917          DC    X'0000072A'
                                            8918 *
000067C0 0D                                 8919          DC    XL1'D'
000067C1 000000                             8920          DC    AL3(0)
000067C4 00000910                           8921          DC    AL4(2320)
000067C8 00000000                           8922          DC    4X'00'
000067CC 00000000                           8923          DC    Q(@@STATIC)
000067D0 00000000                           8924          DC    X'00000000'
000067D4 00000378                           8925          DC    X'00000378'
000067D8 00000000000054D8                   8926          DC    ADL8(@DATA)
                                                                                                                           Page  179 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000067E0 00000000                           8927          DC    X'00000000'
000067E4 00000738                           8928          DC    X'00000738'
                                            8929 *
000067E8 0D                                 8930          DC    XL1'D'
000067E9 000000                             8931          DC    AL3(0)
000067EC 00000938                           8932          DC    AL4(2360)
000067F0 00000000                           8933          DC    4X'00'
000067F4 00000000                           8934          DC    Q(@@STATIC)
000067F8 00000000                           8935          DC    X'00000000'
000067FC 00000380                           8936          DC    X'00000380'
00006800 00000000000054D8                   8937          DC    ADL8(@DATA)
00006808 00000000                           8938          DC    X'00000000'
0000680C 0000074C                           8939          DC    X'0000074C'
                                            8940 *
00006810 0D                                 8941          DC    XL1'D'
00006811 000000                             8942          DC    AL3(0)
00006814 00000960                           8943          DC    AL4(2400)
00006818 00000000                           8944          DC    4X'00'
0000681C 00000000                           8945          DC    Q(@@STATIC)
00006820 00000000                           8946          DC    X'00000000'
00006824 00000388                           8947          DC    X'00000388'
00006828 00000000000054D8                   8948          DC    ADL8(@DATA)
00006830 00000000                           8949          DC    X'00000000'
00006834 0000076C                           8950          DC    X'0000076C'
                                            8951 *
00006838 0D                                 8952          DC    XL1'D'
00006839 000000                             8953          DC    AL3(0)
0000683C 00000988                           8954          DC    AL4(2440)
00006840 00000000                           8955          DC    4X'00'
00006844 00000000                           8956          DC    Q(@@STATIC)
00006848 00000000                           8957          DC    X'00000000'
0000684C 00000390                           8958          DC    X'00000390'
00006850 00000000000054D8                   8959          DC    ADL8(@DATA)
00006858 00000000                           8960          DC    X'00000000'
0000685C 00000790                           8961          DC    X'00000790'
                                            8962 *
00006860 0D                                 8963          DC    XL1'D'
00006861 000000                             8964          DC    AL3(0)
00006864 000009B0                           8965          DC    AL4(2480)
00006868 00000000                           8966          DC    4X'00'
0000686C 00000000                           8967          DC    Q(@@STATIC)
00006870 00000000                           8968          DC    X'00000000'
00006874 00000398                           8969          DC    X'00000398'
00006878 00000000000054D8                   8970          DC    ADL8(@DATA)
00006880 00000000                           8971          DC    X'00000000'
00006884 000007B2                           8972          DC    X'000007B2'
                                            8973 *
00006888 0D                                 8974          DC    XL1'D'
00006889 000000                             8975          DC    AL3(0)
0000688C 000009D8                           8976          DC    AL4(2520)
00006890 00000000                           8977          DC    4X'00'
00006894 00000000                           8978          DC    Q(@@STATIC)
                                                                                                                           Page  180 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006898 00000000                           8979          DC    X'00000000'
0000689C 000003A0                           8980          DC    X'000003A0'
000068A0 00000000000054D8                   8981          DC    ADL8(@DATA)
000068A8 00000000                           8982          DC    X'00000000'
000068AC 000007C6                           8983          DC    X'000007C6'
                                            8984 *
000068B0 0D                                 8985          DC    XL1'D'
000068B1 000000                             8986          DC    AL3(0)
000068B4 00000A00                           8987          DC    AL4(2560)
000068B8 00000000                           8988          DC    4X'00'
000068BC 00000000                           8989          DC    Q(@@STATIC)
000068C0 00000000                           8990          DC    X'00000000'
000068C4 000003A8                           8991          DC    X'000003A8'
000068C8 00000000000054D8                   8992          DC    ADL8(@DATA)
000068D0 00000000                           8993          DC    X'00000000'
000068D4 000007E2                           8994          DC    X'000007E2'
                                            8995 *
000068D8 0D                                 8996          DC    XL1'D'
000068D9 000000                             8997          DC    AL3(0)
000068DC 00000A28                           8998          DC    AL4(2600)
000068E0 00000000                           8999          DC    4X'00'
000068E4 00000000                           9000          DC    Q(@@STATIC)
000068E8 00000000                           9001          DC    X'00000000'
000068EC 000003B0                           9002          DC    X'000003B0'
000068F0 00000000000054D8                   9003          DC    ADL8(@DATA)
000068F8 00000000                           9004          DC    X'00000000'
000068FC 000007FC                           9005          DC    X'000007FC'
                                            9006 *
00006900 0D                                 9007          DC    XL1'D'
00006901 000000                             9008          DC    AL3(0)
00006904 00000A50                           9009          DC    AL4(2640)
00006908 00000000                           9010          DC    4X'00'
0000690C 00000000                           9011          DC    Q(@@STATIC)
00006910 00000000                           9012          DC    X'00000000'
00006914 000003B8                           9013          DC    X'000003B8'
00006918 00000000000054D8                   9014          DC    ADL8(@DATA)
00006920 00000000                           9015          DC    X'00000000'
00006924 00000820                           9016          DC    X'00000820'
                                            9017 *
00006928 0D                                 9018          DC    XL1'D'
00006929 000000                             9019          DC    AL3(0)
0000692C 00000A78                           9020          DC    AL4(2680)
00006930 00000000                           9021          DC    4X'00'
00006934 00000000                           9022          DC    Q(@@STATIC)
00006938 00000000                           9023          DC    X'00000000'
0000693C 000003C0                           9024          DC    X'000003C0'
00006940 00000000000054D8                   9025          DC    ADL8(@DATA)
00006948 00000000                           9026          DC    X'00000000'
0000694C 00000842                           9027          DC    X'00000842'
                                            9028 *
00006950 0D                                 9029          DC    XL1'D'
00006951 000000                             9030          DC    AL3(0)
                                                                                                                           Page  181 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006954 00000AA0                           9031          DC    AL4(2720)
00006958 00000000                           9032          DC    4X'00'
0000695C 00000000                           9033          DC    Q(@@STATIC)
00006960 00000000                           9034          DC    X'00000000'
00006964 000003C8                           9035          DC    X'000003C8'
00006968 00000000000054D8                   9036          DC    ADL8(@DATA)
00006970 00000000                           9037          DC    X'00000000'
00006974 0000084E                           9038          DC    X'0000084E'
                                            9039 *
00006978 0D                                 9040          DC    XL1'D'
00006979 000000                             9041          DC    AL3(0)
0000697C 00000AC8                           9042          DC    AL4(2760)
00006980 00000000                           9043          DC    4X'00'
00006984 00000000                           9044          DC    Q(@@STATIC)
00006988 00000000                           9045          DC    X'00000000'
0000698C 000003D0                           9046          DC    X'000003D0'
00006990 00000000000054D8                   9047          DC    ADL8(@DATA)
00006998 00000000                           9048          DC    X'00000000'
0000699C 00000866                           9049          DC    X'00000866'
                                            9050 *
000069A0 0D                                 9051          DC    XL1'D'
000069A1 000000                             9052          DC    AL3(0)
000069A4 00000AF0                           9053          DC    AL4(2800)
000069A8 00000000                           9054          DC    4X'00'
000069AC 00000000                           9055          DC    Q(@@STATIC)
000069B0 00000000                           9056          DC    X'00000000'
000069B4 000003D8                           9057          DC    X'000003D8'
000069B8 00000000000054D8                   9058          DC    ADL8(@DATA)
000069C0 00000000                           9059          DC    X'00000000'
000069C4 0000087C                           9060          DC    X'0000087C'
                                            9061 *
000069C8 0D                                 9062          DC    XL1'D'
000069C9 000000                             9063          DC    AL3(0)
000069CC 00000B18                           9064          DC    AL4(2840)
000069D0 00000000                           9065          DC    4X'00'
000069D4 00000000                           9066          DC    Q(@@STATIC)
000069D8 00000000                           9067          DC    X'00000000'
000069DC 000003E0                           9068          DC    X'000003E0'
000069E0 00000000000054D8                   9069          DC    ADL8(@DATA)
000069E8 00000000                           9070          DC    X'00000000'
000069EC 00000892                           9071          DC    X'00000892'
                                            9072 *
000069F0 0D                                 9073          DC    XL1'D'
000069F1 000000                             9074          DC    AL3(0)
000069F4 00000B40                           9075          DC    AL4(2880)
000069F8 00000000                           9076          DC    4X'00'
000069FC 00000000                           9077          DC    Q(@@STATIC)
00006A00 00000000                           9078          DC    X'00000000'
00006A04 000003E8                           9079          DC    X'000003E8'
00006A08 00000000000054D8                   9080          DC    ADL8(@DATA)
00006A10 00000000                           9081          DC    X'00000000'
00006A14 000008A2                           9082          DC    X'000008A2'
                                                                                                                           Page  182 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            9083 *
00006A18 0D                                 9084          DC    XL1'D'
00006A19 000000                             9085          DC    AL3(0)
00006A1C 00000B68                           9086          DC    AL4(2920)
00006A20 00000000                           9087          DC    4X'00'
00006A24 00000000                           9088          DC    Q(@@STATIC)
00006A28 00000000                           9089          DC    X'00000000'
00006A2C 000003F0                           9090          DC    X'000003F0'
00006A30 00000000000054D8                   9091          DC    ADL8(@DATA)
00006A38 00000000                           9092          DC    X'00000000'
00006A3C 000008B8                           9093          DC    X'000008B8'
                                            9094 *
00006A40 0D                                 9095          DC    XL1'D'
00006A41 000000                             9096          DC    AL3(0)
00006A44 00000B90                           9097          DC    AL4(2960)
00006A48 00000000                           9098          DC    4X'00'
00006A4C 00000000                           9099          DC    Q(@@STATIC)
00006A50 00000000                           9100          DC    X'00000000'
00006A54 000004C0                           9101          DC    X'000004C0'
00006A58 00000000000054D8                   9102          DC    ADL8(@DATA)
00006A60 00000000                           9103          DC    X'00000000'
00006A64 000008C8                           9104          DC    X'000008C8'
                                            9105 *
00006A68 0D                                 9106          DC    XL1'D'
00006A69 000000                             9107          DC    AL3(0)
00006A6C 00000BB8                           9108          DC    AL4(3000)
00006A70 00000000                           9109          DC    4X'00'
00006A74 00000000                           9110          DC    Q(@@STATIC)
00006A78 00000000                           9111          DC    X'00000000'
00006A7C 000004C8                           9112          DC    X'000004C8'
00006A80 00000000000054D8                   9113          DC    ADL8(@DATA)
00006A88 00000000                           9114          DC    X'00000000'
00006A8C 000008CE                           9115          DC    X'000008CE'
                                            9116 *
00006A90 0D                                 9117          DC    XL1'D'
00006A91 000000                             9118          DC    AL3(0)
00006A94 00000BE0                           9119          DC    AL4(3040)
00006A98 00000000                           9120          DC    4X'00'
00006A9C 00000000                           9121          DC    Q(@@STATIC)
00006AA0 00000000                           9122          DC    X'00000000'
00006AA4 000004D0                           9123          DC    X'000004D0'
00006AA8 00000000000054D8                   9124          DC    ADL8(@DATA)
00006AB0 00000000                           9125          DC    X'00000000'
00006AB4 000008D4                           9126          DC    X'000008D4'
                                            9127 *
00006AB8 0D                                 9128          DC    XL1'D'
00006AB9 000000                             9129          DC    AL3(0)
00006ABC 00000C08                           9130          DC    AL4(3080)
00006AC0 00000000                           9131          DC    4X'00'
00006AC4 00000000                           9132          DC    Q(@@STATIC)
00006AC8 00000000                           9133          DC    X'00000000'
00006ACC 000004D8                           9134          DC    X'000004D8'
                                                                                                                           Page  183 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006AD0 00000000000054D8                   9135          DC    ADL8(@DATA)
00006AD8 00000000                           9136          DC    X'00000000'
00006ADC 000008DC                           9137          DC    X'000008DC'
                                            9138 *
00006AE0 0D                                 9139          DC    XL1'D'
00006AE1 000000                             9140          DC    AL3(0)
00006AE4 00000C30                           9141          DC    AL4(3120)
00006AE8 00000000                           9142          DC    4X'00'
00006AEC 00000000                           9143          DC    Q(@@STATIC)
00006AF0 00000000                           9144          DC    X'00000000'
00006AF4 000004E0                           9145          DC    X'000004E0'
00006AF8 00000000000054D8                   9146          DC    ADL8(@DATA)
00006B00 00000000                           9147          DC    X'00000000'
00006B04 000008E0                           9148          DC    X'000008E0'
                                            9149 *
00006B08 0D                                 9150          DC    XL1'D'
00006B09 000000                             9151          DC    AL3(0)
00006B0C 00000C58                           9152          DC    AL4(3160)
00006B10 00000000                           9153          DC    4X'00'
00006B14 00000000                           9154          DC    Q(@@STATIC)
00006B18 00000000                           9155          DC    X'00000000'
00006B1C 000004E8                           9156          DC    X'000004E8'
00006B20 00000000000054D8                   9157          DC    ADL8(@DATA)
00006B28 00000000                           9158          DC    X'00000000'
00006B2C 000008E6                           9159          DC    X'000008E6'
                                            9160 *
00006B30 0D                                 9161          DC    XL1'D'
00006B31 000000                             9162          DC    AL3(0)
00006B34 00000C80                           9163          DC    AL4(3200)
00006B38 00000000                           9164          DC    4X'00'
00006B3C 00000000                           9165          DC    Q(@@STATIC)
00006B40 00000000                           9166          DC    X'00000000'
00006B44 00000510                           9167          DC    X'00000510'
00006B48 00000000000054D8                   9168          DC    ADL8(@DATA)
00006B50 00000000                           9169          DC    X'00000000'
00006B54 000008EE                           9170          DC    X'000008EE'
                                            9171 *
00006B58 0D                                 9172          DC    XL1'D'
00006B59 000000                             9173          DC    AL3(0)
00006B5C 00000CA8                           9174          DC    AL4(3240)
00006B60 00000000                           9175          DC    4X'00'
00006B64 00000000                           9176          DC    Q(@@STATIC)
00006B68 00000000                           9177          DC    X'00000000'
00006B6C 00000518                           9178          DC    X'00000518'
00006B70 00000000000054D8                   9179          DC    ADL8(@DATA)
00006B78 00000000                           9180          DC    X'00000000'
00006B7C 000008FA                           9181          DC    X'000008FA'
                                            9182 *
00006B80 0D                                 9183          DC    XL1'D'
00006B81 000000                             9184          DC    AL3(0)
00006B84 00000CD0                           9185          DC    AL4(3280)
00006B88 00000000                           9186          DC    4X'00'
                                                                                                                           Page  184 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006B8C 00000000                           9187          DC    Q(@@STATIC)
00006B90 00000000                           9188          DC    X'00000000'
00006B94 00000520                           9189          DC    X'00000520'
00006B98 00000000000054D8                   9190          DC    ADL8(@DATA)
00006BA0 00000000                           9191          DC    X'00000000'
00006BA4 00000902                           9192          DC    X'00000902'
                                            9193 *
00006BA8 0D                                 9194          DC    XL1'D'
00006BA9 000000                             9195          DC    AL3(0)
00006BAC 00000CF8                           9196          DC    AL4(3320)
00006BB0 00000000                           9197          DC    4X'00'
00006BB4 00000000                           9198          DC    Q(@@STATIC)
00006BB8 00000000                           9199          DC    X'00000000'
00006BBC 00000528                           9200          DC    X'00000528'
00006BC0 00000000000054D8                   9201          DC    ADL8(@DATA)
00006BC8 00000000                           9202          DC    X'00000000'
00006BCC 0000090C                           9203          DC    X'0000090C'
                                            9204 *
00006BD0 0D                                 9205          DC    XL1'D'
00006BD1 000000                             9206          DC    AL3(0)
00006BD4 00000D20                           9207          DC    AL4(3360)
00006BD8 00000000                           9208          DC    4X'00'
00006BDC 00000000                           9209          DC    Q(@@STATIC)
00006BE0 00000000                           9210          DC    X'00000000'
00006BE4 00000630                           9211          DC    X'00000630'
00006BE8 00000000000054D8                   9212          DC    ADL8(@DATA)
00006BF0 00000000                           9213          DC    X'00000000'
00006BF4 00000914                           9214          DC    X'00000914'
                                            9215 *
00006BF8 0D                                 9216          DC    XL1'D'
00006BF9 000000                             9217          DC    AL3(0)
00006BFC 00000D48                           9218          DC    AL4(3400)
00006C00 00000000                           9219          DC    4X'00'
00006C04 00000000                           9220          DC    Q(@@STATIC)
00006C08 00000000                           9221          DC    X'00000000'
00006C0C 00000638                           9222          DC    X'00000638'
00006C10 00000000000054D8                   9223          DC    ADL8(@DATA)
00006C18 00000000                           9224          DC    X'00000000'
00006C1C 0000091A                           9225          DC    X'0000091A'
                                            9226 *
00006C20 0D                                 9227          DC    XL1'D'
00006C21 000000                             9228          DC    AL3(0)
00006C24 00000D70                           9229          DC    AL4(3440)
00006C28 00000000                           9230          DC    4X'00'
00006C2C 00000000                           9231          DC    Q(@@STATIC)
00006C30 00000000                           9232          DC    X'00000000'
00006C34 00000640                           9233          DC    X'00000640'
00006C38 00000000000054D8                   9234          DC    ADL8(@DATA)
00006C40 00000000                           9235          DC    X'00000000'
00006C44 00000924                           9236          DC    X'00000924'
                                            9237 *
00006C48 0D                                 9238          DC    XL1'D'
                                                                                                                           Page  185 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006C49 000000                             9239          DC    AL3(0)
00006C4C 00000D98                           9240          DC    AL4(3480)
00006C50 00000000                           9241          DC    4X'00'
00006C54 00000000                           9242          DC    Q(@@STATIC)
00006C58 00000000                           9243          DC    X'00000000'
00006C5C 00000648                           9244          DC    X'00000648'
00006C60 00000000000054D8                   9245          DC    ADL8(@DATA)
00006C68 00000000                           9246          DC    X'00000000'
00006C6C 00000930                           9247          DC    X'00000930'
                                            9248 *
00006C70 0D                                 9249          DC    XL1'D'
00006C71 000000                             9250          DC    AL3(0)
00006C74 00000DC0                           9251          DC    AL4(3520)
00006C78 00000000                           9252          DC    4X'00'
00006C7C 00000000                           9253          DC    Q(@@STATIC)
00006C80 00000000                           9254          DC    X'00000000'
00006C84 00000650                           9255          DC    X'00000650'
00006C88 00000000000054D8                   9256          DC    ADL8(@DATA)
00006C90 00000000                           9257          DC    X'00000000'
00006C94 0000093C                           9258          DC    X'0000093C'
                                            9259 *
00006C98 0D                                 9260          DC    XL1'D'
00006C99 000000                             9261          DC    AL3(0)
00006C9C 00000DE8                           9262          DC    AL4(3560)
00006CA0 00000000                           9263          DC    4X'00'
00006CA4 00000000                           9264          DC    Q(@@STATIC)
00006CA8 00000000                           9265          DC    X'00000000'
00006CAC 00000658                           9266          DC    X'00000658'
00006CB0 00000000000054D8                   9267          DC    ADL8(@DATA)
00006CB8 00000000                           9268          DC    X'00000000'
00006CBC 0000094A                           9269          DC    X'0000094A'
                                            9270 *
00006CC0 0D                                 9271          DC    XL1'D'
00006CC1 000000                             9272          DC    AL3(0)
00006CC4 00000E10                           9273          DC    AL4(3600)
00006CC8 00000000                           9274          DC    4X'00'
00006CCC 00000000                           9275          DC    Q(@@STATIC)
00006CD0 00000000                           9276          DC    X'00000000'
00006CD4 00000660                           9277          DC    X'00000660'
00006CD8 00000000000054D8                   9278          DC    ADL8(@DATA)
00006CE0 00000000                           9279          DC    X'00000000'
00006CE4 00000952                           9280          DC    X'00000952'
                                            9281 *
00006CE8 0D                                 9282          DC    XL1'D'
00006CE9 000000                             9283          DC    AL3(0)
00006CEC 00000E38                           9284          DC    AL4(3640)
00006CF0 00000000                           9285          DC    4X'00'
00006CF4 00000000                           9286          DC    Q(@@STATIC)
00006CF8 00000000                           9287          DC    X'00000000'
00006CFC 00000668                           9288          DC    X'00000668'
00006D00 00000000000054D8                   9289          DC    ADL8(@DATA)
00006D08 00000000                           9290          DC    X'00000000'
                                                                                                                           Page  186 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006D0C 0000095C                           9291          DC    X'0000095C'
                                            9292 *
00006D10 0D                                 9293          DC    XL1'D'
00006D11 000000                             9294          DC    AL3(0)
00006D14 00000E60                           9295          DC    AL4(3680)
00006D18 00000000                           9296          DC    4X'00'
00006D1C 00000000                           9297          DC    Q(@@STATIC)
00006D20 00000000                           9298          DC    X'00000000'
00006D24 00000670                           9299          DC    X'00000670'
00006D28 00000000000054D8                   9300          DC    ADL8(@DATA)
00006D30 00000000                           9301          DC    X'00000000'
00006D34 00000968                           9302          DC    X'00000968'
                                            9303 *
00006D38 0D                                 9304          DC    XL1'D'
00006D39 000000                             9305          DC    AL3(0)
00006D3C 00000E88                           9306          DC    AL4(3720)
00006D40 00000000                           9307          DC    4X'00'
00006D44 00000000                           9308          DC    Q(@@STATIC)
00006D48 00000000                           9309          DC    X'00000000'
00006D4C 00000678                           9310          DC    X'00000678'
00006D50 00000000000054D8                   9311          DC    ADL8(@DATA)
00006D58 00000000                           9312          DC    X'00000000'
00006D5C 00000914                           9313          DC    X'00000914'
                                            9314 *
00006D60 0D                                 9315          DC    XL1'D'
00006D61 000000                             9316          DC    AL3(0)
00006D64 00000EB0                           9317          DC    AL4(3760)
00006D68 00000000                           9318          DC    4X'00'
00006D6C 00000000                           9319          DC    Q(@@STATIC)
00006D70 00000000                           9320          DC    X'00000000'
00006D74 00000680                           9321          DC    X'00000680'
00006D78 00000000000054D8                   9322          DC    ADL8(@DATA)
00006D80 00000000                           9323          DC    X'00000000'
00006D84 0000094A                           9324          DC    X'0000094A'
                                            9325 *
00006D88 0D                                 9326          DC    XL1'D'
00006D89 000000                             9327          DC    AL3(0)
00006D8C 00000ED8                           9328          DC    AL4(3800)
00006D90 00000000                           9329          DC    4X'00'
00006D94 00000000                           9330          DC    Q(@@STATIC)
00006D98 00000000                           9331          DC    X'00000000'
00006D9C 00000688                           9332          DC    X'00000688'
00006DA0 00000000000054D8                   9333          DC    ADL8(@DATA)
00006DA8 00000000                           9334          DC    X'00000000'
00006DAC 00000972                           9335          DC    X'00000972'
                                            9336 *
00006DB0 0D                                 9337          DC    XL1'D'
00006DB1 000000                             9338          DC    AL3(0)
00006DB4 00000F00                           9339          DC    AL4(3840)
00006DB8 00000000                           9340          DC    4X'00'
00006DBC 00000000                           9341          DC    Q(@@STATIC)
00006DC0 00000000                           9342          DC    X'00000000'
                                                                                                                           Page  187 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006DC4 00000690                           9343          DC    X'00000690'
00006DC8 00000000000054D8                   9344          DC    ADL8(@DATA)
00006DD0 00000000                           9345          DC    X'00000000'
00006DD4 00000980                           9346          DC    X'00000980'
                                            9347 *
00006DD8 0D                                 9348          DC    XL1'D'
00006DD9 000000                             9349          DC    AL3(0)
00006DDC 00000F28                           9350          DC    AL4(3880)
00006DE0 00000000                           9351          DC    4X'00'
00006DE4 00000000                           9352          DC    Q(@@STATIC)
00006DE8 00000000                           9353          DC    X'00000000'
00006DEC 00000698                           9354          DC    X'00000698'
00006DF0 00000000000054D8                   9355          DC    ADL8(@DATA)
00006DF8 00000000                           9356          DC    X'00000000'
00006DFC 00000986                           9357          DC    X'00000986'
                                            9358 *
00006E00 0D                                 9359          DC    XL1'D'
00006E01 000000                             9360          DC    AL3(0)
00006E04 00000F50                           9361          DC    AL4(3920)
00006E08 00000000                           9362          DC    4X'00'
00006E0C 00000000                           9363          DC    Q(@@STATIC)
00006E10 00000000                           9364          DC    X'00000000'
00006E14 000006A0                           9365          DC    X'000006A0'
00006E18 00000000000054D8                   9366          DC    ADL8(@DATA)
00006E20 00000000                           9367          DC    X'00000000'
00006E24 00000994                           9368          DC    X'00000994'
                                            9369 *
00006E28 0D                                 9370          DC    XL1'D'
00006E29 000000                             9371          DC    AL3(0)
00006E2C 00000F78                           9372          DC    AL4(3960)
00006E30 00000000                           9373          DC    4X'00'
00006E34 00000000                           9374          DC    Q(@@STATIC)
00006E38 00000000                           9375          DC    X'00000000'
00006E3C 000006A8                           9376          DC    X'000006A8'
00006E40 00000000000054D8                   9377          DC    ADL8(@DATA)
00006E48 00000000                           9378          DC    X'00000000'
00006E4C 000009A0                           9379          DC    X'000009A0'
                                            9380 *
00006E50 0D                                 9381          DC    XL1'D'
00006E51 000000                             9382          DC    AL3(0)
00006E54 00000FA0                           9383          DC    AL4(4000)
00006E58 00000000                           9384          DC    4X'00'
00006E5C 00000000                           9385          DC    Q(@@STATIC)
00006E60 00000000                           9386          DC    X'00000000'
00006E64 000006B0                           9387          DC    X'000006B0'
00006E68 00000000000054D8                   9388          DC    ADL8(@DATA)
00006E70 00000000                           9389          DC    X'00000000'
00006E74 000009B6                           9390          DC    X'000009B6'
                                            9391 *
00006E78 0D                                 9392          DC    XL1'D'
00006E79 000000                             9393          DC    AL3(0)
00006E7C 00000FC8                           9394          DC    AL4(4040)
                                                                                                                           Page  188 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006E80 00000000                           9395          DC    4X'00'
00006E84 00000000                           9396          DC    Q(@@STATIC)
00006E88 00000000                           9397          DC    X'00000000'
00006E8C 000006B8                           9398          DC    X'000006B8'
00006E90 00000000000054D8                   9399          DC    ADL8(@DATA)
00006E98 00000000                           9400          DC    X'00000000'
00006E9C 000009C6                           9401          DC    X'000009C6'
                                            9402 *
00006EA0 0D                                 9403          DC    XL1'D'
00006EA1 000000                             9404          DC    AL3(0)
00006EA4 00000FF0                           9405          DC    AL4(4080)
00006EA8 00000000                           9406          DC    4X'00'
00006EAC 00000000                           9407          DC    Q(@@STATIC)
00006EB0 00000000                           9408          DC    X'00000000'
00006EB4 000006C0                           9409          DC    X'000006C0'
00006EB8 00000000000054D8                   9410          DC    ADL8(@DATA)
00006EC0 00000000                           9411          DC    X'00000000'
00006EC4 000009DA                           9412          DC    X'000009DA'
                                            9413 *
00006EC8 0D                                 9414          DC    XL1'D'
00006EC9 000000                             9415          DC    AL3(0)
00006ECC 00001018                           9416          DC    AL4(4120)
00006ED0 00000000                           9417          DC    4X'00'
00006ED4 00000000                           9418          DC    Q(@@STATIC)
00006ED8 00000000                           9419          DC    X'00000000'
00006EDC 000006C8                           9420          DC    X'000006C8'
00006EE0 00000000000054D8                   9421          DC    ADL8(@DATA)
00006EE8 00000000                           9422          DC    X'00000000'
00006EEC 000009EA                           9423          DC    X'000009EA'
                                            9424 *
00006EF0 0D                                 9425          DC    XL1'D'
00006EF1 000000                             9426          DC    AL3(0)
00006EF4 00000000                           9427          DC    AL4(0)
00006EF8 00000000                           9428          DC    4X'00'
00006EFC 00000000                           9429          DC    Q(@@STATIC)
00006F00 00000000                           9430          DC    X'00000000'
00006F04 000006D0                           9431          DC    X'000006D0'
00006F08 00000000000054D8                   9432          DC    ADL8(@DATA)
00006F10 00000000                           9433          DC    X'00000000'
00006F14 00000924                           9434          DC    X'00000924'
                                            9435 *
                                            9436          END
                                                 Relocation Dictionary                                                     Page  189 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000024 000000F8   Q 4      +
 00000002 00000002 00000200   A 4      +
 00000002 00000002 00000228   A 4      +
 00000002 00000002 00000230   A 4      +
 00000002 0000001A 000002F8   A 4      +
 00000002 00000002 00000320   A 4      +
 00000002 00000002 00000348   A 4      +
 00000002 00000002 00000350   A 4      +
 00000002 0000001B 00000438   A 4      +
 00000002 0000001D 00000440   A 4      +
 00000002 00000002 00000468   A 4      +
 00000002 00000002 00000490   A 4      +
 00000002 00000002 00000498   A 4      +
 00000002 0000001B 00000580   A 4      +
 00000002 0000001D 00000588   A 4      +
 00000002 00000002 000005B0   A 4      +
 00000002 00000002 000005D8   A 4      +
 00000002 00000002 000005E0   A 4      +
 00000002 0000001B 000006B8   A 4      +
 00000002 0000001D 000006C0   A 4      +
 00000002 00000002 000006E0   A 4      +
 00000002 00000002 00000708   A 4      +
 00000002 00000002 00000710   A 4      +
 00000002 00000016 00000818   A 4      +
 00000002 00000005 00000820   A 4      +
 00000002 00000025 00000828   A 4      +
 00000002 00000025 00000830   A 4      +
 00000002 00000002 00000850   A 4      +
 00000002 00000002 00000878   A 4      +
 00000002 00000002 00000880   A 4      +
 00000002 00000018 00000938   A 4      +
 00000002 00000002 00000960   A 4      +
 00000002 00000002 00000988   A 4      +
 00000002 00000002 00000990   A 4      +
 00000002 00000002 00000AA0   A 4      +
 00000002 00000025 00000AA8   A 4      +
 00000002 00000005 00000AB0   A 4      +
 00000002 00000025 00000AB8   A 4      +
 00000002 00000002 00000AD8   A 4      +
 00000002 00000002 00000B00   A 4      +
 00000002 00000002 00000B08   A 4      +
 00000002 00000019 00000BD8   A 4      +
 00000002 00000002 00000C20   A 4      +
 00000002 00000002 00000C28   A 4      +
 00000002 00000002 00000CA0   A 4      +
 00000002 00000002 00000CA8   A 4      +
 00000002 00000002 00000D70   A 4      +
 00000002 00000002 00000D98   A 4      +
 00000002 00000002 00000DA0   A 4      +
 00000002 00000024 00000E7C   Q 4      +
                                                 Relocation Dictionary                                                     Page  190 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000015 00000E80   A 4      +
 00000002 00000025 00000E88   A 4      +
 00000002 00000002 00000F30   A 4      +
 00000002 00000002 00000F38   A 4      +
 00000002 00000002 00000FA8   A 4      +
 00000002 00000002 00000FB0   A 4      +
 00000002 00000002 00001090   A 4      +
 00000002 00000002 000010B8   A 4      +
 00000002 00000002 000010C0   A 4      +
 00000002 00000008 00001198   A 4      +
 00000002 0000000B 000011A0   A 4      +
 00000002 00000002 000011C8   A 4      +
 00000002 00000002 000011F0   A 4      +
 00000002 00000002 000011F8   A 4      +
 00000002 00000008 000012E0   A 4      +
 00000002 0000000B 000012E8   A 4      +
 00000002 00000002 00001310   A 4      +
 00000002 00000002 00001338   A 4      +
 00000002 00000002 00001340   A 4      +
 00000002 00000002 000014C0   A 4      +
 00000002 00000017 000014C8   A 4      +
 00000002 00000008 000014D0   A 4      +
 00000002 00000021 000014D8   A 4      +
 00000002 00000025 000014E0   A 4      +
 00000002 00000025 000014E8   A 4      +
 00000002 0000000B 000014F0   A 4      +
 00000002 00000011 000014F8   A 4      +
 00000002 00000002 00001520   A 4      +
 00000002 00000002 00001548   A 4      +
 00000002 00000002 00001550   A 4      +
 00000002 00000008 00001650   A 4      +
 00000002 00000002 00001658   A 4      +
 00000002 0000000B 00001660   A 4      +
 00000002 00000002 00001688   A 4      +
 00000002 00000002 000016B0   A 4      +
 00000002 00000002 000016B8   A 4      +
 00000002 00000003 00001768   A 4      +
 00000002 00000002 00001860   A 4      +
 00000002 00000002 00001868   A 4      +
 00000002 00000002 000018E8   A 4      +
 00000002 00000002 00001910   A 4      +
 00000002 00000002 00001918   A 4      +
 00000002 00000002 000019B0   A 4      +
 00000002 00000002 00001B70   A 4      +
 00000002 00000002 00001B98   A 4      +
 00000002 00000002 00001BA0   A 4      +
 00000002 00000008 00001C60   A 4      +
 00000002 0000000B 00001C68   A 4      +
 00000002 00000009 00001C70   A 4      +
 00000002 00000002 00001C78   A 4      +
 00000002 00000002 00001C80   A 4      +
 00000002 0000000D 00001C88   A 4      +
 00000002 00000002 00001C90   A 4      +
                                                 Relocation Dictionary                                                     Page  191 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00001C98   A 4      +
 00000002 00000002 00001CA0   A 4      +
 00000002 00000002 00001E28   A 4      +
 00000002 00000002 00001E50   A 4      +
 00000002 00000002 00001E58   A 4      +
 00000002 00000002 00001F38   A 4      +
 00000002 00000002 00001F90   A 4      +
 00000002 00000002 00001F98   A 4      +
 00000002 00000002 00001FF0   A 4      +
 00000002 00000002 00002018   A 4      +
 00000002 00000002 00002020   A 4      +
 00000002 00000002 00002100   A 4      +
 00000002 00000002 00002130   A 4      +
 00000002 00000002 00002158   A 4      +
 00000002 00000002 00002160   A 4      +
 00000002 00000002 00002240   A 4      +
 00000002 00000002 00002248   A 4      +
 00000002 00000002 00002270   A 4      +
 00000002 00000002 00002298   A 4      +
 00000002 00000002 000022A0   A 4      +
 00000002 00000002 00002320   A 4      +
 00000002 00000002 00002328   A 4      +
 00000002 00000002 000023E0   A 4      +
 00000002 00000002 00002408   A 4      +
 00000002 00000002 00002410   A 4      +
 00000002 0000000E 0000247C   Q 4      +
 00000002 00000002 00002538   A 4      +
 00000002 00000002 00002560   A 4      +
 00000002 00000002 00002568   A 4      +
 00000002 00000004 00002688   A 4      +
 00000002 00000002 00002690   A 4      +
 00000002 00000002 000026C0   A 4      +
 00000002 00000002 000026E8   A 4      +
 00000002 00000002 000026F0   A 4      +
 00000002 00000002 000027B8   A 4      +
 00000002 00000002 000027E8   A 4      +
 00000002 00000002 00002810   A 4      +
 00000002 00000002 00002818   A 4      +
 00000002 00000002 000028E8   A 4      +
 00000002 00000002 00002918   A 4      +
 00000002 00000002 00002940   A 4      +
 00000002 00000002 00002948   A 4      +
 00000002 00000002 00002A18   A 4      +
 00000002 00000002 00002A48   A 4      +
 00000002 00000002 00002A70   A 4      +
 00000002 00000002 00002A78   A 4      +
 00000002 00000002 00002B70   A 4      +
 00000002 00000002 00002B78   A 4      +
 00000002 00000002 00002BA8   A 4      +
 00000002 00000002 00002BD0   A 4      +
 00000002 00000002 00002BD8   A 4      +
 00000002 00000016 00002C78   A 4      +
 00000002 00000002 00002C80   A 4      +
                                                 Relocation Dictionary                                                     Page  192 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00002C88   A 4      +
 00000002 00000002 00002C90   A 4      +
 00000002 00000018 00002C98   A 4      +
 00000002 00000002 00002CA0   A 4      +
 00000002 00000002 00002E88   A 4      +
 00000002 00000002 00002EB0   A 4      +
 00000002 00000002 00002EB8   A 4      +
 00000002 0000001C 00002F18   A 4      +
 00000002 00000002 00002F20   A 4      +
 00000002 00000009 00002F28   A 4      +
 00000002 00000008 00002F30   A 4      +
 00000002 00000021 00002F38   A 4      +
 00000002 00000025 00002F40   A 4      +
 00000002 00000025 00002F48   A 4      +
 00000002 0000000B 00002F50   A 4      +
 00000002 00000010 00002F58   A 4      +
 00000002 00000002 00002F60   A 4      +
 00000002 00000002 00002F68   A 4      +
 00000002 00000002 00002F70   A 4      +
 00000002 0000000C 00002F78   A 4      +
 00000002 0000001E 00002F80   A 4      +
 00000002 00000002 00003230   A 4      +
 00000002 00000002 00003258   A 4      +
 00000002 00000002 00003260   A 4      +
 00000002 00000006 00003390   A 4      +
 00000002 00000002 00003398   A 4      +
 00000002 00000002 000033C0   A 4      +
 00000002 00000002 000033E8   A 4      +
 00000002 00000002 000033F0   A 4      +
 00000002 00000002 00003508   A 4      +
 00000002 0000000A 00003510   A 4      +
 00000002 00000002 00003518   A 4      +
 00000002 00000002 00003548   A 4      +
 00000002 00000002 00003570   A 4      +
 00000002 00000002 00003578   A 4      +
 00000002 00000002 00003600   A 4      +
 00000002 00000002 00003608   A 4      +
 00000002 00000002 00003610   A 4      +
 00000002 00000002 00003618   A 4      +
 00000002 00000002 00003620   A 4      +
 00000002 00000002 00003628   A 4      +
 00000002 00000002 000037F8   A 4      +
 00000002 00000002 00003820   A 4      +
 00000002 00000002 00003828   A 4      +
 00000002 00000002 000039A0   A 4      +
 00000002 0000000A 000039A8   A 4      +
 00000002 00000006 000039B0   A 4      +
 00000002 0000000F 000039B8   A 4      +
 00000002 00000002 000039C0   A 4      +
 00000002 00000002 000039E8   A 4      +
 00000002 00000002 00003A10   A 4      +
 00000002 00000002 00003A18   A 4      +
 00000002 00000002 00003B48   A 4      +
                                                 Relocation Dictionary                                                     Page  193 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00003B50   A 4      +
 00000002 00000002 00003B78   A 4      +
 00000002 00000002 00003BA0   A 4      +
 00000002 00000002 00003BA8   A 4      +
 00000002 00000002 00003C28   A 4      +
 00000002 00000021 00003C30   A 4      +
 00000002 00000025 00003C38   A 4      +
 00000002 00000025 00003C40   A 4      +
 00000002 00000002 00003C48   A 4      +
 00000002 00000002 00003C50   A 4      +
 00000002 00000002 00003DA0   A 4      +
 00000002 00000002 00003DC8   A 4      +
 00000002 00000002 00003DD0   A 4      +
 00000002 00000002 00003EC0   A 4      +
 00000002 00000002 00003EF0   A 4      +
 00000002 00000002 00003F18   A 4      +
 00000002 00000002 00003F20   A 4      +
 00000002 00000002 00004090   A 4      +
 00000002 00000002 00004098   A 4      +
 00000002 00000002 000040A0   A 4      +
 00000002 00000002 000040C8   A 4      +
 00000002 00000002 000040F0   A 4      +
 00000002 00000002 000040F8   A 4      +
 00000002 00000012 000042B8   A 4      +
 00000002 00000021 000042C0   A 4      +
 00000002 00000025 000042C8   A 4      +
 00000002 00000025 000042D0   A 4      +
 00000002 00000008 000042D8   A 4      +
 00000002 00000002 000042E0   A 4      +
 00000002 0000000B 000042E8   A 4      +
 00000002 00000002 000042F0   A 4      +
 00000002 00000023 000042F8   A 4      +
 00000002 00000002 00004300   A 4      +
 00000002 00000002 000043C8   A 4      +
 00000002 00000002 000043F0   A 4      +
 00000002 00000002 000043F8   A 4      +
 00000002 00000002 000045B8   A 4      +
 00000002 00000012 000045C0   A 4      +
 00000002 00000021 000045C8   A 4      +
 00000002 00000025 000045D0   A 4      +
 00000002 00000025 000045D8   A 4      +
 00000002 00000008 000045E0   A 4      +
 00000002 00000002 000045E8   A 4      +
 00000002 0000000B 000045F0   A 4      +
 00000002 00000002 000045F8   A 4      +
 00000002 00000023 00004600   A 4      +
 00000002 00000002 00004608   A 4      +
 00000002 00000002 00004610   A 4      +
 00000002 00000014 00004618   A 4      +
 00000002 00000002 00004620   A 4      +
 00000002 00000002 00004758   A 4      +
 00000002 00000002 00004780   A 4      +
 00000002 00000002 00004788   A 4      +
                                                 Relocation Dictionary                                                     Page  194 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 000048F8   A 4      +
 00000002 00000002 00004900   A 4      +
 00000002 00000008 00004908   A 4      +
 00000002 00000002 00004910   A 4      +
 00000002 0000000B 00004918   A 4      +
 00000002 00000023 00004920   A 4      +
 00000002 00000025 00004928   A 4      +
 00000002 00000002 00004930   A 4      +
 00000002 00000002 00004B58   A 4      +
 00000002 00000002 00004B60   A 4      +
 00000002 00000002 00004C28   A 4      +
 00000002 00000002 00004C50   A 4      +
 00000002 00000002 00004C58   A 4      +
 00000002 00000002 00004CC8   A 4      +
 00000002 00000005 00004CD0   A 4      +
 00000002 00000025 00004CD8   A 4      +
 00000002 00000025 00004CE0   A 4      +
 00000002 00000002 00004CE8   A 4      +
 00000002 00000002 00004CF0   A 4      +
 00000002 00000002 00004CF8   A 4      +
 00000002 0000001F 00004D00   A 4      +
 00000002 00000002 00004E90   A 4      +
 00000002 00000002 00004EB8   A 4      +
 00000002 00000002 00004EC0   A 4      +
 00000002 00000002 00004FA0   A 4      +
 00000002 00000002 00004FA8   A 4      +
 00000002 00000002 00004FB0   A 4      +
 00000002 00000005 00004FB8   A 4      +
 00000002 00000025 00004FC0   A 4      +
 00000002 00000025 00004FC8   A 4      +
 00000002 00000002 00004FD0   A 4      +
 00000002 00000002 000050E8   A 4      +
 00000002 00000002 00005110   A 4      +
 00000002 00000002 00005118   A 4      +
 00000002 00000022 000051A8   A 4      +
 00000002 00000025 000051B0   A 4      +
 00000002 00000020 000051B8   A 4      +
 00000002 00000013 000051C0   A 4      +
 00000002 00000007 000051C8   A 4      +
 00000002 00000021 000051D0   A 4      +
 00000002 00000025 000051D8   A 4      +
 00000002 00000002 000051E0   A 4      +
 00000002 00000002 000051E8   A 4      +
 00000002 00000002 000051F0   A 4      +
 00000002 00000002 000051F8   A 4      +
 00000002 00000002 00005200   A 4      +
 00000027 00000024 00005EE4   Q 4      +
 00000027 00000024 00006004   Q 4      +
 00000027 00000024 000060C4   Q 4      +
 00000027 00000024 000060EC   Q 4      +
 00000027 00000024 00006114   Q 4      +
 00000027 00000025 00006120   A 4      +
 00000027 00000024 0000613C   Q 4      +
                                                 Relocation Dictionary                                                     Page  195 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000027 00000025 00006148   A 4      +
 00000027 00000024 00006164   Q 4      +
 00000027 00000025 00006170   A 4      +
 00000027 00000024 0000618C   Q 4      +
 00000027 00000025 00006198   A 4      +
 00000027 00000024 000061B4   Q 4      +
 00000027 00000025 000061C0   A 4      +
 00000027 00000024 000061DC   Q 4      +
 00000027 00000025 000061E8   A 4      +
 00000027 00000024 00006204   Q 4      +
 00000027 00000025 00006210   A 4      +
 00000027 00000024 0000622C   Q 4      +
 00000027 00000025 00006238   A 4      +
 00000027 00000024 00006254   Q 4      +
 00000027 00000025 00006260   A 4      +
 00000027 00000024 0000627C   Q 4      +
 00000027 00000025 00006288   A 4      +
 00000027 00000024 000062A4   Q 4      +
 00000027 00000025 000062B0   A 4      +
 00000027 00000024 000062CC   Q 4      +
 00000027 00000025 000062D8   A 4      +
 00000027 00000024 000062F4   Q 4      +
 00000027 00000025 00006300   A 4      +
 00000027 00000024 0000631C   Q 4      +
 00000027 00000025 00006328   A 4      +
 00000027 00000024 00006344   Q 4      +
 00000027 00000025 00006350   A 4      +
 00000027 00000024 0000636C   Q 4      +
 00000027 00000025 00006378   A 4      +
 00000027 00000024 00006394   Q 4      +
 00000027 00000025 000063A0   A 4      +
 00000027 00000024 000063BC   Q 4      +
 00000027 00000025 000063C8   A 4      +
 00000027 00000024 000063E4   Q 4      +
 00000027 00000025 000063F0   A 4      +
 00000027 00000024 0000640C   Q 4      +
 00000027 00000025 00006418   A 4      +
 00000027 00000024 00006434   Q 4      +
 00000027 00000025 00006440   A 4      +
 00000027 00000024 0000645C   Q 4      +
 00000027 00000025 00006468   A 4      +
 00000027 00000024 00006484   Q 4      +
 00000027 00000025 00006490   A 4      +
 00000027 00000024 000064AC   Q 4      +
 00000027 00000025 000064B8   A 4      +
 00000027 00000024 000064D4   Q 4      +
 00000027 00000025 000064E0   A 4      +
 00000027 00000024 000064FC   Q 4      +
 00000027 00000025 00006508   A 4      +
 00000027 00000024 00006524   Q 4      +
 00000027 00000025 00006530   A 4      +
 00000027 00000024 0000654C   Q 4      +
 00000027 00000025 00006558   A 4      +
                                                 Relocation Dictionary                                                     Page  196 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000027 00000024 00006574   Q 4      +
 00000027 00000025 00006580   A 4      +
 00000027 00000024 0000659C   Q 4      +
 00000027 00000025 000065A8   A 4      +
 00000027 00000024 000065C4   Q 4      +
 00000027 00000025 000065D0   A 4      +
 00000027 00000024 000065EC   Q 4      +
 00000027 00000025 000065F8   A 4      +
 00000027 00000024 00006614   Q 4      +
 00000027 00000025 00006620   A 4      +
 00000027 00000024 0000663C   Q 4      +
 00000027 00000025 00006648   A 4      +
 00000027 00000024 00006664   Q 4      +
 00000027 00000025 00006670   A 4      +
 00000027 00000024 0000668C   Q 4      +
 00000027 00000025 00006698   A 4      +
 00000027 00000024 000066B4   Q 4      +
 00000027 00000025 000066C0   A 4      +
 00000027 00000024 000066DC   Q 4      +
 00000027 00000025 000066E8   A 4      +
 00000027 00000024 00006704   Q 4      +
 00000027 00000025 00006710   A 4      +
 00000027 00000024 0000672C   Q 4      +
 00000027 00000025 00006738   A 4      +
 00000027 00000024 00006754   Q 4      +
 00000027 00000025 00006760   A 4      +
 00000027 00000024 0000677C   Q 4      +
 00000027 00000025 00006788   A 4      +
 00000027 00000024 000067A4   Q 4      +
 00000027 00000025 000067B0   A 4      +
 00000027 00000024 000067CC   Q 4      +
 00000027 00000025 000067D8   A 4      +
 00000027 00000024 000067F4   Q 4      +
 00000027 00000025 00006800   A 4      +
 00000027 00000024 0000681C   Q 4      +
 00000027 00000025 00006828   A 4      +
 00000027 00000024 00006844   Q 4      +
 00000027 00000025 00006850   A 4      +
 00000027 00000024 0000686C   Q 4      +
 00000027 00000025 00006878   A 4      +
 00000027 00000024 00006894   Q 4      +
 00000027 00000025 000068A0   A 4      +
 00000027 00000024 000068BC   Q 4      +
 00000027 00000025 000068C8   A 4      +
 00000027 00000024 000068E4   Q 4      +
 00000027 00000025 000068F0   A 4      +
 00000027 00000024 0000690C   Q 4      +
 00000027 00000025 00006918   A 4      +
 00000027 00000024 00006934   Q 4      +
 00000027 00000025 00006940   A 4      +
 00000027 00000024 0000695C   Q 4      +
 00000027 00000025 00006968   A 4      +
 00000027 00000024 00006984   Q 4      +
                                                 Relocation Dictionary                                                     Page  197 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000027 00000025 00006990   A 4      +
 00000027 00000024 000069AC   Q 4      +
 00000027 00000025 000069B8   A 4      +
 00000027 00000024 000069D4   Q 4      +
 00000027 00000025 000069E0   A 4      +
 00000027 00000024 000069FC   Q 4      +
 00000027 00000025 00006A08   A 4      +
 00000027 00000024 00006A24   Q 4      +
 00000027 00000025 00006A30   A 4      +
 00000027 00000024 00006A4C   Q 4      +
 00000027 00000025 00006A58   A 4      +
 00000027 00000024 00006A74   Q 4      +
 00000027 00000025 00006A80   A 4      +
 00000027 00000024 00006A9C   Q 4      +
 00000027 00000025 00006AA8   A 4      +
 00000027 00000024 00006AC4   Q 4      +
 00000027 00000025 00006AD0   A 4      +
 00000027 00000024 00006AEC   Q 4      +
 00000027 00000025 00006AF8   A 4      +
 00000027 00000024 00006B14   Q 4      +
 00000027 00000025 00006B20   A 4      +
 00000027 00000024 00006B3C   Q 4      +
 00000027 00000025 00006B48   A 4      +
 00000027 00000024 00006B64   Q 4      +
 00000027 00000025 00006B70   A 4      +
 00000027 00000024 00006B8C   Q 4      +
 00000027 00000025 00006B98   A 4      +
 00000027 00000024 00006BB4   Q 4      +
 00000027 00000025 00006BC0   A 4      +
 00000027 00000024 00006BDC   Q 4      +
 00000027 00000025 00006BE8   A 4      +
 00000027 00000024 00006C04   Q 4      +
 00000027 00000025 00006C10   A 4      +
 00000027 00000024 00006C2C   Q 4      +
 00000027 00000025 00006C38   A 4      +
 00000027 00000024 00006C54   Q 4      +
 00000027 00000025 00006C60   A 4      +
 00000027 00000024 00006C7C   Q 4      +
 00000027 00000025 00006C88   A 4      +
 00000027 00000024 00006CA4   Q 4      +
 00000027 00000025 00006CB0   A 4      +
 00000027 00000024 00006CCC   Q 4      +
 00000027 00000025 00006CD8   A 4      +
 00000027 00000024 00006CF4   Q 4      +
 00000027 00000025 00006D00   A 4      +
 00000027 00000024 00006D1C   Q 4      +
 00000027 00000025 00006D28   A 4      +
 00000027 00000024 00006D44   Q 4      +
 00000027 00000025 00006D50   A 4      +
 00000027 00000024 00006D6C   Q 4      +
 00000027 00000025 00006D78   A 4      +
 00000027 00000024 00006D94   Q 4      +
 00000027 00000025 00006DA0   A 4      +
                                                 Relocation Dictionary                                                     Page  198 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000027 00000024 00006DBC   Q 4      +
 00000027 00000025 00006DC8   A 4      +
 00000027 00000024 00006DE4   Q 4      +
 00000027 00000025 00006DF0   A 4      +
 00000027 00000024 00006E0C   Q 4      +
 00000027 00000025 00006E18   A 4      +
 00000027 00000024 00006E34   Q 4      +
 00000027 00000025 00006E40   A 4      +
 00000027 00000024 00006E5C   Q 4      +
 00000027 00000025 00006E68   A 4      +
 00000027 00000024 00006E84   Q 4      +
 00000027 00000025 00006E90   A 4      +
 00000027 00000024 00006EAC   Q 4      +
 00000027 00000025 00006EB8   A 4      +
 00000027 00000024 00006ED4   Q 4      +
 00000027 00000025 00006EE0   A 4      +
 00000027 00000024 00006EFC   Q 4      +
 00000027 00000025 00006F08   A 4      +
                                                 DSECT Cross Reference                                                     Page  199 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:42 
@AUTO#ebcdic_2_utf8
         000000A9  FFFFFFFF  00258
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFD  00495
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFB  00744
@AUTO#rd_atomic32_init
         000000A8  FFFFFFFE  00369
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFC  00622
@AUTO#rd_buf_len
         000000A8  FFFFFFF6  01297
@AUTO#rd_calloc
         000000A8  FFFFFFFA  00873
@AUTO#rd_clock
         000000B8  FFFFFFF7  01225
@AUTO#rd_crc32_update
         000000AC  FFFFFFE4  03831
@AUTO#rd_free
         000000A8  FFFFFFF9  00976
@AUTO#rd_kafka_$Api$Key2str
         000000A8  FFFFFFF4  01626
@AUTO#rd_kafka_buf_calc_timeout
         000000B0  FFFFFFD1  07349
@AUTO#rd_kafka_buf_callback
         000000A8  FFFFFFCE  08156
@AUTO#rd_kafka_buf_destroy_final
         000000A8  FFFFFFDD  05046
@AUTO#rd_kafka_buf_handle_op
         000000AC  FFFFFFCF  07792
@AUTO#rd_kafka_buf_new_request0
         000000A8  FFFFFFDA  05576
@AUTO#rd_kafka_buf_new_shadow
         000000A8  FFFFFFD9  05747
@AUTO#rd_kafka_buf_new0
         000000A8  FFFFFFDB  05321
@AUTO#rd_kafka_buf_push0
         000000A8  FFFFFFDC  05182
@AUTO#rd_kafka_buf_retry
         000000AC  FFFFFFD0  07571
@AUTO#rd_kafka_buf_write
         000000B0  FFFFFFE3  03966
@AUTO#rd_kafka_buf_write_i16
         000000A8  FFFFFFE1  04180
@AUTO#rd_kafka_buf_write_i32
         000000A8  FFFFFFE0  04287
@AUTO#rd_kafka_buf_write_i8
         000000A8  FFFFFFE2  04072
@AUTO#rd_kafka_buf_write_kstr
         000000B8  FFFFFFDE  04693
@AUTO#rd_kafka_buf_write_uvarint
         000000B2  FFFFFFDF  04409
@AUTO#rd_kafka_bufq_concat
                                                 DSECT Cross Reference                                                     Page  200 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:42 
         000000A8  FFFFFFD5  06370
@AUTO#rd_kafka_bufq_connection_reset
         000001A8  FFFFFFD3  06910
@AUTO#rd_kafka_bufq_deq
         000000A8  FFFFFFD7  06078
@AUTO#rd_kafka_bufq_dump
         000001A8  FFFFFFD2  07218
@AUTO#rd_kafka_bufq_enq
         000000A8  FFFFFFD8  05892
@AUTO#rd_kafka_bufq_init
         000000A8  FFFFFFD6  06202
@AUTO#rd_kafka_bufq_purge
         000001A8  FFFFFFD4  06609
@AUTO#rd_kafka_msgq_len
         000000A8  FFFFFFF3  01697
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFEC  02643
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFEF  02249
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFF0  02063
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFE9  03242
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFEB  02872
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFEA  03133
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFEE  02387
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFED  02550
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFF1  01940
@AUTO#rd_kafka_replyq_clear
         000000A8  FFFFFFE8  03315
@AUTO#rd_kafka_replyq_copy
         000000A8  FFFFFFE7  03431
@AUTO#rd_kafka_replyq_destroy
         000000A8  FFFFFFE6  03549
@AUTO#rd_kafka_replyq_enq
         000000AC  FFFFFFE5  03696
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF8  01112
@AUTO#rd_strlcpy
         000000B0  FFFFFFF2  01821
@AUTO#rd_uvarint_enc_u64
         000000B0  FFFFFFF5  01411
                                          Macro and Copy Code Source Summary                                               Page  201 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:42 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  202 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   143  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 00136    221 @REGION_338_1,12
   253  000001DE  00000002 DROP                                           12              12
   322  0000027E  00000002 USING  ORDINARY    00000240 00001000 00000002  12 000B8    335 @REGION_1058_1,12
   364  00000300  00000002 DROP                                           12              12
   432  0000039E  00000002 USING  ORDINARY    00000360 00001000 00000002  12 000E0    457 @REGION_1059_1,12
   490  00000448  00000002 DROP                                           12              12
   559  000004E6  00000002 USING  ORDINARY    000004A8 00001000 00000002  12 000E0    584 @REGION_1060_1,12
   617  00000590  00000002 DROP                                           12              12
   686  0000062E  00000002 USING  ORDINARY    000005F0 00001000 00000002  12 000D0    706 @REGION_1061_1,12
   739  000006C8  00000002 DROP                                           12              12
   808  0000075E  00000002 USING  ORDINARY    00000720 00001000 00000002  12 00110    835 @REGION_1077_1,12
   868  00000838  00000002 DROP                                           12              12
   936  000008CE  00000002 USING  ORDINARY    00000890 00001000 00000002  12 000A8    943 @REGION_1080_1,12
   971  00000940  00000002 DROP                                           12              12
  1039  000009DE  00000002 USING  ORDINARY    000009A0 00001000 00000002  12 00118   1073 @REGION_1084_1,12
  1107  00000AC0  00000002 DROP                                           12              12
  1176  00000B56  00000002 USING  ORDINARY    00000B18 00001000 00000002  12 000C0   1186 @REGION_1088_1,12
  1220  00000BE0  00000002 DROP                                           12              12
  1349  00000CC2  00000002 USING  ORDINARY    00000CB8 00001000 00000002  12 00084   1390 @REGION_1308_1,12
  1406  00000D4A  00000002 DROP                                           12              12
  1475  00000DEE  00000002 USING  ORDINARY    00000DB0 00001000 00000002  12 000F2   1587 @REGION_1314_1,12
  1621  00000EEA  00000002 DROP                                           12              12
  1749  00000FCA  00000002 USING  ORDINARY    00000FC0 00001000 00000002  12 000A6   1795 @REGION_1384_1,12
  1816  00001074  00000002 DROP                                           12              12
  1887  0000110E  00000002 USING  ORDINARY    000010D0 00001000 00000002  12 000D0   1905 @REGION_1428_1,12
  1935  000011A8  00000002 DROP                                           12              12
  2003  00001246  00000002 USING  ORDINARY    00001208 00001000 00000002  12 000E0   2028 @REGION_1432_1,12
  2058  000012F0  00000002 DROP                                           12              12
  2126  0000138E  00000002 USING  ORDINARY    00001350 00001000 00000002  12 001A8   2208 @REGION_1435_1,12
  2244  00001500  00000002 DROP                                           12              12
  2313  0000159E  00000002 USING  ORDINARY    00001560 00001000 00000002  12 00100   2349 @REGION_1439_1,12
  2382  00001668  00000002 DROP                                           12              12
  2450  00001706  00000002 USING  ORDINARY    000016C8 00001000 00000002  12 00102   2517 @REGION_1441_1,12
  2545  00001812  00000002 DROP                                           12              12
  2602  00001882  00000002 USING  ORDINARY    00001878 00001000 00000002  12 00042   2621 @REGION_1442_1,12
  2638  000018CC  00000002 DROP                                           12              12
  2706  00001966  00000002 USING  ORDINARY    00001928 00001000 00000002  12 001C2   2832 @REGION_1444_1,12
  2867  00001B50  00000002 DROP                                           12              12
  2935  00001BEE  00000002 USING  ORDINARY    00001BB0 00001000 00000002  12 00212   3098 @REGION_1445_1,12
  3128  00001E0A  00000002 DROP                                           12              12
  3196  00001EA6  00000002 USING  ORDINARY    00001E68 00001000 00000002  12 000D0   3209 @REGION_1446_1,12
  3237  00001F40  00000002 DROP                                           12              12
  3378  0000206E  00000002 USING  ORDINARY    00002030 00001000 00000002  12 000D0   3396 @REGION_1459_1,12
  3426  00002108  00000002 DROP                                           12              12
  3494  000021AE  00000002 USING  ORDINARY    00002170 00001000 00000002  12 000D8   3515 @REGION_1460_1,12
  3544  00002250  00000002 DROP                                           12              12
  3612  000022EE  00000002 USING  ORDINARY    000022B0 00001000 00000002  12 00088   3664 @REGION_1461_1,12
  3691  000023C0  00000002 DROP                                           12              12
  3760  0000245E  00000002 USING  ORDINARY    00002420 00001000 00000002  12 00090   3802 @REGION_1485_1,12
  3826  00002518  00000002 DROP                                           12              12
  3895  000025B6  00000002 USING  ORDINARY    00002578 00001000 00000002  12 00118   3928 @REGION_1517_1,12
                                                      Using Map                                                            Page  203 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  3961  00002698  00000002 DROP                                           12              12
  4030  0000273E  00000002 USING  ORDINARY    00002700 00001000 00000002  12 000B8   4040 @REGION_1519_1,12
  4067  000027C0  00000002 DROP                                           12              12
  4135  00002866  00000002 USING  ORDINARY    00002828 00001000 00000002  12 000C0   4148 @REGION_1521_1,12
  4175  000028F0  00000002 DROP                                           12              12
  4243  00002996  00000002 USING  ORDINARY    00002958 00001000 00000002  12 000C0   4255 @REGION_1523_1,12
  4282  00002A20  00000002 DROP                                           12              12
  4350  00002AC6  00000002 USING  ORDINARY    00002A88 00001000 00000002  12 000F0   4376 @REGION_1530_1,12
  4404  00002B80  00000002 DROP                                           12              12
  4475  00002C26  00000002 USING  ORDINARY    00002BE8 00001000 00000002  12 0022A   4658 @REGION_1531_1,12
  4688  00002E5A  00000002 DROP                                           12              12
  4765  00002F06  00000002 USING  ORDINARY    00002EC8 00001000 00000002  12 002EE   5016 @REGION_1501_1,12
  5041  00003210  00000002 DROP                                           12              12
  5111  000032AE  00000002 USING  ORDINARY    00003270 00001000 00000002  12 00128   5146 @REGION_1502_1,12
  5177  000033A0  00000002 DROP                                           12              12
  5247  0000343E  00000002 USING  ORDINARY    00003400 00001000 00000002  12 00118   5284 @REGION_1503_1,12
  5316  00003520  00000002 DROP                                           12              12
  5386  000035C6  00000002 USING  ORDINARY    00003588 00001000 00000002  12 001FE   5542 @REGION_1504_1,12
  5571  000037D2  00000002 DROP                                           12              12
  5641  00003876  00000002 USING  ORDINARY    00003838 00001000 00000002  12 00188   5708 @REGION_1505_1,12
  5742  000039C8  00000002 DROP                                           12              12
  5812  00003A66  00000002 USING  ORDINARY    00003A28 00001000 00000002  12 00128   5848 @REGION_1506_1,12
  5887  00003B58  00000002 DROP                                           12              12
  5957  00003BF6  00000002 USING  ORDINARY    00003BB8 00001000 00000002  12 0017A   6038 @REGION_1507_1,12
  6073  00003D7A  00000002 DROP                                           12              12
  6143  00003E1E  00000002 USING  ORDINARY    00003DE0 00001000 00000002  12 000E0   6159 @REGION_1508_1,12
  6197  00003EC8  00000002 DROP                                           12              12
  6267  00003F6E  00000002 USING  ORDINARY    00003F30 00001000 00000002  12 00170   6335 @REGION_1509_1,12
  6365  000040A8  00000002 DROP                                           12              12
  6435  00004146  00000002 USING  ORDINARY    00004108 00001000 00000002  12 00246   6581 @REGION_1510_1,12
  6604  00004396  00000002 DROP                                           12              12
  6675  00004446  00000002 USING  ORDINARY    00004408 00001000 00000002  12 002E2   6882 @REGION_1511_1,12
  6905  00004732  00000002 DROP                                           12              12
  6978  000047D6  00000002 USING  ORDINARY    00004798 00001000 00000002  12 00328   7191 @REGION_1512_1,12
  7213  00004B08  00000002 DROP                                           12              12
  7279  00004B7A  00000002 USING  ORDINARY    00004B70 00001000 00000002  12 00084   7322 @REGION_1499_1,12
  7344  00004C02  00000002 DROP                                           12              12
  7415  00004CA6  00000002 USING  ORDINARY    00004C68 00001000 00000002  12 001BA   7539 @REGION_1513_1,12
  7566  00004E6A  00000002 DROP                                           12              12
  7637  00004F0E  00000002 USING  ORDINARY    00004ED0 00001000 00000002  12 001AA   7762 @REGION_1514_1,12
  7787  000050C2  00000002 DROP                                           12              12
  7858  00005166  00000002 USING  ORDINARY    00005128 00001000 00000002  12 00362   8124 @REGION_1515_1,12
  8151  000054D2  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  204 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_BUF ..\asg\asm\rdkafka_buf.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCPRV   C:\DIGNUS\MACLIB\dccprv
  L5  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 12.42.53 Stop Time: 12.42.53 Processor Time: 00.00.00.0670
Return Code 000
