                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_transport.obj ../asg/asm/rdkafka_transport.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_transport.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_TRANSPORT
          SD 00000002 00000000 000046BC            07  @CODE
@@GSKOP   ER 00000003                                  GETSOCKOPT
##ERROR   ER 00000004                                  __ERROR
rd_buf_write
          ER 00000005                                  RD_BUF_WRITE
@@ASSERT  ER 00000006                                  __ASSERT
recv      ER 00000007                                  RECV
send      ER 00000008                                  SEND
rd_buf_get_writable
          ER 00000009                                  RD_BUF_GET_WRITABLE
mtx_lock  ER 0000000A                                  MTX_LOCK
rd_buf_write_ensure_contig
          ER 0000000B                                  RD_BUF_WRITE_ENSURE_CONTIG
rd_buf_write_ensure
          ER 0000000C                                  RD_BUF_WRITE_ENSURE
@@STSOC   ER 0000000D                                  SETSOCKOPT
mtx_unlock
          ER 0000000E                                  MTX_UNLOCK
rd_slice_init
          ER 0000000F                                  RD_SLICE_INIT
rd_kafka_err2str
          ER 00000010                                  RD_KAFKA_ERR2STR
rd_slice_peeker
          ER 00000011                                  RD_SLICE_PEEKER
rd_slice_read
          ER 00000012                                  RD_SLICE_READ
rd_kafka_secproto_names
          XD 00000013 00000003 00000000                RD_KAFKA_SECPROTO_NAMES
snprintf  ER 00000014                                  SNPRINTF
calloc    ER 00000015                                  CALLOC
rd_kafka_interceptors_on_request_sent
          ER 00000016                                  RD_KAFKA_INTERCEPTORS_ON_REQUEST_SENT
poll      ER 00000017                                  POLL
free      ER 00000018                                  FREE
close     ER 00000019                                  CLOSE
@@PT3ML   ER 0000001A                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 0000001B                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_broker_fail
          ER 0000001C                                  RD_KAFKA_BROKER_FAIL
rd_kafka_broker_conn_closed
          ER 0000001D                                  RD_KAFKA_BROKER_CONN_CLOSED
rd_sockaddr2str
          ER 0000001E                                  RD_SOCKADDR2STR
rd_kafka_buf_destroy_final
          ER 0000001F                                  RD_KAFKA_BUF_DESTROY_FINAL
rd_kafka_buf_new0
          ER 00000020                                  RD_KAFKA_BUF_NEW0
rd_kafka_broker_connect_done
          ER 00000021                                  RD_KAFKA_BROKER_CONNECT_DONE
rd_kafka_send
          ER 00000022                                  RD_KAFKA_SEND
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
rd_kafka_recv
          ER 00000023                                  RD_KAFKA_RECV
read      ER 00000024                                  READ
rd_kafka_crash
          ER 00000025                                  RD_KAFKA_CRASH
strerror  ER 00000026                                  STRERROR
fcntl     ER 00000027                                  FCNTL
rd_kafka_log0
          ER 00000028                                  RD_KAFKA_LOG0
connect   ER 00000029                                  CONNECT
rd_kafka_curr_transport
          XD 0000002A 00000007 00000008                RD_KAFKA_CURR_TRANSPORT
@rdkafka_transport&
          XD 0000002B 00000007 000006D8                @@STATIC
@rdkafka_transport
          SD 0000002C 000046C0 00000C2C            07  @DATA
rd_kafka_secproto_names
          ER 0000002D                                  @ERD_KAFKA_SECPROTO_NAMES
rdkafka_transport:
          SD 0000002E 000052F0 00001040            07  @@INIT@
rd_kafka_transport_close
          LD          00000FC0          00000002   00  RD_KAFKA_TRANSPORT_CLOSE
rd_kafka_transport_connect_done
          LD          00001980          00000002   00  RD_KAFKA_TRANSPORT_CONNECT_DONE
rd_kafka_transport_send
          LD          00001AC0          00000002   00  RD_KAFKA_TRANSPORT_SEND
rd_kafka_transport_recv
          LD          00001C00          00000002   00  RD_KAFKA_TRANSPORT_RECV
rd_kafka_transport_request_sent
          LD          00001D48          00000002   00  RD_KAFKA_TRANSPORT_REQUEST_SENT
rd_kafka_transport_framed_recv
          LD          00001ED8          00000002   00  RD_KAFKA_TRANSPORT_FRAMED_RECV
rd_kafka_transport_post_connect_setup
          LD          00002578          00000002   00  RD_KAFKA_TRANSPORT_POST_CONNECT_SETUP
rd_kafka_transport_io_serve
          LD          00003688          00000002   00  RD_KAFKA_TRANSPORT_IO_SERVE
rd_kafka_transport_new
          LD          000038A8          00000002   00  RD_KAFKA_TRANSPORT_NEW
rd_kafka_transport_connect
          LD          00003D10          00000002   00  RD_KAFKA_TRANSPORT_CONNECT
rd_kafka_transport_poll_set
          LD          000043D0          00000002   00  RD_KAFKA_TRANSPORT_POLL_SET
rd_kafka_transport_poll_clear
          LD          00004460          00000002   00  RD_KAFKA_TRANSPORT_POLL_CLEAR
rd_kafka_transport_poll
          LD          000044F8          00000002   00  RD_KAFKA_TRANSPORT_POLL
rd_kafka_transport_init
          LD          000046A8          00000002   00  RD_KAFKA_TRANSPORT_INIT
rd_kafka_curr_transport
          LD          000052EC          0000002C   00  @DRD_KAFKA_CURR_TRANSPORT
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:36:15 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DE3D9C1D5E2D7D6D9E3'
00000000                00000000 000046BC     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816DA3998195A2979699A3'
                                              18 getsockopt ALIAS C'@@GSKOP'
                                              19          EXTRN getsockopt
                                              20 __error  ALIAS C'##ERROR'
                                              21          EXTRN __error
                                              22 rd_buf_write ALIAS X'99846D82A4866DA69989A385'
                                              23          EXTRN rd_buf_write
                                              24 __assert ALIAS C'@@ASSERT'
                                              25          EXTRN __assert
                                              26 recv     ALIAS C'recv'
                                              27          EXTRN recv
                                              28 send     ALIAS C'send'
                                              29          EXTRN send
                                              30 rd_buf_get_writable ALIAS X'99846D82A4866D8785A36DA69989A381829385'
                                              31          EXTRN rd_buf_get_writable
                                              32 mtx_lock ALIAS X'94A3A76D93968392'
                                              33          EXTRN mtx_lock
                                              34 rd_buf_write_ensure_contig ALIAS X'99846D82A4866DA69989A3856D8595A2A499*
                                                                856D839695A38987'
                                              35          EXTRN rd_buf_write_ensure_contig
                                              36 rd_buf_write_ensure ALIAS X'99846D82A4866DA69989A3856D8595A2A49985'
                                              37          EXTRN rd_buf_write_ensure
                                              38 setsockopt ALIAS C'@@STSOC'
                                              39          EXTRN setsockopt
                                              40 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              41          EXTRN mtx_unlock
                                              42 rd_slice_init ALIAS X'99846DA2938983856D899589A3'
                                              43          EXTRN rd_slice_init
                                              44 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              45          EXTRN rd_kafka_err2str
                                              46 rd_slice_peeker ALIAS X'99846DA2938983856D978585928599'
                                              47          EXTRN rd_slice_peeker
                                              48 rd_slice_read ALIAS X'99846DA2938983856D99858184'
                                              49          EXTRN rd_slice_read
                                              50 rd_kafka_secproto_names ALIAS X'99846D92818692816DA28583979996A3966D958*
                                                                19485A2'
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                              51 rd_kafka_secproto_names DXD   0F
                                              52 snprintf ALIAS C'snprintf'
                                              53          EXTRN snprintf
                                              54 calloc   ALIAS C'calloc'
                                              55          EXTRN calloc
                                              56 rd_kafka_interceptors_on_request_sent ALIAS X'99846D92818692816D8995A38*
                                                                599838597A39699A26D96956D998598A485A2A36DA28595A3'
                                              57          EXTRN rd_kafka_interceptors_on_request_sent
                                              58 poll     ALIAS C'poll'
                                              59          EXTRN poll
                                              60 free     ALIAS C'free'
                                              61          EXTRN free
                                              62 close    ALIAS C'close'
                                              63          EXTRN close
                                              64 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              65          EXTRN pthread_mutex_lock
                                              66 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              67          EXTRN pthread_mutex_unlock
                                              68 rd_kafka_broker_fail ALIAS X'99846D92818692816D8299969285996D86818993'
                                              69          EXTRN rd_kafka_broker_fail
                                              70 rd_kafka_broker_conn_closed ALIAS X'99846D92818692816D8299969285996D839*
                                                                695956D839396A28584'
                                              71          EXTRN rd_kafka_broker_conn_closed
                                              72 rd_sockaddr2str ALIAS X'99846DA296839281848499F2A2A399'
                                              73          EXTRN rd_sockaddr2str
                                              74 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                              75          EXTRN rd_kafka_buf_destroy_final
                                              76 rd_kafka_buf_new0 ALIAS X'99846D92818692816D82A4866D9585A6F0'
                                              77          EXTRN rd_kafka_buf_new0
                                              78 rd_kafka_broker_connect_done ALIAS X'99846D92818692816D8299969285996D83*
                                                                9695958583A36D84969585'
                                              79          EXTRN rd_kafka_broker_connect_done
                                              80 rd_kafka_send ALIAS X'99846D92818692816DA2859584'
                                              81          EXTRN rd_kafka_send
                                              82 rd_kafka_recv ALIAS X'99846D92818692816D998583A5'
                                              83          EXTRN rd_kafka_recv
                                              84 read     ALIAS C'read'
                                              85          EXTRN read
                                              86 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              87          EXTRN rd_kafka_crash
                                              88 strerror ALIAS C'strerror'
                                              89          EXTRN strerror
                                              90 fcntl    ALIAS C'fcntl'
                                              91          EXTRN fcntl
                                              92 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                              93          EXTRN rd_kafka_log0
                                              94 connect  ALIAS C'connect'
                                              95          EXTRN connect
                                              96 *
                                              97 *
                                              98 *
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                              99 * ....... start of rd_atomic32_sub
00000000                                     100 @LNAME1060 DS  0H
00000000 0000000F                            101          DC    X'0000000F'
00000004 99846D81A3969489                    102          DC    C'rd_atomic32_sub'
00000013 00                                  103          DC    X'00'
                                             104 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1060
                                             105          macro
                                             106          dccextrn &m
                                             107          gblc    &$dccext(1000)
                                             108          gbla    &$dccexti
                                             109          lcla    &i
                                             110 &$dccext(&$dccexti+1) setc    '&m'
                                             111 &i       seta    1
                                             112 .loop    aif    (&i gt &$dccexti).around
                                             113          aif    ('&$dccext(&i)' eq '&m').getout
                                             114 &i       seta    &i+1
                                             115          ago     .loop
                                             116 .around  anop
                                             117 &$dccexti seta &$dccexti+1
                                             118          extrn  &m
                                             119 .getout  anop
                                             120          mend
00000018                                     121+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              122+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  123+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            124+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    125+         dc ad(@PER_1060)                                               02-DCCCA
00000028 00000000000000B8                    126+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                    127+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    128+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  129+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  130+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  131+         dc al1(3)                                                      02-DCCCA
00000043 08                                  132+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  133+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              134+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    135+         dc ad(@LNAME1060)                                              02-DCCCA
00000050                                     136+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    137+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    138+         dc ad(0)                                                       02-DCCCA
00000060                                     139+         ds    0d                                                       01-DCCPR
00000060                                     140+rd_atomic32_sub ds 0d                                                   01-DCCPR
00000060                                     141+@REGION_1060_1 ds 0h                                                    01-DCCPR
00000060 EBEC D008 0024          00000008    142+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    143+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    144+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           145+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    146+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    147+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    148+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    149+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000008A                                     150+@PER_1060 ds   0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    151+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    152+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           153+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           154+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             155+         using @REGION_1060_1,12                                        01-DCCPR
0000009E B904 0031                           156          LGR   3,1         ; ptr to parm area
                                             157 * ******* End of Prologue
                                             158 * *
000000A2 E320 3000 0004          00000000    159          LG    2,0(0,3)    ; ra
                                             160 * ***
                                             161 * ***      int32_t r;
                                             162 * ***      pthread_mutex_lock(&ra->lock);
000000A8 41F0 2008               00000008    163          LA    15,8(0,2)
000000AC E3F0 D0B0 0024          000000B0    164          STG   15,176(0,13)
000000B2 4110 D0B0               000000B0    165          LA    1,176(0,13)
000000B6 E3F0 C0D8 0004          00000138    166          LG    15,@lit_1060_0 ; pthread_mutex_lock
000000BC                                     167 @@gen_label0 DS    0H
000000BC 05EF                                168          BALR  14,15
000000BE                                     169 @@gen_label1 DS    0H
                                             170 * ***      ra->val -= v;
000000BE 58F0 2000               00000000    171          L     15,0(0,2)
000000C2 5BF0 300C               0000000C    172          S     15,12(0,3)
000000C6 50F0 2000               00000000    173          ST    15,0(0,2)
                                             174 * ***      r = ra->val;
000000CA 183F                                175          LR    3,15        ; ra
                                             176 * ***      pthread_mutex_unlock(&ra->lock);
000000CC 41F0 2008               00000008    177          LA    15,8(0,2)
000000D0 E3F0 D0B0 0024          000000B0    178          STG   15,176(0,13)
000000D6 4110 D0B0               000000B0    179          LA    1,176(0,13)
000000DA E3F0 C0E0 0004          00000140    180          LG    15,@lit_1060_1 ; pthread_mutex_unlock
000000E0                                     181 @@gen_label2 DS    0H
000000E0 05EF                                182          BALR  14,15
000000E2                                     183 @@gen_label3 DS    0H
                                             184 * ***      return r;
000000E2 B914 00F3                           185          LGFR  15,3
                                             186 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             187 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             188 * ***
                                             189 * ***   }
                                             190 * * **** Start of Epilogue
                                             191          DCCEPIL
000000E6                                     192+         ds 0h                                                          01-DCCEP
                                             193+* Epilog
000000E6 D707 D088 D088 00000088 00000088    194+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000EC E3D0 D080 0004          00000080    195+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000F2 E3C0 D090 0004          00000090    196+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000F8 E3B0 C018 0004          00000018    197+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000FE E3C0 B010 0021          00000010    198+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000104 E3E0 D008 0004          00000008    199+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000010A EB1C D020 0004          00000020    200+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000110 078E                                201+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page    9 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000112 E3F0 D010 0024          00000010    202+         stg 15,16(0,13)         save return code                       01-DCCEP
00000118 E300 D018 0024          00000018    203+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000011E E3F0 D090 0004          00000090    204+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000124 E3F0 F018 0004          00000018    205+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000012A 47F0 F040               00000040    206+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             207+* End of Epilog
                                             208 * * **** End of Epilogue
00000130                                     209          DS    0D
00000130 000000B8                            210 @FRAMESIZE_1060 DC F'184'
00000134 00000000
00000138 0000000000000000                    211 @lit_1060_0 DC AD(pthread_mutex_lock)
00000140 0000000000000000                    212 @lit_1060_1 DC AD(pthread_mutex_unlock)
                                             213          DROP  12
                                             214 *
                                             215 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             216 *      (FUNCTION #1060)
                                             217 *
00000000                00000000 000000AC    218 @AUTO#rd_atomic32_sub DSECT
00000000                                     219          DS    XL168
000000A8                                     220 rd_atomic32_sub#r#0 DS 1F  ; r
                                             221 *
00000148                00000000 000046BC    222 @CODE    CSECT
                                             223 *
                                             224 *
                                             225 *
                                             226 * ....... start of rd_atomic32_get
00000148                                     227 @LNAME1061 DS  0H
00000148 0000000F                            228          DC    X'0000000F'
0000014C 99846D81A3969489                    229          DC    C'rd_atomic32_get'
0000015B 00                                  230          DC    X'00'
                                             231 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                             232          macro
                                             233          dccextrn &m
                                             234          gblc    &$dccext(1000)
                                             235          gbla    &$dccexti
                                             236          lcla    &i
                                             237 &$dccext(&$dccexti+1) setc    '&m'
                                             238 &i       seta    1
                                             239 .loop    aif    (&i gt &$dccexti).around
                                             240          aif    ('&$dccext(&i)' eq '&m').getout
                                             241 &i       seta    &i+1
                                             242          ago     .loop
                                             243 .around  anop
                                             244 &$dccexti seta &$dccexti+1
                                             245          extrn  &m
                                             246 .getout  anop
                                             247          mend
00000160                                     248+$eye0005    ds    0d                                                    02-DCCCA
00000160 C4C3C3                              249+         dc cl3'DCC'                                                    02-DCCCA
00000163 01                                  250+         dc xl1'01' format one                                          02-DCCCA
00000164 00000000                            251+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000168 00000000000001D2                    252+         dc ad(@PER_1061)                                               02-DCCCA
00000170 00000000000000B8                    253+         dc ad(184)                                                     02-DCCCA
00000178 0000000000000000                    254+         dc ad(0)                                                       02-DCCCA
00000180 0000000000001000                    255+         dc ad(4096)                                                    02-DCCCA
00000188 20                                  256+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000189 03                                  257+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000018A 03                                  258+         dc al1(3)                                                      02-DCCCA
0000018B 08                                  259+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000018C 00                                  260+         dc bl.8'00000000'                                              02-DCCCA
0000018D 000000                              261+         dc al3(0)                                                      02-DCCCA
00000190 0000000000000148                    262+         dc ad(@LNAME1061)                                              02-DCCCA
00000198                                     263+         ds 0d                                                          02-DCCCA
00000198 0000000000000160                    264+         dc ad($eye0005)                                                02-DCCCA
000001A0 0000000000000000                    265+         dc ad(0)                                                       02-DCCCA
000001A8                                     266+         ds    0d                                                       01-DCCPR
000001A8                                     267+rd_atomic32_get ds 0d                                                   01-DCCPR
000001A8                                     268+@REGION_1061_1 ds 0h                                                    01-DCCPR
000001A8 EBEC D008 0024          00000008    269+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001AE E3E0 D088 0004          00000088    270+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001B4 E3C0 D090 0004          00000090    271+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001BA B904 002E                           272+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001BE E3B0 C018 0004          00000018    273+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001C4 A7EB 00B8               000000B8    274+         aghi  14,184              increase by frame size               01-DCCPR
000001C8 E3E0 C020 0021          00000020    275+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001CE 4720 B020               00000020    276+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001D2                                     277+@PER_1061 ds   0h                                                       01-DCCPR
000001D2 EBDE 2080 0024          00000080    278+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001D8 E3C0 2090 0024          00000090    279+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001DE B904 00D2                           280+         lgr   13,2                set real frame pointer               01-DCCPR
000001E2 B904 00CF                           281+         lgr   12,15               set base reg                         01-DCCPR
                        000001A8             282+         using @REGION_1061_1,12                                        01-DCCPR
                                             283 * ******* End of Prologue
                                             284 * *
000001E6 E320 1000 0004          00000000    285          LG    2,0(0,1)    ; ra
                                             286 * ***
                                             287 * ***      int32_t r;
                                             288 * ***      pthread_mutex_lock(&ra->lock);
000001EC 41F0 2008               00000008    289          LA    15,8(0,2)
000001F0 E3F0 D0B0 0024          000000B0    290          STG   15,176(0,13)
000001F6 4110 D0B0               000000B0    291          LA    1,176(0,13)
000001FA E3F0 C0C8 0004          00000270    292          LG    15,@lit_1061_3 ; pthread_mutex_lock
00000200                                     293 @@gen_label4 DS    0H
00000200 05EF                                294          BALR  14,15
00000202                                     295 @@gen_label5 DS    0H
                                             296 * ***      r = ra->val;
00000202 5830 2000               00000000    297          L     3,0(0,2)    ; ra
                                             298 * ***      pthread_mutex_unlock(&ra->lock);
00000206 41F0 2008               00000008    299          LA    15,8(0,2)
0000020A E3F0 D0B0 0024          000000B0    300          STG   15,176(0,13)
00000210 4110 D0B0               000000B0    301          LA    1,176(0,13)
00000214 E3F0 C0D0 0004          00000278    302          LG    15,@lit_1061_4 ; pthread_mutex_unlock
0000021A                                     303 @@gen_label6 DS    0H
                                                                                                                           Page   11 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000021A 05EF                                304          BALR  14,15
0000021C                                     305 @@gen_label7 DS    0H
                                             306 * ***      return r;
0000021C B914 00F3                           307          LGFR  15,3
                                             308 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             309 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             310 * ***
                                             311 * ***   }
                                             312 * * **** Start of Epilogue
                                             313          DCCEPIL
00000220                                     314+         ds 0h                                                          01-DCCEP
                                             315+* Epilog
00000220 D707 D088 D088 00000088 00000088    316+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000226 E3D0 D080 0004          00000080    317+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000022C E3C0 D090 0004          00000090    318+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000232 E3B0 C018 0004          00000018    319+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000238 E3C0 B010 0021          00000010    320+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000023E E3E0 D008 0004          00000008    321+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000244 EB1C D020 0004          00000020    322+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000024A 078E                                323+         bcr 8,14                if same dsab, just return              01-DCCEP
0000024C E3F0 D010 0024          00000010    324+         stg 15,16(0,13)         save return code                       01-DCCEP
00000252 E300 D018 0024          00000018    325+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000258 E3F0 D090 0004          00000090    326+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000025E E3F0 F018 0004          00000018    327+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000264 47F0 F040               00000040    328+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             329+* End of Epilog
                                             330 * * **** End of Epilogue
00000268                                     331          DS    0D
00000268 000000B8                            332 @FRAMESIZE_1061 DC F'184'
0000026C 00000000
00000270 0000000000000000                    333 @lit_1061_3 DC AD(pthread_mutex_lock)
00000278 0000000000000000                    334 @lit_1061_4 DC AD(pthread_mutex_unlock)
                                             335          DROP  12
                                             336 *
                                             337 *   DSECT for automatic variables in "rd_atomic32_get"
                                             338 *      (FUNCTION #1061)
                                             339 *
00000000                00000000 000000AC    340 @AUTO#rd_atomic32_get DSECT
00000000                                     341          DS    XL168
000000A8                                     342 rd_atomic32_get#r#0 DS 1F  ; r
                                             343 *
00000280                00000000 000046BC    344 @CODE    CSECT
                                             345 *
                                             346 *
                                             347 *
                                             348 * ....... start of rd_atomic64_add
00000280                                     349 @LNAME1064 DS  0H
00000280 0000000F                            350          DC    X'0000000F'
00000284 99846D81A3969489                    351          DC    C'rd_atomic64_add'
00000293 00                                  352          DC    X'00'
                                             353 rd_atomic64_add DCCPRLG CINDEX=1064,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1064
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             354          macro
                                             355          dccextrn &m
                                             356          gblc    &$dccext(1000)
                                             357          gbla    &$dccexti
                                             358          lcla    &i
                                             359 &$dccext(&$dccexti+1) setc    '&m'
                                             360 &i       seta    1
                                             361 .loop    aif    (&i gt &$dccexti).around
                                             362          aif    ('&$dccext(&i)' eq '&m').getout
                                             363 &i       seta    &i+1
                                             364          ago     .loop
                                             365 .around  anop
                                             366 &$dccexti seta &$dccexti+1
                                             367          extrn  &m
                                             368 .getout  anop
                                             369          mend
00000298                                     370+$eye0008    ds    0d                                                    02-DCCCA
00000298 C4C3C3                              371+         dc cl3'DCC'                                                    02-DCCCA
0000029B 01                                  372+         dc xl1'01' format one                                          02-DCCCA
0000029C 00000000                            373+         dc a(0)                                                        02-DCCCA
000002A0 000000000000030A                    374+         dc ad(@PER_1064)                                               02-DCCCA
000002A8 00000000000000B8                    375+         dc ad(184)                                                     02-DCCCA
000002B0 0000000000000000                    376+         dc ad(0)                                                       02-DCCCA
000002B8 0000000000001000                    377+         dc ad(4096)                                                    02-DCCCA
000002C0 20                                  378+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002C1 03                                  379+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002C2 03                                  380+         dc al1(3)                                                      02-DCCCA
000002C3 08                                  381+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002C4 00                                  382+         dc bl.8'00000000'                                              02-DCCCA
000002C5 000000                              383+         dc al3(0)                                                      02-DCCCA
000002C8 0000000000000280                    384+         dc ad(@LNAME1064)                                              02-DCCCA
000002D0                                     385+         ds 0d                                                          02-DCCCA
000002D0 0000000000000298                    386+         dc ad($eye0008)                                                02-DCCCA
000002D8 0000000000000000                    387+         dc ad(0)                                                       02-DCCCA
000002E0                                     388+         ds    0d                                                       01-DCCPR
000002E0                                     389+rd_atomic64_add ds 0d                                                   01-DCCPR
000002E0                                     390+@REGION_1064_1 ds 0h                                                    01-DCCPR
000002E0 EBEC D008 0024          00000008    391+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002E6 E3E0 D088 0004          00000088    392+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002EC E3C0 D090 0004          00000090    393+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002F2 B904 002E                           394+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002F6 E3B0 C018 0004          00000018    395+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002FC A7EB 00B8               000000B8    396+         aghi  14,184              increase by frame size               01-DCCPR
00000300 E3E0 C020 0021          00000020    397+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000306 4720 B020               00000020    398+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000030A                                     399+@PER_1064 ds   0h                                                       01-DCCPR
0000030A EBDE 2080 0024          00000080    400+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000310 E3C0 2090 0024          00000090    401+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000316 B904 00D2                           402+         lgr   13,2                set real frame pointer               01-DCCPR
0000031A B904 00CF                           403+         lgr   12,15               set base reg                         01-DCCPR
                        000002E0             404+         using @REGION_1064_1,12                                        01-DCCPR
0000031E B904 0031                           405          LGR   3,1         ; ptr to parm area
                                                                                                                           Page   13 
  Active Usings: @REGION_1064_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             406 * ******* End of Prologue
                                             407 * *
00000322 E320 3000 0004          00000000    408          LG    2,0(0,3)    ; ra
                                             409 * ***
                                             410 * ***      int64_t r;
                                             411 * ***      pthread_mutex_lock(&ra->lock);
00000328 41F0 2008               00000008    412          LA    15,8(0,2)
0000032C E3F0 D0B0 0024          000000B0    413          STG   15,176(0,13)
00000332 4110 D0B0               000000B0    414          LA    1,176(0,13)
00000336 E3F0 C0E0 0004          000003C0    415          LG    15,@lit_1064_6 ; pthread_mutex_lock
0000033C                                     416 @@gen_label8 DS    0H
0000033C 05EF                                417          BALR  14,15
0000033E                                     418 @@gen_label9 DS    0H
                                             419 * ***      ra->val += v;
0000033E E3F0 2000 0004          00000000    420          LG    15,0(0,2)
00000344 E3F0 3008 0008          00000008    421          AG    15,8(0,3)
0000034A E3F0 2000 0024          00000000    422          STG   15,0(0,2)
                                             423 * ***      r = ra->val;
00000350 B904 003F                           424          LGR   3,15        ; ra
                                             425 * ***      pthread_mutex_unlock(&ra->lock);
00000354 41F0 2008               00000008    426          LA    15,8(0,2)
00000358 E3F0 D0B0 0024          000000B0    427          STG   15,176(0,13)
0000035E 4110 D0B0               000000B0    428          LA    1,176(0,13)
00000362 E3F0 C0E8 0004          000003C8    429          LG    15,@lit_1064_7 ; pthread_mutex_unlock
00000368                                     430 @@gen_label10 DS    0H
00000368 05EF                                431          BALR  14,15
0000036A                                     432 @@gen_label11 DS    0H
                                             433 * ***      return r;
0000036A B904 00F3                           434          LGR   15,3
                                             435 * ***   # 222 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             436 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             437 * ***
                                             438 * ***   }
                                             439 * * **** Start of Epilogue
                                             440          DCCEPIL
0000036E                                     441+         ds 0h                                                          01-DCCEP
                                             442+* Epilog
0000036E D707 D088 D088 00000088 00000088    443+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000374 E3D0 D080 0004          00000080    444+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000037A E3C0 D090 0004          00000090    445+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000380 E3B0 C018 0004          00000018    446+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000386 E3C0 B010 0021          00000010    447+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000038C E3E0 D008 0004          00000008    448+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000392 EB1C D020 0004          00000020    449+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000398 078E                                450+         bcr 8,14                if same dsab, just return              01-DCCEP
0000039A E3F0 D010 0024          00000010    451+         stg 15,16(0,13)         save return code                       01-DCCEP
000003A0 E300 D018 0024          00000018    452+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003A6 E3F0 D090 0004          00000090    453+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003AC E3F0 F018 0004          00000018    454+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003B2 47F0 F040               00000040    455+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             456+* End of Epilog
                                             457 * * **** End of Epilogue
                                                                                                                           Page   14 
  Active Usings: @REGION_1064_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000003B8                                     458          DS    0D
000003B8 000000B8                            459 @FRAMESIZE_1064 DC F'184'
000003BC 00000000
000003C0 0000000000000000                    460 @lit_1064_6 DC AD(pthread_mutex_lock)
000003C8 0000000000000000                    461 @lit_1064_7 DC AD(pthread_mutex_unlock)
                                             462          DROP  12
                                             463 *
                                             464 *   DSECT for automatic variables in "rd_atomic64_add"
                                             465 *      (FUNCTION #1064)
                                             466 *
00000000                00000000 000000B0    467 @AUTO#rd_atomic64_add DSECT
00000000                                     468          DS    XL168
000000A8                                     469 rd_atomic64_add#r#0 DS 8XL1 ; r
                                             470 *
000003D0                00000000 000046BC    471 @CODE    CSECT
                                             472 *
                                             473 *
                                             474 *
                                             475 * ....... start of rd_fd_set_nonblocking
000003D0                                     476 @LNAME1070 DS  0H
000003D0 00000015                            477          DC    X'00000015'
000003D4 99846D86846DA285                    478          DC    C'rd_fd_set_nonblocking'
000003E9 00                                  479          DC    X'00'
                                             480 rd_fd_set_nonblocking DCCPRLG CINDEX=1070,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1070
                                             481          macro
                                             482          dccextrn &m
                                             483          gblc    &$dccext(1000)
                                             484          gbla    &$dccexti
                                             485          lcla    &i
                                             486 &$dccext(&$dccexti+1) setc    '&m'
                                             487 &i       seta    1
                                             488 .loop    aif    (&i gt &$dccexti).around
                                             489          aif    ('&$dccext(&i)' eq '&m').getout
                                             490 &i       seta    &i+1
                                             491          ago     .loop
                                             492 .around  anop
                                             493 &$dccexti seta &$dccexti+1
                                             494          extrn  &m
                                             495 .getout  anop
                                             496          mend
000003F0                                     497+$eye0011    ds    0d                                                    02-DCCCA
000003F0 C4C3C3                              498+         dc cl3'DCC'                                                    02-DCCCA
000003F3 01                                  499+         dc xl1'01' format one                                          02-DCCCA
000003F4 00000000                            500+         dc a(0)                                                        02-DCCCA
000003F8 0000000000000462                    501+         dc ad(@PER_1070)                                               02-DCCCA
00000400 00000000000000C8                    502+         dc ad(200)                                                     02-DCCCA
00000408 0000000000000000                    503+         dc ad(0)                                                       02-DCCCA
00000410 0000000000001000                    504+         dc ad(4096)                                                    02-DCCCA
00000418 20                                  505+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000419 03                                  506+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000041A 03                                  507+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000041B 08                                  508+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000041C 00                                  509+         dc bl.8'00000000'                                              02-DCCCA
0000041D 000000                              510+         dc al3(0)                                                      02-DCCCA
00000420 00000000000003D0                    511+         dc ad(@LNAME1070)                                              02-DCCCA
00000428                                     512+         ds 0d                                                          02-DCCCA
00000428 00000000000003F0                    513+         dc ad($eye0011)                                                02-DCCCA
00000430 0000000000000000                    514+         dc ad(0)                                                       02-DCCCA
00000438                                     515+         ds    0d                                                       01-DCCPR
00000438                                     516+rd_fd_set_nonblocking ds 0d                                             01-DCCPR
00000438                                     517+@REGION_1070_1 ds 0h                                                    01-DCCPR
00000438 EBEC D008 0024          00000008    518+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000043E E3E0 D088 0004          00000088    519+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000444 E3C0 D090 0004          00000090    520+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000044A B904 002E                           521+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000044E E3B0 C018 0004          00000018    522+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000454 A7EB 00C8               000000C8    523+         aghi  14,200              increase by frame size               01-DCCPR
00000458 E3E0 C020 0021          00000020    524+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000045E 4720 B020               00000020    525+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000462                                     526+@PER_1070 ds   0h                                                       01-DCCPR
00000462 EBDE 2080 0024          00000080    527+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000468 E3C0 2090 0024          00000090    528+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000046E B904 00D2                           529+         lgr   13,2                set real frame pointer               01-DCCPR
00000472 B904 00CF                           530+         lgr   12,15               set base reg                         01-DCCPR
                        00000438             531+         using @REGION_1070_1,12                                        01-DCCPR
00000476 B904 0021                           532          LGR   2,1         ; ptr to parm area
                                             533 * ******* End of Prologue
                                             534 * *
                                             535 * ***           int fl = fcntl(fd, 3, 0);
0000047A E3F0 2004 0014          00000004    536          LGF   15,4(0,2)   ; fd
00000480 E3F0 D0B0 0024          000000B0    537          STG   15,176(0,13)
00000486 E548 D0B8 0003          000000B8    538          MVGHI 184(13),3
0000048C D707 D0C0 D0C0 000000C0 000000C0    539          XC    192(8,13),192(13)
00000492 4110 D0B0               000000B0    540          LA    1,176(0,13)
00000496 E330 C0C0 0004          000004F8    541          LG    3,@lit_1070_9 ; fcntl
0000049C B904 00F3                           542          LGR   15,3
000004A0                                     543 @@gen_label12 DS    0H
000004A0 05EF                                544          BALR  14,15
000004A2                                     545 @@gen_label13 DS    0H
                                             546 * ***           if (fl == -1 ||
000004A2 A7FE FFFF               0000FFFF    547          CHI   15,-1
000004A6 4780 C0A4               000004DC    548          BE    @L27
                                             549 * ***               fcntl(fd, 4, fl | 0x0004) == -1)
000004AA E310 2004 0014          00000004    550          LGF   1,4(0,2)    ; fd
000004B0 E310 D0B0 0024          000000B0    551          STG   1,176(0,13)
000004B6 E548 D0B8 0004          000000B8    552          MVGHI 184(13),4
000004BC A5FB 0004               00000004    553          OILL  15,4
000004C0 B914 00FF                           554          LGFR  15,15
000004C4 E3F0 D0C0 0024          000000C0    555          STG   15,192(0,13)
000004CA 4110 D0B0               000000B0    556          LA    1,176(0,13)
000004CE B904 00F3                           557          LGR   15,3
000004D2                                     558 @@gen_label15 DS    0H
000004D2 05EF                                559          BALR  14,15
                                                                                                                           Page   16 
  Active Usings: @REGION_1070_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000004D4                                     560 @@gen_label16 DS    0H
000004D4 A7FE FFFF               0000FFFF    561          CHI   15,-1
000004D8 4770 C0D0               00000508    562          BNE   @L26
000004DC                                     563 @L27     DS    0H
                                             564 * ***                   return (* __error());
000004DC E3F0 C0C8 0004          00000500    565          LG    15,@lit_1070_11 ; __error
000004E2                                     566 @@gen_label18 DS    0H
000004E2 05EF                                567          BALR  14,15
000004E4                                     568 @@gen_label19 DS    0H
000004E4 E3F0 F000 0014          00000000    569          LGF   15,0(0,15)
000004EA 47F0 C0D4               0000050C    570          B     @ret_lab_1070
000004F0                                     571          DS    0D
000004F0 000000C8                            572 @FRAMESIZE_1070 DC F'200'
000004F4 00000000
000004F8 0000000000000000                    573 @lit_1070_9 DC AD(fcntl)
00000500 0000000000000000                    574 @lit_1070_11 DC AD(__error)
00000508                                     575 @L26     DS    0H
                                             576 * ***           return 0;
00000508 A7F9 0000               00000000    577          LGHI  15,0        ; 0
                                             578 * ***   }
0000050C                                     579 @ret_lab_1070 DS 0H
                                             580 * * **** Start of Epilogue
                                             581          DCCEPIL
0000050C                                     582+         ds 0h                                                          01-DCCEP
                                             583+* Epilog
0000050C D707 D088 D088 00000088 00000088    584+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000512 E3D0 D080 0004          00000080    585+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000518 E3C0 D090 0004          00000090    586+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000051E E3B0 C018 0004          00000018    587+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000524 E3C0 B010 0021          00000010    588+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000052A E3E0 D008 0004          00000008    589+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000530 EB1C D020 0004          00000020    590+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000536 078E                                591+         bcr 8,14                if same dsab, just return              01-DCCEP
00000538 E3F0 D010 0024          00000010    592+         stg 15,16(0,13)         save return code                       01-DCCEP
0000053E E300 D018 0024          00000018    593+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000544 E3F0 D090 0004          00000090    594+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000054A E3F0 F018 0004          00000018    595+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000550 47F0 F040               00000040    596+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             597+* End of Epilog
                                             598 * * **** End of Epilogue
                                             599          DROP  12
                                             600 *
                                             601 *   DSECT for automatic variables in "rd_fd_set_nonblocking"
                                             602 *      (FUNCTION #1070)
                                             603 *
00000000                00000000 000000AC    604 @AUTO#rd_fd_set_nonblocking DSECT
00000000                                     605          DS    XL168
000000A8                                     606 rd_fd_set_nonblocking#fl#0 DS 1F ; fl
                                             607 *
00000554                00000000 000046BC    608 @CODE    CSECT
                                             609 *
                                             610 *
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             611 *
                                             612 * ....... start of rd_calloc
00000554                                     613 @LNAME1077 DS  0H
00000554 00000009                            614          DC    X'00000009'
00000558 99846D8381939396                    615          DC    C'rd_calloc'
00000561 00                                  616          DC    X'00'
                                             617 rd_calloc DCCPRLG CINDEX=1077,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1077
                                             618          macro
                                             619          dccextrn &m
                                             620          gblc    &$dccext(1000)
                                             621          gbla    &$dccexti
                                             622          lcla    &i
                                             623 &$dccext(&$dccexti+1) setc    '&m'
                                             624 &i       seta    1
                                             625 .loop    aif    (&i gt &$dccexti).around
                                             626          aif    ('&$dccext(&i)' eq '&m').getout
                                             627 &i       seta    &i+1
                                             628          ago     .loop
                                             629 .around  anop
                                             630 &$dccexti seta &$dccexti+1
                                             631          extrn  &m
                                             632 .getout  anop
                                             633          mend
00000568                                     634+$eye0014    ds    0d                                                    02-DCCCA
00000568 C4C3C3                              635+         dc cl3'DCC'                                                    02-DCCCA
0000056B 01                                  636+         dc xl1'01' format one                                          02-DCCCA
0000056C 00000000                            637+         dc a(0)                                                        02-DCCCA
00000570 00000000000005DA                    638+         dc ad(@PER_1077)                                               02-DCCCA
00000578 00000000000000D0                    639+         dc ad(208)                                                     02-DCCCA
00000580 0000000000000000                    640+         dc ad(0)                                                       02-DCCCA
00000588 0000000000001000                    641+         dc ad(4096)                                                    02-DCCCA
00000590 20                                  642+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000591 03                                  643+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000592 03                                  644+         dc al1(3)                                                      02-DCCCA
00000593 08                                  645+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000594 00                                  646+         dc bl.8'00000000'                                              02-DCCCA
00000595 000000                              647+         dc al3(0)                                                      02-DCCCA
00000598 0000000000000554                    648+         dc ad(@LNAME1077)                                              02-DCCCA
000005A0                                     649+         ds 0d                                                          02-DCCCA
000005A0 0000000000000568                    650+         dc ad($eye0014)                                                02-DCCCA
000005A8 0000000000000000                    651+         dc ad(0)                                                       02-DCCCA
000005B0                                     652+         ds    0d                                                       01-DCCPR
000005B0                                     653+rd_calloc ds   0d                                                       01-DCCPR
000005B0                                     654+@REGION_1077_1 ds 0h                                                    01-DCCPR
000005B0 EBEC D008 0024          00000008    655+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000005B6 E3E0 D088 0004          00000088    656+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000005BC E3C0 D090 0004          00000090    657+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000005C2 B904 002E                           658+         lgr   2,14                copy addr of our savearea            01-DCCPR
000005C6 E3B0 C018 0004          00000018    659+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000005CC A7EB 00D0               000000D0    660+         aghi  14,208              increase by frame size               01-DCCPR
000005D0 E3E0 C020 0021          00000020    661+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000005D6 4720 B020               00000020    662+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000005DA                                     663+@PER_1077 ds   0h                                                       01-DCCPR
000005DA EBDE 2080 0024          00000080    664+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000005E0 E3C0 2090 0024          00000090    665+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000005E6 B904 00D2                           666+         lgr   13,2                set real frame pointer               01-DCCPR
000005EA B904 00CF                           667+         lgr   12,15               set base reg                         01-DCCPR
                        000005B0             668+         using @REGION_1077_1,12                                        01-DCCPR
                                             669 * ******* End of Prologue
                                             670 * *
                                             671 * ***      void *p = calloc(num, sz);
000005EE E3F0 1000 0004          00000000    672          LG    15,0(0,1)   ; num
000005F4 E3F0 D0B0 0024          000000B0    673          STG   15,176(0,13)
000005FA E3F0 1008 0004          00000008    674          LG    15,8(0,1)   ; sz
00000600 E3F0 D0B8 0024          000000B8    675          STG   15,184(0,13)
00000606 4110 D0B0               000000B0    676          LA    1,176(0,13)
0000060A E3F0 C0F8 0004          000006A8    677          LG    15,@lit_1077_14 ; calloc
00000610                                     678 @@gen_label20 DS    0H
00000610 05EF                                679          BALR  14,15
00000612                                     680 @@gen_label21 DS    0H
00000612 B904 002F                           681          LGR   2,15
                                             682 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             683 * ka\\src\\rd.h", 122, "p"));
00000616 B902 00F2                           684          LTGR  15,2
0000061A 4770 C0A2               00000652    685          BNZ   @L32
0000061E                                     686 @L31     DS    0H
0000061E E3F0 C110 0004          000006C0    687          LG    15,@lit_1077_15
00000624 E3F0 D0B0 0024          000000B0    688          STG   15,176(0,13)
0000062A E3F0 C108 0004          000006B8    689          LG    15,@lit_1077_16
00000630 E3F0 D0B8 0024          000000B8    690          STG   15,184(0,13)
00000636 E548 D0C0 007A          000000C0    691          MVGHI 192(13),122
0000063C 41F0 F020               00000020    692          LA    15,32(0,15)
00000640 E3F0 D0C8 0024          000000C8    693          STG   15,200(0,13)
00000646 4110 D0B0               000000B0    694          LA    1,176(0,13)
0000064A E3F0 C100 0004          000006B0    695          LG    15,@lit_1077_17 ; __assert
00000650                                     696 @@gen_label23 DS    0H
00000650 05EF                                697          BALR  14,15
00000652                                     698 @@gen_label24 DS    0H
00000652                                     699 @L32     DS    0H
                                             700 * ***      return p;
00000652 B904 00F2                           701          LGR   15,2
                                             702 * ***   }
                                             703 * * **** Start of Epilogue
                                             704          DCCEPIL
00000656                                     705+         ds 0h                                                          01-DCCEP
                                             706+* Epilog
00000656 D707 D088 D088 00000088 00000088    707+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000065C E3D0 D080 0004          00000080    708+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000662 E3C0 D090 0004          00000090    709+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000668 E3B0 C018 0004          00000018    710+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000066E E3C0 B010 0021          00000010    711+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000674 E3E0 D008 0004          00000008    712+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000067A EB1C D020 0004          00000020    713+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   19 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000680 078E                                714+         bcr 8,14                if same dsab, just return              01-DCCEP
00000682 E3F0 D010 0024          00000010    715+         stg 15,16(0,13)         save return code                       01-DCCEP
00000688 E300 D018 0024          00000018    716+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000068E E3F0 D090 0004          00000090    717+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000694 E3F0 F018 0004          00000018    718+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000069A 47F0 F040               00000040    719+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             720+* End of Epilog
                                             721 * * **** End of Epilogue
000006A0                                     722          DS    0D
000006A0 000000D0                            723 @FRAMESIZE_1077 DC F'208'
000006A4 00000000
000006A8 0000000000000000                    724 @lit_1077_14 DC AD(calloc)
000006B0 0000000000000000                    725 @lit_1077_17 DC AD(__assert)
000006B8 00000000000048E4                    726 @lit_1077_16 DC AD(@strings@)
000006C0 00000000000046C0                    727 @lit_1077_15 DC AD(@DATA)
                                             728          DROP  12
                                             729 *
                                             730 *   DSECT for automatic variables in "rd_calloc"
                                             731 *      (FUNCTION #1077)
                                             732 *
00000000                00000000 000000A8    733 @AUTO#rd_calloc DSECT
00000000                                     734          DS    XL168
                                             735 *
000006C8                00000000 000046BC    736 @CODE    CSECT
                                             737 *
                                             738 *
                                             739 *
                                             740 * ....... start of rd_free
000006C8                                     741 @LNAME1080 DS  0H
000006C8 00000007                            742          DC    X'00000007'
000006CC 99846D86998585                      743          DC    C'rd_free'
000006D3 00                                  744          DC    X'00'
                                             745 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1080
                                             746          macro
                                             747          dccextrn &m
                                             748          gblc    &$dccext(1000)
                                             749          gbla    &$dccexti
                                             750          lcla    &i
                                             751 &$dccext(&$dccexti+1) setc    '&m'
                                             752 &i       seta    1
                                             753 .loop    aif    (&i gt &$dccexti).around
                                             754          aif    ('&$dccext(&i)' eq '&m').getout
                                             755 &i       seta    &i+1
                                             756          ago     .loop
                                             757 .around  anop
                                             758 &$dccexti seta &$dccexti+1
                                             759          extrn  &m
                                             760 .getout  anop
                                             761          mend
000006D8                                     762+$eye0017    ds    0d                                                    02-DCCCA
000006D8 C4C3C3                              763+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000006DB 01                                  764+         dc xl1'01' format one                                          02-DCCCA
000006DC 00000000                            765+         dc a(0)                                                        02-DCCCA
000006E0 000000000000074A                    766+         dc ad(@PER_1080)                                               02-DCCCA
000006E8 00000000000000B0                    767+         dc ad(176)                                                     02-DCCCA
000006F0 0000000000000000                    768+         dc ad(0)                                                       02-DCCCA
000006F8 0000000000001000                    769+         dc ad(4096)                                                    02-DCCCA
00000700 20                                  770+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000701 03                                  771+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000702 03                                  772+         dc al1(3)                                                      02-DCCCA
00000703 08                                  773+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000704 00                                  774+         dc bl.8'00000000'                                              02-DCCCA
00000705 000000                              775+         dc al3(0)                                                      02-DCCCA
00000708 00000000000006C8                    776+         dc ad(@LNAME1080)                                              02-DCCCA
00000710                                     777+         ds 0d                                                          02-DCCCA
00000710 00000000000006D8                    778+         dc ad($eye0017)                                                02-DCCCA
00000718 0000000000000000                    779+         dc ad(0)                                                       02-DCCCA
00000720                                     780+         ds    0d                                                       01-DCCPR
00000720                                     781+rd_free  ds    0d                                                       01-DCCPR
00000720                                     782+@REGION_1080_1 ds 0h                                                    01-DCCPR
00000720 EBEC D008 0024          00000008    783+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000726 E3E0 D088 0004          00000088    784+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000072C E3C0 D090 0004          00000090    785+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000732 B904 002E                           786+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000736 E3B0 C018 0004          00000018    787+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000073C A7EB 00B0               000000B0    788+         aghi  14,176              increase by frame size               01-DCCPR
00000740 E3E0 C020 0021          00000020    789+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000746 4720 B020               00000020    790+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000074A                                     791+@PER_1080 ds   0h                                                       01-DCCPR
0000074A EBDE 2080 0024          00000080    792+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000750 E3C0 2090 0024          00000090    793+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000756 B904 00D2                           794+         lgr   13,2                set real frame pointer               01-DCCPR
0000075A B904 00CF                           795+         lgr   12,15               set base reg                         01-DCCPR
                        00000720             796+         using @REGION_1080_1,12                                        01-DCCPR
                                             797 * ******* End of Prologue
                                             798 * *
                                             799 * ***      free(ptr);
0000075E E3F0 1000 0004          00000000    800          LG    15,0(0,1)   ; ptr
00000764 E3F0 D0A8 0024          000000A8    801          STG   15,168(0,13)
0000076A 4110 D0A8               000000A8    802          LA    1,168(0,13)
0000076E E3F0 C0A8 0004          000007C8    803          LG    15,@lit_1080_19 ; free
00000774                                     804 @@gen_label25 DS    0H
00000774 05EF                                805          BALR  14,15
00000776                                     806 @@gen_label26 DS    0H
                                             807 * ***   }
00000776                                     808 @ret_lab_1080 DS 0H
                                             809 * * **** Start of Epilogue
                                             810          DCCEPIL
00000776                                     811+         ds 0h                                                          01-DCCEP
                                             812+* Epilog
00000776 D707 D088 D088 00000088 00000088    813+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000077C E3D0 D080 0004          00000080    814+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000782 E3C0 D090 0004          00000090    815+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   21 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000788 E3B0 C018 0004          00000018    816+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000078E E3C0 B010 0021          00000010    817+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000794 E3E0 D008 0004          00000008    818+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000079A EB1C D020 0004          00000020    819+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000007A0 078E                                820+         bcr 8,14                if same dsab, just return              01-DCCEP
000007A2 E3F0 D010 0024          00000010    821+         stg 15,16(0,13)         save return code                       01-DCCEP
000007A8 E300 D018 0024          00000018    822+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007AE E3F0 D090 0004          00000090    823+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000007B4 E3F0 F018 0004          00000018    824+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000007BA 47F0 F040               00000040    825+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             826+* End of Epilog
                                             827 * * **** End of Epilogue
000007C0                                     828          DS    0D
000007C0 000000B0                            829 @FRAMESIZE_1080 DC F'176'
000007C4 00000000
000007C8 0000000000000000                    830 @lit_1080_19 DC AD(free)
                                             831          DROP  12
                                             832 *
                                             833 *   DSECT for automatic variables in "rd_free"
                                             834 *      (FUNCTION #1080)
                                             835 *
00000000                00000000 000000A8    836 @AUTO#rd_free DSECT
00000000                                     837          DS    XL168
                                             838 *
000007D0                00000000 000046BC    839 @CODE    CSECT
                                             840 *
                                             841 *
                                             842 *
                                             843 * ....... start of rd_refcnt_sub0
000007D0                                     844 @LNAME1084 DS  0H
000007D0 0000000E                            845          DC    X'0000000E'
000007D4 99846D9985868395                    846          DC    C'rd_refcnt_sub0'
000007E2 00                                  847          DC    X'00'
                                             848 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                             849          macro
                                             850          dccextrn &m
                                             851          gblc    &$dccext(1000)
                                             852          gbla    &$dccexti
                                             853          lcla    &i
                                             854 &$dccext(&$dccexti+1) setc    '&m'
                                             855 &i       seta    1
                                             856 .loop    aif    (&i gt &$dccexti).around
                                             857          aif    ('&$dccext(&i)' eq '&m').getout
                                             858 &i       seta    &i+1
                                             859          ago     .loop
                                             860 .around  anop
                                             861 &$dccexti seta &$dccexti+1
                                             862          extrn  &m
                                             863 .getout  anop
                                             864          mend
000007E8                                     865+$eye0020    ds    0d                                                    02-DCCCA
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000007E8 C4C3C3                              866+         dc cl3'DCC'                                                    02-DCCCA
000007EB 01                                  867+         dc xl1'01' format one                                          02-DCCCA
000007EC 00000000                            868+         dc a(0)                                                        02-DCCCA
000007F0 000000000000085A                    869+         dc ad(@PER_1084)                                               02-DCCCA
000007F8 00000000000000D0                    870+         dc ad(208)                                                     02-DCCCA
00000800 0000000000000000                    871+         dc ad(0)                                                       02-DCCCA
00000808 0000000000001000                    872+         dc ad(4096)                                                    02-DCCCA
00000810 20                                  873+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000811 03                                  874+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000812 03                                  875+         dc al1(3)                                                      02-DCCCA
00000813 08                                  876+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000814 00                                  877+         dc bl.8'00000000'                                              02-DCCCA
00000815 000000                              878+         dc al3(0)                                                      02-DCCCA
00000818 00000000000007D0                    879+         dc ad(@LNAME1084)                                              02-DCCCA
00000820                                     880+         ds 0d                                                          02-DCCCA
00000820 00000000000007E8                    881+         dc ad($eye0020)                                                02-DCCCA
00000828 0000000000000000                    882+         dc ad(0)                                                       02-DCCCA
00000830                                     883+         ds    0d                                                       01-DCCPR
00000830                                     884+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000830                                     885+@REGION_1084_1 ds 0h                                                    01-DCCPR
00000830 EBEC D008 0024          00000008    886+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000836 E3E0 D088 0004          00000088    887+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000083C E3C0 D090 0004          00000090    888+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000842 B904 002E                           889+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000846 E3B0 C018 0004          00000018    890+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000084C A7EB 00D0               000000D0    891+         aghi  14,208              increase by frame size               01-DCCPR
00000850 E3E0 C020 0021          00000020    892+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000856 4720 B020               00000020    893+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000085A                                     894+@PER_1084 ds   0h                                                       01-DCCPR
0000085A EBDE 2080 0024          00000080    895+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000860 E3C0 2090 0024          00000090    896+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000866 B904 00D2                           897+         lgr   13,2                set real frame pointer               01-DCCPR
0000086A B904 00CF                           898+         lgr   12,15               set base reg                         01-DCCPR
                        00000830             899+         using @REGION_1084_1,12                                        01-DCCPR
                                             900 * ******* End of Prologue
                                             901 * *
                                             902 * ***           int r;
                                             903 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                             904 * ***           r = rd_atomic32_sub(R, 1);
0000086E E3F0 1000 0004          00000000    905          LG    15,0(0,1)   ; R
00000874 E3F0 D0B0 0024          000000B0    906          STG   15,176(0,13)
0000087A E548 D0B8 0001          000000B8    907          MVGHI 184(13),1
00000880 4110 D0B0               000000B0    908          LA    1,176(0,13)
00000884 E3F0 C100 0004          00000930    909          LG    15,@lit_1084_21 ; rd_atomic32_sub
0000088A                                     910 @@gen_label27 DS    0H
0000088A 05EF                                911          BALR  14,15
0000088C                                     912 @@gen_label28 DS    0H
0000088C 122F                                913          LTR   2,15
                                             914 * ***
                                             915 * ***           if (r < 0)
0000088E 47B0 C0A6               000008D6    916          BNL   @L41
                                             917 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                                                                                                           Page   23 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             918 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                             919 * zero\""));
00000892 E3F0 C108 0004          00000938    920          LG    15,@lit_1084_22
00000898 4110 F022               00000022    921          LA    1,34(0,15)
0000089C 9500 1000      00000000 00000000    922          CLI   0(1),0
000008A0 4780 C0A6               000008D6    923          BE    @L41
000008A4                                     924 @L42     DS    0H
000008A4 E310 C118 0004          00000948    925          LG    1,@lit_1084_23
000008AA 4110 1036               00000036    926          LA    1,54(0,1)
000008AE E310 D0B0 0024          000000B0    927          STG   1,176(0,13)
000008B4 E3F0 D0B8 0024          000000B8    928          STG   15,184(0,13)
000008BA E548 D0C0 014F          000000C0    929          MVGHI 192(13),335
000008C0 41F0 F032               00000032    930          LA    15,50(0,15)
000008C4 E3F0 D0C8 0024          000000C8    931          STG   15,200(0,13)
000008CA 4110 D0B0               000000B0    932          LA    1,176(0,13)
000008CE E3F0 C110 0004          00000940    933          LG    15,@lit_1084_24 ; __assert
000008D4                                     934 @@gen_label31 DS    0H
000008D4 05EF                                935          BALR  14,15
000008D6                                     936 @@gen_label32 DS    0H
000008D6                                     937 @L43     DS    0H
000008D6                                     938 @L41     DS    0H
                                             939 * ***           return r;
000008D6 B914 00F2                           940          LGFR  15,2
                                             941 * ***   }
                                             942 * * **** Start of Epilogue
                                             943          DCCEPIL
000008DA                                     944+         ds 0h                                                          01-DCCEP
                                             945+* Epilog
000008DA D707 D088 D088 00000088 00000088    946+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000008E0 E3D0 D080 0004          00000080    947+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008E6 E3C0 D090 0004          00000090    948+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008EC E3B0 C018 0004          00000018    949+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008F2 E3C0 B010 0021          00000010    950+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008F8 E3E0 D008 0004          00000008    951+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008FE EB1C D020 0004          00000020    952+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000904 078E                                953+         bcr 8,14                if same dsab, just return              01-DCCEP
00000906 E3F0 D010 0024          00000010    954+         stg 15,16(0,13)         save return code                       01-DCCEP
0000090C E300 D018 0024          00000018    955+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000912 E3F0 D090 0004          00000090    956+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000918 E3F0 F018 0004          00000018    957+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000091E 47F0 F040               00000040    958+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             959+* End of Epilog
                                             960 * * **** End of Epilogue
00000928                                     961          DS    0D
00000928 000000D0                            962 @FRAMESIZE_1084 DC F'208'
0000092C 00000000
00000930 0000000000000060                    963 @lit_1084_21 DC AD(rd_atomic32_sub)
00000938 00000000000048E4                    964 @lit_1084_22 DC AD(@strings@)
00000940 0000000000000000                    965 @lit_1084_24 DC AD(__assert)
00000948 00000000000046C0                    966 @lit_1084_23 DC AD(@DATA)
                                             967          DROP  12
                                             968 *
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             969 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                             970 *      (FUNCTION #1084)
                                             971 *
00000000                00000000 000000AC    972 @AUTO#rd_refcnt_sub0 DSECT
00000000                                     973          DS    XL168
000000A8                                     974 rd_refcnt_sub0#r#0 DS 1F   ; r
                                             975 *
00000950                00000000 000046BC    976 @CODE    CSECT
                                             977 *
                                             978 *
                                             979 *
                                             980 * ....... start of rd_buf_write_pos
00000950                                     981 @LNAME1266 DS  0H
00000950 00000010                            982          DC    X'00000010'
00000954 99846D82A4866DA6                    983          DC    C'rd_buf_write_pos'
00000964 00                                  984          DC    X'00'
                                             985 rd_buf_write_pos DCCPRLG CINDEX=1266,BASER=12,FRAME=176,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1266
                                             986          macro
                                             987          dccextrn &m
                                             988          gblc    &$dccext(1000)
                                             989          gbla    &$dccexti
                                             990          lcla    &i
                                             991 &$dccext(&$dccexti+1) setc    '&m'
                                             992 &i       seta    1
                                             993 .loop    aif    (&i gt &$dccexti).around
                                             994          aif    ('&$dccext(&i)' eq '&m').getout
                                             995 &i       seta    &i+1
                                             996          ago     .loop
                                             997 .around  anop
                                             998 &$dccexti seta &$dccexti+1
                                             999          extrn  &m
                                            1000 .getout  anop
                                            1001          mend
00000968                                    1002+$eye0023    ds    0d                                                    02-DCCCA
00000968 C4C3C3                             1003+         dc cl3'DCC'                                                    02-DCCCA
0000096B 01                                 1004+         dc xl1'01' format one                                          02-DCCCA
0000096C 00000000                           1005+         dc a(0)                                                        02-DCCCA
00000970 0000000000000000                   1006+         dc ad(0)                                                       02-DCCCA
00000978 00000000000000B0                   1007+         dc ad(176)                                                     02-DCCCA
00000980 0000000000000000                   1008+         dc ad(0)                                                       02-DCCCA
00000988 0000000000001000                   1009+         dc ad(4096)                                                    02-DCCCA
00000990 20                                 1010+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000991 03                                 1011+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000992 03                                 1012+         dc al1(3)                                                      02-DCCCA
00000993 08                                 1013+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000994 00                                 1014+         dc bl.8'00000000'                                              02-DCCCA
00000995 000000                             1015+         dc al3(0)                                                      02-DCCCA
00000998 0000000000000950                   1016+         dc ad(@LNAME1266)                                              02-DCCCA
000009A0                                    1017+         ds 0d                                                          02-DCCCA
000009A0 0000000000000968                   1018+         dc ad($eye0023)                                                02-DCCCA
000009A8 0000000000000000                   1019+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000009B0                                    1020+         ds    0d                                                       01-DCCPR
000009B0                                    1021+rd_buf_write_pos ds 0d                                                  01-DCCPR
000009B0                                    1022+@REGION_1266_1 ds 0h                                                    01-DCCPR
000009B0 EBEC D008 0024          00000008   1023+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000009B6 B904 00CF                          1024+         lgr   12,15               set base reg                         01-DCCPR
                        000009B0            1025+         using @REGION_1266_1,12                                        01-DCCPR
                                            1026 * ******* End of Prologue
                                            1027 * *
                                            1028 * ***           const rd_segment_t *seg = rbuf->rbuf_wpos;
000009BA E3F0 1000 0004          00000000   1029          LG    15,0(0,1)   ; rbuf
000009C0 E3F0 F018 0004          00000018   1030          LG    15,24(0,15) ; offset of rbuf_wpos in rd_buf_s
                                            1031 * ***
                                            1032 * ***           if (((!seg))) {
000009C6 B902 001F                          1033          LTGR  1,15
000009CA 4770 C026               000009D6   1034          BNZ   @L98
                                            1035 * ***
                                            1036 * ***
                                            1037 * ***
                                            1038 * ***                   return 0;
000009CE A7F9 0000               00000000   1039          LGHI  15,0        ; 0
000009D2 47F0 C036               000009E6   1040          B     @ret_lab_1266
                                            1041 * ***           }
000009D6                                    1042 @L98     DS    0H
                                            1043 * ***
                                            1044 * ***
                                            1045 * ***
                                            1046 * ***           return seg->seg_absof + seg->seg_of;
000009D6 E310 F028 0004          00000028   1047          LG    1,40(0,15)  ; offset of seg_absof in rd_segment_s
000009DC E310 F018 000A          00000018   1048          ALG   1,24(0,15)
000009E2 B904 00F1                          1049          LGR   15,1
                                            1050 * ***   }
000009E6                                    1051 @ret_lab_1266 DS 0H
                                            1052 * * **** Start of Epilogue
                                            1053          DCCEPIL
000009E6                                    1054+         ds 0h                                                          01-DCCEP
                                            1055+* Epilog
                                            1056+* Epilog
000009E6 E3E0 D008 0004          00000008   1057+         lg    14,8(,13) restore the reg                                01-DCCEP
000009EC EB1C D020 0004          00000020   1058+         lmg   1,12,32(13)                                              01-DCCEP
000009F2 07FE                               1059+         br   14                                                        01-DCCEP
                                            1060+* End of Epilog
                                            1061 * * **** End of Epilogue
                                            1062          DROP  12
                                            1063 *
                                            1064 *   DSECT for automatic variables in "rd_buf_write_pos"
                                            1065 *      (FUNCTION #1266)
                                            1066 *
00000000                00000000 000000A8   1067 @AUTO#rd_buf_write_pos DSECT
00000000                                    1068          DS    XL168
                                            1069 *
000009F4                00000000 000046BC   1070 @CODE    CSECT
                                            1071 *
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1072 *
                                            1073 *
                                            1074 * ....... start of rd_slice_abs_offset
000009F4                                    1075 @LNAME1286 DS  0H
000009F4 00000013                           1076          DC    X'00000013'
000009F8 99846DA293898385                   1077          DC    C'rd_slice_abs_offset'
00000A0B 00                                 1078          DC    X'00'
                                            1079 rd_slice_abs_offset DCCPRLG CINDEX=1286,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1286
                                            1080          macro
                                            1081          dccextrn &m
                                            1082          gblc    &$dccext(1000)
                                            1083          gbla    &$dccexti
                                            1084          lcla    &i
                                            1085 &$dccext(&$dccexti+1) setc    '&m'
                                            1086 &i       seta    1
                                            1087 .loop    aif    (&i gt &$dccexti).around
                                            1088          aif    ('&$dccext(&i)' eq '&m').getout
                                            1089 &i       seta    &i+1
                                            1090          ago     .loop
                                            1091 .around  anop
                                            1092 &$dccexti seta &$dccexti+1
                                            1093          extrn  &m
                                            1094 .getout  anop
                                            1095          mend
00000A10                                    1096+$eye0026    ds    0d                                                    02-DCCCA
00000A10 C4C3C3                             1097+         dc cl3'DCC'                                                    02-DCCCA
00000A13 01                                 1098+         dc xl1'01' format one                                          02-DCCCA
00000A14 00000000                           1099+         dc a(0)                                                        02-DCCCA
00000A18 0000000000000000                   1100+         dc ad(0)                                                       02-DCCCA
00000A20 00000000000000A8                   1101+         dc ad(168)                                                     02-DCCCA
00000A28 0000000000000000                   1102+         dc ad(0)                                                       02-DCCCA
00000A30 0000000000001000                   1103+         dc ad(4096)                                                    02-DCCCA
00000A38 20                                 1104+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A39 03                                 1105+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A3A 03                                 1106+         dc al1(3)                                                      02-DCCCA
00000A3B 08                                 1107+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A3C 00                                 1108+         dc bl.8'00000000'                                              02-DCCCA
00000A3D 000000                             1109+         dc al3(0)                                                      02-DCCCA
00000A40 00000000000009F4                   1110+         dc ad(@LNAME1286)                                              02-DCCCA
00000A48                                    1111+         ds 0d                                                          02-DCCCA
00000A48 0000000000000A10                   1112+         dc ad($eye0026)                                                02-DCCCA
00000A50 0000000000000000                   1113+         dc ad(0)                                                       02-DCCCA
00000A58                                    1114+         ds    0d                                                       01-DCCPR
00000A58                                    1115+rd_slice_abs_offset ds 0d                                               01-DCCPR
00000A58                                    1116+@REGION_1286_1 ds 0h                                                    01-DCCPR
00000A58 EBEC D008 0024          00000008   1117+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A5E B904 00CF                          1118+         lgr   12,15               set base reg                         01-DCCPR
                        00000A58            1119+         using @REGION_1286_1,12                                        01-DCCPR
                                            1120 * ******* End of Prologue
                                            1121 * *
                                            1122 * ***           if (((!slice->seg)))
                                                                                                                           Page   27 
  Active Usings: @REGION_1286_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000A62 E3F0 1000 0004          00000000   1123          LG    15,0(0,1)   ; slice
00000A68 E310 F008 0002          00000008   1124          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000A6E 4770 C024               00000A7C   1125          BNZ   @L102
                                            1126 * ***                   return slice->end;
00000A72 E3F0 F020 0004          00000020   1127          LG    15,32(0,15) ; offset of end in rd_slice_s
00000A78 47F0 C03A               00000A92   1128          B     @ret_lab_1286
00000A7C                                    1129 @L102    DS    0H
                                            1130 * ***
                                            1131 * ***           return slice->seg->seg_absof + slice->rof;
00000A7C E310 F008 0004          00000008   1132          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000A82 E310 1028 0004          00000028   1133          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000A88 E310 F010 000A          00000010   1134          ALG   1,16(0,15)
00000A8E B904 00F1                          1135          LGR   15,1
                                            1136 * ***   }
00000A92                                    1137 @ret_lab_1286 DS 0H
                                            1138 * * **** Start of Epilogue
                                            1139          DCCEPIL
00000A92                                    1140+         ds 0h                                                          01-DCCEP
                                            1141+* Epilog
                                            1142+* Epilog
00000A92 E3E0 D008 0004          00000008   1143+         lg    14,8(,13) restore the reg                                01-DCCEP
00000A98 EB1C D020 0004          00000020   1144+         lmg   1,12,32(13)                                              01-DCCEP
00000A9E 07FE                               1145+         br   14                                                        01-DCCEP
                                            1146+* End of Epilog
                                            1147 * * **** End of Epilogue
                                            1148          DROP  12
                                            1149 *
                                            1150 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                            1151 *      (FUNCTION #1286)
                                            1152 *
00000000                00000000 000000A8   1153 @AUTO#rd_slice_abs_offset DSECT
00000000                                    1154          DS    XL168
                                            1155 *
00000AA0                00000000 000046BC   1156 @CODE    CSECT
                                            1157 *
                                            1158 *
                                            1159 *
                                            1160 * ....... start of rd_slice_offset
00000AA0                                    1161 @LNAME1287 DS  0H
00000AA0 0000000F                           1162          DC    X'0000000F'
00000AA4 99846DA293898385                   1163          DC    C'rd_slice_offset'
00000AB3 00                                 1164          DC    X'00'
                                            1165 rd_slice_offset DCCPRLG CINDEX=1287,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1287
                                            1166          macro
                                            1167          dccextrn &m
                                            1168          gblc    &$dccext(1000)
                                            1169          gbla    &$dccexti
                                            1170          lcla    &i
                                            1171 &$dccext(&$dccexti+1) setc    '&m'
                                            1172 &i       seta    1
                                            1173 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1174          aif    ('&$dccext(&i)' eq '&m').getout
                                            1175 &i       seta    &i+1
                                            1176          ago     .loop
                                            1177 .around  anop
                                            1178 &$dccexti seta &$dccexti+1
                                            1179          extrn  &m
                                            1180 .getout  anop
                                            1181          mend
00000AB8                                    1182+$eye0029    ds    0d                                                    02-DCCCA
00000AB8 C4C3C3                             1183+         dc cl3'DCC'                                                    02-DCCCA
00000ABB 01                                 1184+         dc xl1'01' format one                                          02-DCCCA
00000ABC 00000000                           1185+         dc a(0)                                                        02-DCCCA
00000AC0 0000000000000000                   1186+         dc ad(0)                                                       02-DCCCA
00000AC8 00000000000000A8                   1187+         dc ad(168)                                                     02-DCCCA
00000AD0 0000000000000000                   1188+         dc ad(0)                                                       02-DCCCA
00000AD8 0000000000001000                   1189+         dc ad(4096)                                                    02-DCCCA
00000AE0 20                                 1190+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AE1 03                                 1191+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AE2 03                                 1192+         dc al1(3)                                                      02-DCCCA
00000AE3 08                                 1193+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AE4 00                                 1194+         dc bl.8'00000000'                                              02-DCCCA
00000AE5 000000                             1195+         dc al3(0)                                                      02-DCCCA
00000AE8 0000000000000AA0                   1196+         dc ad(@LNAME1287)                                              02-DCCCA
00000AF0                                    1197+         ds 0d                                                          02-DCCCA
00000AF0 0000000000000AB8                   1198+         dc ad($eye0029)                                                02-DCCCA
00000AF8 0000000000000000                   1199+         dc ad(0)                                                       02-DCCCA
00000B00                                    1200+         ds    0d                                                       01-DCCPR
00000B00                                    1201+rd_slice_offset ds 0d                                                   01-DCCPR
00000B00                                    1202+@REGION_1287_1 ds 0h                                                    01-DCCPR
00000B00 EBEC D008 0024          00000008   1203+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B06 B904 00CF                          1204+         lgr   12,15               set base reg                         01-DCCPR
                        00000B00            1205+         using @REGION_1287_1,12                                        01-DCCPR
                                            1206 * ******* End of Prologue
                                            1207 * *
                                            1208 * ***           if (((!slice->seg)))
00000B0A E3F0 1000 0004          00000000   1209          LG    15,0(0,1)   ; slice
00000B10 E310 F008 0002          00000008   1210          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000B16 4770 C02E               00000B2E   1211          BNZ   @L103
                                            1212 * ***                   return ((slice)->end - (slice)->start);
00000B1A E310 F020 0004          00000020   1213          LG    1,32(0,15)  ; offset of end in rd_slice_s
00000B20 E310 F018 000B          00000018   1214          SLG   1,24(0,15)
00000B26 B904 00F1                          1215          LGR   15,1
00000B2A 47F0 C04A               00000B4A   1216          B     @ret_lab_1287
00000B2E                                    1217 @L103    DS    0H
                                            1218 * ***
                                            1219 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                            1220 * tart;
00000B2E E310 F008 0004          00000008   1221          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000B34 E310 1028 0004          00000028   1222          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000B3A E310 F010 000A          00000010   1223          ALG   1,16(0,15)
00000B40 E310 F018 000B          00000018   1224          SLG   1,24(0,15)
00000B46 B904 00F1                          1225          LGR   15,1
                                                                                                                           Page   29 
  Active Usings: @REGION_1287_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1226 * ***   }
00000B4A                                    1227 @ret_lab_1287 DS 0H
                                            1228 * * **** Start of Epilogue
                                            1229          DCCEPIL
00000B4A                                    1230+         ds 0h                                                          01-DCCEP
                                            1231+* Epilog
                                            1232+* Epilog
00000B4A E3E0 D008 0004          00000008   1233+         lg    14,8(,13) restore the reg                                01-DCCEP
00000B50 EB1C D020 0004          00000020   1234+         lmg   1,12,32(13)                                              01-DCCEP
00000B56 07FE                               1235+         br   14                                                        01-DCCEP
                                            1236+* End of Epilog
                                            1237 * * **** End of Epilogue
                                            1238          DROP  12
                                            1239 *
                                            1240 *   DSECT for automatic variables in "rd_slice_offset"
                                            1241 *      (FUNCTION #1287)
                                            1242 *
00000000                00000000 000000A8   1243 @AUTO#rd_slice_offset DSECT
00000000                                    1244          DS    XL168
                                            1245 *
00000B58                00000000 000046BC   1246 @CODE    CSECT
                                            1247 *
                                            1248 *
                                            1249 *
                                            1250 * ....... start of rd_kafka_ApiKey2str
00000B58                                    1251 @LNAME1314 DS  0H
00000B58 00000013                           1252          DC    X'00000013'
00000B5C 99846D9281869281                   1253          DC    C'rd_kafka_ApiKey2str'
00000B6F 00                                 1254          DC    X'00'
                                            1255 rd_kafka_$Api$Key2str DCCPRLG CINDEX=1314,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1314
                                            1256          macro
                                            1257          dccextrn &m
                                            1258          gblc    &$dccext(1000)
                                            1259          gbla    &$dccexti
                                            1260          lcla    &i
                                            1261 &$dccext(&$dccexti+1) setc    '&m'
                                            1262 &i       seta    1
                                            1263 .loop    aif    (&i gt &$dccexti).around
                                            1264          aif    ('&$dccext(&i)' eq '&m').getout
                                            1265 &i       seta    &i+1
                                            1266          ago     .loop
                                            1267 .around  anop
                                            1268 &$dccexti seta &$dccexti+1
                                            1269          extrn  &m
                                            1270 .getout  anop
                                            1271          mend
00000B70                                    1272+$eye0032    ds    0d                                                    02-DCCCA
00000B70 C4C3C3                             1273+         dc cl3'DCC'                                                    02-DCCCA
00000B73 01                                 1274+         dc xl1'01' format one                                          02-DCCCA
00000B74 00000000                           1275+         dc a(0)                                                        02-DCCCA
00000B78 0000000000000BE2                   1276+         dc ad(@PER_1314)                                               02-DCCCA
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000B80 00000000000000C8                   1277+         dc ad(200)                                                     02-DCCCA
00000B88 0000000000000000                   1278+         dc ad(0)                                                       02-DCCCA
00000B90 0000000000001000                   1279+         dc ad(4096)                                                    02-DCCCA
00000B98 20                                 1280+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B99 03                                 1281+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B9A 03                                 1282+         dc al1(3)                                                      02-DCCCA
00000B9B 08                                 1283+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B9C 00                                 1284+         dc bl.8'00000000'                                              02-DCCCA
00000B9D 000000                             1285+         dc al3(0)                                                      02-DCCCA
00000BA0 0000000000000B58                   1286+         dc ad(@LNAME1314)                                              02-DCCCA
00000BA8                                    1287+         ds 0d                                                          02-DCCCA
00000BA8 0000000000000B70                   1288+         dc ad($eye0032)                                                02-DCCCA
00000BB0 0000000000000000                   1289+         dc ad(0)                                                       02-DCCCA
00000BB8                                    1290+         ds    0d                                                       01-DCCPR
00000BB8                                    1291+rd_kafka_$Api$Key2str ds 0d                                             01-DCCPR
00000BB8                                    1292+@REGION_1314_1 ds 0h                                                    01-DCCPR
00000BB8 EBEC D008 0024          00000008   1293+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000BBE E3E0 D088 0004          00000088   1294+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000BC4 E3C0 D090 0004          00000090   1295+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000BCA B904 002E                          1296+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000BCE E3B0 C018 0004          00000018   1297+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000BD4 A7EB 00C8               000000C8   1298+         aghi  14,200              increase by frame size               01-DCCPR
00000BD8 E3E0 C020 0021          00000020   1299+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BDE 4720 B020               00000020   1300+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BE2                                    1301+@PER_1314 ds   0h                                                       01-DCCPR
00000BE2 EBDE 2080 0024          00000080   1302+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BE8 E3C0 2090 0024          00000090   1303+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BEE B904 00D2                          1304+         lgr   13,2                set real frame pointer               01-DCCPR
00000BF2 B904 00CF                          1305+         lgr   12,15               set base reg                         01-DCCPR
                        00000BB8            1306+         using @REGION_1314_1,12                                        01-DCCPR
                                            1307          DCCPRV REG=15     ; Get PRV from DVT
00000BF6 E3F0 B008 0004          00000008   1308+         LG 15,8(0,11)                                                  01-DCCPR
                                            1309 * ******* End of Prologue
                                            1310 * *
                                            1311 * ***           static const char *names[] = {
                                            1312 * ***                   [0] = "Produce",
                                            1313 * ***                   [1] = "Fetch",
                                            1314 * ***                   [2] = "Offset",
                                            1315 * ***                   [3] = "Metadata",
                                            1316 * ***                   [4] = "LeaderAndIsr",
                                            1317 * ***                   [5] = "StopReplica",
                                            1318 * ***                   [6] = "UpdateMetadata",
                                            1319 * ***                   [7] = "ControlledShutdown",
                                            1320 * ***                   [8] = "OffsetCommit",
                                            1321 * ***                   [9] = "OffsetFetch",
                                            1322 * ***                   [10] = "FindCoordinator",
                                            1323 * ***                   [11] = "JoinGroup",
                                            1324 * ***                   [12] = "Heartbeat",
                                            1325 * ***                   [13] = "LeaveGroup",
                                            1326 * ***                   [14] = "SyncGroup",
                                            1327 * ***                   [15] = "DescribeGroups",
                                            1328 * ***                   [16] = "ListGroups",
                                                                                                                           Page   31 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1329 * ***                   [17] = "SaslHandshake",
                                            1330 * ***                   [18] = "ApiVersion",
                                            1331 * ***                   [19] = "CreateTopics",
                                            1332 * ***                   [20] = "DeleteTopics",
                                            1333 * ***                   [21] = "DeleteRecords",
                                            1334 * ***                   [22] = "InitProducerId",
                                            1335 * ***                   [23] = "OffsetForLeaderEpoch",
                                            1336 * ***                   [24] = "AddPartitionsToTxn",
                                            1337 * ***                   [25] = "AddOffsetsToTxn",
                                            1338 * ***                   [26] = "EndTxn",
                                            1339 * ***                   [27] = "WriteTxnMarkers",
                                            1340 * ***                   [28] = "TxnOffsetCommit",
                                            1341 * ***                   [29] = "DescribeAcls",
                                            1342 * ***                   [30] = "CreateAcls",
                                            1343 * ***                   [31] = "DeleteAcls",
                                            1344 * ***                   [32] = "DescribeConfigs",
                                            1345 * ***                   [33] = "AlterConfigs",
                                            1346 * ***                   [34] = "AlterReplicaLogDirs",
                                            1347 * ***                   [35] = "DescribeLogDirs",
                                            1348 * ***                   [36] = "SaslAuthenticate",
                                            1349 * ***                   [37] = "CreatePartitions",
                                            1350 * ***                   [38] = "CreateDelegationToken",
                                            1351 * ***                   [39] = "RenewDelegationToken",
                                            1352 * ***                   [40] = "ExpireDelegationToken",
                                            1353 * ***                   [41] = "DescribeDelegationToken",
                                            1354 * ***                   [42] = "DeleteGroups",
                                            1355 * ***                   [43] = "ElectLeadersRequest",
                                            1356 * ***                   [44] =
                                            1357 * ***                   "IncrementalAlterConfigsRequest",
                                            1358 * ***                   [45] =
                                            1359 * ***                   "AlterPartitionReassignmentsRequest",
                                            1360 * ***                   [46] =
                                            1361 * ***                   "ListPartitionReassignmentsRequest",
                                            1362 * ***                   [47] = "OffsetDeleteRequest",
                                            1363 * ***                   [48] =
                                            1364 * ***                   "DescribeClientQuotasRequest",
                                            1365 * ***                   [49] =
                                            1366 * ***                   "AlterClientQuotasRequest",
                                            1367 * ***                   [50] =
                                            1368 * ***                   "DescribeUserScramCredentialsRequest",
                                            1369 * ***                   [51] =
                                            1370 * ***                   "AlterUserScramCredentialsRequest",
                                            1371 * ***                   [52] = "VoteRequest",
                                            1372 * ***                   [53] = "BeginQuorumEpochRequest",
                                            1373 * ***                   [54] = "EndQuorumEpochRequest",
                                            1374 * ***                   [55] = "DescribeQuorumRequest",
                                            1375 * ***                   [56] = "AlterIsrRequest",
                                            1376 * ***                   [57] = "UpdateFeaturesRequest",
                                            1377 * ***                   [58] = "EnvelopeRequest",
                                            1378 * ***           };
                                            1379 * ***           static  char ret[64];
                                            1380 * ***
                                                                                                                           Page   32 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1381 * ***           if (ApiKey < 0 || ApiKey >= (int)(sizeof((names)) / si\
                                            1382 * zeof(*(names))) ||
00000BFC 4820 1006               00000006   1383          LH    2,6(0,1)    ; ApiKey
00000C00 1222                               1384          LTR   2,2
00000C02 4740 C07A               00000C32   1385          BL    @L119
00000C06 4820 1006               00000006   1386          LH    2,6(0,1)    ; ApiKey
00000C0A A72E 003B               0000003B   1387          CHI   2,59
00000C0E 47B0 C07A               00000C32   1388          BNL   @L119
00000C12                                    1389 @L117    DS    0H
                                            1390 * ***               !names[ApiKey]) {
00000C12 E320 1006 0015          00000006   1391          LGH   2,6(0,1)    ; ApiKey
00000C18 E330 C0CC 0014          00000C84   1392          LGF   3,@lit_1314_27
00000C1E 4133 F000               00000000   1393          LA    3,0(3,15)
00000C22 EB22 0003 000D          00000003   1394          SLLG  2,2,3(0)    ; *0x8
00000C28 E322 3220 0002          00000220   1395          LTG   2,544(2,3)
00000C2E 4770 C0E0               00000C98   1396          BNZ   @L118
00000C32                                    1397 @L119    DS    0H
                                            1398 * ***                   snprintf(ret, sizeof(ret), "Unknown-%hd?", Api\
                                            1399 * Key);
00000C32 E320 C0CC 0014          00000C84   1400          LGF   2,@lit_1314_27
00000C38 4122 F000               00000000   1401          LA    2,0(2,15)
00000C3C 41F0 23F8               000003F8   1402          LA    15,1016(0,2)
00000C40 E3F0 D0A8 0024          000000A8   1403          STG   15,168(0,13)
00000C46 E548 D0B0 0040          000000B0   1404          MVGHI 176(13),64
00000C4C E3F0 C0D8 0004          00000C90   1405          LG    15,@lit_1314_29
00000C52 41F0 F046               00000046   1406          LA    15,70(0,15)
00000C56 E3F0 D0B8 0024          000000B8   1407          STG   15,184(0,13)
00000C5C 48F0 1006               00000006   1408          LH    15,6(0,1)   ; ApiKey
00000C60 B914 00FF                          1409          LGFR  15,15
00000C64 E3F0 D0C0 0024          000000C0   1410          STG   15,192(0,13)
00000C6A 4110 D0A8               000000A8   1411          LA    1,168(0,13)
00000C6E E3F0 C0D0 0004          00000C88   1412          LG    15,@lit_1314_30 ; snprintf
00000C74                                    1413 @@gen_label39 DS    0H
00000C74 05EF                               1414          BALR  14,15
00000C76                                    1415 @@gen_label40 DS    0H
                                            1416 * ***                   return ret;
00000C76 41F0 23F8               000003F8   1417          LA    15,1016(0,2)
00000C7A 47F0 C0F2               00000CAA   1418          B     @ret_lab_1314
00000C80                                    1419          DS    0D
00000C80 000000C8                           1420 @FRAMESIZE_1314 DC F'200'
00000C84 00000000                           1421 @lit_1314_27 DC Q(@@STATIC)
00000C88 0000000000000000                   1422 @lit_1314_30 DC AD(snprintf)
00000C90 00000000000048E4                   1423 @lit_1314_29 DC AD(@strings@)
                                            1424 * ***           }
00000C98                                    1425 @L118    DS    0H
                                            1426 * ***
                                            1427 * ***           return names[ApiKey];
00000C98 E3F0 1006 0015          00000006   1428          LGH   15,6(0,1)   ; ApiKey
00000C9E EBFF 0003 000D          00000003   1429          SLLG  15,15,3(0)  ; *0x8
00000CA4 E3FF 3220 0004          00000220   1430          LG    15,544(15,3)
                                            1431 * ***   }
00000CAA                                    1432 @ret_lab_1314 DS 0H
                                                                                                                           Page   33 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1433 * * **** Start of Epilogue
                                            1434          DCCEPIL
00000CAA                                    1435+         ds 0h                                                          01-DCCEP
                                            1436+* Epilog
00000CAA D707 D088 D088 00000088 00000088   1437+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000CB0 E3D0 D080 0004          00000080   1438+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000CB6 E3C0 D090 0004          00000090   1439+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000CBC E3B0 C018 0004          00000018   1440+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000CC2 E3C0 B010 0021          00000010   1441+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000CC8 E3E0 D008 0004          00000008   1442+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000CCE EB1C D020 0004          00000020   1443+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CD4 078E                               1444+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CD6 E3F0 D010 0024          00000010   1445+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CDC E300 D018 0024          00000018   1446+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CE2 E3F0 D090 0004          00000090   1447+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000CE8 E3F0 F018 0004          00000018   1448+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CEE 47F0 F040               00000040   1449+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1450+* End of Epilog
                                            1451 * * **** End of Epilogue
                                            1452          DROP  12
                                            1453 *
                                            1454 *   DSECT for automatic variables in "rd_kafka_ApiKey2str"
                                            1455 *      (FUNCTION #1314)
                                            1456 *
00000000                00000000 000000A8   1457 @AUTO#rd_kafka_$Api$Key2str DSECT
00000000                                    1458          DS    XL168
                                            1459 *
00000CF2                00000000 000046BC   1460 @CODE    CSECT
                                            1461 *
                                            1462 *
                                            1463 *
                                            1464 * ....... start of rd_strlcpy
00000CF2                                    1465 @LNAME1384 DS  0H
00000CF2 0000000A                           1466          DC    X'0000000A'
00000CF6 99846DA2A3999383                   1467          DC    C'rd_strlcpy'
00000D00 00                                 1468          DC    X'00'
                                            1469 rd_strlcpy DCCPRLG CINDEX=1384,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1384
                                            1470          macro
                                            1471          dccextrn &m
                                            1472          gblc    &$dccext(1000)
                                            1473          gbla    &$dccexti
                                            1474          lcla    &i
                                            1475 &$dccext(&$dccexti+1) setc    '&m'
                                            1476 &i       seta    1
                                            1477 .loop    aif    (&i gt &$dccexti).around
                                            1478          aif    ('&$dccext(&i)' eq '&m').getout
                                            1479 &i       seta    &i+1
                                            1480          ago     .loop
                                            1481 .around  anop
                                            1482 &$dccexti seta &$dccexti+1
                                            1483          extrn  &m
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1484 .getout  anop
                                            1485          mend
00000D08                                    1486+$eye0036    ds    0d                                                    02-DCCCA
00000D08 C4C3C3                             1487+         dc cl3'DCC'                                                    02-DCCCA
00000D0B 01                                 1488+         dc xl1'01' format one                                          02-DCCCA
00000D0C 00000000                           1489+         dc a(0)                                                        02-DCCCA
00000D10 0000000000000000                   1490+         dc ad(0)                                                       02-DCCCA
00000D18 00000000000000B0                   1491+         dc ad(176)                                                     02-DCCCA
00000D20 0000000000000000                   1492+         dc ad(0)                                                       02-DCCCA
00000D28 0000000000001000                   1493+         dc ad(4096)                                                    02-DCCCA
00000D30 20                                 1494+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D31 03                                 1495+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D32 03                                 1496+         dc al1(3)                                                      02-DCCCA
00000D33 08                                 1497+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D34 00                                 1498+         dc bl.8'00000000'                                              02-DCCCA
00000D35 000000                             1499+         dc al3(0)                                                      02-DCCCA
00000D38 0000000000000CF2                   1500+         dc ad(@LNAME1384)                                              02-DCCCA
00000D40                                    1501+         ds 0d                                                          02-DCCCA
00000D40 0000000000000D08                   1502+         dc ad($eye0036)                                                02-DCCCA
00000D48 0000000000000000                   1503+         dc ad(0)                                                       02-DCCCA
00000D50                                    1504+         ds    0d                                                       01-DCCPR
00000D50                                    1505+rd_strlcpy ds  0d                                                       01-DCCPR
00000D50                                    1506+@REGION_1384_1 ds 0h                                                    01-DCCPR
00000D50 EBEC D008 0024          00000008   1507+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D56 B904 00CF                          1508+         lgr   12,15               set base reg                         01-DCCPR
                        00000D50            1509+         using @REGION_1384_1,12                                        01-DCCPR
                                            1510 * ******* End of Prologue
                                            1511 * *
00000D5A E3F0 1010 0004          00000010   1512          LG    15,16(0,1)  ; dstsize
                                            1513 * ***
                                            1514 * ***
                                            1515 * ***
                                            1516 * ***           if (((dstsize > 0))) {
00000D60 C2FE 0000 0000                     1517          CLGFI 15,X'00000000'
00000D66 47D0 C0A6               00000DF6   1518          BNH   @ret_lab_1384
                                            1519 * ***                   size_t srclen = __strlen(src);
00000D6A E320 1008 0004          00000008   1520          LG    2,8(0,1)
00000D70 B904 0032                          1521          LGR   3,2
00000D74 A709 0000               00000000   1522          LGHI  0,0
00000D78                                    1523 @@gen_label42 DS 0H
00000D78 B25E 0002                          1524          SRST  0,2
00000D7C 4710 C028               00000D78   1525          BC  1,@@gen_label42
00000D80 B90B 0003                          1526          SLGR  0,3
                                            1527 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            1528 * clen) : (dstsize-1));
00000D84 B904 002F                          1529          LGR   2,15
00000D88 A72B FFFF               0000FFFF   1530          AGHI  2,-1
00000D8C B921 0002                          1531          CLGR  0,2
00000D90 47B0 C056               00000DA6   1532          BNL   @L252
00000D94 B904 00F0                          1533          LGR   15,0
00000D98 47F0 C05A               00000DAA   1534          B     @L253
00000DA0                                    1535          DS    0D
                                                                                                                           Page   35 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000DA0 D200 4000 3000 00000000 00000000   1536 @lit_1384_32          MVC 0(1,4),0(3)
00000DA6                                    1537 @L252    DS    0H
00000DA6 A7FB FFFF               0000FFFF   1538          AGHI  15,-1
00000DAA                                    1539 @L253    DS    0H
                                            1540 * ***                   __memcpy(dst,src,copylen);
00000DAA E330 1008 0004          00000008   1541          LG    3,8(0,1)
00000DB0 E340 1000 0004          00000000   1542          LG    4,0(0,1)
00000DB6 B902 002F                          1543          LTGR  2,15
00000DBA 4780 C098               00000DE8   1544          BZ    @@gen_label46
00000DBE A72B FFFF               0000FFFF   1545          AGHI  2,-1
00000DC2 EB52 0008 000A          00000008   1546          SRAG  5,2,8(0)
00000DC8 B902 0055                          1547          LTGR  5,5
00000DCC 4780 C094               00000DE4   1548          BZ    @@gen_label45
00000DD0                                    1549 @@gen_label44 DS 0H
00000DD0 D2FF 4000 3000 00000000 00000000   1550          MVC   0(256,4),0(3)
00000DD6 4140 4100               00000100   1551          LA    4,256(0,4)
00000DDA 4130 3100               00000100   1552          LA    3,256(0,3)
00000DDE E350 C080 0046          00000DD0   1553          BCTG  5,@@gen_label44
00000DE4                                    1554 @@gen_label45 DS 0H
00000DE4 4420 C050               00000DA0   1555          EX    2,@lit_1384_32
00000DE8                                    1556 @@gen_label46 DS 0H
                                            1557 * ***                   dst[copylen] = '\0';
00000DE8 E310 1000 0004          00000000   1558          LG    1,0(0,1)    ; dst
00000DEE 41FF 1000               00000000   1559          LA    15,0(15,1)
00000DF2 9200 F000      00000000 00000000   1560          MVI   0(15),0
                                            1561 * ***           }
00000DF6                                    1562 @L251    DS    0H
                                            1563 * ***
                                            1564 * ***   }
00000DF6                                    1565 @ret_lab_1384 DS 0H
                                            1566 * * **** Start of Epilogue
                                            1567          DCCEPIL
00000DF6                                    1568+         ds 0h                                                          01-DCCEP
                                            1569+* Epilog
                                            1570+* Epilog
00000DF6 E3E0 D008 0004          00000008   1571+         lg    14,8(,13) restore the reg                                01-DCCEP
00000DFC EB1C D020 0004          00000020   1572+         lmg   1,12,32(13)                                              01-DCCEP
00000E02 07FE                               1573+         br   14                                                        01-DCCEP
                                            1574+* End of Epilog
                                            1575 * * **** End of Epilogue
                                            1576          DROP  12
                                            1577 *
                                            1578 *   DSECT for automatic variables in "rd_strlcpy"
                                            1579 *      (FUNCTION #1384)
                                            1580 *
00000000                00000000 000000B0   1581 @AUTO#rd_strlcpy DSECT
00000000                                    1582          DS    XL168
000000A8                                    1583 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   1584          ORG   @AUTO#rd_strlcpy+168
000000A8                                    1585 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            1586 *
00000E04                00000000 000046BC   1587 @CODE    CSECT
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1588 *
                                            1589 *
                                            1590 *
                                            1591 * ....... start of rd_kafka_transport_close0
00000E04                                    1592 @LNAME1947 DS  0H
00000E04 00000019                           1593          DC    X'00000019'
00000E08 99846D9281869281                   1594          DC    C'rd_kafka_transport_close0'
00000E21 00                                 1595          DC    X'00'
                                            1596 rd_kafka_transport_close0 DCCPRLG CINDEX=1947,BASER=12,FRAME=184,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1947
                                            1597          macro
                                            1598          dccextrn &m
                                            1599          gblc    &$dccext(1000)
                                            1600          gbla    &$dccexti
                                            1601          lcla    &i
                                            1602 &$dccext(&$dccexti+1) setc    '&m'
                                            1603 &i       seta    1
                                            1604 .loop    aif    (&i gt &$dccexti).around
                                            1605          aif    ('&$dccext(&i)' eq '&m').getout
                                            1606 &i       seta    &i+1
                                            1607          ago     .loop
                                            1608 .around  anop
                                            1609 &$dccexti seta &$dccexti+1
                                            1610          extrn  &m
                                            1611 .getout  anop
                                            1612          mend
00000E28                                    1613+$eye0039    ds    0d                                                    02-DCCCA
00000E28 C4C3C3                             1614+         dc cl3'DCC'                                                    02-DCCCA
00000E2B 01                                 1615+         dc xl1'01' format one                                          02-DCCCA
00000E2C 00000000                           1616+         dc a(0)                                                        02-DCCCA
00000E30 0000000000000E9A                   1617+         dc ad(@PER_1947)                                               02-DCCCA
00000E38 00000000000000B8                   1618+         dc ad(184)                                                     02-DCCCA
00000E40 0000000000000000                   1619+         dc ad(0)                                                       02-DCCCA
00000E48 0000000000001000                   1620+         dc ad(4096)                                                    02-DCCCA
00000E50 20                                 1621+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E51 03                                 1622+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E52 03                                 1623+         dc al1(3)                                                      02-DCCCA
00000E53 08                                 1624+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E54 00                                 1625+         dc bl.8'00000000'                                              02-DCCCA
00000E55 000000                             1626+         dc al3(0)                                                      02-DCCCA
00000E58 0000000000000E04                   1627+         dc ad(@LNAME1947)                                              02-DCCCA
00000E60                                    1628+         ds 0d                                                          02-DCCCA
00000E60 0000000000000E28                   1629+         dc ad($eye0039)                                                02-DCCCA
00000E68 0000000000000000                   1630+         dc ad(0)                                                       02-DCCCA
00000E70                                    1631+         ds    0d                                                       01-DCCPR
00000E70                                    1632+rd_kafka_transport_close0 ds 0d                                         01-DCCPR
00000E70                                    1633+@REGION_1947_1 ds 0h                                                    01-DCCPR
00000E70 EBEC D008 0024          00000008   1634+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E76 E3E0 D088 0004          00000088   1635+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000E7C E3C0 D090 0004          00000090   1636+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000E82 B904 002E                          1637+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000E86 E3B0 C018 0004          00000018   1638+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000E8C A7EB 00B8               000000B8   1639+         aghi  14,184              increase by frame size               01-DCCPR
00000E90 E3E0 C020 0021          00000020   1640+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000E96 4720 B020               00000020   1641+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000E9A                                    1642+@PER_1947 ds   0h                                                       01-DCCPR
00000E9A EBDE 2080 0024          00000080   1643+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000EA0 E3C0 2090 0024          00000090   1644+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000EA6 B904 00D2                          1645+         lgr   13,2                set real frame pointer               01-DCCPR
00000EAA B904 00CF                          1646+         lgr   12,15               set base reg                         01-DCCPR
                        00000E70            1647+         using @REGION_1947_1,12                                        01-DCCPR
                                            1648 * ******* End of Prologue
                                            1649 * *
                                            1650 * ***           if (rk->rk_conf.closesocket_cb)
00000EAE E3F0 1000 0004          00000000   1651          LG    15,0(0,1)   ; rk
00000EB4 E320 F890 0002          00000890   1652          LTG   2,2192(0,15) ; offset of closesocket_cb in rd_kafka_conf*
                                                                _s
00000EBA 4780 C088               00000EF8   1653          BZ    @L630
                                            1654 * ***                   rk->rk_conf.closesocket_cb((int)s, rk->rk_conf\
                                            1655 * .opaque);
00000EBE E310 100C 0014          0000000C   1656          LGF   1,12(0,1)   ; s
00000EC4 E310 D0A8 0024          000000A8   1657          STG   1,168(0,13)
00000ECA E310 F8A8 0004          000008A8   1658          LG    1,2216(0,15)
00000ED0 E310 D0B0 0024          000000B0   1659          STG   1,176(0,13)
00000ED6 E3F0 F890 0004          00000890   1660          LG    15,2192(0,15) ; offset of closesocket_cb in rd_kafka_con*
                                                                f_s
00000EDC 4110 D0A8               000000A8   1661          LA    1,168(0,13)
00000EE0                                    1662 @@gen_label48 DS    0H
00000EE0 05EF                               1663          BALR  14,15
00000EE2                                    1664 @@gen_label49 DS    0H
00000EE2 47F0 C0A0               00000F10   1665          B     @ret_lab_1947
00000EE8                                    1666          DS    0D
00000EE8 000000B8                           1667 @FRAMESIZE_1947 DC F'184'
00000EEC 00000000
00000EF0 0000000000000000                   1668 @lit_1947_33 DC AD(close)
                                            1669 * ***           else
00000EF8                                    1670 @L630    DS    0H
                                            1671 * ***                   close(s);
00000EF8 E3F0 100C 0014          0000000C   1672          LGF   15,12(0,1)  ; s
00000EFE E3F0 D0A8 0024          000000A8   1673          STG   15,168(0,13)
00000F04 4110 D0A8               000000A8   1674          LA    1,168(0,13)
00000F08 E3F0 C080 0004          00000EF0   1675          LG    15,@lit_1947_33 ; close
00000F0E                                    1676 @@gen_label50 DS    0H
00000F0E 05EF                               1677          BALR  14,15
00000F10                                    1678 @@gen_label51 DS    0H
00000F10                                    1679 @L631    DS    0H
                                            1680 * ***   }
00000F10                                    1681 @ret_lab_1947 DS 0H
                                            1682 * * **** Start of Epilogue
                                            1683          DCCEPIL
00000F10                                    1684+         ds 0h                                                          01-DCCEP
                                            1685+* Epilog
00000F10 D707 D088 D088 00000088 00000088   1686+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000F16 E3D0 D080 0004          00000080   1687+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   38 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000F1C E3C0 D090 0004          00000090   1688+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000F22 E3B0 C018 0004          00000018   1689+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000F28 E3C0 B010 0021          00000010   1690+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000F2E E3E0 D008 0004          00000008   1691+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000F34 EB1C D020 0004          00000020   1692+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000F3A 078E                               1693+         bcr 8,14                if same dsab, just return              01-DCCEP
00000F3C E3F0 D010 0024          00000010   1694+         stg 15,16(0,13)         save return code                       01-DCCEP
00000F42 E300 D018 0024          00000018   1695+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000F48 E3F0 D090 0004          00000090   1696+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000F4E E3F0 F018 0004          00000018   1697+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000F54 47F0 F040               00000040   1698+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1699+* End of Epilog
                                            1700 * * **** End of Epilogue
                                            1701          DROP  12
                                            1702 *
                                            1703 *   DSECT for automatic variables in "rd_kafka_transport_close0"
                                            1704 *      (FUNCTION #1947)
                                            1705 *
00000000                00000000 000000A8   1706 @AUTO#rd_kafka_transport_close0 DSECT
00000000                                    1707          DS    XL168
                                            1708 *
00000F58                00000000 000046BC   1709 @CODE    CSECT
                                            1710 *
                                            1711 *
                                            1712 *
                                            1713 * ....... start of rd_kafka_transport_close
                                            1714 rd_kafka_transport_close ALIAS X'99846D92818692816DA3998195A2979699A36D*
                                                                839396A285'
00000F58                                    1715 @LNAME1585 DS  0H
00000F58 00000018                           1716          DC    X'00000018'
00000F5C 99846D9281869281                   1717          DC    C'rd_kafka_transport_close'
00000F74 00                                 1718          DC    X'00'
                                            1719 rd_kafka_transport_close DCCPRLG CINDEX=1585,BASER=12,FRAME=184,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1585
                                            1720          macro
                                            1721          dccextrn &m
                                            1722          gblc    &$dccext(1000)
                                            1723          gbla    &$dccexti
                                            1724          lcla    &i
                                            1725 &$dccext(&$dccexti+1) setc    '&m'
                                            1726 &i       seta    1
                                            1727 .loop    aif    (&i gt &$dccexti).around
                                            1728          aif    ('&$dccext(&i)' eq '&m').getout
                                            1729 &i       seta    &i+1
                                            1730          ago     .loop
                                            1731 .around  anop
                                            1732 &$dccexti seta &$dccexti+1
                                            1733          extrn  &m
                                            1734 .getout  anop
                                            1735          mend
00000F78                                    1736+$eye0042    ds    0d                                                    02-DCCCA
00000F78 C4C3C3                             1737+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000F7B 01                                 1738+         dc xl1'01' format one                                          02-DCCCA
00000F7C 00000000                           1739+         dc a(0)                                                        02-DCCCA
00000F80 0000000000000FEA                   1740+         dc ad(@PER_1585)                                               02-DCCCA
00000F88 00000000000000B8                   1741+         dc ad(184)                                                     02-DCCCA
00000F90 0000000000000000                   1742+         dc ad(0)                                                       02-DCCCA
00000F98 0000000000001000                   1743+         dc ad(4096)                                                    02-DCCCA
00000FA0 20                                 1744+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FA1 03                                 1745+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000FA2 03                                 1746+         dc al1(3)                                                      02-DCCCA
00000FA3 08                                 1747+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FA4 00                                 1748+         dc bl.8'00000000'                                              02-DCCCA
00000FA5 000000                             1749+         dc al3(0)                                                      02-DCCCA
00000FA8 0000000000000F58                   1750+         dc ad(@LNAME1585)                                              02-DCCCA
00000FB0                                    1751+         ds 0d                                                          02-DCCCA
00000FB0 0000000000000F78                   1752+         dc ad($eye0042)                                                02-DCCCA
00000FB8 0000000000000000                   1753+         dc ad(0)                                                       02-DCCCA
00000FC0                                    1754+         ds    0d                                                       01-DCCPR
                                            1755+         entry rd_kafka_transport_close                                 01-DCCPR
00000FC0                                    1756+rd_kafka_transport_close ds 0d                                          01-DCCPR
00000FC0                                    1757+@REGION_1585_1 ds 0h                                                    01-DCCPR
00000FC0 EBEC D008 0024          00000008   1758+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FC6 E3E0 D088 0004          00000088   1759+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000FCC E3C0 D090 0004          00000090   1760+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000FD2 B904 002E                          1761+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000FD6 E3B0 C018 0004          00000018   1762+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000FDC A7EB 00B8               000000B8   1763+         aghi  14,184              increase by frame size               01-DCCPR
00000FE0 E3E0 C020 0021          00000020   1764+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000FE6 4720 B020               00000020   1765+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000FEA                                    1766+@PER_1585 ds   0h                                                       01-DCCPR
00000FEA EBDE 2080 0024          00000080   1767+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000FF0 E3C0 2090 0024          00000090   1768+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000FF6 B904 00D2                          1769+         lgr   13,2                set real frame pointer               01-DCCPR
00000FFA B904 00CF                          1770+         lgr   12,15               set base reg                         01-DCCPR
                        00000FC0            1771+         using @REGION_1585_1,12                                        01-DCCPR
                                            1772 * ******* End of Prologue
                                            1773 * *
00000FFE E320 1000 0004          00000000   1774          LG    2,0(0,1)    ; rktrans
                                            1775 * ***
                                            1776 * ***
                                            1777 * ***   # 103 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            1778 * ***      if (rktrans->rktrans_recv_buf)
00001004 E3F0 2080 0002          00000080   1779          LTG   15,128(0,2) ; offset of rktrans_recv_buf in rd_kafka_tra*
                                                                nsport_s
0000100A 4780 C088               00001048   1780          BZ    @L632
                                            1781 * ***         do { if (rd_refcnt_sub0(&(rktrans->rktrans_recv_buf)->rk\
                                            1782 * buf_refcnt) > 0) break; rd_kafka_buf_destroy_final(rktrans->rktrans_\
                                            1783 * recv_buf); } while (0);
0000100E                                    1784 @L633    DS    0H
0000100E E3F0 2080 0004          00000080   1785          LG    15,128(0,2) ; offset of rktrans_recv_buf in rd_kafka_tra*
                                                                nsport_s
00001014 41F0 F108               00000108   1786          LA    15,264(0,15)
00001018 E3F0 D0A8 0024          000000A8   1787          STG   15,168(0,13)
                                                                                                                           Page   40 
  Active Usings: @REGION_1585_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000101E 4110 D0A8               000000A8   1788          LA    1,168(0,13)
00001022 E3F0 C120 0004          000010E0   1789          LG    15,@lit_1585_35 ; rd_refcnt_sub0
00001028                                    1790 @@gen_label53 DS    0H
00001028 05EF                               1791          BALR  14,15
0000102A                                    1792 @@gen_label54 DS    0H
0000102A 12FF                               1793          LTR   15,15
0000102C 4720 C088               00001048   1794          BH    @L632
00001030                                    1795 @L636    DS    0H
00001030 E3F0 2080 0004          00000080   1796          LG    15,128(0,2)
00001036 E3F0 D0A8 0024          000000A8   1797          STG   15,168(0,13)
0000103C 4110 D0A8               000000A8   1798          LA    1,168(0,13)
00001040 E3F0 C128 0004          000010E8   1799          LG    15,@lit_1585_36 ; rd_kafka_buf_destroy_final
00001046                                    1800 @@gen_label56 DS    0H
00001046 05EF                               1801          BALR  14,15
00001048                                    1802 @@gen_label57 DS    0H
00001048                                    1803 @L634    DS    0H
                                            1804 * ***
                                            1805 * ***      if (rktrans->rktrans_s != -1)
00001048                                    1806 @L632    DS    0H
00001048 E55C 2000 FFFF          00000000   1807          CHSI  0(2),-1
0000104E 4780 C0BC               0000107C   1808          BE    @L637
                                            1809 * ***                   rd_kafka_transport_close0(rktrans->rktrans_rkb\
                                            1810 * ->rkb_rk,
                                            1811 * ***                                             rktrans->rktrans_s);
00001052 E3F0 2008 0004          00000008   1812          LG    15,8(0,2)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
00001058 E3F0 FFD0 0004          00000FD0   1813          LG    15,4048(0,15)
0000105E E3F0 D0A8 0024          000000A8   1814          STG   15,168(0,13)
00001064 E3F0 2000 0014          00000000   1815          LGF   15,0(0,2)
0000106A E3F0 D0B0 0024          000000B0   1816          STG   15,176(0,13)
00001070 4110 D0A8               000000A8   1817          LA    1,168(0,13)
00001074 E3F0 C130 0004          000010F0   1818          LG    15,@lit_1585_37 ; rd_kafka_transport_close0
0000107A                                    1819 @@gen_label59 DS    0H
0000107A 05EF                               1820          BALR  14,15
0000107C                                    1821 @@gen_label60 DS    0H
0000107C                                    1822 @L637    DS    0H
                                            1823 * ***
                                            1824 * ***      rd_free(rktrans);
0000107C E320 D0A8 0024          000000A8   1825          STG   2,168(0,13)
00001082 4110 D0A8               000000A8   1826          LA    1,168(0,13)
00001086 E3F0 C138 0004          000010F8   1827          LG    15,@lit_1585_38 ; rd_free
0000108C                                    1828 @@gen_label61 DS    0H
0000108C 05EF                               1829          BALR  14,15
0000108E                                    1830 @@gen_label62 DS    0H
                                            1831 * ***   }
0000108E                                    1832 @ret_lab_1585 DS 0H
                                            1833 * * **** Start of Epilogue
                                            1834          DCCEPIL
0000108E                                    1835+         ds 0h                                                          01-DCCEP
                                            1836+* Epilog
0000108E D707 D088 D088 00000088 00000088   1837+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001094 E3D0 D080 0004          00000080   1838+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   41 
  Active Usings: @REGION_1585_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000109A E3C0 D090 0004          00000090   1839+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000010A0 E3B0 C018 0004          00000018   1840+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000010A6 E3C0 B010 0021          00000010   1841+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000010AC E3E0 D008 0004          00000008   1842+         lg  14,8(0,13)          load up return address                 01-DCCEP
000010B2 EB1C D020 0004          00000020   1843+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000010B8 078E                               1844+         bcr 8,14                if same dsab, just return              01-DCCEP
000010BA E3F0 D010 0024          00000010   1845+         stg 15,16(0,13)         save return code                       01-DCCEP
000010C0 E300 D018 0024          00000018   1846+         stg 0,24(0,13)          save more return code                  01-DCCEP
000010C6 E3F0 D090 0004          00000090   1847+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000010CC E3F0 F018 0004          00000018   1848+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000010D2 47F0 F040               00000040   1849+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1850+* End of Epilog
                                            1851 * * **** End of Epilogue
000010D8                                    1852          DS    0D
000010D8 000000B8                           1853 @FRAMESIZE_1585 DC F'184'
000010DC 00000000
000010E0 0000000000000830                   1854 @lit_1585_35 DC AD(rd_refcnt_sub0)
000010E8 0000000000000000                   1855 @lit_1585_36 DC AD(rd_kafka_buf_destroy_final)
000010F0 0000000000000E70                   1856 @lit_1585_37 DC AD(rd_kafka_transport_close0)
000010F8 0000000000000720                   1857 @lit_1585_38 DC AD(rd_free)
                                            1858          DROP  12
                                            1859 *
                                            1860 *   DSECT for automatic variables in "rd_kafka_transport_close"
                                            1861 *      (FUNCTION #1585)
                                            1862 *
00000000                00000000 000000A8   1863 @AUTO#rd_kafka_transport_close DSECT
00000000                                    1864          DS    XL168
                                            1865 *
00001100                00000000 000046BC   1866 @CODE    CSECT
                                            1867 *
                                            1868 *
                                            1869 *
                                            1870 * ....... start of rd_kafka_transport_socket_send0
00001100                                    1871 @LNAME1949 DS  0H
00001100 0000001F                           1872          DC    X'0000001F'
00001104 99846D9281869281                   1873          DC    C'rd_kafka_transport_socket_send0'
00001123 00                                 1874          DC    X'00'
                                            1875 rd_kafka_transport_socket_send0 DCCPRLG CINDEX=1949,BASER=12,FRAME=208,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1949
                                            1876          macro
                                            1877          dccextrn &m
                                            1878          gblc    &$dccext(1000)
                                            1879          gbla    &$dccexti
                                            1880          lcla    &i
                                            1881 &$dccext(&$dccexti+1) setc    '&m'
                                            1882 &i       seta    1
                                            1883 .loop    aif    (&i gt &$dccexti).around
                                            1884          aif    ('&$dccext(&i)' eq '&m').getout
                                            1885 &i       seta    &i+1
                                            1886          ago     .loop
                                            1887 .around  anop
                                            1888 &$dccexti seta &$dccexti+1
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1889          extrn  &m
                                            1890 .getout  anop
                                            1891          mend
00001128                                    1892+$eye0045    ds    0d                                                    02-DCCCA
00001128 C4C3C3                             1893+         dc cl3'DCC'                                                    02-DCCCA
0000112B 01                                 1894+         dc xl1'01' format one                                          02-DCCCA
0000112C 00000000                           1895+         dc a(0)                                                        02-DCCCA
00001130 000000000000119A                   1896+         dc ad(@PER_1949)                                               02-DCCCA
00001138 00000000000000D0                   1897+         dc ad(208)                                                     02-DCCCA
00001140 0000000000000000                   1898+         dc ad(0)                                                       02-DCCCA
00001148 0000000000001000                   1899+         dc ad(4096)                                                    02-DCCCA
00001150 20                                 1900+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001151 03                                 1901+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001152 03                                 1902+         dc al1(3)                                                      02-DCCCA
00001153 08                                 1903+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001154 00                                 1904+         dc bl.8'00000000'                                              02-DCCCA
00001155 000000                             1905+         dc al3(0)                                                      02-DCCCA
00001158 0000000000001100                   1906+         dc ad(@LNAME1949)                                              02-DCCCA
00001160                                    1907+         ds 0d                                                          02-DCCCA
00001160 0000000000001128                   1908+         dc ad($eye0045)                                                02-DCCCA
00001168 0000000000000000                   1909+         dc ad(0)                                                       02-DCCCA
00001170                                    1910+         ds    0d                                                       01-DCCPR
00001170                                    1911+rd_kafka_transport_socket_send0 ds 0d                                   01-DCCPR
00001170                                    1912+@REGION_1949_1 ds 0h                                                    01-DCCPR
00001170 EBEC D008 0024          00000008   1913+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001176 E3E0 D088 0004          00000088   1914+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000117C E3C0 D090 0004          00000090   1915+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001182 B904 002E                          1916+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001186 E3B0 C018 0004          00000018   1917+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000118C A7EB 00D0               000000D0   1918+         aghi  14,208              increase by frame size               01-DCCPR
00001190 E3E0 C020 0021          00000020   1919+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001196 4720 B020               00000020   1920+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000119A                                    1921+@PER_1949 ds   0h                                                       01-DCCPR
0000119A EBDE 2080 0024          00000080   1922+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000011A0 E3C0 2090 0024          00000090   1923+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000011A6 B904 00D2                          1924+         lgr   13,2                set real frame pointer               01-DCCPR
000011AA B904 00CF                          1925+         lgr   12,15               set base reg                         01-DCCPR
                        00001170            1926+         using @REGION_1949_1,12                                        01-DCCPR
000011AE B904 0051                          1927          LGR   5,1         ; ptr to parm area
                                            1928 * ******* End of Prologue
                                            1929 * *
                                            1930 * ***           ssize_t sum = 0;
000011B2 A729 0000               00000000   1931          LGHI  2,0         ; 0
                                            1932 * ***           const void *p;
                                            1933 * ***           size_t rlen;
                                            1934 * ***
                                            1935 * ***           while ((rlen = rd_slice_peeker(slice, &p))) {
000011B6 47F0 C1F0               00001360   1936          B     @L645
000011C0                                    1937          DS    0D
000011C0 000000D0                           1938 @FRAMESIZE_1949 DC F'208'
000011C4 00000000
000011C8 0000000000000000                   1939 @lit_1949_41 DC AD(send)
                                                                                                                           Page   43 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000011D0 0000000000000000                   1940 @lit_1949_42 DC AD(__error)
000011D8 0000000000000000                   1941 @lit_1949_45 DC AD(strerror)
000011E0 0000000000000000                   1942 @lit_1949_47 DC AD(snprintf)
000011E8 00000000000048E4                   1943 @lit_1949_46 DC AD(@strings@)
000011F0 0000000000000000                   1944 @lit_1949_49 DC AD(rd_slice_read)
000011F8 0000000000000000                   1945 @lit_1949_53 DC AD(__assert)
00001200 00000000000046C0                   1946 @lit_1949_51 DC AD(@DATA)
00001208 0000000000000000                   1947 @lit_1949_54 DC AD(rd_slice_peeker)
00001210                                    1948 @L644    DS    0H
                                            1949 * ***                   ssize_t r;
                                            1950 * ***                   size_t r2;
                                            1951 * ***
                                            1952 * ***                   r = send(rktrans->rktrans_s, p,
                                            1953 * ***
                                            1954 * ***
                                            1955 * ***
                                            1956 * ***                            rlen, 0
00001210 E3F0 5000 0004          00000000   1957          LG    15,0(0,5)   ; rktrans
00001216 E3F0 F000 0014          00000000   1958          LGF   15,0(0,15)
0000121C E3F0 D0B0 0024          000000B0   1959          STG   15,176(0,13)
00001222 E3F0 D0A8 0004          000000A8   1960          LG    15,168(0,13) ; p
00001228 E3F0 D0B8 0024          000000B8   1961          STG   15,184(0,13)
0000122E E330 D0C0 0024          000000C0   1962          STG   3,192(0,13)
                                            1963 * ***
                                            1964 * ***                   );
00001234 D707 D0C8 D0C8 000000C8 000000C8   1965          XC    200(8,13),200(13)
0000123A 4110 D0B0               000000B0   1966          LA    1,176(0,13)
0000123E E3F0 C058 0004          000011C8   1967          LG    15,@lit_1949_41 ; send
00001244                                    1968 @@gen_label63 DS    0H
00001244 05EF                               1969          BALR  14,15
00001246                                    1970 @@gen_label64 DS    0H
00001246 B904 004F                          1971          LGR   4,15
                                            1972 * ***
                                            1973 * ***   # 196 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            1974 * ***                   if (((r <= 0))) {
0000124A B902 00F4                          1975          LTGR  15,4
0000124E 4720 C16A               000012DA   1976          BH    @L646
                                            1977 * ***                           if (r == 0 || (* __error()) == 35)
00001252 B902 00F4                          1978          LTGR  15,4
00001256 4780 C100               00001270   1979          BE    @L648
0000125A E320 C060 0004          000011D0   1980          LG    2,@lit_1949_42 ; __error
00001260 B904 00F2                          1981          LGR   15,2
00001264                                    1982 @@gen_label67 DS    0H
00001264 05EF                               1983          BALR  14,15
00001266                                    1984 @@gen_label68 DS    0H
00001266 E55C F000 0023          00000000   1985          CHSI  0(15),35
0000126C 4770 C108               00001278   1986          BNE   @L647
00001270                                    1987 @L648    DS    0H
                                            1988 * ***                                   return 0;
00001270 A7F9 0000               00000000   1989          LGHI  15,0        ; 0
00001274 47F0 C21E               0000138E   1990          B     @ret_lab_1949
00001278                                    1991 @L647    DS    0H
                                                                                                                           Page   44 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1992 * ***                           snprintf(errstr, errstr_size, "%s", st\
                                            1993 * rerror((* __error())));
00001278 B904 00F2                          1994          LGR   15,2
0000127C                                    1995 @@gen_label70 DS    0H
0000127C 05EF                               1996          BALR  14,15
0000127E                                    1997 @@gen_label71 DS    0H
0000127E 58F0 F000               00000000   1998          L     15,0(0,15)
00001282 B914 00FF                          1999          LGFR  15,15
00001286 E3F0 D0B0 0024          000000B0   2000          STG   15,176(0,13)
0000128C 4110 D0B0               000000B0   2001          LA    1,176(0,13)
00001290 E3F0 C068 0004          000011D8   2002          LG    15,@lit_1949_45 ; strerror
00001296                                    2003 @@gen_label72 DS    0H
00001296 05EF                               2004          BALR  14,15
00001298                                    2005 @@gen_label73 DS    0H
00001298 E310 5010 0004          00000010   2006          LG    1,16(0,5)   ; errstr
0000129E E310 D0B0 0024          000000B0   2007          STG   1,176(0,13)
000012A4 E310 5018 0004          00000018   2008          LG    1,24(0,5)   ; errstr_size
000012AA E310 D0B8 0024          000000B8   2009          STG   1,184(0,13)
000012B0 E310 C078 0004          000011E8   2010          LG    1,@lit_1949_46
000012B6 4110 1054               00000054   2011          LA    1,84(0,1)
000012BA E310 D0C0 0024          000000C0   2012          STG   1,192(0,13)
000012C0 E3F0 D0C8 0024          000000C8   2013          STG   15,200(0,13)
000012C6 4110 D0B0               000000B0   2014          LA    1,176(0,13)
000012CA E3F0 C070 0004          000011E0   2015          LG    15,@lit_1949_47 ; snprintf
000012D0                                    2016 @@gen_label74 DS    0H
000012D0 05EF                               2017          BALR  14,15
000012D2                                    2018 @@gen_label75 DS    0H
                                            2019 * ***
                                            2020 * ***                           return -1;
000012D2 A7F9 FFFF               0000FFFF   2021          LGHI  15,-1       ; -1
000012D6 47F0 C21E               0000138E   2022          B     @ret_lab_1949
                                            2023 * ***                   }
000012DA                                    2024 @L646    DS    0H
                                            2025 * ***
                                            2026 * ***
                                            2027 * ***
                                            2028 * ***                   r2 = rd_slice_read(slice, ((void *)0), (size_t\
                                            2029 * )r);
000012DA E3F0 5008 0004          00000008   2030          LG    15,8(0,5)   ; slice
000012E0 E3F0 D0B0 0024          000000B0   2031          STG   15,176(0,13)
000012E6 D707 D0B8 D0B8 000000B8 000000B8   2032          XC    184(8,13),184(13)
000012EC E340 D0C0 0024          000000C0   2033          STG   4,192(0,13)
000012F2 4110 D0B0               000000B0   2034          LA    1,176(0,13)
000012F6 E3F0 C080 0004          000011F0   2035          LG    15,@lit_1949_49 ; rd_slice_read
000012FC                                    2036 @@gen_label76 DS    0H
000012FC 05EF                               2037          BALR  14,15
000012FE                                    2038 @@gen_label77 DS    0H
                                            2039 * ***                   (((size_t)r == r2 && *"BUG: wrote more bytes t\
                                            2040 * han available in slice") ? (void)0 : __assert(__func__, "C:\\asgkafk\
                                            2041 * a\\librdkafka\\src\\rdkafka_transport.c", 207, "(size_t)r == r2 && *\
                                            2042 * \"BUG: wrote more bytes than available in slice\""));
000012FE B921 004F                          2043          CLGR  4,15
                                                                                                                           Page   45 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001302 4770 C1A8               00001318   2044          BNE   @L649
00001306 E3F0 C078 0004          000011E8   2045          LG    15,@lit_1949_46
0000130C 41F0 F058               00000058   2046          LA    15,88(0,15)
00001310 9500 F000      00000000 00000000   2047          CLI   0(15),0
00001314 4770 C1E4               00001354   2048          BNE   @L650
00001318                                    2049 @L649    DS    0H
00001318 E3F0 C090 0004          00001200   2050          LG    15,@lit_1949_51
0000131E 41F0 F1C8               000001C8   2051          LA    15,456(0,15)
00001322 E3F0 D0B0 0024          000000B0   2052          STG   15,176(0,13)
00001328 E3F0 C078 0004          000011E8   2053          LG    15,@lit_1949_46
0000132E 4110 F086               00000086   2054          LA    1,134(0,15)
00001332 E310 D0B8 0024          000000B8   2055          STG   1,184(0,13)
00001338 E548 D0C0 00CF          000000C0   2056          MVGHI 192(13),207
0000133E 41F0 F0B6               000000B6   2057          LA    15,182(0,15)
00001342 E3F0 D0C8 0024          000000C8   2058          STG   15,200(0,13)
00001348 4110 D0B0               000000B0   2059          LA    1,176(0,13)
0000134C E3F0 C088 0004          000011F8   2060          LG    15,@lit_1949_53 ; __assert
00001352                                    2061 @@gen_label80 DS    0H
00001352 05EF                               2062          BALR  14,15
00001354                                    2063 @@gen_label81 DS    0H
00001354                                    2064 @L650    DS    0H
                                            2065 * ***
                                            2066 * ***
                                            2067 * ***
                                            2068 * ***                   sum += r;
00001354 B908 0024                          2069          AGR   2,4
                                            2070 * ***
                                            2071 * ***
                                            2072 * ***
                                            2073 * ***                   if ((size_t)r < rlen)
00001358 B921 0043                          2074          CLGR  4,3
0000135C 4740 C21A               0000138A   2075          BL    @L642
                                            2076 * ***                           break;
00001360                                    2077 @L651    DS    0H
                                            2078 * ***           }
00001360                                    2079 @L645    DS    0H
00001360 E3F0 5008 0004          00000008   2080          LG    15,8(0,5)   ; slice
00001366 E3F0 D0B0 0024          000000B0   2081          STG   15,176(0,13)
0000136C 41F0 D0A8               000000A8   2082          LA    15,168(0,13)
00001370 E3F0 D0B8 0024          000000B8   2083          STG   15,184(0,13)
00001376 4110 D0B0               000000B0   2084          LA    1,176(0,13)
0000137A E3F0 C098 0004          00001208   2085          LG    15,@lit_1949_54 ; rd_slice_peeker
00001380                                    2086 @@gen_label83 DS    0H
00001380 05EF                               2087          BALR  14,15
00001382                                    2088 @@gen_label84 DS    0H
00001382 B902 003F                          2089          LTGR  3,15
00001386 4770 C0A0               00001210   2090          BNZ   @L644
0000138A                                    2091 @L642    DS    0H
                                            2092 * ***
                                            2093 * ***           return sum;
0000138A B904 00F2                          2094          LGR   15,2
                                            2095 * ***   }
                                                                                                                           Page   46 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000138E                                    2096 @ret_lab_1949 DS 0H
                                            2097 * * **** Start of Epilogue
                                            2098          DCCEPIL
0000138E                                    2099+         ds 0h                                                          01-DCCEP
                                            2100+* Epilog
0000138E D707 D088 D088 00000088 00000088   2101+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001394 E3D0 D080 0004          00000080   2102+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000139A E3C0 D090 0004          00000090   2103+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000013A0 E3B0 C018 0004          00000018   2104+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000013A6 E3C0 B010 0021          00000010   2105+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000013AC E3E0 D008 0004          00000008   2106+         lg  14,8(0,13)          load up return address                 01-DCCEP
000013B2 EB1C D020 0004          00000020   2107+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000013B8 078E                               2108+         bcr 8,14                if same dsab, just return              01-DCCEP
000013BA E3F0 D010 0024          00000010   2109+         stg 15,16(0,13)         save return code                       01-DCCEP
000013C0 E300 D018 0024          00000018   2110+         stg 0,24(0,13)          save more return code                  01-DCCEP
000013C6 E3F0 D090 0004          00000090   2111+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000013CC E3F0 F018 0004          00000018   2112+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000013D2 47F0 F040               00000040   2113+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2114+* End of Epilog
                                            2115 * * **** End of Epilogue
                                            2116          DROP  12
                                            2117 *
                                            2118 *   DSECT for automatic variables in "rd_kafka_transport_socket_send0"
                                            2119 *      (FUNCTION #1949)
                                            2120 *
00000000                00000000 000000B0   2121 @AUTO#rd_kafka_transport_socket_send0 DSECT
00000000                                    2122          DS    XL168
000000A8                                    2123 rd_kafka_transport_socket_send0#r2#1 DS 8XL1 ; r2
000000B0                000000B0 000000A8   2124          ORG   @AUTO#rd_kafka_transport_socket_send0+168
000000A8                                    2125 rd_kafka_transport_socket_send0#r#1 DS 8XL1 ; r
000000B0                000000B0 000000A8   2126          ORG   @AUTO#rd_kafka_transport_socket_send0+168
000000A8                                    2127 rd_kafka_transport_socket_send0#rlen#0 DS 8XL1 ; rlen
000000B0                000000B0 000000A8   2128          ORG   @AUTO#rd_kafka_transport_socket_send0+168
000000A8                                    2129 rd_kafka_transport_socket_send0#sum#0 DS 8XL1 ; sum
                                            2130 *
000013D6                00000000 000046BC   2131 @CODE    CSECT
                                            2132 *
                                            2133 *
                                            2134 *
                                            2135 * ....... start of rd_kafka_transport_socket_send
000013D6                                    2136 @LNAME1950 DS  0H
000013D6 0000001E                           2137          DC    X'0000001E'
000013DA 99846D9281869281                   2138          DC    C'rd_kafka_transport_socket_send'
000013F8 00                                 2139          DC    X'00'
                                            2140 rd_kafka_transport_socket_send DCCPRLG CINDEX=1950,BASER=12,FRAME=200,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1950
                                            2141          macro
                                            2142          dccextrn &m
                                            2143          gblc    &$dccext(1000)
                                            2144          gbla    &$dccexti
                                            2145          lcla    &i
                                            2146 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2147 &i       seta    1
                                            2148 .loop    aif    (&i gt &$dccexti).around
                                            2149          aif    ('&$dccext(&i)' eq '&m').getout
                                            2150 &i       seta    &i+1
                                            2151          ago     .loop
                                            2152 .around  anop
                                            2153 &$dccexti seta &$dccexti+1
                                            2154          extrn  &m
                                            2155 .getout  anop
                                            2156          mend
00001400                                    2157+$eye0048    ds    0d                                                    02-DCCCA
00001400 C4C3C3                             2158+         dc cl3'DCC'                                                    02-DCCCA
00001403 01                                 2159+         dc xl1'01' format one                                          02-DCCCA
00001404 00000000                           2160+         dc a(0)                                                        02-DCCCA
00001408 0000000000001472                   2161+         dc ad(@PER_1950)                                               02-DCCCA
00001410 00000000000000C8                   2162+         dc ad(200)                                                     02-DCCCA
00001418 0000000000000000                   2163+         dc ad(0)                                                       02-DCCCA
00001420 0000000000001000                   2164+         dc ad(4096)                                                    02-DCCCA
00001428 20                                 2165+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001429 03                                 2166+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000142A 03                                 2167+         dc al1(3)                                                      02-DCCCA
0000142B 08                                 2168+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000142C 00                                 2169+         dc bl.8'00000000'                                              02-DCCCA
0000142D 000000                             2170+         dc al3(0)                                                      02-DCCCA
00001430 00000000000013D6                   2171+         dc ad(@LNAME1950)                                              02-DCCCA
00001438                                    2172+         ds 0d                                                          02-DCCCA
00001438 0000000000001400                   2173+         dc ad($eye0048)                                                02-DCCCA
00001440 0000000000000000                   2174+         dc ad(0)                                                       02-DCCCA
00001448                                    2175+         ds    0d                                                       01-DCCPR
00001448                                    2176+rd_kafka_transport_socket_send ds 0d                                    01-DCCPR
00001448                                    2177+@REGION_1950_1 ds 0h                                                    01-DCCPR
00001448 EBEC D008 0024          00000008   2178+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000144E E3E0 D088 0004          00000088   2179+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001454 E3C0 D090 0004          00000090   2180+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000145A B904 002E                          2181+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000145E E3B0 C018 0004          00000018   2182+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001464 A7EB 00C8               000000C8   2183+         aghi  14,200              increase by frame size               01-DCCPR
00001468 E3E0 C020 0021          00000020   2184+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000146E 4720 B020               00000020   2185+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001472                                    2186+@PER_1950 ds   0h                                                       01-DCCPR
00001472 EBDE 2080 0024          00000080   2187+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001478 E3C0 2090 0024          00000090   2188+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000147E B904 00D2                          2189+         lgr   13,2                set real frame pointer               01-DCCPR
00001482 B904 00CF                          2190+         lgr   12,15               set base reg                         01-DCCPR
                        00001448            2191+         using @REGION_1950_1,12                                        01-DCCPR
                                            2192 * ******* End of Prologue
                                            2193 * *
                                            2194 * ***
                                            2195 * ***               return rd_kafka_transport_socket_send0(rktrans, sl\
                                            2196 * ice,
                                            2197 * ***   # 237 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            2198 * ***                                                  errstr, errstr_\
                                                                                                                           Page   48 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2199 * size);
00001486 E3F0 1000 0004          00000000   2200          LG    15,0(0,1)   ; rktrans
0000148C E3F0 D0A8 0024          000000A8   2201          STG   15,168(0,13)
00001492 E3F0 1008 0004          00000008   2202          LG    15,8(0,1)   ; slice
00001498 E3F0 D0B0 0024          000000B0   2203          STG   15,176(0,13)
0000149E E3F0 1010 0004          00000010   2204          LG    15,16(0,1)  ; errstr
000014A4 E3F0 D0B8 0024          000000B8   2205          STG   15,184(0,13)
000014AA E3F0 1018 0004          00000018   2206          LG    15,24(0,1)  ; errstr_size
000014B0 E3F0 D0C0 0024          000000C0   2207          STG   15,192(0,13)
000014B6 4110 D0A8               000000A8   2208          LA    1,168(0,13)
000014BA E3F0 C0D0 0004          00001518   2209          LG    15,@lit_1950_56 ; rd_kafka_transport_socket_send0
000014C0                                    2210 @@gen_label86 DS    0H
000014C0 05EF                               2211          BALR  14,15
000014C2                                    2212 @@gen_label87 DS    0H
                                            2213 * ***   }
                                            2214 * * **** Start of Epilogue
                                            2215          DCCEPIL
000014C2                                    2216+         ds 0h                                                          01-DCCEP
                                            2217+* Epilog
000014C2 D707 D088 D088 00000088 00000088   2218+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000014C8 E3D0 D080 0004          00000080   2219+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000014CE E3C0 D090 0004          00000090   2220+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000014D4 E3B0 C018 0004          00000018   2221+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000014DA E3C0 B010 0021          00000010   2222+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000014E0 E3E0 D008 0004          00000008   2223+         lg  14,8(0,13)          load up return address                 01-DCCEP
000014E6 EB1C D020 0004          00000020   2224+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000014EC 078E                               2225+         bcr 8,14                if same dsab, just return              01-DCCEP
000014EE E3F0 D010 0024          00000010   2226+         stg 15,16(0,13)         save return code                       01-DCCEP
000014F4 E300 D018 0024          00000018   2227+         stg 0,24(0,13)          save more return code                  01-DCCEP
000014FA E3F0 D090 0004          00000090   2228+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001500 E3F0 F018 0004          00000018   2229+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001506 47F0 F040               00000040   2230+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2231+* End of Epilog
                                            2232 * * **** End of Epilogue
00001510                                    2233          DS    0D
00001510 000000C8                           2234 @FRAMESIZE_1950 DC F'200'
00001514 00000000
00001518 0000000000001170                   2235 @lit_1950_56 DC AD(rd_kafka_transport_socket_send0)
                                            2236          DROP  12
                                            2237 *
                                            2238 *   DSECT for automatic variables in "rd_kafka_transport_socket_send"
                                            2239 *      (FUNCTION #1950)
                                            2240 *
00000000                00000000 000000A8   2241 @AUTO#rd_kafka_transport_socket_send DSECT
00000000                                    2242          DS    XL168
                                            2243 *
00001520                00000000 000046BC   2244 @CODE    CSECT
                                            2245 *
                                            2246 *
                                            2247 *
                                            2248 * ....... start of rd_kafka_transport_socket_recv0
00001520                                    2249 @LNAME1952 DS  0H
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001520 0000001F                           2250          DC    X'0000001F'
00001524 99846D9281869281                   2251          DC    C'rd_kafka_transport_socket_recv0'
00001543 00                                 2252          DC    X'00'
                                            2253 rd_kafka_transport_socket_recv0 DCCPRLG CINDEX=1952,BASER=12,FRAME=208,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1952
                                            2254          macro
                                            2255          dccextrn &m
                                            2256          gblc    &$dccext(1000)
                                            2257          gbla    &$dccexti
                                            2258          lcla    &i
                                            2259 &$dccext(&$dccexti+1) setc    '&m'
                                            2260 &i       seta    1
                                            2261 .loop    aif    (&i gt &$dccexti).around
                                            2262          aif    ('&$dccext(&i)' eq '&m').getout
                                            2263 &i       seta    &i+1
                                            2264          ago     .loop
                                            2265 .around  anop
                                            2266 &$dccexti seta &$dccexti+1
                                            2267          extrn  &m
                                            2268 .getout  anop
                                            2269          mend
00001548                                    2270+$eye0051    ds    0d                                                    02-DCCCA
00001548 C4C3C3                             2271+         dc cl3'DCC'                                                    02-DCCCA
0000154B 01                                 2272+         dc xl1'01' format one                                          02-DCCCA
0000154C 00000000                           2273+         dc a(0)                                                        02-DCCCA
00001550 00000000000015BA                   2274+         dc ad(@PER_1952)                                               02-DCCCA
00001558 00000000000000D0                   2275+         dc ad(208)                                                     02-DCCCA
00001560 0000000000000000                   2276+         dc ad(0)                                                       02-DCCCA
00001568 0000000000001000                   2277+         dc ad(4096)                                                    02-DCCCA
00001570 20                                 2278+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001571 03                                 2279+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001572 03                                 2280+         dc al1(3)                                                      02-DCCCA
00001573 08                                 2281+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001574 00                                 2282+         dc bl.8'00000000'                                              02-DCCCA
00001575 000000                             2283+         dc al3(0)                                                      02-DCCCA
00001578 0000000000001520                   2284+         dc ad(@LNAME1952)                                              02-DCCCA
00001580                                    2285+         ds 0d                                                          02-DCCCA
00001580 0000000000001548                   2286+         dc ad($eye0051)                                                02-DCCCA
00001588 0000000000000000                   2287+         dc ad(0)                                                       02-DCCCA
00001590                                    2288+         ds    0d                                                       01-DCCPR
00001590                                    2289+rd_kafka_transport_socket_recv0 ds 0d                                   01-DCCPR
00001590                                    2290+@REGION_1952_1 ds 0h                                                    01-DCCPR
00001590 EBEC D008 0024          00000008   2291+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001596 E3E0 D088 0004          00000088   2292+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000159C E3C0 D090 0004          00000090   2293+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000015A2 B904 002E                          2294+         lgr   2,14                copy addr of our savearea            01-DCCPR
000015A6 E3B0 C018 0004          00000018   2295+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000015AC A7EB 00D0               000000D0   2296+         aghi  14,208              increase by frame size               01-DCCPR
000015B0 E3E0 C020 0021          00000020   2297+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000015B6 4720 B020               00000020   2298+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000015BA                                    2299+@PER_1952 ds   0h                                                       01-DCCPR
000015BA EBDE 2080 0024          00000080   2300+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000015C0 E3C0 2090 0024          00000090   2301+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000015C6 B904 00D2                          2302+         lgr   13,2                set real frame pointer               01-DCCPR
000015CA B904 00CF                          2303+         lgr   12,15               set base reg                         01-DCCPR
                        00001590            2304+         using @REGION_1952_1,12                                        01-DCCPR
000015CE B904 0051                          2305          LGR   5,1         ; ptr to parm area
                                            2306 * ******* End of Prologue
                                            2307 * *
                                            2308 * ***           ssize_t sum = 0;
000015D2 A729 0000               00000000   2309          LGHI  2,0         ; 0
                                            2310 * ***           void *p;
                                            2311 * ***           size_t len;
                                            2312 * ***
                                            2313 * ***           while ((len = rd_buf_get_writable(rbuf, &p))) {
000015D6 47F0 C1C6               00001756   2314          B     @L662
000015E0                                    2315          DS    0D
000015E0 000000D0                           2316 @FRAMESIZE_1952 DC F'208'
000015E4 00000000
000015E8 0000000000000000                   2317 @lit_1952_59 DC AD(recv)
000015F0 0000000000000000                   2318 @lit_1952_60 DC AD(__error)
000015F8 0000000000000000                   2319 @lit_1952_62 DC AD(strerror)
00001600 0000000000000000                   2320 @lit_1952_64 DC AD(snprintf)
00001608 00000000000048E4                   2321 @lit_1952_63 DC AD(@strings@)
00001610 0000000000000000                   2322 @lit_1952_69 DC AD(rd_buf_write)
00001618 0000000000000000                   2323 @lit_1952_70 DC AD(rd_buf_get_writable)
00001620                                    2324 @L661    DS    0H
                                            2325 * ***                   ssize_t r;
                                            2326 * ***
                                            2327 * ***                   r = recv(rktrans->rktrans_s, p,
                                            2328 * ***
                                            2329 * ***
                                            2330 * ***
                                            2331 * ***                            len,
                                            2332 * ***                            0);
00001620 E3F0 5000 0004          00000000   2333          LG    15,0(0,5)   ; rktrans
00001626 E3F0 F000 0014          00000000   2334          LGF   15,0(0,15)
0000162C E3F0 D0B0 0024          000000B0   2335          STG   15,176(0,13)
00001632 E3F0 D0A8 0004          000000A8   2336          LG    15,168(0,13) ; p
00001638 E3F0 D0B8 0024          000000B8   2337          STG   15,184(0,13)
0000163E E330 D0C0 0024          000000C0   2338          STG   3,192(0,13)
00001644 D707 D0C8 D0C8 000000C8 000000C8   2339          XC    200(8,13),200(13)
0000164A 4110 D0B0               000000B0   2340          LA    1,176(0,13)
0000164E E3F0 C058 0004          000015E8   2341          LG    15,@lit_1952_59 ; recv
00001654                                    2342 @@gen_label88 DS    0H
00001654 05EF                               2343          BALR  14,15
00001656                                    2344 @@gen_label89 DS    0H
00001656 B904 004F                          2345          LGR   4,15
                                            2346 * ***
                                            2347 * ***                   if (((r == (-1)))) {
0000165A A74F FFFF               0000FFFF   2348          CGHI  4,-1
0000165E 4770 C152               000016E2   2349          BNE   @L663
                                            2350 * ***                           if ((* __error()) == 35
00001662 E330 C060 0004          000015F0   2351          LG    3,@lit_1952_60 ; __error
                                                                                                                           Page   51 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001668 B904 00F3                          2352          LGR   15,3
0000166C                                    2353 @@gen_label91 DS    0H
0000166C 05EF                               2354          BALR  14,15
0000166E                                    2355 @@gen_label92 DS    0H
                                            2356 * ***
                                            2357 * ***
                                            2358 * ***
                                            2359 * ***                                   )
0000166E E55C F000 0023          00000000   2360          CHSI  0(15),35
00001674 4770 C0F0               00001680   2361          BNE   @L664
                                            2362 * ***                                   return sum;
00001678 B904 00F2                          2363          LGR   15,2
0000167C 47F0 C1F4               00001784   2364          B     @ret_lab_1952
                                            2365 * ***                           else {
00001680                                    2366 @L664    DS    0H
                                            2367 * ***                                   snprintf(errstr, errstr_size, \
                                            2368 * "%s", strerror((* __error())));
00001680 B904 00F3                          2369          LGR   15,3
00001684                                    2370 @@gen_label94 DS    0H
00001684 05EF                               2371          BALR  14,15
00001686                                    2372 @@gen_label95 DS    0H
00001686 58F0 F000               00000000   2373          L     15,0(0,15)
0000168A B914 00FF                          2374          LGFR  15,15
0000168E E3F0 D0B0 0024          000000B0   2375          STG   15,176(0,13)
00001694 4110 D0B0               000000B0   2376          LA    1,176(0,13)
00001698 E3F0 C068 0004          000015F8   2377          LG    15,@lit_1952_62 ; strerror
0000169E                                    2378 @@gen_label96 DS    0H
0000169E 05EF                               2379          BALR  14,15
000016A0                                    2380 @@gen_label97 DS    0H
000016A0 E310 5010 0004          00000010   2381          LG    1,16(0,5)   ; errstr
000016A6 E310 D0B0 0024          000000B0   2382          STG   1,176(0,13)
000016AC E310 5018 0004          00000018   2383          LG    1,24(0,5)   ; errstr_size
000016B2 E310 D0B8 0024          000000B8   2384          STG   1,184(0,13)
000016B8 E310 C078 0004          00001608   2385          LG    1,@lit_1952_63
000016BE 4110 1054               00000054   2386          LA    1,84(0,1)
000016C2 E310 D0C0 0024          000000C0   2387          STG   1,192(0,13)
000016C8 E3F0 D0C8 0024          000000C8   2388          STG   15,200(0,13)
000016CE 4110 D0B0               000000B0   2389          LA    1,176(0,13)
000016D2 E3F0 C070 0004          00001600   2390          LG    15,@lit_1952_64 ; snprintf
000016D8                                    2391 @@gen_label98 DS    0H
000016D8 05EF                               2392          BALR  14,15
000016DA                                    2393 @@gen_label99 DS    0H
                                            2394 * ***
                                            2395 * ***                                   return -1;
000016DA A7F9 FFFF               0000FFFF   2396          LGHI  15,-1       ; -1
000016DE 47F0 C1F4               00001784   2397          B     @ret_lab_1952
                                            2398 * ***                           }
                                            2399 * ***                   } else if (((r == 0))) {
000016E2                                    2400 @L663    DS    0H
000016E2 B902 00F4                          2401          LTGR  15,4
000016E6 4770 C196               00001726   2402          BNE   @L666
                                            2403 * ***
                                                                                                                           Page   52 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2404 * ***
                                            2405 * ***                           snprintf(errstr, errstr_size, "Disconn\
                                            2406 * ected");
000016EA E3F0 5010 0004          00000010   2407          LG    15,16(0,5)  ; errstr
000016F0 E3F0 D0B0 0024          000000B0   2408          STG   15,176(0,13)
000016F6 E3F0 5018 0004          00000018   2409          LG    15,24(0,5)  ; errstr_size
000016FC E3F0 D0B8 0024          000000B8   2410          STG   15,184(0,13)
00001702 E3F0 C078 0004          00001608   2411          LG    15,@lit_1952_63
00001708 41F0 F0FA               000000FA   2412          LA    15,250(0,15)
0000170C E3F0 D0C0 0024          000000C0   2413          STG   15,192(0,13)
00001712 4110 D0B0               000000B0   2414          LA    1,176(0,13)
00001716 E3F0 C070 0004          00001600   2415          LG    15,@lit_1952_64 ; snprintf
0000171C                                    2416 @@gen_label101 DS    0H
0000171C 05EF                               2417          BALR  14,15
0000171E                                    2418 @@gen_label102 DS    0H
                                            2419 * ***
                                            2420 * ***                           return -1;
0000171E A7F9 FFFF               0000FFFF   2421          LGHI  15,-1       ; -1
00001722 47F0 C1F4               00001784   2422          B     @ret_lab_1952
                                            2423 * ***                   }
                                            2424 * ***
                                            2425 * ***
                                            2426 * ***                   rd_buf_write(rbuf, ((void *)0), (size_t)r);
00001726                                    2427 @L666    DS    0H
00001726 E3F0 5008 0004          00000008   2428          LG    15,8(0,5)   ; rbuf
0000172C E3F0 D0B0 0024          000000B0   2429          STG   15,176(0,13)
00001732 D707 D0B8 D0B8 000000B8 000000B8   2430          XC    184(8,13),184(13)
00001738 E340 D0C0 0024          000000C0   2431          STG   4,192(0,13)
0000173E 4110 D0B0               000000B0   2432          LA    1,176(0,13)
00001742 E3F0 C080 0004          00001610   2433          LG    15,@lit_1952_69 ; rd_buf_write
00001748                                    2434 @@gen_label103 DS    0H
00001748 05EF                               2435          BALR  14,15
0000174A                                    2436 @@gen_label104 DS    0H
                                            2437 * ***
                                            2438 * ***                   sum += r;
0000174A B908 0024                          2439          AGR   2,4
                                            2440 * ***
                                            2441 * ***
                                            2442 * ***
                                            2443 * ***                   if ((size_t)r < len)
0000174E B921 0043                          2444          CLGR  4,3
00001752 4740 C1F0               00001780   2445          BL    @L659
                                            2446 * ***                           break;
00001756                                    2447 @L668    DS    0H
                                            2448 * ***           }
00001756                                    2449 @L662    DS    0H
00001756 E3F0 5008 0004          00000008   2450          LG    15,8(0,5)   ; rbuf
0000175C E3F0 D0B0 0024          000000B0   2451          STG   15,176(0,13)
00001762 41F0 D0A8               000000A8   2452          LA    15,168(0,13)
00001766 E3F0 D0B8 0024          000000B8   2453          STG   15,184(0,13)
0000176C 4110 D0B0               000000B0   2454          LA    1,176(0,13)
00001770 E3F0 C088 0004          00001618   2455          LG    15,@lit_1952_70 ; rd_buf_get_writable
                                                                                                                           Page   53 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001776                                    2456 @@gen_label106 DS    0H
00001776 05EF                               2457          BALR  14,15
00001778                                    2458 @@gen_label107 DS    0H
00001778 B902 003F                          2459          LTGR  3,15
0000177C 4770 C090               00001620   2460          BNZ   @L661
00001780                                    2461 @L659    DS    0H
                                            2462 * ***           return sum;
00001780 B904 00F2                          2463          LGR   15,2
                                            2464 * ***   }
00001784                                    2465 @ret_lab_1952 DS 0H
                                            2466 * * **** Start of Epilogue
                                            2467          DCCEPIL
00001784                                    2468+         ds 0h                                                          01-DCCEP
                                            2469+* Epilog
00001784 D707 D088 D088 00000088 00000088   2470+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000178A E3D0 D080 0004          00000080   2471+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001790 E3C0 D090 0004          00000090   2472+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001796 E3B0 C018 0004          00000018   2473+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000179C E3C0 B010 0021          00000010   2474+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000017A2 E3E0 D008 0004          00000008   2475+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017A8 EB1C D020 0004          00000020   2476+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017AE 078E                               2477+         bcr 8,14                if same dsab, just return              01-DCCEP
000017B0 E3F0 D010 0024          00000010   2478+         stg 15,16(0,13)         save return code                       01-DCCEP
000017B6 E300 D018 0024          00000018   2479+         stg 0,24(0,13)          save more return code                  01-DCCEP
000017BC E3F0 D090 0004          00000090   2480+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017C2 E3F0 F018 0004          00000018   2481+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017C8 47F0 F040               00000040   2482+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2483+* End of Epilog
                                            2484 * * **** End of Epilogue
                                            2485          DROP  12
                                            2486 *
                                            2487 *   DSECT for automatic variables in "rd_kafka_transport_socket_recv0"
                                            2488 *      (FUNCTION #1952)
                                            2489 *
00000000                00000000 000000B0   2490 @AUTO#rd_kafka_transport_socket_recv0 DSECT
00000000                                    2491          DS    XL168
000000A8                                    2492 rd_kafka_transport_socket_recv0#r#1 DS 8XL1 ; r
000000B0                000000B0 000000A8   2493          ORG   @AUTO#rd_kafka_transport_socket_recv0+168
000000A8                                    2494 rd_kafka_transport_socket_recv0#len#0 DS 8XL1 ; len
000000B0                000000B0 000000A8   2495          ORG   @AUTO#rd_kafka_transport_socket_recv0+168
000000A8                                    2496 rd_kafka_transport_socket_recv0#sum#0 DS 8XL1 ; sum
                                            2497 *
000017CC                00000000 000046BC   2498 @CODE    CSECT
                                            2499 *
                                            2500 *
                                            2501 *
                                            2502 * ....... start of rd_kafka_transport_socket_recv
000017CC                                    2503 @LNAME1953 DS  0H
000017CC 0000001E                           2504          DC    X'0000001E'
000017D0 99846D9281869281                   2505          DC    C'rd_kafka_transport_socket_recv'
000017EE 00                                 2506          DC    X'00'
                                            2507 rd_kafka_transport_socket_recv DCCPRLG CINDEX=1953,BASER=12,FRAME=200,E*
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1953
                                            2508          macro
                                            2509          dccextrn &m
                                            2510          gblc    &$dccext(1000)
                                            2511          gbla    &$dccexti
                                            2512          lcla    &i
                                            2513 &$dccext(&$dccexti+1) setc    '&m'
                                            2514 &i       seta    1
                                            2515 .loop    aif    (&i gt &$dccexti).around
                                            2516          aif    ('&$dccext(&i)' eq '&m').getout
                                            2517 &i       seta    &i+1
                                            2518          ago     .loop
                                            2519 .around  anop
                                            2520 &$dccexti seta &$dccexti+1
                                            2521          extrn  &m
                                            2522 .getout  anop
                                            2523          mend
000017F0                                    2524+$eye0054    ds    0d                                                    02-DCCCA
000017F0 C4C3C3                             2525+         dc cl3'DCC'                                                    02-DCCCA
000017F3 01                                 2526+         dc xl1'01' format one                                          02-DCCCA
000017F4 00000000                           2527+         dc a(0)                                                        02-DCCCA
000017F8 0000000000001862                   2528+         dc ad(@PER_1953)                                               02-DCCCA
00001800 00000000000000C8                   2529+         dc ad(200)                                                     02-DCCCA
00001808 0000000000000000                   2530+         dc ad(0)                                                       02-DCCCA
00001810 0000000000001000                   2531+         dc ad(4096)                                                    02-DCCCA
00001818 20                                 2532+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001819 03                                 2533+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000181A 03                                 2534+         dc al1(3)                                                      02-DCCCA
0000181B 08                                 2535+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000181C 00                                 2536+         dc bl.8'00000000'                                              02-DCCCA
0000181D 000000                             2537+         dc al3(0)                                                      02-DCCCA
00001820 00000000000017CC                   2538+         dc ad(@LNAME1953)                                              02-DCCCA
00001828                                    2539+         ds 0d                                                          02-DCCCA
00001828 00000000000017F0                   2540+         dc ad($eye0054)                                                02-DCCCA
00001830 0000000000000000                   2541+         dc ad(0)                                                       02-DCCCA
00001838                                    2542+         ds    0d                                                       01-DCCPR
00001838                                    2543+rd_kafka_transport_socket_recv ds 0d                                    01-DCCPR
00001838                                    2544+@REGION_1953_1 ds 0h                                                    01-DCCPR
00001838 EBEC D008 0024          00000008   2545+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000183E E3E0 D088 0004          00000088   2546+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001844 E3C0 D090 0004          00000090   2547+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000184A B904 002E                          2548+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000184E E3B0 C018 0004          00000018   2549+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001854 A7EB 00C8               000000C8   2550+         aghi  14,200              increase by frame size               01-DCCPR
00001858 E3E0 C020 0021          00000020   2551+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000185E 4720 B020               00000020   2552+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001862                                    2553+@PER_1953 ds   0h                                                       01-DCCPR
00001862 EBDE 2080 0024          00000080   2554+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001868 E3C0 2090 0024          00000090   2555+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000186E B904 00D2                          2556+         lgr   13,2                set real frame pointer               01-DCCPR
00001872 B904 00CF                          2557+         lgr   12,15               set base reg                         01-DCCPR
                        00001838            2558+         using @REGION_1953_1,12                                        01-DCCPR
                                                                                                                           Page   55 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2559 * ******* End of Prologue
                                            2560 * *
                                            2561 * ***
                                            2562 * ***               return rd_kafka_transport_socket_recv0(rktrans, bu\
                                            2563 * f,
                                            2564 * ***   # 357 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            2565 * ***                                                  errstr, errstr_\
                                            2566 * size);
00001876 E3F0 1000 0004          00000000   2567          LG    15,0(0,1)   ; rktrans
0000187C E3F0 D0A8 0024          000000A8   2568          STG   15,168(0,13)
00001882 E3F0 1008 0004          00000008   2569          LG    15,8(0,1)   ; buf
00001888 E3F0 D0B0 0024          000000B0   2570          STG   15,176(0,13)
0000188E E3F0 1010 0004          00000010   2571          LG    15,16(0,1)  ; errstr
00001894 E3F0 D0B8 0024          000000B8   2572          STG   15,184(0,13)
0000189A E3F0 1018 0004          00000018   2573          LG    15,24(0,1)  ; errstr_size
000018A0 E3F0 D0C0 0024          000000C0   2574          STG   15,192(0,13)
000018A6 4110 D0A8               000000A8   2575          LA    1,168(0,13)
000018AA E3F0 C0D0 0004          00001908   2576          LG    15,@lit_1953_72 ; rd_kafka_transport_socket_recv0
000018B0                                    2577 @@gen_label109 DS    0H
000018B0 05EF                               2578          BALR  14,15
000018B2                                    2579 @@gen_label110 DS    0H
                                            2580 * ***   }
                                            2581 * * **** Start of Epilogue
                                            2582          DCCEPIL
000018B2                                    2583+         ds 0h                                                          01-DCCEP
                                            2584+* Epilog
000018B2 D707 D088 D088 00000088 00000088   2585+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000018B8 E3D0 D080 0004          00000080   2586+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000018BE E3C0 D090 0004          00000090   2587+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000018C4 E3B0 C018 0004          00000018   2588+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000018CA E3C0 B010 0021          00000010   2589+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000018D0 E3E0 D008 0004          00000008   2590+         lg  14,8(0,13)          load up return address                 01-DCCEP
000018D6 EB1C D020 0004          00000020   2591+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000018DC 078E                               2592+         bcr 8,14                if same dsab, just return              01-DCCEP
000018DE E3F0 D010 0024          00000010   2593+         stg 15,16(0,13)         save return code                       01-DCCEP
000018E4 E300 D018 0024          00000018   2594+         stg 0,24(0,13)          save more return code                  01-DCCEP
000018EA E3F0 D090 0004          00000090   2595+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000018F0 E3F0 F018 0004          00000018   2596+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000018F6 47F0 F040               00000040   2597+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2598+* End of Epilog
                                            2599 * * **** End of Epilogue
00001900                                    2600          DS    0D
00001900 000000C8                           2601 @FRAMESIZE_1953 DC F'200'
00001904 00000000
00001908 0000000000001590                   2602 @lit_1953_72 DC AD(rd_kafka_transport_socket_recv0)
                                            2603          DROP  12
                                            2604 *
                                            2605 *   DSECT for automatic variables in "rd_kafka_transport_socket_recv"
                                            2606 *      (FUNCTION #1953)
                                            2607 *
00000000                00000000 000000A8   2608 @AUTO#rd_kafka_transport_socket_recv DSECT
00000000                                    2609          DS    XL168
                                                                                                                           Page   56 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2610 *
00001910                00000000 000046BC   2611 @CODE    CSECT
                                            2612 *
                                            2613 *
                                            2614 *
                                            2615 * ....... start of rd_kafka_transport_connect_done
                                            2616 rd_kafka_transport_connect_done ALIAS X'99846D92818692816DA3998195A2979*
                                                                699A36D839695958583A36D84969585'
00001910                                    2617 @LNAME1583 DS  0H
00001910 0000001F                           2618          DC    X'0000001F'
00001914 99846D9281869281                   2619          DC    C'rd_kafka_transport_connect_done'
00001933 00                                 2620          DC    X'00'
                                            2621 rd_kafka_transport_connect_done DCCPRLG CINDEX=1583,BASER=12,FRAME=192,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1583
                                            2622          macro
                                            2623          dccextrn &m
                                            2624          gblc    &$dccext(1000)
                                            2625          gbla    &$dccexti
                                            2626          lcla    &i
                                            2627 &$dccext(&$dccexti+1) setc    '&m'
                                            2628 &i       seta    1
                                            2629 .loop    aif    (&i gt &$dccexti).around
                                            2630          aif    ('&$dccext(&i)' eq '&m').getout
                                            2631 &i       seta    &i+1
                                            2632          ago     .loop
                                            2633 .around  anop
                                            2634 &$dccexti seta &$dccexti+1
                                            2635          extrn  &m
                                            2636 .getout  anop
                                            2637          mend
00001938                                    2638+$eye0057    ds    0d                                                    02-DCCCA
00001938 C4C3C3                             2639+         dc cl3'DCC'                                                    02-DCCCA
0000193B 01                                 2640+         dc xl1'01' format one                                          02-DCCCA
0000193C 00000000                           2641+         dc a(0)                                                        02-DCCCA
00001940 00000000000019AA                   2642+         dc ad(@PER_1583)                                               02-DCCCA
00001948 00000000000000C0                   2643+         dc ad(192)                                                     02-DCCCA
00001950 0000000000000000                   2644+         dc ad(0)                                                       02-DCCCA
00001958 0000000000001000                   2645+         dc ad(4096)                                                    02-DCCCA
00001960 20                                 2646+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001961 03                                 2647+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001962 03                                 2648+         dc al1(3)                                                      02-DCCCA
00001963 08                                 2649+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001964 00                                 2650+         dc bl.8'00000000'                                              02-DCCCA
00001965 000000                             2651+         dc al3(0)                                                      02-DCCCA
00001968 0000000000001910                   2652+         dc ad(@LNAME1583)                                              02-DCCCA
00001970                                    2653+         ds 0d                                                          02-DCCCA
00001970 0000000000001938                   2654+         dc ad($eye0057)                                                02-DCCCA
00001978 0000000000000000                   2655+         dc ad(0)                                                       02-DCCCA
00001980                                    2656+         ds    0d                                                       01-DCCPR
                                            2657+         entry rd_kafka_transport_connect_done                          01-DCCPR
00001980                                    2658+rd_kafka_transport_connect_done ds 0d                                   01-DCCPR
00001980                                    2659+@REGION_1583_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001980 EBEC D008 0024          00000008   2660+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001986 E3E0 D088 0004          00000088   2661+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000198C E3C0 D090 0004          00000090   2662+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001992 B904 002E                          2663+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001996 E3B0 C018 0004          00000018   2664+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000199C A7EB 00C0               000000C0   2665+         aghi  14,192              increase by frame size               01-DCCPR
000019A0 E3E0 C020 0021          00000020   2666+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000019A6 4720 B020               00000020   2667+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000019AA                                    2668+@PER_1583 ds   0h                                                       01-DCCPR
000019AA EBDE 2080 0024          00000080   2669+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000019B0 E3C0 2090 0024          00000090   2670+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000019B6 B904 00D2                          2671+         lgr   13,2                set real frame pointer               01-DCCPR
000019BA B904 00CF                          2672+         lgr   12,15               set base reg                         01-DCCPR
                        00001980            2673+         using @REGION_1583_1,12                                        01-DCCPR
                                            2674          DCCPRV REG=15     ; Get PRV from DVT
000019BE E3F0 B008 0004          00000008   2675+         LG 15,8(0,11)                                                  01-DCCPR
                                            2676 * ******* End of Prologue
                                            2677 * *
                                            2678 * ***      rd_kafka_broker_t *rkb = rktrans->rktrans_rkb;
000019C4 E320 1000 0004          00000000   2679          LG    2,0(0,1)    ; rktrans
000019CA E330 2008 0004          00000008   2680          LG    3,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
                                            2681 * ***
                                            2682 * ***           rd_kafka_curr_transport = rktrans;
000019D0 E340 C0D8 0016          00001A58   2683          LLGF  4,@lit_1583_74 ; rd_kafka_curr_transport
000019D6 E324 F000 0024          00000000   2684          STG   2,0(4,15)   ; rd_kafka_curr_transport
                                            2685 * ***
                                            2686 * ***           rd_kafka_broker_connect_done(rkb, errstr);
000019DC E330 D0B0 0024          000000B0   2687          STG   3,176(0,13)
000019E2 E3F0 1008 0004          00000008   2688          LG    15,8(0,1)   ; errstr
000019E8 E3F0 D0B8 0024          000000B8   2689          STG   15,184(0,13)
000019EE 4110 D0B0               000000B0   2690          LA    1,176(0,13)
000019F2 E3F0 C0D0 0004          00001A50   2691          LG    15,@lit_1583_75 ; rd_kafka_broker_connect_done
000019F8                                    2692 @@gen_label111 DS    0H
000019F8 05EF                               2693          BALR  14,15
000019FA                                    2694 @@gen_label112 DS    0H
                                            2695 * ***   }
000019FA                                    2696 @ret_lab_1583 DS 0H
                                            2697 * * **** Start of Epilogue
                                            2698          DCCEPIL
000019FA                                    2699+         ds 0h                                                          01-DCCEP
                                            2700+* Epilog
000019FA D707 D088 D088 00000088 00000088   2701+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A00 E3D0 D080 0004          00000080   2702+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A06 E3C0 D090 0004          00000090   2703+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A0C E3B0 C018 0004          00000018   2704+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A12 E3C0 B010 0021          00000010   2705+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A18 E3E0 D008 0004          00000008   2706+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A1E EB1C D020 0004          00000020   2707+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001A24 078E                               2708+         bcr 8,14                if same dsab, just return              01-DCCEP
00001A26 E3F0 D010 0024          00000010   2709+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A2C E300 D018 0024          00000018   2710+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   58 
  Active Usings: @REGION_1583_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001A32 E3F0 D090 0004          00000090   2711+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A38 E3F0 F018 0004          00000018   2712+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A3E 47F0 F040               00000040   2713+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2714+* End of Epilog
                                            2715 * * **** End of Epilogue
00001A48                                    2716          DS    0D
00001A48 000000C0                           2717 @FRAMESIZE_1583 DC F'192'
00001A4C 00000000
00001A50 0000000000000000                   2718 @lit_1583_75 DC AD(rd_kafka_broker_connect_done)
00001A58 00000000                           2719 @lit_1583_74 DC Q(rd_kafka_curr_transport)
                                            2720          DROP  12
                                            2721 *
                                            2722 *   DSECT for automatic variables in "rd_kafka_transport_connect_done"
                                            2723 *      (FUNCTION #1583)
                                            2724 *
00000000                00000000 000000A8   2725 @AUTO#rd_kafka_transport_connect_done DSECT
00000000                                    2726          DS    XL168
                                            2727 *
00001A5C                00000000 000046BC   2728 @CODE    CSECT
                                            2729 *
                                            2730 *
                                            2731 *
                                            2732 * ....... start of rd_kafka_transport_send
                                            2733 rd_kafka_transport_send ALIAS X'99846D92818692816DA3998195A2979699A36DA*
                                                                2859584'
00001A5C                                    2734 @LNAME1577 DS  0H
00001A5C 00000017                           2735          DC    X'00000017'
00001A60 99846D9281869281                   2736          DC    C'rd_kafka_transport_send'
00001A77 00                                 2737          DC    X'00'
                                            2738 rd_kafka_transport_send DCCPRLG CINDEX=1577,BASER=12,FRAME=208,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1577
                                            2739          macro
                                            2740          dccextrn &m
                                            2741          gblc    &$dccext(1000)
                                            2742          gbla    &$dccexti
                                            2743          lcla    &i
                                            2744 &$dccext(&$dccexti+1) setc    '&m'
                                            2745 &i       seta    1
                                            2746 .loop    aif    (&i gt &$dccexti).around
                                            2747          aif    ('&$dccext(&i)' eq '&m').getout
                                            2748 &i       seta    &i+1
                                            2749          ago     .loop
                                            2750 .around  anop
                                            2751 &$dccexti seta &$dccexti+1
                                            2752          extrn  &m
                                            2753 .getout  anop
                                            2754          mend
00001A78                                    2755+$eye0061    ds    0d                                                    02-DCCCA
00001A78 C4C3C3                             2756+         dc cl3'DCC'                                                    02-DCCCA
00001A7B 01                                 2757+         dc xl1'01' format one                                          02-DCCCA
00001A7C 00000000                           2758+         dc a(0)                                                        02-DCCCA
00001A80 0000000000001AEA                   2759+         dc ad(@PER_1577)                                               02-DCCCA
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001A88 00000000000000D0                   2760+         dc ad(208)                                                     02-DCCCA
00001A90 0000000000000000                   2761+         dc ad(0)                                                       02-DCCCA
00001A98 0000000000001000                   2762+         dc ad(4096)                                                    02-DCCCA
00001AA0 20                                 2763+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001AA1 03                                 2764+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001AA2 03                                 2765+         dc al1(3)                                                      02-DCCCA
00001AA3 08                                 2766+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001AA4 00                                 2767+         dc bl.8'00000000'                                              02-DCCCA
00001AA5 000000                             2768+         dc al3(0)                                                      02-DCCCA
00001AA8 0000000000001A5C                   2769+         dc ad(@LNAME1577)                                              02-DCCCA
00001AB0                                    2770+         ds 0d                                                          02-DCCCA
00001AB0 0000000000001A78                   2771+         dc ad($eye0061)                                                02-DCCCA
00001AB8 0000000000000000                   2772+         dc ad(0)                                                       02-DCCCA
00001AC0                                    2773+         ds    0d                                                       01-DCCPR
                                            2774+         entry rd_kafka_transport_send                                  01-DCCPR
00001AC0                                    2775+rd_kafka_transport_send ds 0d                                           01-DCCPR
00001AC0                                    2776+@REGION_1577_1 ds 0h                                                    01-DCCPR
00001AC0 EBEC D008 0024          00000008   2777+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001AC6 E3E0 D088 0004          00000088   2778+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001ACC E3C0 D090 0004          00000090   2779+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001AD2 B904 002E                          2780+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001AD6 E3B0 C018 0004          00000018   2781+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001ADC A7EB 00D0               000000D0   2782+         aghi  14,208              increase by frame size               01-DCCPR
00001AE0 E3E0 C020 0021          00000020   2783+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001AE6 4720 B020               00000020   2784+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001AEA                                    2785+@PER_1577 ds   0h                                                       01-DCCPR
00001AEA EBDE 2080 0024          00000080   2786+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001AF0 E3C0 2090 0024          00000090   2787+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001AF6 B904 00D2                          2788+         lgr   13,2                set real frame pointer               01-DCCPR
00001AFA B904 00CF                          2789+         lgr   12,15               set base reg                         01-DCCPR
                        00001AC0            2790+         using @REGION_1577_1,12                                        01-DCCPR
                                            2791 * ******* End of Prologue
                                            2792 * *
                                            2793 * ***           ssize_t r;
                                            2794 * ***   # 396 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            2795 * ***                   r = rd_kafka_transport_socket_send(rktrans, sl\
                                            2796 * ice,
                                            2797 * ***                                                      errstr, err\
                                            2798 * str_size);
00001AFE E3F0 1000 0004          00000000   2799          LG    15,0(0,1)   ; rktrans
00001B04 E3F0 D0B0 0024          000000B0   2800          STG   15,176(0,13)
00001B0A E3F0 1008 0004          00000008   2801          LG    15,8(0,1)   ; slice
00001B10 E3F0 D0B8 0024          000000B8   2802          STG   15,184(0,13)
00001B16 E3F0 1010 0004          00000010   2803          LG    15,16(0,1)  ; errstr
00001B1C E3F0 D0C0 0024          000000C0   2804          STG   15,192(0,13)
00001B22 E3F0 1018 0004          00000018   2805          LG    15,24(0,1)  ; errstr_size
00001B28 E3F0 D0C8 0024          000000C8   2806          STG   15,200(0,13)
00001B2E 4110 D0B0               000000B0   2807          LA    1,176(0,13)
00001B32 E3F0 C0D0 0004          00001B90   2808          LG    15,@lit_1577_77 ; rd_kafka_transport_socket_send
00001B38                                    2809 @@gen_label113 DS    0H
00001B38 05EF                               2810          BALR  14,15
00001B3A                                    2811 @@gen_label114 DS    0H
                                                                                                                           Page   60 
  Active Usings: @REGION_1577_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2812 * ***
                                            2813 * ***           return r;
                                            2814 * ***   }
                                            2815 * * **** Start of Epilogue
                                            2816          DCCEPIL
00001B3A                                    2817+         ds 0h                                                          01-DCCEP
                                            2818+* Epilog
00001B3A D707 D088 D088 00000088 00000088   2819+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B40 E3D0 D080 0004          00000080   2820+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B46 E3C0 D090 0004          00000090   2821+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B4C E3B0 C018 0004          00000018   2822+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B52 E3C0 B010 0021          00000010   2823+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B58 E3E0 D008 0004          00000008   2824+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B5E EB1C D020 0004          00000020   2825+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B64 078E                               2826+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B66 E3F0 D010 0024          00000010   2827+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B6C E300 D018 0024          00000018   2828+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B72 E3F0 D090 0004          00000090   2829+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B78 E3F0 F018 0004          00000018   2830+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B7E 47F0 F040               00000040   2831+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2832+* End of Epilog
                                            2833 * * **** End of Epilogue
00001B88                                    2834          DS    0D
00001B88 000000D0                           2835 @FRAMESIZE_1577 DC F'208'
00001B8C 00000000
00001B90 0000000000001448                   2836 @lit_1577_77 DC AD(rd_kafka_transport_socket_send)
                                            2837          DROP  12
                                            2838 *
                                            2839 *   DSECT for automatic variables in "rd_kafka_transport_send"
                                            2840 *      (FUNCTION #1577)
                                            2841 *
00000000                00000000 000000B0   2842 @AUTO#rd_kafka_transport_send DSECT
00000000                                    2843          DS    XL168
000000A8                                    2844 rd_kafka_transport_send#r#0 DS 8XL1 ; r
                                            2845 *
00001B98                00000000 000046BC   2846 @CODE    CSECT
                                            2847 *
                                            2848 *
                                            2849 *
                                            2850 * ....... start of rd_kafka_transport_recv
                                            2851 rd_kafka_transport_recv ALIAS X'99846D92818692816DA3998195A2979699A36D9*
                                                                98583A5'
00001B98                                    2852 @LNAME1578 DS  0H
00001B98 00000017                           2853          DC    X'00000017'
00001B9C 99846D9281869281                   2854          DC    C'rd_kafka_transport_recv'
00001BB3 00                                 2855          DC    X'00'
                                            2856 rd_kafka_transport_recv DCCPRLG CINDEX=1578,BASER=12,FRAME=208,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1578
                                            2857          macro
                                            2858          dccextrn &m
                                            2859          gblc    &$dccext(1000)
                                            2860          gbla    &$dccexti
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2861          lcla    &i
                                            2862 &$dccext(&$dccexti+1) setc    '&m'
                                            2863 &i       seta    1
                                            2864 .loop    aif    (&i gt &$dccexti).around
                                            2865          aif    ('&$dccext(&i)' eq '&m').getout
                                            2866 &i       seta    &i+1
                                            2867          ago     .loop
                                            2868 .around  anop
                                            2869 &$dccexti seta &$dccexti+1
                                            2870          extrn  &m
                                            2871 .getout  anop
                                            2872          mend
00001BB8                                    2873+$eye0064    ds    0d                                                    02-DCCCA
00001BB8 C4C3C3                             2874+         dc cl3'DCC'                                                    02-DCCCA
00001BBB 01                                 2875+         dc xl1'01' format one                                          02-DCCCA
00001BBC 00000000                           2876+         dc a(0)                                                        02-DCCCA
00001BC0 0000000000001C2A                   2877+         dc ad(@PER_1578)                                               02-DCCCA
00001BC8 00000000000000D0                   2878+         dc ad(208)                                                     02-DCCCA
00001BD0 0000000000000000                   2879+         dc ad(0)                                                       02-DCCCA
00001BD8 0000000000001000                   2880+         dc ad(4096)                                                    02-DCCCA
00001BE0 20                                 2881+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001BE1 03                                 2882+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001BE2 03                                 2883+         dc al1(3)                                                      02-DCCCA
00001BE3 08                                 2884+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001BE4 00                                 2885+         dc bl.8'00000000'                                              02-DCCCA
00001BE5 000000                             2886+         dc al3(0)                                                      02-DCCCA
00001BE8 0000000000001B98                   2887+         dc ad(@LNAME1578)                                              02-DCCCA
00001BF0                                    2888+         ds 0d                                                          02-DCCCA
00001BF0 0000000000001BB8                   2889+         dc ad($eye0064)                                                02-DCCCA
00001BF8 0000000000000000                   2890+         dc ad(0)                                                       02-DCCCA
00001C00                                    2891+         ds    0d                                                       01-DCCPR
                                            2892+         entry rd_kafka_transport_recv                                  01-DCCPR
00001C00                                    2893+rd_kafka_transport_recv ds 0d                                           01-DCCPR
00001C00                                    2894+@REGION_1578_1 ds 0h                                                    01-DCCPR
00001C00 EBEC D008 0024          00000008   2895+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C06 E3E0 D088 0004          00000088   2896+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001C0C E3C0 D090 0004          00000090   2897+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001C12 B904 002E                          2898+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001C16 E3B0 C018 0004          00000018   2899+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001C1C A7EB 00D0               000000D0   2900+         aghi  14,208              increase by frame size               01-DCCPR
00001C20 E3E0 C020 0021          00000020   2901+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001C26 4720 B020               00000020   2902+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001C2A                                    2903+@PER_1578 ds   0h                                                       01-DCCPR
00001C2A EBDE 2080 0024          00000080   2904+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001C30 E3C0 2090 0024          00000090   2905+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001C36 B904 00D2                          2906+         lgr   13,2                set real frame pointer               01-DCCPR
00001C3A B904 00CF                          2907+         lgr   12,15               set base reg                         01-DCCPR
                        00001C00            2908+         using @REGION_1578_1,12                                        01-DCCPR
                                            2909 * ******* End of Prologue
                                            2910 * *
                                            2911 * ***           ssize_t r;
                                            2912 * ***
                                                                                                                           Page   62 
  Active Usings: @REGION_1578_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2913 * ***   # 417 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            2914 * ***                   r = rd_kafka_transport_socket_recv(rktrans, rb\
                                            2915 * uf,
                                            2916 * ***                                                      errstr, err\
                                            2917 * str_size);
00001C3E E3F0 1000 0004          00000000   2918          LG    15,0(0,1)   ; rktrans
00001C44 E3F0 D0B0 0024          000000B0   2919          STG   15,176(0,13)
00001C4A E3F0 1008 0004          00000008   2920          LG    15,8(0,1)   ; rbuf
00001C50 E3F0 D0B8 0024          000000B8   2921          STG   15,184(0,13)
00001C56 E3F0 1010 0004          00000010   2922          LG    15,16(0,1)  ; errstr
00001C5C E3F0 D0C0 0024          000000C0   2923          STG   15,192(0,13)
00001C62 E3F0 1018 0004          00000018   2924          LG    15,24(0,1)  ; errstr_size
00001C68 E3F0 D0C8 0024          000000C8   2925          STG   15,200(0,13)
00001C6E 4110 D0B0               000000B0   2926          LA    1,176(0,13)
00001C72 E3F0 C0D0 0004          00001CD0   2927          LG    15,@lit_1578_79 ; rd_kafka_transport_socket_recv
00001C78                                    2928 @@gen_label115 DS    0H
00001C78 05EF                               2929          BALR  14,15
00001C7A                                    2930 @@gen_label116 DS    0H
                                            2931 * ***
                                            2932 * ***           return r;
                                            2933 * ***   }
                                            2934 * * **** Start of Epilogue
                                            2935          DCCEPIL
00001C7A                                    2936+         ds 0h                                                          01-DCCEP
                                            2937+* Epilog
00001C7A D707 D088 D088 00000088 00000088   2938+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C80 E3D0 D080 0004          00000080   2939+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C86 E3C0 D090 0004          00000090   2940+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C8C E3B0 C018 0004          00000018   2941+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C92 E3C0 B010 0021          00000010   2942+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C98 E3E0 D008 0004          00000008   2943+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C9E EB1C D020 0004          00000020   2944+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001CA4 078E                               2945+         bcr 8,14                if same dsab, just return              01-DCCEP
00001CA6 E3F0 D010 0024          00000010   2946+         stg 15,16(0,13)         save return code                       01-DCCEP
00001CAC E300 D018 0024          00000018   2947+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001CB2 E3F0 D090 0004          00000090   2948+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001CB8 E3F0 F018 0004          00000018   2949+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001CBE 47F0 F040               00000040   2950+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2951+* End of Epilog
                                            2952 * * **** End of Epilogue
00001CC8                                    2953          DS    0D
00001CC8 000000D0                           2954 @FRAMESIZE_1578 DC F'208'
00001CCC 00000000
00001CD0 0000000000001838                   2955 @lit_1578_79 DC AD(rd_kafka_transport_socket_recv)
                                            2956          DROP  12
                                            2957 *
                                            2958 *   DSECT for automatic variables in "rd_kafka_transport_recv"
                                            2959 *      (FUNCTION #1578)
                                            2960 *
00000000                00000000 000000B0   2961 @AUTO#rd_kafka_transport_recv DSECT
00000000                                    2962          DS    XL168
000000A8                                    2963 rd_kafka_transport_recv#r#0 DS 8XL1 ; r
                                                                                                                           Page   63 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2964 *
00001CD8                00000000 000046BC   2965 @CODE    CSECT
                                            2966 *
                                            2967 *
                                            2968 *
                                            2969 * ....... start of rd_kafka_transport_request_sent
                                            2970 rd_kafka_transport_request_sent ALIAS X'99846D92818692816DA3998195A2979*
                                                                699A36D998598A485A2A36DA28595A3'
00001CD8                                    2971 @LNAME1579 DS  0H
00001CD8 0000001F                           2972          DC    X'0000001F'
00001CDC 99846D9281869281                   2973          DC    C'rd_kafka_transport_request_sent'
00001CFB 00                                 2974          DC    X'00'
                                            2975 rd_kafka_transport_request_sent DCCPRLG CINDEX=1579,BASER=12,FRAME=240,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1579
                                            2976          macro
                                            2977          dccextrn &m
                                            2978          gblc    &$dccext(1000)
                                            2979          gbla    &$dccexti
                                            2980          lcla    &i
                                            2981 &$dccext(&$dccexti+1) setc    '&m'
                                            2982 &i       seta    1
                                            2983 .loop    aif    (&i gt &$dccexti).around
                                            2984          aif    ('&$dccext(&i)' eq '&m').getout
                                            2985 &i       seta    &i+1
                                            2986          ago     .loop
                                            2987 .around  anop
                                            2988 &$dccexti seta &$dccexti+1
                                            2989          extrn  &m
                                            2990 .getout  anop
                                            2991          mend
00001D00                                    2992+$eye0067    ds    0d                                                    02-DCCCA
00001D00 C4C3C3                             2993+         dc cl3'DCC'                                                    02-DCCCA
00001D03 01                                 2994+         dc xl1'01' format one                                          02-DCCCA
00001D04 00000000                           2995+         dc a(0)                                                        02-DCCCA
00001D08 0000000000001D72                   2996+         dc ad(@PER_1579)                                               02-DCCCA
00001D10 00000000000000F0                   2997+         dc ad(240)                                                     02-DCCCA
00001D18 0000000000000000                   2998+         dc ad(0)                                                       02-DCCCA
00001D20 0000000000001000                   2999+         dc ad(4096)                                                    02-DCCCA
00001D28 20                                 3000+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001D29 03                                 3001+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001D2A 03                                 3002+         dc al1(3)                                                      02-DCCCA
00001D2B 08                                 3003+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001D2C 00                                 3004+         dc bl.8'00000000'                                              02-DCCCA
00001D2D 000000                             3005+         dc al3(0)                                                      02-DCCCA
00001D30 0000000000001CD8                   3006+         dc ad(@LNAME1579)                                              02-DCCCA
00001D38                                    3007+         ds 0d                                                          02-DCCCA
00001D38 0000000000001D00                   3008+         dc ad($eye0067)                                                02-DCCCA
00001D40 0000000000000000                   3009+         dc ad(0)                                                       02-DCCCA
00001D48                                    3010+         ds    0d                                                       01-DCCPR
                                            3011+         entry rd_kafka_transport_request_sent                          01-DCCPR
00001D48                                    3012+rd_kafka_transport_request_sent ds 0d                                   01-DCCPR
00001D48                                    3013+@REGION_1579_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001D48 EBEC D008 0024          00000008   3014+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001D4E E3E0 D088 0004          00000088   3015+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001D54 E3C0 D090 0004          00000090   3016+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001D5A B904 002E                          3017+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001D5E E3B0 C018 0004          00000018   3018+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001D64 A7EB 00F0               000000F0   3019+         aghi  14,240              increase by frame size               01-DCCPR
00001D68 E3E0 C020 0021          00000020   3020+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001D6E 4720 B020               00000020   3021+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001D72                                    3022+@PER_1579 ds   0h                                                       01-DCCPR
00001D72 EBDE 2080 0024          00000080   3023+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001D78 E3C0 2090 0024          00000090   3024+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001D7E B904 00D2                          3025+         lgr   13,2                set real frame pointer               01-DCCPR
00001D82 B904 00CF                          3026+         lgr   12,15               set base reg                         01-DCCPR
                        00001D48            3027+         using @REGION_1579_1,12                                        01-DCCPR
                                            3028 * ******* End of Prologue
                                            3029 * *
                                            3030 * ***           rd_kafka_transport_t *rktrans = rkb->rkb_transport;
00001D86 E3F0 1000 0004          00000000   3031          LG    15,0(0,1)   ; rkb
00001D8C E310 1008 0004          00000008   3032          LG    1,8(0,1)    ; rkbuf
00001D92 E320 F030 0004          00000030   3033          LG    2,48(0,15)  ; offset of rkb_transport in rd_kafka_broker*
                                                                _s
                                            3034 * ***
                                            3035 * ***
                                            3036 * ***           rd_kafka_interceptors_on_request_sent(
                                            3037 * ***                   rkb->rkb_rk,
                                            3038 * ***                   (int)rktrans->rktrans_s,
                                            3039 * ***                   rkb->rkb_name, rkb->rkb_nodeid,
                                            3040 * ***                   rkbuf->rkbuf_reqhdr.ApiKey,
                                            3041 * ***                   rkbuf->rkbuf_reqhdr.ApiVersion,
                                            3042 * ***                   rkbuf->rkbuf_corrid,
                                            3043 * ***                   ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_\
                                            3044 * reader)->start));
00001D98 E330 FFD0 0004          00000FD0   3045          LG    3,4048(0,15)
00001D9E E330 D0B0 0024          000000B0   3046          STG   3,176(0,13)
00001DA4 E320 2000 0014          00000000   3047          LGF   2,0(0,2)
00001DAA E320 D0B8 0024          000000B8   3048          STG   2,184(0,13)
00001DB0 A729 1418               00001418   3049          LGHI  2,5144      ; 5144
00001DB4 4122 F000               00000000   3050          LA    2,0(2,15)
00001DB8 E320 D0C0 0024          000000C0   3051          STG   2,192(0,13)
00001DBE E3F0 F010 0014          00000010   3052          LGF   15,16(0,15)
00001DC4 E3F0 D0C8 0024          000000C8   3053          STG   15,200(0,13)
00001DCA E3F0 10B8 0015          000000B8   3054          LGH   15,184(0,1)
00001DD0 E3F0 D0D0 0024          000000D0   3055          STG   15,208(0,13)
00001DD6 E3F0 10BA 0015          000000BA   3056          LGH   15,186(0,1)
00001DDC E3F0 D0D8 0024          000000D8   3057          STG   15,216(0,13)
00001DE2 E3F0 1010 0014          00000010   3058          LGF   15,16(0,1)
00001DE8 E3F0 D0E0 0024          000000E0   3059          STG   15,224(0,13)
00001DEE E3F0 1098 0004          00000098   3060          LG    15,152(0,1) ; offset of end in rd_slice_s
00001DF4 E3F0 1090 000B          00000090   3061          SLG   15,144(0,1)
00001DFA E3F0 D0E8 0024          000000E8   3062          STG   15,232(0,13)
00001E00 4110 D0B0               000000B0   3063          LA    1,176(0,13)
00001E04 E3F0 C118 0004          00001E60   3064          LG    15,@lit_1579_82 ; rd_kafka_interceptors_on_request_sent
                                                                                                                           Page   65 
  Active Usings: @REGION_1579_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001E0A                                    3065 @@gen_label117 DS    0H
00001E0A 05EF                               3066          BALR  14,15
00001E0C                                    3067 @@gen_label118 DS    0H
                                            3068 * ***   }
00001E0C                                    3069 @ret_lab_1579 DS 0H
                                            3070 * * **** Start of Epilogue
                                            3071          DCCEPIL
00001E0C                                    3072+         ds 0h                                                          01-DCCEP
                                            3073+* Epilog
00001E0C D707 D088 D088 00000088 00000088   3074+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E12 E3D0 D080 0004          00000080   3075+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001E18 E3C0 D090 0004          00000090   3076+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E1E E3B0 C018 0004          00000018   3077+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E24 E3C0 B010 0021          00000010   3078+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E2A E3E0 D008 0004          00000008   3079+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E30 EB1C D020 0004          00000020   3080+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E36 078E                               3081+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E38 E3F0 D010 0024          00000010   3082+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E3E E300 D018 0024          00000018   3083+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E44 E3F0 D090 0004          00000090   3084+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E4A E3F0 F018 0004          00000018   3085+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E50 47F0 F040               00000040   3086+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3087+* End of Epilog
                                            3088 * * **** End of Epilogue
00001E58                                    3089          DS    0D
00001E58 000000F0                           3090 @FRAMESIZE_1579 DC F'240'
00001E5C 00000000
00001E60 0000000000000000                   3091 @lit_1579_82 DC AD(rd_kafka_interceptors_on_request_sent)
                                            3092          DROP  12
                                            3093 *
                                            3094 *   DSECT for automatic variables in "rd_kafka_transport_request_sent"
                                            3095 *      (FUNCTION #1579)
                                            3096 *
00000000                00000000 000000A8   3097 @AUTO#rd_kafka_transport_request_sent DSECT
00000000                                    3098          DS    XL168
                                            3099 *
00001E68                00000000 000046BC   3100 @CODE    CSECT
                                            3101 *
                                            3102 *
                                            3103 *
                                            3104 * ....... start of rd_kafka_transport_framed_recv
                                            3105 rd_kafka_transport_framed_recv ALIAS X'99846D92818692816DA3998195A29796*
                                                                99A36D8699819485846D998583A5'
00001E68                                    3106 @LNAME1580 DS  0H
00001E68 0000001E                           3107          DC    X'0000001E'
00001E6C 99846D9281869281                   3108          DC    C'rd_kafka_transport_framed_recv'
00001E8A 00                                 3109          DC    X'00'
                                            3110 rd_kafka_transport_framed_recv DCCPRLG CINDEX=1580,BASER=12,FRAME=824,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1580
                                            3111          macro
                                            3112          dccextrn &m
                                            3113          gblc    &$dccext(1000)
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3114          gbla    &$dccexti
                                            3115          lcla    &i
                                            3116 &$dccext(&$dccexti+1) setc    '&m'
                                            3117 &i       seta    1
                                            3118 .loop    aif    (&i gt &$dccexti).around
                                            3119          aif    ('&$dccext(&i)' eq '&m').getout
                                            3120 &i       seta    &i+1
                                            3121          ago     .loop
                                            3122 .around  anop
                                            3123 &$dccexti seta &$dccexti+1
                                            3124          extrn  &m
                                            3125 .getout  anop
                                            3126          mend
00001E90                                    3127+$eye0070    ds    0d                                                    02-DCCCA
00001E90 C4C3C3                             3128+         dc cl3'DCC'                                                    02-DCCCA
00001E93 01                                 3129+         dc xl1'01' format one                                          02-DCCCA
00001E94 00000000                           3130+         dc a(0)                                                        02-DCCCA
00001E98 0000000000001F02                   3131+         dc ad(@PER_1580)                                               02-DCCCA
00001EA0 0000000000000338                   3132+         dc ad(824)                                                     02-DCCCA
00001EA8 0000000000000000                   3133+         dc ad(0)                                                       02-DCCCA
00001EB0 0000000000001000                   3134+         dc ad(4096)                                                    02-DCCCA
00001EB8 20                                 3135+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001EB9 03                                 3136+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001EBA 03                                 3137+         dc al1(3)                                                      02-DCCCA
00001EBB 08                                 3138+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001EBC 00                                 3139+         dc bl.8'00000000'                                              02-DCCCA
00001EBD 000000                             3140+         dc al3(0)                                                      02-DCCCA
00001EC0 0000000000001E68                   3141+         dc ad(@LNAME1580)                                              02-DCCCA
00001EC8                                    3142+         ds 0d                                                          02-DCCCA
00001EC8 0000000000001E90                   3143+         dc ad($eye0070)                                                02-DCCCA
00001ED0 0000000000000000                   3144+         dc ad(0)                                                       02-DCCCA
00001ED8                                    3145+         ds    0d                                                       01-DCCPR
                                            3146+         entry rd_kafka_transport_framed_recv                           01-DCCPR
00001ED8                                    3147+rd_kafka_transport_framed_recv ds 0d                                    01-DCCPR
00001ED8                                    3148+@REGION_1580_1 ds 0h                                                    01-DCCPR
00001ED8 EBEC D008 0024          00000008   3149+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001EDE E3E0 D088 0004          00000088   3150+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001EE4 E3C0 D090 0004          00000090   3151+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001EEA B904 002E                          3152+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001EEE E3B0 C018 0004          00000018   3153+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001EF4 A7EB 0338               00000338   3154+         aghi  14,824              increase by frame size               01-DCCPR
00001EF8 E3E0 C020 0021          00000020   3155+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001EFE 4720 B020               00000020   3156+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F02                                    3157+@PER_1580 ds   0h                                                       01-DCCPR
00001F02 EBDE 2080 0024          00000080   3158+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001F08 E3C0 2090 0024          00000090   3159+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001F0E B904 00D2                          3160+         lgr   13,2                set real frame pointer               01-DCCPR
00001F12 B904 00CF                          3161+         lgr   12,15               set base reg                         01-DCCPR
                        00001ED8            3162+         using @REGION_1580_1,12                                        01-DCCPR
                                            3163 * ******* End of Prologue
                                            3164 * *
                                            3165 * ***      rd_kafka_buf_t *rkbuf = rktrans->rktrans_recv_buf;
                                                                                                                           Page   67 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001F16 EB36 1000 0004          00000000   3166          LMG   3,6,0(1)    ; rktrans
00001F1C E320 3080 0004          00000080   3167          LG    2,128(0,3)  ; offset of rktrans_recv_buf in rd_kafka_tra*
                                                                nsport_s
                                            3168 * ***      ssize_t r;
                                            3169 * ***      const int log_decode_errors = 3;
00001F22 A778 0003               00000003   3170          LHI   7,3         ; 3
                                            3171 * ***
                                            3172 * ***
                                            3173 * ***
                                            3174 * ***
                                            3175 * ***
                                            3176 * ***
                                            3177 * ***
                                            3178 * ***      if (!rkbuf) {
00001F26 B902 00F2                          3179          LTGR  15,2
00001F2A 4770 C0A0               00001F78   3180          BNZ   @L669
                                            3181 * ***                   rkbuf = rd_kafka_buf_new0(1,4,0);
00001F2E E548 D2B0 0001          000002B0   3182          MVGHI 688(13),1
00001F34 E548 D2B8 0004          000002B8   3183          MVGHI 696(13),4
00001F3A D707 D2C0 D2C0 000002C0 000002C0   3184          XC    704(8,13),704(13)
00001F40 4110 D2B0               000002B0   3185          LA    1,688(0,13)
00001F44 E3F0 C0E0 0004          00001FB8   3186          LG    15,@lit_1580_85 ; rd_kafka_buf_new0
00001F4A                                    3187 @@gen_label120 DS    0H
00001F4A 05EF                               3188          BALR  14,15
00001F4C                                    3189 @@gen_label121 DS    0H
00001F4C B904 002F                          3190          LGR   2,15        ; rkbuf
                                            3191 * ***
                                            3192 * ***                   rd_buf_write_ensure(&rkbuf->rkbuf_buf, 4, 4);
00001F50 41F0 F028               00000028   3193          LA    15,40(0,15)
00001F54 E3F0 D2B0 0024          000002B0   3194          STG   15,688(0,13)
00001F5A E548 D2B8 0004          000002B8   3195          MVGHI 696(13),4
00001F60 E548 D2C0 0004          000002C0   3196          MVGHI 704(13),4
00001F66 4110 D2B0               000002B0   3197          LA    1,688(0,13)
00001F6A E3F0 C0E8 0004          00001FC0   3198          LG    15,@lit_1580_86 ; rd_buf_write_ensure
00001F70                                    3199 @@gen_label122 DS    0H
00001F70 05EF                               3200          BALR  14,15
00001F72                                    3201 @@gen_label123 DS    0H
                                            3202 * ***         rktrans->rktrans_recv_buf = rkbuf;
00001F72 E320 3080 0024          00000080   3203          STG   2,128(0,3)  ; offset of rktrans_recv_buf in rd_kafka_tra*
                                                                nsport_s
                                            3204 * ***      }
00001F78                                    3205 @L669    DS    0H
                                            3206 * ***
                                            3207 * ***
                                            3208 * ***           r = rd_kafka_transport_recv(rktrans, &rkbuf->rkbuf_buf\
                                            3209 * ,
                                            3210 * ***                                       errstr, errstr_size);
00001F78 E330 D2B0 0024          000002B0   3211          STG   3,688(0,13)
00001F7E 41F0 2028               00000028   3212          LA    15,40(0,2)
00001F82 E3F0 D2B8 0024          000002B8   3213          STG   15,696(0,13)
00001F88 EB56 D2C0 0024          000002C0   3214          STMG  5,6,704(13)
00001F8E 4110 D2B0               000002B0   3215          LA    1,688(0,13)
                                                                                                                           Page   68 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001F92 E3F0 C0F0 0004          00001FC8   3216          LG    15,@lit_1580_87 ; rd_kafka_transport_recv
00001F98                                    3217 @@gen_label124 DS    0H
00001F98 05EF                               3218          BALR  14,15
00001F9A                                    3219 @@gen_label125 DS    0H
                                            3220 * ***      if (r == 0)
00001F9A B902 001F                          3221          LTGR  1,15
00001F9E 4770 C180               00002058   3222          BNE   @L670
                                            3223 * ***         return 0;
00001FA2 A7F9 0000               00000000   3224          LGHI  15,0        ; 0
00001FA6 47F0 C5E6               000024BE   3225          B     @ret_lab_1580
00001FB0                                    3226          DS    0D
00001FB0 00000338                           3227 @FRAMESIZE_1580 DC F'824'
00001FB4 00000000
00001FB8 0000000000000000                   3228 @lit_1580_85 DC AD(rd_kafka_buf_new0)
00001FC0 0000000000000000                   3229 @lit_1580_86 DC AD(rd_buf_write_ensure)
00001FC8 0000000000001C00                   3230 @lit_1580_87 DC AD(rd_kafka_transport_recv)
00001FD0 00000000000009B0                   3231 @lit_1580_90 DC AD(rd_buf_write_pos)
00001FD8 0000000000000000                   3232 @lit_1580_92 DC AD(rd_slice_init)
00001FE0 0000000000000000                   3233 @lit_1580_94 DC AD(rd_slice_read)
00001FE8 0000000000000A58                   3234 @lit_1580_95 DC AD(rd_slice_abs_offset)
00001FF0 0000000000000000                   3235 @lit_1580_98 DC AD(rd_kafka_crash)
00001FF8 00000000000046C0                   3236 @lit_1580_97 DC AD(@DATA)
00002000 00000000000048E4                   3237 @lit_1580_96 DC AD(@strings@)
00002008 0000000000000000                   3238 @lit_1580_100 DC AD(snprintf)
00002010 0000000000000000                   3239 @lit_1580_102 DC AD(mtx_lock)
00002018 0000000000000D50                   3240 @lit_1580_104 DC AD(rd_strlcpy)
00002020 0000000000000000                   3241 @lit_1580_106 DC AD(mtx_unlock)
00002028 0000000000000BB8                   3242 @lit_1580_107 DC AD(rd_kafka_$Api$Key2str)
00002030 0000000000000B00                   3243 @lit_1580_108 DC AD(rd_slice_offset)
00002038 0000000000000000                   3244 @lit_1580_113 DC AD(rd_kafka_log0)
00002040 0000000000000000                   3245 @lit_1580_119 DC AD(rd_buf_write_ensure_contig)
00002048 0000000000001ED8                   3246 @lit_1580_120 DC AD(rd_kafka_transport_framed_recv)
00002050 0000000000000000                   3247 @lit_1580_125 DC AD(rd_kafka_err2str)
                                            3248 * ***      else if (r == -1)
00002058                                    3249 @L670    DS    0H
00002058 A7FF FFFF               0000FFFF   3250          CGHI  15,-1
0000205C 4770 C190               00002068   3251          BNE   @L671
                                            3252 * ***         return -1;
00002060 A7F9 FFFF               0000FFFF   3253          LGHI  15,-1       ; -1
00002064 47F0 C5E6               000024BE   3254          B     @ret_lab_1580
                                            3255 * ***
                                            3256 * ***      if (rkbuf->rkbuf_totlen == 0) {
00002068                                    3257 @L671    DS    0H
00002068 E559 20A8 0000          000000A8   3258          CLGHSI 168(2),0
0000206E 4770 C562               0000243A   3259          BNE   @L673
                                            3260 * ***
                                            3261 * ***         int32_t frame_len;
                                            3262 * ***
                                            3263 * ***         if (rd_buf_write_pos(&rkbuf->rkbuf_buf) < sizeof(frame_l\
                                            3264 * en)) {
00002072 41F0 2028               00000028   3265          LA    15,40(0,2)
00002076 E3F0 D2B0 0024          000002B0   3266          STG   15,688(0,13)
                                                                                                                           Page   69 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000207C 4110 D2B0               000002B0   3267          LA    1,688(0,13)
00002080 E3F0 C0F8 0004          00001FD0   3268          LG    15,@lit_1580_90 ; rd_buf_write_pos
00002086                                    3269 @@gen_label129 DS    0H
00002086 05EF                               3270          BALR  14,15
00002088                                    3271 @@gen_label130 DS    0H
00002088 C2FE 0000 0004                     3272          CLGFI 15,X'00000004'
0000208E 47B0 C1C2               0000209A   3273          BNL   @L674
                                            3274 * ***
                                            3275 * ***            return 0;
00002092 A7F9 0000               00000000   3276          LGHI  15,0        ; 0
00002096 47F0 C5E6               000024BE   3277          B     @ret_lab_1580
                                            3278 * ***         }
0000209A                                    3279 @L674    DS    0H
                                            3280 * ***
                                            3281 * ***
                                            3282 * ***                   rd_slice_init(&rkbuf->rkbuf_reader, &rkbuf->rk\
                                            3283 * buf_buf, 0, 4);
0000209A 41F0 2078               00000078   3284          LA    15,120(0,2)
0000209E E3F0 D2B0 0024          000002B0   3285          STG   15,688(0,13)
000020A4 41F0 2028               00000028   3286          LA    15,40(0,2)
000020A8 E3F0 D2B8 0024          000002B8   3287          STG   15,696(0,13)
000020AE D707 D2C0 D2C0 000002C0 000002C0   3288          XC    704(8,13),704(13)
000020B4 E548 D2C8 0004          000002C8   3289          MVGHI 712(13),4
000020BA 4110 D2B0               000002B0   3290          LA    1,688(0,13)
000020BE E3F0 C100 0004          00001FD8   3291          LG    15,@lit_1580_92 ; rd_slice_init
000020C4                                    3292 @@gen_label132 DS    0H
000020C4 05EF                               3293          BALR  14,15
000020C6                                    3294 @@gen_label133 DS    0H
                                            3295 * ***
                                            3296 * ***
                                            3297 * ***         do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(_v\
                                            3298 * )); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { si\
                                            3299 * ze_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_rea\
                                            3300 * der)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { i\
                                            3301 * f (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kaf\
                                            3302 * ka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_transport.c",497, _\
                                            3303 * _FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while \
                                            3304 * (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": ");\
                                            3305 *  if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname\
                                            3306 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                            3307 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                            3308 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                            3309 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                            3310 * decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " \
                                            3311 * "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" \
                                            3312 * " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(\
                                            3313 * rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_sli\
                                            3314 * ce_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rk\
                                            3315 * buf->rkbuf_reader)->start), __FUNCTION__, 497, __len0, ((&rkbuf->rkb\
                                            3316 * uf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf-\
                                            3317 * >rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect\
                                            3318 *  broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf\
                                                                                                                           Page   70 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3319 * _err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } \
                                            3320 * } while (0); } while (0); *(&frame_len) = (_v); } while (0);
000020C6                                    3321 @L675    DS    0H
000020C6                                    3322 @L678    DS    0H
000020C6 A789 0004               00000004   3323          LGHI  8,4         ; 4
000020CA 41F0 2078               00000078   3324          LA    15,120(0,2)
000020CE E3F0 D2B0 0024          000002B0   3325          STG   15,688(0,13)
000020D4 41F0 D0AC               000000AC   3326          LA    15,172(0,13)
000020D8 E3F0 D2B8 0024          000002B8   3327          STG   15,696(0,13)
000020DE E380 D2C0 0024          000002C0   3328          STG   8,704(0,13)
000020E4 4110 D2B0               000002B0   3329          LA    1,688(0,13)
000020E8 E3F0 C108 0004          00001FE0   3330          LG    15,@lit_1580_94 ; rd_slice_read
000020EE                                    3331 @@gen_label134 DS    0H
000020EE 05EF                               3332          BALR  14,15
000020F0                                    3333 @@gen_label135 DS    0H
000020F0 B902 00FF                          3334          LTGR  15,15
000020F4 4770 C496               0000236E   3335          BNZ   @L681
000020F8                                    3336 @L682    DS    0H
000020F8 E390 2098 0004          00000098   3337          LG    9,152(0,2)  ; offset of end in rd_slice_s
000020FE 41F0 2078               00000078   3338          LA    15,120(0,2)
00002102 E3F0 D2B0 0024          000002B0   3339          STG   15,688(0,13)
00002108 4110 D2B0               000002B0   3340          LA    1,688(0,13)
0000210C E3F0 C110 0004          00001FE8   3341          LG    15,@lit_1580_95 ; rd_slice_abs_offset
00002112                                    3342 @@gen_label137 DS    0H
00002112 05EF                               3343          BALR  14,15
00002114                                    3344 @@gen_label138 DS    0H
00002114 B90B 009F                          3345          SLGR  9,15
00002118 B921 0089                          3346          CLGR  8,9
0000211C 47D0 C496               0000236E   3347          BNH   @L685
00002120                                    3348 @L686    DS    0H
00002120 1277                               3349          LTR   7,7
00002122 47D0 C48C               00002364   3350          BNH   @L689
00002126                                    3351 @L690    DS    0H
00002126 E3F0 2100 0002          00000100   3352          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000212C 4770 C29A               00002172   3353          BNZ   @L693
00002130 E3F0 C128 0004          00002000   3354          LG    15,@lit_1580_96
00002136 4110 F086               00000086   3355          LA    1,134(0,15)
0000213A E310 D2B0 0024          000002B0   3356          STG   1,688(0,13)
00002140 E548 D2B8 01F1          000002B8   3357          MVGHI 696(13),497
00002146 E310 C120 0004          00001FF8   3358          LG    1,@lit_1580_97
0000214C 4110 11E8               000001E8   3359          LA    1,488(0,1)
00002150 E310 D2C0 0024          000002C0   3360          STG   1,704(0,13)
00002156 D707 D2C8 D2C8 000002C8 000002C8   3361          XC    712(8,13),712(13)
0000215C 41F0 F108               00000108   3362          LA    15,264(0,15)
00002160 E3F0 D2D0 0024          000002D0   3363          STG   15,720(0,13)
00002166 4110 D2B0               000002B0   3364          LA    1,688(0,13)
0000216A E3F0 C118 0004          00001FF0   3365          LG    15,@lit_1580_98 ; rd_kafka_crash
00002170                                    3366 @@gen_label142 DS    0H
00002170 05EF                               3367          BALR  14,15
00002172                                    3368 @@gen_label143 DS    0H
00002172                                    3369 @L693    DS    0H
00002172 41F0 D0B0               000000B0   3370          LA    15,176(0,13)
                                                                                                                           Page   71 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002176 E3F0 D2B0 0024          000002B0   3371          STG   15,688(0,13)
0000217C E548 D2B8 0100          000002B8   3372          MVGHI 696(13),256
00002182 E3F0 C128 0004          00002000   3373          LG    15,@lit_1580_96
00002188 41F0 F122               00000122   3374          LA    15,290(0,15)
0000218C E3F0 D2C0 0024          000002C0   3375          STG   15,704(0,13)
00002192 4110 D2B0               000002B0   3376          LA    1,688(0,13)
00002196 E3F0 C130 0004          00002008   3377          LG    15,@lit_1580_100 ; snprintf
0000219C                                    3378 @@gen_label144 DS    0H
0000219C 05EF                               3379          BALR  14,15
0000219E                                    3380 @@gen_label145 DS    0H
0000219E 41F0 D0B0               000000B0   3381          LA    15,176(0,13)
000021A2 B904 001F                          3382          LGR   1,15
000021A6 A709 0000               00000000   3383          LGHI  0,0
000021AA                                    3384 @@gen_label146 DS 0H
000021AA B25E 000F                          3385          SRST  0,15
000021AE 4710 C2D2               000021AA   3386          BC  1,@@gen_label146
000021B2 B90B 0001                          3387          SLGR  0,1
000021B6 A70F 0002               00000002   3388          CGHI  0,2
000021BA 4770 C2EA               000021C2   3389          BNE   @L695
000021BE 9200 D0B0      000000B0 00000000   3390          MVI   176(13),0
000021C2                                    3391 @L694    DS    0H
000021C2                                    3392 @L695    DS    0H
000021C2 E3F0 2100 0004          00000100   3393          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000021C8 A739 1638               00001638   3394          LGHI  3,5688      ; 5688
000021CC 41F3 F000               00000000   3395          LA    15,0(3,15)
000021D0 E3F0 D2B0 0024          000002B0   3396          STG   15,688(0,13)
000021D6 4110 D2B0               000002B0   3397          LA    1,688(0,13)
000021DA E3F0 C138 0004          00002010   3398          LG    15,@lit_1580_102 ; mtx_lock
000021E0                                    3399 @@gen_label148 DS    0H
000021E0 05EF                               3400          BALR  14,15
000021E2                                    3401 @@gen_label149 DS    0H
000021E2 41F0 D1B0               000001B0   3402          LA    15,432(0,13)
000021E6 E3F0 D2B0 0024          000002B0   3403          STG   15,688(0,13)
000021EC E3F0 2100 0004          00000100   3404          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000021F2 A719 1630               00001630   3405          LGHI  1,5680      ; 5680
000021F6 E3F1 F000 0004          00000000   3406          LG    15,0(1,15)
000021FC E3F0 D2B8 0024          000002B8   3407          STG   15,696(0,13)
00002202 E548 D2C0 0100          000002C0   3408          MVGHI 704(13),256
00002208 4110 D2B0               000002B0   3409          LA    1,688(0,13)
0000220C E3F0 C140 0004          00002018   3410          LG    15,@lit_1580_104 ; rd_strlcpy
00002212                                    3411 @@gen_label150 DS    0H
00002212 05EF                               3412          BALR  14,15
00002214                                    3413 @@gen_label151 DS    0H
00002214 E3F0 2100 0004          00000100   3414          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000221A 41F3 F000               00000000   3415          LA    15,0(3,15)
0000221E E3F0 D2B0 0024          000002B0   3416          STG   15,688(0,13)
00002224 4110 D2B0               000002B0   3417          LA    1,688(0,13)
00002228 E3F0 C148 0004          00002020   3418          LG    15,@lit_1580_106 ; mtx_unlock
0000222E                                    3419 @@gen_label152 DS    0H
0000222E 05EF                               3420          BALR  14,15
00002230                                    3421 @@gen_label153 DS    0H
00002230 E3F0 20B8 0015          000000B8   3422          LGH   15,184(0,2)
                                                                                                                           Page   72 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002236 E3F0 D2B0 0024          000002B0   3423          STG   15,688(0,13)
0000223C 4110 D2B0               000002B0   3424          LA    1,688(0,13)
00002240 E3F0 C150 0004          00002028   3425          LG    15,@lit_1580_107 ; rd_kafka_ApiKey2str
00002246                                    3426 @@gen_label154 DS    0H
00002246 05EF                               3427          BALR  14,15
00002248                                    3428 @@gen_label155 DS    0H
00002248 B904 003F                          3429          LGR   3,15
0000224C 41F0 2078               00000078   3430          LA    15,120(0,2)
00002250 E3F0 D2B0 0024          000002B0   3431          STG   15,688(0,13)
00002256 4110 D2B0               000002B0   3432          LA    1,688(0,13)
0000225A E3F0 C158 0004          00002030   3433          LG    15,@lit_1580_108 ; rd_slice_offset
00002260                                    3434 @@gen_label156 DS    0H
00002260 05EF                               3435          BALR  14,15
00002262                                    3436 @@gen_label157 DS    0H
00002262 B904 004F                          3437          LGR   4,15
00002266 E390 2098 0004          00000098   3438          LG    9,152(0,2)  ; offset of end in rd_slice_s
0000226C 41F0 2078               00000078   3439          LA    15,120(0,2)
00002270 E3F0 D2B0 0024          000002B0   3440          STG   15,688(0,13)
00002276 4110 D2B0               000002B0   3441          LA    1,688(0,13)
0000227A E3F0 C110 0004          00001FE8   3442          LG    15,@lit_1580_95 ; rd_slice_abs_offset
00002280                                    3443 @@gen_label158 DS    0H
00002280 05EF                               3444          BALR  14,15
00002282                                    3445 @@gen_label159 DS    0H
00002282 B90B 009F                          3446          SLGR  9,15
00002286 E3F0 21E8 0002          000001E8   3447          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000228C 4780 C3C2               0000229A   3448          BZ    @L698
00002290 E3F0 21E8 0004          000001E8   3449          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00002296 47F0 C3CC               000022A4   3450          B     @L699
0000229A                                    3451 @L698    DS    0H
0000229A E3F0 C128 0004          00002000   3452          LG    15,@lit_1580_96
000022A0 41F0 F126               00000126   3453          LA    15,294(0,15)
000022A4                                    3454 @L699    DS    0H
000022A4 E310 2100 0004          00000100   3455          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000022AA E310 1FD0 0004          00000FD0   3456          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000022B0 4110 1210               00000210   3457          LA    1,528(0,1)
000022B4 E310 D2B0 0024          000002B0   3458          STG   1,688(0,13)
000022BA E310 2100 0004          00000100   3459          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000022C0 E310 1FD0 0004          00000FD0   3460          LG    1,4048(0,1)
000022C6 E310 D2B8 0024          000002B8   3461          STG   1,696(0,13)
000022CC 4110 D1B0               000001B0   3462          LA    1,432(0,13)
000022D0 E310 D2C0 0024          000002C0   3463          STG   1,704(0,13)
000022D6 B914 0017                          3464          LGFR  1,7
000022DA E310 D2C8 0024          000002C8   3465          STG   1,712(0,13)
000022E0 D707 D2D0 D2D0 000002D0 000002D0   3466          XC    720(8,13),720(13)
000022E6 E310 C128 0004          00002000   3467          LG    1,@lit_1580_96
000022EC 4170 114A               0000014A   3468          LA    7,330(0,1)
000022F0 E370 D2D8 0024          000002D8   3469          STG   7,728(0,13)
000022F6 4110 1156               00000156   3470          LA    1,342(0,1)
000022FA E310 D2E0 0024          000002E0   3471          STG   1,736(0,13)
00002300 E330 D2E8 0024          000002E8   3472          STG   3,744(0,13)
                                                                                                                           Page   73 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002306 4810 20BA               000000BA   3473          LH    1,186(0,2)
0000230A B914 0011                          3474          LGFR  1,1
0000230E E310 D2F0 0024          000002F0   3475          STG   1,752(0,13)
00002314 E340 D2F8 0024          000002F8   3476          STG   4,760(0,13)
0000231A E310 2098 0004          00000098   3477          LG    1,152(0,2)  ; offset of end in rd_slice_s
00002320 E310 2090 000B          00000090   3478          SLG   1,144(0,2)
00002326 E310 D300 0024          00000300   3479          STG   1,768(0,13)
0000232C E310 C120 0004          00001FF8   3480          LG    1,@lit_1580_97
00002332 4110 11E8               000001E8   3481          LA    1,488(0,1)
00002336 E310 D308 0024          00000308   3482          STG   1,776(0,13)
0000233C E548 D310 01F1          00000310   3483          MVGHI 784(13),497
00002342 EB89 D318 0024          00000318   3484          STMG  8,9,792(13)
00002348 E3F0 D328 0024          00000328   3485          STG   15,808(0,13)
0000234E 41F0 D0B0               000000B0   3486          LA    15,176(0,13)
00002352 E3F0 D330 0024          00000330   3487          STG   15,816(0,13)
00002358 4110 D2B0               000002B0   3488          LA    1,688(0,13)
0000235C E3F0 C160 0004          00002038   3489          LG    15,@lit_1580_113 ; rd_kafka_log0
00002362                                    3490 @@gen_label161 DS    0H
00002362 05EF                               3491          BALR  14,15
00002364                                    3492 @@gen_label162 DS    0H
00002364                                    3493 @L689    DS    0H
00002364 E54C 2188 FF65          00000188   3494          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000236A 47F0 C5A2               0000247A   3495          B     @_err_parse@1580@0
0000236E                                    3496 @L685    DS    0H
0000236E                                    3497 @L681    DS    0H
0000236E 58F0 D0AC               000000AC   3498          L     15,172(0,13) ; _v
00002372 50F0 D0A8               000000A8   3499          ST    15,168(0,13)
                                            3500 * ***
                                            3501 * ***         if (frame_len < 0 ||
00002376 E55C D0A8 0000          000000A8   3502          CHSI  168(13),0
0000237C 4740 C4C0               00002398   3503          BL    @L701
                                            3504 * ***             frame_len > rktrans->rktrans_rkb->
                                            3505 * ***             rkb_rk->rk_conf.recv_max_msg_size) {
00002380 58F0 D0A8               000000A8   3506          L     15,168(0,13) ; frame_len
00002384 E310 3008 0004          00000008   3507          LG    1,8(0,3)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
0000238A E310 1FD0 0004          00000FD0   3508          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00002390 59F0 12FC               000002FC   3509          C     15,764(0,1)
00002394 47D0 C4F6               000023CE   3510          BNH   @L700
00002398                                    3511 @L701    DS    0H
                                            3512 * ***            snprintf(errstr, errstr_size, "Invalid frame size %" \
                                            3513 * "d", frame_len);
00002398 EB56 D2B0 0024          000002B0   3514          STMG  5,6,688(13)
0000239E E3F0 C128 0004          00002000   3515          LG    15,@lit_1580_96
000023A4 41F0 F1C6               000001C6   3516          LA    15,454(0,15)
000023A8 E3F0 D2C0 0024          000002C0   3517          STG   15,704(0,13)
000023AE E3F0 D0A8 0014          000000A8   3518          LGF   15,168(0,13) ; frame_len
000023B4 E3F0 D2C8 0024          000002C8   3519          STG   15,712(0,13)
000023BA 4110 D2B0               000002B0   3520          LA    1,688(0,13)
000023BE E3F0 C130 0004          00002008   3521          LG    15,@lit_1580_100 ; snprintf
000023C4                                    3522 @@gen_label165 DS    0H
000023C4 05EF                               3523          BALR  14,15
                                                                                                                           Page   74 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000023C6                                    3524 @@gen_label166 DS    0H
                                            3525 * ***
                                            3526 * ***            return -1;
000023C6 A7F9 FFFF               0000FFFF   3527          LGHI  15,-1       ; -1
000023CA 47F0 C5E6               000024BE   3528          B     @ret_lab_1580
                                            3529 * ***         }
000023CE                                    3530 @L700    DS    0H
                                            3531 * ***
                                            3532 * ***         rkbuf->rkbuf_totlen = 4 + frame_len;
000023CE A7FA 0004               00000004   3533          AHI   15,4
000023D2 B914 00FF                          3534          LGFR  15,15
000023D6 E3F0 20A8 0024          000000A8   3535          STG   15,168(0,2) ; offset of rkbuf_totlen in rd_kafka_buf_s
                                            3536 * ***         if (frame_len == 0) {
000023DC E55C D0A8 0000          000000A8   3537          CHSI  168(13),0
000023E2 4770 C526               000023FE   3538          BNE   @L702
                                            3539 * ***
                                            3540 * ***            rktrans->rktrans_recv_buf = ((void *)0);
000023E6 A7F9 0000               00000000   3541          LGHI  15,0        ; 0
000023EA E3F0 3080 0024          00000080   3542          STG   15,128(0,3) ; offset of rktrans_recv_buf in rd_kafka_tra*
                                                                nsport_s
                                            3543 * ***            *rkbufp = rkbuf;
000023F0 E320 4000 0024          00000000   3544          STG   2,0(0,4)    ; rkbufp
                                            3545 * ***            return 1;
000023F6 A7F9 0001               00000001   3546          LGHI  15,1        ; 1
000023FA 47F0 C5E6               000024BE   3547          B     @ret_lab_1580
                                            3548 * ***         }
000023FE                                    3549 @L702    DS    0H
                                            3550 * ***
                                            3551 * ***
                                            3552 * ***
                                            3553 * ***                   rd_buf_write_ensure_contig(&rkbuf->rkbuf_buf, \
                                            3554 * frame_len);
000023FE 41F0 2028               00000028   3555          LA    15,40(0,2)
00002402 E3F0 D2B0 0024          000002B0   3556          STG   15,688(0,13)
00002408 E3F0 D0A8 0014          000000A8   3557          LGF   15,168(0,13) ; frame_len
0000240E E3F0 D2B8 0024          000002B8   3558          STG   15,696(0,13)
00002414 4110 D2B0               000002B0   3559          LA    1,688(0,13)
00002418 E3F0 C168 0004          00002040   3560          LG    15,@lit_1580_119 ; rd_buf_write_ensure_contig
0000241E                                    3561 @@gen_label168 DS    0H
0000241E 05EF                               3562          BALR  14,15
00002420                                    3563 @@gen_label169 DS    0H
                                            3564 * ***
                                            3565 * ***
                                            3566 * ***                   return rd_kafka_transport_framed_recv(rktrans,\
                                            3567 *  rkbufp,
                                            3568 * ***                                                         errstr, \
                                            3569 * errstr_size);
00002420 EB36 D2B0 0024          000002B0   3570          STMG  3,6,688(13)
00002426 4110 D2B0               000002B0   3571          LA    1,688(0,13)
0000242A E3F0 C170 0004          00002048   3572          LG    15,@lit_1580_120 ; rd_kafka_transport_framed_recv
00002430                                    3573 @@gen_label170 DS    0H
00002430 05EF                               3574          BALR  14,15
                                                                                                                           Page   75 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002432                                    3575 @@gen_label171 DS    0H
00002432 B914 00FF                          3576          LGFR  15,15
00002436 47F0 C5E6               000024BE   3577          B     @ret_lab_1580
                                            3578 * ***      }
0000243A                                    3579 @L673    DS    0H
                                            3580 * ***
                                            3581 * ***      if (rd_buf_write_pos(&rkbuf->rkbuf_buf) == rkbuf->rkbuf_tot\
                                            3582 * len) {
0000243A 41F0 2028               00000028   3583          LA    15,40(0,2)
0000243E E3F0 D2B0 0024          000002B0   3584          STG   15,688(0,13)
00002444 4110 D2B0               000002B0   3585          LA    1,688(0,13)
00002448 E3F0 C0F8 0004          00001FD0   3586          LG    15,@lit_1580_90 ; rd_buf_write_pos
0000244E                                    3587 @@gen_label172 DS    0H
0000244E 05EF                               3588          BALR  14,15
00002450                                    3589 @@gen_label173 DS    0H
00002450 E3F0 20A8 0021          000000A8   3590          CLG   15,168(0,2)
00002456 4770 C59A               00002472   3591          BNE   @L703
                                            3592 * ***
                                            3593 * ***         rktrans->rktrans_recv_buf = ((void *)0);
0000245A A7F9 0000               00000000   3594          LGHI  15,0        ; 0
0000245E E3F0 3080 0024          00000080   3595          STG   15,128(0,3) ; offset of rktrans_recv_buf in rd_kafka_tra*
                                                                nsport_s
                                            3596 * ***         *rkbufp = rkbuf;
00002464 E320 4000 0024          00000000   3597          STG   2,0(0,4)    ; rkbufp
                                            3598 * ***         return 1;
0000246A A7F9 0001               00000001   3599          LGHI  15,1        ; 1
0000246E 47F0 C5E6               000024BE   3600          B     @ret_lab_1580
                                            3601 * ***      }
00002472                                    3602 @L703    DS    0H
                                            3603 * ***
                                            3604 * ***
                                            3605 * ***      return 0;
00002472 A7F9 0000               00000000   3606          LGHI  15,0        ; 0
00002476 47F0 C5E6               000024BE   3607          B     @ret_lab_1580
                                            3608 * ***
                                            3609 * ***    err_parse:
                                            3610 * ***           snprintf(errstr, errstr_size, "Frame header parsing fa\
                                            3611 * iled: %s", rd_kafka_err2str(rkbuf->rkbuf_err));
0000247A                                    3612 @_err_parse@1580@0 DS 0H
0000247A E3F0 2188 0014          00000188   3613          LGF   15,392(0,2)
00002480 E3F0 D2B0 0024          000002B0   3614          STG   15,688(0,13)
00002486 4110 D2B0               000002B0   3615          LA    1,688(0,13)
0000248A E3F0 C178 0004          00002050   3616          LG    15,@lit_1580_125 ; rd_kafka_err2str
00002490                                    3617 @@gen_label175 DS    0H
00002490 05EF                               3618          BALR  14,15
00002492                                    3619 @@gen_label176 DS    0H
00002492 EB56 D2B0 0024          000002B0   3620          STMG  5,6,688(13)
00002498 E310 C128 0004          00002000   3621          LG    1,@lit_1580_96
0000249E 4110 11DC               000001DC   3622          LA    1,476(0,1)
000024A2 E310 D2C0 0024          000002C0   3623          STG   1,704(0,13)
000024A8 E3F0 D2C8 0024          000002C8   3624          STG   15,712(0,13)
000024AE 4110 D2B0               000002B0   3625          LA    1,688(0,13)
                                                                                                                           Page   76 
  Active Usings: @REGION_1580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000024B2 E3F0 C130 0004          00002008   3626          LG    15,@lit_1580_100 ; snprintf
000024B8                                    3627 @@gen_label177 DS    0H
000024B8 05EF                               3628          BALR  14,15
000024BA                                    3629 @@gen_label178 DS    0H
                                            3630 * ***
                                            3631 * ***      return -1;
000024BA A7F9 FFFF               0000FFFF   3632          LGHI  15,-1       ; -1
                                            3633 * ***   }
000024BE                                    3634 @ret_lab_1580 DS 0H
                                            3635 * * **** Start of Epilogue
                                            3636          DCCEPIL
000024BE                                    3637+         ds 0h                                                          01-DCCEP
                                            3638+* Epilog
000024BE D707 D088 D088 00000088 00000088   3639+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000024C4 E3D0 D080 0004          00000080   3640+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000024CA E3C0 D090 0004          00000090   3641+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000024D0 E3B0 C018 0004          00000018   3642+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000024D6 E3C0 B010 0021          00000010   3643+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000024DC E3E0 D008 0004          00000008   3644+         lg  14,8(0,13)          load up return address                 01-DCCEP
000024E2 EB1C D020 0004          00000020   3645+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000024E8 078E                               3646+         bcr 8,14                if same dsab, just return              01-DCCEP
000024EA E3F0 D010 0024          00000010   3647+         stg 15,16(0,13)         save return code                       01-DCCEP
000024F0 E300 D018 0024          00000018   3648+         stg 0,24(0,13)          save more return code                  01-DCCEP
000024F6 E3F0 D090 0004          00000090   3649+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000024FC E3F0 F018 0004          00000018   3650+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002502 47F0 F040               00000040   3651+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3652+* End of Epilog
                                            3653 * * **** End of Epilogue
                                            3654          DROP  12
                                            3655 *
                                            3656 *   DSECT for automatic variables in "rd_kafka_transport_framed_recv"
                                            3657 *      (FUNCTION #1580)
                                            3658 *
00000000                00000000 000002B0   3659 @AUTO#rd_kafka_transport_framed_recv DSECT
00000000                                    3660          DS    XL168
000000A8                                    3661 rd_kafka_transport_framed_recv#__len0#6 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   3662          ORG   @AUTO#rd_kafka_transport_framed_recv+168
000000A8                                    3663 rd_kafka_transport_framed_recv#__len2#5 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   3664          ORG   @AUTO#rd_kafka_transport_framed_recv+168
000000A8                                    3665 rd_kafka_transport_framed_recv#frame_len#2 DS 1F ; frame_len
000000AC                000000AC 000000A8   3666          ORG   @AUTO#rd_kafka_transport_framed_recv+168
000000A8                                    3667 rd_kafka_transport_framed_recv#log_decode_errors#0 DS 1F ; log_decode_e*
                                                                rrors
000000AC                000000AC 000000A8   3668          ORG   @AUTO#rd_kafka_transport_framed_recv+168
000000A8                                    3669 rd_kafka_transport_framed_recv#r#0 DS 8XL1 ; r
000000B0                000000B0 000000AC   3670          ORG   @AUTO#rd_kafka_transport_framed_recv+172
000000AC                                    3671 rd_kafka_transport_framed_recv#_v#4 DS 1F ; _v
000000B0                000000B0 000000B0   3672          ORG   @AUTO#rd_kafka_transport_framed_recv+176
000000B0                                    3673 rd_kafka_transport_framed_recv#__tmpstr#10 DS 256XL1 ; __tmpstr
000001B0                000001B0 000001B0   3674          ORG   @AUTO#rd_kafka_transport_framed_recv+432
000001B0                                    3675 rd_kafka_transport_framed_recv#_logname#11 DS 256XL1 ; _logname
                                            3676 *
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002506                00000000 000046BC   3677 @CODE    CSECT
                                            3678 *
                                            3679 *
                                            3680 *
                                            3681 * ....... start of rd_kafka_transport_post_connect_setup
                                            3682 rd_kafka_transport_post_connect_setup ALIAS X'99846D92818692816DA399819*
                                                                5A2979699A36D9796A2A36D839695958583A36DA285A3A497'
00002506                                    3683 @LNAME1584 DS  0H
00002506 00000025                           3684          DC    X'00000025'
0000250A 99846D9281869281                   3685          DC    C'rd_kafka_transport_post_connect_'
0000252A A285A3A497                         3686          DC    C'setup'
0000252F 00                                 3687          DC    X'00'
                                            3688 rd_kafka_transport_post_connect_setup DCCPRLG CINDEX=1584,BASER=12,FRAM*
                                                                E=504,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1584
                                            3689          macro
                                            3690          dccextrn &m
                                            3691          gblc    &$dccext(1000)
                                            3692          gbla    &$dccexti
                                            3693          lcla    &i
                                            3694 &$dccext(&$dccexti+1) setc    '&m'
                                            3695 &i       seta    1
                                            3696 .loop    aif    (&i gt &$dccexti).around
                                            3697          aif    ('&$dccext(&i)' eq '&m').getout
                                            3698 &i       seta    &i+1
                                            3699          ago     .loop
                                            3700 .around  anop
                                            3701 &$dccexti seta &$dccexti+1
                                            3702          extrn  &m
                                            3703 .getout  anop
                                            3704          mend
00002530                                    3705+$eye0073    ds    0d                                                    02-DCCCA
00002530 C4C3C3                             3706+         dc cl3'DCC'                                                    02-DCCCA
00002533 01                                 3707+         dc xl1'01' format one                                          02-DCCCA
00002534 00000000                           3708+         dc a(0)                                                        02-DCCCA
00002538 00000000000025A2                   3709+         dc ad(@PER_1584)                                               02-DCCCA
00002540 00000000000001F8                   3710+         dc ad(504)                                                     02-DCCCA
00002548 0000000000000000                   3711+         dc ad(0)                                                       02-DCCCA
00002550 0000000000001000                   3712+         dc ad(4096)                                                    02-DCCCA
00002558 20                                 3713+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002559 03                                 3714+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000255A 03                                 3715+         dc al1(3)                                                      02-DCCCA
0000255B 08                                 3716+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000255C 00                                 3717+         dc bl.8'00000000'                                              02-DCCCA
0000255D 000000                             3718+         dc al3(0)                                                      02-DCCCA
00002560 0000000000002506                   3719+         dc ad(@LNAME1584)                                              02-DCCCA
00002568                                    3720+         ds 0d                                                          02-DCCCA
00002568 0000000000002530                   3721+         dc ad($eye0073)                                                02-DCCCA
00002570 0000000000000000                   3722+         dc ad(0)                                                       02-DCCCA
00002578                                    3723+         ds    0d                                                       01-DCCPR
                                            3724+         entry rd_kafka_transport_post_connect_setup                    01-DCCPR
00002578                                    3725+rd_kafka_transport_post_connect_setup ds 0d                             01-DCCPR
00002578                                    3726+@REGION_1584_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002578 EBEC D008 0024          00000008   3727+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000257E E3E0 D088 0004          00000088   3728+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002584 E3C0 D090 0004          00000090   3729+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000258A B904 002E                          3730+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000258E E3B0 C018 0004          00000018   3731+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002594 A7EB 01F8               000001F8   3732+         aghi  14,504              increase by frame size               01-DCCPR
00002598 E3E0 C020 0021          00000020   3733+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000259E 4720 B020               00000020   3734+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000025A2                                    3735+@PER_1584 ds   0h                                                       01-DCCPR
000025A2 EBDE 2080 0024          00000080   3736+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025A8 E3C0 2090 0024          00000090   3737+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025AE B904 00D2                          3738+         lgr   13,2                set real frame pointer               01-DCCPR
000025B2 B904 00CF                          3739+         lgr   12,15               set base reg                         01-DCCPR
                        00002578            3740+         using @REGION_1584_1,12                                        01-DCCPR
                                            3741 * ******* End of Prologue
                                            3742 * *
                                            3743 * ***           rd_kafka_broker_t *rkb = rktrans->rktrans_rkb;
000025B6 E320 1000 0004          00000000   3744          LG    2,0(0,1)    ; rktrans
000025BC E330 2008 0004          00000008   3745          LG    3,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
                                            3746 * ***           unsigned int slen;
                                            3747 * ***
                                            3748 * ***
                                            3749 * ***           if (rkb->rkb_rk->rk_conf.socket_sndbuf_size != 0) {
000025C2 E3F0 3FD0 0004          00000FD0   3750          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
000025C8 E55C F334 0000          00000334   3751          CHSI  820(15),0
000025CE 4780 C190               00002708   3752          BE    @L704
                                            3753 * ***                   if (setsockopt(rktrans->rktrans_s, 0xffff, 0x1\
                                            3754 * 001,
                                            3755 * ***                                  (void *)&rkb->rkb_rk->rk_conf.s\
                                            3756 * ocket_sndbuf_size,
                                            3757 * ***                                  sizeof(rkb->rkb_rk->rk_conf.
000025D2 E3F0 2000 0014          00000000   3758          LGF   15,0(0,2)
000025D8 E3F0 D1B0 0024          000001B0   3759          STG   15,432(0,13)
000025DE C0FF 0000 FFFF                     3760          LLILF 15,X'0000FFFF' ; 65535
000025E4 E3F0 D1B8 0024          000001B8   3761          STG   15,440(0,13)
000025EA E548 D1C0 1001          000001C0   3762          MVGHI 448(13),4097
000025F0 E3F0 3FD0 0004          00000FD0   3763          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
000025F6 41F0 F334               00000334   3764          LA    15,820(0,15)
000025FA E3F0 D1C8 0024          000001C8   3765          STG   15,456(0,13)
00002600 E548 D1D0 0004          000001D0   3766          MVGHI 464(13),4
00002606 4110 D1B0               000001B0   3767          LA    1,432(0,13)
0000260A E3F0 C418 0004          00002990   3768          LG    15,@lit_1584_131 ; setsockopt
00002610                                    3769 @@gen_label180 DS    0H
00002610 05EF                               3770          BALR  14,15
00002612                                    3771 @@gen_label181 DS    0H
00002612 A7FE FFFF               0000FFFF   3772          CHI   15,-1
00002616 4770 C190               00002708   3773          BNE   @L704
                                            3774 * ***                           do { char _logname[256]; mtx_lock(&(rk\
                                            3775 * b)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof\
                                            3776 * (_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(r\
                                            3777 * kb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 4, 0x0, "SNDBUF", "Fa\
                                                                                                                           Page   79 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3778 * iled to set socket send " "buffer size to %i: %s", rkb->rkb_rk->rk_c\
                                            3779 * onf.socket_sndbuf_size, strerror((* __error()))); } while (0);
0000261A                                    3780 @L706    DS    0H
0000261A A749 1638               00001638   3781          LGHI  4,5688      ; 5688
0000261E 41F4 3000               00000000   3782          LA    15,0(4,3)
00002622 E3F0 D1B0 0024          000001B0   3783          STG   15,432(0,13)
00002628 4110 D1B0               000001B0   3784          LA    1,432(0,13)
0000262C E3F0 C420 0004          00002998   3785          LG    15,@lit_1584_133 ; mtx_lock
00002632                                    3786 @@gen_label183 DS    0H
00002632 05EF                               3787          BALR  14,15
00002634                                    3788 @@gen_label184 DS    0H
00002634 41F0 D0AC               000000AC   3789          LA    15,172(0,13)
00002638 E3F0 D1B0 0024          000001B0   3790          STG   15,432(0,13)
0000263E A7F9 1630               00001630   3791          LGHI  15,5680     ; 5680
00002642 E3FF 3000 0004          00000000   3792          LG    15,0(15,3)
00002648 E3F0 D1B8 0024          000001B8   3793          STG   15,440(0,13)
0000264E E548 D1C0 0100          000001C0   3794          MVGHI 448(13),256
00002654 4110 D1B0               000001B0   3795          LA    1,432(0,13)
00002658 E3F0 C428 0004          000029A0   3796          LG    15,@lit_1584_135 ; rd_strlcpy
0000265E                                    3797 @@gen_label185 DS    0H
0000265E 05EF                               3798          BALR  14,15
00002660                                    3799 @@gen_label186 DS    0H
00002660 41F4 3000               00000000   3800          LA    15,0(4,3)
00002664 E3F0 D1B0 0024          000001B0   3801          STG   15,432(0,13)
0000266A 4110 D1B0               000001B0   3802          LA    1,432(0,13)
0000266E E3F0 C430 0004          000029A8   3803          LG    15,@lit_1584_137 ; mtx_unlock
00002674                                    3804 @@gen_label187 DS    0H
00002674 05EF                               3805          BALR  14,15
00002676                                    3806 @@gen_label188 DS    0H
00002676 E3F0 C438 0004          000029B0   3807          LG    15,@lit_1584_138 ; __error
0000267C                                    3808 @@gen_label189 DS    0H
0000267C 05EF                               3809          BALR  14,15
0000267E                                    3810 @@gen_label190 DS    0H
0000267E 58F0 F000               00000000   3811          L     15,0(0,15)
00002682 B914 00FF                          3812          LGFR  15,15
00002686 E3F0 D1B0 0024          000001B0   3813          STG   15,432(0,13)
0000268C 4110 D1B0               000001B0   3814          LA    1,432(0,13)
00002690 E3F0 C440 0004          000029B8   3815          LG    15,@lit_1584_139 ; strerror
00002696                                    3816 @@gen_label191 DS    0H
00002696 05EF                               3817          BALR  14,15
00002698                                    3818 @@gen_label192 DS    0H
00002698 E310 3FD0 0004          00000FD0   3819          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
0000269E 4110 1210               00000210   3820          LA    1,528(0,1)
000026A2 E310 D1B0 0024          000001B0   3821          STG   1,432(0,13)
000026A8 E310 3FD0 0004          00000FD0   3822          LG    1,4048(0,3)
000026AE E310 D1B8 0024          000001B8   3823          STG   1,440(0,13)
000026B4 4110 D0AC               000000AC   3824          LA    1,172(0,13)
000026B8 E310 D1C0 0024          000001C0   3825          STG   1,448(0,13)
000026BE E548 D1C8 0004          000001C8   3826          MVGHI 456(13),4
000026C4 D707 D1D0 D1D0 000001D0 000001D0   3827          XC    464(8,13),464(13)
000026CA E310 C450 0004          000029C8   3828          LG    1,@lit_1584_140
000026D0 4140 11FC               000001FC   3829          LA    4,508(0,1)
                                                                                                                           Page   80 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000026D4 E340 D1D8 0024          000001D8   3830          STG   4,472(0,13)
000026DA 4110 1204               00000204   3831          LA    1,516(0,1)
000026DE E310 D1E0 0024          000001E0   3832          STG   1,480(0,13)
000026E4 E310 3FD0 0004          00000FD0   3833          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
000026EA E310 1334 0014          00000334   3834          LGF   1,820(0,1)
000026F0 E310 D1E8 0024          000001E8   3835          STG   1,488(0,13)
000026F6 E3F0 D1F0 0024          000001F0   3836          STG   15,496(0,13)
000026FC 4110 D1B0               000001B0   3837          LA    1,432(0,13)
00002700 E3F0 C448 0004          000029C0   3838          LG    15,@lit_1584_141 ; rd_kafka_log0
00002706                                    3839 @@gen_label193 DS    0H
00002706 05EF                               3840          BALR  14,15
00002708                                    3841 @@gen_label194 DS    0H
                                            3842 * ***
                                            3843 * ***
                                            3844 * ***
                                            3845 * ***
                                            3846 * ***           }
00002708                                    3847 @L705    DS    0H
00002708                                    3848 @L704    DS    0H
                                            3849 * ***
                                            3850 * ***           if (rkb->rkb_rk->rk_conf.socket_rcvbuf_size != 0) {
00002708 E3F0 3FD0 0004          00000FD0   3851          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
0000270E E55C F338 0000          00000338   3852          CHSI  824(15),0
00002714 4780 C2D6               0000284E   3853          BE    @L709
                                            3854 * ***                   if (setsockopt(rktrans->rktrans_s, 0xffff, 0x1\
                                            3855 * 002,
                                            3856 * ***                                  (void *)&rkb->rkb_rk->rk_conf.s\
                                            3857 * ocket_rcvbuf_size,
                                            3858 * ***                                  sizeof(rkb->rkb_rk->rk_conf.
00002718 E3F0 2000 0014          00000000   3859          LGF   15,0(0,2)
0000271E E3F0 D1B0 0024          000001B0   3860          STG   15,432(0,13)
00002724 C0FF 0000 FFFF                     3861          LLILF 15,X'0000FFFF' ; 65535
0000272A E3F0 D1B8 0024          000001B8   3862          STG   15,440(0,13)
00002730 E548 D1C0 1002          000001C0   3863          MVGHI 448(13),4098
00002736 E3F0 3FD0 0004          00000FD0   3864          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
0000273C 41F0 F338               00000338   3865          LA    15,824(0,15)
00002740 E3F0 D1C8 0024          000001C8   3866          STG   15,456(0,13)
00002746 E548 D1D0 0004          000001D0   3867          MVGHI 464(13),4
0000274C 4110 D1B0               000001B0   3868          LA    1,432(0,13)
00002750 E3F0 C418 0004          00002990   3869          LG    15,@lit_1584_131 ; setsockopt
00002756                                    3870 @@gen_label196 DS    0H
00002756 05EF                               3871          BALR  14,15
00002758                                    3872 @@gen_label197 DS    0H
00002758 A7FE FFFF               0000FFFF   3873          CHI   15,-1
0000275C 4770 C2D6               0000284E   3874          BNE   @L709
                                            3875 * ***                           do { char _logname[256]; mtx_lock(&(rk\
                                            3876 * b)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof\
                                            3877 * (_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(r\
                                            3878 * kb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 4, 0x0, "RCVBUF", "Fa\
                                            3879 * iled to set socket receive " "buffer size to %i: %s", rkb->rkb_rk->r\
                                            3880 * k_conf.socket_rcvbuf_size, strerror((* __error()))); } while (0);
00002760                                    3881 @L711    DS    0H
                                                                                                                           Page   81 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002760 A749 1638               00001638   3882          LGHI  4,5688      ; 5688
00002764 41F4 3000               00000000   3883          LA    15,0(4,3)
00002768 E3F0 D1B0 0024          000001B0   3884          STG   15,432(0,13)
0000276E 4110 D1B0               000001B0   3885          LA    1,432(0,13)
00002772 E3F0 C420 0004          00002998   3886          LG    15,@lit_1584_133 ; mtx_lock
00002778                                    3887 @@gen_label199 DS    0H
00002778 05EF                               3888          BALR  14,15
0000277A                                    3889 @@gen_label200 DS    0H
0000277A 41F0 D0AC               000000AC   3890          LA    15,172(0,13)
0000277E E3F0 D1B0 0024          000001B0   3891          STG   15,432(0,13)
00002784 A7F9 1630               00001630   3892          LGHI  15,5680     ; 5680
00002788 E3FF 3000 0004          00000000   3893          LG    15,0(15,3)
0000278E E3F0 D1B8 0024          000001B8   3894          STG   15,440(0,13)
00002794 E548 D1C0 0100          000001C0   3895          MVGHI 448(13),256
0000279A 4110 D1B0               000001B0   3896          LA    1,432(0,13)
0000279E E3F0 C428 0004          000029A0   3897          LG    15,@lit_1584_135 ; rd_strlcpy
000027A4                                    3898 @@gen_label201 DS    0H
000027A4 05EF                               3899          BALR  14,15
000027A6                                    3900 @@gen_label202 DS    0H
000027A6 41F4 3000               00000000   3901          LA    15,0(4,3)
000027AA E3F0 D1B0 0024          000001B0   3902          STG   15,432(0,13)
000027B0 4110 D1B0               000001B0   3903          LA    1,432(0,13)
000027B4 E3F0 C430 0004          000029A8   3904          LG    15,@lit_1584_137 ; mtx_unlock
000027BA                                    3905 @@gen_label203 DS    0H
000027BA 05EF                               3906          BALR  14,15
000027BC                                    3907 @@gen_label204 DS    0H
000027BC E3F0 C438 0004          000029B0   3908          LG    15,@lit_1584_138 ; __error
000027C2                                    3909 @@gen_label205 DS    0H
000027C2 05EF                               3910          BALR  14,15
000027C4                                    3911 @@gen_label206 DS    0H
000027C4 58F0 F000               00000000   3912          L     15,0(0,15)
000027C8 B914 00FF                          3913          LGFR  15,15
000027CC E3F0 D1B0 0024          000001B0   3914          STG   15,432(0,13)
000027D2 4110 D1B0               000001B0   3915          LA    1,432(0,13)
000027D6 E3F0 C440 0004          000029B8   3916          LG    15,@lit_1584_139 ; strerror
000027DC                                    3917 @@gen_label207 DS    0H
000027DC 05EF                               3918          BALR  14,15
000027DE                                    3919 @@gen_label208 DS    0H
000027DE E310 3FD0 0004          00000FD0   3920          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
000027E4 4110 1210               00000210   3921          LA    1,528(0,1)
000027E8 E310 D1B0 0024          000001B0   3922          STG   1,432(0,13)
000027EE E310 3FD0 0004          00000FD0   3923          LG    1,4048(0,3)
000027F4 E310 D1B8 0024          000001B8   3924          STG   1,440(0,13)
000027FA 4110 D0AC               000000AC   3925          LA    1,172(0,13)
000027FE E310 D1C0 0024          000001C0   3926          STG   1,448(0,13)
00002804 E548 D1C8 0004          000001C8   3927          MVGHI 456(13),4
0000280A D707 D1D0 D1D0 000001D0 000001D0   3928          XC    464(8,13),464(13)
00002810 E310 C450 0004          000029C8   3929          LG    1,@lit_1584_140
00002816 4140 1234               00000234   3930          LA    4,564(0,1)
0000281A E340 D1D8 0024          000001D8   3931          STG   4,472(0,13)
00002820 4110 123C               0000023C   3932          LA    1,572(0,1)
00002824 E310 D1E0 0024          000001E0   3933          STG   1,480(0,13)
                                                                                                                           Page   82 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000282A E310 3FD0 0004          00000FD0   3934          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00002830 E310 1338 0014          00000338   3935          LGF   1,824(0,1)
00002836 E310 D1E8 0024          000001E8   3936          STG   1,488(0,13)
0000283C E3F0 D1F0 0024          000001F0   3937          STG   15,496(0,13)
00002842 4110 D1B0               000001B0   3938          LA    1,432(0,13)
00002846 E3F0 C448 0004          000029C0   3939          LG    15,@lit_1584_141 ; rd_kafka_log0
0000284C                                    3940 @@gen_label209 DS    0H
0000284C 05EF                               3941          BALR  14,15
0000284E                                    3942 @@gen_label210 DS    0H
                                            3943 * ***
                                            3944 * ***
                                            3945 * ***
                                            3946 * ***
                                            3947 * ***           }
0000284E                                    3948 @L710    DS    0H
0000284E                                    3949 @L709    DS    0H
                                            3950 * ***
                                            3951 * ***
                                            3952 * ***
                                            3953 * ***
                                            3954 * ***           slen = sizeof(rktrans->rktrans_rcvbuf_size);
0000284E E54C D0A8 0008          000000A8   3955          MVHI  168(13),8   ; slen
                                            3956 * ***           if (getsockopt(rktrans->rktrans_s, 0xffff, 0x1002,
                                            3957 * ***                          (void *)&rktrans->rktrans_rcvbuf_size,
                                            3958 * ***                          &slen) == (-1)) {
00002854 E3F0 2000 0014          00000000   3959          LGF   15,0(0,2)
0000285A E3F0 D1B0 0024          000001B0   3960          STG   15,432(0,13)
00002860 C0FF 0000 FFFF                     3961          LLILF 15,X'0000FFFF' ; 65535
00002866 E3F0 D1B8 0024          000001B8   3962          STG   15,440(0,13)
0000286C E548 D1C0 1002          000001C0   3963          MVGHI 448(13),4098
00002872 41F0 20A0               000000A0   3964          LA    15,160(0,2)
00002876 E3F0 D1C8 0024          000001C8   3965          STG   15,456(0,13)
0000287C 41F0 D0A8               000000A8   3966          LA    15,168(0,13)
00002880 E3F0 D1D0 0024          000001D0   3967          STG   15,464(0,13)
00002886 4110 D1B0               000001B0   3968          LA    1,432(0,13)
0000288A E3F0 C458 0004          000029D0   3969          LG    15,@lit_1584_155 ; getsockopt
00002890                                    3970 @@gen_label211 DS    0H
00002890 05EF                               3971          BALR  14,15
00002892                                    3972 @@gen_label212 DS    0H
00002892 A7FE FFFF               0000FFFF   3973          CHI   15,-1
00002896 4770 C460               000029D8   3974          BNE   @L714
                                            3975 * ***                   do { char _logname[256]; mtx_lock(&(rkb)->rkb_\
                                            3976 * logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_lognam\
                                            3977 * e)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb\
                                            3978 * _rk->rk_conf, (rkb)->rkb_rk, _logname, 4, 0x0, "RCVBUF", "Failed to \
                                            3979 * get socket receive " "buffer size: %s: assuming 1MB", strerror((* __\
                                            3980 * error()))); } while (0);
0000289A                                    3981 @L715    DS    0H
0000289A A749 1638               00001638   3982          LGHI  4,5688      ; 5688
0000289E 41F4 3000               00000000   3983          LA    15,0(4,3)
000028A2 E3F0 D1B0 0024          000001B0   3984          STG   15,432(0,13)
000028A8 4110 D1B0               000001B0   3985          LA    1,432(0,13)
                                                                                                                           Page   83 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000028AC E3F0 C420 0004          00002998   3986          LG    15,@lit_1584_133 ; mtx_lock
000028B2                                    3987 @@gen_label214 DS    0H
000028B2 05EF                               3988          BALR  14,15
000028B4                                    3989 @@gen_label215 DS    0H
000028B4 41F0 D0AC               000000AC   3990          LA    15,172(0,13)
000028B8 E3F0 D1B0 0024          000001B0   3991          STG   15,432(0,13)
000028BE A7F9 1630               00001630   3992          LGHI  15,5680     ; 5680
000028C2 E3FF 3000 0004          00000000   3993          LG    15,0(15,3)
000028C8 E3F0 D1B8 0024          000001B8   3994          STG   15,440(0,13)
000028CE E548 D1C0 0100          000001C0   3995          MVGHI 448(13),256
000028D4 4110 D1B0               000001B0   3996          LA    1,432(0,13)
000028D8 E3F0 C428 0004          000029A0   3997          LG    15,@lit_1584_135 ; rd_strlcpy
000028DE                                    3998 @@gen_label216 DS    0H
000028DE 05EF                               3999          BALR  14,15
000028E0                                    4000 @@gen_label217 DS    0H
000028E0 41F4 3000               00000000   4001          LA    15,0(4,3)
000028E4 E3F0 D1B0 0024          000001B0   4002          STG   15,432(0,13)
000028EA 4110 D1B0               000001B0   4003          LA    1,432(0,13)
000028EE E3F0 C430 0004          000029A8   4004          LG    15,@lit_1584_137 ; mtx_unlock
000028F4                                    4005 @@gen_label218 DS    0H
000028F4 05EF                               4006          BALR  14,15
000028F6                                    4007 @@gen_label219 DS    0H
000028F6 E3F0 C438 0004          000029B0   4008          LG    15,@lit_1584_138 ; __error
000028FC                                    4009 @@gen_label220 DS    0H
000028FC 05EF                               4010          BALR  14,15
000028FE                                    4011 @@gen_label221 DS    0H
000028FE 58F0 F000               00000000   4012          L     15,0(0,15)
00002902 B914 00FF                          4013          LGFR  15,15
00002906 E3F0 D1B0 0024          000001B0   4014          STG   15,432(0,13)
0000290C 4110 D1B0               000001B0   4015          LA    1,432(0,13)
00002910 E3F0 C440 0004          000029B8   4016          LG    15,@lit_1584_139 ; strerror
00002916                                    4017 @@gen_label222 DS    0H
00002916 05EF                               4018          BALR  14,15
00002918                                    4019 @@gen_label223 DS    0H
00002918 E310 3FD0 0004          00000FD0   4020          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
0000291E 4110 1210               00000210   4021          LA    1,528(0,1)
00002922 E310 D1B0 0024          000001B0   4022          STG   1,432(0,13)
00002928 E310 3FD0 0004          00000FD0   4023          LG    1,4048(0,3)
0000292E E310 D1B8 0024          000001B8   4024          STG   1,440(0,13)
00002934 4110 D0AC               000000AC   4025          LA    1,172(0,13)
00002938 E310 D1C0 0024          000001C0   4026          STG   1,448(0,13)
0000293E E548 D1C8 0004          000001C8   4027          MVGHI 456(13),4
00002944 D707 D1D0 D1D0 000001D0 000001D0   4028          XC    464(8,13),464(13)
0000294A E310 C450 0004          000029C8   4029          LG    1,@lit_1584_140
00002950 4140 1234               00000234   4030          LA    4,564(0,1)
00002954 E340 D1D8 0024          000001D8   4031          STG   4,472(0,13)
0000295A 4110 1270               00000270   4032          LA    1,624(0,1)
0000295E E310 D1E0 0024          000001E0   4033          STG   1,480(0,13)
00002964 E3F0 D1E8 0024          000001E8   4034          STG   15,488(0,13)
0000296A 4110 D1B0               000001B0   4035          LA    1,432(0,13)
0000296E E3F0 C448 0004          000029C0   4036          LG    15,@lit_1584_141 ; rd_kafka_log0
00002974                                    4037 @@gen_label224 DS    0H
                                                                                                                           Page   84 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002974 05EF                               4038          BALR  14,15
00002976                                    4039 @@gen_label225 DS    0H
                                            4040 * ***
                                            4041 * ***
                                            4042 * ***
                                            4043 * ***                   rktrans->rktrans_rcvbuf_size = 1024*1024;
00002976 C0FF 0010 0000                     4044          LLILF 15,X'00100000' ; 1048576
0000297C E3F0 20A0 0024          000000A0   4045          STG   15,160(0,2) ; offset of rktrans_rcvbuf_size in rd_kafka_*
                                                                transport_s
                                            4046 * ***           } else if (rktrans->rktrans_rcvbuf_size < 1024 * 64)
00002982 47F0 C47C               000029F4   4047          B     @L718
00002988                                    4048          DS    0D
00002988 000001F8                           4049 @FRAMESIZE_1584 DC F'504'
0000298C 00000000
00002990 0000000000000000                   4050 @lit_1584_131 DC AD(setsockopt)
00002998 0000000000000000                   4051 @lit_1584_133 DC AD(mtx_lock)
000029A0 0000000000000D50                   4052 @lit_1584_135 DC AD(rd_strlcpy)
000029A8 0000000000000000                   4053 @lit_1584_137 DC AD(mtx_unlock)
000029B0 0000000000000000                   4054 @lit_1584_138 DC AD(__error)
000029B8 0000000000000000                   4055 @lit_1584_139 DC AD(strerror)
000029C0 0000000000000000                   4056 @lit_1584_141 DC AD(rd_kafka_log0)
000029C8 00000000000048E4                   4057 @lit_1584_140 DC AD(@strings@)
000029D0 0000000000000000                   4058 @lit_1584_155 DC AD(getsockopt)
000029D8                                    4059 @L714    DS    0H
000029D8 E3F0 20A0 0004          000000A0   4060          LG    15,160(0,2)
000029DE C2FE 0001 0000                     4061          CLGFI 15,X'00010000'
000029E4 47B0 C47C               000029F4   4062          BNL   @L718
                                            4063 * ***                   rktrans->rktrans_rcvbuf_size = 1024*64;
000029E8 C0FF 0001 0000                     4064          LLILF 15,X'00010000' ; 65536
000029EE E3F0 20A0 0024          000000A0   4065          STG   15,160(0,2) ; offset of rktrans_rcvbuf_size in rd_kafka_*
                                                                transport_s
000029F4                                    4066 @L719    DS    0H
                                            4067 * ***
                                            4068 * ***           slen = sizeof(rktrans->rktrans_sndbuf_size);
000029F4                                    4069 @L718    DS    0H
000029F4 E54C D0A8 0008          000000A8   4070          MVHI  168(13),8   ; slen
                                            4071 * ***           if (getsockopt(rktrans->rktrans_s, 0xffff, 0x1001,
                                            4072 * ***                          (void *)&rktrans->rktrans_sndbuf_size,
                                            4073 * ***                          &slen) == (-1)) {
000029FA E3F0 2000 0014          00000000   4074          LGF   15,0(0,2)
00002A00 E3F0 D1B0 0024          000001B0   4075          STG   15,432(0,13)
00002A06 C0FF 0000 FFFF                     4076          LLILF 15,X'0000FFFF' ; 65535
00002A0C E3F0 D1B8 0024          000001B8   4077          STG   15,440(0,13)
00002A12 E548 D1C0 1001          000001C0   4078          MVGHI 448(13),4097
00002A18 41F0 20A8               000000A8   4079          LA    15,168(0,2)
00002A1C E3F0 D1C8 0024          000001C8   4080          STG   15,456(0,13)
00002A22 41F0 D0A8               000000A8   4081          LA    15,168(0,13)
00002A26 E3F0 D1D0 0024          000001D0   4082          STG   15,464(0,13)
00002A2C 4110 D1B0               000001B0   4083          LA    1,432(0,13)
00002A30 E3F0 C458 0004          000029D0   4084          LG    15,@lit_1584_155 ; getsockopt
00002A36                                    4085 @@gen_label227 DS    0H
00002A36 05EF                               4086          BALR  14,15
                                                                                                                           Page   85 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002A38                                    4087 @@gen_label228 DS    0H
00002A38 A7FE FFFF               0000FFFF   4088          CHI   15,-1
00002A3C 4770 C5B4               00002B2C   4089          BNE   @L720
                                            4090 * ***                   do { char _logname[256]; mtx_lock(&(rkb)->rkb_\
                                            4091 * logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_lognam\
                                            4092 * e)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb\
                                            4093 * _rk->rk_conf, (rkb)->rkb_rk, _logname, 4, 0x0, "RCVBUF", "Failed to \
                                            4094 * get socket send " "buffer size: %s: assuming 1MB", strerror((* __err\
                                            4095 * or()))); } while (0);
00002A40                                    4096 @L721    DS    0H
00002A40 A749 1638               00001638   4097          LGHI  4,5688      ; 5688
00002A44 41F4 3000               00000000   4098          LA    15,0(4,3)
00002A48 E3F0 D1B0 0024          000001B0   4099          STG   15,432(0,13)
00002A4E 4110 D1B0               000001B0   4100          LA    1,432(0,13)
00002A52 E3F0 C420 0004          00002998   4101          LG    15,@lit_1584_133 ; mtx_lock
00002A58                                    4102 @@gen_label230 DS    0H
00002A58 05EF                               4103          BALR  14,15
00002A5A                                    4104 @@gen_label231 DS    0H
00002A5A 41F0 D0AC               000000AC   4105          LA    15,172(0,13)
00002A5E E3F0 D1B0 0024          000001B0   4106          STG   15,432(0,13)
00002A64 A7F9 1630               00001630   4107          LGHI  15,5680     ; 5680
00002A68 E3FF 3000 0004          00000000   4108          LG    15,0(15,3)
00002A6E E3F0 D1B8 0024          000001B8   4109          STG   15,440(0,13)
00002A74 E548 D1C0 0100          000001C0   4110          MVGHI 448(13),256
00002A7A 4110 D1B0               000001B0   4111          LA    1,432(0,13)
00002A7E E3F0 C428 0004          000029A0   4112          LG    15,@lit_1584_135 ; rd_strlcpy
00002A84                                    4113 @@gen_label232 DS    0H
00002A84 05EF                               4114          BALR  14,15
00002A86                                    4115 @@gen_label233 DS    0H
00002A86 41F4 3000               00000000   4116          LA    15,0(4,3)
00002A8A E3F0 D1B0 0024          000001B0   4117          STG   15,432(0,13)
00002A90 4110 D1B0               000001B0   4118          LA    1,432(0,13)
00002A94 E3F0 C430 0004          000029A8   4119          LG    15,@lit_1584_137 ; mtx_unlock
00002A9A                                    4120 @@gen_label234 DS    0H
00002A9A 05EF                               4121          BALR  14,15
00002A9C                                    4122 @@gen_label235 DS    0H
00002A9C E3F0 C438 0004          000029B0   4123          LG    15,@lit_1584_138 ; __error
00002AA2                                    4124 @@gen_label236 DS    0H
00002AA2 05EF                               4125          BALR  14,15
00002AA4                                    4126 @@gen_label237 DS    0H
00002AA4 58F0 F000               00000000   4127          L     15,0(0,15)
00002AA8 B914 00FF                          4128          LGFR  15,15
00002AAC E3F0 D1B0 0024          000001B0   4129          STG   15,432(0,13)
00002AB2 4110 D1B0               000001B0   4130          LA    1,432(0,13)
00002AB6 E3F0 C440 0004          000029B8   4131          LG    15,@lit_1584_139 ; strerror
00002ABC                                    4132 @@gen_label238 DS    0H
00002ABC 05EF                               4133          BALR  14,15
00002ABE                                    4134 @@gen_label239 DS    0H
00002ABE E310 3FD0 0004          00000FD0   4135          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00002AC4 4110 1210               00000210   4136          LA    1,528(0,1)
00002AC8 E310 D1B0 0024          000001B0   4137          STG   1,432(0,13)
00002ACE E310 3FD0 0004          00000FD0   4138          LG    1,4048(0,3)
                                                                                                                           Page   86 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002AD4 E310 D1B8 0024          000001B8   4139          STG   1,440(0,13)
00002ADA 4110 D0AC               000000AC   4140          LA    1,172(0,13)
00002ADE E310 D1C0 0024          000001C0   4141          STG   1,448(0,13)
00002AE4 E548 D1C8 0004          000001C8   4142          MVGHI 456(13),4
00002AEA D707 D1D0 D1D0 000001D0 000001D0   4143          XC    464(8,13),464(13)
00002AF0 E310 C450 0004          000029C8   4144          LG    1,@lit_1584_140
00002AF6 4140 1234               00000234   4145          LA    4,564(0,1)
00002AFA E340 D1D8 0024          000001D8   4146          STG   4,472(0,13)
00002B00 4110 12AC               000002AC   4147          LA    1,684(0,1)
00002B04 E310 D1E0 0024          000001E0   4148          STG   1,480(0,13)
00002B0A E3F0 D1E8 0024          000001E8   4149          STG   15,488(0,13)
00002B10 4110 D1B0               000001B0   4150          LA    1,432(0,13)
00002B14 E3F0 C448 0004          000029C0   4151          LG    15,@lit_1584_141 ; rd_kafka_log0
00002B1A                                    4152 @@gen_label240 DS    0H
00002B1A 05EF                               4153          BALR  14,15
00002B1C                                    4154 @@gen_label241 DS    0H
                                            4155 * ***
                                            4156 * ***
                                            4157 * ***
                                            4158 * ***                   rktrans->rktrans_sndbuf_size = 1024*1024;
00002B1C C0FF 0010 0000                     4159          LLILF 15,X'00100000' ; 1048576
00002B22 E3F0 20A8 0024          000000A8   4160          STG   15,168(0,2) ; offset of rktrans_sndbuf_size in rd_kafka_*
                                                                transport_s
                                            4161 * ***           } else if (rktrans->rktrans_sndbuf_size < 1024 * 64)
00002B28 47F0 C5D0               00002B48   4162          B     @L724
00002B2C                                    4163 @L720    DS    0H
00002B2C E3F0 20A8 0004          000000A8   4164          LG    15,168(0,2)
00002B32 C2FE 0001 0000                     4165          CLGFI 15,X'00010000'
00002B38 47B0 C5D0               00002B48   4166          BNL   @L724
                                            4167 * ***                   rktrans->rktrans_sndbuf_size = 1024*64;
00002B3C C0FF 0001 0000                     4168          LLILF 15,X'00010000' ; 65536
00002B42 E3F0 20A8 0024          000000A8   4169          STG   15,168(0,2) ; offset of rktrans_sndbuf_size in rd_kafka_*
                                                                transport_s
00002B48                                    4170 @L725    DS    0H
                                            4171 * ***
                                            4172 * ***
                                            4173 * ***
                                            4174 * ***           if (rkb->rkb_rk->rk_conf.socket_nagle_disable) {
00002B48                                    4175 @L724    DS    0H
00002B48 E3F0 3FD0 0004          00000FD0   4176          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00002B4E E3F0 F340 0012          00000340   4177          LT    15,832(0,15) ; offset of socket_nagle_disable in rd_kafk*
                                                                a_conf_s
00002B54 4780 C6FE               00002C76   4178          BZ    @L726
                                            4179 * ***                   int one = 1;
00002B58 E54C D0AC 0001          000000AC   4180          MVHI  172(13),1   ; one
                                            4181 * ***                   if (setsockopt(rktrans->rktrans_s, 6, 0x01,
                                            4182 * ***                                  (void *)&one, sizeof(one)) == (\
                                            4183 * -1))
00002B5E E3F0 2000 0014          00000000   4184          LGF   15,0(0,2)
00002B64 E3F0 D1B0 0024          000001B0   4185          STG   15,432(0,13)
00002B6A E548 D1B8 0006          000001B8   4186          MVGHI 440(13),6
00002B70 E548 D1C0 0001          000001C0   4187          MVGHI 448(13),1
                                                                                                                           Page   87 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002B76 41F0 D0AC               000000AC   4188          LA    15,172(0,13)
00002B7A E3F0 D1C8 0024          000001C8   4189          STG   15,456(0,13)
00002B80 E548 D1D0 0004          000001D0   4190          MVGHI 464(13),4
00002B86 4110 D1B0               000001B0   4191          LA    1,432(0,13)
00002B8A E3F0 C418 0004          00002990   4192          LG    15,@lit_1584_131 ; setsockopt
00002B90                                    4193 @@gen_label244 DS    0H
00002B90 05EF                               4194          BALR  14,15
00002B92                                    4195 @@gen_label245 DS    0H
00002B92 A7FE FFFF               0000FFFF   4196          CHI   15,-1
00002B96 4770 C6FE               00002C76   4197          BNE   @L727
                                            4198 * ***                           do { char _logname[256]; mtx_lock(&(rk\
                                            4199 * b)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof\
                                            4200 * (_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(r\
                                            4201 * kb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 4, 0x0, "NAGLE", "Fai\
                                            4202 * led to disable Nagle (TCP_NODELAY) " "on socket: %s", strerror((* __\
                                            4203 * error()))); } while (0);
00002B9A                                    4204 @L728    DS    0H
00002B9A A729 1638               00001638   4205          LGHI  2,5688      ; 5688
00002B9E 41F2 3000               00000000   4206          LA    15,0(2,3)
00002BA2 E3F0 D1B0 0024          000001B0   4207          STG   15,432(0,13)
00002BA8 4110 D1B0               000001B0   4208          LA    1,432(0,13)
00002BAC E3F0 C420 0004          00002998   4209          LG    15,@lit_1584_133 ; mtx_lock
00002BB2                                    4210 @@gen_label247 DS    0H
00002BB2 05EF                               4211          BALR  14,15
00002BB4                                    4212 @@gen_label248 DS    0H
00002BB4 41F0 D0B0               000000B0   4213          LA    15,176(0,13)
00002BB8 E3F0 D1B0 0024          000001B0   4214          STG   15,432(0,13)
00002BBE A7F9 1630               00001630   4215          LGHI  15,5680     ; 5680
00002BC2 E3FF 3000 0004          00000000   4216          LG    15,0(15,3)
00002BC8 E3F0 D1B8 0024          000001B8   4217          STG   15,440(0,13)
00002BCE E548 D1C0 0100          000001C0   4218          MVGHI 448(13),256
00002BD4 4110 D1B0               000001B0   4219          LA    1,432(0,13)
00002BD8 E3F0 C428 0004          000029A0   4220          LG    15,@lit_1584_135 ; rd_strlcpy
00002BDE                                    4221 @@gen_label249 DS    0H
00002BDE 05EF                               4222          BALR  14,15
00002BE0                                    4223 @@gen_label250 DS    0H
00002BE0 41F2 3000               00000000   4224          LA    15,0(2,3)
00002BE4 E3F0 D1B0 0024          000001B0   4225          STG   15,432(0,13)
00002BEA 4110 D1B0               000001B0   4226          LA    1,432(0,13)
00002BEE E3F0 C430 0004          000029A8   4227          LG    15,@lit_1584_137 ; mtx_unlock
00002BF4                                    4228 @@gen_label251 DS    0H
00002BF4 05EF                               4229          BALR  14,15
00002BF6                                    4230 @@gen_label252 DS    0H
00002BF6 E3F0 C438 0004          000029B0   4231          LG    15,@lit_1584_138 ; __error
00002BFC                                    4232 @@gen_label253 DS    0H
00002BFC 05EF                               4233          BALR  14,15
00002BFE                                    4234 @@gen_label254 DS    0H
00002BFE 58F0 F000               00000000   4235          L     15,0(0,15)
00002C02 B914 00FF                          4236          LGFR  15,15
00002C06 E3F0 D1B0 0024          000001B0   4237          STG   15,432(0,13)
00002C0C 4110 D1B0               000001B0   4238          LA    1,432(0,13)
00002C10 E3F0 C440 0004          000029B8   4239          LG    15,@lit_1584_139 ; strerror
                                                                                                                           Page   88 
  Active Usings: @REGION_1584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002C16                                    4240 @@gen_label255 DS    0H
00002C16 05EF                               4241          BALR  14,15
00002C18                                    4242 @@gen_label256 DS    0H
00002C18 E310 3FD0 0004          00000FD0   4243          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00002C1E 4110 1210               00000210   4244          LA    1,528(0,1)
00002C22 E310 D1B0 0024          000001B0   4245          STG   1,432(0,13)
00002C28 E310 3FD0 0004          00000FD0   4246          LG    1,4048(0,3)
00002C2E E310 D1B8 0024          000001B8   4247          STG   1,440(0,13)
00002C34 4110 D0B0               000000B0   4248          LA    1,176(0,13)
00002C38 E310 D1C0 0024          000001C0   4249          STG   1,448(0,13)
00002C3E E548 D1C8 0004          000001C8   4250          MVGHI 456(13),4
00002C44 D707 D1D0 D1D0 000001D0 000001D0   4251          XC    464(8,13),464(13)
00002C4A E310 C450 0004          000029C8   4252          LG    1,@lit_1584_140
00002C50 4120 12E4               000002E4   4253          LA    2,740(0,1)
00002C54 E320 D1D8 0024          000001D8   4254          STG   2,472(0,13)
00002C5A 4110 12EA               000002EA   4255          LA    1,746(0,1)
00002C5E E310 D1E0 0024          000001E0   4256          STG   1,480(0,13)
00002C64 E3F0 D1E8 0024          000001E8   4257          STG   15,488(0,13)
00002C6A 4110 D1B0               000001B0   4258          LA    1,432(0,13)
00002C6E E3F0 C448 0004          000029C0   4259          LG    15,@lit_1584_141 ; rd_kafka_log0
00002C74                                    4260 @@gen_label257 DS    0H
00002C74 05EF                               4261          BALR  14,15
00002C76                                    4262 @@gen_label258 DS    0H
                                            4263 * ***
                                            4264 * ***
                                            4265 * ***
                                            4266 * ***           }
00002C76                                    4267 @L727    DS    0H
00002C76                                    4268 @L726    DS    0H
                                            4269 * ***
                                            4270 * ***   }
00002C76                                    4271 @ret_lab_1584 DS 0H
                                            4272 * * **** Start of Epilogue
                                            4273          DCCEPIL
00002C76                                    4274+         ds 0h                                                          01-DCCEP
                                            4275+* Epilog
00002C76 D707 D088 D088 00000088 00000088   4276+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002C7C E3D0 D080 0004          00000080   4277+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C82 E3C0 D090 0004          00000090   4278+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C88 E3B0 C018 0004          00000018   4279+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002C8E E3C0 B010 0021          00000010   4280+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002C94 E3E0 D008 0004          00000008   4281+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002C9A EB1C D020 0004          00000020   4282+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002CA0 078E                               4283+         bcr 8,14                if same dsab, just return              01-DCCEP
00002CA2 E3F0 D010 0024          00000010   4284+         stg 15,16(0,13)         save return code                       01-DCCEP
00002CA8 E300 D018 0024          00000018   4285+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002CAE E3F0 D090 0004          00000090   4286+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002CB4 E3F0 F018 0004          00000018   4287+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002CBA 47F0 F040               00000040   4288+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4289+* End of Epilog
                                            4290 * * **** End of Epilogue
                                            4291          DROP  12
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4292 *
                                            4293 *   DSECT for automatic variables in "rd_kafka_transport_post_connect_
                                            4294 *           setup"
                                            4295 *      (FUNCTION #1584)
                                            4296 *
00000000                00000000 000001B0   4297 @AUTO#rd_kafka_transport_post_connect_setup DSECT
00000000                                    4298          DS    XL168
000000A8                                    4299 rd_kafka_transport_post_connect_setup#slen#0 DS 1F ; slen
000000AC                                    4300 rd_kafka_transport_post_connect_setup#one#9 DS 1F ; one
000000B0                000000B0 000000AC   4301          ORG   @AUTO#rd_kafka_transport_post_connect_setup+172
000000AC                                    4302 rd_kafka_transport_post_connect_setup#_logname#8 DS 256XL1 ; _logname
000001AC                000001AC 000000AC   4303          ORG   @AUTO#rd_kafka_transport_post_connect_setup+172
000000AC                                    4304 rd_kafka_transport_post_connect_setup#_logname#6 DS 256XL1 ; _logname
000001AC                000001AC 000000AC   4305          ORG   @AUTO#rd_kafka_transport_post_connect_setup+172
000000AC                                    4306 rd_kafka_transport_post_connect_setup#_logname#4 DS 256XL1 ; _logname
000001AC                000001AC 000000AC   4307          ORG   @AUTO#rd_kafka_transport_post_connect_setup+172
000000AC                                    4308 rd_kafka_transport_post_connect_setup#_logname#2 DS 256XL1 ; _logname
000001AC                000001AC 000000B0   4309          ORG   @AUTO#rd_kafka_transport_post_connect_setup+176
000000B0                                    4310 rd_kafka_transport_post_connect_setup#_logname#10 DS 256XL1 ; _logname
                                            4311 *
00002CBE                00000000 000046BC   4312 @CODE    CSECT
                                            4313 *
                                            4314 *
                                            4315 *
                                            4316 * ....... start of rd_kafka_transport_connected
00002CBE                                    4317 @LNAME1954 DS  0H
00002CBE 0000001C                           4318          DC    X'0000001C'
00002CC2 99846D9281869281                   4319          DC    C'rd_kafka_transport_connected'
00002CDE 00                                 4320          DC    X'00'
                                            4321 rd_kafka_transport_connected DCCPRLG CINDEX=1954,BASER=12,FRAME=488,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1954
                                            4322          macro
                                            4323          dccextrn &m
                                            4324          gblc    &$dccext(1000)
                                            4325          gbla    &$dccexti
                                            4326          lcla    &i
                                            4327 &$dccext(&$dccexti+1) setc    '&m'
                                            4328 &i       seta    1
                                            4329 .loop    aif    (&i gt &$dccexti).around
                                            4330          aif    ('&$dccext(&i)' eq '&m').getout
                                            4331 &i       seta    &i+1
                                            4332          ago     .loop
                                            4333 .around  anop
                                            4334 &$dccexti seta &$dccexti+1
                                            4335          extrn  &m
                                            4336 .getout  anop
                                            4337          mend
00002CE0                                    4338+$eye0076    ds    0d                                                    02-DCCCA
00002CE0 C4C3C3                             4339+         dc cl3'DCC'                                                    02-DCCCA
00002CE3 01                                 4340+         dc xl1'01' format one                                          02-DCCCA
00002CE4 00000000                           4341+         dc a(0)                                                        02-DCCCA
00002CE8 0000000000002D52                   4342+         dc ad(@PER_1954)                                               02-DCCCA
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002CF0 00000000000001E8                   4343+         dc ad(488)                                                     02-DCCCA
00002CF8 0000000000000000                   4344+         dc ad(0)                                                       02-DCCCA
00002D00 0000000000001000                   4345+         dc ad(4096)                                                    02-DCCCA
00002D08 20                                 4346+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002D09 03                                 4347+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002D0A 03                                 4348+         dc al1(3)                                                      02-DCCCA
00002D0B 08                                 4349+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002D0C 00                                 4350+         dc bl.8'00000000'                                              02-DCCCA
00002D0D 000000                             4351+         dc al3(0)                                                      02-DCCCA
00002D10 0000000000002CBE                   4352+         dc ad(@LNAME1954)                                              02-DCCCA
00002D18                                    4353+         ds 0d                                                          02-DCCCA
00002D18 0000000000002CE0                   4354+         dc ad($eye0076)                                                02-DCCCA
00002D20 0000000000000000                   4355+         dc ad(0)                                                       02-DCCCA
00002D28                                    4356+         ds    0d                                                       01-DCCPR
00002D28                                    4357+rd_kafka_transport_connected ds 0d                                      01-DCCPR
00002D28                                    4358+@REGION_1954_1 ds 0h                                                    01-DCCPR
00002D28 EBEC D008 0024          00000008   4359+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002D2E E3E0 D088 0004          00000088   4360+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002D34 E3C0 D090 0004          00000090   4361+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002D3A B904 002E                          4362+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002D3E E3B0 C018 0004          00000018   4363+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002D44 A7EB 01E8               000001E8   4364+         aghi  14,488              increase by frame size               01-DCCPR
00002D48 E3E0 C020 0021          00000020   4365+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002D4E 4720 B020               00000020   4366+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002D52                                    4367+@PER_1954 ds   0h                                                       01-DCCPR
00002D52 EBDE 2080 0024          00000080   4368+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002D58 E3C0 2090 0024          00000090   4369+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002D5E B904 00D2                          4370+         lgr   13,2                set real frame pointer               01-DCCPR
00002D62 B904 00CF                          4371+         lgr   12,15               set base reg                         01-DCCPR
                        00002D28            4372+         using @REGION_1954_1,12                                        01-DCCPR
                                            4373 * ******* End of Prologue
                                            4374 * *
                                            4375 * ***      rd_kafka_broker_t *rkb = rktrans->rktrans_rkb;
00002D66 E320 1000 0004          00000000   4376          LG    2,0(0,1)    ; rktrans
00002D6C E330 2008 0004          00000008   4377          LG    3,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
                                            4378 * ***
                                            4379 * ***           do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x2)))) { d\
                                            4380 * o { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlc\
                                            4381 * py(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkb)-\
                                            4382 * >rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rk\
                                            4383 * b_rk, _logname, 7, (0x2), "CONNECT", "Connected to %s", rd_sockaddr2\
                                            4384 * str(rkb->rkb_addr_last, 0x1 | 0x4)); } while (0); } } while (0);
00002D72                                    4385 @L731    DS    0H
00002D72 E3F0 3FD0 0004          00000FD0   4386          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00002D78 9102 F323      00000323 00000002   4387          TM    803(15),2
00002D7C 4780 C130               00002E58   4388          BZ    @L734
00002D80                                    4389 @L735    DS    0H
00002D80 A749 1638               00001638   4390          LGHI  4,5688      ; 5688
00002D84 41F4 3000               00000000   4391          LA    15,0(4,3)
00002D88 E3F0 D1A8 0024          000001A8   4392          STG   15,424(0,13)
00002D8E 4110 D1A8               000001A8   4393          LA    1,424(0,13)
                                                                                                                           Page   91 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002D92 E3F0 C1B0 0004          00002ED8   4394          LG    15,@lit_1954_195 ; mtx_lock
00002D98                                    4395 @@gen_label260 DS    0H
00002D98 05EF                               4396          BALR  14,15
00002D9A                                    4397 @@gen_label261 DS    0H
00002D9A 41F0 D0A8               000000A8   4398          LA    15,168(0,13)
00002D9E E3F0 D1A8 0024          000001A8   4399          STG   15,424(0,13)
00002DA4 A7F9 1630               00001630   4400          LGHI  15,5680     ; 5680
00002DA8 E3FF 3000 0004          00000000   4401          LG    15,0(15,3)
00002DAE E3F0 D1B0 0024          000001B0   4402          STG   15,432(0,13)
00002DB4 E548 D1B8 0100          000001B8   4403          MVGHI 440(13),256
00002DBA 4110 D1A8               000001A8   4404          LA    1,424(0,13)
00002DBE E3F0 C1B8 0004          00002EE0   4405          LG    15,@lit_1954_197 ; rd_strlcpy
00002DC4                                    4406 @@gen_label262 DS    0H
00002DC4 05EF                               4407          BALR  14,15
00002DC6                                    4408 @@gen_label263 DS    0H
00002DC6 41F4 3000               00000000   4409          LA    15,0(4,3)
00002DCA E3F0 D1A8 0024          000001A8   4410          STG   15,424(0,13)
00002DD0 4110 D1A8               000001A8   4411          LA    1,424(0,13)
00002DD4 E3F0 C1C0 0004          00002EE8   4412          LG    15,@lit_1954_199 ; mtx_unlock
00002DDA                                    4413 @@gen_label264 DS    0H
00002DDA 05EF                               4414          BALR  14,15
00002DDC                                    4415 @@gen_label265 DS    0H
00002DDC E3F0 3028 0004          00000028   4416          LG    15,40(0,3)
00002DE2 E3F0 D1A8 0024          000001A8   4417          STG   15,424(0,13)
00002DE8 E548 D1B0 0005          000001B0   4418          MVGHI 432(13),5
00002DEE 4110 D1A8               000001A8   4419          LA    1,424(0,13)
00002DF2 E3F0 C1C8 0004          00002EF0   4420          LG    15,@lit_1954_200 ; rd_sockaddr2str
00002DF8                                    4421 @@gen_label266 DS    0H
00002DF8 05EF                               4422          BALR  14,15
00002DFA                                    4423 @@gen_label267 DS    0H
00002DFA E310 3FD0 0004          00000FD0   4424          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00002E00 4110 1210               00000210   4425          LA    1,528(0,1)
00002E04 E310 D1A8 0024          000001A8   4426          STG   1,424(0,13)
00002E0A E310 3FD0 0004          00000FD0   4427          LG    1,4048(0,3)
00002E10 E310 D1B0 0024          000001B0   4428          STG   1,432(0,13)
00002E16 4110 D0A8               000000A8   4429          LA    1,168(0,13)
00002E1A E310 D1B8 0024          000001B8   4430          STG   1,440(0,13)
00002E20 E548 D1C0 0007          000001C0   4431          MVGHI 448(13),7
00002E26 E548 D1C8 0002          000001C8   4432          MVGHI 456(13),2
00002E2C E310 C1D8 0004          00002F00   4433          LG    1,@lit_1954_201
00002E32 4130 131E               0000031E   4434          LA    3,798(0,1)
00002E36 E330 D1D0 0024          000001D0   4435          STG   3,464(0,13)
00002E3C 4110 1326               00000326   4436          LA    1,806(0,1)
00002E40 E310 D1D8 0024          000001D8   4437          STG   1,472(0,13)
00002E46 E3F0 D1E0 0024          000001E0   4438          STG   15,480(0,13)
00002E4C 4110 D1A8               000001A8   4439          LA    1,424(0,13)
00002E50 E3F0 C1D0 0004          00002EF8   4440          LG    15,@lit_1954_202 ; rd_kafka_log0
00002E56                                    4441 @@gen_label268 DS    0H
00002E56 05EF                               4442          BALR  14,15
00002E58                                    4443 @@gen_label269 DS    0H
00002E58                                    4444 @L734    DS    0H
                                            4445 * ***
                                                                                                                           Page   92 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4446 * ***
                                            4447 * ***
                                            4448 * ***
                                            4449 * ***
                                            4450 * ***           rd_kafka_transport_post_connect_setup(rktrans);
00002E58 E320 D1A8 0024          000001A8   4451          STG   2,424(0,13)
00002E5E 4110 D1A8               000001A8   4452          LA    1,424(0,13)
00002E62 E3F0 C1E0 0004          00002F08   4453          LG    15,@lit_1954_203 ; rd_kafka_transport_post_connect_setup
00002E68                                    4454 @@gen_label270 DS    0H
00002E68 05EF                               4455          BALR  14,15
00002E6A                                    4456 @@gen_label271 DS    0H
                                            4457 * ***
                                            4458 * ***
                                            4459 * ***   # 655 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            4460 * ***
                                            4461 * ***      rd_kafka_transport_connect_done(rktrans, ((void *)0));
00002E6A E320 D1A8 0024          000001A8   4462          STG   2,424(0,13)
00002E70 D707 D1B0 D1B0 000001B0 000001B0   4463          XC    432(8,13),432(13)
00002E76 4110 D1A8               000001A8   4464          LA    1,424(0,13)
00002E7A E3F0 C1E8 0004          00002F10   4465          LG    15,@lit_1954_204 ; rd_kafka_transport_connect_done
00002E80                                    4466 @@gen_label272 DS    0H
00002E80 05EF                               4467          BALR  14,15
00002E82                                    4468 @@gen_label273 DS    0H
                                            4469 * ***   }
00002E82                                    4470 @ret_lab_1954 DS 0H
                                            4471 * * **** Start of Epilogue
                                            4472          DCCEPIL
00002E82                                    4473+         ds 0h                                                          01-DCCEP
                                            4474+* Epilog
00002E82 D707 D088 D088 00000088 00000088   4475+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E88 E3D0 D080 0004          00000080   4476+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E8E E3C0 D090 0004          00000090   4477+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E94 E3B0 C018 0004          00000018   4478+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E9A E3C0 B010 0021          00000010   4479+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002EA0 E3E0 D008 0004          00000008   4480+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002EA6 EB1C D020 0004          00000020   4481+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002EAC 078E                               4482+         bcr 8,14                if same dsab, just return              01-DCCEP
00002EAE E3F0 D010 0024          00000010   4483+         stg 15,16(0,13)         save return code                       01-DCCEP
00002EB4 E300 D018 0024          00000018   4484+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002EBA E3F0 D090 0004          00000090   4485+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002EC0 E3F0 F018 0004          00000018   4486+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002EC6 47F0 F040               00000040   4487+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4488+* End of Epilog
                                            4489 * * **** End of Epilogue
00002ED0                                    4490          DS    0D
00002ED0 000001E8                           4491 @FRAMESIZE_1954 DC F'488'
00002ED4 00000000
00002ED8 0000000000000000                   4492 @lit_1954_195 DC AD(mtx_lock)
00002EE0 0000000000000D50                   4493 @lit_1954_197 DC AD(rd_strlcpy)
00002EE8 0000000000000000                   4494 @lit_1954_199 DC AD(mtx_unlock)
00002EF0 0000000000000000                   4495 @lit_1954_200 DC AD(rd_sockaddr2str)
00002EF8 0000000000000000                   4496 @lit_1954_202 DC AD(rd_kafka_log0)
                                                                                                                           Page   93 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002F00 00000000000048E4                   4497 @lit_1954_201 DC AD(@strings@)
00002F08 0000000000002578                   4498 @lit_1954_203 DC AD(rd_kafka_transport_post_connect_setup)
00002F10 0000000000001980                   4499 @lit_1954_204 DC AD(rd_kafka_transport_connect_done)
                                            4500          DROP  12
                                            4501 *
                                            4502 *   DSECT for automatic variables in "rd_kafka_transport_connected"
                                            4503 *      (FUNCTION #1954)
                                            4504 *
00000000                00000000 000001A8   4505 @AUTO#rd_kafka_transport_connected DSECT
00000000                                    4506          DS    XL168
000000A8                                    4507 rd_kafka_transport_connected#_logname#3 DS 256XL1 ; _logname
                                            4508 *
00002F18                00000000 000046BC   4509 @CODE    CSECT
                                            4510 *
                                            4511 *
                                            4512 *
                                            4513 * ....... start of rd_kafka_transport_get_socket_error
00002F18                                    4514 @LNAME1955 DS  0H
00002F18 00000023                           4515          DC    X'00000023'
00002F1C 99846D9281869281                   4516          DC    C'rd_kafka_transport_get_socket_er'
00002F3C 999699                             4517          DC    C'ror'
00002F3F 00                                 4518          DC    X'00'
                                            4519 rd_kafka_transport_get_socket_error DCCPRLG CINDEX=1955,BASER=12,FRAME=*
                                                                496,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1955
                                            4520          macro
                                            4521          dccextrn &m
                                            4522          gblc    &$dccext(1000)
                                            4523          gbla    &$dccexti
                                            4524          lcla    &i
                                            4525 &$dccext(&$dccexti+1) setc    '&m'
                                            4526 &i       seta    1
                                            4527 .loop    aif    (&i gt &$dccexti).around
                                            4528          aif    ('&$dccext(&i)' eq '&m').getout
                                            4529 &i       seta    &i+1
                                            4530          ago     .loop
                                            4531 .around  anop
                                            4532 &$dccexti seta &$dccexti+1
                                            4533          extrn  &m
                                            4534 .getout  anop
                                            4535          mend
00002F40                                    4536+$eye0079    ds    0d                                                    02-DCCCA
00002F40 C4C3C3                             4537+         dc cl3'DCC'                                                    02-DCCCA
00002F43 01                                 4538+         dc xl1'01' format one                                          02-DCCCA
00002F44 00000000                           4539+         dc a(0)                                                        02-DCCCA
00002F48 0000000000002FB2                   4540+         dc ad(@PER_1955)                                               02-DCCCA
00002F50 00000000000001F0                   4541+         dc ad(496)                                                     02-DCCCA
00002F58 0000000000000000                   4542+         dc ad(0)                                                       02-DCCCA
00002F60 0000000000001000                   4543+         dc ad(4096)                                                    02-DCCCA
00002F68 20                                 4544+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002F69 03                                 4545+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002F6A 03                                 4546+         dc al1(3)                                                      02-DCCCA
00002F6B 08                                 4547+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   94 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002F6C 00                                 4548+         dc bl.8'00000000'                                              02-DCCCA
00002F6D 000000                             4549+         dc al3(0)                                                      02-DCCCA
00002F70 0000000000002F18                   4550+         dc ad(@LNAME1955)                                              02-DCCCA
00002F78                                    4551+         ds 0d                                                          02-DCCCA
00002F78 0000000000002F40                   4552+         dc ad($eye0079)                                                02-DCCCA
00002F80 0000000000000000                   4553+         dc ad(0)                                                       02-DCCCA
00002F88                                    4554+         ds    0d                                                       01-DCCPR
00002F88                                    4555+rd_kafka_transport_get_socket_error ds 0d                               01-DCCPR
00002F88                                    4556+@REGION_1955_1 ds 0h                                                    01-DCCPR
00002F88 EBEC D008 0024          00000008   4557+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002F8E E3E0 D088 0004          00000088   4558+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002F94 E3C0 D090 0004          00000090   4559+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F9A B904 002E                          4560+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F9E E3B0 C018 0004          00000018   4561+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002FA4 A7EB 01F0               000001F0   4562+         aghi  14,496              increase by frame size               01-DCCPR
00002FA8 E3E0 C020 0021          00000020   4563+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002FAE 4720 B020               00000020   4564+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002FB2                                    4565+@PER_1955 ds   0h                                                       01-DCCPR
00002FB2 EBDE 2080 0024          00000080   4566+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002FB8 E3C0 2090 0024          00000090   4567+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002FBE B904 00D2                          4568+         lgr   13,2                set real frame pointer               01-DCCPR
00002FC2 B904 00CF                          4569+         lgr   12,15               set base reg                         01-DCCPR
                        00002F88            4570+         using @REGION_1955_1,12                                        01-DCCPR
                                            4571 * ******* End of Prologue
                                            4572 * *
                                            4573 * ***      socklen_t intlen = sizeof(*errp);
00002FC6 E320 1000 0004          00000000   4574          LG    2,0(0,1)    ; rktrans
00002FCC E54C D0A8 0004          000000A8   4575          MVHI  168(13),4   ; intlen
                                            4576 * ***
                                            4577 * ***      if (getsockopt(rktrans->rktrans_s, 0xffff,
                                            4578 * ***                0x1007, (void *)errp, &intlen) == -1) {
00002FD2 E3F0 2000 0014          00000000   4579          LGF   15,0(0,2)
00002FD8 E3F0 D1B0 0024          000001B0   4580          STG   15,432(0,13)
00002FDE C0FF 0000 FFFF                     4581          LLILF 15,X'0000FFFF' ; 65535
00002FE4 E3F0 D1B8 0024          000001B8   4582          STG   15,440(0,13)
00002FEA E548 D1C0 1007          000001C0   4583          MVGHI 448(13),4103
00002FF0 E3F0 1008 0004          00000008   4584          LG    15,8(0,1)   ; errp
00002FF6 E3F0 D1C8 0024          000001C8   4585          STG   15,456(0,13)
00002FFC 41F0 D0A8               000000A8   4586          LA    15,168(0,13)
00003000 E3F0 D1D0 0024          000001D0   4587          STG   15,464(0,13)
00003006 4110 D1B0               000001B0   4588          LA    1,432(0,13)
0000300A E3F0 C1B0 0004          00003138   4589          LG    15,@lit_1955_207 ; getsockopt
00003010                                    4590 @@gen_label274 DS    0H
00003010 05EF                               4591          BALR  14,15
00003012                                    4592 @@gen_label275 DS    0H
00003012 A7FE FFFF               0000FFFF   4593          CHI   15,-1
00003016 4770 C1F0               00003178   4594          BNE   @L738
                                            4595 * ***         do { if ((((rktrans->rktrans_rkb)->rkb_rk->rk_conf.debug\
                                            4596 *  & (0x2)))) { do { char _logname[256]; mtx_lock(&(rktrans->rktrans_r\
                                            4597 * kb)->rkb_logname_lock); rd_strlcpy(_logname, rktrans->rktrans_rkb->r\
                                            4598 * kb_logname, sizeof(_logname)); mtx_unlock(&(rktrans->rktrans_rkb)->r\
                                            4599 * kb_logname_lock); rd_kafka_log0(&(rktrans->rktrans_rkb)->rkb_rk->rk_\
                                                                                                                           Page   95 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4600 * conf, (rktrans->rktrans_rkb)->rkb_rk, _logname, 7, (0x2), "SO_ERROR"\
                                            4601 * , "Failed to get socket error: %s", strerror((* __error()))); } whil\
                                            4602 * e (0); } } while (0);
0000301A                                    4603 @L739    DS    0H
0000301A E3F0 2008 0004          00000008   4604          LG    15,8(0,2)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
00003020 E3F0 FFD0 0004          00000FD0   4605          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003026 9102 F323      00000323 00000002   4606          TM    803(15),2
0000302A 4780 C1A0               00003128   4607          BZ    @L742
0000302E                                    4608 @L743    DS    0H
0000302E E3F0 2008 0004          00000008   4609          LG    15,8(0,2)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
00003034 A739 1638               00001638   4610          LGHI  3,5688      ; 5688
00003038 41F3 F000               00000000   4611          LA    15,0(3,15)
0000303C E3F0 D1B0 0024          000001B0   4612          STG   15,432(0,13)
00003042 4110 D1B0               000001B0   4613          LA    1,432(0,13)
00003046 E3F0 C1B8 0004          00003140   4614          LG    15,@lit_1955_209 ; mtx_lock
0000304C                                    4615 @@gen_label278 DS    0H
0000304C 05EF                               4616          BALR  14,15
0000304E                                    4617 @@gen_label279 DS    0H
0000304E 41F0 D0AC               000000AC   4618          LA    15,172(0,13)
00003052 E3F0 D1B0 0024          000001B0   4619          STG   15,432(0,13)
00003058 E3F0 2008 0004          00000008   4620          LG    15,8(0,2)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
0000305E A719 1630               00001630   4621          LGHI  1,5680      ; 5680
00003062 E3F1 F000 0004          00000000   4622          LG    15,0(1,15)
00003068 E3F0 D1B8 0024          000001B8   4623          STG   15,440(0,13)
0000306E E548 D1C0 0100          000001C0   4624          MVGHI 448(13),256
00003074 4110 D1B0               000001B0   4625          LA    1,432(0,13)
00003078 E3F0 C1C0 0004          00003148   4626          LG    15,@lit_1955_211 ; rd_strlcpy
0000307E                                    4627 @@gen_label280 DS    0H
0000307E 05EF                               4628          BALR  14,15
00003080                                    4629 @@gen_label281 DS    0H
00003080 E3F0 2008 0004          00000008   4630          LG    15,8(0,2)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
00003086 41F3 F000               00000000   4631          LA    15,0(3,15)
0000308A E3F0 D1B0 0024          000001B0   4632          STG   15,432(0,13)
00003090 4110 D1B0               000001B0   4633          LA    1,432(0,13)
00003094 E3F0 C1C8 0004          00003150   4634          LG    15,@lit_1955_213 ; mtx_unlock
0000309A                                    4635 @@gen_label282 DS    0H
0000309A 05EF                               4636          BALR  14,15
0000309C                                    4637 @@gen_label283 DS    0H
0000309C E3F0 C1D0 0004          00003158   4638          LG    15,@lit_1955_214 ; __error
000030A2                                    4639 @@gen_label284 DS    0H
000030A2 05EF                               4640          BALR  14,15
000030A4                                    4641 @@gen_label285 DS    0H
000030A4 58F0 F000               00000000   4642          L     15,0(0,15)
000030A8 B914 00FF                          4643          LGFR  15,15
000030AC E3F0 D1B0 0024          000001B0   4644          STG   15,432(0,13)
000030B2 4110 D1B0               000001B0   4645          LA    1,432(0,13)
000030B6 E3F0 C1D8 0004          00003160   4646          LG    15,@lit_1955_215 ; strerror
000030BC                                    4647 @@gen_label286 DS    0H
                                                                                                                           Page   96 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000030BC 05EF                               4648          BALR  14,15
000030BE                                    4649 @@gen_label287 DS    0H
000030BE E310 2008 0004          00000008   4650          LG    1,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
000030C4 E310 1FD0 0004          00000FD0   4651          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000030CA 4110 1210               00000210   4652          LA    1,528(0,1)
000030CE E310 D1B0 0024          000001B0   4653          STG   1,432(0,13)
000030D4 E310 2008 0004          00000008   4654          LG    1,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
000030DA E310 1FD0 0004          00000FD0   4655          LG    1,4048(0,1)
000030E0 E310 D1B8 0024          000001B8   4656          STG   1,440(0,13)
000030E6 4110 D0AC               000000AC   4657          LA    1,172(0,13)
000030EA E310 D1C0 0024          000001C0   4658          STG   1,448(0,13)
000030F0 E548 D1C8 0007          000001C8   4659          MVGHI 456(13),7
000030F6 E548 D1D0 0002          000001D0   4660          MVGHI 464(13),2
000030FC E310 C1E8 0004          00003170   4661          LG    1,@lit_1955_216
00003102 4120 1336               00000336   4662          LA    2,822(0,1)
00003106 E320 D1D8 0024          000001D8   4663          STG   2,472(0,13)
0000310C 4110 1340               00000340   4664          LA    1,832(0,1)
00003110 E310 D1E0 0024          000001E0   4665          STG   1,480(0,13)
00003116 E3F0 D1E8 0024          000001E8   4666          STG   15,488(0,13)
0000311C 4110 D1B0               000001B0   4667          LA    1,432(0,13)
00003120 E3F0 C1E0 0004          00003168   4668          LG    15,@lit_1955_217 ; rd_kafka_log0
00003126                                    4669 @@gen_label288 DS    0H
00003126 05EF                               4670          BALR  14,15
00003128                                    4671 @@gen_label289 DS    0H
00003128                                    4672 @L742    DS    0H
                                            4673 * ***
                                            4674 * ***
                                            4675 * ***         return -1;
00003128 A7F9 FFFF               0000FFFF   4676          LGHI  15,-1       ; -1
0000312C 47F0 C1F4               0000317C   4677          B     @ret_lab_1955
00003130                                    4678          DS    0D
00003130 000001F0                           4679 @FRAMESIZE_1955 DC F'496'
00003134 00000000
00003138 0000000000000000                   4680 @lit_1955_207 DC AD(getsockopt)
00003140 0000000000000000                   4681 @lit_1955_209 DC AD(mtx_lock)
00003148 0000000000000D50                   4682 @lit_1955_211 DC AD(rd_strlcpy)
00003150 0000000000000000                   4683 @lit_1955_213 DC AD(mtx_unlock)
00003158 0000000000000000                   4684 @lit_1955_214 DC AD(__error)
00003160 0000000000000000                   4685 @lit_1955_215 DC AD(strerror)
00003168 0000000000000000                   4686 @lit_1955_217 DC AD(rd_kafka_log0)
00003170 00000000000048E4                   4687 @lit_1955_216 DC AD(@strings@)
                                            4688 * ***      }
00003178                                    4689 @L738    DS    0H
                                            4690 * ***
                                            4691 * ***      return 0;
00003178 A7F9 0000               00000000   4692          LGHI  15,0        ; 0
                                            4693 * ***   }
0000317C                                    4694 @ret_lab_1955 DS 0H
                                            4695 * * **** Start of Epilogue
                                            4696          DCCEPIL
                                                                                                                           Page   97 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000317C                                    4697+         ds 0h                                                          01-DCCEP
                                            4698+* Epilog
0000317C D707 D088 D088 00000088 00000088   4699+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003182 E3D0 D080 0004          00000080   4700+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003188 E3C0 D090 0004          00000090   4701+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000318E E3B0 C018 0004          00000018   4702+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003194 E3C0 B010 0021          00000010   4703+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000319A E3E0 D008 0004          00000008   4704+         lg  14,8(0,13)          load up return address                 01-DCCEP
000031A0 EB1C D020 0004          00000020   4705+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000031A6 078E                               4706+         bcr 8,14                if same dsab, just return              01-DCCEP
000031A8 E3F0 D010 0024          00000010   4707+         stg 15,16(0,13)         save return code                       01-DCCEP
000031AE E300 D018 0024          00000018   4708+         stg 0,24(0,13)          save more return code                  01-DCCEP
000031B4 E3F0 D090 0004          00000090   4709+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000031BA E3F0 F018 0004          00000018   4710+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000031C0 47F0 F040               00000040   4711+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4712+* End of Epilog
                                            4713 * * **** End of Epilogue
                                            4714          DROP  12
                                            4715 *
                                            4716 *   DSECT for automatic variables in "rd_kafka_transport_get_socket_er
                                            4717 *           ror"
                                            4718 *      (FUNCTION #1955)
                                            4719 *
00000000                00000000 000001AC   4720 @AUTO#rd_kafka_transport_get_socket_error DSECT
00000000                                    4721          DS    XL168
000000A8                                    4722 rd_kafka_transport_get_socket_error#intlen#0 DS 1F ; intlen
000000AC                                    4723 rd_kafka_transport_get_socket_error#_logname#4 DS 256XL1 ; _logname
                                            4724 *
000031C4                00000000 000046BC   4725 @CODE    CSECT
                                            4726 *
                                            4727 *
                                            4728 *
                                            4729 * ....... start of rd_kafka_transport_io_event
000031C4                                    4730 @LNAME1956 DS  0H
000031C4 0000001B                           4731          DC    X'0000001B'
000031C8 99846D9281869281                   4732          DC    C'rd_kafka_transport_io_event'
000031E3 00                                 4733          DC    X'00'
                                            4734 rd_kafka_transport_io_event DCCPRLG CINDEX=1956,BASER=12,FRAME=744,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1956
                                            4735          macro
                                            4736          dccextrn &m
                                            4737          gblc    &$dccext(1000)
                                            4738          gbla    &$dccexti
                                            4739          lcla    &i
                                            4740 &$dccext(&$dccexti+1) setc    '&m'
                                            4741 &i       seta    1
                                            4742 .loop    aif    (&i gt &$dccexti).around
                                            4743          aif    ('&$dccext(&i)' eq '&m').getout
                                            4744 &i       seta    &i+1
                                            4745          ago     .loop
                                            4746 .around  anop
                                            4747 &$dccexti seta &$dccexti+1
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4748          extrn  &m
                                            4749 .getout  anop
                                            4750          mend
000031E8                                    4751+$eye0082    ds    0d                                                    02-DCCCA
000031E8 C4C3C3                             4752+         dc cl3'DCC'                                                    02-DCCCA
000031EB 01                                 4753+         dc xl1'01' format one                                          02-DCCCA
000031EC 00000000                           4754+         dc a(0)                                                        02-DCCCA
000031F0 000000000000325A                   4755+         dc ad(@PER_1956)                                               02-DCCCA
000031F8 00000000000002E8                   4756+         dc ad(744)                                                     02-DCCCA
00003200 0000000000000000                   4757+         dc ad(0)                                                       02-DCCCA
00003208 0000000000001000                   4758+         dc ad(4096)                                                    02-DCCCA
00003210 20                                 4759+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003211 03                                 4760+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003212 03                                 4761+         dc al1(3)                                                      02-DCCCA
00003213 08                                 4762+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003214 00                                 4763+         dc bl.8'00000000'                                              02-DCCCA
00003215 000000                             4764+         dc al3(0)                                                      02-DCCCA
00003218 00000000000031C4                   4765+         dc ad(@LNAME1956)                                              02-DCCCA
00003220                                    4766+         ds 0d                                                          02-DCCCA
00003220 00000000000031E8                   4767+         dc ad($eye0082)                                                02-DCCCA
00003228 0000000000000000                   4768+         dc ad(0)                                                       02-DCCCA
00003230                                    4769+         ds    0d                                                       01-DCCPR
00003230                                    4770+rd_kafka_transport_io_event ds 0d                                       01-DCCPR
00003230                                    4771+@REGION_1956_1 ds 0h                                                    01-DCCPR
00003230 EBEC D008 0024          00000008   4772+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003236 E3E0 D088 0004          00000088   4773+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000323C E3C0 D090 0004          00000090   4774+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003242 B904 002E                          4775+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003246 E3B0 C018 0004          00000018   4776+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000324C A7EB 02E8               000002E8   4777+         aghi  14,744              increase by frame size               01-DCCPR
00003250 E3E0 C020 0021          00000020   4778+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003256 4720 B020               00000020   4779+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000325A                                    4780+@PER_1956 ds   0h                                                       01-DCCPR
0000325A EBDE 2080 0024          00000080   4781+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003260 E3C0 2090 0024          00000090   4782+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003266 B904 00D2                          4783+         lgr   13,2                set real frame pointer               01-DCCPR
0000326A B904 00CF                          4784+         lgr   12,15               set base reg                         01-DCCPR
                        00003230            4785+         using @REGION_1956_1,12                                        01-DCCPR
                                            4786 * ******* End of Prologue
                                            4787 * *
                                            4788 * ***      char errstr[512];
0000326E E320 1000 0004          00000000   4789          LG    2,0(0,1)    ; rktrans
00003274 5830 100C               0000000C   4790          L     3,12(0,1)   ; events
                                            4791 * ***      int r;
                                            4792 * ***      rd_kafka_broker_t *rkb = rktrans->rktrans_rkb;
00003278 E340 2008 0004          00000008   4793          LG    4,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
                                            4794 * ***
                                            4795 * ***      switch (rkb->rkb_state)
0000327E 47F0 C324               00003554   4796          B     @L746
00003288                                    4797          DS    0D
00003288 000002E8                           4798 @FRAMESIZE_1956 DC F'744'
                                                                                                                           Page   99 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000328C 00000000
00003290 0000000000002F88                   4799 @lit_1956_221 DC AD(rd_kafka_transport_get_socket_error)
00003298 0000000000000000                   4800 @lit_1956_222 DC AD(rd_sockaddr2str)
000032A0 0000000000000000                   4801 @lit_1956_223 DC AD(__error)
000032A8 0000000000000000                   4802 @lit_1956_224 DC AD(strerror)
000032B0 0000000000000000                   4803 @lit_1956_226 DC AD(rd_kafka_broker_fail)
000032B8 00000000000048E4                   4804 @lit_1956_225 DC AD(@strings@)
000032C0 0000000000000000                   4805 @lit_1956_230 DC AD(snprintf)
000032C8 0000000000001980                   4806 @lit_1956_231 DC AD(rd_kafka_transport_connect_done)
000032D0 0000000000002D28                   4807 @lit_1956_232 DC AD(rd_kafka_transport_connected)
000032D8 0000000000000000                   4808 @lit_1956_233 DC AD(rd_kafka_recv)
000032E0 0000000000000000                   4809 @lit_1956_235 DC AD(rd_kafka_broker_conn_closed)
000032E8 0000000000000000                   4810 @lit_1956_236 DC AD(rd_kafka_send)
000032F0 0000000000000000                   4811 @lit_1956_239 DC AD(rd_kafka_crash)
000032F8 00000000000046C0                   4812 @lit_1956_238 DC AD(@DATA)
                                            4813 * ***      {
                                            4814 * ***      case RD_KAFKA_BROKER_STATE_CONNECT:
00003300                                    4815 @L748    DS    0H
                                            4816 * ***
                                            4817 * ***         if (!(events & (0x0004|0x0008|0x0010)))
00003300 A731 001C               0000001C   4818          TML   3,28
00003304 4780 C3A8               000035D8   4819          BZ    @ret_lab_1956
                                            4820 * ***            return;
00003308                                    4821 @L749    DS    0H
                                            4822 * ***
                                            4823 * ***         if (rd_kafka_transport_get_socket_error(rktrans, &r) == \
                                            4824 * -1) {
00003308 E320 D2B0 0024          000002B0   4825          STG   2,688(0,13)
0000330E 41F0 D2A8               000002A8   4826          LA    15,680(0,13)
00003312 E3F0 D2B8 0024          000002B8   4827          STG   15,696(0,13)
00003318 4110 D2B0               000002B0   4828          LA    1,688(0,13)
0000331C E3F0 C060 0004          00003290   4829          LG    15,@lit_1956_221 ; rd_kafka_transport_get_socket_error
00003322                                    4830 @@gen_label291 DS    0H
00003322 05EF                               4831          BALR  14,15
00003324                                    4832 @@gen_label292 DS    0H
00003324 A7FE FFFF               0000FFFF   4833          CHI   15,-1
00003328 4770 C18A               000033BA   4834          BNE   @L750
                                            4835 * ***            rd_kafka_broker_fail(
                                            4836 * ***                                   rkb, 3, RD_KAFKA_RESP_ERR__TRA\
                                            4837 * NSPORT,
                                            4838 * ***                                   "Connect to %s failed: "
                                            4839 * ***                                   rd_sockaddr2str(rkb->rkb_addr_\
                                            4840 * last,
                                            4841 * ***                                   rktrans->rktrans_s,
                                            4842 * ***                                   strerror((* __error())));
                                            4843 * ***                                                   0x1 |
0000332C E3F0 4028 0004          00000028   4844          LG    15,40(0,4)
00003332 E3F0 D2B0 0024          000002B0   4845          STG   15,688(0,13)
                                            4846 * ***                                                   0x4),
00003338 E548 D2B8 0005          000002B8   4847          MVGHI 696(13),5
0000333E 4110 D2B0               000002B0   4848          LA    1,688(0,13)
00003342 E3F0 C068 0004          00003298   4849          LG    15,@lit_1956_222 ; rd_sockaddr2str
                                                                                                                           Page  100 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003348                                    4850 @@gen_label294 DS    0H
00003348 05EF                               4851          BALR  14,15
0000334A                                    4852 @@gen_label295 DS    0H
0000334A B904 003F                          4853          LGR   3,15
0000334E E3F0 C070 0004          000032A0   4854          LG    15,@lit_1956_223 ; __error
00003354                                    4855 @@gen_label296 DS    0H
00003354 05EF                               4856          BALR  14,15
00003356                                    4857 @@gen_label297 DS    0H
00003356 58F0 F000               00000000   4858          L     15,0(0,15)
0000335A B914 00FF                          4859          LGFR  15,15
0000335E E3F0 D2B0 0024          000002B0   4860          STG   15,688(0,13)
00003364 4110 D2B0               000002B0   4861          LA    1,688(0,13)
00003368 E3F0 C078 0004          000032A8   4862          LG    15,@lit_1956_224 ; strerror
0000336E                                    4863 @@gen_label298 DS    0H
0000336E 05EF                               4864          BALR  14,15
00003370                                    4865 @@gen_label299 DS    0H
00003370 E340 D2B0 0024          000002B0   4866          STG   4,688(0,13)
00003376 E548 D2B8 0003          000002B8   4867          MVGHI 696(13),3
0000337C E548 D2C0 FF3D          000002C0   4868          MVGHI 704(13),-195
                                            4869 * ***                                   "unable to get status from "
                                            4870 * ***                                   "socket %d: %s",
00003382 E310 C088 0004          000032B8   4871          LG    1,@lit_1956_225
00003388 4110 1360               00000360   4872          LA    1,864(0,1)
0000338C E310 D2C8 0024          000002C8   4873          STG   1,712(0,13)
00003392 E330 D2D0 0024          000002D0   4874          STG   3,720(0,13)
00003398 E310 2000 0014          00000000   4875          LGF   1,0(0,2)
0000339E E310 D2D8 0024          000002D8   4876          STG   1,728(0,13)
000033A4 E3F0 D2E0 0024          000002E0   4877          STG   15,736(0,13)
000033AA 4110 D2B0               000002B0   4878          LA    1,688(0,13)
000033AE E3F0 C080 0004          000032B0   4879          LG    15,@lit_1956_226 ; rd_kafka_broker_fail
000033B4                                    4880 @@gen_label300 DS    0H
000033B4 05EF                               4881          BALR  14,15
000033B6                                    4882 @@gen_label301 DS    0H
                                            4883 * ***         } else if (r != 0) {
000033B6 47F0 C3A8               000035D8   4884          B     @L747
000033BA                                    4885 @L750    DS    0H
000033BA E55C D2A8 0000          000002A8   4886          CHSI  680(13),0
000033C0 4780 C226               00003456   4887          BE    @L752
                                            4888 * ***
                                            4889 * ***            snprintf(errstr, sizeof(errstr), "Connect to %s faile\
                                            4890 * d: %s", rd_sockaddr2str(rkb->rkb_addr_last, 0x1 | 0x4), strerror(r))\
                                            4891 * ;
000033C4 E3F0 4028 0004          00000028   4892          LG    15,40(0,4)
000033CA E3F0 D2B0 0024          000002B0   4893          STG   15,688(0,13)
000033D0 E548 D2B8 0005          000002B8   4894          MVGHI 696(13),5
000033D6 4110 D2B0               000002B0   4895          LA    1,688(0,13)
000033DA E3F0 C068 0004          00003298   4896          LG    15,@lit_1956_222 ; rd_sockaddr2str
000033E0                                    4897 @@gen_label303 DS    0H
000033E0 05EF                               4898          BALR  14,15
000033E2                                    4899 @@gen_label304 DS    0H
000033E2 B904 003F                          4900          LGR   3,15
000033E6 E3F0 D2A8 0014          000002A8   4901          LGF   15,680(0,13) ; r
                                                                                                                           Page  101 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000033EC E3F0 D2B0 0024          000002B0   4902          STG   15,688(0,13)
000033F2 4110 D2B0               000002B0   4903          LA    1,688(0,13)
000033F6 E3F0 C078 0004          000032A8   4904          LG    15,@lit_1956_224 ; strerror
000033FC                                    4905 @@gen_label305 DS    0H
000033FC 05EF                               4906          BALR  14,15
000033FE                                    4907 @@gen_label306 DS    0H
000033FE 4110 D0A8               000000A8   4908          LA    1,168(0,13)
00003402 E310 D2B0 0024          000002B0   4909          STG   1,688(0,13)
00003408 E548 D2B8 0200          000002B8   4910          MVGHI 696(13),512
0000340E E310 C088 0004          000032B8   4911          LG    1,@lit_1956_225
00003414 4110 139E               0000039E   4912          LA    1,926(0,1)
00003418 E310 D2C0 0024          000002C0   4913          STG   1,704(0,13)
0000341E E330 D2C8 0024          000002C8   4914          STG   3,712(0,13)
00003424 E3F0 D2D0 0024          000002D0   4915          STG   15,720(0,13)
0000342A 4110 D2B0               000002B0   4916          LA    1,688(0,13)
0000342E E3F0 C090 0004          000032C0   4917          LG    15,@lit_1956_230 ; snprintf
00003434                                    4918 @@gen_label307 DS    0H
00003434 05EF                               4919          BALR  14,15
00003436                                    4920 @@gen_label308 DS    0H
                                            4921 * ***
                                            4922 * ***   # 720 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            4923 * ***            rd_kafka_transport_connect_done(rktrans, errstr);
00003436 E320 D2B0 0024          000002B0   4924          STG   2,688(0,13)
0000343C 41F0 D0A8               000000A8   4925          LA    15,168(0,13)
00003440 E3F0 D2B8 0024          000002B8   4926          STG   15,696(0,13)
00003446 4110 D2B0               000002B0   4927          LA    1,688(0,13)
0000344A E3F0 C098 0004          000032C8   4928          LG    15,@lit_1956_231 ; rd_kafka_transport_connect_done
00003450                                    4929 @@gen_label309 DS    0H
00003450 05EF                               4930          BALR  14,15
00003452                                    4931 @@gen_label310 DS    0H
                                            4932 * ***         } else {
00003452 47F0 C3A8               000035D8   4933          B     @L747
00003456                                    4934 @L752    DS    0H
                                            4935 * ***
                                            4936 * ***            rd_kafka_transport_connected(rktrans);
00003456 E320 D2B0 0024          000002B0   4937          STG   2,688(0,13)
0000345C 4110 D2B0               000002B0   4938          LA    1,688(0,13)
00003460 E3F0 C0A0 0004          000032D0   4939          LG    15,@lit_1956_232 ; rd_kafka_transport_connected
00003466                                    4940 @@gen_label311 DS    0H
00003466 05EF                               4941          BALR  14,15
00003468                                    4942 @@gen_label312 DS    0H
                                            4943 * ***         }
00003468                                    4944 @L753    DS    0H
                                            4945 * ***         break;
00003468                                    4946 @L751    DS    0H
00003468 47F0 C3A8               000035D8   4947          B     @L747
                                            4948 * ***
                                            4949 * ***           case RD_KAFKA_BROKER_STATE_SSL_HANDSHAKE:
                                            4950 * ***   # 748 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            4951 * ***                   break;
                                            4952 * ***
                                            4953 * ***           case RD_KAFKA_BROKER_STATE_AUTH_LEGACY:
                                                                                                                           Page  102 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4954 * ***   # 776 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            4955 * ***                   break;
                                            4956 * ***
                                            4957 * ***      case RD_KAFKA_BROKER_STATE_APIVERSION_QUERY:
                                            4958 * ***      case RD_KAFKA_BROKER_STATE_AUTH_HANDSHAKE:
                                            4959 * ***                   case RD_KAFKA_BROKER_STATE_AUTH_REQ:
                                            4960 * ***      case RD_KAFKA_BROKER_STATE_UP:
                                            4961 * ***      case RD_KAFKA_BROKER_STATE_UPDATE:
0000346C                                    4962 @L760    DS    0H
                                            4963 * ***
                                            4964 * ***         if (events & 0x0001) {
0000346C A731 0001               00000001   4965          TML   3,1
00003470 4780 C274               000034A4   4966          BZ    @L761
                                            4967 * ***            while (rkb->rkb_state >= RD_KAFKA_BROKER_STATE_UP &&
                                            4968 * ***               ;
00003474                                    4969 @L765    DS    0H
00003474 E55C 40C4 0006          000000C4   4970          CHSI  196(4),6
0000347A 4740 C266               00003496   4971          BL    @L766
                                            4972 * ***                   rd_kafka_recv(rkb) > 0)
0000347E E340 D2B0 0024          000002B0   4973          STG   4,688(0,13)
00003484 4110 D2B0               000002B0   4974          LA    1,688(0,13)
00003488 E3F0 C0A8 0004          000032D8   4975          LG    15,@lit_1956_233 ; rd_kafka_recv
0000348E                                    4976 @@gen_label315 DS    0H
0000348E 05EF                               4977          BALR  14,15
00003490                                    4978 @@gen_label316 DS    0H
00003490 12FF                               4979          LTR   15,15
00003492 4720 C244               00003474   4980          BH    @L765
00003496                                    4981 @L766    DS    0H
                                            4982 * ***
                                            4983 * ***
                                            4984 * ***                           if (rkb->rkb_state == RD_KAFKA_BROKER_\
                                            4985 * STATE_DOWN)
00003496 E55C 40C4 0001          000000C4   4986          CHSI  196(4),1
0000349C 4770 C274               000034A4   4987          BNE   @L761
                                            4988 * ***                                   return;
000034A0 47F0 C3A8               000035D8   4989          B     @ret_lab_1956
                                            4990 * ***         }
000034A4                                    4991 @L761    DS    0H
                                            4992 * ***
                                            4993 * ***                   if (events & 0x0010) {
000034A4 A731 0010               00000010   4994          TML   3,16
000034A8 4780 C2A8               000034D8   4995          BZ    @L768
                                            4996 * ***                           rd_kafka_broker_conn_closed(
                                            4997 * ***                                   rkb, RD_KAFKA_RESP_ERR__TRANSP\
                                            4998 * ORT,
                                            4999 * ***                                   "Disconnected");
000034AC E340 D2B0 0024          000002B0   5000          STG   4,688(0,13)
000034B2 E548 D2B8 FF3D          000002B8   5001          MVGHI 696(13),-195
000034B8 E3F0 C088 0004          000032B8   5002          LG    15,@lit_1956_225
000034BE 41F0 F0FA               000000FA   5003          LA    15,250(0,15)
000034C2 E3F0 D2C0 0024          000002C0   5004          STG   15,704(0,13)
000034C8 4110 D2B0               000002B0   5005          LA    1,688(0,13)
                                                                                                                           Page  103 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000034CC E3F0 C0B0 0004          000032E0   5006          LG    15,@lit_1956_235 ; rd_kafka_broker_conn_closed
000034D2                                    5007 @@gen_label320 DS    0H
000034D2 05EF                               5008          BALR  14,15
000034D4                                    5009 @@gen_label321 DS    0H
                                            5010 * ***                           return;
000034D4 47F0 C3A8               000035D8   5011          B     @ret_lab_1956
                                            5012 * ***                   }
000034D8                                    5013 @L768    DS    0H
                                            5014 * ***
                                            5015 * ***         if (events & 0x0004) {
000034D8 A731 0004               00000004   5016          TML   3,4
000034DC 4780 C3A8               000035D8   5017          BZ    @L747
                                            5018 * ***            while (rd_kafka_send(rkb) > 0)
                                            5019 * ***               ;
000034E0                                    5020 @L773    DS    0H
000034E0 E340 D2B0 0024          000002B0   5021          STG   4,688(0,13)
000034E6 4110 D2B0               000002B0   5022          LA    1,688(0,13)
000034EA E3F0 C0B8 0004          000032E8   5023          LG    15,@lit_1956_236 ; rd_kafka_send
000034F0                                    5024 @@gen_label323 DS    0H
000034F0 05EF                               5025          BALR  14,15
000034F2                                    5026 @@gen_label324 DS    0H
000034F2 12FF                               5027          LTR   15,15
000034F4 4720 C2B0               000034E0   5028          BH    @L773
                                            5029 * ***         }
000034F8                                    5030 @L769    DS    0H
                                            5031 * ***         break;
000034F8 47F0 C3A8               000035D8   5032          B     @L747
                                            5033 * ***
                                            5034 * ***      case RD_KAFKA_BROKER_STATE_INIT:
                                            5035 * ***      case RD_KAFKA_BROKER_STATE_DOWN:
                                            5036 * ***           case RD_KAFKA_BROKER_STATE_TRY_CONNECT:
                                            5037 * ***         do { if (((!(!*"bad state")))) rd_kafka_crash("C:\\asgka\
                                            5038 * fka\\librdkafka\\src\\rdkafka_transport.c",810, __FUNCTION__, (rkb->\
                                            5039 * rkb_rk), "assert: " "!*\"bad state\""); } while (0);
000034FC                                    5040 @L777    DS    0H
000034FC E3F0 C088 0004          000032B8   5041          LG    15,@lit_1956_225
00003502 4110 F3B8               000003B8   5042          LA    1,952(0,15)
00003506 9500 1000      00000000 00000000   5043          CLI   0(1),0
0000350A 4780 C3A8               000035D8   5044          BE    @L747
0000350E 4110 F086               00000086   5045          LA    1,134(0,15)
00003512 E310 D2B0 0024          000002B0   5046          STG   1,688(0,13)
00003518 E548 D2B8 032A          000002B8   5047          MVGHI 696(13),810
0000351E E310 C0C8 0004          000032F8   5048          LG    1,@lit_1956_238
00003524 4110 1208               00000208   5049          LA    1,520(0,1)
00003528 E310 D2C0 0024          000002C0   5050          STG   1,704(0,13)
0000352E E310 4FD0 0004          00000FD0   5051          LG    1,4048(0,4)
00003534 E310 D2C8 0024          000002C8   5052          STG   1,712(0,13)
0000353A 41F0 F3C2               000003C2   5053          LA    15,962(0,15)
0000353E E3F0 D2D0 0024          000002D0   5054          STG   15,720(0,13)
00003544 4110 D2B0               000002B0   5055          LA    1,688(0,13)
00003548 E3F0 C0C0 0004          000032F0   5056          LG    15,@lit_1956_239 ; rd_kafka_crash
0000354E                                    5057 @@gen_label327 DS    0H
                                                                                                                           Page  104 
  Active Usings: @REGION_1956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000354E 05EF                               5058          BALR  14,15
00003550                                    5059 @@gen_label328 DS    0H
00003550                                    5060 @L780    DS    0H
                                            5061 * ***      }
00003550 47F0 C3A8               000035D8   5062          B     @L747
00003554                                    5063 @L746    DS    0H
00003554 58F0 40C4               000000C4   5064          L     15,196(0,4) ; offset of rkb_state in rd_kafka_broker_s
00003558 C2FF 0000 000A                     5065          CLFI  15,X'0000000A'
0000355E 4720 C3A8               000035D8   5066          BH    @L747
00003562 B914 00FF                          5067          LGFR  15,15
00003566 4110 C350               00003580   5068          LA    1,@@gen_label329
0000356A EBFF 0003 000D          00000003   5069          SLLG  15,15,3(0)
00003570 E3F1 F000 0004          00000000   5070          LG    15,0(1,15)
00003576 47FF C000               00000000   5071          B     0(15,12)
00003580                                    5072 @@gen_label329 DS    0D
00003580 00000000000002CC                   5073          DC AD(@L777-@REGION_1956_1)
00003588 00000000000002CC                   5074          DC AD(@L777-@REGION_1956_1)
00003590 00000000000002CC                   5075          DC AD(@L777-@REGION_1956_1)
00003598 00000000000000D0                   5076          DC AD(@L748-@REGION_1956_1)
000035A0 00000000000003A8                   5077          DC AD(@L747-@REGION_1956_1)
000035A8 00000000000003A8                   5078          DC AD(@L747-@REGION_1956_1)
000035B0 000000000000023C                   5079          DC AD(@L760-@REGION_1956_1)
000035B8 000000000000023C                   5080          DC AD(@L760-@REGION_1956_1)
000035C0 000000000000023C                   5081          DC AD(@L760-@REGION_1956_1)
000035C8 000000000000023C                   5082          DC AD(@L760-@REGION_1956_1)
000035D0 000000000000023C                   5083          DC AD(@L760-@REGION_1956_1)
000035D8                                    5084 @L747    DS    0H
                                            5085 * ***   }
000035D8                                    5086 @ret_lab_1956 DS 0H
                                            5087 * * **** Start of Epilogue
                                            5088          DCCEPIL
000035D8                                    5089+         ds 0h                                                          01-DCCEP
                                            5090+* Epilog
000035D8 D707 D088 D088 00000088 00000088   5091+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000035DE E3D0 D080 0004          00000080   5092+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000035E4 E3C0 D090 0004          00000090   5093+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000035EA E3B0 C018 0004          00000018   5094+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000035F0 E3C0 B010 0021          00000010   5095+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000035F6 E3E0 D008 0004          00000008   5096+         lg  14,8(0,13)          load up return address                 01-DCCEP
000035FC EB1C D020 0004          00000020   5097+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003602 078E                               5098+         bcr 8,14                if same dsab, just return              01-DCCEP
00003604 E3F0 D010 0024          00000010   5099+         stg 15,16(0,13)         save return code                       01-DCCEP
0000360A E300 D018 0024          00000018   5100+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003610 E3F0 D090 0004          00000090   5101+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003616 E3F0 F018 0004          00000018   5102+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000361C 47F0 F040               00000040   5103+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5104+* End of Epilog
                                            5105 * * **** End of Epilogue
                                            5106          DROP  12
                                            5107 *
                                            5108 *   DSECT for automatic variables in "rd_kafka_transport_io_event"
                                            5109 *      (FUNCTION #1956)
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5110 *
00000000                00000000 000002AC   5111 @AUTO#rd_kafka_transport_io_event DSECT
00000000                                    5112          DS    XL168
000000A8                                    5113 rd_kafka_transport_io_event#errstr#0 DS 512XL1 ; errstr
000002A8                                    5114 rd_kafka_transport_io_event#r#0 DS 1F ; r
                                            5115 *
00003620                00000000 000046BC   5116 @CODE    CSECT
                                            5117 *
                                            5118 *
                                            5119 *
                                            5120 * ....... start of rd_kafka_transport_io_serve
                                            5121 rd_kafka_transport_io_serve ALIAS X'99846D92818692816DA3998195A2979699A*
                                                                36D89966DA28599A585'
00003620                                    5122 @LNAME1576 DS  0H
00003620 0000001B                           5123          DC    X'0000001B'
00003624 99846D9281869281                   5124          DC    C'rd_kafka_transport_io_serve'
0000363F 00                                 5125          DC    X'00'
                                            5126 rd_kafka_transport_io_serve DCCPRLG CINDEX=1576,BASER=12,FRAME=192,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1576
                                            5127          macro
                                            5128          dccextrn &m
                                            5129          gblc    &$dccext(1000)
                                            5130          gbla    &$dccexti
                                            5131          lcla    &i
                                            5132 &$dccext(&$dccexti+1) setc    '&m'
                                            5133 &i       seta    1
                                            5134 .loop    aif    (&i gt &$dccexti).around
                                            5135          aif    ('&$dccext(&i)' eq '&m').getout
                                            5136 &i       seta    &i+1
                                            5137          ago     .loop
                                            5138 .around  anop
                                            5139 &$dccexti seta &$dccexti+1
                                            5140          extrn  &m
                                            5141 .getout  anop
                                            5142          mend
00003640                                    5143+$eye0085    ds    0d                                                    02-DCCCA
00003640 C4C3C3                             5144+         dc cl3'DCC'                                                    02-DCCCA
00003643 01                                 5145+         dc xl1'01' format one                                          02-DCCCA
00003644 00000000                           5146+         dc a(0)                                                        02-DCCCA
00003648 00000000000036B2                   5147+         dc ad(@PER_1576)                                               02-DCCCA
00003650 00000000000000C0                   5148+         dc ad(192)                                                     02-DCCCA
00003658 0000000000000000                   5149+         dc ad(0)                                                       02-DCCCA
00003660 0000000000001000                   5150+         dc ad(4096)                                                    02-DCCCA
00003668 20                                 5151+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003669 03                                 5152+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000366A 03                                 5153+         dc al1(3)                                                      02-DCCCA
0000366B 08                                 5154+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000366C 00                                 5155+         dc bl.8'00000000'                                              02-DCCCA
0000366D 000000                             5156+         dc al3(0)                                                      02-DCCCA
00003670 0000000000003620                   5157+         dc ad(@LNAME1576)                                              02-DCCCA
00003678                                    5158+         ds 0d                                                          02-DCCCA
00003678 0000000000003640                   5159+         dc ad($eye0085)                                                02-DCCCA
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003680 0000000000000000                   5160+         dc ad(0)                                                       02-DCCCA
00003688                                    5161+         ds    0d                                                       01-DCCPR
                                            5162+         entry rd_kafka_transport_io_serve                              01-DCCPR
00003688                                    5163+rd_kafka_transport_io_serve ds 0d                                       01-DCCPR
00003688                                    5164+@REGION_1576_1 ds 0h                                                    01-DCCPR
00003688 EBEC D008 0024          00000008   5165+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000368E E3E0 D088 0004          00000088   5166+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003694 E3C0 D090 0004          00000090   5167+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000369A B904 002E                          5168+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000369E E3B0 C018 0004          00000018   5169+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000036A4 A7EB 00C0               000000C0   5170+         aghi  14,192              increase by frame size               01-DCCPR
000036A8 E3E0 C020 0021          00000020   5171+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000036AE 4720 B020               00000020   5172+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000036B2                                    5173+@PER_1576 ds   0h                                                       01-DCCPR
000036B2 EBDE 2080 0024          00000080   5174+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000036B8 E3C0 2090 0024          00000090   5175+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000036BE B904 00D2                          5176+         lgr   13,2                set real frame pointer               01-DCCPR
000036C2 B904 00CF                          5177+         lgr   12,15               set base reg                         01-DCCPR
                        00003688            5178+         using @REGION_1576_1,12                                        01-DCCPR
                                            5179          DCCPRV REG=15     ; Get PRV from DVT
000036C6 E3F0 B008 0004          00000008   5180+         LG 15,8(0,11)                                                  01-DCCPR
000036CC B904 0041                          5181          LGR   4,1         ; ptr to parm area
                                            5182 * ******* End of Prologue
                                            5183 * *
                                            5184 * ***      rd_kafka_broker_t *rkb = rktrans->rktrans_rkb;
000036D0 E320 4000 0004          00000000   5185          LG    2,0(0,4)    ; rktrans
000036D6 E330 2008 0004          00000008   5186          LG    3,8(0,2)    ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
                                            5187 * ***           int events;
                                            5188 * ***           int r;
                                            5189 * ***
                                            5190 * ***           rd_kafka_curr_transport = rktrans;
000036DC E310 C104 0016          0000378C   5191          LLGF  1,@lit_1576_242 ; rd_kafka_curr_transport
000036E2 E321 F000 0024          00000000   5192          STG   2,0(1,15)   ; rd_kafka_curr_transport
                                            5193 * ***
                                            5194 * ***           if (rkb->rkb_state == RD_KAFKA_BROKER_STATE_CONNECT ||
000036E8 E55C 30C4 0003          000000C4   5195          CHSI  196(3),3
000036EE 4780 C0B4               0000373C   5196          BE    @L782
                                            5197 * ***               (rkb->rkb_state > RD_KAFKA_BROKER_STATE_SSL_HANDSH\
                                            5198 * AKE &&
000036F2 E55C 30C4 0004          000000C4   5199          CHSI  196(3),4
000036F8 47D0 C0D2               0000375A   5200          BNH   @L781
                                            5201 * ***                rd_atomic32_get(&(&rkb->rkb_waitresps)->rkbq_cnt)\
                                            5202 *  < rkb->rkb_max_inflight &&
000036FC A7F9 1058               00001058   5203          LGHI  15,4184     ; 4184
00003700 41FF 3010               00000010   5204          LA    15,16(15,3)
00003704 E3F0 D0B0 0024          000000B0   5205          STG   15,176(0,13)
0000370A 4110 D0B0               000000B0   5206          LA    1,176(0,13)
0000370E E350 C108 0004          00003790   5207          LG    5,@lit_1576_244 ; rd_atomic32_get
00003714 B904 00F5                          5208          LGR   15,5
00003718                                    5209 @@gen_label332 DS    0H
00003718 05EF                               5210          BALR  14,15
                                                                                                                           Page  107 
  Active Usings: @REGION_1576_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000371A                                    5211 @@gen_label333 DS    0H
0000371A 59F0 3FE0               00000FE0   5212          C     15,4064(0,3)
0000371E 47B0 C0D2               0000375A   5213          BNL   @L781
                                            5214 * ***                rd_atomic32_get(&(&rkb->rkb_outbufs)->rkbq_cnt) >\
                                            5215 *  0))
00003722 41F0 3FF8               00000FF8   5216          LA    15,4088(0,3)
00003726 E3F0 D0B0 0024          000000B0   5217          STG   15,176(0,13)
0000372C 4110 D0B0               000000B0   5218          LA    1,176(0,13)
00003730 B904 00F5                          5219          LGR   15,5
00003734                                    5220 @@gen_label335 DS    0H
00003734 05EF                               5221          BALR  14,15
00003736                                    5222 @@gen_label336 DS    0H
00003736 12FF                               5223          LTR   15,15
00003738 47D0 C0D2               0000375A   5224          BNH   @L781
0000373C                                    5225 @L782    DS    0H
                                            5226 * ***                   rd_kafka_transport_poll_set(rkb->rkb_transport\
                                            5227 * , 0x0004);
0000373C E3F0 3030 0004          00000030   5228          LG    15,48(0,3)
00003742 E3F0 D0B0 0024          000000B0   5229          STG   15,176(0,13)
00003748 E548 D0B8 0004          000000B8   5230          MVGHI 184(13),4
0000374E 4110 D0B0               000000B0   5231          LA    1,176(0,13)
00003752 E3F0 C110 0004          00003798   5232          LG    15,@lit_1576_246 ; rd_kafka_transport_poll_set
00003758                                    5233 @@gen_label338 DS    0H
00003758 05EF                               5234          BALR  14,15
0000375A                                    5235 @@gen_label339 DS    0H
0000375A                                    5236 @L781    DS    0H
                                            5237 * ***
                                            5238 * ***           if ((r = rd_kafka_transport_poll(rktrans, timeout_ms))\
                                            5239 *  <= 0)
0000375A E320 D0B0 0024          000000B0   5240          STG   2,176(0,13)
00003760 E3F0 400C 0014          0000000C   5241          LGF   15,12(0,4)  ; timeout_ms
00003766 E3F0 D0B8 0024          000000B8   5242          STG   15,184(0,13)
0000376C 4110 D0B0               000000B0   5243          LA    1,176(0,13)
00003770 E3F0 C118 0004          000037A0   5244          LG    15,@lit_1576_247 ; rd_kafka_transport_poll
00003776                                    5245 @@gen_label340 DS    0H
00003776 05EF                               5246          BALR  14,15
00003778                                    5247 @@gen_label341 DS    0H
00003778 12FF                               5248          LTR   15,15
0000377A 4720 C130               000037B8   5249          BH    @L783
                                            5250 * ***                   return r;
0000377E B914 00FF                          5251          LGFR  15,15
00003782 47F0 C172               000037FA   5252          B     @ret_lab_1576
00003788                                    5253          DS    0D
00003788 000000C0                           5254 @FRAMESIZE_1576 DC F'192'
0000378C 00000000                           5255 @lit_1576_242 DC Q(rd_kafka_curr_transport)
00003790 00000000000001A8                   5256 @lit_1576_244 DC AD(rd_atomic32_get)
00003798 00000000000043D0                   5257 @lit_1576_246 DC AD(rd_kafka_transport_poll_set)
000037A0 00000000000044F8                   5258 @lit_1576_247 DC AD(rd_kafka_transport_poll)
000037A8 0000000000004460                   5259 @lit_1576_248 DC AD(rd_kafka_transport_poll_clear)
000037B0 0000000000003230                   5260 @lit_1576_249 DC AD(rd_kafka_transport_io_event)
000037B8                                    5261 @L783    DS    0H
                                            5262 * ***
                                                                                                                           Page  108 
  Active Usings: @REGION_1576_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5263 * ***
                                            5264 * ***
                                            5265 * ***           events = rktrans->rktrans_pfd[0].revents;
000037B8 4830 208E               0000008E   5266          LH    3,142(0,2)
                                            5267 * ***           if (events) {
000037BC 1233                               5268          LTR   3,3
000037BE 4780 C16E               000037F6   5269          BZ    @L784
                                            5270 * ***                   rd_kafka_transport_poll_clear(rktrans, 0x0004)\
                                            5271 * ;
000037C2 E320 D0B0 0024          000000B0   5272          STG   2,176(0,13)
000037C8 E548 D0B8 0004          000000B8   5273          MVGHI 184(13),4
000037CE 4110 D0B0               000000B0   5274          LA    1,176(0,13)
000037D2 E3F0 C120 0004          000037A8   5275          LG    15,@lit_1576_248 ; rd_kafka_transport_poll_clear
000037D8                                    5276 @@gen_label344 DS    0H
000037D8 05EF                               5277          BALR  14,15
000037DA                                    5278 @@gen_label345 DS    0H
                                            5279 * ***
                                            5280 * ***                   rd_kafka_transport_io_event(rktrans, events);
000037DA E320 D0B0 0024          000000B0   5281          STG   2,176(0,13)
000037E0 B914 00F3                          5282          LGFR  15,3
000037E4 E3F0 D0B8 0024          000000B8   5283          STG   15,184(0,13)
000037EA 4110 D0B0               000000B0   5284          LA    1,176(0,13)
000037EE E3F0 C128 0004          000037B0   5285          LG    15,@lit_1576_249 ; rd_kafka_transport_io_event
000037F4                                    5286 @@gen_label346 DS    0H
000037F4 05EF                               5287          BALR  14,15
000037F6                                    5288 @@gen_label347 DS    0H
                                            5289 * ***           }
000037F6                                    5290 @L784    DS    0H
                                            5291 * ***
                                            5292 * ***           return 1;
000037F6 A7F9 0001               00000001   5293          LGHI  15,1        ; 1
                                            5294 * ***   }
000037FA                                    5295 @ret_lab_1576 DS 0H
                                            5296 * * **** Start of Epilogue
                                            5297          DCCEPIL
000037FA                                    5298+         ds 0h                                                          01-DCCEP
                                            5299+* Epilog
000037FA D707 D088 D088 00000088 00000088   5300+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003800 E3D0 D080 0004          00000080   5301+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003806 E3C0 D090 0004          00000090   5302+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000380C E3B0 C018 0004          00000018   5303+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003812 E3C0 B010 0021          00000010   5304+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003818 E3E0 D008 0004          00000008   5305+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000381E EB1C D020 0004          00000020   5306+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003824 078E                               5307+         bcr 8,14                if same dsab, just return              01-DCCEP
00003826 E3F0 D010 0024          00000010   5308+         stg 15,16(0,13)         save return code                       01-DCCEP
0000382C E300 D018 0024          00000018   5309+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003832 E3F0 D090 0004          00000090   5310+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003838 E3F0 F018 0004          00000018   5311+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000383E 47F0 F040               00000040   5312+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5313+* End of Epilog
                                            5314 * * **** End of Epilogue
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5315          DROP  12
                                            5316 *
                                            5317 *   DSECT for automatic variables in "rd_kafka_transport_io_serve"
                                            5318 *      (FUNCTION #1576)
                                            5319 *
00000000                00000000 000000AC   5320 @AUTO#rd_kafka_transport_io_serve DSECT
00000000                                    5321          DS    XL168
000000A8                                    5322 rd_kafka_transport_io_serve#r#0 DS 1F ; r
000000AC                000000AC 000000A8   5323          ORG   @AUTO#rd_kafka_transport_io_serve+168
000000A8                                    5324 rd_kafka_transport_io_serve#events#0 DS 1F ; events
                                            5325 *
00003842                00000000 000046BC   5326 @CODE    CSECT
                                            5327 *
                                            5328 *
                                            5329 *
                                            5330 * ....... start of rd_kafka_transport_new
                                            5331 rd_kafka_transport_new ALIAS X'99846D92818692816DA3998195A2979699A36D95*
                                                                85A6'
00003842                                    5332 @LNAME1581 DS  0H
00003842 00000016                           5333          DC    X'00000016'
00003846 99846D9281869281                   5334          DC    C'rd_kafka_transport_new'
0000385C 00                                 5335          DC    X'00'
                                            5336 rd_kafka_transport_new DCCPRLG CINDEX=1581,BASER=12,FRAME=496,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1581
                                            5337          macro
                                            5338          dccextrn &m
                                            5339          gblc    &$dccext(1000)
                                            5340          gbla    &$dccexti
                                            5341          lcla    &i
                                            5342 &$dccext(&$dccexti+1) setc    '&m'
                                            5343 &i       seta    1
                                            5344 .loop    aif    (&i gt &$dccexti).around
                                            5345          aif    ('&$dccext(&i)' eq '&m').getout
                                            5346 &i       seta    &i+1
                                            5347          ago     .loop
                                            5348 .around  anop
                                            5349 &$dccexti seta &$dccexti+1
                                            5350          extrn  &m
                                            5351 .getout  anop
                                            5352          mend
00003860                                    5353+$eye0089    ds    0d                                                    02-DCCCA
00003860 C4C3C3                             5354+         dc cl3'DCC'                                                    02-DCCCA
00003863 01                                 5355+         dc xl1'01' format one                                          02-DCCCA
00003864 00000000                           5356+         dc a(0)                                                        02-DCCCA
00003868 00000000000038D2                   5357+         dc ad(@PER_1581)                                               02-DCCCA
00003870 00000000000001F0                   5358+         dc ad(496)                                                     02-DCCCA
00003878 0000000000000000                   5359+         dc ad(0)                                                       02-DCCCA
00003880 0000000000001000                   5360+         dc ad(4096)                                                    02-DCCCA
00003888 20                                 5361+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003889 03                                 5362+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000388A 03                                 5363+         dc al1(3)                                                      02-DCCCA
0000388B 08                                 5364+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  110 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000388C 00                                 5365+         dc bl.8'00000000'                                              02-DCCCA
0000388D 000000                             5366+         dc al3(0)                                                      02-DCCCA
00003890 0000000000003842                   5367+         dc ad(@LNAME1581)                                              02-DCCCA
00003898                                    5368+         ds 0d                                                          02-DCCCA
00003898 0000000000003860                   5369+         dc ad($eye0089)                                                02-DCCCA
000038A0 0000000000000000                   5370+         dc ad(0)                                                       02-DCCCA
000038A8                                    5371+         ds    0d                                                       01-DCCPR
                                            5372+         entry rd_kafka_transport_new                                   01-DCCPR
000038A8                                    5373+rd_kafka_transport_new ds 0d                                            01-DCCPR
000038A8                                    5374+@REGION_1581_1 ds 0h                                                    01-DCCPR
000038A8 EBEC D008 0024          00000008   5375+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000038AE E3E0 D088 0004          00000088   5376+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000038B4 E3C0 D090 0004          00000090   5377+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000038BA B904 002E                          5378+         lgr   2,14                copy addr of our savearea            01-DCCPR
000038BE E3B0 C018 0004          00000018   5379+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000038C4 A7EB 01F0               000001F0   5380+         aghi  14,496              increase by frame size               01-DCCPR
000038C8 E3E0 C020 0021          00000020   5381+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000038CE 4720 B020               00000020   5382+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000038D2                                    5383+@PER_1581 ds   0h                                                       01-DCCPR
000038D2 EBDE 2080 0024          00000080   5384+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000038D8 E3C0 2090 0024          00000090   5385+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000038DE B904 00D2                          5386+         lgr   13,2                set real frame pointer               01-DCCPR
000038E2 B904 00CF                          5387+         lgr   12,15               set base reg                         01-DCCPR
                        000038A8            5388+         using @REGION_1581_1,12                                        01-DCCPR
000038E6 B904 0041                          5389          LGR   4,1         ; ptr to parm area
                                            5390 * ******* End of Prologue
                                            5391 * *
000038EA E320 4000 0004          00000000   5392          LG    2,0(0,4)    ; rkb
000038F0 5830 400C               0000000C   5393          L     3,12(0,4)   ; s
                                            5394 * ***           rd_kafka_transport_t *rktrans;
                                            5395 * ***           int on = 1;
000038F4 E54C D0A8 0001          000000A8   5396          MVHI  168(13),1   ; on
                                            5397 * ***           int r;
                                            5398 * ***
                                            5399 * ***
                                            5400 * ***
                                            5401 * ***           if (setsockopt(s, 0xffff, 0x0800, &on, sizeof(on)) == \
                                            5402 * -1)
000038FA B914 00F3                          5403          LGFR  15,3
000038FE E3F0 D1B0 0024          000001B0   5404          STG   15,432(0,13)
00003904 C0FF 0000 FFFF                     5405          LLILF 15,X'0000FFFF' ; 65535
0000390A E3F0 D1B8 0024          000001B8   5406          STG   15,440(0,13)
00003910 E548 D1C0 0800          000001C0   5407          MVGHI 448(13),2048
00003916 41F0 D0A8               000000A8   5408          LA    15,168(0,13)
0000391A E3F0 D1C8 0024          000001C8   5409          STG   15,456(0,13)
00003920 E548 D1D0 0004          000001D0   5410          MVGHI 464(13),4
00003926 4110 D1B0               000001B0   5411          LA    1,432(0,13)
0000392A E3F0 C338 0004          00003BE0   5412          LG    15,@lit_1581_253 ; setsockopt
00003930                                    5413 @@gen_label348 DS    0H
00003930 05EF                               5414          BALR  14,15
00003932                                    5415 @@gen_label349 DS    0H
00003932 A7FE FFFF               0000FFFF   5416          CHI   15,-1
                                                                                                                           Page  111 
  Active Usings: @REGION_1581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003936 4770 C17C               00003A24   5417          BNE   @L785
                                            5418 * ***                   do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x2\
                                            5419 * )))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); \
                                            5420 * rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock\
                                            5421 * (&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (\
                                            5422 * rkb)->rkb_rk, _logname, 7, (0x2), "SOCKET", "Failed to set SO_NOSIGP\
                                            5423 * IPE: %s", strerror((* __error()))); } while (0); } } while (0);
0000393A                                    5424 @L786    DS    0H
0000393A E3F0 2FD0 0004          00000FD0   5425          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00003940 9102 F323      00000323 00000002   5426          TM    803(15),2
00003944 4780 C17C               00003A24   5427          BZ    @L789
00003948                                    5428 @L790    DS    0H
00003948 A759 1638               00001638   5429          LGHI  5,5688      ; 5688
0000394C 41F5 2000               00000000   5430          LA    15,0(5,2)
00003950 E3F0 D1B0 0024          000001B0   5431          STG   15,432(0,13)
00003956 4110 D1B0               000001B0   5432          LA    1,432(0,13)
0000395A E3F0 C340 0004          00003BE8   5433          LG    15,@lit_1581_255 ; mtx_lock
00003960                                    5434 @@gen_label352 DS    0H
00003960 05EF                               5435          BALR  14,15
00003962                                    5436 @@gen_label353 DS    0H
00003962 41F0 D0AC               000000AC   5437          LA    15,172(0,13)
00003966 E3F0 D1B0 0024          000001B0   5438          STG   15,432(0,13)
0000396C A7F9 1630               00001630   5439          LGHI  15,5680     ; 5680
00003970 E3FF 2000 0004          00000000   5440          LG    15,0(15,2)
00003976 E3F0 D1B8 0024          000001B8   5441          STG   15,440(0,13)
0000397C E548 D1C0 0100          000001C0   5442          MVGHI 448(13),256
00003982 4110 D1B0               000001B0   5443          LA    1,432(0,13)
00003986 E3F0 C348 0004          00003BF0   5444          LG    15,@lit_1581_257 ; rd_strlcpy
0000398C                                    5445 @@gen_label354 DS    0H
0000398C 05EF                               5446          BALR  14,15
0000398E                                    5447 @@gen_label355 DS    0H
0000398E 41F5 2000               00000000   5448          LA    15,0(5,2)
00003992 E3F0 D1B0 0024          000001B0   5449          STG   15,432(0,13)
00003998 4110 D1B0               000001B0   5450          LA    1,432(0,13)
0000399C E3F0 C350 0004          00003BF8   5451          LG    15,@lit_1581_259 ; mtx_unlock
000039A2                                    5452 @@gen_label356 DS    0H
000039A2 05EF                               5453          BALR  14,15
000039A4                                    5454 @@gen_label357 DS    0H
000039A4 E3F0 C358 0004          00003C00   5455          LG    15,@lit_1581_260 ; __error
000039AA                                    5456 @@gen_label358 DS    0H
000039AA 05EF                               5457          BALR  14,15
000039AC                                    5458 @@gen_label359 DS    0H
000039AC 58F0 F000               00000000   5459          L     15,0(0,15)
000039B0 B914 00FF                          5460          LGFR  15,15
000039B4 E3F0 D1B0 0024          000001B0   5461          STG   15,432(0,13)
000039BA 4110 D1B0               000001B0   5462          LA    1,432(0,13)
000039BE E3F0 C360 0004          00003C08   5463          LG    15,@lit_1581_261 ; strerror
000039C4                                    5464 @@gen_label360 DS    0H
000039C4 05EF                               5465          BALR  14,15
000039C6                                    5466 @@gen_label361 DS    0H
000039C6 E310 2FD0 0004          00000FD0   5467          LG    1,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
000039CC 4110 1210               00000210   5468          LA    1,528(0,1)
                                                                                                                           Page  112 
  Active Usings: @REGION_1581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000039D0 E310 D1B0 0024          000001B0   5469          STG   1,432(0,13)
000039D6 E310 2FD0 0004          00000FD0   5470          LG    1,4048(0,2)
000039DC E310 D1B8 0024          000001B8   5471          STG   1,440(0,13)
000039E2 4110 D0AC               000000AC   5472          LA    1,172(0,13)
000039E6 E310 D1C0 0024          000001C0   5473          STG   1,448(0,13)
000039EC E548 D1C8 0007          000001C8   5474          MVGHI 456(13),7
000039F2 E548 D1D0 0002          000001D0   5475          MVGHI 464(13),2
000039F8 E310 C370 0004          00003C18   5476          LG    1,@lit_1581_262
000039FE 4150 13D8               000003D8   5477          LA    5,984(0,1)
00003A02 E350 D1D8 0024          000001D8   5478          STG   5,472(0,13)
00003A08 4110 13E0               000003E0   5479          LA    1,992(0,1)
00003A0C E310 D1E0 0024          000001E0   5480          STG   1,480(0,13)
00003A12 E3F0 D1E8 0024          000001E8   5481          STG   15,488(0,13)
00003A18 4110 D1B0               000001B0   5482          LA    1,432(0,13)
00003A1C E3F0 C368 0004          00003C10   5483          LG    15,@lit_1581_263 ; rd_kafka_log0
00003A22                                    5484 @@gen_label362 DS    0H
00003A22 05EF                               5485          BALR  14,15
00003A24                                    5486 @@gen_label363 DS    0H
00003A24                                    5487 @L789    DS    0H
                                            5488 * ***
                                            5489 * ***
                                            5490 * ***
                                            5491 * ***
                                            5492 * ***
                                            5493 * ***
                                            5494 * ***           if (rkb->rkb_rk->rk_conf.socket_keepalive) {
00003A24                                    5495 @L785    DS    0H
00003A24 E3F0 2FD0 0004          00000FD0   5496          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00003A2A E3F0 F33C 0012          0000033C   5497          LT    15,828(0,15) ; offset of socket_keepalive in rd_kafka_co*
                                                                nf_s
00003A30 4780 C2B6               00003B5E   5498          BZ    @L793
                                            5499 * ***                   if (setsockopt(s, 0xffff, 0x0008,
                                            5500 * ***                                  (void *)&on, sizeof(on)) == (-1\
                                            5501 * ))
00003A34 B914 00F3                          5502          LGFR  15,3
00003A38 E3F0 D1B0 0024          000001B0   5503          STG   15,432(0,13)
00003A3E C0FF 0000 FFFF                     5504          LLILF 15,X'0000FFFF' ; 65535
00003A44 E3F0 D1B8 0024          000001B8   5505          STG   15,440(0,13)
00003A4A E548 D1C0 0008          000001C0   5506          MVGHI 448(13),8
00003A50 41F0 D0A8               000000A8   5507          LA    15,168(0,13)
00003A54 E3F0 D1C8 0024          000001C8   5508          STG   15,456(0,13)
00003A5A E548 D1D0 0004          000001D0   5509          MVGHI 464(13),4
00003A60 4110 D1B0               000001B0   5510          LA    1,432(0,13)
00003A64 E3F0 C338 0004          00003BE0   5511          LG    15,@lit_1581_253 ; setsockopt
00003A6A                                    5512 @@gen_label365 DS    0H
00003A6A 05EF                               5513          BALR  14,15
00003A6C                                    5514 @@gen_label366 DS    0H
00003A6C A7FE FFFF               0000FFFF   5515          CHI   15,-1
00003A70 4770 C2B6               00003B5E   5516          BNE   @L793
                                            5517 * ***                           do { if ((((rkb)->rkb_rk->rk_conf.debu\
                                            5518 * g & (0x2)))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_logname\
                                            5519 * _lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); mt\
                                                                                                                           Page  113 
  Active Usings: @REGION_1581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5520 * x_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk\
                                            5521 * _conf, (rkb)->rkb_rk, _logname, 7, (0x2), "SOCKET", "Failed to set S\
                                            5522 * O_KEEPALIVE: %s", strerror((* __error()))); } while (0); } } while (\
                                            5523 * 0);
00003A74                                    5524 @L795    DS    0H
00003A74 E3F0 2FD0 0004          00000FD0   5525          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00003A7A 9102 F323      00000323 00000002   5526          TM    803(15),2
00003A7E 4780 C2B6               00003B5E   5527          BZ    @L798
00003A82                                    5528 @L799    DS    0H
00003A82 A759 1638               00001638   5529          LGHI  5,5688      ; 5688
00003A86 41F5 2000               00000000   5530          LA    15,0(5,2)
00003A8A E3F0 D1B0 0024          000001B0   5531          STG   15,432(0,13)
00003A90 4110 D1B0               000001B0   5532          LA    1,432(0,13)
00003A94 E3F0 C340 0004          00003BE8   5533          LG    15,@lit_1581_255 ; mtx_lock
00003A9A                                    5534 @@gen_label369 DS    0H
00003A9A 05EF                               5535          BALR  14,15
00003A9C                                    5536 @@gen_label370 DS    0H
00003A9C 41F0 D0AC               000000AC   5537          LA    15,172(0,13)
00003AA0 E3F0 D1B0 0024          000001B0   5538          STG   15,432(0,13)
00003AA6 A7F9 1630               00001630   5539          LGHI  15,5680     ; 5680
00003AAA E3FF 2000 0004          00000000   5540          LG    15,0(15,2)
00003AB0 E3F0 D1B8 0024          000001B8   5541          STG   15,440(0,13)
00003AB6 E548 D1C0 0100          000001C0   5542          MVGHI 448(13),256
00003ABC 4110 D1B0               000001B0   5543          LA    1,432(0,13)
00003AC0 E3F0 C348 0004          00003BF0   5544          LG    15,@lit_1581_257 ; rd_strlcpy
00003AC6                                    5545 @@gen_label371 DS    0H
00003AC6 05EF                               5546          BALR  14,15
00003AC8                                    5547 @@gen_label372 DS    0H
00003AC8 41F5 2000               00000000   5548          LA    15,0(5,2)
00003ACC E3F0 D1B0 0024          000001B0   5549          STG   15,432(0,13)
00003AD2 4110 D1B0               000001B0   5550          LA    1,432(0,13)
00003AD6 E3F0 C350 0004          00003BF8   5551          LG    15,@lit_1581_259 ; mtx_unlock
00003ADC                                    5552 @@gen_label373 DS    0H
00003ADC 05EF                               5553          BALR  14,15
00003ADE                                    5554 @@gen_label374 DS    0H
00003ADE E3F0 C358 0004          00003C00   5555          LG    15,@lit_1581_260 ; __error
00003AE4                                    5556 @@gen_label375 DS    0H
00003AE4 05EF                               5557          BALR  14,15
00003AE6                                    5558 @@gen_label376 DS    0H
00003AE6 58F0 F000               00000000   5559          L     15,0(0,15)
00003AEA B914 00FF                          5560          LGFR  15,15
00003AEE E3F0 D1B0 0024          000001B0   5561          STG   15,432(0,13)
00003AF4 4110 D1B0               000001B0   5562          LA    1,432(0,13)
00003AF8 E3F0 C360 0004          00003C08   5563          LG    15,@lit_1581_261 ; strerror
00003AFE                                    5564 @@gen_label377 DS    0H
00003AFE 05EF                               5565          BALR  14,15
00003B00                                    5566 @@gen_label378 DS    0H
00003B00 E310 2FD0 0004          00000FD0   5567          LG    1,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00003B06 4110 1210               00000210   5568          LA    1,528(0,1)
00003B0A E310 D1B0 0024          000001B0   5569          STG   1,432(0,13)
00003B10 E310 2FD0 0004          00000FD0   5570          LG    1,4048(0,2)
00003B16 E310 D1B8 0024          000001B8   5571          STG   1,440(0,13)
                                                                                                                           Page  114 
  Active Usings: @REGION_1581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003B1C 4110 D0AC               000000AC   5572          LA    1,172(0,13)
00003B20 E310 D1C0 0024          000001C0   5573          STG   1,448(0,13)
00003B26 E548 D1C8 0007          000001C8   5574          MVGHI 456(13),7
00003B2C E548 D1D0 0002          000001D0   5575          MVGHI 464(13),2
00003B32 E310 C370 0004          00003C18   5576          LG    1,@lit_1581_262
00003B38 4150 13D8               000003D8   5577          LA    5,984(0,1)
00003B3C E350 D1D8 0024          000001D8   5578          STG   5,472(0,13)
00003B42 4110 1400               00000400   5579          LA    1,1024(0,1)
00003B46 E310 D1E0 0024          000001E0   5580          STG   1,480(0,13)
00003B4C E3F0 D1E8 0024          000001E8   5581          STG   15,488(0,13)
00003B52 4110 D1B0               000001B0   5582          LA    1,432(0,13)
00003B56 E3F0 C368 0004          00003C10   5583          LG    15,@lit_1581_263 ; rd_kafka_log0
00003B5C                                    5584 @@gen_label379 DS    0H
00003B5C 05EF                               5585          BALR  14,15
00003B5E                                    5586 @@gen_label380 DS    0H
00003B5E                                    5587 @L798    DS    0H
                                            5588 * ***
                                            5589 * ***
                                            5590 * ***           }
00003B5E                                    5591 @L794    DS    0H
00003B5E                                    5592 @L793    DS    0H
                                            5593 * ***
                                            5594 * ***
                                            5595 * ***
                                            5596 * ***           if ((r = rd_fd_set_nonblocking(s))) {
00003B5E B914 00F3                          5597          LGFR  15,3
00003B62 E3F0 D1B0 0024          000001B0   5598          STG   15,432(0,13)
00003B68 4110 D1B0               000001B0   5599          LA    1,432(0,13)
00003B6C E3F0 C378 0004          00003C20   5600          LG    15,@lit_1581_276 ; rd_fd_set_nonblocking
00003B72                                    5601 @@gen_label381 DS    0H
00003B72 05EF                               5602          BALR  14,15
00003B74                                    5603 @@gen_label382 DS    0H
00003B74 12FF                               5604          LTR   15,15
00003B76 4780 C390               00003C38   5605          BZ    @L802
                                            5606 * ***                   snprintf(errstr, errstr_size, "Failed to set s\
                                            5607 * ocket non-blocking: %s", strerror(r));
00003B7A B914 00FF                          5608          LGFR  15,15
00003B7E E3F0 D1B0 0024          000001B0   5609          STG   15,432(0,13)
00003B84 4110 D1B0               000001B0   5610          LA    1,432(0,13)
00003B88 E3F0 C360 0004          00003C08   5611          LG    15,@lit_1581_261 ; strerror
00003B8E                                    5612 @@gen_label384 DS    0H
00003B8E 05EF                               5613          BALR  14,15
00003B90                                    5614 @@gen_label385 DS    0H
00003B90 E310 4010 0004          00000010   5615          LG    1,16(0,4)   ; errstr
00003B96 E310 D1B0 0024          000001B0   5616          STG   1,432(0,13)
00003B9C E310 4018 0004          00000018   5617          LG    1,24(0,4)   ; errstr_size
00003BA2 E310 D1B8 0024          000001B8   5618          STG   1,440(0,13)
00003BA8 E310 C370 0004          00003C18   5619          LG    1,@lit_1581_262
00003BAE 4110 1420               00000420   5620          LA    1,1056(0,1)
00003BB2 E310 D1C0 0024          000001C0   5621          STG   1,448(0,13)
00003BB8 E3F0 D1C8 0024          000001C8   5622          STG   15,456(0,13)
00003BBE 4110 D1B0               000001B0   5623          LA    1,432(0,13)
                                                                                                                           Page  115 
  Active Usings: @REGION_1581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003BC2 E3F0 C380 0004          00003C28   5624          LG    15,@lit_1581_279 ; snprintf
00003BC8                                    5625 @@gen_label386 DS    0H
00003BC8 05EF                               5626          BALR  14,15
00003BCA                                    5627 @@gen_label387 DS    0H
                                            5628 * ***
                                            5629 * ***
                                            5630 * ***                   return ((void *)0);
00003BCA A7F9 0000               00000000   5631          LGHI  15,0        ; 0
00003BCE 47F0 C3B2               00003C5A   5632          B     @ret_lab_1581
00003BD8                                    5633          DS    0D
00003BD8 000001F0                           5634 @FRAMESIZE_1581 DC F'496'
00003BDC 00000000
00003BE0 0000000000000000                   5635 @lit_1581_253 DC AD(setsockopt)
00003BE8 0000000000000000                   5636 @lit_1581_255 DC AD(mtx_lock)
00003BF0 0000000000000D50                   5637 @lit_1581_257 DC AD(rd_strlcpy)
00003BF8 0000000000000000                   5638 @lit_1581_259 DC AD(mtx_unlock)
00003C00 0000000000000000                   5639 @lit_1581_260 DC AD(__error)
00003C08 0000000000000000                   5640 @lit_1581_261 DC AD(strerror)
00003C10 0000000000000000                   5641 @lit_1581_263 DC AD(rd_kafka_log0)
00003C18 00000000000048E4                   5642 @lit_1581_262 DC AD(@strings@)
00003C20 0000000000000438                   5643 @lit_1581_276 DC AD(rd_fd_set_nonblocking)
00003C28 0000000000000000                   5644 @lit_1581_279 DC AD(snprintf)
00003C30 00000000000005B0                   5645 @lit_1581_281 DC AD(rd_calloc)
                                            5646 * ***           }
00003C38                                    5647 @L802    DS    0H
                                            5648 * ***
                                            5649 * ***
                                            5650 * ***           rktrans = rd_calloc(1, sizeof(*rktrans));
00003C38 E548 D1B0 0001          000001B0   5651          MVGHI 432(13),1
00003C3E E548 D1B8 00B0          000001B8   5652          MVGHI 440(13),176
00003C44 4110 D1B0               000001B0   5653          LA    1,432(0,13)
00003C48 E3F0 C388 0004          00003C30   5654          LG    15,@lit_1581_281 ; rd_calloc
00003C4E                                    5655 @@gen_label388 DS    0H
00003C4E 05EF                               5656          BALR  14,15
00003C50                                    5657 @@gen_label389 DS    0H
                                            5658 * ***           rktrans->rktrans_rkb = rkb;
00003C50 E320 F008 0024          00000008   5659          STG   2,8(0,15)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
                                            5660 * ***           rktrans->rktrans_s = s;
00003C56 5030 F000               00000000   5661          ST    3,0(0,15)   ; rktrans
                                            5662 * ***
                                            5663 * ***           return rktrans;
                                            5664 * ***   }
00003C5A                                    5665 @ret_lab_1581 DS 0H
                                            5666 * * **** Start of Epilogue
                                            5667          DCCEPIL
00003C5A                                    5668+         ds 0h                                                          01-DCCEP
                                            5669+* Epilog
00003C5A D707 D088 D088 00000088 00000088   5670+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C60 E3D0 D080 0004          00000080   5671+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003C66 E3C0 D090 0004          00000090   5672+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C6C E3B0 C018 0004          00000018   5673+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  116 
  Active Usings: @REGION_1581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003C72 E3C0 B010 0021          00000010   5674+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C78 E3E0 D008 0004          00000008   5675+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C7E EB1C D020 0004          00000020   5676+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C84 078E                               5677+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C86 E3F0 D010 0024          00000010   5678+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C8C E300 D018 0024          00000018   5679+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C92 E3F0 D090 0004          00000090   5680+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C98 E3F0 F018 0004          00000018   5681+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C9E 47F0 F040               00000040   5682+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5683+* End of Epilog
                                            5684 * * **** End of Epilogue
                                            5685          DROP  12
                                            5686 *
                                            5687 *   DSECT for automatic variables in "rd_kafka_transport_new"
                                            5688 *      (FUNCTION #1581)
                                            5689 *
00000000                00000000 000001AC   5690 @AUTO#rd_kafka_transport_new DSECT
00000000                                    5691          DS    XL168
000000A8                                    5692 rd_kafka_transport_new#r#0 DS 1F ; r
000000AC                000000AC 000000A8   5693          ORG   @AUTO#rd_kafka_transport_new+168
000000A8                                    5694 rd_kafka_transport_new#on#0 DS 1F ; on
000000AC                000000AC 000000AC   5695          ORG   @AUTO#rd_kafka_transport_new+172
000000AC                                    5696 rd_kafka_transport_new#_logname#7 DS 256XL1 ; _logname
000001AC                000001AC 000000AC   5697          ORG   @AUTO#rd_kafka_transport_new+172
000000AC                                    5698 rd_kafka_transport_new#_logname#3 DS 256XL1 ; _logname
                                            5699 *
00003CA2                00000000 000046BC   5700 @CODE    CSECT
                                            5701 *
                                            5702 *
                                            5703 *
                                            5704 * ....... start of rd_kafka_transport_connect
                                            5705 rd_kafka_transport_connect ALIAS X'99846D92818692816DA3998195A2979699A3*
                                                                6D839695958583A3'
00003CA2                                    5706 @LNAME1582 DS  0H
00003CA2 0000001A                           5707          DC    X'0000001A'
00003CA6 99846D9281869281                   5708          DC    C'rd_kafka_transport_connect'
00003CC0 00                                 5709          DC    X'00'
                                            5710 rd_kafka_transport_connect DCCPRLG CINDEX=1582,BASER=12,FRAME=504,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1582
                                            5711          macro
                                            5712          dccextrn &m
                                            5713          gblc    &$dccext(1000)
                                            5714          gbla    &$dccexti
                                            5715          lcla    &i
                                            5716 &$dccext(&$dccexti+1) setc    '&m'
                                            5717 &i       seta    1
                                            5718 .loop    aif    (&i gt &$dccexti).around
                                            5719          aif    ('&$dccext(&i)' eq '&m').getout
                                            5720 &i       seta    &i+1
                                            5721          ago     .loop
                                            5722 .around  anop
                                            5723 &$dccexti seta &$dccexti+1
                                                                                                                           Page  117 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5724          extrn  &m
                                            5725 .getout  anop
                                            5726          mend
00003CC8                                    5727+$eye0092    ds    0d                                                    02-DCCCA
00003CC8 C4C3C3                             5728+         dc cl3'DCC'                                                    02-DCCCA
00003CCB 01                                 5729+         dc xl1'01' format one                                          02-DCCCA
00003CCC 00000000                           5730+         dc a(0)                                                        02-DCCCA
00003CD0 0000000000003D3A                   5731+         dc ad(@PER_1582)                                               02-DCCCA
00003CD8 00000000000001F8                   5732+         dc ad(504)                                                     02-DCCCA
00003CE0 0000000000000000                   5733+         dc ad(0)                                                       02-DCCCA
00003CE8 0000000000001000                   5734+         dc ad(4096)                                                    02-DCCCA
00003CF0 20                                 5735+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003CF1 03                                 5736+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003CF2 03                                 5737+         dc al1(3)                                                      02-DCCCA
00003CF3 08                                 5738+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003CF4 00                                 5739+         dc bl.8'00000000'                                              02-DCCCA
00003CF5 000000                             5740+         dc al3(0)                                                      02-DCCCA
00003CF8 0000000000003CA2                   5741+         dc ad(@LNAME1582)                                              02-DCCCA
00003D00                                    5742+         ds 0d                                                          02-DCCCA
00003D00 0000000000003CC8                   5743+         dc ad($eye0092)                                                02-DCCCA
00003D08 0000000000000000                   5744+         dc ad(0)                                                       02-DCCCA
00003D10                                    5745+         ds    0d                                                       01-DCCPR
                                            5746+         entry rd_kafka_transport_connect                               01-DCCPR
00003D10                                    5747+rd_kafka_transport_connect ds 0d                                        01-DCCPR
00003D10                                    5748+@REGION_1582_1 ds 0h                                                    01-DCCPR
00003D10 EBEC D008 0024          00000008   5749+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003D16 E3E0 D088 0004          00000088   5750+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003D1C E3C0 D090 0004          00000090   5751+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003D22 B904 002E                          5752+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003D26 E3B0 C018 0004          00000018   5753+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003D2C A7EB 01F8               000001F8   5754+         aghi  14,504              increase by frame size               01-DCCPR
00003D30 E3E0 C020 0021          00000020   5755+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003D36 4720 B020               00000020   5756+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003D3A                                    5757+@PER_1582 ds   0h                                                       01-DCCPR
00003D3A EBDE 2080 0024          00000080   5758+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003D40 E3C0 2090 0024          00000090   5759+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003D46 B904 00D2                          5760+         lgr   13,2                set real frame pointer               01-DCCPR
00003D4A B904 00CF                          5761+         lgr   12,15               set base reg                         01-DCCPR
                        00003D10            5762+         using @REGION_1582_1,12                                        01-DCCPR
                                            5763          DCCPRV REG=2      ; Get PRV from DVT
00003D4E E320 B008 0004          00000008   5764+         LG 2,8(0,11)                                                   01-DCCPR
                                            5765 * ******* End of Prologue
                                            5766 * *
00003D54 EB36 1000 0004          00000000   5767          LMG   3,6,0(1)    ; rkb
                                            5768 * ***      rd_kafka_transport_t *rktrans;
                                            5769 * ***      int s = -1;
                                            5770 * ***           int r;
                                            5771 * ***
                                            5772 * ***           rkb->rkb_addr_last = sinx;
00003D5A E340 3028 0024          00000028   5773          STG   4,40(0,3)   ; offset of rkb_addr_last in rd_kafka_broker*
                                                                _s
                                            5774 * ***
                                                                                                                           Page  118 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5775 * ***      s = rkb->rkb_rk->rk_conf.socket_cb(sinx->in.sin_family,
                                            5776 * ***                     1, 6,
                                            5777 * ***                     rkb->rkb_rk->rk_conf.opaque);
00003D60 E3F0 4001 0094          00000001   5778          LLC   15,1(0,4)
00003D66 B914 00FF                          5779          LGFR  15,15
00003D6A E3F0 D1A8 0024          000001A8   5780          STG   15,424(0,13)
00003D70 E548 D1B0 0001          000001B0   5781          MVGHI 432(13),1
00003D76 E548 D1B8 0006          000001B8   5782          MVGHI 440(13),6
00003D7C E3F0 3FD0 0004          00000FD0   5783          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003D82 E3F0 F8A8 0004          000008A8   5784          LG    15,2216(0,15)
00003D88 E3F0 D1C0 0024          000001C0   5785          STG   15,448(0,13)
00003D8E E3F0 3FD0 0004          00000FD0   5786          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003D94 E3F0 F880 0004          00000880   5787          LG    15,2176(0,15) ; offset of socket_cb in rd_kafka_conf_s
00003D9A 4110 D1A8               000001A8   5788          LA    1,424(0,13)
00003D9E                                    5789 @@gen_label390 DS    0H
00003D9E 05EF                               5790          BALR  14,15
00003DA0                                    5791 @@gen_label391 DS    0H
00003DA0 188F                               5792          LR    8,15
                                            5793 * ***      if (s == -1) {
00003DA2 A78E FFFF               0000FFFF   5794          CHI   8,-1
00003DA6 4770 C170               00003E80   5795          BNE   @L803
                                            5796 * ***         snprintf(errstr, errstr_size, "Failed to create socket: \
                                            5797 * %s", strerror((* __error())));
00003DAA E3F0 C0F8 0004          00003E08   5798          LG    15,@lit_1582_284 ; __error
00003DB0                                    5799 @@gen_label393 DS    0H
00003DB0 05EF                               5800          BALR  14,15
00003DB2                                    5801 @@gen_label394 DS    0H
00003DB2 58F0 F000               00000000   5802          L     15,0(0,15)
00003DB6 B914 00FF                          5803          LGFR  15,15
00003DBA E3F0 D1A8 0024          000001A8   5804          STG   15,424(0,13)
00003DC0 4110 D1A8               000001A8   5805          LA    1,424(0,13)
00003DC4 E3F0 C100 0004          00003E10   5806          LG    15,@lit_1582_285 ; strerror
00003DCA                                    5807 @@gen_label395 DS    0H
00003DCA 05EF                               5808          BALR  14,15
00003DCC                                    5809 @@gen_label396 DS    0H
00003DCC EB56 D1A8 0024          000001A8   5810          STMG  5,6,424(13)
00003DD2 E310 C110 0004          00003E20   5811          LG    1,@lit_1582_286
00003DD8 4110 1446               00000446   5812          LA    1,1094(0,1)
00003DDC E310 D1B8 0024          000001B8   5813          STG   1,440(0,13)
00003DE2 E3F0 D1C0 0024          000001C0   5814          STG   15,448(0,13)
00003DE8 4110 D1A8               000001A8   5815          LA    1,424(0,13)
00003DEC E3F0 C108 0004          00003E18   5816          LG    15,@lit_1582_287 ; snprintf
00003DF2                                    5817 @@gen_label397 DS    0H
00003DF2 05EF                               5818          BALR  14,15
00003DF4                                    5819 @@gen_label398 DS    0H
                                            5820 * ***
                                            5821 * ***         return ((void *)0);
00003DF4 A7F9 0000               00000000   5822          LGHI  15,0        ; 0
00003DF8 47F0 C60E               0000431E   5823          B     @ret_lab_1582
00003E00                                    5824          DS    0D
00003E00 000001F8                           5825 @FRAMESIZE_1582 DC F'504'
00003E04 00000000
                                                                                                                           Page  119 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003E08 0000000000000000                   5826 @lit_1582_284 DC AD(__error)
00003E10 0000000000000000                   5827 @lit_1582_285 DC AD(strerror)
00003E18 0000000000000000                   5828 @lit_1582_287 DC AD(snprintf)
00003E20 00000000000048E4                   5829 @lit_1582_286 DC AD(@strings@)
00003E28 00000000000038A8                   5830 @lit_1582_289 DC AD(rd_kafka_transport_new)
00003E30 0000000000000E70                   5831 @lit_1582_290 DC AD(rd_kafka_transport_close0)
00003E38 0000000000000000                   5832 @lit_1582_293 DC AD(mtx_lock)
00003E40 0000000000000D50                   5833 @lit_1582_295 DC AD(rd_strlcpy)
00003E48 0000000000000000                   5834 @lit_1582_297 DC AD(mtx_unlock)
00003E50 0000000000000000                   5835 @lit_1582_298 DC AD(rd_sockaddr2str)
00003E58 0000000000000000                   5836 @lit_1582_302 DC AD(rd_kafka_log0)
00003E60 00000000                           5837 @lit_1582_301 DC Q(rd_kafka_secproto_names)
00003E64 00000000
00003E68 0000000000000000                   5838 @lit_1582_312 DC AD(connect)
00003E70 0000000000000FC0                   5839 @lit_1582_330 DC AD(rd_kafka_transport_close)
00003E78 00000000000043D0                   5840 @lit_1582_334 DC AD(rd_kafka_transport_poll_set)
                                            5841 * ***      }
00003E80                                    5842 @L803    DS    0H
                                            5843 * ***
                                            5844 * ***           rktrans = rd_kafka_transport_new(rkb, s, errstr, errst\
                                            5845 * r_size);
00003E80 E330 D1A8 0024          000001A8   5846          STG   3,424(0,13)
00003E86 B914 00F8                          5847          LGFR  15,8
00003E8A E3F0 D1B0 0024          000001B0   5848          STG   15,432(0,13)
00003E90 EB56 D1B8 0024          000001B8   5849          STMG  5,6,440(13)
00003E96 4110 D1A8               000001A8   5850          LA    1,424(0,13)
00003E9A E3F0 C118 0004          00003E28   5851          LG    15,@lit_1582_289 ; rd_kafka_transport_new
00003EA0                                    5852 @@gen_label399 DS    0H
00003EA0 05EF                               5853          BALR  14,15
00003EA2                                    5854 @@gen_label400 DS    0H
00003EA2 B904 007F                          5855          LGR   7,15
                                            5856 * ***           if (!rktrans) {
00003EA6 B902 00F7                          5857          LTGR  15,7
00003EAA 4770 C1C8               00003ED8   5858          BNZ   @L805
                                            5859 * ***                   rd_kafka_transport_close0(rkb->rkb_rk, s);
00003EAE E3F0 3FD0 0004          00000FD0   5860          LG    15,4048(0,3)
00003EB4 E3F0 D1A8 0024          000001A8   5861          STG   15,424(0,13)
00003EBA B914 00F8                          5862          LGFR  15,8
00003EBE E3F0 D1B0 0024          000001B0   5863          STG   15,432(0,13)
00003EC4 4110 D1A8               000001A8   5864          LA    1,424(0,13)
00003EC8 E3F0 C120 0004          00003E30   5865          LG    15,@lit_1582_290 ; rd_kafka_transport_close0
00003ECE                                    5866 @@gen_label402 DS    0H
00003ECE 05EF                               5867          BALR  14,15
00003ED0                                    5868 @@gen_label403 DS    0H
                                            5869 * ***                   return ((void *)0);
00003ED0 A7F9 0000               00000000   5870          LGHI  15,0        ; 0
00003ED4 47F0 C60E               0000431E   5871          B     @ret_lab_1582
                                            5872 * ***           }
                                            5873 * ***
                                            5874 * ***      do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x2)))) { do { c\
                                            5875 * har _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlcpy(_l\
                                            5876 * ogname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkb)->rkb_\
                                                                                                                           Page  120 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5877 * logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rkb_rk,\
                                            5878 *  _logname, 7, (0x2), "CONNECT", "Connecting to %s (%s) " "with socke\
                                            5879 * t %i", rd_sockaddr2str(sinx, 0x4 | 0x1), rd_kafka_secproto_names[rkb\
                                            5880 * ->rkb_proto], s); } while (0); } } while (0);
00003ED8                                    5881 @L805    DS    0H
00003ED8 E3F0 3FD0 0004          00000FD0   5882          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003EDE 9102 F323      00000323 00000002   5883          TM    803(15),2
00003EE2 4780 C2D8               00003FE8   5884          BZ    @L808
00003EE6                                    5885 @L809    DS    0H
00003EE6 A799 1638               00001638   5886          LGHI  9,5688      ; 5688
00003EEA 41F9 3000               00000000   5887          LA    15,0(9,3)
00003EEE E3F0 D1A8 0024          000001A8   5888          STG   15,424(0,13)
00003EF4 4110 D1A8               000001A8   5889          LA    1,424(0,13)
00003EF8 E3F0 C128 0004          00003E38   5890          LG    15,@lit_1582_293 ; mtx_lock
00003EFE                                    5891 @@gen_label405 DS    0H
00003EFE 05EF                               5892          BALR  14,15
00003F00                                    5893 @@gen_label406 DS    0H
00003F00 41F0 D0A8               000000A8   5894          LA    15,168(0,13)
00003F04 E3F0 D1A8 0024          000001A8   5895          STG   15,424(0,13)
00003F0A A7F9 1630               00001630   5896          LGHI  15,5680     ; 5680
00003F0E E3FF 3000 0004          00000000   5897          LG    15,0(15,3)
00003F14 E3F0 D1B0 0024          000001B0   5898          STG   15,432(0,13)
00003F1A E548 D1B8 0100          000001B8   5899          MVGHI 440(13),256
00003F20 4110 D1A8               000001A8   5900          LA    1,424(0,13)
00003F24 E3F0 C130 0004          00003E40   5901          LG    15,@lit_1582_295 ; rd_strlcpy
00003F2A                                    5902 @@gen_label407 DS    0H
00003F2A 05EF                               5903          BALR  14,15
00003F2C                                    5904 @@gen_label408 DS    0H
00003F2C 41F9 3000               00000000   5905          LA    15,0(9,3)
00003F30 E3F0 D1A8 0024          000001A8   5906          STG   15,424(0,13)
00003F36 4110 D1A8               000001A8   5907          LA    1,424(0,13)
00003F3A E3F0 C138 0004          00003E48   5908          LG    15,@lit_1582_297 ; mtx_unlock
00003F40                                    5909 @@gen_label409 DS    0H
00003F40 05EF                               5910          BALR  14,15
00003F42                                    5911 @@gen_label410 DS    0H
00003F42 E340 D1A8 0024          000001A8   5912          STG   4,424(0,13)
00003F48 E548 D1B0 0005          000001B0   5913          MVGHI 432(13),5
00003F4E 4110 D1A8               000001A8   5914          LA    1,424(0,13)
00003F52 E3F0 C140 0004          00003E50   5915          LG    15,@lit_1582_298 ; rd_sockaddr2str
00003F58                                    5916 @@gen_label411 DS    0H
00003F58 05EF                               5917          BALR  14,15
00003F5A                                    5918 @@gen_label412 DS    0H
00003F5A E310 3FD0 0004          00000FD0   5919          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003F60 4110 1210               00000210   5920          LA    1,528(0,1)
00003F64 E310 D1A8 0024          000001A8   5921          STG   1,424(0,13)
00003F6A E310 3FD0 0004          00000FD0   5922          LG    1,4048(0,3)
00003F70 E310 D1B0 0024          000001B0   5923          STG   1,432(0,13)
00003F76 4110 D0A8               000000A8   5924          LA    1,168(0,13)
00003F7A E310 D1B8 0024          000001B8   5925          STG   1,440(0,13)
00003F80 E548 D1C0 0007          000001C0   5926          MVGHI 448(13),7
00003F86 E548 D1C8 0002          000001C8   5927          MVGHI 456(13),2
00003F8C E310 C110 0004          00003E20   5928          LG    1,@lit_1582_286
                                                                                                                           Page  121 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003F92 4190 131E               0000031E   5929          LA    9,798(0,1)
00003F96 E390 D1D0 0024          000001D0   5930          STG   9,464(0,13)
00003F9C 4110 1462               00000462   5931          LA    1,1122(0,1)
00003FA0 E310 D1D8 0024          000001D8   5932          STG   1,472(0,13)
00003FA6 E3F0 D1E0 0024          000001E0   5933          STG   15,480(0,13)
00003FAC A7F9 16E8               000016E8   5934          LGHI  15,5864     ; 5864
00003FB0 E3FF 3000 0014          00000000   5935          LGF   15,0(15,3)
00003FB6 E310 C150 0016          00003E60   5936          LLGF  1,@lit_1582_301 ; rd_kafka_secproto_names
00003FBC EBFF 0003 000D          00000003   5937          SLLG  15,15,3(0)  ; *0x8
00003FC2 41F1 F000               00000000   5938          LA    15,0(1,15)
00003FC6 E3FF 2000 0004          00000000   5939          LG    15,0(15,2)
00003FCC E3F0 D1E8 0024          000001E8   5940          STG   15,488(0,13)
00003FD2 B914 00F8                          5941          LGFR  15,8
00003FD6 E3F0 D1F0 0024          000001F0   5942          STG   15,496(0,13)
00003FDC 4110 D1A8               000001A8   5943          LA    1,424(0,13)
00003FE0 E3F0 C148 0004          00003E58   5944          LG    15,@lit_1582_302 ; rd_kafka_log0
00003FE6                                    5945 @@gen_label413 DS    0H
00003FE6 05EF                               5946          BALR  14,15
00003FE8                                    5947 @@gen_label414 DS    0H
00003FE8                                    5948 @L808    DS    0H
                                            5949 * ***
                                            5950 * ***
                                            5951 * ***
                                            5952 * ***
                                            5953 * ***
                                            5954 * ***
                                            5955 * ***           if (rkb->rkb_rk->rk_conf.connect_cb) {
00003FE8 E3F0 3FD0 0004          00000FD0   5956          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003FEE E3F0 F888 0002          00000888   5957          LTG   15,2184(0,15) ; offset of connect_cb in rd_kafka_conf_s
00003FF4 4780 C38A               0000409A   5958          BZ    @L812
                                            5959 * ***                   mtx_lock(&(rkb)->rkb_lock);
00003FF8 41F0 3048               00000048   5960          LA    15,72(0,3)
00003FFC E3F0 D1A8 0024          000001A8   5961          STG   15,424(0,13)
00004002 4110 D1A8               000001A8   5962          LA    1,424(0,13)
00004006 E3F0 C128 0004          00003E38   5963          LG    15,@lit_1582_293 ; mtx_lock
0000400C                                    5964 @@gen_label416 DS    0H
0000400C 05EF                               5965          BALR  14,15
0000400E                                    5966 @@gen_label417 DS    0H
                                            5967 * ***                   r = rkb->rkb_rk->rk_conf.connect_cb(
0000400E E3F0 3FD0 0004          00000FD0   5968          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00004014 E3F0 F888 0004          00000888   5969          LG    15,2184(0,15) ; offset of connect_cb in rd_kafka_conf_s
                                            5970 * ***                           s, (struct sockaddr *)sinx, ((sinx)->i\
                                            5971 * n.sin_family == 2 ? sizeof(struct sockaddr_in) : (sinx)->in.sin_fami\
                                            5972 * ly == 19 ? sizeof(struct sockaddr_in6): sizeof(rd_sockaddr_inx_t)),
                                            5973 * ***                           rkb->rkb_nodename, rkb->rkb_rk->rk_con\
                                            5974 * f.opaque);
0000401A 9502 4001      00000001 00000002   5975          CLI   1(4),2
0000401E 4770 C31A               0000402A   5976          BNE   @L813
00004022 A719 0010               00000010   5977          LGHI  1,16        ; 16
00004026 47F0 C32E               0000403E   5978          B     @L816
0000402A                                    5979 @L813    DS    0H
0000402A 9513 4001      00000001 00000013   5980          CLI   1(4),19
                                                                                                                           Page  122 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000402E 4770 C32A               0000403A   5981          BNE   @L814
00004032 A719 001C               0000001C   5982          LGHI  1,28        ; 28
00004036 47F0 C32E               0000403E   5983          B     @L815
0000403A                                    5984 @L814    DS    0H
0000403A A719 001C               0000001C   5985          LGHI  1,28        ; 28
0000403E                                    5986 @L815    DS    0H
0000403E                                    5987 @L816    DS    0H
0000403E B914 0028                          5988          LGFR  2,8
00004042 E320 D1A8 0024          000001A8   5989          STG   2,424(0,13)
00004048 E340 D1B0 0024          000001B0   5990          STG   4,432(0,13)
0000404E B914 0011                          5991          LGFR  1,1
00004052 E310 D1B8 0024          000001B8   5992          STG   1,440(0,13)
00004058 A719 1518               00001518   5993          LGHI  1,5400      ; 5400
0000405C 4111 3000               00000000   5994          LA    1,0(1,3)
00004060 E310 D1C0 0024          000001C0   5995          STG   1,448(0,13)
00004066 E310 3FD0 0004          00000FD0   5996          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
0000406C E310 18A8 0004          000008A8   5997          LG    1,2216(0,1)
00004072 E310 D1C8 0024          000001C8   5998          STG   1,456(0,13)
00004078 4110 D1A8               000001A8   5999          LA    1,424(0,13)
0000407C                                    6000 @@gen_label420 DS    0H
0000407C 05EF                               6001          BALR  14,15
0000407E                                    6002 @@gen_label421 DS    0H
0000407E 182F                               6003          LR    2,15        ; r
                                            6004 * ***                   mtx_unlock(&(rkb)->rkb_lock);
00004080 41F0 3048               00000048   6005          LA    15,72(0,3)
00004084 E3F0 D1A8 0024          000001A8   6006          STG   15,424(0,13)
0000408A 4110 D1A8               000001A8   6007          LA    1,424(0,13)
0000408E E3F0 C138 0004          00003E48   6008          LG    15,@lit_1582_297 ; mtx_unlock
00004094                                    6009 @@gen_label422 DS    0H
00004094 05EF                               6010          BALR  14,15
00004096                                    6011 @@gen_label423 DS    0H
                                            6012 * ***           } else {
00004096 47F0 C404               00004114   6013          B     @L817
0000409A                                    6014 @L812    DS    0H
                                            6015 * ***                   if (connect(s, (struct sockaddr *)sinx,
                                            6016 * ***                               ((sinx)->in.sin_family == 2 ? size\
                                            6017 * of(struct sockaddr_in) : (sinx)->in.sin_family == 19 ? sizeof(struct\
                                            6018 *  sockaddr_in6): sizeof(rd_sockaddr_inx_t))) == (-1) &&
0000409A 9502 4001      00000001 00000002   6019          CLI   1(4),2
0000409E 4770 C39A               000040AA   6020          BNE   @L818
000040A2 A7F9 0010               00000010   6021          LGHI  15,16       ; 16
000040A6 47F0 C3AE               000040BE   6022          B     @L821
000040AA                                    6023 @L818    DS    0H
000040AA 9513 4001      00000001 00000013   6024          CLI   1(4),19
000040AE 4770 C3AA               000040BA   6025          BNE   @L819
000040B2 A7F9 001C               0000001C   6026          LGHI  15,28       ; 28
000040B6 47F0 C3AE               000040BE   6027          B     @L820
000040BA                                    6028 @L819    DS    0H
000040BA A7F9 001C               0000001C   6029          LGHI  15,28       ; 28
000040BE                                    6030 @L820    DS    0H
000040BE                                    6031 @L821    DS    0H
000040BE B914 0018                          6032          LGFR  1,8
                                                                                                                           Page  123 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000040C2 E310 D1A8 0024          000001A8   6033          STG   1,424(0,13)
000040C8 E340 D1B0 0024          000001B0   6034          STG   4,432(0,13)
000040CE B916 00FF                          6035          LLGFR 15,15
000040D2 E3F0 D1B8 0024          000001B8   6036          STG   15,440(0,13)
000040D8 4110 D1A8               000001A8   6037          LA    1,424(0,13)
000040DC E3F0 C158 0004          00003E68   6038          LG    15,@lit_1582_312 ; connect
000040E2                                    6039 @@gen_label426 DS    0H
000040E2 05EF                               6040          BALR  14,15
000040E4                                    6041 @@gen_label427 DS    0H
000040E4 A7FE FFFF               0000FFFF   6042          CHI   15,-1
000040E8 4770 C400               00004110   6043          BNE   @L822
                                            6044 * ***                       ((* __error()) != 36
000040EC E320 C0F8 0004          00003E08   6045          LG    2,@lit_1582_284 ; __error
000040F2 B904 00F2                          6046          LGR   15,2
000040F6                                    6047 @@gen_label429 DS    0H
000040F6 05EF                               6048          BALR  14,15
000040F8                                    6049 @@gen_label430 DS    0H
                                            6050 * ***
                                            6051 * ***
                                            6052 * ***
                                            6053 * ***                               ))
000040F8 E55C F000 0024          00000000   6054          CHSI  0(15),36
000040FE 4780 C400               00004110   6055          BE    @L822
                                            6056 * ***                           r = (* __error());
00004102 B904 00F2                          6057          LGR   15,2
00004106                                    6058 @@gen_label432 DS    0H
00004106 05EF                               6059          BALR  14,15
00004108                                    6060 @@gen_label433 DS    0H
00004108 5820 F000               00000000   6061          L     2,0(0,15)
0000410C 47F0 C404               00004114   6062          B     @L817
                                            6063 * ***                   else
00004110                                    6064 @L822    DS    0H
                                            6065 * ***                           r = 0;
00004110 A728 0000               00000000   6066          LHI   2,0         ; 0
00004114                                    6067 @L823    DS    0H
                                            6068 * ***           }
00004114                                    6069 @L817    DS    0H
                                            6070 * ***
                                            6071 * ***           if (r != 0) {
00004114 1222                               6072          LTR   2,2
00004116 4780 C58E               0000429E   6073          BE    @L824
                                            6074 * ***         do { if ((((rkb)->rkb_rk->rk_conf.debug & (0x2)))) { do \
                                            6075 * { char _logname[256]; mtx_lock(&(rkb)->rkb_logname_lock); rd_strlcpy\
                                            6076 * (_logname, rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkb)->r\
                                            6077 * kb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->rk_conf, (rkb)->rkb_\
                                            6078 * rk, _logname, 7, (0x2), "CONNECT", "Couldn't connect to %s: %s (%i)"\
                                            6079 * , rd_sockaddr2str(sinx, 0x1 | 0x4), strerror(r), r); } while (0); } \
                                            6080 * } while (0);
0000411A                                    6081 @L825    DS    0H
0000411A E3F0 3FD0 0004          00000FD0   6082          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00004120 9102 F323      00000323 00000002   6083          TM    803(15),2
00004124 4780 C514               00004224   6084          BZ    @L828
                                                                                                                           Page  124 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004128                                    6085 @L829    DS    0H
00004128 A789 1638               00001638   6086          LGHI  8,5688      ; 5688
0000412C 41F8 3000               00000000   6087          LA    15,0(8,3)
00004130 E3F0 D1A8 0024          000001A8   6088          STG   15,424(0,13)
00004136 4110 D1A8               000001A8   6089          LA    1,424(0,13)
0000413A E3F0 C128 0004          00003E38   6090          LG    15,@lit_1582_293 ; mtx_lock
00004140                                    6091 @@gen_label436 DS    0H
00004140 05EF                               6092          BALR  14,15
00004142                                    6093 @@gen_label437 DS    0H
00004142 41F0 D0A8               000000A8   6094          LA    15,168(0,13)
00004146 E3F0 D1A8 0024          000001A8   6095          STG   15,424(0,13)
0000414C A7F9 1630               00001630   6096          LGHI  15,5680     ; 5680
00004150 E3FF 3000 0004          00000000   6097          LG    15,0(15,3)
00004156 E3F0 D1B0 0024          000001B0   6098          STG   15,432(0,13)
0000415C E548 D1B8 0100          000001B8   6099          MVGHI 440(13),256
00004162 4110 D1A8               000001A8   6100          LA    1,424(0,13)
00004166 E3F0 C130 0004          00003E40   6101          LG    15,@lit_1582_295 ; rd_strlcpy
0000416C                                    6102 @@gen_label438 DS    0H
0000416C 05EF                               6103          BALR  14,15
0000416E                                    6104 @@gen_label439 DS    0H
0000416E 41F8 3000               00000000   6105          LA    15,0(8,3)
00004172 E3F0 D1A8 0024          000001A8   6106          STG   15,424(0,13)
00004178 4110 D1A8               000001A8   6107          LA    1,424(0,13)
0000417C E3F0 C138 0004          00003E48   6108          LG    15,@lit_1582_297 ; mtx_unlock
00004182                                    6109 @@gen_label440 DS    0H
00004182 05EF                               6110          BALR  14,15
00004184                                    6111 @@gen_label441 DS    0H
00004184 E340 D1A8 0024          000001A8   6112          STG   4,424(0,13)
0000418A E548 D1B0 0005          000001B0   6113          MVGHI 432(13),5
00004190 4110 D1A8               000001A8   6114          LA    1,424(0,13)
00004194 E3F0 C140 0004          00003E50   6115          LG    15,@lit_1582_298 ; rd_sockaddr2str
0000419A                                    6116 @@gen_label442 DS    0H
0000419A 05EF                               6117          BALR  14,15
0000419C                                    6118 @@gen_label443 DS    0H
0000419C B904 008F                          6119          LGR   8,15
000041A0 B914 00F2                          6120          LGFR  15,2
000041A4 E3F0 D1A8 0024          000001A8   6121          STG   15,424(0,13)
000041AA 4110 D1A8               000001A8   6122          LA    1,424(0,13)
000041AE E3F0 C100 0004          00003E10   6123          LG    15,@lit_1582_285 ; strerror
000041B4                                    6124 @@gen_label444 DS    0H
000041B4 05EF                               6125          BALR  14,15
000041B6                                    6126 @@gen_label445 DS    0H
000041B6 E310 3FD0 0004          00000FD0   6127          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
000041BC 4110 1210               00000210   6128          LA    1,528(0,1)
000041C0 E310 D1A8 0024          000001A8   6129          STG   1,424(0,13)
000041C6 E310 3FD0 0004          00000FD0   6130          LG    1,4048(0,3)
000041CC E310 D1B0 0024          000001B0   6131          STG   1,432(0,13)
000041D2 4110 D0A8               000000A8   6132          LA    1,168(0,13)
000041D6 E310 D1B8 0024          000001B8   6133          STG   1,440(0,13)
000041DC E548 D1C0 0007          000001C0   6134          MVGHI 448(13),7
000041E2 E548 D1C8 0002          000001C8   6135          MVGHI 456(13),2
000041E8 E310 C110 0004          00003E20   6136          LG    1,@lit_1582_286
                                                                                                                           Page  125 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000041EE 4130 131E               0000031E   6137          LA    3,798(0,1)
000041F2 E330 D1D0 0024          000001D0   6138          STG   3,464(0,13)
000041F8 4110 1488               00000488   6139          LA    1,1160(0,1)
000041FC E310 D1D8 0024          000001D8   6140          STG   1,472(0,13)
00004202 E380 D1E0 0024          000001E0   6141          STG   8,480(0,13)
00004208 E3F0 D1E8 0024          000001E8   6142          STG   15,488(0,13)
0000420E B914 00F2                          6143          LGFR  15,2
00004212 E3F0 D1F0 0024          000001F0   6144          STG   15,496(0,13)
00004218 4110 D1A8               000001A8   6145          LA    1,424(0,13)
0000421C E3F0 C148 0004          00003E58   6146          LG    15,@lit_1582_302 ; rd_kafka_log0
00004222                                    6147 @@gen_label446 DS    0H
00004222 05EF                               6148          BALR  14,15
00004224                                    6149 @@gen_label447 DS    0H
00004224                                    6150 @L828    DS    0H
                                            6151 * ***   # 962 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            6152 * ***         snprintf(errstr, errstr_size, "Failed to connect to brok\
                                            6153 * er at %s: %s", rd_sockaddr2str(sinx, (0x1 | 0x2)), strerror(r));
00004224 E340 D1A8 0024          000001A8   6154          STG   4,424(0,13)
0000422A E548 D1B0 0003          000001B0   6155          MVGHI 432(13),3
00004230 4110 D1A8               000001A8   6156          LA    1,424(0,13)
00004234 E3F0 C140 0004          00003E50   6157          LG    15,@lit_1582_298 ; rd_sockaddr2str
0000423A                                    6158 @@gen_label448 DS    0H
0000423A 05EF                               6159          BALR  14,15
0000423C                                    6160 @@gen_label449 DS    0H
0000423C B904 003F                          6161          LGR   3,15
00004240 B914 00F2                          6162          LGFR  15,2
00004244 E3F0 D1A8 0024          000001A8   6163          STG   15,424(0,13)
0000424A 4110 D1A8               000001A8   6164          LA    1,424(0,13)
0000424E E3F0 C100 0004          00003E10   6165          LG    15,@lit_1582_285 ; strerror
00004254                                    6166 @@gen_label450 DS    0H
00004254 05EF                               6167          BALR  14,15
00004256                                    6168 @@gen_label451 DS    0H
00004256 EB56 D1A8 0024          000001A8   6169          STMG  5,6,424(13)
0000425C E310 C110 0004          00003E20   6170          LG    1,@lit_1582_286
00004262 4110 14A8               000004A8   6171          LA    1,1192(0,1)
00004266 E310 D1B8 0024          000001B8   6172          STG   1,440(0,13)
0000426C E330 D1C0 0024          000001C0   6173          STG   3,448(0,13)
00004272 E3F0 D1C8 0024          000001C8   6174          STG   15,456(0,13)
00004278 4110 D1A8               000001A8   6175          LA    1,424(0,13)
0000427C E3F0 C108 0004          00003E18   6176          LG    15,@lit_1582_287 ; snprintf
00004282                                    6177 @@gen_label452 DS    0H
00004282 05EF                               6178          BALR  14,15
00004284                                    6179 @@gen_label453 DS    0H
                                            6180 * ***
                                            6181 * ***
                                            6182 * ***
                                            6183 * ***
                                            6184 * ***                   rd_kafka_transport_close(rktrans);
00004284 E370 D1A8 0024          000001A8   6185          STG   7,424(0,13)
0000428A 4110 D1A8               000001A8   6186          LA    1,424(0,13)
0000428E E3F0 C160 0004          00003E70   6187          LG    15,@lit_1582_330 ; rd_kafka_transport_close
00004294                                    6188 @@gen_label454 DS    0H
                                                                                                                           Page  126 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004294 05EF                               6189          BALR  14,15
00004296                                    6190 @@gen_label455 DS    0H
                                            6191 * ***                   return ((void *)0);
00004296 A7F9 0000               00000000   6192          LGHI  15,0        ; 0
0000429A 47F0 C60E               0000431E   6193          B     @ret_lab_1582
                                            6194 * ***      }
0000429E                                    6195 @L824    DS    0H
                                            6196 * ***
                                            6197 * ***
                                            6198 * ***           rktrans->rktrans_pfd[rktrans->rktrans_pfd_cnt++].fd = \
                                            6199 * s;
0000429E 58F0 7098               00000098   6200          L     15,152(0,7)
000042A2 181F                               6201          LR    1,15
000042A4 A71A 0001               00000001   6202          AHI   1,1
000042A8 5010 7098               00000098   6203          ST    1,152(0,7)
000042AC B914 00FF                          6204          LGFR  15,15
000042B0 EBFF 0003 000D          00000003   6205          SLLG  15,15,3(0)  ; *0x8
000042B6 508F 7088               00000088   6206          ST    8,136(15,7)
                                            6207 * ***           if (rkb->rkb_wakeup_fd[0] != -1) {
000042BA A7F9 1660               00001660   6208          LGHI  15,5728     ; 5728
000042BE 411F 3000               00000000   6209          LA    1,0(15,3)
000042C2 E55C 1000 FFFF          00000000   6210          CHSI  0(1),-1
000042C8 4780 C5F2               00004302   6211          BE    @L832
                                            6212 * ***                   rktrans->rktrans_pfd[rktrans->rktrans_pfd_cnt]\
                                            6213 * .events = 0x0001;
000042CC E310 7098 0014          00000098   6214          LGF   1,152(0,7)
000042D2 EB11 0003 000D          00000003   6215          SLLG  1,1,3(0)    ; *0x8
000042D8 4111 7000               00000000   6216          LA    1,0(1,7)
000042DC E544 108C 0001          0000008C   6217          MVHHI 140(1),1    ; offset of events in pollfd
                                            6218 * ***                   rktrans->rktrans_pfd[rktrans->rktrans_pfd_cnt+\
                                            6219 * +].fd = rkb->rkb_wakeup_fd[0];
000042E2 5810 7098               00000098   6220          L     1,152(0,7)
000042E6 1821                               6221          LR    2,1
000042E8 A72A 0001               00000001   6222          AHI   2,1
000042EC 5020 7098               00000098   6223          ST    2,152(0,7)
000042F0 B914 0011                          6224          LGFR  1,1
000042F4 EB11 0003 000D          00000003   6225          SLLG  1,1,3(0)    ; *0x8
000042FA 58FF 3000               00000000   6226          L     15,0(15,3)
000042FE 50F1 7088               00000088   6227          ST    15,136(1,7)
                                            6228 * ***           }
00004302                                    6229 @L832    DS    0H
                                            6230 * ***
                                            6231 * ***
                                            6232 * ***
                                            6233 * ***      rd_kafka_transport_poll_set(rktrans, 0x0004);
00004302 E370 D1A8 0024          000001A8   6234          STG   7,424(0,13)
00004308 E548 D1B0 0004          000001B0   6235          MVGHI 432(13),4
0000430E 4110 D1A8               000001A8   6236          LA    1,424(0,13)
00004312 E3F0 C168 0004          00003E78   6237          LG    15,@lit_1582_334 ; rd_kafka_transport_poll_set
00004318                                    6238 @@gen_label457 DS    0H
00004318 05EF                               6239          BALR  14,15
0000431A                                    6240 @@gen_label458 DS    0H
                                                                                                                           Page  127 
  Active Usings: @REGION_1582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6241 * ***
                                            6242 * ***      return rktrans;
0000431A B904 00F7                          6243          LGR   15,7
                                            6244 * ***   }
0000431E                                    6245 @ret_lab_1582 DS 0H
                                            6246 * * **** Start of Epilogue
                                            6247          DCCEPIL
0000431E                                    6248+         ds 0h                                                          01-DCCEP
                                            6249+* Epilog
0000431E D707 D088 D088 00000088 00000088   6250+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004324 E3D0 D080 0004          00000080   6251+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000432A E3C0 D090 0004          00000090   6252+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004330 E3B0 C018 0004          00000018   6253+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004336 E3C0 B010 0021          00000010   6254+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000433C E3E0 D008 0004          00000008   6255+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004342 EB1C D020 0004          00000020   6256+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004348 078E                               6257+         bcr 8,14                if same dsab, just return              01-DCCEP
0000434A E3F0 D010 0024          00000010   6258+         stg 15,16(0,13)         save return code                       01-DCCEP
00004350 E300 D018 0024          00000018   6259+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004356 E3F0 D090 0004          00000090   6260+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000435C E3F0 F018 0004          00000018   6261+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004362 47F0 F040               00000040   6262+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6263+* End of Epilog
                                            6264 * * **** End of Epilogue
                                            6265          DROP  12
                                            6266 *
                                            6267 *   DSECT for automatic variables in "rd_kafka_transport_connect"
                                            6268 *      (FUNCTION #1582)
                                            6269 *
00000000                00000000 000001A8   6270 @AUTO#rd_kafka_transport_connect DSECT
00000000                                    6271          DS    XL168
000000A8                                    6272 rd_kafka_transport_connect#_logname#11 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   6273          ORG   @AUTO#rd_kafka_transport_connect+168
000000A8                                    6274 rd_kafka_transport_connect#_logname#5 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   6275          ORG   @AUTO#rd_kafka_transport_connect+168
000000A8                                    6276 rd_kafka_transport_connect#r#0 DS 1F ; r
000000AC                000000AC 000000A8   6277          ORG   @AUTO#rd_kafka_transport_connect+168
000000A8                                    6278 rd_kafka_transport_connect#s#0 DS 1F ; s
                                            6279 *
00004366                00000000 000046BC   6280 @CODE    CSECT
                                            6281 *
                                            6282 *
                                            6283 *
                                            6284 * ....... start of rd_kafka_transport_poll_set
                                            6285 rd_kafka_transport_poll_set ALIAS X'99846D92818692816DA3998195A2979699A*
                                                                36D979693936DA285A3'
00004366                                    6286 @LNAME1586 DS  0H
00004366 0000001B                           6287          DC    X'0000001B'
0000436A 99846D9281869281                   6288          DC    C'rd_kafka_transport_poll_set'
00004385 00                                 6289          DC    X'00'
                                            6290 rd_kafka_transport_poll_set DCCPRLG CINDEX=1586,BASER=0,FRAME=168,SAVEA*
                                                                REA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1586
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6291          macro
                                            6292          dccextrn &m
                                            6293          gblc    &$dccext(1000)
                                            6294          gbla    &$dccexti
                                            6295          lcla    &i
                                            6296 &$dccext(&$dccexti+1) setc    '&m'
                                            6297 &i       seta    1
                                            6298 .loop    aif    (&i gt &$dccexti).around
                                            6299          aif    ('&$dccext(&i)' eq '&m').getout
                                            6300 &i       seta    &i+1
                                            6301          ago     .loop
                                            6302 .around  anop
                                            6303 &$dccexti seta &$dccexti+1
                                            6304          extrn  &m
                                            6305 .getout  anop
                                            6306          mend
00004388                                    6307+$eye0096    ds    0d                                                    02-DCCCA
00004388 C4C3C3                             6308+         dc cl3'DCC'                                                    02-DCCCA
0000438B 01                                 6309+         dc xl1'01' format one                                          02-DCCCA
0000438C 00000000                           6310+         dc a(0)                                                        02-DCCCA
00004390 0000000000000000                   6311+         dc ad(0)                                                       02-DCCCA
00004398 00000000000000A8                   6312+         dc ad(168)                                                     02-DCCCA
000043A0 0000000000000000                   6313+         dc ad(0)                                                       02-DCCCA
000043A8 0000000000001000                   6314+         dc ad(4096)                                                    02-DCCCA
000043B0 20                                 6315+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000043B1 03                                 6316+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000043B2 03                                 6317+         dc al1(3)                                                      02-DCCCA
000043B3 08                                 6318+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000043B4 00                                 6319+         dc bl.8'00000000'                                              02-DCCCA
000043B5 000000                             6320+         dc al3(0)                                                      02-DCCCA
000043B8 0000000000004366                   6321+         dc ad(@LNAME1586)                                              02-DCCCA
000043C0                                    6322+         ds 0d                                                          02-DCCCA
000043C0 0000000000004388                   6323+         dc ad($eye0096)                                                02-DCCCA
000043C8 0000000000000000                   6324+         dc ad(0)                                                       02-DCCCA
000043D0                                    6325+         ds    0d                                                       01-DCCPR
                                            6326+         entry rd_kafka_transport_poll_set                              01-DCCPR
000043D0                                    6327+rd_kafka_transport_poll_set ds 0d                                       01-DCCPR
000043D0                                    6328+@REGION_1586_1 ds 0h                                                    01-DCCPR
000043D0 EBEC D008 0024          00000008   6329+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            6330 * ******* End of Prologue
                                            6331 * *
                                            6332 * ***      rktrans->rktrans_pfd[0].events |= event;
000043D6 E3F0 1000 0004          00000000   6333          LG    15,0(0,1)   ; rktrans
000043DC 4820 F08C               0000008C   6334          LH    2,140(0,15)
000043E0 5620 100C               0000000C   6335          O     2,12(0,1)
000043E4 4020 F08C               0000008C   6336          STH   2,140(0,15)
                                            6337 * ***   }
000043E8                                    6338 @ret_lab_1586 DS 0H
                                            6339 * * **** Start of Epilogue
                                            6340          DCCEPIL
000043E8                                    6341+         ds 0h                                                          01-DCCEP
                                            6342+* Epilog
                                                                                                                           Page  129 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6343+* Epilog
000043E8 E3E0 D008 0004          00000008   6344+         lg    14,8(,13) restore the reg                                01-DCCEP
000043EE EB1C D020 0004          00000020   6345+         lmg   1,12,32(13)                                              01-DCCEP
000043F4 07FE                               6346+         br   14                                                        01-DCCEP
                                            6347+* End of Epilog
                                            6348 * * **** End of Epilogue
                                            6349 *
                                            6350 *   DSECT for automatic variables in "rd_kafka_transport_poll_set"
                                            6351 *      (FUNCTION #1586)
                                            6352 *
00000000                00000000 000000A8   6353 @AUTO#rd_kafka_transport_poll_set DSECT
00000000                                    6354          DS    XL168
                                            6355 *
000043F6                00000000 000046BC   6356 @CODE    CSECT
                                            6357 *
                                            6358 *
                                            6359 *
                                            6360 * ....... start of rd_kafka_transport_poll_clear
                                            6361 rd_kafka_transport_poll_clear ALIAS X'99846D92818692816DA3998195A297969*
                                                                9A36D979693936D8393858199'
000043F6                                    6362 @LNAME1587 DS  0H
000043F6 0000001D                           6363          DC    X'0000001D'
000043FA 99846D9281869281                   6364          DC    C'rd_kafka_transport_poll_clear'
00004417 00                                 6365          DC    X'00'
                                            6366 rd_kafka_transport_poll_clear DCCPRLG CINDEX=1587,BASER=0,FRAME=168,SAV*
                                                                EAREA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1587
                                            6367          macro
                                            6368          dccextrn &m
                                            6369          gblc    &$dccext(1000)
                                            6370          gbla    &$dccexti
                                            6371          lcla    &i
                                            6372 &$dccext(&$dccexti+1) setc    '&m'
                                            6373 &i       seta    1
                                            6374 .loop    aif    (&i gt &$dccexti).around
                                            6375          aif    ('&$dccext(&i)' eq '&m').getout
                                            6376 &i       seta    &i+1
                                            6377          ago     .loop
                                            6378 .around  anop
                                            6379 &$dccexti seta &$dccexti+1
                                            6380          extrn  &m
                                            6381 .getout  anop
                                            6382          mend
00004418                                    6383+$eye0099    ds    0d                                                    02-DCCCA
00004418 C4C3C3                             6384+         dc cl3'DCC'                                                    02-DCCCA
0000441B 01                                 6385+         dc xl1'01' format one                                          02-DCCCA
0000441C 00000000                           6386+         dc a(0)                                                        02-DCCCA
00004420 0000000000000000                   6387+         dc ad(0)                                                       02-DCCCA
00004428 00000000000000A8                   6388+         dc ad(168)                                                     02-DCCCA
00004430 0000000000000000                   6389+         dc ad(0)                                                       02-DCCCA
00004438 0000000000001000                   6390+         dc ad(4096)                                                    02-DCCCA
00004440 20                                 6391+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004441 03                                 6392+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page  130 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004442 03                                 6393+         dc al1(3)                                                      02-DCCCA
00004443 08                                 6394+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004444 00                                 6395+         dc bl.8'00000000'                                              02-DCCCA
00004445 000000                             6396+         dc al3(0)                                                      02-DCCCA
00004448 00000000000043F6                   6397+         dc ad(@LNAME1587)                                              02-DCCCA
00004450                                    6398+         ds 0d                                                          02-DCCCA
00004450 0000000000004418                   6399+         dc ad($eye0099)                                                02-DCCCA
00004458 0000000000000000                   6400+         dc ad(0)                                                       02-DCCCA
00004460                                    6401+         ds    0d                                                       01-DCCPR
                                            6402+         entry rd_kafka_transport_poll_clear                            01-DCCPR
00004460                                    6403+rd_kafka_transport_poll_clear ds 0d                                     01-DCCPR
00004460                                    6404+@REGION_1587_1 ds 0h                                                    01-DCCPR
00004460 EBEC D008 0024          00000008   6405+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            6406 * ******* End of Prologue
                                            6407 * *
                                            6408 * ***      rktrans->rktrans_pfd[0].events &= ~event;
00004466 E3F0 1000 0004          00000000   6409          LG    15,0(0,1)   ; rktrans
0000446C 4820 F08C               0000008C   6410          LH    2,140(0,15)
00004470 5810 100C               0000000C   6411          L     1,12(0,1)   ; event
00004474 C017 FFFF FFFF                     6412          XILF  1,X'FFFFFFFF'
0000447A 1421                               6413          NR    2,1
0000447C 4020 F08C               0000008C   6414          STH   2,140(0,15)
                                            6415 * ***   }
00004480                                    6416 @ret_lab_1587 DS 0H
                                            6417 * * **** Start of Epilogue
                                            6418          DCCEPIL
00004480                                    6419+         ds 0h                                                          01-DCCEP
                                            6420+* Epilog
                                            6421+* Epilog
00004480 E3E0 D008 0004          00000008   6422+         lg    14,8(,13) restore the reg                                01-DCCEP
00004486 EB1C D020 0004          00000020   6423+         lmg   1,12,32(13)                                              01-DCCEP
0000448C 07FE                               6424+         br   14                                                        01-DCCEP
                                            6425+* End of Epilog
                                            6426 * * **** End of Epilogue
                                            6427 *
                                            6428 *   DSECT for automatic variables in "rd_kafka_transport_poll_clear"
                                            6429 *      (FUNCTION #1587)
                                            6430 *
00000000                00000000 000000A8   6431 @AUTO#rd_kafka_transport_poll_clear DSECT
00000000                                    6432          DS    XL168
                                            6433 *
0000448E                00000000 000046BC   6434 @CODE    CSECT
                                            6435 *
                                            6436 *
                                            6437 *
                                            6438 * ....... start of rd_kafka_transport_poll
                                            6439 rd_kafka_transport_poll ALIAS X'99846D92818692816DA3998195A2979699A36D9*
                                                                7969393'
0000448E                                    6440 @LNAME1588 DS  0H
0000448E 00000017                           6441          DC    X'00000017'
00004492 99846D9281869281                   6442          DC    C'rd_kafka_transport_poll'
000044A9 00                                 6443          DC    X'00'
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6444 rd_kafka_transport_poll DCCPRLG CINDEX=1588,BASER=12,FRAME=1216,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1588
                                            6445          macro
                                            6446          dccextrn &m
                                            6447          gblc    &$dccext(1000)
                                            6448          gbla    &$dccexti
                                            6449          lcla    &i
                                            6450 &$dccext(&$dccexti+1) setc    '&m'
                                            6451 &i       seta    1
                                            6452 .loop    aif    (&i gt &$dccexti).around
                                            6453          aif    ('&$dccext(&i)' eq '&m').getout
                                            6454 &i       seta    &i+1
                                            6455          ago     .loop
                                            6456 .around  anop
                                            6457 &$dccexti seta &$dccexti+1
                                            6458          extrn  &m
                                            6459 .getout  anop
                                            6460          mend
000044B0                                    6461+$eye0102    ds    0d                                                    02-DCCCA
000044B0 C4C3C3                             6462+         dc cl3'DCC'                                                    02-DCCCA
000044B3 01                                 6463+         dc xl1'01' format one                                          02-DCCCA
000044B4 00000000                           6464+         dc a(0)                                                        02-DCCCA
000044B8 0000000000004522                   6465+         dc ad(@PER_1588)                                               02-DCCCA
000044C0 00000000000004C0                   6466+         dc ad(1216)                                                    02-DCCCA
000044C8 0000000000000000                   6467+         dc ad(0)                                                       02-DCCCA
000044D0 0000000000001000                   6468+         dc ad(4096)                                                    02-DCCCA
000044D8 20                                 6469+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000044D9 03                                 6470+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000044DA 03                                 6471+         dc al1(3)                                                      02-DCCCA
000044DB 08                                 6472+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000044DC 00                                 6473+         dc bl.8'00000000'                                              02-DCCCA
000044DD 000000                             6474+         dc al3(0)                                                      02-DCCCA
000044E0 000000000000448E                   6475+         dc ad(@LNAME1588)                                              02-DCCCA
000044E8                                    6476+         ds 0d                                                          02-DCCCA
000044E8 00000000000044B0                   6477+         dc ad($eye0102)                                                02-DCCCA
000044F0 0000000000000000                   6478+         dc ad(0)                                                       02-DCCCA
000044F8                                    6479+         ds    0d                                                       01-DCCPR
                                            6480+         entry rd_kafka_transport_poll                                  01-DCCPR
000044F8                                    6481+rd_kafka_transport_poll ds 0d                                           01-DCCPR
000044F8                                    6482+@REGION_1588_1 ds 0h                                                    01-DCCPR
000044F8 EBEC D008 0024          00000008   6483+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000044FE E3E0 D088 0004          00000088   6484+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004504 E3C0 D090 0004          00000090   6485+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000450A B904 002E                          6486+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000450E E3B0 C018 0004          00000018   6487+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004514 A7EB 04C0               000004C0   6488+         aghi  14,1216             increase by frame size               01-DCCPR
00004518 E3E0 C020 0021          00000020   6489+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000451E 4720 B020               00000020   6490+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004522                                    6491+@PER_1588 ds   0h                                                       01-DCCPR
00004522 EBDE 2080 0024          00000080   6492+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004528 E3C0 2090 0024          00000090   6493+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000452E B904 00D2                          6494+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  132 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004532 B904 00CF                          6495+         lgr   12,15               set base reg                         01-DCCPR
                        000044F8            6496+         using @REGION_1588_1,12                                        01-DCCPR
                                            6497 * ******* End of Prologue
                                            6498 * *
00004536 E320 1000 0004          00000000   6499          LG    2,0(0,1)    ; rktrans
                                            6500 * ***           int r;
                                            6501 * ***
                                            6502 * ***
                                            6503 * ***      r = poll(rktrans->rktrans_pfd, rktrans->rktrans_pfd_cnt, tm\
                                            6504 * out);
0000453C 41F0 2088               00000088   6505          LA    15,136(0,2)
00004540 E3F0 D4A8 0024          000004A8   6506          STG   15,1192(0,13)
00004546 E3F0 2098 0016          00000098   6507          LLGF  15,152(0,2)
0000454C E3F0 D4B0 0024          000004B0   6508          STG   15,1200(0,13)
00004552 E3F0 100C 0014          0000000C   6509          LGF   15,12(0,1)  ; tmout
00004558 E3F0 D4B8 0024          000004B8   6510          STG   15,1208(0,13)
0000455E 4110 D4A8               000004A8   6511          LA    1,1192(0,13)
00004562 E3F0 C088 0004          00004580   6512          LG    15,@lit_1588_336 ; poll
00004568                                    6513 @@gen_label459 DS    0H
00004568 05EF                               6514          BALR  14,15
0000456A                                    6515 @@gen_label460 DS    0H
                                            6516 * ***      if (r <= 0)
0000456A 12FF                               6517          LTR   15,15
0000456C 4720 C0A0               00004598   6518          BH    @L833
                                            6519 * ***         return r;
00004570 B914 00FF                          6520          LGFR  15,15
00004574 47F0 C102               000045FA   6521          B     @ret_lab_1588
00004578                                    6522          DS    0D
00004578 000004C0                           6523 @FRAMESIZE_1588 DC F'1216'
0000457C 00000000
00004580 0000000000000000                   6524 @lit_1588_336 DC AD(poll)
00004588 00000000000002E0                   6525 @lit_1588_337 DC AD(rd_atomic64_add)
00004590 0000000000000000                   6526 @lit_1588_338 DC AD(read)
00004598                                    6527 @L833    DS    0H
                                            6528 * ***   # 1035 "C:\asgkafka\librdkafka\src\rdkafka_transport.c"
                                            6529 * ***           rd_atomic64_add(&rktrans->rktrans_rkb->rkb_c.wakeups, \
                                            6530 * 1);
00004598 E3F0 2008 0004          00000008   6531          LG    15,8(0,2)   ; offset of rktrans_rkb in rd_kafka_transpor*
                                                                t_s
0000459E 41F0 F390               00000390   6532          LA    15,912(0,15)
000045A2 E3F0 D4A8 0024          000004A8   6533          STG   15,1192(0,13)
000045A8 E548 D4B0 0001          000004B0   6534          MVGHI 1200(13),1
000045AE 4110 D4A8               000004A8   6535          LA    1,1192(0,13)
000045B2 E3F0 C090 0004          00004588   6536          LG    15,@lit_1588_337 ; rd_atomic64_add
000045B8                                    6537 @@gen_label462 DS    0H
000045B8 05EF                               6538          BALR  14,15
000045BA                                    6539 @@gen_label463 DS    0H
                                            6540 * ***
                                            6541 * ***           if (rktrans->rktrans_pfd[1].revents & 0x0001) {
000045BA 48F0 2096               00000096   6542          LH    15,150(0,2)
000045BE A7F1 0001               00000001   6543          TML   15,1
000045C2 4780 C0FE               000045F6   6544          BZ    @L834
                                                                                                                           Page  133 
  Active Usings: @REGION_1588_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6545 * ***
                                            6546 * ***                   char buf[1024];
                                            6547 * ***                   while (read((int)rktrans->rktrans_pfd[1].fd,bu\
                                            6548 * f,sizeof(buf)) > 0)
                                            6549 * ***
                                            6550 * ***                           ;
000045C6                                    6551 @L838    DS    0H
000045C6 E3F0 2090 0014          00000090   6552          LGF   15,144(0,2)
000045CC E3F0 D4A8 0024          000004A8   6553          STG   15,1192(0,13)
000045D2 41F0 D0A8               000000A8   6554          LA    15,168(0,13)
000045D6 E3F0 D4B0 0024          000004B0   6555          STG   15,1200(0,13)
000045DC E548 D4B8 0400          000004B8   6556          MVGHI 1208(13),1024
000045E2 4110 D4A8               000004A8   6557          LA    1,1192(0,13)
000045E6 E3F0 C098 0004          00004590   6558          LG    15,@lit_1588_338 ; read
000045EC                                    6559 @@gen_label465 DS    0H
000045EC 05EF                               6560          BALR  14,15
000045EE                                    6561 @@gen_label466 DS    0H
000045EE B902 00FF                          6562          LTGR  15,15
000045F2 4720 C0CE               000045C6   6563          BH    @L838
                                            6564 * ***           }
000045F6                                    6565 @L834    DS    0H
                                            6566 * ***
                                            6567 * ***           return 1;
000045F6 A7F9 0001               00000001   6568          LGHI  15,1        ; 1
                                            6569 * ***   }
000045FA                                    6570 @ret_lab_1588 DS 0H
                                            6571 * * **** Start of Epilogue
                                            6572          DCCEPIL
000045FA                                    6573+         ds 0h                                                          01-DCCEP
                                            6574+* Epilog
000045FA D707 D088 D088 00000088 00000088   6575+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004600 E3D0 D080 0004          00000080   6576+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004606 E3C0 D090 0004          00000090   6577+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000460C E3B0 C018 0004          00000018   6578+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004612 E3C0 B010 0021          00000010   6579+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004618 E3E0 D008 0004          00000008   6580+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000461E EB1C D020 0004          00000020   6581+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004624 078E                               6582+         bcr 8,14                if same dsab, just return              01-DCCEP
00004626 E3F0 D010 0024          00000010   6583+         stg 15,16(0,13)         save return code                       01-DCCEP
0000462C E300 D018 0024          00000018   6584+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004632 E3F0 D090 0004          00000090   6585+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004638 E3F0 F018 0004          00000018   6586+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000463E 47F0 F040               00000040   6587+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6588+* End of Epilog
                                            6589 * * **** End of Epilogue
                                            6590          DROP  12
                                            6591 *
                                            6592 *   DSECT for automatic variables in "rd_kafka_transport_poll"
                                            6593 *      (FUNCTION #1588)
                                            6594 *
00000000                00000000 000004A8   6595 @AUTO#rd_kafka_transport_poll DSECT
00000000                                    6596          DS    XL168
                                                                                                                           Page  134 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000000A8                                    6597 rd_kafka_transport_poll#buf#1 DS 1024XL1 ; buf
000004A8                000004A8 000000A8   6598          ORG   @AUTO#rd_kafka_transport_poll+168
000000A8                                    6599 rd_kafka_transport_poll#r#0 DS 1F ; r
                                            6600 *
00004642                00000000 000046BC   6601 @CODE    CSECT
                                            6602 *
                                            6603 *
                                            6604 *
                                            6605 * ....... start of rd_kafka_transport_init
                                            6606 rd_kafka_transport_init ALIAS X'99846D92818692816DA3998195A2979699A36D8*
                                                                99589A3'
00004642                                    6607 @LNAME1589 DS  0H
00004642 00000017                           6608          DC    X'00000017'
00004646 99846D9281869281                   6609          DC    C'rd_kafka_transport_init'
0000465D 00                                 6610          DC    X'00'
                                            6611 rd_kafka_transport_init DCCPRLG CINDEX=1589,BASER=0,FRAME=168,SAVEAREA=*
                                                                NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1589
                                            6612          macro
                                            6613          dccextrn &m
                                            6614          gblc    &$dccext(1000)
                                            6615          gbla    &$dccexti
                                            6616          lcla    &i
                                            6617 &$dccext(&$dccexti+1) setc    '&m'
                                            6618 &i       seta    1
                                            6619 .loop    aif    (&i gt &$dccexti).around
                                            6620          aif    ('&$dccext(&i)' eq '&m').getout
                                            6621 &i       seta    &i+1
                                            6622          ago     .loop
                                            6623 .around  anop
                                            6624 &$dccexti seta &$dccexti+1
                                            6625          extrn  &m
                                            6626 .getout  anop
                                            6627          mend
00004660                                    6628+$eye0105    ds    0d                                                    02-DCCCA
00004660 C4C3C3                             6629+         dc cl3'DCC'                                                    02-DCCCA
00004663 01                                 6630+         dc xl1'01' format one                                          02-DCCCA
00004664 00000000                           6631+         dc a(0)                                                        02-DCCCA
00004668 0000000000000000                   6632+         dc ad(0)                                                       02-DCCCA
00004670 00000000000000A8                   6633+         dc ad(168)                                                     02-DCCCA
00004678 0000000000000000                   6634+         dc ad(0)                                                       02-DCCCA
00004680 0000000000001000                   6635+         dc ad(4096)                                                    02-DCCCA
00004688 20                                 6636+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004689 03                                 6637+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000468A 03                                 6638+         dc al1(3)                                                      02-DCCCA
0000468B 08                                 6639+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000468C 00                                 6640+         dc bl.8'00000000'                                              02-DCCCA
0000468D 000000                             6641+         dc al3(0)                                                      02-DCCCA
00004690 0000000000004642                   6642+         dc ad(@LNAME1589)                                              02-DCCCA
00004698                                    6643+         ds 0d                                                          02-DCCCA
00004698 0000000000004660                   6644+         dc ad($eye0105)                                                02-DCCCA
000046A0 0000000000000000                   6645+         dc ad(0)                                                       02-DCCCA
000046A8                                    6646+         ds    0d                                                       01-DCCPR
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6647+         entry rd_kafka_transport_init                                  01-DCCPR
000046A8                                    6648+rd_kafka_transport_init ds 0d                                           01-DCCPR
000046A8                                    6649+@REGION_1589_1 ds 0h                                                    01-DCCPR
000046A8 EBEC D008 0024          00000008   6650+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            6651 * ******* End of Prologue
                                            6652 * *
                                            6653 * ***
                                            6654 * ***
                                            6655 * ***
                                            6656 * ***
                                            6657 * ***   }
000046AE                                    6658 @ret_lab_1589 DS 0H
                                            6659 * * **** Start of Epilogue
                                            6660          DCCEPIL
000046AE                                    6661+         ds 0h                                                          01-DCCEP
                                            6662+* Epilog
                                            6663+* Epilog
000046AE E3E0 D008 0004          00000008   6664+         lg    14,8(,13) restore the reg                                01-DCCEP
000046B4 EB1C D020 0004          00000020   6665+         lmg   1,12,32(13)                                              01-DCCEP
000046BA 07FE                               6666+         br   14                                                        01-DCCEP
                                            6667+* End of Epilog
                                            6668 * * **** End of Epilogue
                                            6669 *
                                            6670 *   DSECT for automatic variables in "rd_kafka_transport_init"
                                            6671 *      (FUNCTION #1589)
                                            6672 *
00000000                00000000 000000A8   6673 @AUTO#rd_kafka_transport_init DSECT
00000000                                    6674          DS    XL168
                                            6675 *
000046BC                00000000 000046BC   6676 @CODE    CSECT
                                            6677 rd_kafka_curr_transport ALIAS X'99846D92818692816D83A499996DA3998195A29*
                                                                79699A3'
                                            6678 rd_kafka_curr_transport DXD 1D
                                            6679 @@STATIC ALIAS X'7C998492818692816DA3998195A2979699A350'
                                            6680 @@STATIC DXD   219D
                                            6681 *
                                            6682 *  Non-Re-Entrant Data Section
                                            6683 *
000046C0                000046C0 00000C2C   6684 @DATA    CSECT
                                            6685 @DATA    RMODE ANY
                                            6686 @DATA    AMODE ANY
000046C0 99846D8381939396                   6687 @@T48F   DC    X'99846D838193939683'               rd.calloc
000046C9 00                                 6688          DC    1X'00'
000046CA 99846D9481939396                   6689 @@T493   DC    X'99846D948193939683'               rd.malloc
000046D3 00                                 6690          DC    1X'00'
000046D4 99846D9985819393                   6691 @@T498   DC    X'99846D99858193939683'             rd.realloc
000046DE 0000                               6692          DC    2X'00'
000046E0 99846DA2A39984A4                   6693 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
000046E9 00                                 6694          DC    1X'00'
000046EA 99846DA2A3999584                   6695 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
000046F4 0000                               6696          DC    2X'00'
000046F6 99846D9985868395                   6697 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
                                                                                                                           Page  136 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004704 00000000                           6698          DC    4X'00'
00004708 00000000                           6699 @@T65A   DC    4X'00'
0000470C 0000001A00000000                   6700          DC    X'0000001A000000000000002200000000' ................
0000471C 00000024                           6701          DC    X'00000024'                         ....
00004720 99846D9281869281                   6702 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00004730 98                                 6703          DC    X'98'                               q
00004731 00                                 6704          DC    1X'00'
00004732 99846D9281869281                   6705 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00004742 96A8F0                             6706          DC    X'96A8F0'                           oy0
00004745 00                                 6707          DC    1X'00'
00004746 99846D9281869281                   6708 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00004756 856D8485A2A39996                   6709          DC    X'856D8485A2A39996A8F0'             e.destroy0
00004760 0000                               6710          DC    2X'00'
00004762 99846D9281869281                   6711 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00004772 856D8485936DA296                   6712          DC    X'856D8485936DA296A4998385'         e.del.source
0000477E 0000                               6713          DC    2X'00'
00004780 99846D9281869281                   6714 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00004790 856D8485936DA296                   6715          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
000047A0 A49995                             6716          DC    X'A49995'                           urn
000047A3 00                                 6717          DC    1X'00'
000047A4 99846D9281869281                   6718 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000047B4 856DA39989878785                   6719          DC    X'856DA3998987878599'               e.trigger
000047BD 00                                 6720          DC    1X'00'
000047BE 99846D9281869281                   6721 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000047CE 856D8485A2A39996                   6722          DC    X'856D8485A2A39996A8'               e.destroy
000047D7 00                                 6723          DC    1X'00'
000047D8 99846D9281869281                   6724 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000047E8 856D8489A2818293                   6725          DC    X'856D8489A281829385'               e.disable
000047F1 00                                 6726          DC    1X'00'
000047F2 99846DA394978182                   6727 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
00004802 F0                                 6728          DC    X'F0'                               0
00004803 00                                 6729          DC    1X'00'
00004804 99846D9281869281                   6730 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
00004814 81A385                             6731          DC    X'81A385'                           ate
00004817 00                                 6732          DC    1X'00'
00004818 99846D9281869281                   6733 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00004828 819389A9856D8199                   6734          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00004836 0000                               6735          DC    2X'00'
00004838 99846D9281869281                   6736 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00004848 6D899589A3                         6737          DC    X'6D899589A3'                       .init
0000484D 00                                 6738          DC    1X'00'
0000484E 99846D9281869281                   6739 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
0000485E 87A26DA2A482                       6740          DC    X'87A26DA2A482'                     gs.sub
00004864 0000                               6741          DC    2X'00'
00004866 99846D9281869281                   6742 @@TA7F   DC    X'99846D92818692816DA3998195A29796' rd.kafka.transpo
00004876 99A36DA296839285                   6743          DC    X'99A36DA296839285A36DA285958494A2' rt.socket.sendms
00004886 87                                 6744          DC    X'87'                               g
00004887 00                                 6745          DC    1X'00'
00004888 99846D9281869281                   6746 @@TA8A   DC    X'99846D92818692816DA3998195A29796' rd.kafka.transpo
00004898 99A36DA296839285                   6747          DC    X'99A36DA296839285A36DA2859584F0'   rt.socket.send0
000048A7 00                                 6748          DC    1X'00'
000048A8 99846D9281869281                   6749 @@TAC2   DC    X'99846D92818692816DA3998195A29796' rd.kafka.transpo
                                                                                                                           Page  137 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000048B8 99A36D8699819485                   6750          DC    X'99A36D8699819485846D998583A5'     rt.framed.recv
000048C6 0000                               6751          DC    2X'00'
000048C8 99846D9281869281                   6752 @@TADE   DC    X'99846D92818692816DA3998195A29796' rd.kafka.transpo
000048D8 99A36D89966D85A5                   6753          DC    X'99A36D89966D85A58595A3'           rt.io.event
000048E3 00                                 6754          DC    1X'00'
000048E4                                    6755 @strings@ DS   0H
000048E4 C37AE081A2879281                   6756          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
000048F4 849281869281E0A2                   6757          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00004904 97009985868395A3                   6758          DC    X'97009985868395A340A2A48260A98599' p.refcnt.sub.zer
00004914 96005A5C7F998586                   6759          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00004924 A98599967F00E495                   6760          DC    X'A98599967F00E495929596A695606C88' zero..Unknown..h
00004934 846F00006CA20000                   6761          DC    X'846F00006CA20000C2E4C77A40A69996' d....s..BUG..wro
00004944 A385409496998540                   6762          DC    X'A38540949699854082A8A385A240A388' te.more.bytes.th
00004954 81954081A5818993                   6763          DC    X'81954081A58189938182938540899540' an.available.in.
00004964 A29389838500C37A                   6764          DC    X'A29389838500C37AE081A28792818692' slice.C..asgkafk
00004974 81E0938982998492                   6765          DC    X'81E093898299849281869281E0A29983' a.librdkafka.src
00004984 E099849281869281                   6766          DC    X'E0998492818692816DA3998195A29796' .rdkafka.transpo
00004994 99A34B8300004DA2                   6767          DC    X'99A34B8300004DA289A9856DA35D9940' rt.c...size.t.r.
000049A4 7E7E4099F2405050                   6768          DC    X'7E7E4099F2405050405C7FC2E4C77A40' ...r2......BUG..
000049B4 A69996A385409496                   6769          DC    X'A69996A38540949699854082A8A385A2' wrote.more.bytes
000049C4 40A38881954081A5                   6770          DC    X'40A38881954081A58189938182938540' .than.available.
000049D4 899540A293898385                   6771          DC    X'899540A2938983857F00C489A2839695' in.slice..Discon
000049E4 958583A385840000                   6772          DC    X'958583A38584000081A2A28599A37A40' nected..assert..
000049F4 999282A486606E99                   6773          DC    X'999282A486606E999282A4866D999282' rkbuf..rkbuf.rkb
00004A04 00007A4000008995                   6774          DC    X'00007A4000008995839699998583A340' ......incorrect.
00004A14 8299969285994BA5                   6775          DC    X'8299969285994BA58599A28996954B86' broker.version.f
00004A24 819393828183926F                   6776          DC    X'819393828183926F0000D7D9D6E3D6E4' allback...PROTOU
00004A34 C6D3D6E60000D799                   6777          DC    X'C6D3D6E60000D79996A3968396934099' FLOW..Protocol.r
00004A44 8581844082A48686                   6778          DC    X'8581844082A48686859940A495848599' ead.buffer.under
00004A54 869396A640869699                   6779          DC    X'869396A640869699406CA240A56C8884' flow.for..s.v.hd
00004A64 4081A3406CA9A461                   6780          DC    X'4081A3406CA9A4616CA9A4404D6CA27A' .at..zu..zu...s.
00004A74 6C895D7A4085A797                   6781          DC    X'6C895D7A4085A7978583A38584406CA9' .i...expected..z
00004A84 A44082A8A385A240                   6782          DC    X'A44082A8A385A2406E406CA9A4409985' u.bytes....zu.re
00004A94 9481899589958740                   6783          DC    X'948189958995874082A8A385A2404D6C' maining.bytes...
00004AA4 A25D6CA20000C995                   6784          DC    X'A25D6CA20000C995A581938984408699' s..s..Invalid.fr
00004AB4 81948540A289A985                   6785          DC    X'81948540A289A985406C8400C6998194' ame.size..d.Fram
00004AC4 8540888581848599                   6786          DC    X'854088858184859940978199A2899587' e.header.parsing
00004AD4 408681899385847A                   6787          DC    X'408681899385847A406CA200E2D5C4C2' .failed...s.SNDB
00004AE4 E4C60000C6818993                   6788          DC    X'E4C60000C6818993858440A39640A285' UF..Failed.to.se
00004AF4 A340A296839285A3                   6789          DC    X'A340A296839285A340A28595844082A4' t.socket.send.bu
00004B04 8686859940A289A9                   6790          DC    X'8686859940A289A98540A396406C897A' ffer.size.to..i.
00004B14 406CA200D9C3E5C2                   6791          DC    X'406CA200D9C3E5C2E4C60000C6818993' ..s.RCVBUF..Fail
00004B24 858440A39640A285                   6792          DC    X'858440A39640A285A340A296839285A3' ed.to.set.socket
00004B34 409985838589A585                   6793          DC    X'409985838589A5854082A48686859940' .receive.buffer.
00004B44 A289A98540A39640                   6794          DC    X'A289A98540A396406C897A406CA20000' size.to..i...s..
00004B54 C6818993858440A3                   6795          DC    X'C6818993858440A396408785A340A296' Failed.to.get.so
00004B64 839285A340998583                   6796          DC    X'839285A3409985838589A5854082A486' cket.receive.buf
00004B74 86859940A289A985                   6797          DC    X'86859940A289A9857A406CA27A4081A2' fer.size...s..as
00004B84 A2A49489958740F1                   6798          DC    X'A2A49489958740F1D4C20000C6818993' suming.1MB..Fail
00004B94 858440A396408785                   6799          DC    X'858440A396408785A340A296839285A3' ed.to.get.socket
00004BA4 40A28595844082A4                   6800          DC    X'40A28595844082A48686859940A289A9' .send.buffer.siz
00004BB4 857A406CA27A4081                   6801          DC    X'857A406CA27A4081A2A2A49489958740' e...s..assuming.
                                                                                                                           Page  138 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004BC4 F1D4C200D5C1C7D3                   6802          DC    X'F1D4C200D5C1C7D3C500C68189938584' 1MB.NAGLE.Failed
00004BD4 40A396408489A281                   6803          DC    X'40A396408489A28182938540D5818793' .to.disable.Nagl
00004BE4 85404DE3C3D76DD5                   6804          DC    X'85404DE3C3D76DD5D6C4C5D3C1E85D40' e..TCP.NODELAY..
00004BF4 969540A296839285                   6805          DC    X'969540A296839285A37A406CA200C3D6' on.socket...s.CO
00004C04 D5D5C5C3E300C396                   6806          DC    X'D5D5C5C3E300C39695958583A3858440' NNECT.Connected.
00004C14 A396406CA200E2D6                   6807          DC    X'A396406CA200E2D66DC5D9D9D6D90000' to..s.SO.ERROR..
00004C24 C6818993858440A3                   6808          DC    X'C6818993858440A396408785A340A296' Failed.to.get.so
00004C34 839285A340859999                   6809          DC    X'839285A34085999996997A406CA20000' cket.error...s..
00004C44 C39695958583A340                   6810          DC    X'C39695958583A340A396406CA2408681' Connect.to..s.fa
00004C54 899385847A40A495                   6811          DC    X'899385847A40A4958182938540A39640' iled..unable.to.
00004C64 8785A340A2A381A3                   6812          DC    X'8785A340A2A381A3A4A2408699969440' get.status.from.
00004C74 A296839285A3406C                   6813          DC    X'A296839285A3406C847A406CA200C396' socket..d...s.Co
00004C84 95958583A340A396                   6814          DC    X'95958583A340A396406CA24086818993' nnect.to..s.fail
00004C94 85847A406CA20000                   6815          DC    X'85847A406CA2000082818440A2A381A3' ed...s..bad.stat
00004CA4 850081A2A28599A3                   6816          DC    X'850081A2A28599A37A405A5C7F828184' e.assert.....bad
00004CB4 40A2A381A3857F00                   6817          DC    X'40A2A381A3857F00E2D6C3D2C5E30000' .state..SOCKET..
00004CC4 C6818993858440A3                   6818          DC    X'C6818993858440A39640A285A340E2D6' Failed.to.set.SO
00004CD4 6DD5D6E2C9C7D7C9                   6819          DC    X'6DD5D6E2C9C7D7C9D7C57A406CA20000' .NOSIGPIPE...s..
00004CE4 C6818993858440A3                   6820          DC    X'C6818993858440A39640A285A340E2D6' Failed.to.set.SO
00004CF4 6DD2C5C5D7C1D3C9                   6821          DC    X'6DD2C5C5D7C1D3C9E5C57A406CA20000' .KEEPALIVE...s..
00004D04 C6818993858440A3                   6822          DC    X'C6818993858440A39640A285A340A296' Failed.to.set.so
00004D14 839285A340959695                   6823          DC    X'839285A3409596956082939683928995' cket.non.blockin
00004D24 877A406CA200C681                   6824          DC    X'877A406CA200C6818993858440A39640' g...s.Failed.to.
00004D34 83998581A38540A2                   6825          DC    X'83998581A38540A296839285A37A406C' create.socket...
00004D44 A200C39695958583                   6826          DC    X'A200C39695958583A389958740A39640' s.Connecting.to.
00004D54 6CA2404D6CA25D40                   6827          DC    X'6CA2404D6CA25D40A689A38840A29683' .s...s..with.soc
00004D64 9285A3406C890000                   6828          DC    X'9285A3406C890000C396A49384957DA3' ket..i..Couldn.t
00004D74 40839695958583A3                   6829          DC    X'40839695958583A340A396406CA27A40' .connect.to..s..
00004D84 6CA2404D6C895D00                   6830          DC    X'6CA2404D6C895D00C6818993858440A3' .s...i..Failed.t
00004D94 9640839695958583                   6831          DC    X'9640839695958583A340A39640829996' o.connect.to.bro
00004DA4 9285994081A3406C                   6832          DC    X'9285994081A3406CA27A406CA200D799' ker.at..s...s.Pr
00004DB4 9684A4838500C685                   6833          DC    X'9684A4838500C685A3838800D68686A2' oduce.Fetch.Offs
00004DC4 85A30000D485A381                   6834          DC    X'85A30000D485A3818481A3810000D385' et..Metadata..Le
00004DD4 81848599C19584C9                   6835          DC    X'81848599C19584C9A2990000E2A39697' aderAndIsr..Stop
00004DE4 D985979389838100                   6836          DC    X'D985979389838100E4978481A385D485' Replica.UpdateMe
00004DF4 A3818481A3810000                   6837          DC    X'A3818481A3810000C39695A399969393' tadata..Controll
00004E04 8584E288A4A38496                   6838          DC    X'8584E288A4A38496A6950000D68686A2' edShutdown..Offs
00004E14 85A3C396949489A3                   6839          DC    X'85A3C396949489A30000D68686A285A3' etCommit..Offset
00004E24 C685A3838800C689                   6840          DC    X'C685A3838800C6899584C39696998489' Fetch.FindCoordi
00004E34 9581A3969900D196                   6841          DC    X'9581A3969900D1968995C79996A49700' nator.JoinGroup.
00004E44 C8858199A3828581                   6842          DC    X'C8858199A3828581A300D38581A585C7' Heartbeat.LeaveG
00004E54 9996A4970000E2A8                   6843          DC    X'9996A4970000E2A89583C79996A49700' roup..SyncGroup.
00004E64 C485A28399898285                   6844          DC    X'C485A28399898285C79996A497A20000' DescribeGroups..
00004E74 D389A2A3C79996A4                   6845          DC    X'D389A2A3C79996A497A20000E281A293' ListGroups..Sasl
00004E84 C8819584A2888192                   6846          DC    X'C8819584A28881928500C19789E58599' Handshake.ApiVer
00004E94 A28996950000C399                   6847          DC    X'A28996950000C3998581A385E3969789' sion..CreateTopi
00004EA4 83A20000C4859385                   6848          DC    X'83A20000C4859385A385E396978983A2' cs..DeleteTopics
00004EB4 0000C4859385A385                   6849          DC    X'0000C4859385A385D98583969984A200' ..DeleteRecords.
00004EC4 C99589A3D7999684                   6850          DC    X'C99589A3D7999684A4838599C9840000' InitProducerId..
00004ED4 D68686A285A3C696                   6851          DC    X'D68686A285A3C69699D38581848599C5' OffsetForLeaderE
00004EE4 979683880000C184                   6852          DC    X'979683880000C18484D78199A389A389' poch..AddPartiti
00004EF4 9695A2E396E3A795                   6853          DC    X'9695A2E396E3A7950000C18484D68686' onsToTxn..AddOff
                                                                                                                           Page  139 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004F04 A285A3A2E396E3A7                   6854          DC    X'A285A3A2E396E3A79500C59584E3A795' setsToTxn.EndTxn
00004F14 0000E69989A385E3                   6855          DC    X'0000E69989A385E3A795D48199928599' ..WriteTxnMarker
00004F24 A200E3A795D68686                   6856          DC    X'A200E3A795D68686A285A3C396949489' s.TxnOffsetCommi
00004F34 A300C485A2839989                   6857          DC    X'A300C485A28399898285C18393A20000' t.DescribeAcls..
00004F44 C3998581A385C183                   6858          DC    X'C3998581A385C18393A20000C4859385' CreateAcls..Dele
00004F54 A385C18393A20000                   6859          DC    X'A385C18393A20000C485A28399898285' teAcls..Describe
00004F64 C39695868987A200                   6860          DC    X'C39695868987A200C193A38599C39695' Configs.AlterCon
00004F74 868987A20000C193                   6861          DC    X'868987A20000C193A38599D985979389' figs..AlterRepli
00004F84 8381D39687C48999                   6862          DC    X'8381D39687C48999A200C485A2839989' caLogDirs.Descri
00004F94 8285D39687C48999                   6863          DC    X'8285D39687C48999A200E281A293C1A4' beLogDirs.SaslAu
00004FA4 A3888595A3898381                   6864          DC    X'A3888595A3898381A3850000C3998581' thenticate..Crea
00004FB4 A385D78199A389A3                   6865          DC    X'A385D78199A389A3899695A20000C399' tePartitions..Cr
00004FC4 8581A385C4859385                   6866          DC    X'8581A385C48593858781A3899695E396' eateDelegationTo
00004FD4 92859500D9859585                   6867          DC    X'92859500D9859585A6C48593858781A3' ken.RenewDelegat
00004FE4 899695E396928595                   6868          DC    X'899695E3969285950000C5A797899985' ionToken..Expire
00004FF4 C48593858781A389                   6869          DC    X'C48593858781A3899695E39692859500' DelegationToken.
00005004 C485A28399898285                   6870          DC    X'C485A28399898285C48593858781A389' DescribeDelegati
00005014 9695E39692859500                   6871          DC    X'9695E39692859500C4859385A385C799' onToken.DeleteGr
00005024 96A497A20000C593                   6872          DC    X'96A497A20000C5938583A3D385818485' oups..ElectLeade
00005034 99A2D98598A485A2                   6873          DC    X'99A2D98598A485A2A300C99583998594' rsRequest.Increm
00005044 8595A38193C193A3                   6874          DC    X'8595A38193C193A38599C39695868987' entalAlterConfig
00005054 A2D98598A485A2A3                   6875          DC    X'A2D98598A485A2A30000C193A38599D7' sRequest..AlterP
00005064 8199A389A3899695                   6876          DC    X'8199A389A3899695D98581A2A2898795' artitionReassign
00005074 948595A3A2D98598                   6877          DC    X'948595A3A2D98598A485A2A30000D389' mentsRequest..Li
00005084 A2A3D78199A389A3                   6878          DC    X'A2A3D78199A389A3899695D98581A2A2' stPartitionReass
00005094 898795948595A3A2                   6879          DC    X'898795948595A3A2D98598A485A2A300' ignmentsRequest.
000050A4 D68686A285A3C485                   6880          DC    X'D68686A285A3C4859385A385D98598A4' OffsetDeleteRequ
000050B4 85A2A300C485A283                   6881          DC    X'85A2A300C485A28399898285C3938985' est.DescribeClie
000050C4 95A3D8A496A381A2                   6882          DC    X'95A3D8A496A381A2D98598A485A2A300' ntQuotasRequest.
000050D4 C193A38599C39389                   6883          DC    X'C193A38599C393898595A3D8A496A381' AlterClientQuota
000050E4 A2D98598A485A2A3                   6884          DC    X'A2D98598A485A2A30000C485A2839989' sRequest..Descri
000050F4 8285E4A28599E283                   6885          DC    X'8285E4A28599E283998194C399858485' beUserScramCrede
00005104 95A3898193A2D985                   6886          DC    X'95A3898193A2D98598A485A2A300C193' ntialsRequest.Al
00005114 A38599E4A28599E2                   6887          DC    X'A38599E4A28599E283998194C3998584' terUserScramCred
00005124 8595A3898193A2D9                   6888          DC    X'8595A3898193A2D98598A485A2A30000' entialsRequest..
00005134 E596A385D98598A4                   6889          DC    X'E596A385D98598A485A2A300C2858789' VoteRequest.Begi
00005144 95D8A49699A494C5                   6890          DC    X'95D8A49699A494C597968388D98598A4' nQuorumEpochRequ
00005154 85A2A300C59584D8                   6891          DC    X'85A2A300C59584D8A49699A494C59796' est.EndQuorumEpo
00005164 8388D98598A485A2                   6892          DC    X'8388D98598A485A2A300C485A2839989' chRequest.Descri
00005174 8285D8A49699A494                   6893          DC    X'8285D8A49699A494D98598A485A2A300' beQuorumRequest.
00005184 C193A38599C9A299                   6894          DC    X'C193A38599C9A299D98598A485A2A300' AlterIsrRequest.
00005194 E4978481A385C685                   6895          DC    X'E4978481A385C68581A3A49985A2D985' UpdateFeaturesRe
000051A4 98A485A2A300C595                   6896          DC    X'98A485A2A300C595A58593969785D985' quest.EnvelopeRe
000051B4 98A485A2A3009596                   6897          DC    X'98A485A2A30095969585000087A98997' quest.none..gzip
000051C4 0000A295819797A8                   6898          DC    X'0000A295819797A8000093A9F400A9A2' ..snappy..lz4.zs
000051D4 A384000089958885                   6899          DC    X'A3840000899588859989A30083969586' td..inherit.conf
000051E4 8987A49985840000                   6900          DC    X'8987A499858400009385819995858400' igured..learned.
000051F4 8995A38599958193                   6901          DC    X'8995A385999581930000939687898381' internal..logica
00005204 9300C99589A30000                   6902          DC    X'9300C99589A30000E3859994899581A3' l.Init..Terminat
00005214 8500C681A38193C5                   6903          DC    X'8500C681A38193C5999996990000D985' e.FatalError..Re
00005224 98A485A2A3D7C9C4                   6904          DC    X'98A485A2A3D7C9C40000E68189A3E399' questPID..WaitTr
00005234 8195A2979699A300                   6905          DC    X'8195A2979699A300E68189A3D7C9C400' ansport.WaitPID.
                                                                                                                           Page  140 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005244 C1A2A28987958584                   6906          DC    X'C1A2A289879585840000C499818995D9' Assigned..DrainR
00005254 85A285A30000C499                   6907          DC    X'85A285A30000C499818995C2A4949700' eset..DrainBump.
00005264 D9858184A8D596A3                   6908          DC    X'D9858184A8D596A3C18392858400D985' ReadyNotAcked.Re
00005274 8184A800C995E399                   6909          DC    X'8184A800C995E3998195A28183A38996' ady.InTransactio
00005284 9500C285878995C3                   6910          DC    X'9500C285878995C396949489A300C396' n.BeginCommit.Co
00005294 949489A3A3899587                   6911          DC    X'949489A3A3899587E3998195A28183A3' mmittingTransact
000052A4 89969500C3969494                   6912          DC    X'89969500C396949489A3D596A3C18392' ion.CommitNotAck
000052B4 85840000C1829699                   6913          DC    X'85840000C1829699A3899587E3998195' ed..AbortingTran
000052C4 A28183A389969500                   6914          DC    X'A28183A389969500C1829699A38584D5' saction.AbortedN
000052D4 96A3C18392858400                   6915          DC    X'96A3C18392858400C1829699A3818293' otAcked.Abortabl
000052E4 85C5999996990000                   6916          DC    X'85C5999996990000'                 eError..
                                            6917 *
                                            6918 *   Rent ref/def section
                                            6919 *
                                            6920 @Drd_kafka_curr_transport ALIAS X'99846D92818692816D83A499996DA3998195A*
                                                                2979699A3'
                                            6921          ENTRY @Drd_kafka_curr_transport
000052EC                                    6922 @Drd_kafka_curr_transport DS 0H
                                            6923 @Erd_kafka_secproto_names ALIAS X'99846D92818692816DA28583979996A3966D9*
                                                                5819485A2'
                                            6924          EXTRN @Erd_kafka_secproto_names
                                            6925 *
                                            6926 *
                                            6927 *   Re-entrant Data Initialization Section
                                            6928 *
                                            6929 @@INIT@  ALIAS C'rdkafka_transport:'
000052F0                000052F0 00001040   6930 @@INIT@  CSECT
                                            6931 @@INIT@  AMODE ANY
                                            6932 @@INIT@  RMODE ANY
000052F0 05                                 6933          DC    XL1'5'
000052F1 000000                             6934          DC    AL3(0)
000052F4 00000120                           6935          DC    AL4(288)
000052F8 00000000                           6936          DC    4X'00'
000052FC 00000000                           6937          DC    Q(@@STATIC)
00005300 00000000                           6938          DC    X'00000000'
00005304 00000001                           6939          DC    X'00000001'
00005308 00000000                           6940          DC    X'00000000'
0000530C 000000FF                           6941          DC    X'000000FF'
00005310 0102039C09867F97                   6942          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00005320 1112139D85088718                   6943          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00005330 818283840A171B88                   6944          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00005340 9116939495960498                   6945          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00005350 A0E2E4E0E1E3E5E7                   6946          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00005360 E9EAEBE8EDEEEFEC                   6947          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00005370 2FC2C4C0C1C3C5C7                   6948          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00005380 C9CACBC8CDCECFCC                   6949          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00005390 6162636465666768                   6950          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
000053A0 6A6B6C6D6E6F7071                   6951          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000053B0 7E73747576777879                   6952          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000053C0 A3A5B7A9A7B6BCBD                   6953          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
000053D0 4142434445464748                   6954          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000053E0 4A4B4C4D4E4F5051                   6955          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000053F0 F753545556575859                   6956          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00005400 3132333435363738                   6957          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            6958 *
00005410 05                                 6959          DC    XL1'5'
00005411 000000                             6960          DC    AL3(0)
00005414 000001E0                           6961          DC    AL4(480)
00005418 00000000                           6962          DC    4X'00'
0000541C 00000000                           6963          DC    Q(@@STATIC)
00005420 00000000                           6964          DC    X'00000000'
00005424 00000101                           6965          DC    X'00000101'
00005428 00000000                           6966          DC    X'00000000'
0000542C 000000A0                           6967          DC    X'000000A0'
00005430 010203372D2E2F16                   6968          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00005440 1112133C3D322618                   6969          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00005450 5A7F7B5B6C507D4D                   6970          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00005460 F1F2F3F4F5F6F7F8                   6971          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00005470 C1C2C3C4C5C6C7C8                   6972          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00005480 D8D9E2E3E4E5E6E7                   6973          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00005490 8182838485868788                   6974          DC    X'81828384858687888991929394959697' abcdefghijklmnop
000054A0 9899A2A3A4A5A6A7                   6975          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000054B0 2122232425061728                   6976          DC    X'2122232425061728292A2B2C090A1B30' ................
000054C0 311A333435360838                   6977          DC    X'311A333435360838393A3B04143EFF80' ................
                                            6978 *
000054D0 05                                 6979          DC    XL1'5'
000054D1 000000                             6980          DC    AL3(0)
000054D4 00000208                           6981          DC    AL4(520)
000054D8 00000000                           6982          DC    4X'00'
000054DC 00000000                           6983          DC    Q(@@STATIC)
000054E0 00000000                           6984          DC    X'00000000'
000054E4 000001C0                           6985          DC    X'000001C0'
000054E8 00000000                           6986          DC    X'00000000'
000054EC 00000001                           6987          DC    X'00000001'
000054F0 8A40404040404040                   6988          DC    X'8A40404040404040'                 ........
                                            6989 *
000054F8 05                                 6990          DC    XL1'5'
000054F9 000000                             6991          DC    AL3(0)
000054FC 00000230                           6992          DC    AL4(560)
00005500 00000000                           6993          DC    4X'00'
00005504 00000000                           6994          DC    Q(@@STATIC)
00005508 00000000                           6995          DC    X'00000000'
0000550C 000001E0                           6996          DC    X'000001E0'
00005510 00000000                           6997          DC    X'00000000'
00005514 00000001                           6998          DC    X'00000001'
00005518 8B40404040404040                   6999          DC    X'8B40404040404040'                 ........
                                            7000 *
00005520 0D                                 7001          DC    XL1'D'
00005521 000000                             7002          DC    AL3(0)
00005524 00000258                           7003          DC    AL4(600)
00005528 00000000                           7004          DC    4X'00'
0000552C 00000000                           7005          DC    Q(@@STATIC)
00005530 00000000                           7006          DC    X'00000000'
00005534 00000220                           7007          DC    X'00000220'
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005538 00000000000046C0                   7008          DC    ADL8(@DATA)
00005540 00000000                           7009          DC    X'00000000'
00005544 000006F2                           7010          DC    X'000006F2'
                                            7011 *
00005548 0D                                 7012          DC    XL1'D'
00005549 000000                             7013          DC    AL3(0)
0000554C 00000280                           7014          DC    AL4(640)
00005550 00000000                           7015          DC    4X'00'
00005554 00000000                           7016          DC    Q(@@STATIC)
00005558 00000000                           7017          DC    X'00000000'
0000555C 00000228                           7018          DC    X'00000228'
00005560 00000000000046C0                   7019          DC    ADL8(@DATA)
00005568 00000000                           7020          DC    X'00000000'
0000556C 000006FA                           7021          DC    X'000006FA'
                                            7022 *
00005570 0D                                 7023          DC    XL1'D'
00005571 000000                             7024          DC    AL3(0)
00005574 000002A8                           7025          DC    AL4(680)
00005578 00000000                           7026          DC    4X'00'
0000557C 00000000                           7027          DC    Q(@@STATIC)
00005580 00000000                           7028          DC    X'00000000'
00005584 00000230                           7029          DC    X'00000230'
00005588 00000000000046C0                   7030          DC    ADL8(@DATA)
00005590 00000000                           7031          DC    X'00000000'
00005594 00000700                           7032          DC    X'00000700'
                                            7033 *
00005598 0D                                 7034          DC    XL1'D'
00005599 000000                             7035          DC    AL3(0)
0000559C 000002D0                           7036          DC    AL4(720)
000055A0 00000000                           7037          DC    4X'00'
000055A4 00000000                           7038          DC    Q(@@STATIC)
000055A8 00000000                           7039          DC    X'00000000'
000055AC 00000238                           7040          DC    X'00000238'
000055B0 00000000000046C0                   7041          DC    ADL8(@DATA)
000055B8 00000000                           7042          DC    X'00000000'
000055BC 00000708                           7043          DC    X'00000708'
                                            7044 *
000055C0 0D                                 7045          DC    XL1'D'
000055C1 000000                             7046          DC    AL3(0)
000055C4 000002F8                           7047          DC    AL4(760)
000055C8 00000000                           7048          DC    4X'00'
000055CC 00000000                           7049          DC    Q(@@STATIC)
000055D0 00000000                           7050          DC    X'00000000'
000055D4 00000240                           7051          DC    X'00000240'
000055D8 00000000000046C0                   7052          DC    ADL8(@DATA)
000055E0 00000000                           7053          DC    X'00000000'
000055E4 00000712                           7054          DC    X'00000712'
                                            7055 *
000055E8 0D                                 7056          DC    XL1'D'
000055E9 000000                             7057          DC    AL3(0)
000055EC 00000320                           7058          DC    AL4(800)
000055F0 00000000                           7059          DC    4X'00'
                                                                                                                           Page  143 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000055F4 00000000                           7060          DC    Q(@@STATIC)
000055F8 00000000                           7061          DC    X'00000000'
000055FC 00000248                           7062          DC    X'00000248'
00005600 00000000000046C0                   7063          DC    ADL8(@DATA)
00005608 00000000                           7064          DC    X'00000000'
0000560C 00000720                           7065          DC    X'00000720'
                                            7066 *
00005610 0D                                 7067          DC    XL1'D'
00005611 000000                             7068          DC    AL3(0)
00005614 00000348                           7069          DC    AL4(840)
00005618 00000000                           7070          DC    4X'00'
0000561C 00000000                           7071          DC    Q(@@STATIC)
00005620 00000000                           7072          DC    X'00000000'
00005624 00000250                           7073          DC    X'00000250'
00005628 00000000000046C0                   7074          DC    ADL8(@DATA)
00005630 00000000                           7075          DC    X'00000000'
00005634 0000072C                           7076          DC    X'0000072C'
                                            7077 *
00005638 0D                                 7078          DC    XL1'D'
00005639 000000                             7079          DC    AL3(0)
0000563C 00000370                           7080          DC    AL4(880)
00005640 00000000                           7081          DC    4X'00'
00005644 00000000                           7082          DC    Q(@@STATIC)
00005648 00000000                           7083          DC    X'00000000'
0000564C 00000258                           7084          DC    X'00000258'
00005650 00000000000046C0                   7085          DC    ADL8(@DATA)
00005658 00000000                           7086          DC    X'00000000'
0000565C 0000073C                           7087          DC    X'0000073C'
                                            7088 *
00005660 0D                                 7089          DC    XL1'D'
00005661 000000                             7090          DC    AL3(0)
00005664 00000398                           7091          DC    AL4(920)
00005668 00000000                           7092          DC    4X'00'
0000566C 00000000                           7093          DC    Q(@@STATIC)
00005670 00000000                           7094          DC    X'00000000'
00005674 00000260                           7095          DC    X'00000260'
00005678 00000000000046C0                   7096          DC    ADL8(@DATA)
00005680 00000000                           7097          DC    X'00000000'
00005684 00000750                           7098          DC    X'00000750'
                                            7099 *
00005688 0D                                 7100          DC    XL1'D'
00005689 000000                             7101          DC    AL3(0)
0000568C 000003C0                           7102          DC    AL4(960)
00005690 00000000                           7103          DC    4X'00'
00005694 00000000                           7104          DC    Q(@@STATIC)
00005698 00000000                           7105          DC    X'00000000'
0000569C 00000268                           7106          DC    X'00000268'
000056A0 00000000000046C0                   7107          DC    ADL8(@DATA)
000056A8 00000000                           7108          DC    X'00000000'
000056AC 0000075E                           7109          DC    X'0000075E'
                                            7110 *
000056B0 0D                                 7111          DC    XL1'D'
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000056B1 000000                             7112          DC    AL3(0)
000056B4 000003E8                           7113          DC    AL4(1000)
000056B8 00000000                           7114          DC    4X'00'
000056BC 00000000                           7115          DC    Q(@@STATIC)
000056C0 00000000                           7116          DC    X'00000000'
000056C4 00000270                           7117          DC    X'00000270'
000056C8 00000000000046C0                   7118          DC    ADL8(@DATA)
000056D0 00000000                           7119          DC    X'00000000'
000056D4 0000076A                           7120          DC    X'0000076A'
                                            7121 *
000056D8 0D                                 7122          DC    XL1'D'
000056D9 000000                             7123          DC    AL3(0)
000056DC 00000410                           7124          DC    AL4(1040)
000056E0 00000000                           7125          DC    4X'00'
000056E4 00000000                           7126          DC    Q(@@STATIC)
000056E8 00000000                           7127          DC    X'00000000'
000056EC 00000278                           7128          DC    X'00000278'
000056F0 00000000000046C0                   7129          DC    ADL8(@DATA)
000056F8 00000000                           7130          DC    X'00000000'
000056FC 0000077A                           7131          DC    X'0000077A'
                                            7132 *
00005700 0D                                 7133          DC    XL1'D'
00005701 000000                             7134          DC    AL3(0)
00005704 00000438                           7135          DC    AL4(1080)
00005708 00000000                           7136          DC    4X'00'
0000570C 00000000                           7137          DC    Q(@@STATIC)
00005710 00000000                           7138          DC    X'00000000'
00005714 00000280                           7139          DC    X'00000280'
00005718 00000000000046C0                   7140          DC    ADL8(@DATA)
00005720 00000000                           7141          DC    X'00000000'
00005724 00000784                           7142          DC    X'00000784'
                                            7143 *
00005728 0D                                 7144          DC    XL1'D'
00005729 000000                             7145          DC    AL3(0)
0000572C 00000460                           7146          DC    AL4(1120)
00005730 00000000                           7147          DC    4X'00'
00005734 00000000                           7148          DC    Q(@@STATIC)
00005738 00000000                           7149          DC    X'00000000'
0000573C 00000288                           7150          DC    X'00000288'
00005740 00000000000046C0                   7151          DC    ADL8(@DATA)
00005748 00000000                           7152          DC    X'00000000'
0000574C 0000078E                           7153          DC    X'0000078E'
                                            7154 *
00005750 0D                                 7155          DC    XL1'D'
00005751 000000                             7156          DC    AL3(0)
00005754 00000488                           7157          DC    AL4(1160)
00005758 00000000                           7158          DC    4X'00'
0000575C 00000000                           7159          DC    Q(@@STATIC)
00005760 00000000                           7160          DC    X'00000000'
00005764 00000290                           7161          DC    X'00000290'
00005768 00000000000046C0                   7162          DC    ADL8(@DATA)
00005770 00000000                           7163          DC    X'00000000'
                                                                                                                           Page  145 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005774 0000079A                           7164          DC    X'0000079A'
                                            7165 *
00005778 0D                                 7166          DC    XL1'D'
00005779 000000                             7167          DC    AL3(0)
0000577C 000004B0                           7168          DC    AL4(1200)
00005780 00000000                           7169          DC    4X'00'
00005784 00000000                           7170          DC    Q(@@STATIC)
00005788 00000000                           7171          DC    X'00000000'
0000578C 00000298                           7172          DC    X'00000298'
00005790 00000000000046C0                   7173          DC    ADL8(@DATA)
00005798 00000000                           7174          DC    X'00000000'
0000579C 000007A4                           7175          DC    X'000007A4'
                                            7176 *
000057A0 0D                                 7177          DC    XL1'D'
000057A1 000000                             7178          DC    AL3(0)
000057A4 000004D8                           7179          DC    AL4(1240)
000057A8 00000000                           7180          DC    4X'00'
000057AC 00000000                           7181          DC    Q(@@STATIC)
000057B0 00000000                           7182          DC    X'00000000'
000057B4 000002A0                           7183          DC    X'000002A0'
000057B8 00000000000046C0                   7184          DC    ADL8(@DATA)
000057C0 00000000                           7185          DC    X'00000000'
000057C4 000007B4                           7186          DC    X'000007B4'
                                            7187 *
000057C8 0D                                 7188          DC    XL1'D'
000057C9 000000                             7189          DC    AL3(0)
000057CC 00000500                           7190          DC    AL4(1280)
000057D0 00000000                           7191          DC    4X'00'
000057D4 00000000                           7192          DC    Q(@@STATIC)
000057D8 00000000                           7193          DC    X'00000000'
000057DC 000002A8                           7194          DC    X'000002A8'
000057E0 00000000000046C0                   7195          DC    ADL8(@DATA)
000057E8 00000000                           7196          DC    X'00000000'
000057EC 000007C0                           7197          DC    X'000007C0'
                                            7198 *
000057F0 0D                                 7199          DC    XL1'D'
000057F1 000000                             7200          DC    AL3(0)
000057F4 00000528                           7201          DC    AL4(1320)
000057F8 00000000                           7202          DC    4X'00'
000057FC 00000000                           7203          DC    Q(@@STATIC)
00005800 00000000                           7204          DC    X'00000000'
00005804 000002B0                           7205          DC    X'000002B0'
00005808 00000000000046C0                   7206          DC    ADL8(@DATA)
00005810 00000000                           7207          DC    X'00000000'
00005814 000007CE                           7208          DC    X'000007CE'
                                            7209 *
00005818 0D                                 7210          DC    XL1'D'
00005819 000000                             7211          DC    AL3(0)
0000581C 00000550                           7212          DC    AL4(1360)
00005820 00000000                           7213          DC    4X'00'
00005824 00000000                           7214          DC    Q(@@STATIC)
00005828 00000000                           7215          DC    X'00000000'
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000582C 000002B8                           7216          DC    X'000002B8'
00005830 00000000000046C0                   7217          DC    ADL8(@DATA)
00005838 00000000                           7218          DC    X'00000000'
0000583C 000007DA                           7219          DC    X'000007DA'
                                            7220 *
00005840 0D                                 7221          DC    XL1'D'
00005841 000000                             7222          DC    AL3(0)
00005844 00000578                           7223          DC    AL4(1400)
00005848 00000000                           7224          DC    4X'00'
0000584C 00000000                           7225          DC    Q(@@STATIC)
00005850 00000000                           7226          DC    X'00000000'
00005854 000002C0                           7227          DC    X'000002C0'
00005858 00000000000046C0                   7228          DC    ADL8(@DATA)
00005860 00000000                           7229          DC    X'00000000'
00005864 000007E8                           7230          DC    X'000007E8'
                                            7231 *
00005868 0D                                 7232          DC    XL1'D'
00005869 000000                             7233          DC    AL3(0)
0000586C 000005A0                           7234          DC    AL4(1440)
00005870 00000000                           7235          DC    4X'00'
00005874 00000000                           7236          DC    Q(@@STATIC)
00005878 00000000                           7237          DC    X'00000000'
0000587C 000002C8                           7238          DC    X'000002C8'
00005880 00000000000046C0                   7239          DC    ADL8(@DATA)
00005888 00000000                           7240          DC    X'00000000'
0000588C 000007F6                           7241          DC    X'000007F6'
                                            7242 *
00005890 0D                                 7243          DC    XL1'D'
00005891 000000                             7244          DC    AL3(0)
00005894 000005C8                           7245          DC    AL4(1480)
00005898 00000000                           7246          DC    4X'00'
0000589C 00000000                           7247          DC    Q(@@STATIC)
000058A0 00000000                           7248          DC    X'00000000'
000058A4 000002D0                           7249          DC    X'000002D0'
000058A8 00000000000046C0                   7250          DC    ADL8(@DATA)
000058B0 00000000                           7251          DC    X'00000000'
000058B4 00000804                           7252          DC    X'00000804'
                                            7253 *
000058B8 0D                                 7254          DC    XL1'D'
000058B9 000000                             7255          DC    AL3(0)
000058BC 000005F0                           7256          DC    AL4(1520)
000058C0 00000000                           7257          DC    4X'00'
000058C4 00000000                           7258          DC    Q(@@STATIC)
000058C8 00000000                           7259          DC    X'00000000'
000058CC 000002D8                           7260          DC    X'000002D8'
000058D0 00000000000046C0                   7261          DC    ADL8(@DATA)
000058D8 00000000                           7262          DC    X'00000000'
000058DC 00000814                           7263          DC    X'00000814'
                                            7264 *
000058E0 0D                                 7265          DC    XL1'D'
000058E1 000000                             7266          DC    AL3(0)
000058E4 00000618                           7267          DC    AL4(1560)
                                                                                                                           Page  147 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000058E8 00000000                           7268          DC    4X'00'
000058EC 00000000                           7269          DC    Q(@@STATIC)
000058F0 00000000                           7270          DC    X'00000000'
000058F4 000002E0                           7271          DC    X'000002E0'
000058F8 00000000000046C0                   7272          DC    ADL8(@DATA)
00005900 00000000                           7273          DC    X'00000000'
00005904 0000082A                           7274          DC    X'0000082A'
                                            7275 *
00005908 0D                                 7276          DC    XL1'D'
00005909 000000                             7277          DC    AL3(0)
0000590C 00000640                           7278          DC    AL4(1600)
00005910 00000000                           7279          DC    4X'00'
00005914 00000000                           7280          DC    Q(@@STATIC)
00005918 00000000                           7281          DC    X'00000000'
0000591C 000002E8                           7282          DC    X'000002E8'
00005920 00000000000046C0                   7283          DC    ADL8(@DATA)
00005928 00000000                           7284          DC    X'00000000'
0000592C 0000083E                           7285          DC    X'0000083E'
                                            7286 *
00005930 0D                                 7287          DC    XL1'D'
00005931 000000                             7288          DC    AL3(0)
00005934 00000668                           7289          DC    AL4(1640)
00005938 00000000                           7290          DC    4X'00'
0000593C 00000000                           7291          DC    Q(@@STATIC)
00005940 00000000                           7292          DC    X'00000000'
00005944 000002F0                           7293          DC    X'000002F0'
00005948 00000000000046C0                   7294          DC    ADL8(@DATA)
00005950 00000000                           7295          DC    X'00000000'
00005954 0000084E                           7296          DC    X'0000084E'
                                            7297 *
00005958 0D                                 7298          DC    XL1'D'
00005959 000000                             7299          DC    AL3(0)
0000595C 00000690                           7300          DC    AL4(1680)
00005960 00000000                           7301          DC    4X'00'
00005964 00000000                           7302          DC    Q(@@STATIC)
00005968 00000000                           7303          DC    X'00000000'
0000596C 000002F8                           7304          DC    X'000002F8'
00005970 00000000000046C0                   7305          DC    ADL8(@DATA)
00005978 00000000                           7306          DC    X'00000000'
0000597C 00000856                           7307          DC    X'00000856'
                                            7308 *
00005980 0D                                 7309          DC    XL1'D'
00005981 000000                             7310          DC    AL3(0)
00005984 000006B8                           7311          DC    AL4(1720)
00005988 00000000                           7312          DC    4X'00'
0000598C 00000000                           7313          DC    Q(@@STATIC)
00005990 00000000                           7314          DC    X'00000000'
00005994 00000300                           7315          DC    X'00000300'
00005998 00000000000046C0                   7316          DC    ADL8(@DATA)
000059A0 00000000                           7317          DC    X'00000000'
000059A4 00000866                           7318          DC    X'00000866'
                                            7319 *
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000059A8 0D                                 7320          DC    XL1'D'
000059A9 000000                             7321          DC    AL3(0)
000059AC 000006E0                           7322          DC    AL4(1760)
000059B0 00000000                           7323          DC    4X'00'
000059B4 00000000                           7324          DC    Q(@@STATIC)
000059B8 00000000                           7325          DC    X'00000000'
000059BC 00000308                           7326          DC    X'00000308'
000059C0 00000000000046C0                   7327          DC    ADL8(@DATA)
000059C8 00000000                           7328          DC    X'00000000'
000059CC 00000876                           7329          DC    X'00000876'
                                            7330 *
000059D0 0D                                 7331          DC    XL1'D'
000059D1 000000                             7332          DC    AL3(0)
000059D4 00000708                           7333          DC    AL4(1800)
000059D8 00000000                           7334          DC    4X'00'
000059DC 00000000                           7335          DC    Q(@@STATIC)
000059E0 00000000                           7336          DC    X'00000000'
000059E4 00000310                           7337          DC    X'00000310'
000059E8 00000000000046C0                   7338          DC    ADL8(@DATA)
000059F0 00000000                           7339          DC    X'00000000'
000059F4 00000884                           7340          DC    X'00000884'
                                            7341 *
000059F8 0D                                 7342          DC    XL1'D'
000059F9 000000                             7343          DC    AL3(0)
000059FC 00000730                           7344          DC    AL4(1840)
00005A00 00000000                           7345          DC    4X'00'
00005A04 00000000                           7346          DC    Q(@@STATIC)
00005A08 00000000                           7347          DC    X'00000000'
00005A0C 00000318                           7348          DC    X'00000318'
00005A10 00000000000046C0                   7349          DC    ADL8(@DATA)
00005A18 00000000                           7350          DC    X'00000000'
00005A1C 00000890                           7351          DC    X'00000890'
                                            7352 *
00005A20 0D                                 7353          DC    XL1'D'
00005A21 000000                             7354          DC    AL3(0)
00005A24 00000758                           7355          DC    AL4(1880)
00005A28 00000000                           7356          DC    4X'00'
00005A2C 00000000                           7357          DC    Q(@@STATIC)
00005A30 00000000                           7358          DC    X'00000000'
00005A34 00000320                           7359          DC    X'00000320'
00005A38 00000000000046C0                   7360          DC    ADL8(@DATA)
00005A40 00000000                           7361          DC    X'00000000'
00005A44 0000089C                           7362          DC    X'0000089C'
                                            7363 *
00005A48 0D                                 7364          DC    XL1'D'
00005A49 000000                             7365          DC    AL3(0)
00005A4C 00000780                           7366          DC    AL4(1920)
00005A50 00000000                           7367          DC    4X'00'
00005A54 00000000                           7368          DC    Q(@@STATIC)
00005A58 00000000                           7369          DC    X'00000000'
00005A5C 00000328                           7370          DC    X'00000328'
00005A60 00000000000046C0                   7371          DC    ADL8(@DATA)
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005A68 00000000                           7372          DC    X'00000000'
00005A6C 000008AC                           7373          DC    X'000008AC'
                                            7374 *
00005A70 0D                                 7375          DC    XL1'D'
00005A71 000000                             7376          DC    AL3(0)
00005A74 000007A8                           7377          DC    AL4(1960)
00005A78 00000000                           7378          DC    4X'00'
00005A7C 00000000                           7379          DC    Q(@@STATIC)
00005A80 00000000                           7380          DC    X'00000000'
00005A84 00000330                           7381          DC    X'00000330'
00005A88 00000000000046C0                   7382          DC    ADL8(@DATA)
00005A90 00000000                           7383          DC    X'00000000'
00005A94 000008BA                           7384          DC    X'000008BA'
                                            7385 *
00005A98 0D                                 7386          DC    XL1'D'
00005A99 000000                             7387          DC    AL3(0)
00005A9C 000007D0                           7388          DC    AL4(2000)
00005AA0 00000000                           7389          DC    4X'00'
00005AA4 00000000                           7390          DC    Q(@@STATIC)
00005AA8 00000000                           7391          DC    X'00000000'
00005AAC 00000338                           7392          DC    X'00000338'
00005AB0 00000000000046C0                   7393          DC    ADL8(@DATA)
00005AB8 00000000                           7394          DC    X'00000000'
00005ABC 000008CE                           7395          DC    X'000008CE'
                                            7396 *
00005AC0 0D                                 7397          DC    XL1'D'
00005AC1 000000                             7398          DC    AL3(0)
00005AC4 000007F8                           7399          DC    AL4(2040)
00005AC8 00000000                           7400          DC    4X'00'
00005ACC 00000000                           7401          DC    Q(@@STATIC)
00005AD0 00000000                           7402          DC    X'00000000'
00005AD4 00000340                           7403          DC    X'00000340'
00005AD8 00000000000046C0                   7404          DC    ADL8(@DATA)
00005AE0 00000000                           7405          DC    X'00000000'
00005AE4 000008DE                           7406          DC    X'000008DE'
                                            7407 *
00005AE8 0D                                 7408          DC    XL1'D'
00005AE9 000000                             7409          DC    AL3(0)
00005AEC 00000820                           7410          DC    AL4(2080)
00005AF0 00000000                           7411          DC    4X'00'
00005AF4 00000000                           7412          DC    Q(@@STATIC)
00005AF8 00000000                           7413          DC    X'00000000'
00005AFC 00000348                           7414          DC    X'00000348'
00005B00 00000000000046C0                   7415          DC    ADL8(@DATA)
00005B08 00000000                           7416          DC    X'00000000'
00005B0C 000008F0                           7417          DC    X'000008F0'
                                            7418 *
00005B10 0D                                 7419          DC    XL1'D'
00005B11 000000                             7420          DC    AL3(0)
00005B14 00000848                           7421          DC    AL4(2120)
00005B18 00000000                           7422          DC    4X'00'
00005B1C 00000000                           7423          DC    Q(@@STATIC)
                                                                                                                           Page  150 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005B20 00000000                           7424          DC    X'00000000'
00005B24 00000350                           7425          DC    X'00000350'
00005B28 00000000000046C0                   7426          DC    ADL8(@DATA)
00005B30 00000000                           7427          DC    X'00000000'
00005B34 00000902                           7428          DC    X'00000902'
                                            7429 *
00005B38 0D                                 7430          DC    XL1'D'
00005B39 000000                             7431          DC    AL3(0)
00005B3C 00000870                           7432          DC    AL4(2160)
00005B40 00000000                           7433          DC    4X'00'
00005B44 00000000                           7434          DC    Q(@@STATIC)
00005B48 00000000                           7435          DC    X'00000000'
00005B4C 00000358                           7436          DC    X'00000358'
00005B50 00000000000046C0                   7437          DC    ADL8(@DATA)
00005B58 00000000                           7438          DC    X'00000000'
00005B5C 00000918                           7439          DC    X'00000918'
                                            7440 *
00005B60 0D                                 7441          DC    XL1'D'
00005B61 000000                             7442          DC    AL3(0)
00005B64 00000898                           7443          DC    AL4(2200)
00005B68 00000000                           7444          DC    4X'00'
00005B6C 00000000                           7445          DC    Q(@@STATIC)
00005B70 00000000                           7446          DC    X'00000000'
00005B74 00000360                           7447          DC    X'00000360'
00005B78 00000000000046C0                   7448          DC    ADL8(@DATA)
00005B80 00000000                           7449          DC    X'00000000'
00005B84 0000092E                           7450          DC    X'0000092E'
                                            7451 *
00005B88 0D                                 7452          DC    XL1'D'
00005B89 000000                             7453          DC    AL3(0)
00005B8C 000008C0                           7454          DC    AL4(2240)
00005B90 00000000                           7455          DC    4X'00'
00005B94 00000000                           7456          DC    Q(@@STATIC)
00005B98 00000000                           7457          DC    X'00000000'
00005B9C 00000368                           7458          DC    X'00000368'
00005BA0 00000000000046C0                   7459          DC    ADL8(@DATA)
00005BA8 00000000                           7460          DC    X'00000000'
00005BAC 00000944                           7461          DC    X'00000944'
                                            7462 *
00005BB0 0D                                 7463          DC    XL1'D'
00005BB1 000000                             7464          DC    AL3(0)
00005BB4 000008E8                           7465          DC    AL4(2280)
00005BB8 00000000                           7466          DC    4X'00'
00005BBC 00000000                           7467          DC    Q(@@STATIC)
00005BC0 00000000                           7468          DC    X'00000000'
00005BC4 00000370                           7469          DC    X'00000370'
00005BC8 00000000000046C0                   7470          DC    ADL8(@DATA)
00005BD0 00000000                           7471          DC    X'00000000'
00005BD4 0000095C                           7472          DC    X'0000095C'
                                            7473 *
00005BD8 0D                                 7474          DC    XL1'D'
00005BD9 000000                             7475          DC    AL3(0)
                                                                                                                           Page  151 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005BDC 00000910                           7476          DC    AL4(2320)
00005BE0 00000000                           7477          DC    4X'00'
00005BE4 00000000                           7478          DC    Q(@@STATIC)
00005BE8 00000000                           7479          DC    X'00000000'
00005BEC 00000378                           7480          DC    X'00000378'
00005BF0 00000000000046C0                   7481          DC    ADL8(@DATA)
00005BF8 00000000                           7482          DC    X'00000000'
00005BFC 0000096A                           7483          DC    X'0000096A'
                                            7484 *
00005C00 0D                                 7485          DC    XL1'D'
00005C01 000000                             7486          DC    AL3(0)
00005C04 00000938                           7487          DC    AL4(2360)
00005C08 00000000                           7488          DC    4X'00'
00005C0C 00000000                           7489          DC    Q(@@STATIC)
00005C10 00000000                           7490          DC    X'00000000'
00005C14 00000380                           7491          DC    X'00000380'
00005C18 00000000000046C0                   7492          DC    ADL8(@DATA)
00005C20 00000000                           7493          DC    X'00000000'
00005C24 0000097E                           7494          DC    X'0000097E'
                                            7495 *
00005C28 0D                                 7496          DC    XL1'D'
00005C29 000000                             7497          DC    AL3(0)
00005C2C 00000960                           7498          DC    AL4(2400)
00005C30 00000000                           7499          DC    4X'00'
00005C34 00000000                           7500          DC    Q(@@STATIC)
00005C38 00000000                           7501          DC    X'00000000'
00005C3C 00000388                           7502          DC    X'00000388'
00005C40 00000000000046C0                   7503          DC    ADL8(@DATA)
00005C48 00000000                           7504          DC    X'00000000'
00005C4C 0000099E                           7505          DC    X'0000099E'
                                            7506 *
00005C50 0D                                 7507          DC    XL1'D'
00005C51 000000                             7508          DC    AL3(0)
00005C54 00000988                           7509          DC    AL4(2440)
00005C58 00000000                           7510          DC    4X'00'
00005C5C 00000000                           7511          DC    Q(@@STATIC)
00005C60 00000000                           7512          DC    X'00000000'
00005C64 00000390                           7513          DC    X'00000390'
00005C68 00000000000046C0                   7514          DC    ADL8(@DATA)
00005C70 00000000                           7515          DC    X'00000000'
00005C74 000009C2                           7516          DC    X'000009C2'
                                            7517 *
00005C78 0D                                 7518          DC    XL1'D'
00005C79 000000                             7519          DC    AL3(0)
00005C7C 000009B0                           7520          DC    AL4(2480)
00005C80 00000000                           7521          DC    4X'00'
00005C84 00000000                           7522          DC    Q(@@STATIC)
00005C88 00000000                           7523          DC    X'00000000'
00005C8C 00000398                           7524          DC    X'00000398'
00005C90 00000000000046C0                   7525          DC    ADL8(@DATA)
00005C98 00000000                           7526          DC    X'00000000'
00005C9C 000009E4                           7527          DC    X'000009E4'
                                                                                                                           Page  152 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            7528 *
00005CA0 0D                                 7529          DC    XL1'D'
00005CA1 000000                             7530          DC    AL3(0)
00005CA4 000009D8                           7531          DC    AL4(2520)
00005CA8 00000000                           7532          DC    4X'00'
00005CAC 00000000                           7533          DC    Q(@@STATIC)
00005CB0 00000000                           7534          DC    X'00000000'
00005CB4 000003A0                           7535          DC    X'000003A0'
00005CB8 00000000000046C0                   7536          DC    ADL8(@DATA)
00005CC0 00000000                           7537          DC    X'00000000'
00005CC4 000009F8                           7538          DC    X'000009F8'
                                            7539 *
00005CC8 0D                                 7540          DC    XL1'D'
00005CC9 000000                             7541          DC    AL3(0)
00005CCC 00000A00                           7542          DC    AL4(2560)
00005CD0 00000000                           7543          DC    4X'00'
00005CD4 00000000                           7544          DC    Q(@@STATIC)
00005CD8 00000000                           7545          DC    X'00000000'
00005CDC 000003A8                           7546          DC    X'000003A8'
00005CE0 00000000000046C0                   7547          DC    ADL8(@DATA)
00005CE8 00000000                           7548          DC    X'00000000'
00005CEC 00000A14                           7549          DC    X'00000A14'
                                            7550 *
00005CF0 0D                                 7551          DC    XL1'D'
00005CF1 000000                             7552          DC    AL3(0)
00005CF4 00000A28                           7553          DC    AL4(2600)
00005CF8 00000000                           7554          DC    4X'00'
00005CFC 00000000                           7555          DC    Q(@@STATIC)
00005D00 00000000                           7556          DC    X'00000000'
00005D04 000003B0                           7557          DC    X'000003B0'
00005D08 00000000000046C0                   7558          DC    ADL8(@DATA)
00005D10 00000000                           7559          DC    X'00000000'
00005D14 00000A2E                           7560          DC    X'00000A2E'
                                            7561 *
00005D18 0D                                 7562          DC    XL1'D'
00005D19 000000                             7563          DC    AL3(0)
00005D1C 00000A50                           7564          DC    AL4(2640)
00005D20 00000000                           7565          DC    4X'00'
00005D24 00000000                           7566          DC    Q(@@STATIC)
00005D28 00000000                           7567          DC    X'00000000'
00005D2C 000003B8                           7568          DC    X'000003B8'
00005D30 00000000000046C0                   7569          DC    ADL8(@DATA)
00005D38 00000000                           7570          DC    X'00000000'
00005D3C 00000A52                           7571          DC    X'00000A52'
                                            7572 *
00005D40 0D                                 7573          DC    XL1'D'
00005D41 000000                             7574          DC    AL3(0)
00005D44 00000A78                           7575          DC    AL4(2680)
00005D48 00000000                           7576          DC    4X'00'
00005D4C 00000000                           7577          DC    Q(@@STATIC)
00005D50 00000000                           7578          DC    X'00000000'
00005D54 000003C0                           7579          DC    X'000003C0'
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005D58 00000000000046C0                   7580          DC    ADL8(@DATA)
00005D60 00000000                           7581          DC    X'00000000'
00005D64 00000A74                           7582          DC    X'00000A74'
                                            7583 *
00005D68 0D                                 7584          DC    XL1'D'
00005D69 000000                             7585          DC    AL3(0)
00005D6C 00000AA0                           7586          DC    AL4(2720)
00005D70 00000000                           7587          DC    4X'00'
00005D74 00000000                           7588          DC    Q(@@STATIC)
00005D78 00000000                           7589          DC    X'00000000'
00005D7C 000003C8                           7590          DC    X'000003C8'
00005D80 00000000000046C0                   7591          DC    ADL8(@DATA)
00005D88 00000000                           7592          DC    X'00000000'
00005D8C 00000A80                           7593          DC    X'00000A80'
                                            7594 *
00005D90 0D                                 7595          DC    XL1'D'
00005D91 000000                             7596          DC    AL3(0)
00005D94 00000AC8                           7597          DC    AL4(2760)
00005D98 00000000                           7598          DC    4X'00'
00005D9C 00000000                           7599          DC    Q(@@STATIC)
00005DA0 00000000                           7600          DC    X'00000000'
00005DA4 000003D0                           7601          DC    X'000003D0'
00005DA8 00000000000046C0                   7602          DC    ADL8(@DATA)
00005DB0 00000000                           7603          DC    X'00000000'
00005DB4 00000A98                           7604          DC    X'00000A98'
                                            7605 *
00005DB8 0D                                 7606          DC    XL1'D'
00005DB9 000000                             7607          DC    AL3(0)
00005DBC 00000AF0                           7608          DC    AL4(2800)
00005DC0 00000000                           7609          DC    4X'00'
00005DC4 00000000                           7610          DC    Q(@@STATIC)
00005DC8 00000000                           7611          DC    X'00000000'
00005DCC 000003D8                           7612          DC    X'000003D8'
00005DD0 00000000000046C0                   7613          DC    ADL8(@DATA)
00005DD8 00000000                           7614          DC    X'00000000'
00005DDC 00000AAE                           7615          DC    X'00000AAE'
                                            7616 *
00005DE0 0D                                 7617          DC    XL1'D'
00005DE1 000000                             7618          DC    AL3(0)
00005DE4 00000B18                           7619          DC    AL4(2840)
00005DE8 00000000                           7620          DC    4X'00'
00005DEC 00000000                           7621          DC    Q(@@STATIC)
00005DF0 00000000                           7622          DC    X'00000000'
00005DF4 000003E0                           7623          DC    X'000003E0'
00005DF8 00000000000046C0                   7624          DC    ADL8(@DATA)
00005E00 00000000                           7625          DC    X'00000000'
00005E04 00000AC4                           7626          DC    X'00000AC4'
                                            7627 *
00005E08 0D                                 7628          DC    XL1'D'
00005E09 000000                             7629          DC    AL3(0)
00005E0C 00000B40                           7630          DC    AL4(2880)
00005E10 00000000                           7631          DC    4X'00'
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005E14 00000000                           7632          DC    Q(@@STATIC)
00005E18 00000000                           7633          DC    X'00000000'
00005E1C 000003E8                           7634          DC    X'000003E8'
00005E20 00000000000046C0                   7635          DC    ADL8(@DATA)
00005E28 00000000                           7636          DC    X'00000000'
00005E2C 00000AD4                           7637          DC    X'00000AD4'
                                            7638 *
00005E30 0D                                 7639          DC    XL1'D'
00005E31 000000                             7640          DC    AL3(0)
00005E34 00000B68                           7641          DC    AL4(2920)
00005E38 00000000                           7642          DC    4X'00'
00005E3C 00000000                           7643          DC    Q(@@STATIC)
00005E40 00000000                           7644          DC    X'00000000'
00005E44 000003F0                           7645          DC    X'000003F0'
00005E48 00000000000046C0                   7646          DC    ADL8(@DATA)
00005E50 00000000                           7647          DC    X'00000000'
00005E54 00000AEA                           7648          DC    X'00000AEA'
                                            7649 *
00005E58 0D                                 7650          DC    XL1'D'
00005E59 000000                             7651          DC    AL3(0)
00005E5C 00000B90                           7652          DC    AL4(2960)
00005E60 00000000                           7653          DC    4X'00'
00005E64 00000000                           7654          DC    Q(@@STATIC)
00005E68 00000000                           7655          DC    X'00000000'
00005E6C 000004C0                           7656          DC    X'000004C0'
00005E70 00000000000046C0                   7657          DC    ADL8(@DATA)
00005E78 00000000                           7658          DC    X'00000000'
00005E7C 00000AFA                           7659          DC    X'00000AFA'
                                            7660 *
00005E80 0D                                 7661          DC    XL1'D'
00005E81 000000                             7662          DC    AL3(0)
00005E84 00000BB8                           7663          DC    AL4(3000)
00005E88 00000000                           7664          DC    4X'00'
00005E8C 00000000                           7665          DC    Q(@@STATIC)
00005E90 00000000                           7666          DC    X'00000000'
00005E94 000004C8                           7667          DC    X'000004C8'
00005E98 00000000000046C0                   7668          DC    ADL8(@DATA)
00005EA0 00000000                           7669          DC    X'00000000'
00005EA4 00000B00                           7670          DC    X'00000B00'
                                            7671 *
00005EA8 0D                                 7672          DC    XL1'D'
00005EA9 000000                             7673          DC    AL3(0)
00005EAC 00000BE0                           7674          DC    AL4(3040)
00005EB0 00000000                           7675          DC    4X'00'
00005EB4 00000000                           7676          DC    Q(@@STATIC)
00005EB8 00000000                           7677          DC    X'00000000'
00005EBC 000004D0                           7678          DC    X'000004D0'
00005EC0 00000000000046C0                   7679          DC    ADL8(@DATA)
00005EC8 00000000                           7680          DC    X'00000000'
00005ECC 00000B06                           7681          DC    X'00000B06'
                                            7682 *
00005ED0 0D                                 7683          DC    XL1'D'
                                                                                                                           Page  155 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005ED1 000000                             7684          DC    AL3(0)
00005ED4 00000C08                           7685          DC    AL4(3080)
00005ED8 00000000                           7686          DC    4X'00'
00005EDC 00000000                           7687          DC    Q(@@STATIC)
00005EE0 00000000                           7688          DC    X'00000000'
00005EE4 000004D8                           7689          DC    X'000004D8'
00005EE8 00000000000046C0                   7690          DC    ADL8(@DATA)
00005EF0 00000000                           7691          DC    X'00000000'
00005EF4 00000B0E                           7692          DC    X'00000B0E'
                                            7693 *
00005EF8 0D                                 7694          DC    XL1'D'
00005EF9 000000                             7695          DC    AL3(0)
00005EFC 00000C30                           7696          DC    AL4(3120)
00005F00 00000000                           7697          DC    4X'00'
00005F04 00000000                           7698          DC    Q(@@STATIC)
00005F08 00000000                           7699          DC    X'00000000'
00005F0C 000004E0                           7700          DC    X'000004E0'
00005F10 00000000000046C0                   7701          DC    ADL8(@DATA)
00005F18 00000000                           7702          DC    X'00000000'
00005F1C 00000B12                           7703          DC    X'00000B12'
                                            7704 *
00005F20 0D                                 7705          DC    XL1'D'
00005F21 000000                             7706          DC    AL3(0)
00005F24 00000C58                           7707          DC    AL4(3160)
00005F28 00000000                           7708          DC    4X'00'
00005F2C 00000000                           7709          DC    Q(@@STATIC)
00005F30 00000000                           7710          DC    X'00000000'
00005F34 000004E8                           7711          DC    X'000004E8'
00005F38 00000000000046C0                   7712          DC    ADL8(@DATA)
00005F40 00000000                           7713          DC    X'00000000'
00005F44 00000B18                           7714          DC    X'00000B18'
                                            7715 *
00005F48 0D                                 7716          DC    XL1'D'
00005F49 000000                             7717          DC    AL3(0)
00005F4C 00000C80                           7718          DC    AL4(3200)
00005F50 00000000                           7719          DC    4X'00'
00005F54 00000000                           7720          DC    Q(@@STATIC)
00005F58 00000000                           7721          DC    X'00000000'
00005F5C 00000510                           7722          DC    X'00000510'
00005F60 00000000000046C0                   7723          DC    ADL8(@DATA)
00005F68 00000000                           7724          DC    X'00000000'
00005F6C 00000B20                           7725          DC    X'00000B20'
                                            7726 *
00005F70 0D                                 7727          DC    XL1'D'
00005F71 000000                             7728          DC    AL3(0)
00005F74 00000CA8                           7729          DC    AL4(3240)
00005F78 00000000                           7730          DC    4X'00'
00005F7C 00000000                           7731          DC    Q(@@STATIC)
00005F80 00000000                           7732          DC    X'00000000'
00005F84 00000518                           7733          DC    X'00000518'
00005F88 00000000000046C0                   7734          DC    ADL8(@DATA)
00005F90 00000000                           7735          DC    X'00000000'
                                                                                                                           Page  156 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00005F94 00000B2C                           7736          DC    X'00000B2C'
                                            7737 *
00005F98 0D                                 7738          DC    XL1'D'
00005F99 000000                             7739          DC    AL3(0)
00005F9C 00000CD0                           7740          DC    AL4(3280)
00005FA0 00000000                           7741          DC    4X'00'
00005FA4 00000000                           7742          DC    Q(@@STATIC)
00005FA8 00000000                           7743          DC    X'00000000'
00005FAC 00000520                           7744          DC    X'00000520'
00005FB0 00000000000046C0                   7745          DC    ADL8(@DATA)
00005FB8 00000000                           7746          DC    X'00000000'
00005FBC 00000B34                           7747          DC    X'00000B34'
                                            7748 *
00005FC0 0D                                 7749          DC    XL1'D'
00005FC1 000000                             7750          DC    AL3(0)
00005FC4 00000CF8                           7751          DC    AL4(3320)
00005FC8 00000000                           7752          DC    4X'00'
00005FCC 00000000                           7753          DC    Q(@@STATIC)
00005FD0 00000000                           7754          DC    X'00000000'
00005FD4 00000528                           7755          DC    X'00000528'
00005FD8 00000000000046C0                   7756          DC    ADL8(@DATA)
00005FE0 00000000                           7757          DC    X'00000000'
00005FE4 00000B3E                           7758          DC    X'00000B3E'
                                            7759 *
00005FE8 0D                                 7760          DC    XL1'D'
00005FE9 000000                             7761          DC    AL3(0)
00005FEC 00000D20                           7762          DC    AL4(3360)
00005FF0 00000000                           7763          DC    4X'00'
00005FF4 00000000                           7764          DC    Q(@@STATIC)
00005FF8 00000000                           7765          DC    X'00000000'
00005FFC 00000630                           7766          DC    X'00000630'
00006000 00000000000046C0                   7767          DC    ADL8(@DATA)
00006008 00000000                           7768          DC    X'00000000'
0000600C 00000B46                           7769          DC    X'00000B46'
                                            7770 *
00006010 0D                                 7771          DC    XL1'D'
00006011 000000                             7772          DC    AL3(0)
00006014 00000D48                           7773          DC    AL4(3400)
00006018 00000000                           7774          DC    4X'00'
0000601C 00000000                           7775          DC    Q(@@STATIC)
00006020 00000000                           7776          DC    X'00000000'
00006024 00000638                           7777          DC    X'00000638'
00006028 00000000000046C0                   7778          DC    ADL8(@DATA)
00006030 00000000                           7779          DC    X'00000000'
00006034 00000B4C                           7780          DC    X'00000B4C'
                                            7781 *
00006038 0D                                 7782          DC    XL1'D'
00006039 000000                             7783          DC    AL3(0)
0000603C 00000D70                           7784          DC    AL4(3440)
00006040 00000000                           7785          DC    4X'00'
00006044 00000000                           7786          DC    Q(@@STATIC)
00006048 00000000                           7787          DC    X'00000000'
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000604C 00000640                           7788          DC    X'00000640'
00006050 00000000000046C0                   7789          DC    ADL8(@DATA)
00006058 00000000                           7790          DC    X'00000000'
0000605C 00000B56                           7791          DC    X'00000B56'
                                            7792 *
00006060 0D                                 7793          DC    XL1'D'
00006061 000000                             7794          DC    AL3(0)
00006064 00000D98                           7795          DC    AL4(3480)
00006068 00000000                           7796          DC    4X'00'
0000606C 00000000                           7797          DC    Q(@@STATIC)
00006070 00000000                           7798          DC    X'00000000'
00006074 00000648                           7799          DC    X'00000648'
00006078 00000000000046C0                   7800          DC    ADL8(@DATA)
00006080 00000000                           7801          DC    X'00000000'
00006084 00000B62                           7802          DC    X'00000B62'
                                            7803 *
00006088 0D                                 7804          DC    XL1'D'
00006089 000000                             7805          DC    AL3(0)
0000608C 00000DC0                           7806          DC    AL4(3520)
00006090 00000000                           7807          DC    4X'00'
00006094 00000000                           7808          DC    Q(@@STATIC)
00006098 00000000                           7809          DC    X'00000000'
0000609C 00000650                           7810          DC    X'00000650'
000060A0 00000000000046C0                   7811          DC    ADL8(@DATA)
000060A8 00000000                           7812          DC    X'00000000'
000060AC 00000B6E                           7813          DC    X'00000B6E'
                                            7814 *
000060B0 0D                                 7815          DC    XL1'D'
000060B1 000000                             7816          DC    AL3(0)
000060B4 00000DE8                           7817          DC    AL4(3560)
000060B8 00000000                           7818          DC    4X'00'
000060BC 00000000                           7819          DC    Q(@@STATIC)
000060C0 00000000                           7820          DC    X'00000000'
000060C4 00000658                           7821          DC    X'00000658'
000060C8 00000000000046C0                   7822          DC    ADL8(@DATA)
000060D0 00000000                           7823          DC    X'00000000'
000060D4 00000B7C                           7824          DC    X'00000B7C'
                                            7825 *
000060D8 0D                                 7826          DC    XL1'D'
000060D9 000000                             7827          DC    AL3(0)
000060DC 00000E10                           7828          DC    AL4(3600)
000060E0 00000000                           7829          DC    4X'00'
000060E4 00000000                           7830          DC    Q(@@STATIC)
000060E8 00000000                           7831          DC    X'00000000'
000060EC 00000660                           7832          DC    X'00000660'
000060F0 00000000000046C0                   7833          DC    ADL8(@DATA)
000060F8 00000000                           7834          DC    X'00000000'
000060FC 00000B84                           7835          DC    X'00000B84'
                                            7836 *
00006100 0D                                 7837          DC    XL1'D'
00006101 000000                             7838          DC    AL3(0)
00006104 00000E38                           7839          DC    AL4(3640)
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00006108 00000000                           7840          DC    4X'00'
0000610C 00000000                           7841          DC    Q(@@STATIC)
00006110 00000000                           7842          DC    X'00000000'
00006114 00000668                           7843          DC    X'00000668'
00006118 00000000000046C0                   7844          DC    ADL8(@DATA)
00006120 00000000                           7845          DC    X'00000000'
00006124 00000B8E                           7846          DC    X'00000B8E'
                                            7847 *
00006128 0D                                 7848          DC    XL1'D'
00006129 000000                             7849          DC    AL3(0)
0000612C 00000E60                           7850          DC    AL4(3680)
00006130 00000000                           7851          DC    4X'00'
00006134 00000000                           7852          DC    Q(@@STATIC)
00006138 00000000                           7853          DC    X'00000000'
0000613C 00000670                           7854          DC    X'00000670'
00006140 00000000000046C0                   7855          DC    ADL8(@DATA)
00006148 00000000                           7856          DC    X'00000000'
0000614C 00000B9A                           7857          DC    X'00000B9A'
                                            7858 *
00006150 0D                                 7859          DC    XL1'D'
00006151 000000                             7860          DC    AL3(0)
00006154 00000E88                           7861          DC    AL4(3720)
00006158 00000000                           7862          DC    4X'00'
0000615C 00000000                           7863          DC    Q(@@STATIC)
00006160 00000000                           7864          DC    X'00000000'
00006164 00000678                           7865          DC    X'00000678'
00006168 00000000000046C0                   7866          DC    ADL8(@DATA)
00006170 00000000                           7867          DC    X'00000000'
00006174 00000B46                           7868          DC    X'00000B46'
                                            7869 *
00006178 0D                                 7870          DC    XL1'D'
00006179 000000                             7871          DC    AL3(0)
0000617C 00000EB0                           7872          DC    AL4(3760)
00006180 00000000                           7873          DC    4X'00'
00006184 00000000                           7874          DC    Q(@@STATIC)
00006188 00000000                           7875          DC    X'00000000'
0000618C 00000680                           7876          DC    X'00000680'
00006190 00000000000046C0                   7877          DC    ADL8(@DATA)
00006198 00000000                           7878          DC    X'00000000'
0000619C 00000B7C                           7879          DC    X'00000B7C'
                                            7880 *
000061A0 0D                                 7881          DC    XL1'D'
000061A1 000000                             7882          DC    AL3(0)
000061A4 00000ED8                           7883          DC    AL4(3800)
000061A8 00000000                           7884          DC    4X'00'
000061AC 00000000                           7885          DC    Q(@@STATIC)
000061B0 00000000                           7886          DC    X'00000000'
000061B4 00000688                           7887          DC    X'00000688'
000061B8 00000000000046C0                   7888          DC    ADL8(@DATA)
000061C0 00000000                           7889          DC    X'00000000'
000061C4 00000BA4                           7890          DC    X'00000BA4'
                                            7891 *
                                                                                                                           Page  159 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000061C8 0D                                 7892          DC    XL1'D'
000061C9 000000                             7893          DC    AL3(0)
000061CC 00000F00                           7894          DC    AL4(3840)
000061D0 00000000                           7895          DC    4X'00'
000061D4 00000000                           7896          DC    Q(@@STATIC)
000061D8 00000000                           7897          DC    X'00000000'
000061DC 00000690                           7898          DC    X'00000690'
000061E0 00000000000046C0                   7899          DC    ADL8(@DATA)
000061E8 00000000                           7900          DC    X'00000000'
000061EC 00000BB2                           7901          DC    X'00000BB2'
                                            7902 *
000061F0 0D                                 7903          DC    XL1'D'
000061F1 000000                             7904          DC    AL3(0)
000061F4 00000F28                           7905          DC    AL4(3880)
000061F8 00000000                           7906          DC    4X'00'
000061FC 00000000                           7907          DC    Q(@@STATIC)
00006200 00000000                           7908          DC    X'00000000'
00006204 00000698                           7909          DC    X'00000698'
00006208 00000000000046C0                   7910          DC    ADL8(@DATA)
00006210 00000000                           7911          DC    X'00000000'
00006214 00000BB8                           7912          DC    X'00000BB8'
                                            7913 *
00006218 0D                                 7914          DC    XL1'D'
00006219 000000                             7915          DC    AL3(0)
0000621C 00000F50                           7916          DC    AL4(3920)
00006220 00000000                           7917          DC    4X'00'
00006224 00000000                           7918          DC    Q(@@STATIC)
00006228 00000000                           7919          DC    X'00000000'
0000622C 000006A0                           7920          DC    X'000006A0'
00006230 00000000000046C0                   7921          DC    ADL8(@DATA)
00006238 00000000                           7922          DC    X'00000000'
0000623C 00000BC6                           7923          DC    X'00000BC6'
                                            7924 *
00006240 0D                                 7925          DC    XL1'D'
00006241 000000                             7926          DC    AL3(0)
00006244 00000F78                           7927          DC    AL4(3960)
00006248 00000000                           7928          DC    4X'00'
0000624C 00000000                           7929          DC    Q(@@STATIC)
00006250 00000000                           7930          DC    X'00000000'
00006254 000006A8                           7931          DC    X'000006A8'
00006258 00000000000046C0                   7932          DC    ADL8(@DATA)
00006260 00000000                           7933          DC    X'00000000'
00006264 00000BD2                           7934          DC    X'00000BD2'
                                            7935 *
00006268 0D                                 7936          DC    XL1'D'
00006269 000000                             7937          DC    AL3(0)
0000626C 00000FA0                           7938          DC    AL4(4000)
00006270 00000000                           7939          DC    4X'00'
00006274 00000000                           7940          DC    Q(@@STATIC)
00006278 00000000                           7941          DC    X'00000000'
0000627C 000006B0                           7942          DC    X'000006B0'
00006280 00000000000046C0                   7943          DC    ADL8(@DATA)
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00006288 00000000                           7944          DC    X'00000000'
0000628C 00000BE8                           7945          DC    X'00000BE8'
                                            7946 *
00006290 0D                                 7947          DC    XL1'D'
00006291 000000                             7948          DC    AL3(0)
00006294 00000FC8                           7949          DC    AL4(4040)
00006298 00000000                           7950          DC    4X'00'
0000629C 00000000                           7951          DC    Q(@@STATIC)
000062A0 00000000                           7952          DC    X'00000000'
000062A4 000006B8                           7953          DC    X'000006B8'
000062A8 00000000000046C0                   7954          DC    ADL8(@DATA)
000062B0 00000000                           7955          DC    X'00000000'
000062B4 00000BF8                           7956          DC    X'00000BF8'
                                            7957 *
000062B8 0D                                 7958          DC    XL1'D'
000062B9 000000                             7959          DC    AL3(0)
000062BC 00000FF0                           7960          DC    AL4(4080)
000062C0 00000000                           7961          DC    4X'00'
000062C4 00000000                           7962          DC    Q(@@STATIC)
000062C8 00000000                           7963          DC    X'00000000'
000062CC 000006C0                           7964          DC    X'000006C0'
000062D0 00000000000046C0                   7965          DC    ADL8(@DATA)
000062D8 00000000                           7966          DC    X'00000000'
000062DC 00000C0C                           7967          DC    X'00000C0C'
                                            7968 *
000062E0 0D                                 7969          DC    XL1'D'
000062E1 000000                             7970          DC    AL3(0)
000062E4 00001018                           7971          DC    AL4(4120)
000062E8 00000000                           7972          DC    4X'00'
000062EC 00000000                           7973          DC    Q(@@STATIC)
000062F0 00000000                           7974          DC    X'00000000'
000062F4 000006C8                           7975          DC    X'000006C8'
000062F8 00000000000046C0                   7976          DC    ADL8(@DATA)
00006300 00000000                           7977          DC    X'00000000'
00006304 00000C1C                           7978          DC    X'00000C1C'
                                            7979 *
00006308 0D                                 7980          DC    XL1'D'
00006309 000000                             7981          DC    AL3(0)
0000630C 00000000                           7982          DC    AL4(0)
00006310 00000000                           7983          DC    4X'00'
00006314 00000000                           7984          DC    Q(@@STATIC)
00006318 00000000                           7985          DC    X'00000000'
0000631C 000006D0                           7986          DC    X'000006D0'
00006320 00000000000046C0                   7987          DC    ADL8(@DATA)
00006328 00000000                           7988          DC    X'00000000'
0000632C 00000B56                           7989          DC    X'00000B56'
                                            7990 *
                                            7991          END
                                                 Relocation Dictionary                                                     Page  161 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 0000001A 00000138   A 4      +
 00000002 0000001B 00000140   A 4      +
 00000002 00000002 00000168   A 4      +
 00000002 00000002 00000190   A 4      +
 00000002 00000002 00000198   A 4      +
 00000002 0000001A 00000270   A 4      +
 00000002 0000001B 00000278   A 4      +
 00000002 00000002 000002A0   A 4      +
 00000002 00000002 000002C8   A 4      +
 00000002 00000002 000002D0   A 4      +
 00000002 0000001A 000003C0   A 4      +
 00000002 0000001B 000003C8   A 4      +
 00000002 00000002 000003F8   A 4      +
 00000002 00000002 00000420   A 4      +
 00000002 00000002 00000428   A 4      +
 00000002 00000027 000004F8   A 4      +
 00000002 00000004 00000500   A 4      +
 00000002 00000002 00000570   A 4      +
 00000002 00000002 00000598   A 4      +
 00000002 00000002 000005A0   A 4      +
 00000002 00000015 000006A8   A 4      +
 00000002 00000006 000006B0   A 4      +
 00000002 0000002C 000006B8   A 4      +
 00000002 0000002C 000006C0   A 4      +
 00000002 00000002 000006E0   A 4      +
 00000002 00000002 00000708   A 4      +
 00000002 00000002 00000710   A 4      +
 00000002 00000018 000007C8   A 4      +
 00000002 00000002 000007F0   A 4      +
 00000002 00000002 00000818   A 4      +
 00000002 00000002 00000820   A 4      +
 00000002 00000002 00000930   A 4      +
 00000002 0000002C 00000938   A 4      +
 00000002 00000006 00000940   A 4      +
 00000002 0000002C 00000948   A 4      +
 00000002 00000002 00000998   A 4      +
 00000002 00000002 000009A0   A 4      +
 00000002 00000002 00000A40   A 4      +
 00000002 00000002 00000A48   A 4      +
 00000002 00000002 00000AE8   A 4      +
 00000002 00000002 00000AF0   A 4      +
 00000002 00000002 00000B78   A 4      +
 00000002 00000002 00000BA0   A 4      +
 00000002 00000002 00000BA8   A 4      +
 00000002 0000002B 00000C84   Q 4      +
 00000002 00000014 00000C88   A 4      +
 00000002 0000002C 00000C90   A 4      +
 00000002 00000002 00000D38   A 4      +
 00000002 00000002 00000D40   A 4      +
 00000002 00000002 00000E30   A 4      +
                                                 Relocation Dictionary                                                     Page  162 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000E58   A 4      +
 00000002 00000002 00000E60   A 4      +
 00000002 00000019 00000EF0   A 4      +
 00000002 00000002 00000F80   A 4      +
 00000002 00000002 00000FA8   A 4      +
 00000002 00000002 00000FB0   A 4      +
 00000002 00000002 000010E0   A 4      +
 00000002 0000001F 000010E8   A 4      +
 00000002 00000002 000010F0   A 4      +
 00000002 00000002 000010F8   A 4      +
 00000002 00000002 00001130   A 4      +
 00000002 00000002 00001158   A 4      +
 00000002 00000002 00001160   A 4      +
 00000002 00000008 000011C8   A 4      +
 00000002 00000004 000011D0   A 4      +
 00000002 00000026 000011D8   A 4      +
 00000002 00000014 000011E0   A 4      +
 00000002 0000002C 000011E8   A 4      +
 00000002 00000012 000011F0   A 4      +
 00000002 00000006 000011F8   A 4      +
 00000002 0000002C 00001200   A 4      +
 00000002 00000011 00001208   A 4      +
 00000002 00000002 00001408   A 4      +
 00000002 00000002 00001430   A 4      +
 00000002 00000002 00001438   A 4      +
 00000002 00000002 00001518   A 4      +
 00000002 00000002 00001550   A 4      +
 00000002 00000002 00001578   A 4      +
 00000002 00000002 00001580   A 4      +
 00000002 00000007 000015E8   A 4      +
 00000002 00000004 000015F0   A 4      +
 00000002 00000026 000015F8   A 4      +
 00000002 00000014 00001600   A 4      +
 00000002 0000002C 00001608   A 4      +
 00000002 00000005 00001610   A 4      +
 00000002 00000009 00001618   A 4      +
 00000002 00000002 000017F8   A 4      +
 00000002 00000002 00001820   A 4      +
 00000002 00000002 00001828   A 4      +
 00000002 00000002 00001908   A 4      +
 00000002 00000002 00001940   A 4      +
 00000002 00000002 00001968   A 4      +
 00000002 00000002 00001970   A 4      +
 00000002 00000021 00001A50   A 4      +
 00000002 0000002A 00001A58   Q 4      +
 00000002 00000002 00001A80   A 4      +
 00000002 00000002 00001AA8   A 4      +
 00000002 00000002 00001AB0   A 4      +
 00000002 00000002 00001B90   A 4      +
 00000002 00000002 00001BC0   A 4      +
 00000002 00000002 00001BE8   A 4      +
 00000002 00000002 00001BF0   A 4      +
 00000002 00000002 00001CD0   A 4      +
                                                 Relocation Dictionary                                                     Page  163 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00001D08   A 4      +
 00000002 00000002 00001D30   A 4      +
 00000002 00000002 00001D38   A 4      +
 00000002 00000016 00001E60   A 4      +
 00000002 00000002 00001E98   A 4      +
 00000002 00000002 00001EC0   A 4      +
 00000002 00000002 00001EC8   A 4      +
 00000002 00000020 00001FB8   A 4      +
 00000002 0000000C 00001FC0   A 4      +
 00000002 00000002 00001FC8   A 4      +
 00000002 00000002 00001FD0   A 4      +
 00000002 0000000F 00001FD8   A 4      +
 00000002 00000012 00001FE0   A 4      +
 00000002 00000002 00001FE8   A 4      +
 00000002 00000025 00001FF0   A 4      +
 00000002 0000002C 00001FF8   A 4      +
 00000002 0000002C 00002000   A 4      +
 00000002 00000014 00002008   A 4      +
 00000002 0000000A 00002010   A 4      +
 00000002 00000002 00002018   A 4      +
 00000002 0000000E 00002020   A 4      +
 00000002 00000002 00002028   A 4      +
 00000002 00000002 00002030   A 4      +
 00000002 00000028 00002038   A 4      +
 00000002 0000000B 00002040   A 4      +
 00000002 00000002 00002048   A 4      +
 00000002 00000010 00002050   A 4      +
 00000002 00000002 00002538   A 4      +
 00000002 00000002 00002560   A 4      +
 00000002 00000002 00002568   A 4      +
 00000002 0000000D 00002990   A 4      +
 00000002 0000000A 00002998   A 4      +
 00000002 00000002 000029A0   A 4      +
 00000002 0000000E 000029A8   A 4      +
 00000002 00000004 000029B0   A 4      +
 00000002 00000026 000029B8   A 4      +
 00000002 00000028 000029C0   A 4      +
 00000002 0000002C 000029C8   A 4      +
 00000002 00000003 000029D0   A 4      +
 00000002 00000002 00002CE8   A 4      +
 00000002 00000002 00002D10   A 4      +
 00000002 00000002 00002D18   A 4      +
 00000002 0000000A 00002ED8   A 4      +
 00000002 00000002 00002EE0   A 4      +
 00000002 0000000E 00002EE8   A 4      +
 00000002 0000001E 00002EF0   A 4      +
 00000002 00000028 00002EF8   A 4      +
 00000002 0000002C 00002F00   A 4      +
 00000002 00000002 00002F08   A 4      +
 00000002 00000002 00002F10   A 4      +
 00000002 00000002 00002F48   A 4      +
 00000002 00000002 00002F70   A 4      +
 00000002 00000002 00002F78   A 4      +
                                                 Relocation Dictionary                                                     Page  164 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000003 00003138   A 4      +
 00000002 0000000A 00003140   A 4      +
 00000002 00000002 00003148   A 4      +
 00000002 0000000E 00003150   A 4      +
 00000002 00000004 00003158   A 4      +
 00000002 00000026 00003160   A 4      +
 00000002 00000028 00003168   A 4      +
 00000002 0000002C 00003170   A 4      +
 00000002 00000002 000031F0   A 4      +
 00000002 00000002 00003218   A 4      +
 00000002 00000002 00003220   A 4      +
 00000002 00000002 00003290   A 4      +
 00000002 0000001E 00003298   A 4      +
 00000002 00000004 000032A0   A 4      +
 00000002 00000026 000032A8   A 4      +
 00000002 0000001C 000032B0   A 4      +
 00000002 0000002C 000032B8   A 4      +
 00000002 00000014 000032C0   A 4      +
 00000002 00000002 000032C8   A 4      +
 00000002 00000002 000032D0   A 4      +
 00000002 00000023 000032D8   A 4      +
 00000002 0000001D 000032E0   A 4      +
 00000002 00000022 000032E8   A 4      +
 00000002 00000025 000032F0   A 4      +
 00000002 0000002C 000032F8   A 4      +
 00000002 00000002 00003648   A 4      +
 00000002 00000002 00003670   A 4      +
 00000002 00000002 00003678   A 4      +
 00000002 0000002A 0000378C   Q 4      +
 00000002 00000002 00003790   A 4      +
 00000002 00000002 00003798   A 4      +
 00000002 00000002 000037A0   A 4      +
 00000002 00000002 000037A8   A 4      +
 00000002 00000002 000037B0   A 4      +
 00000002 00000002 00003868   A 4      +
 00000002 00000002 00003890   A 4      +
 00000002 00000002 00003898   A 4      +
 00000002 0000000D 00003BE0   A 4      +
 00000002 0000000A 00003BE8   A 4      +
 00000002 00000002 00003BF0   A 4      +
 00000002 0000000E 00003BF8   A 4      +
 00000002 00000004 00003C00   A 4      +
 00000002 00000026 00003C08   A 4      +
 00000002 00000028 00003C10   A 4      +
 00000002 0000002C 00003C18   A 4      +
 00000002 00000002 00003C20   A 4      +
 00000002 00000014 00003C28   A 4      +
 00000002 00000002 00003C30   A 4      +
 00000002 00000002 00003CD0   A 4      +
 00000002 00000002 00003CF8   A 4      +
 00000002 00000002 00003D00   A 4      +
 00000002 00000004 00003E08   A 4      +
 00000002 00000026 00003E10   A 4      +
                                                 Relocation Dictionary                                                     Page  165 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000014 00003E18   A 4      +
 00000002 0000002C 00003E20   A 4      +
 00000002 00000002 00003E28   A 4      +
 00000002 00000002 00003E30   A 4      +
 00000002 0000000A 00003E38   A 4      +
 00000002 00000002 00003E40   A 4      +
 00000002 0000000E 00003E48   A 4      +
 00000002 0000001E 00003E50   A 4      +
 00000002 00000028 00003E58   A 4      +
 00000002 00000013 00003E60   Q 4      +
 00000002 00000029 00003E68   A 4      +
 00000002 00000002 00003E70   A 4      +
 00000002 00000002 00003E78   A 4      +
 00000002 00000002 000043B8   A 4      +
 00000002 00000002 000043C0   A 4      +
 00000002 00000002 00004448   A 4      +
 00000002 00000002 00004450   A 4      +
 00000002 00000002 000044B8   A 4      +
 00000002 00000002 000044E0   A 4      +
 00000002 00000002 000044E8   A 4      +
 00000002 00000017 00004580   A 4      +
 00000002 00000002 00004588   A 4      +
 00000002 00000024 00004590   A 4      +
 00000002 00000002 00004690   A 4      +
 00000002 00000002 00004698   A 4      +
 0000002E 0000002B 000052FC   Q 4      +
 0000002E 0000002B 0000541C   Q 4      +
 0000002E 0000002B 000054DC   Q 4      +
 0000002E 0000002B 00005504   Q 4      +
 0000002E 0000002B 0000552C   Q 4      +
 0000002E 0000002C 00005538   A 4      +
 0000002E 0000002B 00005554   Q 4      +
 0000002E 0000002C 00005560   A 4      +
 0000002E 0000002B 0000557C   Q 4      +
 0000002E 0000002C 00005588   A 4      +
 0000002E 0000002B 000055A4   Q 4      +
 0000002E 0000002C 000055B0   A 4      +
 0000002E 0000002B 000055CC   Q 4      +
 0000002E 0000002C 000055D8   A 4      +
 0000002E 0000002B 000055F4   Q 4      +
 0000002E 0000002C 00005600   A 4      +
 0000002E 0000002B 0000561C   Q 4      +
 0000002E 0000002C 00005628   A 4      +
 0000002E 0000002B 00005644   Q 4      +
 0000002E 0000002C 00005650   A 4      +
 0000002E 0000002B 0000566C   Q 4      +
 0000002E 0000002C 00005678   A 4      +
 0000002E 0000002B 00005694   Q 4      +
 0000002E 0000002C 000056A0   A 4      +
 0000002E 0000002B 000056BC   Q 4      +
 0000002E 0000002C 000056C8   A 4      +
 0000002E 0000002B 000056E4   Q 4      +
 0000002E 0000002C 000056F0   A 4      +
                                                 Relocation Dictionary                                                     Page  166 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 0000002E 0000002B 0000570C   Q 4      +
 0000002E 0000002C 00005718   A 4      +
 0000002E 0000002B 00005734   Q 4      +
 0000002E 0000002C 00005740   A 4      +
 0000002E 0000002B 0000575C   Q 4      +
 0000002E 0000002C 00005768   A 4      +
 0000002E 0000002B 00005784   Q 4      +
 0000002E 0000002C 00005790   A 4      +
 0000002E 0000002B 000057AC   Q 4      +
 0000002E 0000002C 000057B8   A 4      +
 0000002E 0000002B 000057D4   Q 4      +
 0000002E 0000002C 000057E0   A 4      +
 0000002E 0000002B 000057FC   Q 4      +
 0000002E 0000002C 00005808   A 4      +
 0000002E 0000002B 00005824   Q 4      +
 0000002E 0000002C 00005830   A 4      +
 0000002E 0000002B 0000584C   Q 4      +
 0000002E 0000002C 00005858   A 4      +
 0000002E 0000002B 00005874   Q 4      +
 0000002E 0000002C 00005880   A 4      +
 0000002E 0000002B 0000589C   Q 4      +
 0000002E 0000002C 000058A8   A 4      +
 0000002E 0000002B 000058C4   Q 4      +
 0000002E 0000002C 000058D0   A 4      +
 0000002E 0000002B 000058EC   Q 4      +
 0000002E 0000002C 000058F8   A 4      +
 0000002E 0000002B 00005914   Q 4      +
 0000002E 0000002C 00005920   A 4      +
 0000002E 0000002B 0000593C   Q 4      +
 0000002E 0000002C 00005948   A 4      +
 0000002E 0000002B 00005964   Q 4      +
 0000002E 0000002C 00005970   A 4      +
 0000002E 0000002B 0000598C   Q 4      +
 0000002E 0000002C 00005998   A 4      +
 0000002E 0000002B 000059B4   Q 4      +
 0000002E 0000002C 000059C0   A 4      +
 0000002E 0000002B 000059DC   Q 4      +
 0000002E 0000002C 000059E8   A 4      +
 0000002E 0000002B 00005A04   Q 4      +
 0000002E 0000002C 00005A10   A 4      +
 0000002E 0000002B 00005A2C   Q 4      +
 0000002E 0000002C 00005A38   A 4      +
 0000002E 0000002B 00005A54   Q 4      +
 0000002E 0000002C 00005A60   A 4      +
 0000002E 0000002B 00005A7C   Q 4      +
 0000002E 0000002C 00005A88   A 4      +
 0000002E 0000002B 00005AA4   Q 4      +
 0000002E 0000002C 00005AB0   A 4      +
 0000002E 0000002B 00005ACC   Q 4      +
 0000002E 0000002C 00005AD8   A 4      +
 0000002E 0000002B 00005AF4   Q 4      +
 0000002E 0000002C 00005B00   A 4      +
 0000002E 0000002B 00005B1C   Q 4      +
                                                 Relocation Dictionary                                                     Page  167 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 0000002E 0000002C 00005B28   A 4      +
 0000002E 0000002B 00005B44   Q 4      +
 0000002E 0000002C 00005B50   A 4      +
 0000002E 0000002B 00005B6C   Q 4      +
 0000002E 0000002C 00005B78   A 4      +
 0000002E 0000002B 00005B94   Q 4      +
 0000002E 0000002C 00005BA0   A 4      +
 0000002E 0000002B 00005BBC   Q 4      +
 0000002E 0000002C 00005BC8   A 4      +
 0000002E 0000002B 00005BE4   Q 4      +
 0000002E 0000002C 00005BF0   A 4      +
 0000002E 0000002B 00005C0C   Q 4      +
 0000002E 0000002C 00005C18   A 4      +
 0000002E 0000002B 00005C34   Q 4      +
 0000002E 0000002C 00005C40   A 4      +
 0000002E 0000002B 00005C5C   Q 4      +
 0000002E 0000002C 00005C68   A 4      +
 0000002E 0000002B 00005C84   Q 4      +
 0000002E 0000002C 00005C90   A 4      +
 0000002E 0000002B 00005CAC   Q 4      +
 0000002E 0000002C 00005CB8   A 4      +
 0000002E 0000002B 00005CD4   Q 4      +
 0000002E 0000002C 00005CE0   A 4      +
 0000002E 0000002B 00005CFC   Q 4      +
 0000002E 0000002C 00005D08   A 4      +
 0000002E 0000002B 00005D24   Q 4      +
 0000002E 0000002C 00005D30   A 4      +
 0000002E 0000002B 00005D4C   Q 4      +
 0000002E 0000002C 00005D58   A 4      +
 0000002E 0000002B 00005D74   Q 4      +
 0000002E 0000002C 00005D80   A 4      +
 0000002E 0000002B 00005D9C   Q 4      +
 0000002E 0000002C 00005DA8   A 4      +
 0000002E 0000002B 00005DC4   Q 4      +
 0000002E 0000002C 00005DD0   A 4      +
 0000002E 0000002B 00005DEC   Q 4      +
 0000002E 0000002C 00005DF8   A 4      +
 0000002E 0000002B 00005E14   Q 4      +
 0000002E 0000002C 00005E20   A 4      +
 0000002E 0000002B 00005E3C   Q 4      +
 0000002E 0000002C 00005E48   A 4      +
 0000002E 0000002B 00005E64   Q 4      +
 0000002E 0000002C 00005E70   A 4      +
 0000002E 0000002B 00005E8C   Q 4      +
 0000002E 0000002C 00005E98   A 4      +
 0000002E 0000002B 00005EB4   Q 4      +
 0000002E 0000002C 00005EC0   A 4      +
 0000002E 0000002B 00005EDC   Q 4      +
 0000002E 0000002C 00005EE8   A 4      +
 0000002E 0000002B 00005F04   Q 4      +
 0000002E 0000002C 00005F10   A 4      +
 0000002E 0000002B 00005F2C   Q 4      +
 0000002E 0000002C 00005F38   A 4      +
                                                 Relocation Dictionary                                                     Page  168 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 0000002E 0000002B 00005F54   Q 4      +
 0000002E 0000002C 00005F60   A 4      +
 0000002E 0000002B 00005F7C   Q 4      +
 0000002E 0000002C 00005F88   A 4      +
 0000002E 0000002B 00005FA4   Q 4      +
 0000002E 0000002C 00005FB0   A 4      +
 0000002E 0000002B 00005FCC   Q 4      +
 0000002E 0000002C 00005FD8   A 4      +
 0000002E 0000002B 00005FF4   Q 4      +
 0000002E 0000002C 00006000   A 4      +
 0000002E 0000002B 0000601C   Q 4      +
 0000002E 0000002C 00006028   A 4      +
 0000002E 0000002B 00006044   Q 4      +
 0000002E 0000002C 00006050   A 4      +
 0000002E 0000002B 0000606C   Q 4      +
 0000002E 0000002C 00006078   A 4      +
 0000002E 0000002B 00006094   Q 4      +
 0000002E 0000002C 000060A0   A 4      +
 0000002E 0000002B 000060BC   Q 4      +
 0000002E 0000002C 000060C8   A 4      +
 0000002E 0000002B 000060E4   Q 4      +
 0000002E 0000002C 000060F0   A 4      +
 0000002E 0000002B 0000610C   Q 4      +
 0000002E 0000002C 00006118   A 4      +
 0000002E 0000002B 00006134   Q 4      +
 0000002E 0000002C 00006140   A 4      +
 0000002E 0000002B 0000615C   Q 4      +
 0000002E 0000002C 00006168   A 4      +
 0000002E 0000002B 00006184   Q 4      +
 0000002E 0000002C 00006190   A 4      +
 0000002E 0000002B 000061AC   Q 4      +
 0000002E 0000002C 000061B8   A 4      +
 0000002E 0000002B 000061D4   Q 4      +
 0000002E 0000002C 000061E0   A 4      +
 0000002E 0000002B 000061FC   Q 4      +
 0000002E 0000002C 00006208   A 4      +
 0000002E 0000002B 00006224   Q 4      +
 0000002E 0000002C 00006230   A 4      +
 0000002E 0000002B 0000624C   Q 4      +
 0000002E 0000002C 00006258   A 4      +
 0000002E 0000002B 00006274   Q 4      +
 0000002E 0000002C 00006280   A 4      +
 0000002E 0000002B 0000629C   Q 4      +
 0000002E 0000002C 000062A8   A 4      +
 0000002E 0000002B 000062C4   Q 4      +
 0000002E 0000002C 000062D0   A 4      +
 0000002E 0000002B 000062EC   Q 4      +
 0000002E 0000002C 000062F8   A 4      +
 0000002E 0000002B 00006314   Q 4      +
 0000002E 0000002C 00006320   A 4      +
                                                 DSECT Cross Reference                                                     Page  169 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFE  00340
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFF  00218
@AUTO#rd_atomic64_add
         000000B0  FFFFFFFD  00467
@AUTO#rd_buf_write_pos
         000000A8  FFFFFFF8  01067
@AUTO#rd_calloc
         000000A8  FFFFFFFB  00733
@AUTO#rd_fd_set_nonblocking
         000000AC  FFFFFFFC  00604
@AUTO#rd_free
         000000A8  FFFFFFFA  00836
@AUTO#rd_kafka_$Api$Key2str
         000000A8  FFFFFFF5  01457
@AUTO#rd_kafka_transport_close
         000000A8  FFFFFFF2  01863
@AUTO#rd_kafka_transport_close0
         000000A8  FFFFFFF3  01706
@AUTO#rd_kafka_transport_connect
         000001A8  FFFFFFE2  06270
@AUTO#rd_kafka_transport_connect_done
         000000A8  FFFFFFED  02725
@AUTO#rd_kafka_transport_connected
         000001A8  FFFFFFE7  04505
@AUTO#rd_kafka_transport_framed_recv
         000002B0  FFFFFFE9  03659
@AUTO#rd_kafka_transport_get_socket_error
         000001AC  FFFFFFE6  04720
@AUTO#rd_kafka_transport_init
         000000A8  FFFFFFDE  06673
@AUTO#rd_kafka_transport_io_event
         000002AC  FFFFFFE5  05111
@AUTO#rd_kafka_transport_io_serve
         000000AC  FFFFFFE4  05320
@AUTO#rd_kafka_transport_new
         000001AC  FFFFFFE3  05690
@AUTO#rd_kafka_transport_poll
         000004A8  FFFFFFDF  06595
@AUTO#rd_kafka_transport_poll_clear
         000000A8  FFFFFFE0  06431
@AUTO#rd_kafka_transport_poll_set
         000000A8  FFFFFFE1  06353
@AUTO#rd_kafka_transport_post_connect_setup
         000001B0  FFFFFFE8  04297
@AUTO#rd_kafka_transport_recv
         000000B0  FFFFFFEB  02961
@AUTO#rd_kafka_transport_request_sent
         000000A8  FFFFFFEA  03097
@AUTO#rd_kafka_transport_send
         000000B0  FFFFFFEC  02842
@AUTO#rd_kafka_transport_socket_recv
                                                 DSECT Cross Reference                                                     Page  170 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
         000000A8  FFFFFFEE  02608
@AUTO#rd_kafka_transport_socket_recv0
         000000B0  FFFFFFEF  02490
@AUTO#rd_kafka_transport_socket_send
         000000A8  FFFFFFF0  02241
@AUTO#rd_kafka_transport_socket_send0
         000000B0  FFFFFFF1  02121
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF9  00972
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFF7  01153
@AUTO#rd_slice_offset
         000000A8  FFFFFFF6  01243
@AUTO#rd_strlcpy
         000000B0  FFFFFFF4  01581
                                          Macro and Copy Code Source Summary                                               Page  171 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:36 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  172 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   155  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000E0    180 @REGION_1060_1,12
   213  00000148  00000002 DROP                                           12              12
   282  000001E6  00000002 USING  ORDINARY    000001A8 00001000 00000002  12 000D0    302 @REGION_1061_1,12
   335  00000280  00000002 DROP                                           12              12
   404  0000031E  00000002 USING  ORDINARY    000002E0 00001000 00000002  12 000E8    429 @REGION_1064_1,12
   462  000003D0  00000002 DROP                                           12              12
   531  00000476  00000002 USING  ORDINARY    00000438 00001000 00000002  12 000D4    570 @REGION_1070_1,12
   599  00000554  00000002 DROP                                           12              12
   668  000005EE  00000002 USING  ORDINARY    000005B0 00001000 00000002  12 00110    695 @REGION_1077_1,12
   728  000006C8  00000002 DROP                                           12              12
   796  0000075E  00000002 USING  ORDINARY    00000720 00001000 00000002  12 000A8    803 @REGION_1080_1,12
   831  000007D0  00000002 DROP                                           12              12
   899  0000086E  00000002 USING  ORDINARY    00000830 00001000 00000002  12 00118    933 @REGION_1084_1,12
   967  00000950  00000002 DROP                                           12              12
  1025  000009BA  00000002 USING  ORDINARY    000009B0 00001000 00000002  12 00036   1040 @REGION_1266_1,12
  1062  000009F4  00000002 DROP                                           12              12
  1119  00000A62  00000002 USING  ORDINARY    00000A58 00001000 00000002  12 0003A   1128 @REGION_1286_1,12
  1148  00000AA0  00000002 DROP                                           12              12
  1205  00000B0A  00000002 USING  ORDINARY    00000B00 00001000 00000002  12 0004A   1216 @REGION_1287_1,12
  1238  00000B58  00000002 DROP                                           12              12
  1306  00000BF6  00000002 USING  ORDINARY    00000BB8 00001000 00000002  12 000F2   1418 @REGION_1314_1,12
  1452  00000CF2  00000002 DROP                                           12              12
  1509  00000D5A  00000002 USING  ORDINARY    00000D50 00001000 00000002  12 000A6   1555 @REGION_1384_1,12
  1576  00000E04  00000002 DROP                                           12              12
  1647  00000EAE  00000002 USING  ORDINARY    00000E70 00001000 00000002  12 000A0   1675 @REGION_1947_1,12
  1701  00000F58  00000002 DROP                                           12              12
  1771  00000FFE  00000002 USING  ORDINARY    00000FC0 00001000 00000002  12 00138   1827 @REGION_1585_1,12
  1858  00001100  00000002 DROP                                           12              12
  1926  000011AE  00000002 USING  ORDINARY    00001170 00001000 00000002  12 0021E   2090 @REGION_1949_1,12
  2116  000013D6  00000002 DROP                                           12              12
  2191  00001486  00000002 USING  ORDINARY    00001448 00001000 00000002  12 000D0   2209 @REGION_1950_1,12
  2236  00001520  00000002 DROP                                           12              12
  2304  000015CE  00000002 USING  ORDINARY    00001590 00001000 00000002  12 001F4   2460 @REGION_1952_1,12
  2485  000017CC  00000002 DROP                                           12              12
  2558  00001876  00000002 USING  ORDINARY    00001838 00001000 00000002  12 000D0   2576 @REGION_1953_1,12
  2603  00001910  00000002 DROP                                           12              12
  2673  000019BE  00000002 USING  ORDINARY    00001980 00001000 00000002  12 000D8   2691 @REGION_1583_1,12
  2720  00001A5C  00000002 DROP                                           12              12
  2790  00001AFE  00000002 USING  ORDINARY    00001AC0 00001000 00000002  12 000D0   2808 @REGION_1577_1,12
  2837  00001B98  00000002 DROP                                           12              12
  2908  00001C3E  00000002 USING  ORDINARY    00001C00 00001000 00000002  12 000D0   2927 @REGION_1578_1,12
  2956  00001CD8  00000002 DROP                                           12              12
  3027  00001D86  00000002 USING  ORDINARY    00001D48 00001000 00000002  12 00118   3064 @REGION_1579_1,12
  3092  00001E68  00000002 DROP                                           12              12
  3162  00001F16  00000002 USING  ORDINARY    00001ED8 00001000 00000002  12 005E6   3626 @REGION_1580_1,12
  3654  00002506  00000002 DROP                                           12              12
  3740  000025B6  00000002 USING  ORDINARY    00002578 00001000 00000002  12 006FE   4259 @REGION_1584_1,12
  4291  00002CBE  00000002 DROP                                           12              12
  4372  00002D66  00000002 USING  ORDINARY    00002D28 00001000 00000002  12 001E8   4465 @REGION_1954_1,12
  4500  00002F18  00000002 DROP                                           12              12
  4570  00002FC6  00000002 USING  ORDINARY    00002F88 00001000 00000002  12 001F4   4677 @REGION_1955_1,12
                                                      Using Map                                                            Page  173 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  4714  000031C4  00000002 DROP                                           12              12
  4785  0000326E  00000002 USING  ORDINARY    00003230 00001000 00000002  12 003A8   5068 @REGION_1956_1,12
  5106  00003620  00000002 DROP                                           12              12
  5178  000036C6  00000002 USING  ORDINARY    00003688 00001000 00000002  12 00172   5285 @REGION_1576_1,12
  5315  00003842  00000002 DROP                                           12              12
  5388  000038E6  00000002 USING  ORDINARY    000038A8 00001000 00000002  12 003B2   5654 @REGION_1581_1,12
  5685  00003CA2  00000002 DROP                                           12              12
  5762  00003D4E  00000002 USING  ORDINARY    00003D10 00001000 00000002  12 0060E   6237 @REGION_1582_1,12
  6265  00004366  00000002 DROP                                           12              12
  6496  00004536  00000002 USING  ORDINARY    000044F8 00001000 00000002  12 00102   6563 @REGION_1588_1,12
  6590  00004642  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  174 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_TRANSPORT ..\asg\asm\rdkafka_transport.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.36.16 Stop Time: 15.36.16 Processor Time: 00.00.00.0570
Return Code 000
